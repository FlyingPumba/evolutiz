calculator.Calculator -> calculator.Calculator:
    org.javia.arity.Symbols symbols -> a
    android.widget.TextView result -> b
    android.widget.EditText input -> c
    android.widget.ListView historyView -> d
    calculator.GraphView graphView -> e
    calculator.History history -> f
    calculator.HistoryAdapter adapter -> g
    calculator.Defs defs -> h
    int nDigits -> i
    boolean pendingClearResult -> j
    java.lang.String[] builtins -> k
    boolean isAlphaVisible -> l
    calculator.KeyboardView alpha -> m
    calculator.KeyboardView digits -> n
    char[][] ALPHA -> o
    char[][] DIGITS -> p
    char[][] DIGITS2 -> q
    android.os.Handler handler -> r
    java.lang.StringBuilder oneChar -> s
    android.view.KeyEvent KEY_DEL -> t
    84:86:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    89:122:void internalConfigChange(android.content.res.Configuration) -> a
    126:156:void onCreate(android.os.Bundle) -> onCreate
    159:163:void onPause() -> onPause
    166:169:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    173:205:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    210:212:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    216:225:void afterTextChanged(android.text.Editable) -> afterTextChanged
    228:228:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    231:231:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    236:263:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    279:281:void log(java.lang.String) -> a
    284:295:void evaluate() -> a
    298:302:java.lang.String formatEval(org.javia.arity.Complex) -> a
    307:314:java.lang.String evaluate(java.lang.String) -> b
    325:327:void updateAlpha() -> b
    331:343:void onKey(char) -> a
    350:364:void showGraph(org.javia.arity.Function) -> a
    367:392:void onEnter(java.lang.String) -> c
    395:405:void changeInput(java.lang.String) -> d
    419:423:void onUp() -> c
    437:438:void doEnter() -> d
calculator.Calculator$1 -> calculator.e:
    calculator.Calculator this$0 -> a
    269:274:void handleMessage(android.os.Message) -> handleMessage
calculator.CalculatorEditable -> calculator.b:
    boolean isRec -> a
    23:31:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    37:37:boolean isOperator(char) -> a
    8:8:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
calculator.CalculatorEditable$Factory -> calculator.h:
    11:11:android.text.Editable newEditable(java.lang.CharSequence) -> newEditable
calculator.Data -> calculator.j:
    float[] xs -> a
    float[] ys -> b
    int size -> c
    int allocSize -> d
    12:25:void push(float,float) -> a
    28:28:float topX() -> a
    32:32:float topY() -> b
calculator.Defs -> calculator.c:
    java.util.ArrayList lines -> a
    org.javia.arity.Symbols symbols -> b
    22:32:void doRead(java.io.DataInputStream) -> a
    35:39:void doWrite(java.io.DataOutputStream) -> a
calculator.FileHandler -> calculator.d:
    java.lang.String fileName -> a
    android.content.Context context -> b
    int version -> c
    15:17:java.io.DataInputStream openInput() -> c
    33:43:void load() -> a
    49:54:void save() -> b
    void doRead(java.io.DataInputStream) -> a
    void doWrite(java.io.DataOutputStream) -> a
calculator.GraphView -> calculator.GraphView:
    int width -> a
    int height -> b
    android.graphics.Matrix matrix -> c
    android.graphics.Paint paint -> d
    android.graphics.Paint textPaint -> e
    org.javia.arity.Function function -> f
    calculator.Data next -> g
    calculator.Data graph -> h
    boolean invalidated -> i
    android.graphics.Bitmap bitmap -> j
    53:55:void setFunction(org.javia.arity.Function) -> a
    58:62:void onSizeChanged(int,int,int,int) -> onSizeChanged
    65:73:void draw(android.graphics.Canvas) -> draw
    80:87:float eval(float) -> a
    150:170:android.graphics.Path graphToPath(calculator.Data) -> a
calculator.Help -> calculator.Help:
    9:13:void onCreate(android.os.Bundle) -> onCreate
calculator.History -> calculator.i:
    java.util.ArrayList entries -> a
    int pos -> b
    calculator.HistoryEntry aboveTop -> c
    30:36:void doRead(java.io.DataInputStream) -> a
    39:44:void doWrite(java.io.DataOutputStream) -> a
    47:50:calculator.HistoryEntry currentEntry() -> d
    59:78:boolean onEnter(java.lang.String,java.lang.String) -> a
    82:84:void moveToPos(int,java.lang.String) -> a
    87:92:boolean moveUp(java.lang.String) -> a
    96:101:boolean moveDown(java.lang.String) -> b
    105:105:java.lang.String getText() -> c
calculator.HistoryAdapter -> calculator.f:
    android.view.LayoutInflater inflater -> a
    calculator.History history -> b
    31:31:int getCount() -> getCount
    35:35:java.lang.Object getItem(int) -> getItem
    39:39:long getItemId(int) -> getItemId
    43:58:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
calculator.HistoryAdapter$TagData -> calculator.g:
    android.widget.TextView input -> a
    android.widget.TextView result -> b
    android.widget.TextView separator -> c
calculator.HistoryEntry -> calculator.a:
    java.lang.String line -> a
    java.lang.String editLine -> b
    java.lang.String result -> c
    26:29:void save(java.io.DataOutputStream) -> a
calculator.KeyboardView -> calculator.KeyboardView:
    char[][] keys -> a
    int nLine -> b
    int nCol -> c
    android.graphics.Paint downPaint -> d
    int width -> e
    int height -> f
    android.graphics.Bitmap bitmap -> g
    boolean isDown -> h
    float downX -> i
    float downY -> j
    int downLine -> k
    int downCol -> l
    float downCW -> m
    float downCH -> n
    float cellw -> o
    float cellh -> p
    calculator.Calculator calculator -> q
    calculator.KeyboardView aboveView -> r
    boolean isLarge -> s
    57:60:void init(char[][]) -> a
    63:64:void setAboveView(calculator.KeyboardView) -> a
    67:139:void onSizeChanged(int,int,int,int) -> onSizeChanged
    142:149:void drawDrawable(android.graphics.Canvas,int,float,float,float,float) -> a
    152:152:float getY(int) -> a
    156:156:float getX(int) -> b
    194:204:void draw(android.graphics.Canvas) -> draw
    208:242:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    246:252:void invalidateCell(int,int) -> a
calculator.ListDefs -> calculator.ListDefs:
    9:14:void onCreate(android.os.Bundle) -> onCreate
org.javia.arity.ArityException -> a.m:
org.javia.arity.BaseMath -> a.o:
org.javia.arity.ByteStack -> a.y:
    byte[] data -> a
    int size -> b
    24:25:void clear() -> a
    28:34:void push(byte) -> a
    37:38:void pop(int) -> a
    41:43:byte[] toArray() -> b
org.javia.arity.CompiledFunction -> a.a:
    java.util.Random random -> a
    double[] constsRe -> b
    double[] constsIm -> c
    org.javia.arity.Function[] funcs -> d
    byte[] code -> e
    int arity -> f
    double[] NO_ARGS -> g
    org.javia.arity.EvalContext context -> h
    org.javia.arity.Complex[] NO_ARGS_COMPLEX -> i
    55:55:int arity() -> a
    59:87:java.lang.String toString() -> toString
    91:94:void checkArity(int) -> a
    101:101:double eval() -> b
    106:108:double eval(double) -> a
    113:115:double eval(double,double) -> a
    120:122:double eval(double[]) -> a
    163:171:double eval(double[],org.javia.arity.EvalContext) -> a
    175:188:int exec(org.javia.arity.EvalContext,int,boolean) -> a
    192:307:int execWithoutCheck(org.javia.arity.EvalContext,int) -> a
    314:314:org.javia.arity.Complex evalComplex() -> c
    319:321:org.javia.arity.Complex eval(org.javia.arity.Complex) -> a
    326:328:org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.Complex) -> a
    333:335:org.javia.arity.Complex eval(org.javia.arity.Complex[]) -> a
    352:359:org.javia.arity.Complex eval(org.javia.arity.Complex[],org.javia.arity.EvalContext) -> a
    363:495:int execWithoutCheckComplex(org.javia.arity.EvalContext,int,int) -> a
org.javia.arity.Compiler -> a.t:
    org.javia.arity.SyntaxException exception -> a
    org.javia.arity.Lexer lexer -> b
    org.javia.arity.RPN rpn -> c
    org.javia.arity.DeclarationParser declParser -> d
    org.javia.arity.OptCodeGen codeGen -> e
    org.javia.arity.SimpleCodeGen simpleCodeGen -> f
    org.javia.arity.Declaration decl -> g
    38:67:org.javia.arity.Function compile(org.javia.arity.Symbols,java.lang.String) -> a
    72:72:org.javia.arity.FunctionAndName compileWithName(org.javia.arity.Symbols,java.lang.String) -> b
org.javia.arity.Complex -> a.r:
    double re -> a
    double im -> b
    49:51:org.javia.arity.Complex set(double,double) -> a
    56:58:org.javia.arity.Complex set(org.javia.arity.Complex) -> a
    63:63:java.lang.String toString() -> toString
    69:69:double asReal() -> a
    82:82:org.javia.arity.Complex negate() -> b
    88:88:boolean isInfinite() -> c
    101:101:boolean isNaN() -> d
    118:125:double abs() -> e
    132:132:double abs2() -> f
    161:211:org.javia.arity.Complex mul(org.javia.arity.Complex) -> b
    217:241:org.javia.arity.Complex div(org.javia.arity.Complex) -> c
    248:262:org.javia.arity.Complex sqrt() -> g
    268:273:org.javia.arity.Complex mod(org.javia.arity.Complex) -> d
    306:310:org.javia.arity.Complex log() -> h
    316:320:org.javia.arity.Complex exp() -> i
    333:354:org.javia.arity.Complex pow(org.javia.arity.Complex) -> e
    360:385:org.javia.arity.Complex lgamma() -> j
    396:396:org.javia.arity.Complex sin() -> k
    403:403:org.javia.arity.Complex sinh() -> l
    408:408:org.javia.arity.Complex cos() -> m
    415:415:org.javia.arity.Complex cosh() -> n
    420:426:org.javia.arity.Complex tan() -> o
    431:431:org.javia.arity.Complex tanh() -> p
    436:441:org.javia.arity.Complex asin() -> q
    446:451:org.javia.arity.Complex acos() -> r
    537:537:org.javia.arity.Complex swap() -> s
    546:551:org.javia.arity.Complex normalizeInfinity() -> t
    556:556:org.javia.arity.Complex sqrt1z() -> u
org.javia.arity.Constant -> a.n:
    org.javia.arity.Complex value -> a
    32:32:org.javia.arity.Complex evalComplex() -> c
    40:40:double eval() -> b
    44:44:java.lang.String toString() -> toString
org.javia.arity.Declaration -> a.x:
    java.lang.String[] NO_ARGS -> e
    java.lang.String name -> a
    java.lang.String[] args -> b
    int arity -> c
    java.lang.String expression -> d
    27:49:void parse(java.lang.String,org.javia.arity.Lexer,org.javia.arity.DeclarationParser) -> a
org.javia.arity.DeclarationParser -> a.k:
    java.lang.String[] NO_ARGS -> c
    java.lang.String name -> a
    int arity -> b
    java.util.Vector args -> d
    org.javia.arity.SyntaxException exception -> e
    38:41:void start() -> a
    45:78:void push(org.javia.arity.Token) -> a
    81:86:java.lang.String[] argNames() -> b
org.javia.arity.DoubleStack -> a.c:
    double[] re -> a
    double[] im -> b
    int size -> c
    25:26:void clear() -> a
    29:41:void push(double,double) -> a
    44:48:void pop(int) -> a
    51:53:double[] getRe() -> b
    57:69:double[] getIm() -> c
org.javia.arity.EvalContext -> a.f:
    double[] stackRe -> a
    org.javia.arity.Complex[] stackComplex -> b
    int stackBase -> c
    double[] args1 -> d
    double[] args2 -> e
    org.javia.arity.Complex[] args1c -> f
    org.javia.arity.Complex[] args2c -> g
org.javia.arity.Function -> a.g:
    int cachedArity -> a
    39:51:int arity() -> a
    59:59:double eval() -> b
    66:66:double eval(double) -> a
    73:73:double eval(double,double) -> a
    83:91:double eval(double[]) -> a
    100:100:org.javia.arity.Complex evalComplex() -> c
    107:107:org.javia.arity.Complex eval(org.javia.arity.Complex) -> a
    114:114:org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.Complex) -> a
    121:136:org.javia.arity.Complex eval(org.javia.arity.Complex[]) -> a
org.javia.arity.FunctionAndName -> a.h:
    org.javia.arity.Function function -> a
    java.lang.String name -> b
    44:51:java.lang.String sizeTruncate(java.lang.String,int) -> a
    64:140:java.lang.String doubleToString(double,int) -> a
    149:149:java.lang.String doubleToString(double,int,int) -> a
    159:222:java.lang.String complexToString$4b7e7aaf(org.javia.arity.Complex,int) -> a
org.javia.arity.FunctionStack -> a.p:
    org.javia.arity.Function[] data -> a
    int size -> b
    24:25:void clear() -> a
    28:34:void push(org.javia.arity.Function) -> a
    41:43:org.javia.arity.Function[] toArray() -> b
org.javia.arity.Lexer -> a.e:
    org.javia.arity.Token TOK_ADD -> e
    org.javia.arity.Token TOK_SUB -> f
    org.javia.arity.Token TOK_MUL -> a
    org.javia.arity.Token TOK_DIV -> g
    org.javia.arity.Token TOK_MOD -> h
    org.javia.arity.Token TOK_UMIN -> b
    org.javia.arity.Token TOK_POWER -> i
    org.javia.arity.Token TOK_FACT -> j
    org.javia.arity.Token TOK_PERCENT -> k
    org.javia.arity.Token TOK_SQRT -> l
    org.javia.arity.Token TOK_LPAREN -> c
    org.javia.arity.Token TOK_RPAREN -> d
    org.javia.arity.Token TOK_COMMA -> m
    org.javia.arity.Token TOK_END -> n
    org.javia.arity.Token TOK_NUMBER -> o
    org.javia.arity.Token TOK_CONST -> p
    char[] input -> q
    int pos -> r
    org.javia.arity.SyntaxException exception -> s
    79:92:void scan(java.lang.String,org.javia.arity.TokenConsumer) -> a
    105:183:org.javia.arity.Token nextToken() -> a
org.javia.arity.MoreMath -> a.i:
    double[] GAMMA -> a
    double[] FACT -> b
    24:24:double asinh(double) -> a
    28:28:double acosh(double) -> b
    32:32:double atanh(double) -> c
    40:51:double gcd(double,double) -> a
    72:78:double lgamma(double) -> h
    110:129:double factorial(double) -> d
    133:147:double combinations(double,double) -> b
    152:165:double permutations(double,double) -> c
    175:176:boolean isPiMultiple(double) -> i
    180:180:double sin(double) -> e
    184:184:double cos(double) -> f
    188:188:double tan(double) -> g
org.javia.arity.OptCodeGen -> a.u:
    org.javia.arity.EvalContext context -> h
    int sp -> i
    org.javia.arity.Complex[] stack -> j
    double[] traceConstsRe -> k
    double[] traceConstsIm -> l
    org.javia.arity.Function[] traceFuncs -> m
    byte[] traceCode -> n
    org.javia.arity.CompiledFunction tracer -> o
    int intrinsicArity -> g
    boolean isPercent -> p
    45:49:void start() -> a
    53:120:void push(org.javia.arity.Token) -> a
org.javia.arity.RPN -> a.q:
    java.util.Stack stack -> b
    int prevTokenId -> c
    org.javia.arity.TokenConsumer consumer -> a
    org.javia.arity.SyntaxException exception -> d
    44:47:void start() -> a
    50:50:org.javia.arity.Token top() -> b
    54:61:void popHigher(int) -> a
    64:64:boolean isOperand(int) -> b
    73:161:void push(org.javia.arity.Token) -> a
org.javia.arity.SimpleCodeGen -> a.l:
    org.javia.arity.SyntaxException HAS_ARGUMENTS -> a
    org.javia.arity.ByteStack code -> b
    org.javia.arity.DoubleStack consts -> c
    org.javia.arity.FunctionStack funcs -> d
    org.javia.arity.Symbols symbols -> e
    org.javia.arity.SyntaxException exception -> f
    42:43:org.javia.arity.SimpleCodeGen setSymbols(org.javia.arity.Symbols) -> a
    48:51:void start() -> a
    55:88:void push(org.javia.arity.Token) -> a
    91:91:org.javia.arity.CompiledFunction getFun() -> b
org.javia.arity.Symbol -> a.v:
    java.lang.String name -> e
    int arity -> f
    byte op -> a
    org.javia.arity.Function fun -> b
    double valueRe -> c
    double valueIm -> d
    53:53:java.lang.String getName() -> a
    61:61:int getArity() -> b
    65:65:org.javia.arity.Symbol newEmpty(org.javia.arity.Symbol) -> a
    73:75:org.javia.arity.Symbol setKey(java.lang.String,int) -> a
    79:80:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
org.javia.arity.Symbols -> a.b:
    org.javia.arity.Symbol[] builtin -> a
    org.javia.arity.Symbol shell -> b
    org.javia.arity.Compiler compiler -> c
    java.util.Hashtable symbols -> d
    java.util.HashSet delta -> e
    java.util.Stack frames -> f
    java.lang.String[] defines -> g
    174:174:org.javia.arity.FunctionAndName compileWithName(java.lang.String) -> a
    178:178:org.javia.arity.Function compile(java.lang.String) -> b
    187:192:void define(java.lang.String,org.javia.arity.Function) -> a
    199:202:void define(org.javia.arity.FunctionAndName) -> a
    211:212:void define(java.lang.String,double) -> a
    215:216:void define(java.lang.String,org.javia.arity.Complex) -> a
    225:227:void pushFrame() -> a
    236:246:void popFrame() -> b
    253:253:org.javia.arity.Symbol[] getTopFrame() -> c
    306:309:void addArguments(java.lang.String[]) -> a
    312:319:void add(org.javia.arity.Symbol) -> a
    322:322:org.javia.arity.Symbol lookup(java.lang.String,int) -> a
org.javia.arity.SyntaxException -> a.j:
    java.lang.String expression -> a
    java.lang.String message -> c
    int position -> b
    40:40:java.lang.String toString() -> toString
    46:48:org.javia.arity.SyntaxException set(java.lang.String,int) -> a
org.javia.arity.Token -> a.w:
    int priority -> a
    int assoc -> b
    int id -> c
    byte vmop -> d
    double value -> e
    java.lang.String name -> f
    int arity -> g
    int position -> h
    61:69:java.lang.String toString() -> toString
org.javia.arity.TokenConsumer -> a.s:
    21:21:void start() -> a
    void push(org.javia.arity.Token) -> a
org.javia.arity.VM -> a.d:
    java.lang.String[] opcodeName -> a
    java.lang.String[] comment -> b
    byte[] builtinArity -> c
