Buildfile: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/build_acteve.xml

emma:

-set-mode-check:

-set-debug-files:

-check-env:
 [checkenv] Android SDK Tools Revision 23.0.2
 [checkenv] Installed at /home/vagrant/android-sdk-linux

-setup:
     [echo] Project Name: LolcatActivity
  [gettype] Project Type: Self-Tested Application

-set-debug-mode:

-debug-obfuscation-check:

-pre-build:

-build-setup:
[getbuildtools] Using latest Build Tools: 20.0.0
     [echo] Resolving Build Target for LolcatActivity...
[gettarget] Project Target:   Android 2.3.3
[gettarget] API level:        10
[gettarget] WARNING: No minSdkVersion value set. Application will install on all Android versions.
     [echo] ----------
     [echo] Creating output directories if needed...
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/rsObj
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/rsLibs
     [echo] ----------
     [echo] Resolving Dependencies for LolcatActivity...
[dependency] Library dependencies:
[dependency] No Libraries
[dependency] 
[dependency] ------------------
[dependency] API<=15: Adding annotations.jar to the classpath.
     [echo] ----------
     [echo] Building Libraries with 'instrument'...
   [subant] No sub-builds to iterate on

-code-gen:
[mergemanifest] No changes in the AndroidManifest files.
     [echo] Handling aidl files...
     [aidl] No AIDL files to compile.
     [echo] ----------
     [echo] Handling RenderScript files...
     [echo] ----------
     [echo] Handling Resources...
     [aapt] Found new input file
     [aapt] Generating resource IDs...
     [echo] ----------
     [echo] Handling BuildConfig class...
[buildconfig] No need to generate new BuildConfig.

-pre-compile:

-compile:
    [javac] Compiling 1 source file to /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/classes
     [echo] Instrumenting classes from /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/classes...

-post-compile:
    [mkdir] Created dir: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t
      [jar] Building jar: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t/original.jar

instrument:
     [java] a3t.in.jars=/vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t/original.jar
     [java] a3t.out.jar=/vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t/instrumented.jar
     [java] a3t.lib.jars=/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar
     [java] a3t.inputmeths.file=null
     [java] a3t.modelmeths.file=null
     [java] a3t.out.dir=/vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t
     [java] a3t.sdk.dir=/home/vagrant/tools/acteve/a3t_sdk (SDK if null)
     [java] a3t.rw.kind=ID_FIELD_WRITE
     [java] a3t.whiteflds.file=null
     [java] a3t.blackflds.file=null
     [java] a3t.whitemeths.file=null
     [java] a3t.instrflds.all=false
     [java] SHAUVIK config.inJars=/vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t/original.jar
     [java] SHAUVIK config.libJars=/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _plus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _minus(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _mul(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _div(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _rem(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _neg(acteve.symbolic.integer.Expression)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_3;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_2, _sym_tmp_1;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_3 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         _sym_tmp_2 = interfaceinvoke _sym_tmp_3.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _neg()>();
     [java]         return _sym_tmp_2;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cast(acteve.symbolic.integer.Expression, int)
     [java]     {
     [java]         acteve.symbolic.integer.Algebraic _sym_tmp_4;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_3, _sym_tmp_1;
     [java]         int _sym_tmp_2;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_4 = (acteve.symbolic.integer.Algebraic) _sym_tmp_1;
     [java]         _sym_tmp_3 = interfaceinvoke _sym_tmp_4.<acteve.symbolic.integer.Algebraic: acteve.symbolic.integer.Expression _cast(int)>(_sym_tmp_2);
     [java]         return _sym_tmp_3;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, java.lang.Object, java.lang.Object)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         java.lang.Object _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: java.lang.Object;
     [java]         _sym_tmp_4 := @parameter3: java.lang.Object;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _eq(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, java.lang.Object, java.lang.Object)
     [java]     {
     [java]         acteve.symbolic.integer.Equality _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         java.lang.Object _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: java.lang.Object;
     [java]         _sym_tmp_4 := @parameter3: java.lang.Object;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Equality) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.RefConstant: acteve.symbolic.integer.RefConstant get(java.lang.Object)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Equality: acteve.symbolic.integer.Expression _ne(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpl(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float, float)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float;
     [java]         _sym_tmp_4 := @parameter3: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double, double)
     [java]     {
     [java]         acteve.symbolic.integer.CMP _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double;
     [java]         _sym_tmp_4 := @parameter3: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.CMP) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.CMP: acteve.symbolic.integer.Expression _cmpg(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _and(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _or(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _xor(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftL(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, int)
     [java]     {
     [java]         acteve.symbolic.integer.Bitwise _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.Bitwise) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = interfaceinvoke _sym_tmp_6.<acteve.symbolic.integer.Bitwise: acteve.symbolic.integer.Expression _shiftUR(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long, long)
     [java]     {
     [java]         acteve.symbolic.integer.LongExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long;
     [java]         _sym_tmp_4 := @parameter3: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.LongExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.LongExpression: acteve.symbolic.integer.Expression _cmp(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _gt(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _lt(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _ge(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int, int)
     [java]     {
     [java]         acteve.symbolic.integer.IntegerExpression _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4, _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int;
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.integer.IntegerExpression) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.integer.IntegerExpression: acteve.symbolic.integer.Expression _le(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int[], int, int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_6, _sym_tmp_5;
     [java]         int[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: int[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.IntegerArrayConstant: acteve.symbolic.array.IntegerArrayConstant get(int[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, int[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         int[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: int[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.IntegerArrayConstant: acteve.symbolic.array.IntegerArrayConstant get(int[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, short[], int, short)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         short _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         short[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: short[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: short;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.ShortArrayConstant: acteve.symbolic.array.ShortArrayConstant get(short[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, short[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         short[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: short[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.ShortArrayConstant: acteve.symbolic.array.ShortArrayConstant get(short[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, char[], int, char)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         char _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         char[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: char[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: char;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.CharArrayConstant: acteve.symbolic.array.CharArrayConstant get(char[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, char[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         char[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: char[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.CharArrayConstant: acteve.symbolic.array.CharArrayConstant get(char[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, byte[], int, byte)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         byte _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         byte[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: byte[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: byte;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.ByteArrayConstant: acteve.symbolic.array.ByteArrayConstant get(byte[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, byte[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         byte[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: byte[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.ByteArrayConstant: acteve.symbolic.array.ByteArrayConstant get(byte[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, boolean[], int, boolean)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         boolean _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         boolean[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: boolean[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: boolean;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.BooleanArrayConstant: acteve.symbolic.array.BooleanArrayConstant get(boolean[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, boolean[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         boolean[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: boolean[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.BooleanArrayConstant: acteve.symbolic.array.BooleanArrayConstant get(boolean[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long[], int, long)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         long _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         long[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: long[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: long;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.LongArrayConstant: acteve.symbolic.array.LongArrayConstant get(long[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.LongConstant: acteve.symbolic.integer.LongConstant get(long)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, long[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         long[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: long[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.LongArrayConstant: acteve.symbolic.array.LongArrayConstant get(long[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float[], int, float)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         float _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         float[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: float[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: float;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.FloatArrayConstant: acteve.symbolic.array.FloatArrayConstant get(float[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.FloatConstant: acteve.symbolic.integer.FloatConstant get(float)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, float[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         float[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: float[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.FloatArrayConstant: acteve.symbolic.array.FloatArrayConstant get(float[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double[], int, double)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_8;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_7, _sym_tmp_3, _sym_tmp_2, _sym_tmp_1;
     [java]         double _sym_tmp_6;
     [java]         int _sym_tmp_5;
     [java]         double[] _sym_tmp_4;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_4 := @parameter3: double[];
     [java]         _sym_tmp_5 := @parameter4: int;
     [java]         _sym_tmp_6 := @parameter5: double;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         if _sym_tmp_3 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_8 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_8 = staticinvoke <acteve.symbolic.array.DoubleArrayConstant: acteve.symbolic.array.DoubleArrayConstant get(double[])>(_sym_tmp_4);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_5);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         if _sym_tmp_3 != null goto label4;
     [java] 
     [java]         _sym_tmp_3 = staticinvoke <acteve.symbolic.integer.DoubleConstant: acteve.symbolic.integer.DoubleConstant get(double)>(_sym_tmp_6);
     [java] 
     [java]      label4:
     [java]         nop;
     [java]         _sym_tmp_7 = virtualinvoke _sym_tmp_8.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aset(acteve.symbolic.integer.Expression,acteve.symbolic.integer.Expression)>(_sym_tmp_2, _sym_tmp_3);
     [java]         return _sym_tmp_7;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression, acteve.symbolic.integer.Expression, double[], int)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_6;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_5, _sym_tmp_2, _sym_tmp_1;
     [java]         int _sym_tmp_4;
     [java]         double[] _sym_tmp_3;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_2 := @parameter1: acteve.symbolic.integer.Expression;
     [java]         _sym_tmp_3 := @parameter2: double[];
     [java]         _sym_tmp_4 := @parameter3: int;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         if _sym_tmp_2 != null goto label1;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_6 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         goto label2;
     [java] 
     [java]      label1:
     [java]         _sym_tmp_6 = staticinvoke <acteve.symbolic.array.DoubleArrayConstant: acteve.symbolic.array.DoubleArrayConstant get(double[])>(_sym_tmp_3);
     [java] 
     [java]      label2:
     [java]         nop;
     [java]         if _sym_tmp_2 != null goto label3;
     [java] 
     [java]         _sym_tmp_2 = staticinvoke <acteve.symbolic.integer.IntegerConstant: acteve.symbolic.integer.IntegerConstant get(int)>(_sym_tmp_4);
     [java] 
     [java]      label3:
     [java]         nop;
     [java]         _sym_tmp_5 = virtualinvoke _sym_tmp_6.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _aget(acteve.symbolic.integer.Expression)>(_sym_tmp_2);
     [java]         return _sym_tmp_5;
     [java]     }
     [java]     public static final acteve.symbolic.integer.Expression _alen(acteve.symbolic.integer.Expression)
     [java]     {
     [java]         acteve.symbolic.array.Array _sym_tmp_3;
     [java]         acteve.symbolic.integer.Expression _sym_tmp_2, _sym_tmp_1;
     [java] 
     [java]         _sym_tmp_1 := @parameter0: acteve.symbolic.integer.Expression;
     [java]         if _sym_tmp_1 != null goto label0;
     [java] 
     [java]         return null;
     [java] 
     [java]      label0:
     [java]         _sym_tmp_3 = (acteve.symbolic.array.Array) _sym_tmp_1;
     [java]         _sym_tmp_2 = virtualinvoke _sym_tmp_3.<acteve.symbolic.array.Array: acteve.symbolic.integer.Expression _alen()>();
     [java]         return _sym_tmp_2;
     [java]     }
     [java] SHAUVIK: Soot args-w -p cg off -keep-line-number -keep-bytecode-offset -dynamic-class acteve.symbolic.Util -soot-classpath /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t/original.jar:/home/vagrant/tools/acteve/jars/a3t_symbolic.jar:/home/vagrant/tools/acteve/jars/a3t_models.jar:/home/vagrant/android-sdk-linux/platforms/android-10/android.jar:/home/vagrant/tools/acteve/a3t_sdk/instrumentedframework.jar:/home/vagrant/tools/acteve/jars/a3t_stubs.jar:/home/vagrant/tools/acteve/jars/emma.jar -dynamic-package acteve.symbolic.integer. -dynamic-package models. -outjar -d /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t/instrumented.jar -O -validate acteve.symbolic.DummyMain
     [java] Soot started on Sun Nov 09 06:23:54 UTC 2014
     [java] com.android.lolcat.BuildConfig
     [java] com.android.lolcat.EmmaInstrument.EmmaInstrumentation
     [java] com.android.lolcat.EmmaInstrument.FinishListener
     [java] com.android.lolcat.EmmaInstrument.InstrumentedActivity$CoverageCollector
     [java] com.android.lolcat.EmmaInstrument.InstrumentedActivity
     [java] com.android.lolcat.EmmaInstrument.SMSInstrumentedReceiver
     [java] com.android.lolcat.LolcatActivity$1
     [java] com.android.lolcat.LolcatActivity$2
     [java] com.android.lolcat.LolcatActivity$3
     [java] com.android.lolcat.LolcatActivity$4
     [java] com.android.lolcat.LolcatActivity$5
     [java] com.android.lolcat.LolcatActivity$6
     [java] com.android.lolcat.LolcatActivity$7$1
     [java] com.android.lolcat.LolcatActivity$7$2
     [java] com.android.lolcat.LolcatActivity$7
     [java] com.android.lolcat.LolcatActivity
     [java] com.android.lolcat.LolcatView$Caption
     [java] com.android.lolcat.LolcatView
     [java] com.android.lolcat.R$attr
     [java] com.android.lolcat.R$drawable
     [java] com.android.lolcat.R$id
     [java] com.android.lolcat.R$layout
     [java] com.android.lolcat.R$string
     [java] com.android.lolcat.R
     [java] Instrumenting <com.android.lolcat.BuildConfig: void <init>()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void <init>()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void onStart()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void onActivityFinished()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void dumpIntermediateCoverage(java.lang.String)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity$CoverageCollector: void <init>(com.android.lolcat.EmmaInstrument.InstrumentedActivity)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity$CoverageCollector: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity$CoverageCollector: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity: void <init>()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity: void setFinishListener(com.android.lolcat.EmmaInstrument.FinishListener)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity: void finish()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity: com.android.lolcat.EmmaInstrument.FinishListener access$000(com.android.lolcat.EmmaInstrument.InstrumentedActivity)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.SMSInstrumentedReceiver: void <init>()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.SMSInstrumentedReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.SMSInstrumentedReceiver: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$1: void <init>(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$1: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$1: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$1: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$2: void <init>(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$2: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$2: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$2: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$3: void <init>(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$3: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$3: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$3: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$4: void <init>(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$4: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$4: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$4: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$5: void <init>(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$5: void onClick(android.content.DialogInterface,int)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$5: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$5: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$6: void <init>(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$6: void run()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$6: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$6: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7$1: void <init>(com.android.lolcat.LolcatActivity$7)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7$1: void run()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7$1: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7$1: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7$2: void <init>(com.android.lolcat.LolcatActivity$7,java.lang.String,android.net.Uri)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7$2: void run()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7$2: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7$2: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7: void <init>(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7: void onMediaScannerConnected()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7: void onScanCompleted(java.lang.String,android.net.Uri)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity$7: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void <init>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onCreate(android.os.Bundle)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onResume()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onSaveInstanceState(android.os.Bundle)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void restoreStateFromIcicle(android.os.Bundle)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onDestroy()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onClick(android.view.View)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onActivityResult(int,int,android.content.Intent)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void updateButtons()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void clearCaptions()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void clearPhoto()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void loadPhoto(android.net.Uri)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void showCaptionDialog()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void showSaveSuccessDialog()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void updateSaveSuccessDialogBody()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: android.app.Dialog onCreateDialog(int)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void updateCaptionsFromDialog()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void saveImage()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void saveImageInternal()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onMediaScannerConnected()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onScanCompleted(java.lang.String,android.net.Uri)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: boolean ensureFileExists(java.lang.String)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void onSaveFailed(int)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void viewSavedImage(android.net.Uri)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void viewSavedImage()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void shareSavedImage(android.net.Uri)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void shareSavedImage()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void access$000(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void access$100(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void access$200(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void access$300(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void access$400(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: android.os.Handler access$500(com.android.lolcat.LolcatActivity)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void access$600(com.android.lolcat.LolcatActivity,java.lang.String,android.net.Uri)>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatActivity: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatView$Caption: void <init>(com.android.lolcat.LolcatView)>
     [java] Instrumenting <com.android.lolcat.LolcatView$Caption: void setPosition(int,int)>
     [java] Instrumenting <com.android.lolcat.LolcatView$Caption: java.lang.String toString()>
     [java] Instrumenting <com.android.lolcat.LolcatView$Caption: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatView$Caption: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.LolcatView: void <init>(android.content.Context)>
     [java] Instrumenting <com.android.lolcat.LolcatView: void <init>(android.content.Context,android.util.AttributeSet)>
     [java] Instrumenting <com.android.lolcat.LolcatView: void <init>(android.content.Context,android.util.AttributeSet,int)>
     [java] Instrumenting <com.android.lolcat.LolcatView: android.graphics.Bitmap getWorkingBitmap()>
     [java] Instrumenting <com.android.lolcat.LolcatView: java.lang.String getTopCaption()>
     [java] Instrumenting <com.android.lolcat.LolcatView: java.lang.String getBottomCaption()>
     [java] Instrumenting <com.android.lolcat.LolcatView: boolean hasValidCaption()>
     [java] Instrumenting <com.android.lolcat.LolcatView: void clear()>
     [java] Instrumenting <com.android.lolcat.LolcatView: void loadFromUri(android.net.Uri)>
     [java] Instrumenting <com.android.lolcat.LolcatView: void setCaptions(java.lang.String,java.lang.String)>
     [java] Instrumenting <com.android.lolcat.LolcatView: void clearCaptions()>
     [java] Instrumenting <com.android.lolcat.LolcatView: void renderCaptions(com.android.lolcat.LolcatView$Caption[])>
     [java] Instrumenting <com.android.lolcat.LolcatView: void onDraw(android.graphics.Canvas)>
     [java] Instrumenting <com.android.lolcat.LolcatView: boolean onTouchEvent(android.view.MotionEvent)>
     [java] Instrumenting <com.android.lolcat.LolcatView: int[] getCaptionPositions()>
     [java] Instrumenting <com.android.lolcat.LolcatView: void setCaptionPositions(int[])>
     [java] Instrumenting <com.android.lolcat.LolcatView: void <clinit>()>
     [java] Instrumenting <com.android.lolcat.LolcatView: boolean[][] $VRi()>
     [java] Instrumenting <com.android.lolcat.R$attr: void <init>()>
     [java] Instrumenting <com.android.lolcat.R$drawable: void <init>()>
     [java] Instrumenting <com.android.lolcat.R$id: void <init>()>
     [java] Instrumenting <com.android.lolcat.R$layout: void <init>()>
     [java] Instrumenting <com.android.lolcat.R$string: void <init>()>
     [java] Instrumenting <com.android.lolcat.R: void <init>()>
     [java] Transforming acteve.symbolic.SymbolicOperations... 
     [java] Transforming com.android.lolcat.BuildConfig... 
     [java] Transforming com.android.lolcat.EmmaInstrument.EmmaInstrumentation... 
     [java] Transforming com.android.lolcat.EmmaInstrument.FinishListener... 
     [java] Transforming com.android.lolcat.EmmaInstrument.InstrumentedActivity$CoverageCollector... 
     [java] Transforming com.android.lolcat.EmmaInstrument.InstrumentedActivity... 
     [java] Transforming com.android.lolcat.EmmaInstrument.SMSInstrumentedReceiver... 
     [java] Transforming com.android.lolcat.LolcatActivity$1... 
     [java] Transforming com.android.lolcat.LolcatActivity$2... 
     [java] Transforming com.android.lolcat.LolcatActivity$3... 
     [java] Transforming com.android.lolcat.LolcatActivity$4... 
     [java] Transforming com.android.lolcat.LolcatActivity$5... 
     [java] Transforming com.android.lolcat.LolcatActivity$6... 
     [java] Transforming com.android.lolcat.LolcatActivity$7$1... 
     [java] Transforming com.android.lolcat.LolcatActivity$7$2... 
     [java] Transforming com.android.lolcat.LolcatActivity$7... 
     [java] Transforming com.android.lolcat.LolcatActivity... 
     [java] Transforming com.android.lolcat.LolcatView$Caption... 
     [java] Transforming com.android.lolcat.LolcatView... 
     [java] Transforming com.android.lolcat.R$attr... 
     [java] Transforming com.android.lolcat.R$drawable... 
     [java] Transforming com.android.lolcat.R$id... 
     [java] Transforming com.android.lolcat.R$layout... 
     [java] Transforming com.android.lolcat.R$string... 
     [java] Transforming com.android.lolcat.R... 
     [java] Writing to acteve/symbolic/SymbolicOperations.class
     [java] Writing to com/android/lolcat/BuildConfig.class
     [java] Writing to com/android/lolcat/EmmaInstrument/EmmaInstrumentation.class
     [java] Writing to com/android/lolcat/EmmaInstrument/FinishListener.class
     [java] Writing to com/android/lolcat/EmmaInstrument/InstrumentedActivity$CoverageCollector.class
     [java] Writing to com/android/lolcat/EmmaInstrument/InstrumentedActivity.class
     [java] Writing to com/android/lolcat/EmmaInstrument/SMSInstrumentedReceiver.class
     [java] Writing to com/android/lolcat/LolcatActivity$1.class
     [java] Writing to com/android/lolcat/LolcatActivity$2.class
     [java] Writing to com/android/lolcat/LolcatActivity$3.class
     [java] Writing to com/android/lolcat/LolcatActivity$4.class
     [java] Writing to com/android/lolcat/LolcatActivity$5.class
     [java] Writing to com/android/lolcat/LolcatActivity$6.class
     [java] Writing to com/android/lolcat/LolcatActivity$7$1.class
     [java] Writing to com/android/lolcat/LolcatActivity$7$2.class
     [java] Writing to com/android/lolcat/LolcatActivity$7.class
     [java] Writing to com/android/lolcat/LolcatActivity.class
     [java] Writing to com/android/lolcat/LolcatView$Caption.class
     [java] Writing to com/android/lolcat/LolcatView.class
     [java] Writing to com/android/lolcat/R$attr.class
     [java] Writing to com/android/lolcat/R$drawable.class
     [java] Writing to com/android/lolcat/R$id.class
     [java] Writing to com/android/lolcat/R$layout.class
     [java] Writing to com/android/lolcat/R$string.class
     [java] Writing to com/android/lolcat/R.class
     [java] Soot finished on Sun Nov 09 06:24:11 UTC 2014
     [java] Soot has run for 0 min. 16 sec.

-obfuscate:

-dex:
      [dex] input: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t/instrumented.jar
      [dex] input: /home/vagrant/android-sdk-linux/tools/lib/emma_device.jar
      [dex] Pre-Dexing /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/a3t/instrumented.jar -> instrumented-5bf732d46df9d37453d50f0ca1ee126b.jar
      [dex] Using Pre-Dexed emma_device-e790229f52a04d2b195df6976ccc31d7.jar <- /home/vagrant/android-sdk-linux/tools/lib/emma_device.jar
      [dex] Found new input file
      [dex] Converting compiled files and external libraries into /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/classes.dex...
       [dx] Merged dex A (25 defs/100.1KiB) with dex B (297 defs/326.8KiB). Result is 322 defs/513.7KiB. Took 1.0s

-crunch:
   [crunch] Crunching PNG Files in source dir: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/res
   [crunch] To destination dir: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/res
   [crunch] Crunched 0 PNG files to update cache

-package-resources:
     [aapt] No changed resources or assets. LolcatActivity.ap_ remains untouched

-package:
[apkbuilder] Found modified input file
[apkbuilder] Creating LolcatActivity-debug-unaligned.apk and signing it with a debug key...

-post-package:

-do-debug:
 [zipalign] Running zip align on final apk...
     [echo] Debug Package: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/LolcatActivity-debug.apk
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/build.prop
[propertyfile] Updating property file: /vagrant/subjects/tool_subjects/dynodroid/LolcatBuilder/bin/build.prop

-post-build:

debug:

BUILD SUCCESSFUL
Total time: 34 seconds
