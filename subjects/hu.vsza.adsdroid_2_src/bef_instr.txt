public class hu.vsza.adsapi.Part extends java.util.HashMap
{
    public static final java.lang.String NAME;
    public static final java.lang.String DESCRIPTION;
    public static final java.lang.String HREF;
    public static final java.lang.String UA;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.util.Map)
    {
        hu.vsza.adsapi.Part r0;
        java.util.Map r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: hu.vsza.adsapi.Part;
        r1 := @parameter0: java.util.Map;
        $r2 = <hu.vsza.adsapi.Part: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsapi.Part: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.util.HashMap: void <init>(java.util.Map)>(r1);
        r3[0] = 1;
        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        hu.vsza.adsapi.Part r0;
        java.lang.String r1, r2, r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: hu.vsza.adsapi.Part;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = <hu.vsza.adsapi.Part: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <hu.vsza.adsapi.Part: boolean[][] $VRi()>();

     label0:
        r5 = $r4[1];
        specialinvoke r0.<java.util.HashMap: void <init>(int)>(3);
        virtualinvoke r0.<hu.vsza.adsapi.Part: java.lang.Object put(java.lang.Object,java.lang.Object)>("NAME", r1);
        virtualinvoke r0.<hu.vsza.adsapi.Part: java.lang.Object put(java.lang.Object,java.lang.Object)>("DESCRIPTION", r2);
        virtualinvoke r0.<hu.vsza.adsapi.Part: java.lang.Object put(java.lang.Object,java.lang.Object)>("HREF", r3);
        r5[0] = 1;
        return;
    }

    public java.net.URLConnection getPdfConnection() throws java.io.IOException
    {
        hu.vsza.adsapi.Part r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r6, r8;
        org.jsoup.nodes.Document r4, r16;
        org.jsoup.nodes.Element r5, r7;
        java.net.URLConnection r9;
        java.lang.Object $r10;
        org.jsoup.Connection $r11, $r13, $r14, $r15;
        org.jsoup.select.Elements $r12, $r17;
        java.net.URL $r18;

        r0 := @this: hu.vsza.adsapi.Part;
        $r1 = <hu.vsza.adsapi.Part: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsapi.Part: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r10 = virtualinvoke r0.<hu.vsza.adsapi.Part: java.lang.Object get(java.lang.Object)>("HREF");
        r3 = (java.lang.String) $r10;
        $r11 = staticinvoke <org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>(r3);
        r4 = interfaceinvoke $r11.<org.jsoup.Connection: org.jsoup.nodes.Document get()>();
        $r12 = virtualinvoke r4.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("td.blue a");
        r5 = virtualinvoke $r12.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(0);
        r6 = virtualinvoke r5.<org.jsoup.nodes.Element: java.lang.String absUrl(java.lang.String)>("href");
        $r13 = staticinvoke <org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>(r6);
        $r14 = interfaceinvoke $r13.<org.jsoup.Connection: org.jsoup.Connection referrer(java.lang.String)>(r3);
        $r15 = interfaceinvoke $r14.<org.jsoup.Connection: org.jsoup.Connection userAgent(java.lang.String)>("Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1088.0 Safari/536.6");
        r16 = interfaceinvoke $r15.<org.jsoup.Connection: org.jsoup.nodes.Document get()>();
        $r17 = virtualinvoke r16.<org.jsoup.nodes.Document: org.jsoup.select.Elements getElementsByTag(java.lang.String)>("iframe");
        r7 = virtualinvoke $r17.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(0);
        r8 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String absUrl(java.lang.String)>("src");
        $r18 = new java.net.URL;
        specialinvoke $r18.<java.net.URL: void <init>(java.lang.String)>(r8);
        r9 = virtualinvoke $r18.<java.net.URL: java.net.URLConnection openConnection()>();
        virtualinvoke r9.<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Referer", r6);
        r2[0] = 1;
        return r9;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsapi.Part: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <hu.vsza.adsapi.Part: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsapi/Part", -7133697226542984265L);
        return $r0;
    }
}
public final enum class hu.vsza.adsapi.Search$Mode extends java.lang.Enum
{
    public static final enum hu.vsza.adsapi.Search$Mode INCLUDED;
    public static final enum hu.vsza.adsapi.Search$Mode START_WITH;
    public static final enum hu.vsza.adsapi.Search$Mode END;
    public static final enum hu.vsza.adsapi.Search$Mode MATCH;
    private int value;
    private static final hu.vsza.adsapi.Search$Mode[] $VALUES;
    private static final boolean[][] $VRc;

    public static hu.vsza.adsapi.Search$Mode[] values()
    {
        boolean[][] $r0;
        boolean[] r1;
        hu.vsza.adsapi.Search$Mode[] $r2, $r4;
        java.lang.Object $r3;

        $r0 = <hu.vsza.adsapi.Search$Mode: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <hu.vsza.adsapi.Search$Mode: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $r2 = <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode[] $VALUES>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (hu.vsza.adsapi.Search$Mode[]) $r3;
        r1[0] = 1;
        return $r4;
    }

    public static hu.vsza.adsapi.Search$Mode valueOf(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        hu.vsza.adsapi.Search$Mode $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <hu.vsza.adsapi.Search$Mode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsapi.Search$Mode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "hu/vsza/adsapi/Search$Mode", r0);
        $r4 = (hu.vsza.adsapi.Search$Mode) $r3;
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int, int)
    {
        hu.vsza.adsapi.Search$Mode r0;
        java.lang.String r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: hu.vsza.adsapi.Search$Mode;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <hu.vsza.adsapi.Search$Mode: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsapi.Search$Mode: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r0.<hu.vsza.adsapi.Search$Mode: int value> = i1;
        r3[0] = 1;
        return;
    }

    public int getValue()
    {
        hu.vsza.adsapi.Search$Mode r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: hu.vsza.adsapi.Search$Mode;
        $r1 = <hu.vsza.adsapi.Search$Mode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsapi.Search$Mode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<hu.vsza.adsapi.Search$Mode: int value>;
        r2[0] = 1;
        return $i0;
    }

    public java.lang.String toString()
    {
        hu.vsza.adsapi.Search$Mode r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: hu.vsza.adsapi.Search$Mode;
        $r1 = <hu.vsza.adsapi.Search$Mode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsapi.Search$Mode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = specialinvoke r0.<java.lang.Enum: java.lang.String toString()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", " ");
        r2[0] = 1;
        return $r5;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        hu.vsza.adsapi.Search$Mode $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        hu.vsza.adsapi.Search$Mode[] $r6;

        $r0 = staticinvoke <hu.vsza.adsapi.Search$Mode: boolean[][] $VRi()>();
        r1 = $r0[5];
        $r2 = new hu.vsza.adsapi.Search$Mode;
        specialinvoke $r2.<hu.vsza.adsapi.Search$Mode: void <init>(java.lang.String,int,int)>("INCLUDED", 0, 1);
        <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode INCLUDED> = $r2;
        $r3 = new hu.vsza.adsapi.Search$Mode;
        specialinvoke $r3.<hu.vsza.adsapi.Search$Mode: void <init>(java.lang.String,int,int)>("START_WITH", 1, 2);
        <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode START_WITH> = $r3;
        $r4 = new hu.vsza.adsapi.Search$Mode;
        specialinvoke $r4.<hu.vsza.adsapi.Search$Mode: void <init>(java.lang.String,int,int)>("END", 2, 3);
        <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode END> = $r4;
        $r5 = new hu.vsza.adsapi.Search$Mode;
        specialinvoke $r5.<hu.vsza.adsapi.Search$Mode: void <init>(java.lang.String,int,int)>("MATCH", 3, 4);
        <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode MATCH> = $r5;
        $r6 = newarray (hu.vsza.adsapi.Search$Mode)[4];
        $r7 = <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode INCLUDED>;
        $r6[0] = $r7;
        $r8 = <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode START_WITH>;
        $r6[1] = $r8;
        $r9 = <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode END>;
        $r6[2] = $r9;
        $r10 = <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode MATCH>;
        $r6[3] = $r10;
        <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode[] $VALUES> = $r6;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <hu.vsza.adsapi.Search$Mode: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsapi/Search$Mode", -7762944316623233993L);
        return $r0;
    }
}
public class hu.vsza.adsapi.Search extends java.lang.Object
{
    protected static final java.util.regex.Pattern jsPattern;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        hu.vsza.adsapi.Search r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: hu.vsza.adsapi.Search;
        $r1 = <hu.vsza.adsapi.Search: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsapi.Search: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static java.util.ArrayList searchByPartName(java.lang.String, hu.vsza.adsapi.Search$Mode) throws java.io.IOException
    {
        java.lang.String r0, r10, r11, r12, $r15, $r28, $r31, $r34;
        hu.vsza.adsapi.Search$Mode r1;
        boolean[][] $r2;
        boolean[] r3;
        org.jsoup.nodes.Document r4;
        org.jsoup.select.Elements r5, r9, $r23;
        java.util.ArrayList r6, $r18;
        java.util.Iterator r7;
        org.jsoup.nodes.Element r8, $r20, $r21, $r22, $r24;
        java.util.regex.Matcher r13;
        org.jsoup.Connection $r14, $r16, $r17;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Object $r19;
        org.jsoup.nodes.Attributes $r25;
        java.util.regex.Pattern $r26;
        java.lang.StringBuilder $r27, $r29, $r30, $r32, $r33, $r35, $r36;
        hu.vsza.adsapi.Part $r37;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: hu.vsza.adsapi.Search$Mode;
        $r2 = <hu.vsza.adsapi.Search: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsapi.Search: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r14 = staticinvoke <org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>("http://www.alldatasheet.com/view.jsp");
        $i0 = virtualinvoke r1.<hu.vsza.adsapi.Search$Mode: int getValue()>();
        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);
        $r16 = interfaceinvoke $r14.<org.jsoup.Connection: org.jsoup.Connection data(java.lang.String,java.lang.String)>("sField", $r15);
        $r17 = interfaceinvoke $r16.<org.jsoup.Connection: org.jsoup.Connection data(java.lang.String,java.lang.String)>("sSearchword", r0);
        r4 = interfaceinvoke $r17.<org.jsoup.Connection: org.jsoup.nodes.Document post()>();
        r5 = virtualinvoke r4.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("tr.nv_td");
        $r18 = new java.util.ArrayList;
        $i1 = virtualinvoke r5.<org.jsoup.select.Elements: int size()>();
        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i1);
        r6 = $r18;
        r7 = virtualinvoke r5.<org.jsoup.select.Elements: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label3;

        $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (org.jsoup.nodes.Element) $r19;
        r9 = virtualinvoke r8.<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByTag(java.lang.String)>("td");
        $r20 = virtualinvoke r9.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(1);
        r10 = virtualinvoke $r20.<org.jsoup.nodes.Element: java.lang.String text()>();
        $r21 = virtualinvoke r9.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(2);
        r11 = virtualinvoke $r21.<org.jsoup.nodes.Element: java.lang.String text()>();
        $r22 = virtualinvoke r9.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(3);
        $r23 = virtualinvoke $r22.<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByTag(java.lang.String)>("a");
        $r24 = virtualinvoke $r23.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(0);
        $r25 = virtualinvoke $r24.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        r12 = virtualinvoke $r25.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("href");
        $r26 = <hu.vsza.adsapi.Search: java.util.regex.Pattern jsPattern>;
        r13 = virtualinvoke $r26.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r12);
        $z1 = virtualinvoke r13.<java.util.regex.Matcher: boolean find()>();
        r3[2] = 1;
        if $z1 == 0 goto label2;

        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://www.alldatasheet.com/datasheet-pdf/pdf/");
        $r28 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);
        $r31 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(2);
        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);
        $r34 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(3);
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".html");
        r12 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[3] = 1;

     label2:
        $r37 = new hu.vsza.adsapi.Part;
        specialinvoke $r37.<hu.vsza.adsapi.Part: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r10, r11, r12);
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return r6;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.regex.Pattern $r2;

        $r0 = staticinvoke <hu.vsza.adsapi.Search: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\'([^\']+)\'[^\']*\'([^\']+)\'[^\']*\'([^\']+)\'");
        <hu.vsza.adsapi.Search: java.util.regex.Pattern jsPattern> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <hu.vsza.adsapi.Search: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsapi/Search", -3803237176363285449L);
        return $r0;
    }
}
public final class hu.vsza.adsdroid.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;

    public void <init>()
    {
        hu.vsza.adsdroid.BuildConfig r0;

        r0 := @this: hu.vsza.adsdroid.BuildConfig;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements hu.vsza.adsdroid.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        r3[0] = 1;
        if r1 == null goto label1;

        $z0 = specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        r3[1] = 1;

     label1:
        $r11 = new android.content.Intent;
        $r12 = virtualinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "hu/vsza/adsdroid/EmmaInstrument/InstrumentedActivity");
        r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        $r13 = r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        virtualinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void start()>();
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <android.os.Looper: void prepare()>();
        $r5 = r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        $r6 = virtualinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity) $r6;
        virtualinvoke r3.<hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: void setFinishListener(hu.vsza.adsdroid.EmmaInstrument.FinishListener)>(r0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        $r3 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        r4[0] = 1;
        if r5 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        r4[1] = 1;
        if $z0 == 0 goto label1;

        $z1 = 1;
        r4[2] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return $z1;
    }

    private void generateCoverageReport()
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r6 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        $r8 = specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label1:
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[2] = $r12;
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        $r13[0] = r3;
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r13[1] = $r14;
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $r13[2] = $r15;
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        r2[0] = 1;

     label2:
        goto label9;

     label3:
        $r17 := @caughtexception;
        r18 = $r17;
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        r2[1] = 1;
        goto label9;

     label4:
        $r19 := @caughtexception;
        r20 = $r19;
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        r2[2] = 1;
        goto label9;

     label5:
        $r21 := @caughtexception;
        r22 = $r21;
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        r2[3] = 1;
        goto label9;

     label6:
        $r23 := @caughtexception;
        r24 = $r23;
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        r2[4] = 1;
        goto label9;

     label7:
        $r25 := @caughtexception;
        r26 = $r25;
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        r2[5] = 1;
        goto label9;

     label8:
        $r27 := @caughtexception;
        r28 = $r27;
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        r2[6] = 1;

     label9:
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
    }

    private java.lang.String getCoverageFilePath()
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[0] = 1;
        if $r3 != null goto label1;

        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

     label1:
        $r4 = r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if $i0 <= 0 goto label1;

        r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        r3[2] = 1;
        return 1;

     label1:
        r3[3] = 1;
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        $r2 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        $r3 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        $r10 = r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0 = r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        r2[1] = 1;

     label1:
        $r4 = r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        virtualinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r4 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0 = r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        r3[1] = 1;
        if $z1 != 0 goto label1;

        $r9 = <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        r3[2] = 1;

     label1:
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        specialinvoke r0.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1 = $r0[11];
        <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  hu.vsza.adsdroid.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity)
    {
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity;
        $r2 = <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity $r10, $r18;
        hu.vsza.adsdroid.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        int $i0;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r10 = r0.<hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity this$0>;
        $r11 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: hu.vsza.adsdroid.EmmaInstrument.FinishListener access$000(hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity)>($r10);
        r4[0] = 1;
        if $r11 == null goto label2;

        r4[1] = 1;
        if r5 == null goto label2;

        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0 = lengthof r6;
        r4[2] = 1;
        if $i0 <= 0 goto label2;

        $r14 = r6[0];
        $r15 = (byte[]) $r14;
        $r16 = (byte[]) $r15;
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        r4[3] = 1;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        r4[4] = 1;
        if $z1 == 0 goto label2;

     label1:
        $r18 = r0.<hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity this$0>;
        $r19 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: hu.vsza.adsdroid.EmmaInstrument.FinishListener access$000(hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity)>($r18);
        interfaceinvoke $r19.<hu.vsza.adsdroid.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        r4[5] = 1;

     label2:
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity extends hu.vsza.adsdroid.SearchPanel
{
    public static java.lang.String TAG;
    private hu.vsza.adsdroid.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<hu.vsza.adsdroid.SearchPanel: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void setFinishListener(hu.vsza.adsdroid.EmmaInstrument.FinishListener)
    {
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity r0;
        hu.vsza.adsdroid.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: hu.vsza.adsdroid.EmmaInstrument.FinishListener;
        $r2 = <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        hu.vsza.adsdroid.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        specialinvoke r0.<hu.vsza.adsdroid.SearchPanel: void finish()>();
        $r8 = r0.<hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: hu.vsza.adsdroid.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        if $r8 == null goto label1;

        $r9 = r0.<hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: hu.vsza.adsdroid.EmmaInstrument.FinishListener mListener>;
        interfaceinvoke $r9.<hu.vsza.adsdroid.EmmaInstrument.FinishListener: void onActivityFinished()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    static hu.vsza.adsdroid.EmmaInstrument.FinishListener access$000(hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity)
    {
        hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        hu.vsza.adsdroid.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: hu.vsza.adsdroid.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1 = $r0[4];
        <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <hu.vsza.adsdroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver;
        $r1 = <hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation;
        specialinvoke $r7.<hu.vsza.adsdroid.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        r4[0] = 1;
        if r6 == null goto label1;

        interfaceinvoke r6.<hu.vsza.adsdroid.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1 = $r0[2];
        <hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <hu.vsza.adsdroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
class hu.vsza.adsdroid.PartList$1 extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.PartList$1: boolean[][] $VRi()>();
        r1 = $r0[0];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1;

        $r0 = newmultiarray (boolean)[1][];
        <hu.vsza.adsdroid.PartList$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/PartList$1", 33323L);
        return $r0;
    }
}
class hu.vsza.adsdroid.PartList$DownloadDatasheet extends android.os.AsyncTask
{
    final hu.vsza.adsdroid.PartList this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(hu.vsza.adsdroid.PartList)
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        hu.vsza.adsdroid.PartList r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: hu.vsza.adsdroid.PartList;
        $r2 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0> = r1;
        specialinvoke r0.<android.os.AsyncTask: void <init>()>();
        r3[0] = 1;
        return;
    }

    protected transient java.lang.String doInBackground(hu.vsza.adsapi.Part[])
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        hu.vsza.adsapi.Part[] r1;
        boolean[][] $r2;
        boolean[] r3;
        hu.vsza.adsapi.Part r4;
        java.lang.String r5, $r17;
        java.net.URLConnection r6;
        java.io.BufferedInputStream r7, $r10;
        java.io.FileOutputStream r8, $r12;
        byte[] r9;
        long l0, $l3;
        int i1, $i2;
        java.io.InputStream $r11;
        java.lang.String[] $r13;
        hu.vsza.adsdroid.PartList $r14;
        java.lang.Object[] $r15;
        java.lang.Long $r16;
        java.lang.Exception $r19, r20;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: hu.vsza.adsapi.Part[];
        $r2 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = r1[0];
        r5 = virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: java.lang.String fileNameForPart(hu.vsza.adsapi.Part)>(r4);

     label1:
        virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void publishProgress(int)>(2130968583);
        r6 = virtualinvoke r4.<hu.vsza.adsapi.Part: java.net.URLConnection getPdfConnection()>();
        virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void publishProgress(int)>(2130968584);
        virtualinvoke r6.<java.net.URLConnection: void connect()>();
        $r10 = new java.io.BufferedInputStream;
        $r11 = virtualinvoke r6.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r11);
        r7 = $r10;
        $r12 = new java.io.FileOutputStream;
        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.lang.String)>(r5);
        r8 = $r12;
        r9 = newarray (byte)[1024];
        l0 = 0L;
        r3[0] = 1;

     label2:
        $i2 = virtualinvoke r7.<java.io.InputStream: int read(byte[])>(r9);
        i1 = $i2;
        r3[1] = 1;
        if $i2 == -1 goto label3;

        $l3 = (long) i1;
        l0 = l0 + $l3;
        $r13 = newarray (java.lang.String)[1];
        $r14 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r15 = newarray (java.lang.Object)[1];
        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
        $r15[0] = $r16;
        $r17 = virtualinvoke $r14.<hu.vsza.adsdroid.PartList: java.lang.String getString(int,java.lang.Object[])>(2130968585, $r15);
        $r13[0] = $r17;
        virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void publishProgress(java.lang.Object[])>($r13);
        virtualinvoke r8.<java.io.OutputStream: void write(byte[],int,int)>(r9, 0, i1);
        r3[2] = 1;
        goto label2;

     label3:
        virtualinvoke r8.<java.io.OutputStream: void flush()>();
        virtualinvoke r8.<java.io.OutputStream: void close()>();
        virtualinvoke r7.<java.io.InputStream: void close()>();
        r3[3] = 1;

     label4:
        return r5;

     label5:
        $r19 := @caughtexception;
        r20 = $r19;
        r3[4] = 1;
        return null;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected void publishProgress(int)
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] $r3;
        hu.vsza.adsdroid.PartList $r4;
        java.lang.String $r5;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        i0 := @parameter0: int;
        $r1 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = newarray (java.lang.String)[1];
        $r4 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r5 = virtualinvoke $r4.<hu.vsza.adsdroid.PartList: java.lang.String getString(int)>(i0);
        $r3[0] = $r5;
        virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void publishProgress(java.lang.Object[])>($r3);
        r2[0] = 1;
        return;
    }

    protected java.lang.String fileNameForPart(hu.vsza.adsapi.Part)
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        hu.vsza.adsapi.Part r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r11, $r12;
        java.lang.Object $r6;
        java.lang.String $r7, $r13;
        java.util.Date $r9;
        java.lang.CharSequence $r10;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: hu.vsza.adsapi.Part;
        $r2 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sdcard/");
        $r6 = virtualinvoke r1.<hu.vsza.adsapi.Part: java.lang.Object get(java.lang.Object)>("NAME");
        $r7 = (java.lang.String) $r6;
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = new java.util.Date;
        specialinvoke $r9.<java.util.Date: void <init>()>();
        $r10 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>("-yyyyMMdd-kkmmss", $r9);
        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pdf");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[0] = 1;
        return $r13;
    }

    protected void onPreExecute()
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        boolean[][] $r1;
        boolean[] r2;
        hu.vsza.adsdroid.PartList $r3;
        android.app.ProgressDialog $r4;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        $r1 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        specialinvoke r0.<android.os.AsyncTask: void onPreExecute()>();
        $r3 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r4 = $r3.<hu.vsza.adsdroid.PartList: android.app.ProgressDialog mProgressDialog>;
        virtualinvoke $r4.<android.app.ProgressDialog: void show()>();
        r2[0] = 1;
        return;
    }

    protected transient void onProgressUpdate(java.lang.String[])
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        java.lang.String[] r1;
        boolean[][] $r2;
        boolean[] r3;
        hu.vsza.adsdroid.PartList $r4;
        android.app.ProgressDialog $r5;
        java.lang.String $r6;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: java.lang.String[];
        $r2 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        specialinvoke r0.<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>(r1);
        $r4 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r5 = $r4.<hu.vsza.adsdroid.PartList: android.app.ProgressDialog mProgressDialog>;
        $r6 = r1[0];
        virtualinvoke $r5.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r6);
        r3[0] = 1;
        return;
    }

    protected void onPostExecute(java.lang.String)
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        java.lang.String r1, $r10;
        boolean[][] $r2;
        boolean[] r3;
        hu.vsza.adsdroid.PartList $r4, $r6, $r7, $r9, $r11;
        android.app.ProgressDialog $r5;
        android.content.Context $r8;
        java.lang.Object[] $r12;
        android.widget.Toast $r13;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: java.lang.String;
        $r2 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        specialinvoke r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>(r1);
        $r4 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r5 = $r4.<hu.vsza.adsdroid.PartList: android.app.ProgressDialog mProgressDialog>;
        virtualinvoke $r5.<android.app.ProgressDialog: void dismiss()>();
        $r6 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r6.<hu.vsza.adsdroid.PartList: android.app.ProgressDialog mProgressDialog> = null;
        $r7 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r8 = virtualinvoke $r7.<hu.vsza.adsdroid.PartList: android.content.Context getBaseContext()>();
        r3[0] = 1;
        if r1 != null goto label1;

        $r9 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r10 = virtualinvoke $r9.<hu.vsza.adsdroid.PartList: java.lang.String getString(int)>(2130968586);
        r3[1] = 1;
        goto label2;

     label1:
        $r11 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r12 = newarray (java.lang.Object)[1];
        $r12[0] = r1;
        $r10 = virtualinvoke $r11.<hu.vsza.adsdroid.PartList: java.lang.String getString(int,java.lang.Object[])>(2130968587, $r12);
        r3[2] = 1;

     label2:
        $r13 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, $r10, 0);
        virtualinvoke $r13.<android.widget.Toast: void show()>();
        r3[3] = 1;
        if r1 == null goto label3;

        virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void openPDF(java.lang.String)>(r1);
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return;
    }

    protected void openPDF(java.lang.String)
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r7;
        java.io.File r5, $r9;
        android.content.ActivityNotFoundException r6, $r13;
        android.net.Uri $r10;
        hu.vsza.adsdroid.PartList $r12, $r14;
        android.content.Context $r15;
        android.widget.Toast $r16;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: java.lang.String;
        $r2 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $r7 = new android.content.Intent;
        specialinvoke $r7.<android.content.Intent: void <init>()>();
        r4 = $r7;
        virtualinvoke r4.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.VIEW");
        $r9 = new java.io.File;
        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r1);
        r5 = $r9;
        $r10 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r5);
        virtualinvoke r4.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r10, "application/pdf");

     label1:
        $r12 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        virtualinvoke $r12.<hu.vsza.adsdroid.PartList: void startActivity(android.content.Intent)>(r4);
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;
        r6 = $r13;
        $r14 = r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: hu.vsza.adsdroid.PartList this$0>;
        $r15 = virtualinvoke $r14.<hu.vsza.adsdroid.PartList: android.content.Context getBaseContext()>();
        $r16 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r15, 2130968588, 0);
        virtualinvoke $r16.<android.widget.Toast: void show()>();
        r3[1] = 1;

     label4:
        r3[2] = 1;
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    protected volatile void onProgressUpdate(java.lang.Object[])
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        java.lang.Object[] r1;
        java.lang.String[] $r2;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: java.lang.Object[];
        $r2 = (java.lang.String[]) r1;
        virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void onProgressUpdate(java.lang.String[])>($r2);
        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.lang.String) r1;
        virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void onPostExecute(java.lang.String)>($r2);
        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        java.lang.Object[] r1;
        hu.vsza.adsapi.Part[] $r2;
        java.lang.String $r3;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: java.lang.Object[];
        $r2 = (hu.vsza.adsapi.Part[]) r1;
        $r3 = virtualinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: java.lang.String doInBackground(hu.vsza.adsapi.Part[])>($r2);
        return $r3;
    }

    void <init>(hu.vsza.adsdroid.PartList, hu.vsza.adsdroid.PartList$1)
    {
        hu.vsza.adsdroid.PartList$DownloadDatasheet r0;
        hu.vsza.adsdroid.PartList r1;
        hu.vsza.adsdroid.PartList$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: hu.vsza.adsdroid.PartList$DownloadDatasheet;
        r1 := @parameter0: hu.vsza.adsdroid.PartList;
        r2 := @parameter1: hu.vsza.adsdroid.PartList$1;
        $r3 = <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();

     label0:
        r4 = $r3[11];
        specialinvoke r0.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void <init>(hu.vsza.adsdroid.PartList)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRi()>();
        r1 = $r0[12];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[13][];
        <hu.vsza.adsdroid.PartList$DownloadDatasheet: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[11] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[12] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/PartList$DownloadDatasheet", -8917101356778367705L);
        return $r0;
    }
}
public class hu.vsza.adsdroid.PartList extends android.app.ListActivity
{
    public static final java.lang.String PARTS;
    android.app.ProgressDialog mProgressDialog;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        hu.vsza.adsdroid.PartList r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: hu.vsza.adsdroid.PartList;
        $r1 = <hu.vsza.adsdroid.PartList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.PartList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.ListActivity: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        hu.vsza.adsdroid.PartList r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.List r4;
        java.lang.String[] r5, $r9;
        int[] r6, $r10;
        android.content.Intent $r7;
        java.io.Serializable $r8;
        android.widget.SimpleAdapter $r11;

        r0 := @this: hu.vsza.adsdroid.PartList;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <hu.vsza.adsdroid.PartList: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.PartList: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.ListActivity: void onCreate(android.os.Bundle)>(r1);
        $r7 = virtualinvoke r0.<hu.vsza.adsdroid.PartList: android.content.Intent getIntent()>();
        $r8 = virtualinvoke $r7.<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>("hu.vsza.adsdroid.PartList.PARTS");
        r4 = (java.util.List) $r8;
        $r9 = newarray (java.lang.String)[2];
        $r9[0] = "NAME";
        $r9[1] = "DESCRIPTION";
        r5 = $r9;
        $r10 = newarray (int)[2];
        $r10[0] = 2131034114;
        $r10[1] = 2131034115;
        r6 = $r10;
        $r11 = new android.widget.SimpleAdapter;
        specialinvoke $r11.<android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>(r0, r4, 2130903041, r5, r6);
        virtualinvoke r0.<hu.vsza.adsdroid.PartList: void setListAdapter(android.widget.ListAdapter)>($r11);
        r3[0] = 1;
        return;
    }

    protected void onListItemClick(android.widget.ListView, android.view.View, int, long)
    {
        hu.vsza.adsdroid.PartList r0;
        android.widget.ListView r1, $r8;
        android.view.View r2;
        int i0;
        long l1;
        boolean[][] $r3;
        boolean[] r4;
        hu.vsza.adsapi.Part r5, $r7;
        hu.vsza.adsdroid.PartList$DownloadDatasheet r6, $r15;
        java.lang.Object $r9;
        java.util.Map $r10;
        android.app.ProgressDialog $r11, $r12, $r14;
        java.lang.String $r13;
        hu.vsza.adsapi.Part[] $r16;

        r0 := @this: hu.vsza.adsdroid.PartList;
        r1 := @parameter0: android.widget.ListView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        $r3 = <hu.vsza.adsdroid.PartList: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <hu.vsza.adsdroid.PartList: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $r7 = new hu.vsza.adsapi.Part;
        $r8 = virtualinvoke r0.<hu.vsza.adsdroid.PartList: android.widget.ListView getListView()>();
        $r9 = virtualinvoke $r8.<android.widget.ListView: java.lang.Object getItemAtPosition(int)>(i0);
        $r10 = (java.util.Map) $r9;
        specialinvoke $r7.<hu.vsza.adsapi.Part: void <init>(java.util.Map)>($r10);
        r5 = $r7;
        $r11 = new android.app.ProgressDialog;
        specialinvoke $r11.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);
        r0.<hu.vsza.adsdroid.PartList: android.app.ProgressDialog mProgressDialog> = $r11;
        $r12 = r0.<hu.vsza.adsdroid.PartList: android.app.ProgressDialog mProgressDialog>;
        $r13 = virtualinvoke r0.<hu.vsza.adsdroid.PartList: java.lang.String getString(int)>(2130968582);
        virtualinvoke $r12.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r13);
        $r14 = r0.<hu.vsza.adsdroid.PartList: android.app.ProgressDialog mProgressDialog>;
        virtualinvoke $r14.<android.app.ProgressDialog: void setIndeterminate(boolean)>(1);
        $r15 = new hu.vsza.adsdroid.PartList$DownloadDatasheet;
        specialinvoke $r15.<hu.vsza.adsdroid.PartList$DownloadDatasheet: void <init>(hu.vsza.adsdroid.PartList,hu.vsza.adsdroid.PartList$1)>(r0, null);
        r6 = $r15;
        $r16 = newarray (hu.vsza.adsapi.Part)[1];
        $r16[0] = r5;
        virtualinvoke r6.<hu.vsza.adsdroid.PartList$DownloadDatasheet: android.os.AsyncTask execute(java.lang.Object[])>($r16);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.PartList: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <hu.vsza.adsdroid.PartList: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/PartList", 5304318771009402549L);
        return $r0;
    }
}
public final class hu.vsza.adsdroid.R$attr extends java.lang.Object
{

    public void <init>()
    {
        hu.vsza.adsdroid.R$attr r0;

        r0 := @this: hu.vsza.adsdroid.R$attr;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class hu.vsza.adsdroid.R$drawable extends java.lang.Object
{
    public static final int icon;

    public void <init>()
    {
        hu.vsza.adsdroid.R$drawable r0;

        r0 := @this: hu.vsza.adsdroid.R$drawable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class hu.vsza.adsdroid.R$id extends java.lang.Object
{
    public static final int part_name;
    public static final int result_part_description;
    public static final int result_part_name;
    public static final int search_mode;

    public void <init>()
    {
        hu.vsza.adsdroid.R$id r0;

        r0 := @this: hu.vsza.adsdroid.R$id;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class hu.vsza.adsdroid.R$layout extends java.lang.Object
{
    public static final int main;
    public static final int part_list_item;

    public void <init>()
    {
        hu.vsza.adsdroid.R$layout r0;

        r0 := @this: hu.vsza.adsdroid.R$layout;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class hu.vsza.adsdroid.R$string extends java.lang.Object
{
    public static final int app_name;
    public static final int connecting_to_pdf_server;
    public static final int download_done;
    public static final int download_error;
    public static final int download_progress;
    public static final int error_fetching_results;
    public static final int fetching_pdf_url;
    public static final int no_results;
    public static final int part_list_title;
    public static final int part_name_label;
    public static final int pdf_open_failed;
    public static final int search_by_part_name;
    public static final int search_mode_prompt;
    public static final int searching;
    public static final int starting_download;

    public void <init>()
    {
        hu.vsza.adsdroid.R$string r0;

        r0 := @this: hu.vsza.adsdroid.R$string;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class hu.vsza.adsdroid.R extends java.lang.Object
{

    public void <init>()
    {
        hu.vsza.adsdroid.R r0;

        r0 := @this: hu.vsza.adsdroid.R;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
class hu.vsza.adsdroid.SearchPanel$SearchByPartName extends android.os.AsyncTask
{
    protected final hu.vsza.adsapi.Search$Mode mode;
    protected final java.lang.String partName;
    final hu.vsza.adsdroid.SearchPanel this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(hu.vsza.adsdroid.SearchPanel, hu.vsza.adsapi.Search$Mode, java.lang.String)
    {
        hu.vsza.adsdroid.SearchPanel$SearchByPartName r0;
        hu.vsza.adsdroid.SearchPanel r1;
        hu.vsza.adsapi.Search$Mode r2;
        java.lang.String r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: hu.vsza.adsdroid.SearchPanel$SearchByPartName;
        r1 := @parameter0: hu.vsza.adsdroid.SearchPanel;
        r2 := @parameter1: hu.vsza.adsapi.Search$Mode;
        r3 := @parameter2: java.lang.String;
        $r4 = <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsdroid.SearchPanel this$0> = r1;
        specialinvoke r0.<android.os.AsyncTask: void <init>()>();
        r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsapi.Search$Mode mode> = r2;
        r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: java.lang.String partName> = r3;
        r5[0] = 1;
        return;
    }

    protected transient java.util.ArrayList doInBackground(java.lang.Void[])
    {
        hu.vsza.adsdroid.SearchPanel$SearchByPartName r0;
        java.lang.Void[] r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.IOException r4, $r8;
        java.lang.String $r5;
        hu.vsza.adsapi.Search$Mode $r6;
        java.util.ArrayList $r7;

        r0 := @this: hu.vsza.adsdroid.SearchPanel$SearchByPartName;
        r1 := @parameter0: java.lang.Void[];
        $r2 = <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];

     label1:
        $r5 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: java.lang.String partName>;
        $r6 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsapi.Search$Mode mode>;
        $r7 = staticinvoke <hu.vsza.adsapi.Search: java.util.ArrayList searchByPartName(java.lang.String,hu.vsza.adsapi.Search$Mode)>($r5, $r6);
        r3[0] = 1;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;
        r4 = $r8;
        r3[1] = 1;
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void onPreExecute()
    {
        hu.vsza.adsdroid.SearchPanel$SearchByPartName r0;
        boolean[][] $r1;
        boolean[] r2;
        hu.vsza.adsdroid.SearchPanel $r3;
        android.app.ProgressDialog $r4;

        r0 := @this: hu.vsza.adsdroid.SearchPanel$SearchByPartName;
        $r1 = <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<android.os.AsyncTask: void onPreExecute()>();
        $r3 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsdroid.SearchPanel this$0>;
        $r4 = $r3.<hu.vsza.adsdroid.SearchPanel: android.app.ProgressDialog mProgressDialog>;
        virtualinvoke $r4.<android.app.ProgressDialog: void show()>();
        r2[0] = 1;
        return;
    }

    protected void onPostExecute(java.util.ArrayList)
    {
        hu.vsza.adsdroid.SearchPanel$SearchByPartName r0;
        java.util.ArrayList r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r11;
        hu.vsza.adsdroid.SearchPanel $r5, $r7, $r8, $r12, $r14, $r15;
        android.app.ProgressDialog $r6;
        boolean $z0;
        android.content.Context $r9, $r16;
        android.widget.Toast $r10, $r17;

        r0 := @this: hu.vsza.adsdroid.SearchPanel$SearchByPartName;
        r1 := @parameter0: java.util.ArrayList;
        $r2 = <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        specialinvoke r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>(r1);
        $r5 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsdroid.SearchPanel this$0>;
        $r6 = $r5.<hu.vsza.adsdroid.SearchPanel: android.app.ProgressDialog mProgressDialog>;
        virtualinvoke $r6.<android.app.ProgressDialog: void dismiss()>();
        $r7 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsdroid.SearchPanel this$0>;
        $r7.<hu.vsza.adsdroid.SearchPanel: android.app.ProgressDialog mProgressDialog> = null;
        r3[0] = 1;
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();
        r3[1] = 1;
        if $z0 == 0 goto label1;

        $r8 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsdroid.SearchPanel this$0>;
        $r9 = virtualinvoke $r8.<hu.vsza.adsdroid.SearchPanel: android.content.Context getBaseContext()>();
        $r10 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r9, 2130968580, 0);
        virtualinvoke $r10.<android.widget.Toast: void show()>();
        r3[2] = 1;
        goto label3;

     label1:
        $r11 = new android.content.Intent;
        $r12 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsdroid.SearchPanel this$0>;
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "hu/vsza/adsdroid/PartList");
        r4 = $r11;
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("hu.vsza.adsdroid.PartList.PARTS", r1);
        $r14 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsdroid.SearchPanel this$0>;
        virtualinvoke $r14.<hu.vsza.adsdroid.SearchPanel: void startActivity(android.content.Intent)>(r4);
        r3[3] = 1;
        goto label3;

     label2:
        $r15 = r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: hu.vsza.adsdroid.SearchPanel this$0>;
        $r16 = virtualinvoke $r15.<hu.vsza.adsdroid.SearchPanel: android.content.Context getBaseContext()>();
        $r17 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r16, 2130968581, 0);
        virtualinvoke $r17.<android.widget.Toast: void show()>();
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        hu.vsza.adsdroid.SearchPanel$SearchByPartName r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;

        r0 := @this: hu.vsza.adsdroid.SearchPanel$SearchByPartName;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.util.ArrayList) r1;
        virtualinvoke r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: void onPostExecute(java.util.ArrayList)>($r2);
        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        hu.vsza.adsdroid.SearchPanel$SearchByPartName r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.util.ArrayList $r3;

        r0 := @this: hu.vsza.adsdroid.SearchPanel$SearchByPartName;
        r1 := @parameter0: java.lang.Object[];
        $r2 = (java.lang.Void[]) r1;
        $r3 = virtualinvoke r0.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: java.util.ArrayList doInBackground(java.lang.Void[])>($r2);
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRi()>();
        r1 = $r0[6];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[7][];
        <hu.vsza.adsdroid.SearchPanel$SearchByPartName: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[2];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[6] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/SearchPanel$SearchByPartName", -3886948597790324669L);
        return $r0;
    }
}
public class hu.vsza.adsdroid.SearchPanel extends android.app.Activity
{
    android.app.ProgressDialog mProgressDialog;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        hu.vsza.adsdroid.SearchPanel r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: hu.vsza.adsdroid.SearchPanel;
        $r1 = <hu.vsza.adsdroid.SearchPanel: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <hu.vsza.adsdroid.SearchPanel: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        hu.vsza.adsdroid.SearchPanel r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.Spinner r4;
        hu.vsza.adsapi.Search$Mode[] $r5;
        android.widget.ArrayAdapter r6, $r9;
        java.net.CookieManager r7, $r10;
        android.view.View $r8;

        r0 := @this: hu.vsza.adsdroid.SearchPanel;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <hu.vsza.adsdroid.SearchPanel: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.SearchPanel: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<hu.vsza.adsdroid.SearchPanel: void setContentView(int)>(2130903040);
        $r8 = virtualinvoke r0.<hu.vsza.adsdroid.SearchPanel: android.view.View findViewById(int)>(2131034112);
        r4 = (android.widget.Spinner) $r8;
        $r9 = new android.widget.ArrayAdapter;
        $r5 = staticinvoke <hu.vsza.adsapi.Search$Mode: hu.vsza.adsapi.Search$Mode[] values()>();
        specialinvoke $r9.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>(r0, 17367048, $r5);
        r6 = $r9;
        virtualinvoke r6.<android.widget.ArrayAdapter: void setDropDownViewResource(int)>(17367049);
        virtualinvoke r4.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>(r6);
        $r10 = new java.net.CookieManager;
        specialinvoke $r10.<java.net.CookieManager: void <init>()>();
        r7 = $r10;
        staticinvoke <java.net.CookieHandler: void setDefault(java.net.CookieHandler)>(r7);
        r3[0] = 1;
        return;
    }

    public void searchByPartName(android.view.View)
    {
        hu.vsza.adsdroid.SearchPanel r0;
        android.view.View r1, $r8, $r10;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.Spinner r4;
        hu.vsza.adsapi.Search$Mode r5;
        android.widget.EditText r6;
        java.lang.String r7, $r14;
        java.lang.Object $r9;
        android.text.Editable $r11;
        android.app.ProgressDialog $r12, $r13, $r15;
        hu.vsza.adsdroid.SearchPanel$SearchByPartName $r16;
        java.lang.Void[] $r17;

        r0 := @this: hu.vsza.adsdroid.SearchPanel;
        r1 := @parameter0: android.view.View;
        $r2 = <hu.vsza.adsdroid.SearchPanel: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <hu.vsza.adsdroid.SearchPanel: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r8 = virtualinvoke r0.<hu.vsza.adsdroid.SearchPanel: android.view.View findViewById(int)>(2131034112);
        r4 = (android.widget.Spinner) $r8;
        $r9 = virtualinvoke r4.<android.widget.Spinner: java.lang.Object getSelectedItem()>();
        r5 = (hu.vsza.adsapi.Search$Mode) $r9;
        $r10 = virtualinvoke r0.<hu.vsza.adsdroid.SearchPanel: android.view.View findViewById(int)>(2131034113);
        r6 = (android.widget.EditText) $r10;
        $r11 = virtualinvoke r6.<android.widget.EditText: android.text.Editable getText()>();
        r7 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();
        $r12 = new android.app.ProgressDialog;
        specialinvoke $r12.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);
        r0.<hu.vsza.adsdroid.SearchPanel: android.app.ProgressDialog mProgressDialog> = $r12;
        $r13 = r0.<hu.vsza.adsdroid.SearchPanel: android.app.ProgressDialog mProgressDialog>;
        $r14 = virtualinvoke r0.<hu.vsza.adsdroid.SearchPanel: java.lang.String getString(int)>(2130968579);
        virtualinvoke $r13.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r14);
        $r15 = r0.<hu.vsza.adsdroid.SearchPanel: android.app.ProgressDialog mProgressDialog>;
        virtualinvoke $r15.<android.app.ProgressDialog: void setIndeterminate(boolean)>(1);
        $r16 = new hu.vsza.adsdroid.SearchPanel$SearchByPartName;
        specialinvoke $r16.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: void <init>(hu.vsza.adsdroid.SearchPanel,hu.vsza.adsapi.Search$Mode,java.lang.String)>(r0, r5, r7);
        $r17 = newarray (java.lang.Void)[0];
        virtualinvoke $r16.<hu.vsza.adsdroid.SearchPanel$SearchByPartName: android.os.AsyncTask execute(java.lang.Object[])>($r17);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <hu.vsza.adsdroid.SearchPanel: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <hu.vsza.adsdroid.SearchPanel: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "hu/vsza/adsdroid/SearchPanel", 4841985119968804155L);
        return $r0;
    }
}
public interface  org.jsoup.Connection$Base extends java.lang.Object
{

    public abstract java.net.URL url();

    public abstract org.jsoup.Connection$Base url(java.net.URL);

    public abstract org.jsoup.Connection$Method method();

    public abstract org.jsoup.Connection$Base method(org.jsoup.Connection$Method);

    public abstract java.lang.String header(java.lang.String);

    public abstract org.jsoup.Connection$Base header(java.lang.String, java.lang.String);

    public abstract boolean hasHeader(java.lang.String);

    public abstract org.jsoup.Connection$Base removeHeader(java.lang.String);

    public abstract java.util.Map headers();

    public abstract java.lang.String cookie(java.lang.String);

    public abstract org.jsoup.Connection$Base cookie(java.lang.String, java.lang.String);

    public abstract boolean hasCookie(java.lang.String);

    public abstract org.jsoup.Connection$Base removeCookie(java.lang.String);

    public abstract java.util.Map cookies();
}
public interface  org.jsoup.Connection$KeyVal extends java.lang.Object
{

    public abstract org.jsoup.Connection$KeyVal key(java.lang.String);

    public abstract java.lang.String key();

    public abstract org.jsoup.Connection$KeyVal value(java.lang.String);

    public abstract java.lang.String value();
}
public final enum class org.jsoup.Connection$Method extends java.lang.Enum
{
    public static final enum org.jsoup.Connection$Method GET;
    public static final enum org.jsoup.Connection$Method POST;
    private static final org.jsoup.Connection$Method[] $VALUES;

    public static org.jsoup.Connection$Method[] values()
    {
        org.jsoup.Connection$Method[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.jsoup.Connection$Method[]) $r1;
        return $r2;
    }

    public static org.jsoup.Connection$Method valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.jsoup.Connection$Method $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/jsoup/Connection$Method", r0);
        $r2 = (org.jsoup.Connection$Method) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.jsoup.Connection$Method r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.Connection$Method;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        org.jsoup.Connection$Method $r0, $r1, $r3, $r4;
        org.jsoup.Connection$Method[] $r2;

        $r0 = new org.jsoup.Connection$Method;
        specialinvoke $r0.<org.jsoup.Connection$Method: void <init>(java.lang.String,int)>("GET", 0);
        <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET> = $r0;
        $r1 = new org.jsoup.Connection$Method;
        specialinvoke $r1.<org.jsoup.Connection$Method: void <init>(java.lang.String,int)>("POST", 1);
        <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST> = $r1;
        $r2 = newarray (org.jsoup.Connection$Method)[2];
        $r3 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;
        $r2[0] = $r3;
        $r4 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;
        $r2[1] = $r4;
        <org.jsoup.Connection$Method: org.jsoup.Connection$Method[] $VALUES> = $r2;
        return;
    }
}
public interface  org.jsoup.Connection$Request extends java.lang.Object implements org.jsoup.Connection$Base
{

    public abstract int timeout();

    public abstract org.jsoup.Connection$Request timeout(int);

    public abstract boolean followRedirects();

    public abstract org.jsoup.Connection$Request followRedirects(boolean);

    public abstract boolean ignoreHttpErrors();

    public abstract org.jsoup.Connection$Request ignoreHttpErrors(boolean);

    public abstract boolean ignoreContentType();

    public abstract org.jsoup.Connection$Request ignoreContentType(boolean);

    public abstract org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal);

    public abstract java.util.Collection data();

    public abstract org.jsoup.Connection$Request parser(org.jsoup.parser.Parser);

    public abstract org.jsoup.parser.Parser parser();
}
public interface  org.jsoup.Connection$Response extends java.lang.Object implements org.jsoup.Connection$Base
{

    public abstract int statusCode();

    public abstract java.lang.String statusMessage();

    public abstract java.lang.String charset();

    public abstract java.lang.String contentType();

    public abstract org.jsoup.nodes.Document parse() throws java.io.IOException;

    public abstract java.lang.String body();

    public abstract byte[] bodyAsBytes();
}
public interface  org.jsoup.Connection extends java.lang.Object
{

    public abstract org.jsoup.Connection url(java.net.URL);

    public abstract org.jsoup.Connection url(java.lang.String);

    public abstract org.jsoup.Connection userAgent(java.lang.String);

    public abstract org.jsoup.Connection timeout(int);

    public abstract org.jsoup.Connection referrer(java.lang.String);

    public abstract org.jsoup.Connection followRedirects(boolean);

    public abstract org.jsoup.Connection method(org.jsoup.Connection$Method);

    public abstract org.jsoup.Connection ignoreHttpErrors(boolean);

    public abstract org.jsoup.Connection ignoreContentType(boolean);

    public abstract org.jsoup.Connection data(java.lang.String, java.lang.String);

    public abstract org.jsoup.Connection data(java.util.Map);

    public abstract transient org.jsoup.Connection data(java.lang.String[]);

    public abstract org.jsoup.Connection header(java.lang.String, java.lang.String);

    public abstract org.jsoup.Connection cookie(java.lang.String, java.lang.String);

    public abstract org.jsoup.Connection cookies(java.util.Map);

    public abstract org.jsoup.Connection parser(org.jsoup.parser.Parser);

    public abstract org.jsoup.nodes.Document get() throws java.io.IOException;

    public abstract org.jsoup.nodes.Document post() throws java.io.IOException;

    public abstract org.jsoup.Connection$Response execute() throws java.io.IOException;

    public abstract org.jsoup.Connection$Request request();

    public abstract org.jsoup.Connection request(org.jsoup.Connection$Request);

    public abstract org.jsoup.Connection$Response response();

    public abstract org.jsoup.Connection response(org.jsoup.Connection$Response);
}
class org.jsoup.examples.HtmlToPlainText$1 extends java.lang.Object
{
}
class org.jsoup.examples.HtmlToPlainText$FormattingVisitor extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    private static final int maxWidth;
    private int width;
    private java.lang.StringBuilder accum;
    final org.jsoup.examples.HtmlToPlainText this$0;

    private void <init>(org.jsoup.examples.HtmlToPlainText)
    {
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor r0;
        org.jsoup.examples.HtmlToPlainText r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;
        r1 := @parameter0: org.jsoup.examples.HtmlToPlainText;
        r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: org.jsoup.examples.HtmlToPlainText this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = 0;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum> = $r2;
        return;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor r0;
        org.jsoup.nodes.Node r1;
        int i0;
        java.lang.String r2, $r4;
        boolean $z0, $z1;
        org.jsoup.nodes.TextNode $r3;

        r0 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;
        r1 := @parameter0: org.jsoup.nodes.Node;
        i0 := @parameter1: int;
        r2 = virtualinvoke r1.<org.jsoup.nodes.Node: java.lang.String nodeName()>();
        $z0 = r1 instanceof org.jsoup.nodes.TextNode;
        if $z0 == 0 goto label0;

        $r3 = (org.jsoup.nodes.TextNode) r1;
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.TextNode: java.lang.String text()>();
        specialinvoke r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>($r4);
        goto label1;

     label0:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("li");
        if $z1 == 0 goto label1;

        specialinvoke r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>("\n * ");

     label1:
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor r0;
        org.jsoup.nodes.Node r1;
        int i0;
        java.lang.String r2, $r5, $r6;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;
        r1 := @parameter0: org.jsoup.nodes.Node;
        i0 := @parameter1: int;
        r2 = virtualinvoke r1.<org.jsoup.nodes.Node: java.lang.String nodeName()>();
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("br");
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>("\n");
        goto label2;

     label0:
        $r3 = newarray (java.lang.String)[6];
        $r3[0] = "p";
        $r3[1] = "h1";
        $r3[2] = "h2";
        $r3[3] = "h3";
        $r3[4] = "h4";
        $r3[5] = "h5";
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r2, $r3);
        if $z1 == 0 goto label1;

        specialinvoke r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>("\n\n");
        goto label2;

     label1:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("a");
        if $z2 == 0 goto label2;

        $r4 = newarray (java.lang.Object)[1];
        $r5 = virtualinvoke r1.<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>("href");
        $r4[0] = $r5;
        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" <%s>", $r4);
        specialinvoke r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>($r6);

     label2:
        return;
    }

    private void append(java.lang.String)
    {
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor r0;
        java.lang.String r1, r3, $r7;
        java.lang.String[] r2, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r15, $r18;

        r0 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;
        r1 := @parameter0: java.lang.String;
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\n");
        if $z1 == 0 goto label0;

        r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = 0;

     label0:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(" ");
        if $z2 == 0 goto label2;

        $r4 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;
        $i1 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();
        if $i1 == 0 goto label1;

        $r5 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;
        $r6 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;
        $i2 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();
        $i3 = $i2 - 1;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String substring(int)>($i3);
        $r8 = newarray (java.lang.String)[2];
        $r8[0] = " ";
        $r8[1] = "\n";
        $z3 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r7, $r8);
        if $z3 == 0 goto label2;

     label1:
        return;

     label2:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();
        $i5 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width>;
        $i6 = $i4 + $i5;
        if $i6 <= 80 goto label10;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");
        i0 = 0;

     label3:
        $i7 = lengthof r2;
        if i0 >= $i7 goto label9;

        r3 = r2[i0];
        $i8 = lengthof r2;
        $i9 = $i8 - 1;
        if i0 != $i9 goto label4;

        $z4 = 1;
        goto label5;

     label4:
        $z4 = 0;

     label5:
        z0 = $z4;
        if z0 != 0 goto label6;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $i10 = virtualinvoke r3.<java.lang.String: int length()>();
        $i11 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width>;
        $i12 = $i10 + $i11;
        if $i12 <= 80 goto label7;

        $r12 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $i13 = virtualinvoke r3.<java.lang.String: int length()>();
        r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = $i13;
        goto label8;

     label7:
        $r15 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;
        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $i14 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width>;
        $i15 = virtualinvoke r3.<java.lang.String: int length()>();
        $i16 = $i14 + $i15;
        r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = $i16;

     label8:
        i0 = i0 + 1;
        goto label3;

     label9:
        goto label11;

     label10:
        $r18 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;
        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $i17 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width>;
        $i18 = virtualinvoke r1.<java.lang.String: int length()>();
        $i19 = $i17 + $i18;
        r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = $i19;

     label11:
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;
        $r1 = r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    void <init>(org.jsoup.examples.HtmlToPlainText, org.jsoup.examples.HtmlToPlainText$1)
    {
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor r0;
        org.jsoup.examples.HtmlToPlainText r1;
        org.jsoup.examples.HtmlToPlainText$1 r2;

        r0 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;
        r1 := @parameter0: org.jsoup.examples.HtmlToPlainText;
        r2 := @parameter1: org.jsoup.examples.HtmlToPlainText$1;
        specialinvoke r0.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void <init>(org.jsoup.examples.HtmlToPlainText)>(r1);
        return;
    }
}
public class org.jsoup.examples.HtmlToPlainText extends java.lang.Object
{

    public void <init>()
    {
        org.jsoup.examples.HtmlToPlainText r0;

        r0 := @this: org.jsoup.examples.HtmlToPlainText;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static transient void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        java.lang.String r1, r4;
        org.jsoup.nodes.Document r2;
        org.jsoup.examples.HtmlToPlainText r3, $r6;
        int $i0;
        boolean $z0;
        org.jsoup.Connection $r5;
        java.io.PrintStream $r7;

        r0 := @parameter0: java.lang.String[];
        $i0 = lengthof r0;
        if $i0 != 1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "usage: supply url to fetch");
        r1 = r0[0];
        $r5 = staticinvoke <org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>(r1);
        r2 = interfaceinvoke $r5.<org.jsoup.Connection: org.jsoup.nodes.Document get()>();
        $r6 = new org.jsoup.examples.HtmlToPlainText;
        specialinvoke $r6.<org.jsoup.examples.HtmlToPlainText: void <init>()>();
        r3 = $r6;
        r4 = virtualinvoke r3.<org.jsoup.examples.HtmlToPlainText: java.lang.String getPlainText(org.jsoup.nodes.Element)>(r2);
        $r7 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(r4);
        return;
    }

    public java.lang.String getPlainText(org.jsoup.nodes.Element)
    {
        org.jsoup.examples.HtmlToPlainText r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor $r2, r3;
        org.jsoup.select.NodeTraversor r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.jsoup.examples.HtmlToPlainText;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $r2 = new org.jsoup.examples.HtmlToPlainText$FormattingVisitor;
        specialinvoke $r2.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void <init>(org.jsoup.examples.HtmlToPlainText,org.jsoup.examples.HtmlToPlainText$1)>(r0, null);
        r3 = $r2;
        $r5 = new org.jsoup.select.NodeTraversor;
        specialinvoke $r5.<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>(r3);
        r4 = $r5;
        virtualinvoke r4.<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>(r1);
        $r6 = virtualinvoke r3.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.String toString()>();
        return $r6;
    }
}
public class org.jsoup.examples.ListLinks extends java.lang.Object
{

    public void <init>()
    {
        org.jsoup.examples.ListLinks r0;

        r0 := @this: org.jsoup.examples.ListLinks;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        java.lang.String r1, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r30, $r31, $r32, $r39, $r40, $r41;
        org.jsoup.nodes.Document r2;
        org.jsoup.select.Elements r3, r4, r5;
        java.util.Iterator r6, r26, r35;
        org.jsoup.nodes.Element r7, r28, r37;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object[] $r8, $r10, $r14, $r21, $r24, $r29, $r33, $r38;
        org.jsoup.Connection $r9;
        java.lang.Integer $r11, $r25, $r34;
        java.lang.Object $r12, $r27, $r36;

        r0 := @parameter0: java.lang.String[];
        $i0 = lengthof r0;
        if $i0 != 1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "usage: supply url to fetch");
        r1 = r0[0];
        $r8 = newarray (java.lang.Object)[1];
        $r8[0] = r1;
        staticinvoke <org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>("Fetching %s...", $r8);
        $r9 = staticinvoke <org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>(r1);
        r2 = interfaceinvoke $r9.<org.jsoup.Connection: org.jsoup.nodes.Document get()>();
        r3 = virtualinvoke r2.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("a[href]");
        r4 = virtualinvoke r2.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("[src]");
        r5 = virtualinvoke r2.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("link[href]");
        $r10 = newarray (java.lang.Object)[1];
        $i1 = virtualinvoke r4.<org.jsoup.select.Elements: int size()>();
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        $r10[0] = $r11;
        staticinvoke <org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>("\nMedia: (%d)", $r10);
        r6 = virtualinvoke r4.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (org.jsoup.nodes.Element) $r12;
        $r13 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("img");
        if $z2 == 0 goto label3;

        $r14 = newarray (java.lang.Object)[5];
        $r15 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $r14[0] = $r15;
        $r16 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:src");
        $r14[1] = $r16;
        $r17 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("width");
        $r14[2] = $r17;
        $r18 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("height");
        $r14[3] = $r18;
        $r19 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("alt");
        $r20 = staticinvoke <org.jsoup.examples.ListLinks: java.lang.String trim(java.lang.String,int)>($r19, 20);
        $r14[4] = $r20;
        staticinvoke <org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>(" * %s: <%s> %sx%s (%s)", $r14);
        goto label4;

     label3:
        $r21 = newarray (java.lang.Object)[2];
        $r22 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $r21[0] = $r22;
        $r23 = virtualinvoke r7.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:src");
        $r21[1] = $r23;
        staticinvoke <org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>(" * %s: <%s>", $r21);

     label4:
        goto label2;

     label5:
        $r24 = newarray (java.lang.Object)[1];
        $i2 = virtualinvoke r5.<org.jsoup.select.Elements: int size()>();
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        $r24[0] = $r25;
        staticinvoke <org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>("\nImports: (%d)", $r24);
        r26 = virtualinvoke r5.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label7;

        $r27 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();
        r28 = (org.jsoup.nodes.Element) $r27;
        $r29 = newarray (java.lang.Object)[3];
        $r30 = virtualinvoke r28.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $r29[0] = $r30;
        $r31 = virtualinvoke r28.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");
        $r29[1] = $r31;
        $r32 = virtualinvoke r28.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("rel");
        $r29[2] = $r32;
        staticinvoke <org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>(" * %s <%s> (%s)", $r29);
        goto label6;

     label7:
        $r33 = newarray (java.lang.Object)[1];
        $i3 = virtualinvoke r3.<org.jsoup.select.Elements: int size()>();
        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
        $r33[0] = $r34;
        staticinvoke <org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>("\nLinks: (%d)", $r33);
        r35 = virtualinvoke r3.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label8:
        $z4 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label9;

        $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();
        r37 = (org.jsoup.nodes.Element) $r36;
        $r38 = newarray (java.lang.Object)[2];
        $r39 = virtualinvoke r37.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");
        $r38[0] = $r39;
        $r40 = virtualinvoke r37.<org.jsoup.nodes.Element: java.lang.String text()>();
        $r41 = staticinvoke <org.jsoup.examples.ListLinks: java.lang.String trim(java.lang.String,int)>($r40, 35);
        $r38[1] = $r41;
        staticinvoke <org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>(" * a: <%s>  (%s)", $r38);
        goto label8;

     label9:
        return;
    }

    private static transient void print(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        java.io.PrintStream $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.Object[];
        $r2 = <java.lang.System: java.io.PrintStream out>;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, r1);
        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);
        return;
    }

    private static java.lang.String trim(java.lang.String, int)
    {
        java.lang.String r0, $r2, $r5;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r3, $r4;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 <= i0 goto label0;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $i2 = i0 - 1;
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;

     label0:
        return r0;
    }
}
public class org.jsoup.helper.DataUtil extends java.lang.Object
{
    private static final java.util.regex.Pattern charsetPattern;
    static final java.lang.String defaultCharset;
    private static final int bufferSize;

    private void <init>()
    {
        org.jsoup.helper.DataUtil r0;

        r0 := @this: org.jsoup.helper.DataUtil;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static org.jsoup.nodes.Document load(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.File r0;
        java.lang.String r1, r2;
        java.io.FileInputStream r3, $r8;
        java.nio.ByteBuffer r4;
        org.jsoup.parser.Parser $r5;
        org.jsoup.nodes.Document r6;
        java.lang.Throwable r7, $r9;

        r0 := @parameter0: java.io.File;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 = null;

     label0:
        $r8 = new java.io.FileInputStream;
        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>(r0);
        r3 = $r8;
        r4 = staticinvoke <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>(r3);
        $r5 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.parser.Parser htmlParser()>();
        r6 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>(r4, r1, r2, $r5);

     label1:
        if r3 == null goto label2;

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label2:
        return r6;

     label3:
        $r9 := @caughtexception;

     label4:
        r7 = $r9;

     label5:
        if r3 == null goto label6;

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label6:
        throw r7;

        catch java.lang.Throwable from label0 to label1 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static org.jsoup.nodes.Document load(java.io.InputStream, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.lang.String r1, r2;
        java.nio.ByteBuffer r3;
        org.jsoup.parser.Parser $r4;
        org.jsoup.nodes.Document $r5;

        r0 := @parameter0: java.io.InputStream;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 = staticinvoke <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>(r0);
        $r4 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.parser.Parser htmlParser()>();
        $r5 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>(r3, r1, r2, $r4);
        return $r5;
    }

    public static org.jsoup.nodes.Document load(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.lang.String r1, r2;
        org.jsoup.parser.Parser r3;
        java.nio.ByteBuffer r4;
        org.jsoup.nodes.Document $r5;

        r0 := @parameter0: java.io.InputStream;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: org.jsoup.parser.Parser;
        r4 = staticinvoke <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>(r0);
        $r5 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>(r4, r1, r2, r3);
        return $r5;
    }

    static org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer, java.lang.String, java.lang.String, org.jsoup.parser.Parser)
    {
        java.nio.ByteBuffer r0;
        java.lang.String r1, r2, r5, r7, $r11, $r12;
        org.jsoup.parser.Parser r3;
        org.jsoup.nodes.Document r4;
        org.jsoup.nodes.Element r6;
        java.nio.charset.Charset $r8, $r14, $r16;
        java.nio.CharBuffer $r9, $r15, $r17;
        org.jsoup.select.Elements $r10;
        boolean $z0, $z1;
        int $i0;
        char $c1;
        org.jsoup.nodes.Document$OutputSettings $r18;

        r0 := @parameter0: java.nio.ByteBuffer;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: org.jsoup.parser.Parser;
        r4 = null;
        if r1 != null goto label3;

        $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");
        $r9 = virtualinvoke $r8.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>(r0);
        r5 = virtualinvoke $r9.<java.nio.CharBuffer: java.lang.String toString()>();
        r4 = virtualinvoke r3.<org.jsoup.parser.Parser: org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String)>(r5, r2);
        $r10 = virtualinvoke r4.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>("meta[http-equiv=content-type], meta[charset]");
        r6 = virtualinvoke $r10.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();
        if r6 == null goto label2;

        $z0 = virtualinvoke r6.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>("http-equiv");
        if $z0 == 0 goto label0;

        $r11 = virtualinvoke r6.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("content");
        $r12 = staticinvoke <org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>($r11);
        goto label1;

     label0:
        $r12 = virtualinvoke r6.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("charset");

     label1:
        r7 = $r12;
        if r7 == null goto label2;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i0 == 0 goto label2;

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");
        if $z1 != 0 goto label2;

        r1 = r7;
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();
        $r14 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r7);
        $r15 = virtualinvoke $r14.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>(r0);
        r5 = virtualinvoke $r15.<java.nio.CharBuffer: java.lang.String toString()>();
        r4 = null;

     label2:
        goto label4;

     label3:
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
        $r16 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);
        $r17 = virtualinvoke $r16.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>(r0);
        r5 = virtualinvoke $r17.<java.nio.CharBuffer: java.lang.String toString()>();

     label4:
        if r4 != null goto label6;

        $c1 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);
        if $c1 != 65279 goto label5;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(1);

     label5:
        r4 = virtualinvoke r3.<org.jsoup.parser.Parser: org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String)>(r5, r2);
        $r18 = virtualinvoke r4.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();
        virtualinvoke $r18.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings charset(java.lang.String)>(r1);

     label6:
        return r4;
    }

    static java.nio.ByteBuffer readToByteBuffer(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte[] r1, $r5;
        java.io.ByteArrayOutputStream r2, $r4;
        int i0;
        java.nio.ByteBuffer r3;

        r0 := @parameter0: java.io.InputStream;
        r1 = newarray (byte)[131072];
        $r4 = new java.io.ByteArrayOutputStream;
        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>(int)>(131072);
        r2 = $r4;

     label0:
        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r1);
        if i0 != -1 goto label1;

        goto label2;

     label1:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, i0);
        goto label0;

     label2:
        $r5 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);
        return r3;
    }

    static java.lang.String getCharsetFromContentType(java.lang.String)
    {
        java.lang.String r0, $r3, $r4, $r5;
        java.util.regex.Matcher r1;
        java.util.regex.Pattern $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = <org.jsoup.helper.DataUtil: java.util.regex.Pattern charsetPattern>;
        r1 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();
        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();
        return $r5;

     label1:
        return null;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?i)\\bcharset=\\s*\"?([^\\s;\"]*)");
        <org.jsoup.helper.DataUtil: java.util.regex.Pattern charsetPattern> = $r0;
        return;
    }
}
class org.jsoup.helper.DescendableLinkedList$1 extends java.lang.Object
{
}
class org.jsoup.helper.DescendableLinkedList$DescendingIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.util.ListIterator iter;
    final org.jsoup.helper.DescendableLinkedList this$0;

    private void <init>(org.jsoup.helper.DescendableLinkedList, int)
    {
        org.jsoup.helper.DescendableLinkedList$DescendingIterator r0;
        org.jsoup.helper.DescendableLinkedList r1;
        int i0;
        java.util.ListIterator $r2;

        r0 := @this: org.jsoup.helper.DescendableLinkedList$DescendingIterator;
        r1 := @parameter0: org.jsoup.helper.DescendableLinkedList;
        i0 := @parameter1: int;
        r0.<org.jsoup.helper.DescendableLinkedList$DescendingIterator: org.jsoup.helper.DescendableLinkedList this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = virtualinvoke r1.<org.jsoup.helper.DescendableLinkedList: java.util.ListIterator listIterator(int)>(i0);
        r0.<org.jsoup.helper.DescendableLinkedList$DescendingIterator: java.util.ListIterator iter> = $r2;
        return;
    }

    public boolean hasNext()
    {
        org.jsoup.helper.DescendableLinkedList$DescendingIterator r0;
        java.util.ListIterator $r1;
        boolean $z0;

        r0 := @this: org.jsoup.helper.DescendableLinkedList$DescendingIterator;
        $r1 = r0.<org.jsoup.helper.DescendableLinkedList$DescendingIterator: java.util.ListIterator iter>;
        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasPrevious()>();
        return $z0;
    }

    public java.lang.Object next()
    {
        org.jsoup.helper.DescendableLinkedList$DescendingIterator r0;
        java.util.ListIterator $r1;
        java.lang.Object $r2;

        r0 := @this: org.jsoup.helper.DescendableLinkedList$DescendingIterator;
        $r1 = r0.<org.jsoup.helper.DescendableLinkedList$DescendingIterator: java.util.ListIterator iter>;
        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object previous()>();
        return $r2;
    }

    public void remove()
    {
        org.jsoup.helper.DescendableLinkedList$DescendingIterator r0;
        java.util.ListIterator $r1;

        r0 := @this: org.jsoup.helper.DescendableLinkedList$DescendingIterator;
        $r1 = r0.<org.jsoup.helper.DescendableLinkedList$DescendingIterator: java.util.ListIterator iter>;
        interfaceinvoke $r1.<java.util.ListIterator: void remove()>();
        return;
    }

    void <init>(org.jsoup.helper.DescendableLinkedList, int, org.jsoup.helper.DescendableLinkedList$1)
    {
        org.jsoup.helper.DescendableLinkedList$DescendingIterator r0;
        org.jsoup.helper.DescendableLinkedList r1;
        int i0;
        org.jsoup.helper.DescendableLinkedList$1 r2;

        r0 := @this: org.jsoup.helper.DescendableLinkedList$DescendingIterator;
        r1 := @parameter0: org.jsoup.helper.DescendableLinkedList;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.helper.DescendableLinkedList$1;
        specialinvoke r0.<org.jsoup.helper.DescendableLinkedList$DescendingIterator: void <init>(org.jsoup.helper.DescendableLinkedList,int)>(r1, i0);
        return;
    }
}
public class org.jsoup.helper.DescendableLinkedList extends java.util.LinkedList
{

    public void <init>()
    {
        org.jsoup.helper.DescendableLinkedList r0;

        r0 := @this: org.jsoup.helper.DescendableLinkedList;
        specialinvoke r0.<java.util.LinkedList: void <init>()>();
        return;
    }

    public void push(java.lang.Object)
    {
        org.jsoup.helper.DescendableLinkedList r0;
        java.lang.Object r1;

        r0 := @this: org.jsoup.helper.DescendableLinkedList;
        r1 := @parameter0: java.lang.Object;
        virtualinvoke r0.<org.jsoup.helper.DescendableLinkedList: void addFirst(java.lang.Object)>(r1);
        return;
    }

    public java.lang.Object peekLast()
    {
        org.jsoup.helper.DescendableLinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.jsoup.helper.DescendableLinkedList;
        $i0 = virtualinvoke r0.<org.jsoup.helper.DescendableLinkedList: int size()>();
        if $i0 != 0 goto label0;

        $r1 = null;
        goto label1;

     label0:
        $r1 = virtualinvoke r0.<org.jsoup.helper.DescendableLinkedList: java.lang.Object getLast()>();

     label1:
        return $r1;
    }

    public java.lang.Object pollLast()
    {
        org.jsoup.helper.DescendableLinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.jsoup.helper.DescendableLinkedList;
        $i0 = virtualinvoke r0.<org.jsoup.helper.DescendableLinkedList: int size()>();
        if $i0 != 0 goto label0;

        $r1 = null;
        goto label1;

     label0:
        $r1 = virtualinvoke r0.<org.jsoup.helper.DescendableLinkedList: java.lang.Object removeLast()>();

     label1:
        return $r1;
    }

    public java.util.Iterator descendingIterator()
    {
        org.jsoup.helper.DescendableLinkedList r0;
        org.jsoup.helper.DescendableLinkedList$DescendingIterator $r1;
        int $i0;

        r0 := @this: org.jsoup.helper.DescendableLinkedList;
        $r1 = new org.jsoup.helper.DescendableLinkedList$DescendingIterator;
        $i0 = virtualinvoke r0.<org.jsoup.helper.DescendableLinkedList: int size()>();
        specialinvoke $r1.<org.jsoup.helper.DescendableLinkedList$DescendingIterator: void <init>(org.jsoup.helper.DescendableLinkedList,int,org.jsoup.helper.DescendableLinkedList$1)>(r0, $i0, null);
        return $r1;
    }
}
class org.jsoup.helper.HttpConnection$1 extends java.lang.Object
{
}
abstract class org.jsoup.helper.HttpConnection$Base extends java.lang.Object implements org.jsoup.Connection$Base
{
    java.net.URL url;
    org.jsoup.Connection$Method method;
    java.util.Map headers;
    java.util.Map cookies;

    private void <init>()
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.util.LinkedHashMap $r1, $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.LinkedHashMap;
        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();
        r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers> = $r1;
        $r2 = new java.util.LinkedHashMap;
        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();
        r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies> = $r2;
        return;
    }

    public java.net.URL url()
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.net.URL $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Base: java.net.URL url>;
        return $r1;
    }

    public org.jsoup.Connection$Base url(java.net.URL)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.net.URL r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.net.URL;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "URL must not be null");
        r0.<org.jsoup.helper.HttpConnection$Base: java.net.URL url> = r1;
        return r0;
    }

    public org.jsoup.Connection$Method method()
    {
        org.jsoup.helper.HttpConnection$Base r0;
        org.jsoup.Connection$Method $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method>;
        return $r1;
    }

    public org.jsoup.Connection$Base method(org.jsoup.Connection$Method)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        org.jsoup.Connection$Method r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: org.jsoup.Connection$Method;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Method must not be null");
        r0.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method> = r1;
        return r0;
    }

    public java.lang.String header(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Header name must not be null");
        $r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>(r1);
        return $r2;
    }

    public org.jsoup.Connection$Base header(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1, r2;
        java.util.Map $r4;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, "Header name must not be empty");
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "Header value must not be null");
        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base removeHeader(java.lang.String)>(r1);
        $r4 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers>;
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return r0;
    }

    public boolean hasHeader(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, "Header name must not be empty");
        $r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>(r1);
        if $r2 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public org.jsoup.Connection$Base removeHeader(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1;
        java.util.Map$Entry r2;
        java.util.Map $r3;
        java.lang.Object $r4;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, "Header name must not be empty");
        r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map$Entry scanHeaders(java.lang.String)>(r1);
        if r2 == null goto label0;

        $r3 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers>;
        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();
        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

     label0:
        return r0;
    }

    public java.util.Map headers()
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers>;
        return $r1;
    }

    private java.lang.String getHeaderCaseInsensitive(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1, r2, $r7;
        java.util.Map$Entry r3;
        java.util.Map $r4, $r6;
        java.lang.Object $r5, $r8, $r9;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Header name must not be null");
        $r4 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (java.lang.String) $r5;
        if r2 != null goto label0;

        $r6 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers>;
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);
        r2 = (java.lang.String) $r8;

     label0:
        if r2 != null goto label1;

        r3 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map$Entry scanHeaders(java.lang.String)>(r1);
        if r3 == null goto label1;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        r2 = (java.lang.String) $r9;

     label1:
        return r2;
    }

    private java.util.Map$Entry scanHeaders(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1, r2, $r9, $r10;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r5 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r7;
        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r9 = (java.lang.String) $r8;
        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();
        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 == 0 goto label1;

        return r4;

     label1:
        goto label0;

     label2:
        return null;
    }

    public java.lang.String cookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1, $r4;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Cookie name must not be null");
        $r2 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (java.lang.String) $r3;
        return $r4;
    }

    public org.jsoup.Connection$Base cookie(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1, r2;
        java.util.Map $r3;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, "Cookie name must not be empty");
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "Cookie value must not be null");
        $r3 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies>;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return r0;
    }

    public boolean hasCookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>("Cookie name must not be empty");
        $r2 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies>;
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);
        return $z0;
    }

    public org.jsoup.Connection$Base removeCookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>("Cookie name must not be empty");
        $r2 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies>;
        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);
        return r0;
    }

    public java.util.Map cookies()
    {
        org.jsoup.helper.HttpConnection$Base r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies>;
        return $r1;
    }

    void <init>(org.jsoup.helper.HttpConnection$1)
    {
        org.jsoup.helper.HttpConnection$Base r0;
        org.jsoup.helper.HttpConnection$1 r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Base;
        r1 := @parameter0: org.jsoup.helper.HttpConnection$1;
        specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: void <init>()>();
        return;
    }
}
public class org.jsoup.helper.HttpConnection$KeyVal extends java.lang.Object implements org.jsoup.Connection$KeyVal
{
    private java.lang.String key;
    private java.lang.String value;

    public static org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.jsoup.helper.HttpConnection$KeyVal $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r0, "Data key must not be empty");
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Data value must not be null");
        $r2 = new org.jsoup.helper.HttpConnection$KeyVal;
        specialinvoke $r2.<org.jsoup.helper.HttpConnection$KeyVal: void <init>(java.lang.String,java.lang.String)>(r0, r1);
        return $r2;
    }

    private void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key> = r1;
        r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value> = r2;
        return;
    }

    public org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, "Data key must not be empty");
        r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key> = r1;
        return r0;
    }

    public java.lang.String key()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;
        $r1 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key>;
        return $r1;
    }

    public org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Data value must not be null");
        r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value> = r1;
        return r0;
    }

    public java.lang.String value()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;
        $r1 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value>;
        return $r1;
    }

    public java.lang.String toString()
    {
        org.jsoup.helper.HttpConnection$KeyVal r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key>;
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r5 = r0.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    public volatile org.jsoup.Connection$KeyVal value(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0, $r2;
        java.lang.String r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)>(r1);
        return $r2;
    }

    public volatile org.jsoup.Connection$KeyVal key(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal r0, $r2;
        java.lang.String r1;

        r0 := @this: org.jsoup.helper.HttpConnection$KeyVal;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)>(r1);
        return $r2;
    }
}
public class org.jsoup.helper.HttpConnection$Request extends org.jsoup.helper.HttpConnection$Base implements org.jsoup.Connection$Request
{
    private int timeoutMilliseconds;
    private boolean followRedirects;
    private java.util.Collection data;
    private boolean ignoreHttpErrors;
    private boolean ignoreContentType;
    private org.jsoup.parser.Parser parser;

    private void <init>()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.util.ArrayList $r1;
        org.jsoup.Connection$Method $r2;
        java.util.Map $r3;
        org.jsoup.parser.Parser $r5;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(null);
        r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreHttpErrors> = 0;
        r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreContentType> = 0;
        r0.<org.jsoup.helper.HttpConnection$Request: int timeoutMilliseconds> = 3000;
        r0.<org.jsoup.helper.HttpConnection$Request: boolean followRedirects> = 1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.jsoup.helper.HttpConnection$Request: java.util.Collection data> = $r1;
        $r2 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;
        r0.<org.jsoup.helper.HttpConnection$Request: org.jsoup.Connection$Method method> = $r2;
        $r3 = r0.<org.jsoup.helper.HttpConnection$Request: java.util.Map headers>;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Encoding", "gzip");
        $r5 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.parser.Parser htmlParser()>();
        r0.<org.jsoup.helper.HttpConnection$Request: org.jsoup.parser.Parser parser> = $r5;
        return;
    }

    public int timeout()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        int $i0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $i0 = r0.<org.jsoup.helper.HttpConnection$Request: int timeoutMilliseconds>;
        return $i0;
    }

    public org.jsoup.helper.HttpConnection$Request timeout(int)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        int i0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Timeout milliseconds must be 0 (infinite) or greater");
        r0.<org.jsoup.helper.HttpConnection$Request: int timeoutMilliseconds> = i0;
        return r0;
    }

    public boolean followRedirects()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $z0 = r0.<org.jsoup.helper.HttpConnection$Request: boolean followRedirects>;
        return $z0;
    }

    public org.jsoup.Connection$Request followRedirects(boolean)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        boolean z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        z0 := @parameter0: boolean;
        r0.<org.jsoup.helper.HttpConnection$Request: boolean followRedirects> = z0;
        return r0;
    }

    public boolean ignoreHttpErrors()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $z0 = r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreHttpErrors>;
        return $z0;
    }

    public org.jsoup.Connection$Request ignoreHttpErrors(boolean)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        boolean z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        z0 := @parameter0: boolean;
        r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreHttpErrors> = z0;
        return r0;
    }

    public boolean ignoreContentType()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $z0 = r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreContentType>;
        return $z0;
    }

    public org.jsoup.Connection$Request ignoreContentType(boolean)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        boolean z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        z0 := @parameter0: boolean;
        r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreContentType> = z0;
        return r0;
    }

    public org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        org.jsoup.Connection$KeyVal r1;
        java.util.Collection $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: org.jsoup.Connection$KeyVal;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Key val must not be null");
        $r2 = r0.<org.jsoup.helper.HttpConnection$Request: java.util.Collection data>;
        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);
        return r0;
    }

    public java.util.Collection data()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.util.Collection $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Request: java.util.Collection data>;
        return $r1;
    }

    public org.jsoup.helper.HttpConnection$Request parser(org.jsoup.parser.Parser)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        org.jsoup.parser.Parser r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: org.jsoup.parser.Parser;
        r0.<org.jsoup.helper.HttpConnection$Request: org.jsoup.parser.Parser parser> = r1;
        return r0;
    }

    public org.jsoup.parser.Parser parser()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        org.jsoup.parser.Parser $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Request: org.jsoup.parser.Parser parser>;
        return $r1;
    }

    public volatile java.util.Map cookies()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies()>();
        return $r1;
    }

    public volatile boolean hasCookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: java.lang.String;
        $z0 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>(r1);
        return $z0;
    }

    public volatile java.lang.String cookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String cookie(java.lang.String)>(r1);
        return $r2;
    }

    public volatile java.util.Map headers()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers()>();
        return $r1;
    }

    public volatile boolean hasHeader(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: java.lang.String;
        $z0 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>(r1);
        return $z0;
    }

    public volatile java.lang.String header(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>(r1);
        return $r2;
    }

    public volatile org.jsoup.Connection$Method method()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        org.jsoup.Connection$Method $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method()>();
        return $r1;
    }

    public volatile java.net.URL url()
    {
        org.jsoup.helper.HttpConnection$Request r0;
        java.net.URL $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.net.URL url()>();
        return $r1;
    }

    public volatile org.jsoup.Connection$Request parser(org.jsoup.parser.Parser)
    {
        org.jsoup.helper.HttpConnection$Request r0, $r2;
        org.jsoup.parser.Parser r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: org.jsoup.parser.Parser;
        $r2 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$Request: org.jsoup.helper.HttpConnection$Request parser(org.jsoup.parser.Parser)>(r1);
        return $r2;
    }

    public volatile org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)
    {
        org.jsoup.helper.HttpConnection$Request r0, $r2;
        org.jsoup.Connection$KeyVal r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: org.jsoup.Connection$KeyVal;
        $r2 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$Request: org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal)>(r1);
        return $r2;
    }

    public volatile org.jsoup.Connection$Request timeout(int)
    {
        org.jsoup.helper.HttpConnection$Request r0, $r1;
        int i0;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$Request: org.jsoup.helper.HttpConnection$Request timeout(int)>(i0);
        return $r1;
    }

    void <init>(org.jsoup.helper.HttpConnection$1)
    {
        org.jsoup.helper.HttpConnection$Request r0;
        org.jsoup.helper.HttpConnection$1 r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Request;
        r1 := @parameter0: org.jsoup.helper.HttpConnection$1;
        specialinvoke r0.<org.jsoup.helper.HttpConnection$Request: void <init>()>();
        return;
    }
}
public class org.jsoup.helper.HttpConnection$Response extends org.jsoup.helper.HttpConnection$Base implements org.jsoup.Connection$Response
{
    private static final int MAX_REDIRECTS;
    private int statusCode;
    private java.lang.String statusMessage;
    private java.nio.ByteBuffer byteData;
    private java.lang.String charset;
    private java.lang.String contentType;
    private boolean executed;
    private int numRedirects;
    private org.jsoup.Connection$Request req;

    void <init>()
    {
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(null);
        r0.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 0;
        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = 0;
        return;
    }

    private void <init>(org.jsoup.helper.HttpConnection$Response) throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection$Response r0, r1;
        int $i0, $i1, $i2;
        java.io.IOException $r2;
        java.lang.Object[] $r3;
        java.net.URL $r4;
        java.lang.String $r5;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        r1 := @parameter0: org.jsoup.helper.HttpConnection$Response;
        specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(null);
        r0.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 0;
        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = 0;
        if r1 == null goto label0;

        $i0 = r1.<org.jsoup.helper.HttpConnection$Response: int numRedirects>;
        $i1 = $i0 + 1;
        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = $i1;
        $i2 = r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects>;
        if $i2 < 20 goto label0;

        $r2 = new java.io.IOException;
        $r3 = newarray (java.lang.Object)[1];
        $r4 = virtualinvoke r1.<org.jsoup.helper.HttpConnection$Response: java.net.URL url()>();
        $r3[0] = $r4;
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Too many redirects occurred trying to load URL %s", $r3);
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        return;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request) throws java.io.IOException
    {
        org.jsoup.Connection$Request r0;
        org.jsoup.helper.HttpConnection$Response $r1;

        r0 := @parameter0: org.jsoup.Connection$Request;
        $r1 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>(r0, null);
        return $r1;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request, org.jsoup.helper.HttpConnection$Response) throws java.io.IOException
    {
        org.jsoup.Connection$Request r0;
        org.jsoup.helper.HttpConnection$Response r1, r5, $r24, $r40;
        java.lang.String r2, $r21, $r23, $r30, $r36, $r38, $r45, $r49, $r50;
        java.net.HttpURLConnection r3;
        int i0, $i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r4, $r18, $r19, $r22;
        java.util.Iterator r6;
        java.util.Map$Entry r7;
        java.lang.Throwable r8, $r51;
        java.net.URL $r9, $r20, $r28, $r29;
        org.jsoup.Connection$Method $r10, $r11, $r13, $r14, $r25;
        java.util.Collection $r12, $r15, $r27;
        java.io.OutputStream $r16;
        java.io.IOException $r17;
        java.util.Map $r32;
        java.util.Set $r33;
        java.lang.Object $r34, $r35, $r37;
        java.io.BufferedInputStream r41, $r46;
        java.io.InputStream r42, $r43, $r44;
        java.util.zip.GZIPInputStream $r47;
        java.nio.ByteBuffer $r48;

        r0 := @parameter0: org.jsoup.Connection$Request;
        r1 := @parameter1: org.jsoup.helper.HttpConnection$Response;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "Request must not be null");
        $r9 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();
        r2 = virtualinvoke $r9.<java.net.URL: java.lang.String getProtocol()>();
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http");
        if $z1 != 0 goto label0;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("https");
        if $z2 == 0 goto label1;

     label0:
        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z3, "Only http & https protocols supported");
        $r10 = interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();
        $r11 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;
        if $r10 != $r11 goto label3;

        $r12 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();
        $i1 = interfaceinvoke $r12.<java.util.Collection: int size()>();
        if $i1 <= 0 goto label3;

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>(r0);

     label3:
        r3 = staticinvoke <org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>(r0);
        virtualinvoke r3.<java.net.HttpURLConnection: void connect()>();
        $r13 = interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();
        $r14 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;
        if $r13 != $r14 goto label4;

        $r15 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();
        $r16 = virtualinvoke r3.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();
        staticinvoke <org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>($r15, $r16);

     label4:
        i0 = virtualinvoke r3.<java.net.HttpURLConnection: int getResponseCode()>();
        z0 = 0;
        if i0 == 200 goto label7;

        if i0 == 302 goto label5;

        if i0 == 301 goto label5;

        if i0 != 303 goto label6;

     label5:
        z0 = 1;
        goto label7;

     label6:
        $z4 = interfaceinvoke r0.<org.jsoup.Connection$Request: boolean ignoreHttpErrors()>();
        if $z4 != 0 goto label7;

        $r17 = new java.io.IOException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error loading URL ");
        $r20 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();
        $r21 = virtualinvoke $r20.<java.net.URL: java.lang.String toString()>();
        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r23);
        throw $r17;

     label7:
        $r24 = new org.jsoup.helper.HttpConnection$Response;
        specialinvoke $r24.<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>(r1);
        r5 = $r24;
        specialinvoke r5.<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>(r3, r1);
        if z0 == 0 goto label10;

        $z5 = interfaceinvoke r0.<org.jsoup.Connection$Request: boolean followRedirects()>();
        if $z5 == 0 goto label10;

        $r25 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;
        interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>($r25);
        $r27 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();
        interfaceinvoke $r27.<java.util.Collection: void clear()>();
        $r28 = new java.net.URL;
        $r29 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();
        $r30 = virtualinvoke r5.<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>("Location");
        specialinvoke $r28.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r29, $r30);
        interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r28);
        $r32 = r5.<org.jsoup.helper.HttpConnection$Response: java.util.Map cookies>;
        $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Set entrySet()>();
        r6 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label8:
        $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z6 == 0 goto label9;

        $r34 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.util.Map$Entry) $r34;
        $r35 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r36 = (java.lang.String) $r35;
        $r37 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r38 = (java.lang.String) $r37;
        interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r36, $r38);
        goto label8;

     label9:
        $r40 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>(r0, r5);
        return $r40;

     label10:
        r5.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Request req> = r0;
        r41 = null;
        r42 = null;

     label11:
        $r43 = virtualinvoke r3.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();
        if $r43 == null goto label12;

        $r44 = virtualinvoke r3.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();
        goto label13;

     label12:
        $r44 = virtualinvoke r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label13:
        r42 = $r44;
        $z7 = virtualinvoke r5.<org.jsoup.helper.HttpConnection$Response: boolean hasHeader(java.lang.String)>("Content-Encoding");
        if $z7 == 0 goto label14;

        $r45 = virtualinvoke r5.<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>("Content-Encoding");
        $z8 = virtualinvoke $r45.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("gzip");
        if $z8 == 0 goto label14;

        $r46 = new java.io.BufferedInputStream;
        $r47 = new java.util.zip.GZIPInputStream;
        specialinvoke $r47.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r42);
        specialinvoke $r46.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r47);
        goto label15;

     label14:
        $r46 = new java.io.BufferedInputStream;
        specialinvoke $r46.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r42);

     label15:
        r41 = $r46;
        $r48 = staticinvoke <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>(r41);
        r5.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData> = $r48;
        $r49 = r5.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;
        $r50 = staticinvoke <org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>($r49);
        r5.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset> = $r50;

     label16:
        if r41 == null goto label17;

        virtualinvoke r41.<java.io.InputStream: void close()>();

     label17:
        if r42 == null goto label23;

        virtualinvoke r42.<java.io.InputStream: void close()>();
        goto label23;

     label18:
        $r51 := @caughtexception;

     label19:
        r8 = $r51;

     label20:
        if r41 == null goto label21;

        virtualinvoke r41.<java.io.InputStream: void close()>();

     label21:
        if r42 == null goto label22;

        virtualinvoke r42.<java.io.InputStream: void close()>();

     label22:
        throw r8;

     label23:
        r5.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 1;
        return r5;

        catch java.lang.Throwable from label11 to label16 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public int statusCode()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        int $i0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $i0 = r0.<org.jsoup.helper.HttpConnection$Response: int statusCode>;
        return $i0;
    }

    public java.lang.String statusMessage()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String statusMessage>;
        return $r1;
    }

    public java.lang.String charset()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;
        return $r1;
    }

    public java.lang.String contentType()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;
        return $r1;
    }

    public org.jsoup.nodes.Document parse() throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection$Response r0;
        org.jsoup.nodes.Document r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.Connection$Request $r2, $r17;
        java.lang.String $r3, $r4, $r5, $r6, $r9, $r11, $r12, $r14, $r16, $r23;
        java.io.IOException $r7;
        java.lang.Object[] $r8;
        java.net.URL $r10, $r15;
        java.nio.ByteBuffer $r13, $r19;
        org.jsoup.parser.Parser $r18;
        org.jsoup.nodes.Document$OutputSettings $r21;
        java.nio.charset.Charset $r22;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before parsing response");
        $r2 = r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Request req>;
        $z1 = interfaceinvoke $r2.<org.jsoup.Connection$Request: boolean ignoreContentType()>();
        if $z1 != 0 goto label1;

        $r3 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;
        if $r3 == null goto label0;

        $r4 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;
        $z2 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("text/");
        if $z2 != 0 goto label1;

        $r5 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;
        $z3 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("application/xml");
        if $z3 != 0 goto label1;

        $r6 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;
        $z4 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("application/xhtml+xml");
        if $z4 != 0 goto label1;

     label0:
        $r7 = new java.io.IOException;
        $r8 = newarray (java.lang.Object)[2];
        $r9 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;
        $r8[0] = $r9;
        $r10 = r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url>;
        $r11 = virtualinvoke $r10.<java.net.URL: java.lang.String toString()>();
        $r8[1] = $r11;
        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unhandled content type \"%s\" on URL %s. Must be text/*, application/xml, or application/xhtml+xml", $r8);
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r12);
        throw $r7;

     label1:
        $r13 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;
        $r14 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;
        $r15 = r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url>;
        $r16 = virtualinvoke $r15.<java.net.URL: java.lang.String toExternalForm()>();
        $r17 = r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Request req>;
        $r18 = interfaceinvoke $r17.<org.jsoup.Connection$Request: org.jsoup.parser.Parser parser()>();
        r1 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>($r13, $r14, $r16, $r18);
        $r19 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;
        virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();
        $r21 = virtualinvoke r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();
        $r22 = virtualinvoke $r21.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset()>();
        $r23 = virtualinvoke $r22.<java.nio.charset.Charset: java.lang.String name()>();
        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset> = $r23;
        return r1;
    }

    public java.lang.String body()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.lang.String r1, $r2, $r6;
        boolean $z0;
        java.nio.charset.Charset $r3, $r7;
        java.nio.ByteBuffer $r4, $r8, $r10;
        java.nio.CharBuffer $r5, $r9;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before getting response body");
        $r2 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;
        if $r2 != null goto label0;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");
        $r4 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;
        $r5 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r4);
        r1 = virtualinvoke $r5.<java.nio.CharBuffer: java.lang.String toString()>();
        goto label1;

     label0:
        $r6 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;
        $r7 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r6);
        $r8 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;
        $r9 = virtualinvoke $r7.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r8);
        r1 = virtualinvoke $r9.<java.nio.CharBuffer: java.lang.String toString()>();

     label1:
        $r10 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();
        return r1;
    }

    public byte[] bodyAsBytes()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;
        java.nio.ByteBuffer $r1;
        byte[] $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before getting response body");
        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;
        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();
        return $r2;
    }

    private static java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request) throws java.io.IOException
    {
        org.jsoup.Connection$Request r0;
        java.net.HttpURLConnection r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.net.URL $r4;
        java.net.URLConnection $r5;
        org.jsoup.Connection$Method $r6, $r8, $r9;
        java.lang.String $r7, $r11, $r16, $r18;
        int $i0, $i1, $i2;
        java.util.Map $r10, $r12;
        java.util.Set $r13;
        boolean $z0;
        java.lang.Object $r14, $r15, $r17;

        r0 := @parameter0: org.jsoup.Connection$Request;
        $r4 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();
        $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();
        r1 = (java.net.HttpURLConnection) $r5;
        $r6 = interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();
        $r7 = virtualinvoke $r6.<org.jsoup.Connection$Method: java.lang.String name()>();
        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r7);
        virtualinvoke r1.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);
        $i0 = interfaceinvoke r0.<org.jsoup.Connection$Request: int timeout()>();
        virtualinvoke r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);
        $i1 = interfaceinvoke r0.<org.jsoup.Connection$Request: int timeout()>();
        virtualinvoke r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1);
        $r8 = interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();
        $r9 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;
        if $r8 != $r9 goto label0;

        virtualinvoke r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label0:
        $r10 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Map cookies()>();
        $i2 = interfaceinvoke $r10.<java.util.Map: int size()>();
        if $i2 <= 0 goto label1;

        $r11 = staticinvoke <org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>(r0);
        virtualinvoke r1.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Cookie", $r11);

     label1:
        $r12 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Map headers()>();
        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r14;
        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r16 = (java.lang.String) $r15;
        $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r18 = (java.lang.String) $r17;
        virtualinvoke r1.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r16, $r18);
        goto label2;

     label3:
        return r1;
    }

    private void setupFromConnection(java.net.HttpURLConnection, org.jsoup.Connection$Response) throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.net.HttpURLConnection r1;
        org.jsoup.Connection$Response r2;
        java.util.Map r3, $r11;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.String $r6, $r9, $r10, $r15, $r17, $r19;
        org.jsoup.Connection$Method $r7;
        java.net.URL $r8;
        int $i0;
        java.util.Set $r12;
        boolean $z0, $z1;
        java.lang.Object $r13, $r14, $r16, $r18;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        r1 := @parameter0: java.net.HttpURLConnection;
        r2 := @parameter1: org.jsoup.Connection$Response;
        $r6 = virtualinvoke r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();
        $r7 = staticinvoke <org.jsoup.Connection$Method: org.jsoup.Connection$Method valueOf(java.lang.String)>($r6);
        r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Method method> = $r7;
        $r8 = virtualinvoke r1.<java.net.HttpURLConnection: java.net.URL getURL()>();
        r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url> = $r8;
        $i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>();
        r0.<org.jsoup.helper.HttpConnection$Response: int statusCode> = $i0;
        $r9 = virtualinvoke r1.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();
        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String statusMessage> = $r9;
        $r10 = virtualinvoke r1.<java.net.HttpURLConnection: java.lang.String getContentType()>();
        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType> = $r10;
        r3 = virtualinvoke r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();
        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: void processResponseHeaders(java.util.Map)>(r3);
        if r2 == null goto label2;

        $r11 = interfaceinvoke r2.<org.jsoup.Connection$Response: java.util.Map cookies()>();
        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r13;
        $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r15 = (java.lang.String) $r14;
        $z1 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: boolean hasCookie(java.lang.String)>($r15);
        if $z1 != 0 goto label1;

        $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r17 = (java.lang.String) $r16;
        $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r19 = (java.lang.String) $r18;
        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r17, $r19);

     label1:
        goto label0;

     label2:
        return;
    }

    void processResponseHeaders(java.util.Map)
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.util.Map r1;
        java.util.Iterator r2, r6;
        java.util.Map$Entry r3;
        java.lang.String r4, r7, r9, r10, $r17, $r18, $r21;
        java.util.List r5;
        org.jsoup.parser.TokenQueue r8, $r16;
        java.util.Set $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r12, $r13, $r14, $r15, $r20;
        int $i0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        r1 := @parameter0: java.util.Map;
        $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label9;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r12;
        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        r4 = (java.lang.String) $r13;
        if r4 != null goto label1;

        goto label0;

     label1:
        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        r5 = (java.util.List) $r14;
        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-Cookie");
        if $z1 == 0 goto label7;

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label6;

        $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r15;
        if r7 != null goto label3;

        goto label2;

     label3:
        $r16 = new org.jsoup.parser.TokenQueue;
        specialinvoke $r16.<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>(r7);
        r8 = $r16;
        $r17 = virtualinvoke r8.<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>("=");
        r9 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();
        $r18 = virtualinvoke r8.<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>(";");
        r10 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();
        if r10 != null goto label4;

        r10 = "";

     label4:
        if r9 == null goto label5;

        $i0 = virtualinvoke r9.<java.lang.String: int length()>();
        if $i0 <= 0 goto label5;

        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>(r9, r10);

     label5:
        goto label2;

     label6:
        goto label8;

     label7:
        $z3 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();
        if $z3 != 0 goto label8;

        $r20 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);
        $r21 = (java.lang.String) $r20;
        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>(r4, $r21);

     label8:
        goto label0;

     label9:
        return;
    }

    private static void writePost(java.util.Collection, java.io.OutputStream) throws java.io.IOException
    {
        java.util.Collection r0;
        java.io.OutputStream r1;
        java.io.OutputStreamWriter $r2, r3;
        boolean z0, $z1;
        java.util.Iterator r4;
        org.jsoup.Connection$KeyVal r5;
        java.lang.Object $r6;
        java.lang.String $r8, $r9, $r10, $r11;

        r0 := @parameter0: java.util.Collection;
        r1 := @parameter1: java.io.OutputStream;
        $r2 = new java.io.OutputStreamWriter;
        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, "UTF-8");
        r3 = $r2;
        z0 = 1;
        r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.jsoup.Connection$KeyVal) $r6;
        if z0 != 0 goto label1;

        virtualinvoke r3.<java.io.OutputStreamWriter: java.io.Writer append(char)>(38);
        goto label2;

     label1:
        z0 = 0;

     label2:
        $r8 = interfaceinvoke r5.<org.jsoup.Connection$KeyVal: java.lang.String key()>();
        $r9 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "UTF-8");
        virtualinvoke r3.<java.io.OutputStreamWriter: void write(java.lang.String)>($r9);
        virtualinvoke r3.<java.io.OutputStreamWriter: void write(int)>(61);
        $r10 = interfaceinvoke r5.<org.jsoup.Connection$KeyVal: java.lang.String value()>();
        $r11 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r10, "UTF-8");
        virtualinvoke r3.<java.io.OutputStreamWriter: void write(java.lang.String)>($r11);
        goto label0;

     label3:
        virtualinvoke r3.<java.io.OutputStreamWriter: void close()>();
        return;
    }

    private static java.lang.String getRequestCookieString(org.jsoup.Connection$Request)
    {
        org.jsoup.Connection$Request r0;
        java.lang.StringBuilder $r1, r2, $r11, $r12;
        boolean z0, $z1;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.lang.Object $r7, $r9, $r13;
        java.lang.String $r10, $r14, $r16;

        r0 := @parameter0: org.jsoup.Connection$Request;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        z0 = 1;
        $r5 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Map cookies()>();
        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r7;
        if z0 != 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");
        goto label2;

     label1:
        z0 = 0;

     label2:
        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r10 = (java.lang.String) $r9;
        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r14 = (java.lang.String) $r13;
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        goto label0;

     label3:
        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;
    }

    private static void serialiseRequestUrl(org.jsoup.Connection$Request) throws java.io.IOException
    {
        org.jsoup.Connection$Request r0;
        java.net.URL r1, $r27;
        java.lang.StringBuilder r2, $r5, $r7, $r8, $r10, $r12, $r22, $r23;
        boolean z0, $z1;
        java.util.Iterator r3;
        org.jsoup.Connection$KeyVal r4;
        java.lang.String $r6, $r9, $r11, $r14, $r15, $r20, $r21, $r24, $r25, $r28;
        java.util.Collection $r17, $r30;
        java.lang.Object $r18;

        r0 := @parameter0: org.jsoup.Connection$Request;
        r1 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r2 = $r5;
        z0 = 1;
        $r6 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");
        $r9 = virtualinvoke r1.<java.net.URL: java.lang.String getAuthority()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");
        $r14 = virtualinvoke r1.<java.net.URL: java.lang.String getQuery()>();
        if $r14 == null goto label0;

        $r15 = virtualinvoke r1.<java.net.URL: java.lang.String getQuery()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        z0 = 0;

     label0:
        $r17 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();
        r3 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.Connection$KeyVal) $r18;
        if z0 != 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);
        goto label3;

     label2:
        z0 = 0;

     label3:
        $r20 = interfaceinvoke r4.<org.jsoup.Connection$KeyVal: java.lang.String key()>();
        $r21 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r20, "UTF-8");
        $r22 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
        $r24 = interfaceinvoke r4.<org.jsoup.Connection$KeyVal: java.lang.String value()>();
        $r25 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r24, "UTF-8");
        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        goto label1;

     label4:
        $r27 = new java.net.URL;
        $r28 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r27.<java.net.URL: void <init>(java.lang.String)>($r28);
        interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r27);
        $r30 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();
        interfaceinvoke $r30.<java.util.Collection: void clear()>();
        return;
    }

    public volatile java.util.Map cookies()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies()>();
        return $r1;
    }

    public volatile boolean hasCookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        r1 := @parameter0: java.lang.String;
        $z0 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>(r1);
        return $z0;
    }

    public volatile java.lang.String cookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String cookie(java.lang.String)>(r1);
        return $r2;
    }

    public volatile java.util.Map headers()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers()>();
        return $r1;
    }

    public volatile boolean hasHeader(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        r1 := @parameter0: java.lang.String;
        $z0 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>(r1);
        return $z0;
    }

    public volatile java.lang.String header(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>(r1);
        return $r2;
    }

    public volatile org.jsoup.Connection$Method method()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        org.jsoup.Connection$Method $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method()>();
        return $r1;
    }

    public volatile java.net.URL url()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.net.URL $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;
        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.net.URL url()>();
        return $r1;
    }
}
public class org.jsoup.helper.HttpConnection extends java.lang.Object implements org.jsoup.Connection
{
    private org.jsoup.Connection$Request req;
    private org.jsoup.Connection$Response res;

    public static org.jsoup.Connection connect(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.helper.HttpConnection $r1, r2;

        r0 := @parameter0: java.lang.String;
        $r1 = new org.jsoup.helper.HttpConnection;
        specialinvoke $r1.<org.jsoup.helper.HttpConnection: void <init>()>();
        r2 = $r1;
        interfaceinvoke r2.<org.jsoup.Connection: org.jsoup.Connection url(java.lang.String)>(r0);
        return r2;
    }

    public static org.jsoup.Connection connect(java.net.URL)
    {
        java.net.URL r0;
        org.jsoup.helper.HttpConnection $r1, r2;

        r0 := @parameter0: java.net.URL;
        $r1 = new org.jsoup.helper.HttpConnection;
        specialinvoke $r1.<org.jsoup.helper.HttpConnection: void <init>()>();
        r2 = $r1;
        interfaceinvoke r2.<org.jsoup.Connection: org.jsoup.Connection url(java.net.URL)>(r0);
        return r2;
    }

    private void <init>()
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.helper.HttpConnection$Request $r1;
        org.jsoup.helper.HttpConnection$Response $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new org.jsoup.helper.HttpConnection$Request;
        specialinvoke $r1.<org.jsoup.helper.HttpConnection$Request: void <init>(org.jsoup.helper.HttpConnection$1)>(null);
        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req> = $r1;
        $r2 = new org.jsoup.helper.HttpConnection$Response;
        specialinvoke $r2.<org.jsoup.helper.HttpConnection$Response: void <init>()>();
        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res> = $r2;
        return;
    }

    public org.jsoup.Connection url(java.net.URL)
    {
        org.jsoup.helper.HttpConnection r0;
        java.net.URL r1;
        org.jsoup.Connection$Request $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.net.URL;
        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>(r1);
        return r0;
    }

    public org.jsoup.Connection url(java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        java.lang.String r1, $r11;
        java.net.MalformedURLException r2, $r6;
        org.jsoup.Connection$Request $r3;
        java.net.URL $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, "Must supply a valid URL");

     label0:
        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        $r4 = new java.net.URL;
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>(r1);
        interfaceinvoke $r3.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r4);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new java.lang.IllegalArgumentException;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed URL: ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r2);
        throw $r7;

     label3:
        return r0;

        catch java.net.MalformedURLException from label0 to label1 with label2;
    }

    public org.jsoup.Connection userAgent(java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        java.lang.String r1;
        org.jsoup.Connection$Request $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "User agent must not be null");
        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>("User-Agent", r1);
        return r0;
    }

    public org.jsoup.Connection timeout(int)
    {
        org.jsoup.helper.HttpConnection r0;
        int i0;
        org.jsoup.Connection$Request $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;
        i0 := @parameter0: int;
        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request timeout(int)>(i0);
        return r0;
    }

    public org.jsoup.Connection followRedirects(boolean)
    {
        org.jsoup.helper.HttpConnection r0;
        boolean z0;
        org.jsoup.Connection$Request $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;
        z0 := @parameter0: boolean;
        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request followRedirects(boolean)>(z0);
        return r0;
    }

    public org.jsoup.Connection referrer(java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        java.lang.String r1;
        org.jsoup.Connection$Request $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Referrer must not be null");
        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>("Referer", r1);
        return r0;
    }

    public org.jsoup.Connection method(org.jsoup.Connection$Method)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Method r1;
        org.jsoup.Connection$Request $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: org.jsoup.Connection$Method;
        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>(r1);
        return r0;
    }

    public org.jsoup.Connection ignoreHttpErrors(boolean)
    {
        org.jsoup.helper.HttpConnection r0;
        boolean z0;
        org.jsoup.Connection$Request $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;
        z0 := @parameter0: boolean;
        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request ignoreHttpErrors(boolean)>(z0);
        return r0;
    }

    public org.jsoup.Connection ignoreContentType(boolean)
    {
        org.jsoup.helper.HttpConnection r0;
        boolean z0;
        org.jsoup.Connection$Request $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;
        z0 := @parameter0: boolean;
        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request ignoreContentType(boolean)>(z0);
        return r0;
    }

    public org.jsoup.Connection data(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        java.lang.String r1, r2;
        org.jsoup.Connection$Request $r3;
        org.jsoup.helper.HttpConnection$KeyVal $r4;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        $r4 = staticinvoke <org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String)>(r1, r2);
        interfaceinvoke $r3.<org.jsoup.Connection$Request: org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)>($r4);
        return r0;
    }

    public org.jsoup.Connection data(java.util.Map)
    {
        org.jsoup.helper.HttpConnection r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r7, $r9;
        org.jsoup.Connection$Request $r6;
        java.lang.String $r8, $r10;
        org.jsoup.helper.HttpConnection$KeyVal $r11;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.util.Map;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Data map must not be null");
        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r5;
        $r6 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r8 = (java.lang.String) $r7;
        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r10 = (java.lang.String) $r9;
        $r11 = staticinvoke <org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String)>($r8, $r10);
        interfaceinvoke $r6.<org.jsoup.Connection$Request: org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)>($r11);
        goto label0;

     label1:
        return r0;
    }

    public transient org.jsoup.Connection data(java.lang.String[])
    {
        org.jsoup.helper.HttpConnection r0;
        java.lang.String[] r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, r3;
        boolean $z0;
        org.jsoup.Connection$Request $r4;
        org.jsoup.helper.HttpConnection$KeyVal $r5;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.lang.String[];
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Data key value pairs must not be null");
        $i1 = lengthof r1;
        $i2 = $i1 % 2;
        if $i2 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Must supply an even number of key value pairs");
        i0 = 0;

     label2:
        $i3 = lengthof r1;
        if i0 >= $i3 goto label3;

        r2 = r1[i0];
        $i4 = i0 + 1;
        r3 = r1[$i4];
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r2, "Data key must not be empty");
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "Data value must not be null");
        $r4 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        $r5 = staticinvoke <org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String)>(r2, r3);
        interfaceinvoke $r4.<org.jsoup.Connection$Request: org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)>($r5);
        i0 = i0 + 2;
        goto label2;

     label3:
        return r0;
    }

    public org.jsoup.Connection header(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        java.lang.String r1, r2;
        org.jsoup.Connection$Request $r3;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r3.<org.jsoup.Connection$Request: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>(r1, r2);
        return r0;
    }

    public org.jsoup.Connection cookie(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        java.lang.String r1, r2;
        org.jsoup.Connection$Request $r3;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r3.<org.jsoup.Connection$Request: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>(r1, r2);
        return r0;
    }

    public org.jsoup.Connection cookies(java.util.Map)
    {
        org.jsoup.helper.HttpConnection r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r7, $r9;
        org.jsoup.Connection$Request $r6;
        java.lang.String $r8, $r10;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: java.util.Map;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "Cookie map must not be null");
        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r5;
        $r6 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r8 = (java.lang.String) $r7;
        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r10 = (java.lang.String) $r9;
        interfaceinvoke $r6.<org.jsoup.Connection$Request: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r8, $r10);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.Connection parser(org.jsoup.parser.Parser)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.parser.Parser r1;
        org.jsoup.Connection$Request $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: org.jsoup.parser.Parser;
        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Request parser(org.jsoup.parser.Parser)>(r1);
        return r0;
    }

    public org.jsoup.nodes.Document get() throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Method $r1;
        org.jsoup.Connection$Request $r2;
        org.jsoup.Connection$Response $r5;
        org.jsoup.nodes.Document $r6;

        r0 := @this: org.jsoup.helper.HttpConnection;
        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        $r1 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;
        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>($r1);
        virtualinvoke r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response execute()>();
        $r5 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res>;
        $r6 = interfaceinvoke $r5.<org.jsoup.Connection$Response: org.jsoup.nodes.Document parse()>();
        return $r6;
    }

    public org.jsoup.nodes.Document post() throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Method $r1;
        org.jsoup.Connection$Request $r2;
        org.jsoup.Connection$Response $r5;
        org.jsoup.nodes.Document $r6;

        r0 := @this: org.jsoup.helper.HttpConnection;
        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        $r1 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;
        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>($r1);
        virtualinvoke r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response execute()>();
        $r5 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res>;
        $r6 = interfaceinvoke $r5.<org.jsoup.Connection$Response: org.jsoup.nodes.Document parse()>();
        return $r6;
    }

    public org.jsoup.Connection$Response execute() throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;
        org.jsoup.helper.HttpConnection$Response $r2;
        org.jsoup.Connection$Response $r3;

        r0 := @this: org.jsoup.helper.HttpConnection;
        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        $r2 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request)>($r1);
        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res> = $r2;
        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res>;
        return $r3;
    }

    public org.jsoup.Connection$Request request()
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;
        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;
        return $r1;
    }

    public org.jsoup.Connection request(org.jsoup.Connection$Request)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request r1;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: org.jsoup.Connection$Request;
        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req> = r1;
        return r0;
    }

    public org.jsoup.Connection$Response response()
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Response $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;
        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res>;
        return $r1;
    }

    public org.jsoup.Connection response(org.jsoup.Connection$Response)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Response r1;

        r0 := @this: org.jsoup.helper.HttpConnection;
        r1 := @parameter0: org.jsoup.Connection$Response;
        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res> = r1;
        return r0;
    }
}
public final class org.jsoup.helper.StringUtil extends java.lang.Object
{
    private static final java.lang.String[] padding;

    public void <init>()
    {
        org.jsoup.helper.StringUtil r0;

        r0 := @this: org.jsoup.helper.StringUtil;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String join(java.util.Collection, java.lang.String)
    {
        java.util.Collection r0;
        java.lang.String r1, $r3;
        java.util.Iterator $r2;

        r0 := @parameter0: java.util.Collection;
        r1 := @parameter1: java.lang.String;
        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();
        $r3 = staticinvoke <org.jsoup.helper.StringUtil: java.lang.String join(java.util.Iterator,java.lang.String)>($r2, r1);
        return $r3;
    }

    public static java.lang.String join(java.util.Iterator, java.lang.String)
    {
        java.util.Iterator r0;
        java.lang.String r1, r2, $r9;
        java.lang.StringBuilder r3, $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4, $r7;

        r0 := @parameter0: java.util.Iterator;
        r1 := @parameter1: java.lang.String;
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        return "";

     label0:
        $r4 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();
        r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label1;

        return r2;

     label1:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(64);
        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label2:
        $z2 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label3;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        goto label2;

     label3:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    public static java.lang.String padding(int)
    {
        int i0, i1, $i2;
        char[] r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String[] $r2, $r3;
        java.lang.String $r4, $r5;

        i0 := @parameter0: int;
        if i0 >= 0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("width must be > 0");
        throw $r1;

     label0:
        $r2 = <org.jsoup.helper.StringUtil: java.lang.String[] padding>;
        $i2 = lengthof $r2;
        if i0 >= $i2 goto label1;

        $r3 = <org.jsoup.helper.StringUtil: java.lang.String[] padding>;
        $r4 = $r3[i0];
        return $r4;

     label1:
        r0 = newarray (char)[i0];
        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r0[i1] = 32;
        i1 = i1 + 1;
        goto label2;

     label3:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r0);
        return $r5;
    }

    public static boolean isBlank(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label0;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i2 != 0 goto label1;

     label0:
        return 1;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $i3 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i1);
        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean isWhitespace(int)>($i3);
        if $z0 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;
        goto label2;

     label4:
        return 1;
    }

    public static boolean isNumeric(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label0;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i2 != 0 goto label1;

     label0:
        return 0;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $i3 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i1);
        $z0 = staticinvoke <java.lang.Character: boolean isDigit(int)>($i3);
        if $z0 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;
        goto label2;

     label4:
        return 1;
    }

    public static boolean isWhitespace(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        if i0 == 32 goto label0;

        if i0 == 9 goto label0;

        if i0 == 10 goto label0;

        if i0 == 12 goto label0;

        if i0 != 13 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String normaliseWhitespace(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r1, r2;
        boolean z0, z1, $z2;
        int i0, i1, i2, $i3;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.StringBuilder;
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i3);
        r2 = $r1;
        z0 = 0;
        z1 = 0;
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = 0;

     label0:
        if i1 >= i0 goto label5;

        i2 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i1);
        $z2 = staticinvoke <org.jsoup.helper.StringUtil: boolean isWhitespace(int)>(i2);
        if $z2 == 0 goto label3;

        if z0 == 0 goto label1;

        z1 = 1;
        goto label4;

     label1:
        if i2 == 32 goto label2;

        z1 = 1;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        z0 = 1;
        goto label4;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i2);
        z0 = 0;

     label4:
        i1 = i1 + 1;
        goto label0;

     label5:
        if z1 == 0 goto label6;

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label7;

     label6:
        $r5 = r0;

     label7:
        return $r5;
    }

    public static transient boolean in(java.lang.String, java.lang.String[])
    {
        java.lang.String r0, r3;
        java.lang.String[] r1, r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String[];
        r2 = r1;
        i0 = lengthof r2;
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[11];
        $r0[0] = "";
        $r0[1] = " ";
        $r0[2] = "  ";
        $r0[3] = "   ";
        $r0[4] = "    ";
        $r0[5] = "     ";
        $r0[6] = "      ";
        $r0[7] = "       ";
        $r0[8] = "        ";
        $r0[9] = "         ";
        $r0[10] = "          ";
        <org.jsoup.helper.StringUtil: java.lang.String[] padding> = $r0;
        return;
    }
}
public final class org.jsoup.helper.Validate extends java.lang.Object
{

    private void <init>()
    {
        org.jsoup.helper.Validate r0;

        r0 := @this: org.jsoup.helper.Validate;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void notNull(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.Object;
        if r0 != null goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Object must not be null");
        throw $r1;

     label0:
        return;
    }

    public static void notNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.String;
        if r0 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);
        throw $r2;

     label0:
        return;
    }

    public static void isTrue(boolean)
    {
        boolean z0;
        java.lang.IllegalArgumentException $r0;

        z0 := @parameter0: boolean;
        if z0 != 0 goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must be true");
        throw $r0;

     label0:
        return;
    }

    public static void isTrue(boolean, java.lang.String)
    {
        boolean z0;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;

        z0 := @parameter0: boolean;
        r0 := @parameter1: java.lang.String;
        if z0 != 0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0);
        throw $r1;

     label0:
        return;
    }

    public static void isFalse(boolean)
    {
        boolean z0;
        java.lang.IllegalArgumentException $r0;

        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must be false");
        throw $r0;

     label0:
        return;
    }

    public static void isFalse(boolean, java.lang.String)
    {
        boolean z0;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;

        z0 := @parameter0: boolean;
        r0 := @parameter1: java.lang.String;
        if z0 == 0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0);
        throw $r1;

     label0:
        return;
    }

    public static void noNullElements(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];
        staticinvoke <org.jsoup.helper.Validate: void noNullElements(java.lang.Object[],java.lang.String)>(r0, "Array must not contain any null objects");
        return;
    }

    public static void noNullElements(java.lang.Object[], java.lang.String)
    {
        java.lang.Object[] r0, r2;
        java.lang.String r1;
        int i0, i1;
        java.lang.Object r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: java.lang.Object[];
        r1 := @parameter1: java.lang.String;
        r2 = r0;
        i0 = lengthof r2;
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        if r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);
        throw $r4;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return;
    }

    public static void notEmpty(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("String must not be empty");
        throw $r1;

     label1:
        return;
    }

    public static void notEmpty(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        if r0 == null goto label0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);
        throw $r2;

     label1:
        return;
    }

    public static void fail(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0);
        throw $r1;
    }
}
public class org.jsoup.Jsoup extends java.lang.Object
{

    private void <init>()
    {
        org.jsoup.Jsoup r0;

        r0 := @this: org.jsoup.Jsoup;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.jsoup.nodes.Document $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>(r0, r1);
        return $r2;
    }

    public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String, org.jsoup.parser.Parser)
    {
        java.lang.String r0, r1;
        org.jsoup.parser.Parser r2;
        org.jsoup.nodes.Document $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: org.jsoup.parser.Parser;
        $r3 = virtualinvoke r2.<org.jsoup.parser.Parser: org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String)>(r0, r1);
        return $r3;
    }

    public static org.jsoup.nodes.Document parse(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.nodes.Document $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>(r0, "");
        return $r1;
    }

    public static org.jsoup.Connection connect(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.Connection $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.jsoup.helper.HttpConnection: org.jsoup.Connection connect(java.lang.String)>(r0);
        return $r1;
    }

    public static org.jsoup.nodes.Document parse(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.File r0;
        java.lang.String r1, r2;
        org.jsoup.nodes.Document $r3;

        r0 := @parameter0: java.io.File;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        $r3 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document load(java.io.File,java.lang.String,java.lang.String)>(r0, r1, r2);
        return $r3;
    }

    public static org.jsoup.nodes.Document parse(java.io.File, java.lang.String) throws java.io.IOException
    {
        java.io.File r0;
        java.lang.String r1, $r2;
        org.jsoup.nodes.Document $r3;

        r0 := @parameter0: java.io.File;
        r1 := @parameter1: java.lang.String;
        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();
        $r3 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document load(java.io.File,java.lang.String,java.lang.String)>(r0, r1, $r2);
        return $r3;
    }

    public static org.jsoup.nodes.Document parse(java.io.InputStream, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.lang.String r1, r2;
        org.jsoup.nodes.Document $r3;

        r0 := @parameter0: java.io.InputStream;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        $r3 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String)>(r0, r1, r2);
        return $r3;
    }

    public static org.jsoup.nodes.Document parse(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.lang.String r1, r2;
        org.jsoup.parser.Parser r3;
        org.jsoup.nodes.Document $r4;

        r0 := @parameter0: java.io.InputStream;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: org.jsoup.parser.Parser;
        $r4 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>(r0, r1, r2, r3);
        return $r4;
    }

    public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.jsoup.nodes.Document $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>(r0, r1);
        return $r2;
    }

    public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.nodes.Document $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>(r0, "");
        return $r1;
    }

    public static org.jsoup.nodes.Document parse(java.net.URL, int) throws java.io.IOException
    {
        java.net.URL r0;
        int i0;
        org.jsoup.Connection r1;
        org.jsoup.nodes.Document $r3;

        r0 := @parameter0: java.net.URL;
        i0 := @parameter1: int;
        r1 = staticinvoke <org.jsoup.helper.HttpConnection: org.jsoup.Connection connect(java.net.URL)>(r0);
        interfaceinvoke r1.<org.jsoup.Connection: org.jsoup.Connection timeout(int)>(i0);
        $r3 = interfaceinvoke r1.<org.jsoup.Connection: org.jsoup.nodes.Document get()>();
        return $r3;
    }

    public static java.lang.String clean(java.lang.String, java.lang.String, org.jsoup.safety.Whitelist)
    {
        java.lang.String r0, r1, $r8;
        org.jsoup.safety.Whitelist r2;
        org.jsoup.nodes.Document r3, r5;
        org.jsoup.safety.Cleaner r4, $r6;
        org.jsoup.nodes.Element $r7;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: org.jsoup.safety.Whitelist;
        r3 = staticinvoke <org.jsoup.Jsoup: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>(r0, r1);
        $r6 = new org.jsoup.safety.Cleaner;
        specialinvoke $r6.<org.jsoup.safety.Cleaner: void <init>(org.jsoup.safety.Whitelist)>(r2);
        r4 = $r6;
        r5 = virtualinvoke r4.<org.jsoup.safety.Cleaner: org.jsoup.nodes.Document clean(org.jsoup.nodes.Document)>(r3);
        $r7 = virtualinvoke r5.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        $r8 = virtualinvoke $r7.<org.jsoup.nodes.Element: java.lang.String html()>();
        return $r8;
    }

    public static java.lang.String clean(java.lang.String, org.jsoup.safety.Whitelist)
    {
        java.lang.String r0, $r2;
        org.jsoup.safety.Whitelist r1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.jsoup.safety.Whitelist;
        $r2 = staticinvoke <org.jsoup.Jsoup: java.lang.String clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist)>(r0, "", r1);
        return $r2;
    }

    public static boolean isValid(java.lang.String, org.jsoup.safety.Whitelist)
    {
        java.lang.String r0;
        org.jsoup.safety.Whitelist r1;
        org.jsoup.nodes.Document r2;
        org.jsoup.safety.Cleaner r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.jsoup.safety.Whitelist;
        r2 = staticinvoke <org.jsoup.Jsoup: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>(r0, "");
        $r4 = new org.jsoup.safety.Cleaner;
        specialinvoke $r4.<org.jsoup.safety.Cleaner: void <init>(org.jsoup.safety.Whitelist)>(r1);
        r3 = $r4;
        $z0 = virtualinvoke r3.<org.jsoup.safety.Cleaner: boolean isValid(org.jsoup.nodes.Document)>(r2);
        return $z0;
    }
}
public class org.jsoup.nodes.Attribute extends java.lang.Object implements java.util.Map$Entry, java.lang.Cloneable
{
    private java.lang.String key;
    private java.lang.String value;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String r1, r2, $r3, $r4;

        r0 := @this: org.jsoup.nodes.Attribute;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.jsoup.nodes.Attribute: java.lang.String key> = $r4;
        r0.<org.jsoup.nodes.Attribute: java.lang.String value> = r2;
        return;
    }

    public java.lang.String getKey()
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        return $r1;
    }

    public void setKey(java.lang.String)
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String r1, $r2, $r3;

        r0 := @this: org.jsoup.nodes.Attribute;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.jsoup.nodes.Attribute: java.lang.String key> = $r3;
        return;
    }

    public java.lang.String getValue()
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = r0.<org.jsoup.nodes.Attribute: java.lang.String value>;
        return $r1;
    }

    public java.lang.String setValue(java.lang.String)
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.nodes.Attribute;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r2 = r0.<org.jsoup.nodes.Attribute: java.lang.String value>;
        r0.<org.jsoup.nodes.Attribute: java.lang.String value> = r1;
        return r2;
    }

    public java.lang.String html()
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r9, $r10;
        org.jsoup.nodes.Document $r2;
        java.lang.String $r3, $r6, $r8, $r11;
        org.jsoup.nodes.Document$OutputSettings $r7;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r6 = r0.<org.jsoup.nodes.Attribute: java.lang.String value>;
        $r2 = new org.jsoup.nodes.Document;
        specialinvoke $r2.<org.jsoup.nodes.Document: void <init>(java.lang.String)>("");
        $r7 = virtualinvoke $r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();
        $r8 = staticinvoke <org.jsoup.nodes.Entities: java.lang.String escape(java.lang.String,org.jsoup.nodes.Document$OutputSettings)>($r6, $r7);
        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r11;
    }

    protected void html(java.lang.StringBuilder, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.StringBuilder r1, $r4, $r5, $r8;
        org.jsoup.nodes.Document$OutputSettings r2;
        java.lang.String $r3, $r6, $r7;

        r0 := @this: org.jsoup.nodes.Attribute;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 := @parameter1: org.jsoup.nodes.Document$OutputSettings;
        $r3 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r6 = r0.<org.jsoup.nodes.Attribute: java.lang.String value>;
        $r7 = staticinvoke <org.jsoup.nodes.Entities: java.lang.String escape(java.lang.String,org.jsoup.nodes.Document$OutputSettings)>($r6, r2);
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attribute: java.lang.String html()>();
        return $r1;
    }

    public static org.jsoup.nodes.Attribute createFromEncoded(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        org.jsoup.nodes.Attribute $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 = staticinvoke <org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>(r1, 1);
        $r3 = new org.jsoup.nodes.Attribute;
        specialinvoke $r3.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>(r0, r2);
        return $r3;
    }

    protected boolean isDataAttribute()
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("data-");
        if $z0 == 0 goto label0;

        $r2 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();
        $r3 = "data-";
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 <= $i1 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public boolean equals(java.lang.Object)
    {
        org.jsoup.nodes.Attribute r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.jsoup.nodes.Attribute;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof org.jsoup.nodes.Attribute;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.jsoup.nodes.Attribute) r1;
        $r3 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        if $r3 == null goto label2;

        $r4 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        $r5 = r2.<org.jsoup.nodes.Attribute: java.lang.String key>;
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z1 != 0 goto label4;

        goto label3;

     label2:
        $r6 = r2.<org.jsoup.nodes.Attribute: java.lang.String key>;
        if $r6 == null goto label4;

     label3:
        return 0;

     label4:
        $r7 = r0.<org.jsoup.nodes.Attribute: java.lang.String value>;
        if $r7 == null goto label5;

        $r8 = r0.<org.jsoup.nodes.Attribute: java.lang.String value>;
        $r9 = r2.<org.jsoup.nodes.Attribute: java.lang.String value>;
        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z2 != 0 goto label7;

        goto label6;

     label5:
        $r10 = r2.<org.jsoup.nodes.Attribute: java.lang.String value>;
        if $r10 == null goto label7;

     label6:
        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.jsoup.nodes.Attribute r0;
        int i0, $i1, $i2, $i3, i4;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        if $r1 == null goto label0;

        $r2 = r0.<org.jsoup.nodes.Attribute: java.lang.String key>;
        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();
        goto label1;

     label0:
        $i1 = 0;

     label1:
        i0 = $i1;
        $i2 = 31 * i0;
        $r3 = r0.<org.jsoup.nodes.Attribute: java.lang.String value>;
        if $r3 == null goto label2;

        $r4 = r0.<org.jsoup.nodes.Attribute: java.lang.String value>;
        $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>();
        goto label3;

     label2:
        $i3 = 0;

     label3:
        i4 = $i2 + $i3;
        return i4;
    }

    public org.jsoup.nodes.Attribute clone()
    {
        org.jsoup.nodes.Attribute r0, $r3;
        java.lang.CloneNotSupportedException r1, $r4;
        java.lang.Object $r2;
        java.lang.RuntimeException $r5;

        r0 := @this: org.jsoup.nodes.Attribute;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        $r3 = (org.jsoup.nodes.Attribute) $r2;

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = new java.lang.RuntimeException;
        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);
        throw $r5;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.nodes.Attribute r0, $r1;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attribute: org.jsoup.nodes.Attribute clone()>();
        return $r1;
    }

    public volatile java.lang.Object setValue(java.lang.Object)
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.nodes.Attribute;
        r1 := @parameter0: java.lang.Object;
        $r2 = (java.lang.String) r1;
        $r3 = virtualinvoke r0.<org.jsoup.nodes.Attribute: java.lang.String setValue(java.lang.String)>($r2);
        return $r3;
    }

    public volatile java.lang.Object getValue()
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();
        return $r1;
    }

    public volatile java.lang.Object getKey()
    {
        org.jsoup.nodes.Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Attribute;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        return $r1;
    }
}
class org.jsoup.nodes.Attributes$1 extends java.lang.Object
{
}
class org.jsoup.nodes.Attributes$Dataset$DatasetIterator extends java.lang.Object implements java.util.Iterator
{
    private java.util.Iterator attrIter;
    private org.jsoup.nodes.Attribute attr;
    final org.jsoup.nodes.Attributes$Dataset this$1;

    private void <init>(org.jsoup.nodes.Attributes$Dataset)
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator r0;
        org.jsoup.nodes.Attributes$Dataset r1, $r2;
        org.jsoup.nodes.Attributes $r3;
        java.util.LinkedHashMap $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;
        r1 := @parameter0: org.jsoup.nodes.Attributes$Dataset;
        r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attributes$Dataset this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attributes$Dataset this$1>;
        $r3 = $r2.<org.jsoup.nodes.Attributes$Dataset: org.jsoup.nodes.Attributes this$0>;
        $r4 = staticinvoke <org.jsoup.nodes.Attributes: java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes)>($r3);
        $r5 = virtualinvoke $r4.<java.util.LinkedHashMap: java.util.Collection values()>();
        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();
        r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: java.util.Iterator attrIter> = $r6;
        return;
    }

    public boolean hasNext()
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator r0;
        java.util.Iterator $r1, $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        org.jsoup.nodes.Attribute $r4, $r5;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;

     label0:
        $r1 = r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: java.util.Iterator attrIter>;
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r2 = r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: java.util.Iterator attrIter>;
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();
        $r4 = (org.jsoup.nodes.Attribute) $r3;
        r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr> = $r4;
        $r5 = r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr>;
        $z1 = virtualinvoke $r5.<org.jsoup.nodes.Attribute: boolean isDataAttribute()>();
        if $z1 == 0 goto label0;

        return 1;

     label1:
        return 0;
    }

    public java.util.Map$Entry next()
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator r0;
        org.jsoup.nodes.Attribute $r1, $r3, $r6;
        java.lang.String $r2, $r4, $r5, $r7;
        int $i0;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;
        $r1 = new org.jsoup.nodes.Attribute;
        $r3 = r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr>;
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        $r2 = "data-";
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);
        $r6 = r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr>;
        $r7 = virtualinvoke $r6.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();
        specialinvoke $r1.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>($r5, $r7);
        return $r1;
    }

    public void remove()
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator r0;
        org.jsoup.nodes.Attributes$Dataset $r1;
        org.jsoup.nodes.Attributes $r2;
        java.util.LinkedHashMap $r3;
        org.jsoup.nodes.Attribute $r4;
        java.lang.String $r5;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;
        $r1 = r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attributes$Dataset this$1>;
        $r2 = $r1.<org.jsoup.nodes.Attributes$Dataset: org.jsoup.nodes.Attributes this$0>;
        $r3 = staticinvoke <org.jsoup.nodes.Attributes: java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes)>($r2);
        $r4 = r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr>;
        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r5);
        return;
    }

    public volatile java.lang.Object next()
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: java.util.Map$Entry next()>();
        return $r1;
    }

    void <init>(org.jsoup.nodes.Attributes$Dataset, org.jsoup.nodes.Attributes$1)
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator r0;
        org.jsoup.nodes.Attributes$Dataset r1;
        org.jsoup.nodes.Attributes$1 r2;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;
        r1 := @parameter0: org.jsoup.nodes.Attributes$Dataset;
        r2 := @parameter1: org.jsoup.nodes.Attributes$1;
        specialinvoke r0.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: void <init>(org.jsoup.nodes.Attributes$Dataset)>(r1);
        return;
    }
}
class org.jsoup.nodes.Attributes$Dataset$EntrySet extends java.util.AbstractSet
{
    final org.jsoup.nodes.Attributes$Dataset this$1;

    private void <init>(org.jsoup.nodes.Attributes$Dataset)
    {
        org.jsoup.nodes.Attributes$Dataset$EntrySet r0;
        org.jsoup.nodes.Attributes$Dataset r1;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$EntrySet;
        r1 := @parameter0: org.jsoup.nodes.Attributes$Dataset;
        r0.<org.jsoup.nodes.Attributes$Dataset$EntrySet: org.jsoup.nodes.Attributes$Dataset this$1> = r1;
        specialinvoke r0.<java.util.AbstractSet: void <init>()>();
        return;
    }

    public java.util.Iterator iterator()
    {
        org.jsoup.nodes.Attributes$Dataset$EntrySet r0;
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator $r1;
        org.jsoup.nodes.Attributes$Dataset $r2;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$EntrySet;
        $r1 = new org.jsoup.nodes.Attributes$Dataset$DatasetIterator;
        $r2 = r0.<org.jsoup.nodes.Attributes$Dataset$EntrySet: org.jsoup.nodes.Attributes$Dataset this$1>;
        specialinvoke $r1.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: void <init>(org.jsoup.nodes.Attributes$Dataset,org.jsoup.nodes.Attributes$1)>($r2, null);
        return $r1;
    }

    public int size()
    {
        org.jsoup.nodes.Attributes$Dataset$EntrySet r0;
        int i0;
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator r1, $r2;
        org.jsoup.nodes.Attributes$Dataset $r3;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$EntrySet;
        i0 = 0;
        $r2 = new org.jsoup.nodes.Attributes$Dataset$DatasetIterator;
        $r3 = r0.<org.jsoup.nodes.Attributes$Dataset$EntrySet: org.jsoup.nodes.Attributes$Dataset this$1>;
        specialinvoke $r2.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: void <init>(org.jsoup.nodes.Attributes$Dataset,org.jsoup.nodes.Attributes$1)>($r3, null);
        r1 = $r2;

     label0:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        i0 = i0 + 1;
        goto label0;

     label1:
        return i0;
    }

    void <init>(org.jsoup.nodes.Attributes$Dataset, org.jsoup.nodes.Attributes$1)
    {
        org.jsoup.nodes.Attributes$Dataset$EntrySet r0;
        org.jsoup.nodes.Attributes$Dataset r1;
        org.jsoup.nodes.Attributes$1 r2;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset$EntrySet;
        r1 := @parameter0: org.jsoup.nodes.Attributes$Dataset;
        r2 := @parameter1: org.jsoup.nodes.Attributes$1;
        specialinvoke r0.<org.jsoup.nodes.Attributes$Dataset$EntrySet: void <init>(org.jsoup.nodes.Attributes$Dataset)>(r1);
        return;
    }
}
class org.jsoup.nodes.Attributes$Dataset extends java.util.AbstractMap
{
    final org.jsoup.nodes.Attributes this$0;

    private void <init>(org.jsoup.nodes.Attributes)
    {
        org.jsoup.nodes.Attributes$Dataset r0;
        org.jsoup.nodes.Attributes r1;
        java.util.LinkedHashMap $r2, $r3;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset;
        r1 := @parameter0: org.jsoup.nodes.Attributes;
        r0.<org.jsoup.nodes.Attributes$Dataset: org.jsoup.nodes.Attributes this$0> = r1;
        specialinvoke r0.<java.util.AbstractMap: void <init>()>();
        $r2 = staticinvoke <org.jsoup.nodes.Attributes: java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes)>(r1);
        if $r2 != null goto label0;

        $r3 = new java.util.LinkedHashMap;
        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(int)>(2);
        staticinvoke <org.jsoup.nodes.Attributes: java.util.LinkedHashMap access$102(org.jsoup.nodes.Attributes,java.util.LinkedHashMap)>(r1, $r3);

     label0:
        return;
    }

    public java.util.Set entrySet()
    {
        org.jsoup.nodes.Attributes$Dataset r0;
        org.jsoup.nodes.Attributes$Dataset$EntrySet $r1;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset;
        $r1 = new org.jsoup.nodes.Attributes$Dataset$EntrySet;
        specialinvoke $r1.<org.jsoup.nodes.Attributes$Dataset$EntrySet: void <init>(org.jsoup.nodes.Attributes$Dataset,org.jsoup.nodes.Attributes$1)>(r0, null);
        return $r1;
    }

    public java.lang.String put(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Attributes$Dataset r0;
        java.lang.String r1, r2, r3, r4, $r11;
        org.jsoup.nodes.Attribute r5, $r10, $r12;
        org.jsoup.nodes.Attributes $r6, $r7, $r13;
        boolean $z0;
        java.util.LinkedHashMap $r8, $r14;
        java.lang.Object $r9;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = staticinvoke <org.jsoup.nodes.Attributes: java.lang.String access$300(java.lang.String)>(r1);
        $r6 = r0.<org.jsoup.nodes.Attributes$Dataset: org.jsoup.nodes.Attributes this$0>;
        $z0 = virtualinvoke $r6.<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>(r3);
        if $z0 == 0 goto label0;

        $r7 = r0.<org.jsoup.nodes.Attributes$Dataset: org.jsoup.nodes.Attributes this$0>;
        $r8 = staticinvoke <org.jsoup.nodes.Attributes: java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes)>($r7);
        $r9 = virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);
        $r10 = (org.jsoup.nodes.Attribute) $r9;
        $r11 = virtualinvoke $r10.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();
        goto label1;

     label0:
        $r11 = null;

     label1:
        r4 = $r11;
        $r12 = new org.jsoup.nodes.Attribute;
        specialinvoke $r12.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>(r3, r2);
        r5 = $r12;
        $r13 = r0.<org.jsoup.nodes.Attributes$Dataset: org.jsoup.nodes.Attributes this$0>;
        $r14 = staticinvoke <org.jsoup.nodes.Attributes: java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes)>($r13);
        virtualinvoke $r14.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5);
        return r4;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.jsoup.nodes.Attributes$Dataset r0;
        java.lang.Object r1, r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (java.lang.String) r1;
        $r4 = (java.lang.String) r2;
        $r5 = virtualinvoke r0.<org.jsoup.nodes.Attributes$Dataset: java.lang.String put(java.lang.String,java.lang.String)>($r3, $r4);
        return $r5;
    }

    void <init>(org.jsoup.nodes.Attributes, org.jsoup.nodes.Attributes$1)
    {
        org.jsoup.nodes.Attributes$Dataset r0;
        org.jsoup.nodes.Attributes r1;
        org.jsoup.nodes.Attributes$1 r2;

        r0 := @this: org.jsoup.nodes.Attributes$Dataset;
        r1 := @parameter0: org.jsoup.nodes.Attributes;
        r2 := @parameter1: org.jsoup.nodes.Attributes$1;
        specialinvoke r0.<org.jsoup.nodes.Attributes$Dataset: void <init>(org.jsoup.nodes.Attributes)>(r1);
        return;
    }
}
public class org.jsoup.nodes.Attributes extends java.lang.Object implements java.lang.Iterable, java.lang.Cloneable
{
    protected static final java.lang.String dataPrefix;
    private java.util.LinkedHashMap attributes;

    public void <init>()
    {
        org.jsoup.nodes.Attributes r0;

        r0 := @this: org.jsoup.nodes.Attributes;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = null;
        return;
    }

    public java.lang.String get(java.lang.String)
    {
        org.jsoup.nodes.Attributes r0;
        java.lang.String r1, $r5, $r7;
        org.jsoup.nodes.Attribute r2;
        java.util.LinkedHashMap $r3, $r4;
        java.lang.Object $r6;

        r0 := @this: org.jsoup.nodes.Attributes;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r3 != null goto label0;

        return "";

     label0:
        $r4 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r6 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r5);
        r2 = (org.jsoup.nodes.Attribute) $r6;
        if r2 == null goto label1;

        $r7 = virtualinvoke r2.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();
        goto label2;

     label1:
        $r7 = "";

     label2:
        return $r7;
    }

    public void put(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Attributes r0;
        java.lang.String r1, r2;
        org.jsoup.nodes.Attribute $r3, r4;

        r0 := @this: org.jsoup.nodes.Attributes;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.jsoup.nodes.Attribute;
        specialinvoke $r3.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        r4 = $r3;
        virtualinvoke r0.<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>(r4);
        return;
    }

    public void put(org.jsoup.nodes.Attribute)
    {
        org.jsoup.nodes.Attributes r0;
        org.jsoup.nodes.Attribute r1;
        java.util.LinkedHashMap $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: org.jsoup.nodes.Attributes;
        r1 := @parameter0: org.jsoup.nodes.Attribute;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r3 != null goto label0;

        $r2 = new java.util.LinkedHashMap;
        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>(2);
        r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = $r2;

     label0:
        $r4 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r5 = virtualinvoke r1.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);
        return;
    }

    public void remove(java.lang.String)
    {
        org.jsoup.nodes.Attributes r0;
        java.lang.String r1, $r4;
        java.util.LinkedHashMap $r2, $r3;

        r0 := @this: org.jsoup.nodes.Attributes;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r2 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r2 != null goto label0;

        return;

     label0:
        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r4);
        return;
    }

    public boolean hasKey(java.lang.String)
    {
        org.jsoup.nodes.Attributes r0;
        java.lang.String r1, $r4;
        java.util.LinkedHashMap $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.nodes.Attributes;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r2 == null goto label0;

        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r3.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>($r4);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public int size()
    {
        org.jsoup.nodes.Attributes r0;
        java.util.LinkedHashMap $r1, $r2;
        int $i0;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r1 != null goto label0;

        return 0;

     label0:
        $r2 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $i0 = virtualinvoke $r2.<java.util.LinkedHashMap: int size()>();
        return $i0;
    }

    public void addAll(org.jsoup.nodes.Attributes)
    {
        org.jsoup.nodes.Attributes r0, r1;
        java.util.LinkedHashMap $r2, $r3, $r4, $r5;
        int $i0, $i1;

        r0 := @this: org.jsoup.nodes.Attributes;
        r1 := @parameter0: org.jsoup.nodes.Attributes;
        $i0 = virtualinvoke r1.<org.jsoup.nodes.Attributes: int size()>();
        if $i0 != 0 goto label0;

        return;

     label0:
        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r3 != null goto label1;

        $r2 = new java.util.LinkedHashMap;
        $i1 = virtualinvoke r1.<org.jsoup.nodes.Attributes: int size()>();
        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>($i1);
        r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = $r2;

     label1:
        $r4 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r5 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        virtualinvoke $r4.<java.util.LinkedHashMap: void putAll(java.util.Map)>($r5);
        return;
    }

    public java.util.Iterator iterator()
    {
        org.jsoup.nodes.Attributes r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attributes: java.util.List asList()>();
        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();
        return $r2;
    }

    public java.util.List asList()
    {
        org.jsoup.nodes.Attributes r0;
        java.util.ArrayList r1, $r6;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.LinkedHashMap $r4, $r7, $r8;
        java.util.List $r5, $r12;
        int $i0;
        java.util.Set $r9;
        boolean $z0;
        java.lang.Object $r10, $r11;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r4 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r4 != null goto label0;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        return $r5;

     label0:
        $r6 = new java.util.ArrayList;
        $r7 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $i0 = virtualinvoke $r7.<java.util.LinkedHashMap: int size()>();
        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);
        r1 = $r6;
        $r8 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r9 = virtualinvoke $r8.<java.util.LinkedHashMap: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r10;
        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11);
        goto label1;

     label2:
        $r12 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);
        return $r12;
    }

    public java.util.Map dataset()
    {
        org.jsoup.nodes.Attributes r0;
        org.jsoup.nodes.Attributes$Dataset $r1;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r1 = new org.jsoup.nodes.Attributes$Dataset;
        specialinvoke $r1.<org.jsoup.nodes.Attributes$Dataset: void <init>(org.jsoup.nodes.Attributes,org.jsoup.nodes.Attributes$1)>(r0, null);
        return $r1;
    }

    public java.lang.String html()
    {
        org.jsoup.nodes.Attributes r0;
        java.lang.StringBuilder $r1, r2;
        org.jsoup.nodes.Document $r3;
        org.jsoup.nodes.Document$OutputSettings $r4;
        java.lang.String $r5;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r3 = new org.jsoup.nodes.Document;
        specialinvoke $r3.<org.jsoup.nodes.Document: void <init>(java.lang.String)>("");
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();
        virtualinvoke r0.<org.jsoup.nodes.Attributes: void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings)>(r2, $r4);
        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }

    void html(java.lang.StringBuilder, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Attributes r0;
        java.lang.StringBuilder r1;
        org.jsoup.nodes.Document$OutputSettings r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        org.jsoup.nodes.Attribute r5;
        java.util.LinkedHashMap $r6, $r7;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r9, $r10;

        r0 := @this: org.jsoup.nodes.Attributes;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 := @parameter1: org.jsoup.nodes.Document$OutputSettings;
        $r6 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r6 != null goto label0;

        return;

     label0:
        $r7 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r8 = virtualinvoke $r7.<java.util.LinkedHashMap: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r9;
        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r5 = (org.jsoup.nodes.Attribute) $r10;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        virtualinvoke r5.<org.jsoup.nodes.Attribute: void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings)>(r1, r2);
        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.Attributes r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attributes: java.lang.String html()>();
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.jsoup.nodes.Attributes r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.LinkedHashMap $r3, $r4, $r5, $r6;

        r0 := @this: org.jsoup.nodes.Attributes;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof org.jsoup.nodes.Attributes;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.jsoup.nodes.Attributes) r1;
        $r3 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r3 == null goto label2;

        $r4 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r5 = r2.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $z1 = virtualinvoke $r4.<java.util.LinkedHashMap: boolean equals(java.lang.Object)>($r5);
        if $z1 != 0 goto label4;

        goto label3;

     label2:
        $r6 = r2.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r6 == null goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        org.jsoup.nodes.Attributes r0;
        java.util.LinkedHashMap $r1, $r2;
        int $i0;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r1 == null goto label0;

        $r2 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $i0 = virtualinvoke $r2.<java.util.LinkedHashMap: int hashCode()>();
        goto label1;

     label0:
        $i0 = 0;

     label1:
        return $i0;
    }

    public org.jsoup.nodes.Attributes clone()
    {
        org.jsoup.nodes.Attributes r0, r1, $r5;
        java.lang.CloneNotSupportedException r2, $r7;
        org.jsoup.nodes.Attribute r3, $r15;
        java.util.LinkedHashMap $r4, $r9, $r10, $r13;
        java.lang.Object $r6, $r12;
        java.lang.RuntimeException $r8;
        int $i0;
        java.util.Iterator r11;
        boolean $z0;
        java.lang.String $r14;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r4 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        if $r4 != null goto label0;

        $r5 = new org.jsoup.nodes.Attributes;
        specialinvoke $r5.<org.jsoup.nodes.Attributes: void <init>()>();
        return $r5;

     label0:
        $r6 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r1 = (org.jsoup.nodes.Attributes) $r6;

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r2 = $r7;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);
        throw $r8;

     label3:
        $r9 = new java.util.LinkedHashMap;
        $r10 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $i0 = virtualinvoke $r10.<java.util.LinkedHashMap: int size()>();
        specialinvoke $r9.<java.util.LinkedHashMap: void <init>(int)>($i0);
        r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = $r9;
        r11 = virtualinvoke r0.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Attribute) $r12;
        $r13 = r1.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        $r14 = virtualinvoke r3.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        $r15 = virtualinvoke r3.<org.jsoup.nodes.Attribute: org.jsoup.nodes.Attribute clone()>();
        virtualinvoke $r13.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);
        goto label4;

     label5:
        return r1;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    private static java.lang.String dataKey(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data-");
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r4;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.nodes.Attributes r0, $r1;

        r0 := @this: org.jsoup.nodes.Attributes;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Attributes: org.jsoup.nodes.Attributes clone()>();
        return $r1;
    }

    static java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes)
    {
        org.jsoup.nodes.Attributes r0;
        java.util.LinkedHashMap $r1;

        r0 := @parameter0: org.jsoup.nodes.Attributes;
        $r1 = r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes>;
        return $r1;
    }

    static java.util.LinkedHashMap access$102(org.jsoup.nodes.Attributes, java.util.LinkedHashMap)
    {
        org.jsoup.nodes.Attributes r0;
        java.util.LinkedHashMap r1;

        r0 := @parameter0: org.jsoup.nodes.Attributes;
        r1 := @parameter1: java.util.LinkedHashMap;
        r0.<org.jsoup.nodes.Attributes: java.util.LinkedHashMap attributes> = r1;
        return r1;
    }

    static java.lang.String access$300(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.jsoup.nodes.Attributes: java.lang.String dataKey(java.lang.String)>(r0);
        return $r1;
    }
}
public class org.jsoup.nodes.Comment extends org.jsoup.nodes.Node
{
    private static final java.lang.String COMMENT_KEY;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Comment r0;
        java.lang.String r1, r2;
        org.jsoup.nodes.Attributes $r3;

        r0 := @this: org.jsoup.nodes.Comment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String)>(r2);
        $r3 = r0.<org.jsoup.nodes.Comment: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("comment", r1);
        return;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.Comment r0;

        r0 := @this: org.jsoup.nodes.Comment;
        return "#comment";
    }

    public java.lang.String getData()
    {
        org.jsoup.nodes.Comment r0;
        org.jsoup.nodes.Attributes $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.nodes.Comment;
        $r1 = r0.<org.jsoup.nodes.Comment: org.jsoup.nodes.Attributes attributes>;
        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("comment");
        return $r2;
    }

    void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Comment r0;
        java.lang.StringBuilder r1, $r3, $r5;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: org.jsoup.nodes.Comment;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint()>();
        if $z0 == 0 goto label0;

        virtualinvoke r0.<org.jsoup.nodes.Comment: void indent(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings)>(r1, i0, r2);

     label0:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!--");
        $r4 = virtualinvoke r0.<org.jsoup.nodes.Comment: java.lang.String getData()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->");
        return;
    }

    void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Comment r0;
        java.lang.StringBuilder r1;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;

        r0 := @this: org.jsoup.nodes.Comment;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.Comment r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Comment;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Comment: java.lang.String outerHtml()>();
        return $r1;
    }
}
public class org.jsoup.nodes.DataNode extends org.jsoup.nodes.Node
{
    private static final java.lang.String DATA_KEY;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.DataNode r0;
        java.lang.String r1, r2;
        org.jsoup.nodes.Attributes $r3;

        r0 := @this: org.jsoup.nodes.DataNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String)>(r2);
        $r3 = r0.<org.jsoup.nodes.DataNode: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("data", r1);
        return;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.DataNode r0;

        r0 := @this: org.jsoup.nodes.DataNode;
        return "#data";
    }

    public java.lang.String getWholeData()
    {
        org.jsoup.nodes.DataNode r0;
        org.jsoup.nodes.Attributes $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.nodes.DataNode;
        $r1 = r0.<org.jsoup.nodes.DataNode: org.jsoup.nodes.Attributes attributes>;
        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("data");
        return $r2;
    }

    public org.jsoup.nodes.DataNode setWholeData(java.lang.String)
    {
        org.jsoup.nodes.DataNode r0;
        java.lang.String r1;
        org.jsoup.nodes.Attributes $r2;

        r0 := @this: org.jsoup.nodes.DataNode;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.jsoup.nodes.DataNode: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r2.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("data", r1);
        return r0;
    }

    void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.DataNode r0;
        java.lang.StringBuilder r1;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.nodes.DataNode;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        $r3 = virtualinvoke r0.<org.jsoup.nodes.DataNode: java.lang.String getWholeData()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        return;
    }

    void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.DataNode r0;
        java.lang.StringBuilder r1;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;

        r0 := @this: org.jsoup.nodes.DataNode;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.DataNode r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.DataNode;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.DataNode: java.lang.String outerHtml()>();
        return $r1;
    }

    public static org.jsoup.nodes.DataNode createFromEncoded(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        org.jsoup.nodes.DataNode $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 = staticinvoke <org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String)>(r0);
        $r3 = new org.jsoup.nodes.DataNode;
        specialinvoke $r3.<org.jsoup.nodes.DataNode: void <init>(java.lang.String,java.lang.String)>(r2, r1);
        return $r3;
    }
}
public class org.jsoup.nodes.Document$OutputSettings extends java.lang.Object implements java.lang.Cloneable
{
    private org.jsoup.nodes.Entities$EscapeMode escapeMode;
    private java.nio.charset.Charset charset;
    private java.nio.charset.CharsetEncoder charsetEncoder;
    private boolean prettyPrint;
    private int indentAmount;

    public void <init>()
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        org.jsoup.nodes.Entities$EscapeMode $r1;
        java.nio.charset.Charset $r2, $r3;
        java.nio.charset.CharsetEncoder $r4;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode base>;
        r0.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Entities$EscapeMode escapeMode> = $r1;
        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");
        r0.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset> = $r2;
        $r3 = r0.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset>;
        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
        r0.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.CharsetEncoder charsetEncoder> = $r4;
        r0.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint> = 1;
        r0.<org.jsoup.nodes.Document$OutputSettings: int indentAmount> = 1;
        return;
    }

    public org.jsoup.nodes.Entities$EscapeMode escapeMode()
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        org.jsoup.nodes.Entities$EscapeMode $r1;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        $r1 = r0.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Entities$EscapeMode escapeMode>;
        return $r1;
    }

    public org.jsoup.nodes.Document$OutputSettings escapeMode(org.jsoup.nodes.Entities$EscapeMode)
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        org.jsoup.nodes.Entities$EscapeMode r1;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        r1 := @parameter0: org.jsoup.nodes.Entities$EscapeMode;
        r0.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Entities$EscapeMode escapeMode> = r1;
        return r0;
    }

    public java.nio.charset.Charset charset()
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        $r1 = r0.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset>;
        return $r1;
    }

    public org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset)
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        java.nio.charset.Charset r1;
        java.nio.charset.CharsetEncoder $r2;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        r1 := @parameter0: java.nio.charset.Charset;
        r0.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset> = r1;
        $r2 = virtualinvoke r1.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
        r0.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.CharsetEncoder charsetEncoder> = $r2;
        return r0;
    }

    public org.jsoup.nodes.Document$OutputSettings charset(java.lang.String)
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        java.lang.String r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        r1 := @parameter0: java.lang.String;
        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);
        virtualinvoke r0.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset)>($r2);
        return r0;
    }

    java.nio.charset.CharsetEncoder encoder()
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        java.nio.charset.CharsetEncoder $r1;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        $r1 = r0.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.CharsetEncoder charsetEncoder>;
        return $r1;
    }

    public boolean prettyPrint()
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        $z0 = r0.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint>;
        return $z0;
    }

    public org.jsoup.nodes.Document$OutputSettings prettyPrint(boolean)
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        boolean z0;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        z0 := @parameter0: boolean;
        r0.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint> = z0;
        return r0;
    }

    public int indentAmount()
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        int $i0;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        $i0 = r0.<org.jsoup.nodes.Document$OutputSettings: int indentAmount>;
        return $i0;
    }

    public org.jsoup.nodes.Document$OutputSettings indentAmount(int)
    {
        org.jsoup.nodes.Document$OutputSettings r0;
        int i0;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean)>($z0);
        r0.<org.jsoup.nodes.Document$OutputSettings: int indentAmount> = i0;
        return r0;
    }

    public org.jsoup.nodes.Document$OutputSettings clone()
    {
        org.jsoup.nodes.Document$OutputSettings r0, r1;
        java.lang.CloneNotSupportedException r2, $r4;
        java.lang.Object $r3;
        java.lang.RuntimeException $r5;
        java.nio.charset.Charset $r6;
        java.lang.String $r7, $r10;
        org.jsoup.nodes.Entities$EscapeMode $r9, $r11;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;

     label0:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r1 = (org.jsoup.nodes.Document$OutputSettings) $r3;

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        $r5 = new java.lang.RuntimeException;
        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);
        throw $r5;

     label3:
        $r6 = r0.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset>;
        $r7 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();
        virtualinvoke r1.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings charset(java.lang.String)>($r7);
        $r9 = r0.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Entities$EscapeMode escapeMode>;
        $r10 = virtualinvoke $r9.<org.jsoup.nodes.Entities$EscapeMode: java.lang.String name()>();
        $r11 = staticinvoke <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode valueOf(java.lang.String)>($r10);
        r1.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Entities$EscapeMode escapeMode> = $r11;
        return r1;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.nodes.Document$OutputSettings r0, $r1;

        r0 := @this: org.jsoup.nodes.Document$OutputSettings;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings clone()>();
        return $r1;
    }
}
public final enum class org.jsoup.nodes.Document$QuirksMode extends java.lang.Enum
{
    public static final enum org.jsoup.nodes.Document$QuirksMode noQuirks;
    public static final enum org.jsoup.nodes.Document$QuirksMode quirks;
    public static final enum org.jsoup.nodes.Document$QuirksMode limitedQuirks;
    private static final org.jsoup.nodes.Document$QuirksMode[] $VALUES;

    public static org.jsoup.nodes.Document$QuirksMode[] values()
    {
        org.jsoup.nodes.Document$QuirksMode[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.jsoup.nodes.Document$QuirksMode[]) $r1;
        return $r2;
    }

    public static org.jsoup.nodes.Document$QuirksMode valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.jsoup.nodes.Document$QuirksMode $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/jsoup/nodes/Document$QuirksMode", r0);
        $r2 = (org.jsoup.nodes.Document$QuirksMode) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.jsoup.nodes.Document$QuirksMode r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.nodes.Document$QuirksMode;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        org.jsoup.nodes.Document$QuirksMode $r0, $r1, $r2, $r4, $r5, $r6;
        org.jsoup.nodes.Document$QuirksMode[] $r3;

        $r0 = new org.jsoup.nodes.Document$QuirksMode;
        specialinvoke $r0.<org.jsoup.nodes.Document$QuirksMode: void <init>(java.lang.String,int)>("noQuirks", 0);
        <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode noQuirks> = $r0;
        $r1 = new org.jsoup.nodes.Document$QuirksMode;
        specialinvoke $r1.<org.jsoup.nodes.Document$QuirksMode: void <init>(java.lang.String,int)>("quirks", 1);
        <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode quirks> = $r1;
        $r2 = new org.jsoup.nodes.Document$QuirksMode;
        specialinvoke $r2.<org.jsoup.nodes.Document$QuirksMode: void <init>(java.lang.String,int)>("limitedQuirks", 2);
        <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode limitedQuirks> = $r2;
        $r3 = newarray (org.jsoup.nodes.Document$QuirksMode)[3];
        $r4 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode noQuirks>;
        $r3[0] = $r4;
        $r5 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode quirks>;
        $r3[1] = $r5;
        $r6 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode limitedQuirks>;
        $r3[2] = $r6;
        <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode[] $VALUES> = $r3;
        return;
    }
}
public class org.jsoup.nodes.Document extends org.jsoup.nodes.Element
{
    private org.jsoup.nodes.Document$OutputSettings outputSettings;
    private org.jsoup.nodes.Document$QuirksMode quirksMode;

    public void <init>(java.lang.String)
    {
        org.jsoup.nodes.Document r0;
        java.lang.String r1;
        org.jsoup.parser.Tag $r2;
        org.jsoup.nodes.Document$OutputSettings $r3;
        org.jsoup.nodes.Document$QuirksMode $r4;

        r0 := @this: org.jsoup.nodes.Document;
        r1 := @parameter0: java.lang.String;
        $r2 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>("#root");
        specialinvoke r0.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r2, r1);
        $r3 = new org.jsoup.nodes.Document$OutputSettings;
        specialinvoke $r3.<org.jsoup.nodes.Document$OutputSettings: void <init>()>();
        r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings> = $r3;
        $r4 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode noQuirks>;
        r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$QuirksMode quirksMode> = $r4;
        return;
    }

    public static org.jsoup.nodes.Document createShell(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.nodes.Document r1, $r3;
        org.jsoup.nodes.Element r2;

        r0 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r0);
        $r3 = new org.jsoup.nodes.Document;
        specialinvoke $r3.<org.jsoup.nodes.Document: void <init>(java.lang.String)>(r0);
        r1 = $r3;
        r2 = virtualinvoke r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendElement(java.lang.String)>("html");
        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>("head");
        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>("body");
        return r1;
    }

    public org.jsoup.nodes.Element head()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.nodes.Document;
        $r1 = specialinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>("head", r0);
        return $r1;
    }

    public org.jsoup.nodes.Element body()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.nodes.Document;
        $r1 = specialinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>("body", r0);
        return $r1;
    }

    public java.lang.String title()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.select.Elements $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.nodes.Document;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.select.Elements getElementsByTag(java.lang.String)>("title");
        r1 = virtualinvoke $r2.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<org.jsoup.nodes.Element: java.lang.String text()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();
        goto label1;

     label0:
        $r4 = "";

     label1:
        return $r4;
    }

    public void title(java.lang.String)
    {
        org.jsoup.nodes.Document r0;
        java.lang.String r1;
        org.jsoup.nodes.Element r2, $r4, $r5;
        org.jsoup.select.Elements $r3;

        r0 := @this: org.jsoup.nodes.Document;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.select.Elements getElementsByTag(java.lang.String)>("title");
        r2 = virtualinvoke $r3.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();
        if r2 != null goto label0;

        $r4 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();
        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>("title");
        virtualinvoke $r5.<org.jsoup.nodes.Element: org.jsoup.nodes.Element text(java.lang.String)>(r1);
        goto label1;

     label0:
        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element text(java.lang.String)>(r1);

     label1:
        return;
    }

    public org.jsoup.nodes.Element createElement(java.lang.String)
    {
        org.jsoup.nodes.Document r0;
        java.lang.String r1, $r4;
        org.jsoup.nodes.Element $r2;
        org.jsoup.parser.Tag $r3;

        r0 := @this: org.jsoup.nodes.Document;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.nodes.Element;
        $r3 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>(r1);
        $r4 = virtualinvoke r0.<org.jsoup.nodes.Document: java.lang.String baseUri()>();
        specialinvoke $r2.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r3, $r4);
        return $r2;
    }

    public org.jsoup.nodes.Document normalise()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element r1, $r2, $r4, $r6;

        r0 := @this: org.jsoup.nodes.Document;
        r1 = specialinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>("html", r0);
        if r1 != null goto label0;

        r1 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendElement(java.lang.String)>("html");

     label0:
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();
        if $r2 != null goto label1;

        virtualinvoke r1.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependElement(java.lang.String)>("head");

     label1:
        $r4 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        if $r4 != null goto label2;

        virtualinvoke r1.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>("body");

     label2:
        $r6 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();
        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>($r6);
        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>(r1);
        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>(r0);
        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>("head", r1);
        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>("body", r1);
        return r0;
    }

    private void normaliseTextNodes(org.jsoup.nodes.Element)
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element r1, $r11, $r14;
        java.util.ArrayList $r2, r3;
        java.util.Iterator r4;
        org.jsoup.nodes.Node r5, r10;
        org.jsoup.nodes.TextNode r6, $r12;
        java.util.List $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r9;
        int $i0, i1;

        r0 := @this: org.jsoup.nodes.Document;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        $r7 = r1.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.jsoup.nodes.Node) $r8;
        $z1 = r5 instanceof org.jsoup.nodes.TextNode;
        if $z1 == 0 goto label1;

        r6 = (org.jsoup.nodes.TextNode) r5;
        $z2 = virtualinvoke r6.<org.jsoup.nodes.TextNode: boolean isBlank()>();
        if $z2 != 0 goto label1;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

     label1:
        goto label0;

     label2:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();
        i1 = $i0 - 1;

     label3:
        if i1 < 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);
        r10 = (org.jsoup.nodes.Node) $r9;
        virtualinvoke r1.<org.jsoup.nodes.Element: void removeChild(org.jsoup.nodes.Node)>(r10);
        $r11 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        $r12 = new org.jsoup.nodes.TextNode;
        specialinvoke $r12.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>(" ", "");
        virtualinvoke $r11.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>($r12);
        $r14 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        virtualinvoke $r14.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>(r10);
        i1 = i1 + -1;
        goto label3;

     label4:
        return;
    }

    private void normaliseStructure(java.lang.String, org.jsoup.nodes.Element)
    {
        org.jsoup.nodes.Document r0;
        java.lang.String r1;
        org.jsoup.nodes.Element r2, r4, r6, $r16;
        org.jsoup.select.Elements r3;
        java.util.ArrayList r5, $r9;
        int i0, $i1, $i2;
        java.util.Iterator r7, r12;
        org.jsoup.nodes.Node r8, r14;
        java.util.List $r10;
        boolean $z0, $z2, $z3;
        java.lang.Object $r11, $r13;

        r0 := @this: org.jsoup.nodes.Document;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.jsoup.nodes.Element;
        r3 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.select.Elements getElementsByTag(java.lang.String)>(r1);
        r4 = virtualinvoke r3.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();
        $i1 = virtualinvoke r3.<org.jsoup.select.Elements: int size()>();
        if $i1 <= 1 goto label5;

        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r5 = $r9;
        i0 = 1;

     label0:
        $i2 = virtualinvoke r3.<org.jsoup.select.Elements: int size()>();
        if i0 >= $i2 goto label3;

        r6 = virtualinvoke r3.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(i0);
        $r10 = r6.<org.jsoup.nodes.Node: java.util.List childNodes>;
        r7 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (org.jsoup.nodes.Node) $r11;
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r8);
        goto label1;

     label2:
        virtualinvoke r6.<org.jsoup.nodes.Node: void remove()>();
        i0 = i0 + 1;
        goto label0;

     label3:
        r12 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label5;

        $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();
        r14 = (org.jsoup.nodes.Node) $r13;
        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r14);
        goto label4;

     label5:
        $r16 = virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        $z3 = virtualinvoke $r16.<org.jsoup.nodes.Element: boolean equals(java.lang.Object)>(r2);
        if $z3 != 0 goto label6;

        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r4);

     label6:
        return;
    }

    private org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String, org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Document r0;
        java.lang.String r1, $r6;
        org.jsoup.nodes.Node r2, r4;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r5, $r7;
        boolean $z0, $z1;
        java.util.List $r8;
        java.lang.Object $r9;

        r0 := @this: org.jsoup.nodes.Document;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.jsoup.nodes.Node;
        $r6 = virtualinvoke r2.<org.jsoup.nodes.Node: java.lang.String nodeName()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label0;

        $r7 = (org.jsoup.nodes.Element) r2;
        return $r7;

     label0:
        $r8 = r2.<org.jsoup.nodes.Node: java.util.List childNodes>;
        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Node) $r9;
        r5 = specialinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>(r1, r4);
        if r5 == null goto label2;

        return r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    public java.lang.String outerHtml()
    {
        org.jsoup.nodes.Document r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Document;
        $r1 = specialinvoke r0.<org.jsoup.nodes.Element: java.lang.String html()>();
        return $r1;
    }

    public org.jsoup.nodes.Element text(java.lang.String)
    {
        org.jsoup.nodes.Document r0;
        java.lang.String r1;
        org.jsoup.nodes.Element $r2;

        r0 := @this: org.jsoup.nodes.Document;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element text(java.lang.String)>(r1);
        return r0;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;
        return "#document";
    }

    public org.jsoup.nodes.Document clone()
    {
        org.jsoup.nodes.Document r0, r1;
        org.jsoup.nodes.Element $r2;
        org.jsoup.nodes.Document$OutputSettings $r3, $r4;

        r0 := @this: org.jsoup.nodes.Document;
        $r2 = specialinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element clone()>();
        r1 = (org.jsoup.nodes.Document) $r2;
        $r3 = r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings>;
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings clone()>();
        r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings> = $r4;
        return r1;
    }

    public org.jsoup.nodes.Document$OutputSettings outputSettings()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Document$OutputSettings $r1;

        r0 := @this: org.jsoup.nodes.Document;
        $r1 = r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings>;
        return $r1;
    }

    public org.jsoup.nodes.Document$QuirksMode quirksMode()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Document$QuirksMode $r1;

        r0 := @this: org.jsoup.nodes.Document;
        $r1 = r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$QuirksMode quirksMode>;
        return $r1;
    }

    public org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode)
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Document$QuirksMode r1;

        r0 := @this: org.jsoup.nodes.Document;
        r1 := @parameter0: org.jsoup.nodes.Document$QuirksMode;
        r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$QuirksMode quirksMode> = r1;
        return r0;
    }

    public volatile org.jsoup.nodes.Element clone()
    {
        org.jsoup.nodes.Document r0, $r1;

        r0 := @this: org.jsoup.nodes.Document;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document clone()>();
        return $r1;
    }

    public volatile org.jsoup.nodes.Node clone()
    {
        org.jsoup.nodes.Document r0, $r1;

        r0 := @this: org.jsoup.nodes.Document;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document clone()>();
        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.nodes.Document r0, $r1;

        r0 := @this: org.jsoup.nodes.Document;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document clone()>();
        return $r1;
    }
}
public class org.jsoup.nodes.DocumentType extends org.jsoup.nodes.Node
{

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.DocumentType r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.jsoup.nodes.DocumentType;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String)>(r4);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        virtualinvoke r0.<org.jsoup.nodes.DocumentType: org.jsoup.nodes.Node attr(java.lang.String,java.lang.String)>("name", r1);
        virtualinvoke r0.<org.jsoup.nodes.DocumentType: org.jsoup.nodes.Node attr(java.lang.String,java.lang.String)>("publicId", r2);
        virtualinvoke r0.<org.jsoup.nodes.DocumentType: org.jsoup.nodes.Node attr(java.lang.String,java.lang.String)>("systemId", r3);
        return;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.DocumentType r0;

        r0 := @this: org.jsoup.nodes.DocumentType;
        return "#doctype";
    }

    void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.DocumentType r0;
        java.lang.StringBuilder r1, $r3, $r7, $r9, $r12, $r14;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;
        java.lang.String $r4, $r6, $r8, $r11, $r13;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.nodes.DocumentType;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!DOCTYPE ");
        $r4 = virtualinvoke r0.<org.jsoup.nodes.DocumentType: java.lang.String attr(java.lang.String)>("name");
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke r0.<org.jsoup.nodes.DocumentType: java.lang.String attr(java.lang.String)>("publicId");
        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean isBlank(java.lang.String)>($r6);
        if $z0 != 0 goto label0;

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PUBLIC \"");
        $r8 = virtualinvoke r0.<org.jsoup.nodes.DocumentType: java.lang.String attr(java.lang.String)>("publicId");
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label0:
        $r11 = virtualinvoke r0.<org.jsoup.nodes.DocumentType: java.lang.String attr(java.lang.String)>("systemId");
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean isBlank(java.lang.String)>($r11);
        if $z1 != 0 goto label1;

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");
        $r13 = virtualinvoke r0.<org.jsoup.nodes.DocumentType: java.lang.String attr(java.lang.String)>("systemId");
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
        return;
    }

    void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.DocumentType r0;
        java.lang.StringBuilder r1;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;

        r0 := @this: org.jsoup.nodes.DocumentType;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        return;
    }
}
public class org.jsoup.nodes.Element extends org.jsoup.nodes.Node
{
    private org.jsoup.parser.Tag tag;
    private java.util.Set classNames;

    public void <init>(org.jsoup.parser.Tag, java.lang.String, org.jsoup.nodes.Attributes)
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.parser.Tag r1;
        java.lang.String r2;
        org.jsoup.nodes.Attributes r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: org.jsoup.parser.Tag;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.jsoup.nodes.Attributes;
        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>(r2, r3);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag> = r1;
        return;
    }

    public void <init>(org.jsoup.parser.Tag, java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.parser.Tag r1;
        java.lang.String r2;
        org.jsoup.nodes.Attributes $r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: org.jsoup.parser.Tag;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.jsoup.nodes.Attributes;
        specialinvoke $r3.<org.jsoup.nodes.Attributes: void <init>()>();
        specialinvoke r0.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>(r1, r2, $r3);
        return;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.parser.Tag $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $r2 = virtualinvoke $r1.<org.jsoup.parser.Tag: java.lang.String getName()>();
        return $r2;
    }

    public java.lang.String tagName()
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.parser.Tag $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $r2 = virtualinvoke $r1.<org.jsoup.parser.Tag: java.lang.String getName()>();
        return $r2;
    }

    public org.jsoup.nodes.Element tagName(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        org.jsoup.parser.Tag $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, "Tag name must not be empty.");
        $r2 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>(r1);
        r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag> = $r2;
        return r0;
    }

    public org.jsoup.parser.Tag tag()
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.parser.Tag $r1;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        return $r1;
    }

    public boolean isBlock()
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.parser.Tag $r1;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Tag: boolean isBlock()>();
        return $z0;
    }

    public java.lang.String id()
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("id");
        if r1 != null goto label0;

        $r2 = "";
        goto label1;

     label0:
        $r2 = r1;

     label1:
        return $r2;
    }

    public org.jsoup.nodes.Element attr(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node attr(java.lang.String,java.lang.String)>(r1, r2);
        return r0;
    }

    public java.util.Map dataset()
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.nodes.Attributes $r1;
        java.util.Map $r2;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes>;
        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Attributes: java.util.Map dataset()>();
        return $r2;
    }

    public final org.jsoup.nodes.Element parent()
    {
        org.jsoup.nodes.Element r0, $r2;
        org.jsoup.nodes.Node $r1;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Node parentNode>;
        $r2 = (org.jsoup.nodes.Element) $r1;
        return $r2;
    }

    public org.jsoup.select.Elements parents()
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.select.Elements $r1, r2;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new org.jsoup.select.Elements;
        specialinvoke $r1.<org.jsoup.select.Elements: void <init>()>();
        r2 = $r1;
        staticinvoke <org.jsoup.nodes.Element: void accumulateParents(org.jsoup.nodes.Element,org.jsoup.select.Elements)>(r0, r2);
        return r2;
    }

    private static void accumulateParents(org.jsoup.nodes.Element, org.jsoup.select.Elements)
    {
        org.jsoup.nodes.Element r0, r2;
        org.jsoup.select.Elements r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: org.jsoup.nodes.Element;
        r1 := @parameter1: org.jsoup.select.Elements;
        r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if r2 == null goto label0;

        $r3 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("#root");
        if $z0 != 0 goto label0;

        virtualinvoke r1.<org.jsoup.select.Elements: boolean add(org.jsoup.nodes.Element)>(r2);
        staticinvoke <org.jsoup.nodes.Element: void accumulateParents(org.jsoup.nodes.Element,org.jsoup.select.Elements)>(r2, r1);

     label0:
        return;
    }

    public org.jsoup.nodes.Element child(int)
    {
        org.jsoup.nodes.Element r0, $r2;
        int i0;
        org.jsoup.select.Elements $r1;

        r0 := @this: org.jsoup.nodes.Element;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();
        $r2 = virtualinvoke $r1.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(i0);
        return $r2;
    }

    public org.jsoup.select.Elements children()
    {
        org.jsoup.nodes.Element r0, $r7;
        java.util.ArrayList $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Node r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.jsoup.select.Elements $r8;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Node) $r6;
        $z1 = r4 instanceof org.jsoup.nodes.Element;
        if $z1 == 0 goto label1;

        $r7 = (org.jsoup.nodes.Element) r4;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        goto label0;

     label2:
        $r8 = new org.jsoup.select.Elements;
        specialinvoke $r8.<org.jsoup.select.Elements: void <init>(java.util.List)>(r2);
        return $r8;
    }

    public java.util.List textNodes()
    {
        org.jsoup.nodes.Element r0;
        java.util.ArrayList $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Node r4;
        java.util.List $r5, $r8;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.jsoup.nodes.TextNode $r7;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Node) $r6;
        $z1 = r4 instanceof org.jsoup.nodes.TextNode;
        if $z1 == 0 goto label1;

        $r7 = (org.jsoup.nodes.TextNode) r4;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        goto label0;

     label2:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);
        return $r8;
    }

    public java.util.List dataNodes()
    {
        org.jsoup.nodes.Element r0;
        java.util.ArrayList $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Node r4;
        java.util.List $r5, $r8;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.jsoup.nodes.DataNode $r7;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Node) $r6;
        $z1 = r4 instanceof org.jsoup.nodes.DataNode;
        if $z1 == 0 goto label1;

        $r7 = (org.jsoup.nodes.DataNode) r4;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        goto label0;

     label2:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);
        return $r8;
    }

    public org.jsoup.select.Elements select(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        org.jsoup.select.Elements $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element)>(r1, r0);
        return $r2;
    }

    public org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.nodes.Node r1;
        org.jsoup.nodes.Node[] $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: org.jsoup.nodes.Node;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r2 = newarray (org.jsoup.nodes.Node)[1];
        $r2[0] = r1;
        virtualinvoke r0.<org.jsoup.nodes.Element: void addChildren(org.jsoup.nodes.Node[])>($r2);
        return r0;
    }

    public org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.nodes.Node r1;
        org.jsoup.nodes.Node[] $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: org.jsoup.nodes.Node;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r2 = newarray (org.jsoup.nodes.Node)[1];
        $r2[0] = r1;
        virtualinvoke r0.<org.jsoup.nodes.Element: void addChildren(int,org.jsoup.nodes.Node[])>(0, $r2);
        return r0;
    }

    public org.jsoup.nodes.Element appendElement(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r2, r3;
        java.lang.String r1, $r5;
        org.jsoup.parser.Tag $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.nodes.Element;
        $r4 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>(r1);
        $r5 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String baseUri()>();
        specialinvoke $r2.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r4, $r5);
        r3 = $r2;
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r3);
        return r3;
    }

    public org.jsoup.nodes.Element prependElement(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r2, r3;
        java.lang.String r1, $r5;
        org.jsoup.parser.Tag $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.nodes.Element;
        $r4 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>(r1);
        $r5 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String baseUri()>();
        specialinvoke $r2.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r4, $r5);
        r3 = $r2;
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>(r3);
        return r3;
    }

    public org.jsoup.nodes.Element appendText(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r4;
        org.jsoup.nodes.TextNode $r2, r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.nodes.TextNode;
        $r4 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String baseUri()>();
        specialinvoke $r2.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>(r1, $r4);
        r3 = $r2;
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r3);
        return r0;
    }

    public org.jsoup.nodes.Element prependText(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r4;
        org.jsoup.nodes.TextNode $r2, r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.nodes.TextNode;
        $r4 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String baseUri()>();
        specialinvoke $r2.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>(r1, $r4);
        r3 = $r2;
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>(r3);
        return r0;
    }

    public org.jsoup.nodes.Element append(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r3;
        java.util.List r2;
        int $i0;
        org.jsoup.nodes.Node[] $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String baseUri()>();
        r2 = staticinvoke <org.jsoup.parser.Parser: java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String)>(r1, r0, $r3);
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();
        $r4 = newarray (org.jsoup.nodes.Node)[$i0];
        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);
        $r6 = (org.jsoup.nodes.Node[]) $r5;
        virtualinvoke r0.<org.jsoup.nodes.Element: void addChildren(org.jsoup.nodes.Node[])>($r6);
        return r0;
    }

    public org.jsoup.nodes.Element prepend(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r3;
        java.util.List r2;
        int $i0;
        org.jsoup.nodes.Node[] $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String baseUri()>();
        r2 = staticinvoke <org.jsoup.parser.Parser: java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String)>(r1, r0, $r3);
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();
        $r4 = newarray (org.jsoup.nodes.Node)[$i0];
        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);
        $r6 = (org.jsoup.nodes.Node[]) $r5;
        virtualinvoke r0.<org.jsoup.nodes.Element: void addChildren(int,org.jsoup.nodes.Node[])>(0, $r6);
        return r0;
    }

    public org.jsoup.nodes.Element before(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r3;
        java.lang.String r1;
        org.jsoup.nodes.Node $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node before(java.lang.String)>(r1);
        $r3 = (org.jsoup.nodes.Element) $r2;
        return $r3;
    }

    public org.jsoup.nodes.Element before(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Element r0, $r3;
        org.jsoup.nodes.Node r1, $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node before(org.jsoup.nodes.Node)>(r1);
        $r3 = (org.jsoup.nodes.Element) $r2;
        return $r3;
    }

    public org.jsoup.nodes.Element after(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r3;
        java.lang.String r1;
        org.jsoup.nodes.Node $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node after(java.lang.String)>(r1);
        $r3 = (org.jsoup.nodes.Element) $r2;
        return $r3;
    }

    public org.jsoup.nodes.Element after(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Element r0, $r3;
        org.jsoup.nodes.Node r1, $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node after(org.jsoup.nodes.Node)>(r1);
        $r3 = (org.jsoup.nodes.Element) $r2;
        return $r3;
    }

    public org.jsoup.nodes.Element empty()
    {
        org.jsoup.nodes.Element r0;
        java.util.List $r1;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        interfaceinvoke $r1.<java.util.List: void clear()>();
        return r0;
    }

    public org.jsoup.nodes.Element wrap(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r3;
        java.lang.String r1;
        org.jsoup.nodes.Node $r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node wrap(java.lang.String)>(r1);
        $r3 = (org.jsoup.nodes.Element) $r2;
        return $r3;
    }

    public org.jsoup.select.Elements siblingElements()
    {
        org.jsoup.nodes.Element r0, r4, $r7;
        org.jsoup.select.Elements r1, r2, $r6, $r8;
        java.util.Iterator r3;
        org.jsoup.nodes.Node $r5;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: org.jsoup.nodes.Element;
        $r5 = r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Node parentNode>;
        if $r5 != null goto label0;

        $r6 = new org.jsoup.select.Elements;
        specialinvoke $r6.<org.jsoup.select.Elements: void <init>(int)>(0);
        return $r6;

     label0:
        $r7 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        r1 = virtualinvoke $r7.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();
        $r8 = new org.jsoup.select.Elements;
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        $i1 = $i0 - 1;
        specialinvoke $r8.<org.jsoup.select.Elements: void <init>(int)>($i1);
        r2 = $r8;
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r9;
        if r4 == r0 goto label2;

        virtualinvoke r2.<org.jsoup.select.Elements: boolean add(org.jsoup.nodes.Element)>(r4);

     label2:
        goto label1;

     label3:
        return r2;
    }

    public org.jsoup.nodes.Element nextElementSibling()
    {
        org.jsoup.nodes.Element r0, $r4, $r6;
        org.jsoup.select.Elements r1;
        java.lang.Integer r2;
        org.jsoup.nodes.Node $r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Node parentNode>;
        if $r3 != null goto label0;

        return null;

     label0:
        $r4 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        r1 = virtualinvoke $r4.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();
        r2 = staticinvoke <org.jsoup.nodes.Element: java.lang.Integer indexInList(org.jsoup.nodes.Element,java.util.List)>(r0, r1);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        $i2 = $i1 + 1;
        if $i0 <= $i2 goto label1;

        $i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        $i4 = $i3 + 1;
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i4);
        $r6 = (org.jsoup.nodes.Element) $r5;
        return $r6;

     label1:
        return null;
    }

    public org.jsoup.nodes.Element previousElementSibling()
    {
        org.jsoup.nodes.Element r0, $r4, $r6;
        org.jsoup.select.Elements r1;
        java.lang.Integer r2;
        org.jsoup.nodes.Node $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Node parentNode>;
        if $r3 != null goto label0;

        return null;

     label0:
        $r4 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        r1 = virtualinvoke $r4.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();
        r2 = staticinvoke <org.jsoup.nodes.Element: java.lang.Integer indexInList(org.jsoup.nodes.Element,java.util.List)>(r0, r1);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        $i2 = $i1 - 1;
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);
        $r6 = (org.jsoup.nodes.Element) $r5;
        return $r6;

     label1:
        return null;
    }

    public org.jsoup.nodes.Element firstElementSibling()
    {
        org.jsoup.nodes.Element r0, $r2, $r4;
        org.jsoup.select.Elements r1;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: org.jsoup.nodes.Element;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        r1 = virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        if $i0 <= 1 goto label0;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);
        $r4 = (org.jsoup.nodes.Element) $r3;
        goto label1;

     label0:
        $r4 = null;

     label1:
        return $r4;
    }

    public java.lang.Integer elementSiblingIndex()
    {
        org.jsoup.nodes.Element r0, $r1, $r3;
        java.lang.Integer $r2, $r5;
        org.jsoup.select.Elements $r4;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if $r1 != null goto label0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        return $r2;

     label0:
        $r3 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();
        $r5 = staticinvoke <org.jsoup.nodes.Element: java.lang.Integer indexInList(org.jsoup.nodes.Element,java.util.List)>(r0, $r4);
        return $r5;
    }

    public org.jsoup.nodes.Element lastElementSibling()
    {
        org.jsoup.nodes.Element r0, $r2, $r4;
        org.jsoup.select.Elements r1;
        int $i0, $i1, $i2;
        java.lang.Object $r3;

        r0 := @this: org.jsoup.nodes.Element;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        r1 = virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        if $i0 <= 1 goto label0;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();
        $i2 = $i1 - 1;
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);
        $r4 = (org.jsoup.nodes.Element) $r3;
        goto label1;

     label0:
        $r4 = null;

     label1:
        return $r4;
    }

    private static java.lang.Integer indexInList(org.jsoup.nodes.Element, java.util.List)
    {
        org.jsoup.nodes.Element r0, r2;
        java.util.List r1;
        int i0, $i1;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.Integer $r4;

        r0 := @parameter0: org.jsoup.nodes.Element;
        r1 := @parameter1: java.util.List;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r0);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        i0 = 0;

     label0:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();
        if i0 >= $i1 goto label2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);
        r2 = (org.jsoup.nodes.Element) $r3;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean equals(java.lang.Object)>(r0);
        if $z0 == 0 goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        return $r4;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return null;
    }

    public org.jsoup.select.Elements getElementsByTag(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r2, r3;
        org.jsoup.select.Evaluator$Tag $r4;
        org.jsoup.select.Elements $r5;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();
        $r4 = new org.jsoup.select.Evaluator$Tag;
        specialinvoke $r4.<org.jsoup.select.Evaluator$Tag: void <init>(java.lang.String)>(r3);
        $r5 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r4, r0);
        return $r5;
    }

    public org.jsoup.nodes.Element getElementById(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r4;
        java.lang.String r1;
        org.jsoup.select.Elements r2;
        org.jsoup.select.Evaluator$Id $r3;
        int $i0;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r3 = new org.jsoup.select.Evaluator$Id;
        specialinvoke $r3.<org.jsoup.select.Evaluator$Id: void <init>(java.lang.String)>(r1);
        r2 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r3, r0);
        $i0 = virtualinvoke r2.<org.jsoup.select.Elements: int size()>();
        if $i0 <= 0 goto label0;

        $r4 = virtualinvoke r2.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(0);
        return $r4;

     label0:
        return null;
    }

    public org.jsoup.select.Elements getElementsByClass(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        org.jsoup.select.Evaluator$Class $r2;
        org.jsoup.select.Elements $r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r2 = new org.jsoup.select.Evaluator$Class;
        specialinvoke $r2.<org.jsoup.select.Evaluator$Class: void <init>(java.lang.String)>(r1);
        $r3 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r2, r0);
        return $r3;
    }

    public org.jsoup.select.Elements getElementsByAttribute(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r2, r3;
        org.jsoup.select.Evaluator$Attribute $r4;
        org.jsoup.select.Elements $r5;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = new org.jsoup.select.Evaluator$Attribute;
        specialinvoke $r4.<org.jsoup.select.Evaluator$Attribute: void <init>(java.lang.String)>(r3);
        $r5 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r4, r0);
        return $r5;
    }

    public org.jsoup.select.Elements getElementsByAttributeStarting(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r2, r3;
        org.jsoup.select.Evaluator$AttributeStarting $r4;
        org.jsoup.select.Elements $r5;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = new org.jsoup.select.Evaluator$AttributeStarting;
        specialinvoke $r4.<org.jsoup.select.Evaluator$AttributeStarting: void <init>(java.lang.String)>(r3);
        $r5 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r4, r0);
        return $r5;
    }

    public org.jsoup.select.Elements getElementsByAttributeValue(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, r2;
        org.jsoup.select.Evaluator$AttributeWithValue $r3;
        org.jsoup.select.Elements $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.jsoup.select.Evaluator$AttributeWithValue;
        specialinvoke $r3.<org.jsoup.select.Evaluator$AttributeWithValue: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        $r4 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r3, r0);
        return $r4;
    }

    public org.jsoup.select.Elements getElementsByAttributeValueNot(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, r2;
        org.jsoup.select.Evaluator$AttributeWithValueNot $r3;
        org.jsoup.select.Elements $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.jsoup.select.Evaluator$AttributeWithValueNot;
        specialinvoke $r3.<org.jsoup.select.Evaluator$AttributeWithValueNot: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        $r4 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r3, r0);
        return $r4;
    }

    public org.jsoup.select.Elements getElementsByAttributeValueStarting(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, r2;
        org.jsoup.select.Evaluator$AttributeWithValueStarting $r3;
        org.jsoup.select.Elements $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.jsoup.select.Evaluator$AttributeWithValueStarting;
        specialinvoke $r3.<org.jsoup.select.Evaluator$AttributeWithValueStarting: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        $r4 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r3, r0);
        return $r4;
    }

    public org.jsoup.select.Elements getElementsByAttributeValueEnding(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, r2;
        org.jsoup.select.Evaluator$AttributeWithValueEnding $r3;
        org.jsoup.select.Elements $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.jsoup.select.Evaluator$AttributeWithValueEnding;
        specialinvoke $r3.<org.jsoup.select.Evaluator$AttributeWithValueEnding: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        $r4 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r3, r0);
        return $r4;
    }

    public org.jsoup.select.Elements getElementsByAttributeValueContaining(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, r2;
        org.jsoup.select.Evaluator$AttributeWithValueContaining $r3;
        org.jsoup.select.Elements $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.jsoup.select.Evaluator$AttributeWithValueContaining;
        specialinvoke $r3.<org.jsoup.select.Evaluator$AttributeWithValueContaining: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        $r4 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r3, r0);
        return $r4;
    }

    public org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String, java.util.regex.Pattern)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        java.util.regex.Pattern r2;
        org.jsoup.select.Evaluator$AttributeWithValueMatching $r3;
        org.jsoup.select.Elements $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.regex.Pattern;
        $r3 = new org.jsoup.select.Evaluator$AttributeWithValueMatching;
        specialinvoke $r3.<org.jsoup.select.Evaluator$AttributeWithValueMatching: void <init>(java.lang.String,java.util.regex.Pattern)>(r1, r2);
        $r4 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r3, r0);
        return $r4;
    }

    public org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, r2, $r10;
        java.util.regex.Pattern r3;
        java.util.regex.PatternSyntaxException r4, $r6;
        java.lang.StringBuilder $r5, $r8, $r9;
        java.lang.IllegalArgumentException $r7;
        org.jsoup.select.Elements $r11;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;

     label0:
        r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r2);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r4 = $r6;
        $r7 = new java.lang.IllegalArgumentException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pattern syntax error: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r4);
        throw $r7;

     label3:
        $r11 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String,java.util.regex.Pattern)>(r1, r3);
        return $r11;

        catch java.util.regex.PatternSyntaxException from label0 to label1 with label2;
    }

    public org.jsoup.select.Elements getElementsByIndexLessThan(int)
    {
        org.jsoup.nodes.Element r0;
        int i0;
        org.jsoup.select.Evaluator$IndexLessThan $r1;
        org.jsoup.select.Elements $r2;

        r0 := @this: org.jsoup.nodes.Element;
        i0 := @parameter0: int;
        $r1 = new org.jsoup.select.Evaluator$IndexLessThan;
        specialinvoke $r1.<org.jsoup.select.Evaluator$IndexLessThan: void <init>(int)>(i0);
        $r2 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r1, r0);
        return $r2;
    }

    public org.jsoup.select.Elements getElementsByIndexGreaterThan(int)
    {
        org.jsoup.nodes.Element r0;
        int i0;
        org.jsoup.select.Evaluator$IndexGreaterThan $r1;
        org.jsoup.select.Elements $r2;

        r0 := @this: org.jsoup.nodes.Element;
        i0 := @parameter0: int;
        $r1 = new org.jsoup.select.Evaluator$IndexGreaterThan;
        specialinvoke $r1.<org.jsoup.select.Evaluator$IndexGreaterThan: void <init>(int)>(i0);
        $r2 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r1, r0);
        return $r2;
    }

    public org.jsoup.select.Elements getElementsByIndexEquals(int)
    {
        org.jsoup.nodes.Element r0;
        int i0;
        org.jsoup.select.Evaluator$IndexEquals $r1;
        org.jsoup.select.Elements $r2;

        r0 := @this: org.jsoup.nodes.Element;
        i0 := @parameter0: int;
        $r1 = new org.jsoup.select.Evaluator$IndexEquals;
        specialinvoke $r1.<org.jsoup.select.Evaluator$IndexEquals: void <init>(int)>(i0);
        $r2 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r1, r0);
        return $r2;
    }

    public org.jsoup.select.Elements getElementsContainingText(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        org.jsoup.select.Evaluator$ContainsText $r2;
        org.jsoup.select.Elements $r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.select.Evaluator$ContainsText;
        specialinvoke $r2.<org.jsoup.select.Evaluator$ContainsText: void <init>(java.lang.String)>(r1);
        $r3 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r2, r0);
        return $r3;
    }

    public org.jsoup.select.Elements getElementsContainingOwnText(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        org.jsoup.select.Evaluator$ContainsOwnText $r2;
        org.jsoup.select.Elements $r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.select.Evaluator$ContainsOwnText;
        specialinvoke $r2.<org.jsoup.select.Evaluator$ContainsOwnText: void <init>(java.lang.String)>(r1);
        $r3 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r2, r0);
        return $r3;
    }

    public org.jsoup.select.Elements getElementsMatchingText(java.util.regex.Pattern)
    {
        org.jsoup.nodes.Element r0;
        java.util.regex.Pattern r1;
        org.jsoup.select.Evaluator$Matches $r2;
        org.jsoup.select.Elements $r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.util.regex.Pattern;
        $r2 = new org.jsoup.select.Evaluator$Matches;
        specialinvoke $r2.<org.jsoup.select.Evaluator$Matches: void <init>(java.util.regex.Pattern)>(r1);
        $r3 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r2, r0);
        return $r3;
    }

    public org.jsoup.select.Elements getElementsMatchingText(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r9;
        java.util.regex.Pattern r2;
        java.util.regex.PatternSyntaxException r3, $r5;
        java.lang.StringBuilder $r4, $r7, $r8;
        java.lang.IllegalArgumentException $r6;
        org.jsoup.select.Elements $r10;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;

     label0:
        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = new java.lang.IllegalArgumentException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pattern syntax error: ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r3);
        throw $r6;

     label3:
        $r10 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsMatchingText(java.util.regex.Pattern)>(r2);
        return $r10;

        catch java.util.regex.PatternSyntaxException from label0 to label1 with label2;
    }

    public org.jsoup.select.Elements getElementsMatchingOwnText(java.util.regex.Pattern)
    {
        org.jsoup.nodes.Element r0;
        java.util.regex.Pattern r1;
        org.jsoup.select.Evaluator$MatchesOwn $r2;
        org.jsoup.select.Elements $r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.util.regex.Pattern;
        $r2 = new org.jsoup.select.Evaluator$MatchesOwn;
        specialinvoke $r2.<org.jsoup.select.Evaluator$MatchesOwn: void <init>(java.util.regex.Pattern)>(r1);
        $r3 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r2, r0);
        return $r3;
    }

    public org.jsoup.select.Elements getElementsMatchingOwnText(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r9;
        java.util.regex.Pattern r2;
        java.util.regex.PatternSyntaxException r3, $r5;
        java.lang.StringBuilder $r4, $r7, $r8;
        java.lang.IllegalArgumentException $r6;
        org.jsoup.select.Elements $r10;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;

     label0:
        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = new java.lang.IllegalArgumentException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pattern syntax error: ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r3);
        throw $r6;

     label3:
        $r10 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsMatchingOwnText(java.util.regex.Pattern)>(r2);
        return $r10;

        catch java.util.regex.PatternSyntaxException from label0 to label1 with label2;
    }

    public org.jsoup.select.Elements getAllElements()
    {
        org.jsoup.nodes.Element r0;
        org.jsoup.select.Evaluator$AllElements $r1;
        org.jsoup.select.Elements $r2;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new org.jsoup.select.Evaluator$AllElements;
        specialinvoke $r1.<org.jsoup.select.Evaluator$AllElements: void <init>()>();
        $r2 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r1, r0);
        return $r2;
    }

    public java.lang.String text()
    {
        org.jsoup.nodes.Element r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        specialinvoke r0.<org.jsoup.nodes.Element: void text(java.lang.StringBuilder)>(r2);
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();
        return $r4;
    }

    private void text(java.lang.StringBuilder)
    {
        org.jsoup.nodes.Element r0, r7;
        java.lang.StringBuilder r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Node r3;
        org.jsoup.nodes.TextNode r4;
        java.util.List $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r6;
        int $i0;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.StringBuilder;
        staticinvoke <org.jsoup.nodes.Element: void appendWhitespaceIfBr(org.jsoup.nodes.Element,java.lang.StringBuilder)>(r0, r1);
        $r5 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Node) $r6;
        $z1 = r3 instanceof org.jsoup.nodes.TextNode;
        if $z1 == 0 goto label1;

        r4 = (org.jsoup.nodes.TextNode) r3;
        specialinvoke r0.<org.jsoup.nodes.Element: void appendNormalisedText(java.lang.StringBuilder,org.jsoup.nodes.TextNode)>(r1, r4);
        goto label3;

     label1:
        $z2 = r3 instanceof org.jsoup.nodes.Element;
        if $z2 == 0 goto label3;

        r7 = (org.jsoup.nodes.Element) r3;
        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
        if $i0 <= 0 goto label2;

        $z3 = virtualinvoke r7.<org.jsoup.nodes.Element: boolean isBlock()>();
        if $z3 == 0 goto label2;

        $z4 = staticinvoke <org.jsoup.nodes.TextNode: boolean lastCharIsWhitespace(java.lang.StringBuilder)>(r1);
        if $z4 != 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        specialinvoke r7.<org.jsoup.nodes.Element: void text(java.lang.StringBuilder)>(r1);

     label3:
        goto label0;

     label4:
        return;
    }

    public java.lang.String ownText()
    {
        org.jsoup.nodes.Element r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        specialinvoke r0.<org.jsoup.nodes.Element: void ownText(java.lang.StringBuilder)>(r2);
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();
        return $r4;
    }

    private void ownText(java.lang.StringBuilder)
    {
        org.jsoup.nodes.Element r0, $r7;
        java.lang.StringBuilder r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Node r3;
        org.jsoup.nodes.TextNode r4;
        java.util.List $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.StringBuilder;
        $r5 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Node) $r6;
        $z1 = r3 instanceof org.jsoup.nodes.TextNode;
        if $z1 == 0 goto label1;

        r4 = (org.jsoup.nodes.TextNode) r3;
        specialinvoke r0.<org.jsoup.nodes.Element: void appendNormalisedText(java.lang.StringBuilder,org.jsoup.nodes.TextNode)>(r1, r4);
        goto label2;

     label1:
        $z2 = r3 instanceof org.jsoup.nodes.Element;
        if $z2 == 0 goto label2;

        $r7 = (org.jsoup.nodes.Element) r3;
        staticinvoke <org.jsoup.nodes.Element: void appendWhitespaceIfBr(org.jsoup.nodes.Element,java.lang.StringBuilder)>($r7, r1);

     label2:
        goto label0;

     label3:
        return;
    }

    private void appendNormalisedText(java.lang.StringBuilder, org.jsoup.nodes.TextNode)
    {
        org.jsoup.nodes.Element r0;
        java.lang.StringBuilder r1;
        org.jsoup.nodes.TextNode r2;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 := @parameter1: org.jsoup.nodes.TextNode;
        r3 = virtualinvoke r2.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();
        $z0 = virtualinvoke r0.<org.jsoup.nodes.Element: boolean preserveWhitespace()>();
        if $z0 != 0 goto label0;

        r3 = staticinvoke <org.jsoup.nodes.TextNode: java.lang.String normaliseWhitespace(java.lang.String)>(r3);
        $z1 = staticinvoke <org.jsoup.nodes.TextNode: boolean lastCharIsWhitespace(java.lang.StringBuilder)>(r1);
        if $z1 == 0 goto label0;

        r3 = staticinvoke <org.jsoup.nodes.TextNode: java.lang.String stripLeadingWhitespace(java.lang.String)>(r3);

     label0:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        return;
    }

    private static void appendWhitespaceIfBr(org.jsoup.nodes.Element, java.lang.StringBuilder)
    {
        org.jsoup.nodes.Element r0;
        java.lang.StringBuilder r1;
        org.jsoup.parser.Tag $r2;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.jsoup.nodes.Element;
        r1 := @parameter1: java.lang.StringBuilder;
        $r2 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $r3 = virtualinvoke $r2.<org.jsoup.parser.Tag: java.lang.String getName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("br");
        if $z0 == 0 goto label0;

        $z1 = staticinvoke <org.jsoup.nodes.TextNode: boolean lastCharIsWhitespace(java.lang.StringBuilder)>(r1);
        if $z1 != 0 goto label0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label0:
        return;
    }

    boolean preserveWhitespace()
    {
        org.jsoup.nodes.Element r0, $r2, $r3;
        org.jsoup.parser.Tag $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Tag: boolean preserveWhitespace()>();
        if $z0 != 0 goto label0;

        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        $z1 = virtualinvoke $r3.<org.jsoup.nodes.Element: boolean preserveWhitespace()>();
        if $z1 == 0 goto label1;

     label0:
        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public org.jsoup.nodes.Element text(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r5;
        org.jsoup.nodes.TextNode r2, $r4;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element empty()>();
        $r4 = new org.jsoup.nodes.TextNode;
        $r5 = r0.<org.jsoup.nodes.Element: java.lang.String baseUri>;
        specialinvoke $r4.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>(r1, $r5);
        r2 = $r4;
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r2);
        return r0;
    }

    public boolean hasText()
    {
        org.jsoup.nodes.Element r0, r6;
        java.util.Iterator r1;
        org.jsoup.nodes.Node r2;
        org.jsoup.nodes.TextNode r3;
        java.util.List $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.nodes.Element;
        $r4 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.jsoup.nodes.Node) $r5;
        $z1 = r2 instanceof org.jsoup.nodes.TextNode;
        if $z1 == 0 goto label2;

        r3 = (org.jsoup.nodes.TextNode) r2;
        $z2 = virtualinvoke r3.<org.jsoup.nodes.TextNode: boolean isBlank()>();
        if $z2 != 0 goto label1;

        return 1;

     label1:
        goto label3;

     label2:
        $z3 = r2 instanceof org.jsoup.nodes.Element;
        if $z3 == 0 goto label3;

        r6 = (org.jsoup.nodes.Element) r2;
        $z4 = virtualinvoke r6.<org.jsoup.nodes.Element: boolean hasText()>();
        if $z4 == 0 goto label3;

        return 1;

     label3:
        goto label0;

     label4:
        return 0;
    }

    public java.lang.String data()
    {
        org.jsoup.nodes.Element r0, r11;
        java.lang.StringBuilder $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Node r4;
        org.jsoup.nodes.DataNode r5;
        java.lang.String r6, $r9, $r13;
        java.util.List $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r7 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Node) $r8;
        $z1 = r4 instanceof org.jsoup.nodes.DataNode;
        if $z1 == 0 goto label1;

        r5 = (org.jsoup.nodes.DataNode) r4;
        $r9 = virtualinvoke r5.<org.jsoup.nodes.DataNode: java.lang.String getWholeData()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        goto label2;

     label1:
        $z2 = r4 instanceof org.jsoup.nodes.Element;
        if $z2 == 0 goto label2;

        r11 = (org.jsoup.nodes.Element) r4;
        r6 = virtualinvoke r11.<org.jsoup.nodes.Element: java.lang.String data()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

     label2:
        goto label0;

     label3:
        $r13 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r13;
    }

    public java.lang.String className()
    {
        org.jsoup.nodes.Element r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("class");
        return $r1;
    }

    public java.util.Set classNames()
    {
        org.jsoup.nodes.Element r0;
        java.lang.String[] r1;
        java.util.Set $r2, $r6;
        java.lang.String $r3;
        java.util.LinkedHashSet $r4;
        java.util.List $r5;

        r0 := @this: org.jsoup.nodes.Element;
        $r2 = r0.<org.jsoup.nodes.Element: java.util.Set classNames>;
        if $r2 != null goto label0;

        $r3 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String className()>();
        r1 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");
        $r4 = new java.util.LinkedHashSet;
        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);
        specialinvoke $r4.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r5);
        r0.<org.jsoup.nodes.Element: java.util.Set classNames> = $r4;

     label0:
        $r6 = r0.<org.jsoup.nodes.Element: java.util.Set classNames>;
        return $r6;
    }

    public org.jsoup.nodes.Element classNames(java.util.Set)
    {
        org.jsoup.nodes.Element r0;
        java.util.Set r1;
        org.jsoup.nodes.Attributes $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.util.Set;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r2 = r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes>;
        $r3 = staticinvoke <org.jsoup.helper.StringUtil: java.lang.String join(java.util.Collection,java.lang.String)>(r1, " ");
        virtualinvoke $r2.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("class", $r3);
        return r0;
    }

    public boolean hasClass(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, r4;
        java.util.Set r2;
        java.util.Iterator r3;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.jsoup.nodes.Element: java.util.Set classNames()>();
        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.String) $r5;
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    public org.jsoup.nodes.Element addClass(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        java.util.Set r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r2 = virtualinvoke r0.<org.jsoup.nodes.Element: java.util.Set classNames()>();
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r1);
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element classNames(java.util.Set)>(r2);
        return r0;
    }

    public org.jsoup.nodes.Element removeClass(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        java.util.Set r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r2 = virtualinvoke r0.<org.jsoup.nodes.Element: java.util.Set classNames()>();
        interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element classNames(java.util.Set)>(r2);
        return r0;
    }

    public org.jsoup.nodes.Element toggleClass(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;
        java.util.Set r2;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r2 = virtualinvoke r0.<org.jsoup.nodes.Element: java.util.Set classNames()>();
        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        if $z0 == 0 goto label0;

        interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);
        goto label1;

     label0:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label1:
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element classNames(java.util.Set)>(r2);
        return r0;
    }

    public java.lang.String val()
    {
        org.jsoup.nodes.Element r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("textarea");
        if $z0 == 0 goto label0;

        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String text()>();
        return $r2;

     label0:
        $r3 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("value");
        return $r3;
    }

    public org.jsoup.nodes.Element val(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("textarea");
        if $z0 == 0 goto label0;

        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element text(java.lang.String)>(r1);
        goto label1;

     label0:
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element attr(java.lang.String,java.lang.String)>("value", r1);

     label1:
        return r0;
    }

    void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Element r0, $r4, $r5;
        java.lang.StringBuilder r1, $r7;
        int i0, $i1;
        org.jsoup.nodes.Document$OutputSettings r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.parser.Tag $r3, $r6, $r12;
        java.lang.String $r8;
        org.jsoup.nodes.Attributes $r10;
        java.util.List $r11;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        $i1 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
        if $i1 <= 0 goto label1;

        $z0 = virtualinvoke r2.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint()>();
        if $z0 == 0 goto label1;

        $r3 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $z1 = virtualinvoke $r3.<org.jsoup.parser.Tag: boolean formatAsBlock()>();
        if $z1 != 0 goto label0;

        $r4 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        $r6 = virtualinvoke $r5.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag()>();
        $z2 = virtualinvoke $r6.<org.jsoup.parser.Tag: boolean formatAsBlock()>();
        if $z2 == 0 goto label1;

     label0:
        virtualinvoke r0.<org.jsoup.nodes.Element: void indent(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings)>(r1, i0, r2);

     label1:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $r8 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r10.<org.jsoup.nodes.Attributes: void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings)>(r1, r2);
        $r11 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        $z3 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();
        if $z3 == 0 goto label2;

        $r12 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $z4 = virtualinvoke $r12.<org.jsoup.parser.Tag: boolean isSelfClosing()>();
        if $z4 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" />");
        goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

     label3:
        return;
    }

    void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Element r0;
        java.lang.StringBuilder r1, $r7, $r9;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;
        java.util.List $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.parser.Tag $r4, $r6;
        java.lang.String $r8;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        $r3 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $z1 = virtualinvoke $r4.<org.jsoup.parser.Tag: boolean isSelfClosing()>();
        if $z1 != 0 goto label2;

     label0:
        $z2 = virtualinvoke r2.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint()>();
        if $z2 == 0 goto label1;

        $r5 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        $z3 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();
        if $z3 != 0 goto label1;

        $r6 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $z4 = virtualinvoke $r6.<org.jsoup.parser.Tag: boolean formatAsBlock()>();
        if $z4 == 0 goto label1;

        virtualinvoke r0.<org.jsoup.nodes.Element: void indent(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings)>(r1, i0, r2);

     label1:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r8 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

     label2:
        return;
    }

    public java.lang.String html()
    {
        org.jsoup.nodes.Element r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        specialinvoke r0.<org.jsoup.nodes.Element: void html(java.lang.StringBuilder)>(r2);
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();
        return $r4;
    }

    private void html(java.lang.StringBuilder)
    {
        org.jsoup.nodes.Element r0;
        java.lang.StringBuilder r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Node r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.StringBuilder;
        $r4 = r0.<org.jsoup.nodes.Element: java.util.List childNodes>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Node) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Node: void outerHtml(java.lang.StringBuilder)>(r1);
        goto label0;

     label1:
        return;
    }

    public org.jsoup.nodes.Element html(java.lang.String)
    {
        org.jsoup.nodes.Element r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element empty()>();
        virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element append(java.lang.String)>(r1);
        return r0;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.Element r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: java.lang.String outerHtml()>();
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.jsoup.nodes.Element r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public int hashCode()
    {
        org.jsoup.nodes.Element r0;
        int i0, $i1, $i2, i3;
        org.jsoup.parser.Tag $r1, $r2;

        r0 := @this: org.jsoup.nodes.Element;
        i0 = specialinvoke r0.<org.jsoup.nodes.Node: int hashCode()>();
        $i1 = 31 * i0;
        $r1 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        if $r1 == null goto label0;

        $r2 = r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag>;
        $i2 = virtualinvoke $r2.<org.jsoup.parser.Tag: int hashCode()>();
        goto label1;

     label0:
        $i2 = 0;

     label1:
        i3 = $i1 + $i2;
        return i3;
    }

    public org.jsoup.nodes.Element clone()
    {
        org.jsoup.nodes.Element r0, r1;
        org.jsoup.nodes.Node $r2;

        r0 := @this: org.jsoup.nodes.Element;
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node clone()>();
        r1 = (org.jsoup.nodes.Element) $r2;
        virtualinvoke r1.<org.jsoup.nodes.Element: java.util.Set classNames()>();
        return r1;
    }

    public volatile org.jsoup.nodes.Node clone()
    {
        org.jsoup.nodes.Element r0, $r1;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element clone()>();
        return $r1;
    }

    public volatile org.jsoup.nodes.Node wrap(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r2;
        java.lang.String r1;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element wrap(java.lang.String)>(r1);
        return $r2;
    }

    public volatile org.jsoup.nodes.Node after(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Element r0, $r2;
        org.jsoup.nodes.Node r1;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element after(org.jsoup.nodes.Node)>(r1);
        return $r2;
    }

    public volatile org.jsoup.nodes.Node after(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r2;
        java.lang.String r1;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element after(java.lang.String)>(r1);
        return $r2;
    }

    public volatile org.jsoup.nodes.Node before(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Element r0, $r2;
        org.jsoup.nodes.Node r1;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element before(org.jsoup.nodes.Node)>(r1);
        return $r2;
    }

    public volatile org.jsoup.nodes.Node before(java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r2;
        java.lang.String r1;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element before(java.lang.String)>(r1);
        return $r2;
    }

    public volatile org.jsoup.nodes.Node parent()
    {
        org.jsoup.nodes.Element r0, $r1;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        return $r1;
    }

    public volatile org.jsoup.nodes.Node attr(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Element r0, $r3;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.nodes.Element;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element attr(java.lang.String,java.lang.String)>(r1, r2);
        return $r3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.nodes.Element r0, $r1;

        r0 := @this: org.jsoup.nodes.Element;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element clone()>();
        return $r1;
    }
}
public final enum class org.jsoup.nodes.Entities$EscapeMode extends java.lang.Enum
{
    public static final enum org.jsoup.nodes.Entities$EscapeMode xhtml;
    public static final enum org.jsoup.nodes.Entities$EscapeMode base;
    public static final enum org.jsoup.nodes.Entities$EscapeMode extended;
    private java.util.Map map;
    private static final org.jsoup.nodes.Entities$EscapeMode[] $VALUES;

    public static org.jsoup.nodes.Entities$EscapeMode[] values()
    {
        org.jsoup.nodes.Entities$EscapeMode[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.jsoup.nodes.Entities$EscapeMode[]) $r1;
        return $r2;
    }

    public static org.jsoup.nodes.Entities$EscapeMode valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.jsoup.nodes.Entities$EscapeMode $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/jsoup/nodes/Entities$EscapeMode", r0);
        $r2 = (org.jsoup.nodes.Entities$EscapeMode) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int, java.util.Map)
    {
        org.jsoup.nodes.Entities$EscapeMode r0;
        java.lang.String r1;
        int i0;
        java.util.Map r2;

        r0 := @this: org.jsoup.nodes.Entities$EscapeMode;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.util.Map;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r0.<org.jsoup.nodes.Entities$EscapeMode: java.util.Map map> = r2;
        return;
    }

    public java.util.Map getMap()
    {
        org.jsoup.nodes.Entities$EscapeMode r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.nodes.Entities$EscapeMode;
        $r1 = r0.<org.jsoup.nodes.Entities$EscapeMode: java.util.Map map>;
        return $r1;
    }

    static void <clinit>()
    {
        org.jsoup.nodes.Entities$EscapeMode $r0, $r2, $r4, $r7, $r8, $r9;
        java.util.Map $r1, $r3, $r5;
        org.jsoup.nodes.Entities$EscapeMode[] $r6;

        $r0 = new org.jsoup.nodes.Entities$EscapeMode;
        $r1 = staticinvoke <org.jsoup.nodes.Entities: java.util.Map access$000()>();
        specialinvoke $r0.<org.jsoup.nodes.Entities$EscapeMode: void <init>(java.lang.String,int,java.util.Map)>("xhtml", 0, $r1);
        <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode xhtml> = $r0;
        $r2 = new org.jsoup.nodes.Entities$EscapeMode;
        $r3 = staticinvoke <org.jsoup.nodes.Entities: java.util.Map access$100()>();
        specialinvoke $r2.<org.jsoup.nodes.Entities$EscapeMode: void <init>(java.lang.String,int,java.util.Map)>("base", 1, $r3);
        <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode base> = $r2;
        $r4 = new org.jsoup.nodes.Entities$EscapeMode;
        $r5 = staticinvoke <org.jsoup.nodes.Entities: java.util.Map access$200()>();
        specialinvoke $r4.<org.jsoup.nodes.Entities$EscapeMode: void <init>(java.lang.String,int,java.util.Map)>("extended", 2, $r5);
        <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode extended> = $r4;
        $r6 = newarray (org.jsoup.nodes.Entities$EscapeMode)[3];
        $r7 = <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode xhtml>;
        $r6[0] = $r7;
        $r8 = <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode base>;
        $r6[1] = $r8;
        $r9 = <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode extended>;
        $r6[2] = $r9;
        <org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode[] $VALUES> = $r6;
        return;
    }
}
public class org.jsoup.nodes.Entities extends java.lang.Object
{
    private static final java.util.Map full;
    private static final java.util.Map xhtmlByVal;
    private static final java.util.Map baseByVal;
    private static final java.util.Map fullByVal;
    private static final java.util.regex.Pattern unescapePattern;
    private static final java.util.regex.Pattern strictUnescapePattern;
    private static final java.lang.Object[][] xhtmlArray;

    private void <init>()
    {
        org.jsoup.nodes.Entities r0;

        r0 := @this: org.jsoup.nodes.Entities;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean isNamedEntity(java.lang.String)
    {
        java.lang.String r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.jsoup.nodes.Entities: java.util.Map full>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);
        return $z0;
    }

    public static java.lang.Character getCharacterByName(java.lang.String)
    {
        java.lang.String r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Character $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.jsoup.nodes.Entities: java.util.Map full>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        $r3 = (java.lang.Character) $r2;
        return $r3;
    }

    static java.lang.String escape(java.lang.String, org.jsoup.nodes.Document$OutputSettings)
    {
        java.lang.String r0, $r4;
        org.jsoup.nodes.Document$OutputSettings r1;
        java.nio.charset.CharsetEncoder $r2;
        org.jsoup.nodes.Entities$EscapeMode $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.jsoup.nodes.Document$OutputSettings;
        $r2 = virtualinvoke r1.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.CharsetEncoder encoder()>();
        $r3 = virtualinvoke r1.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Entities$EscapeMode escapeMode()>();
        $r4 = staticinvoke <org.jsoup.nodes.Entities: java.lang.String escape(java.lang.String,java.nio.charset.CharsetEncoder,org.jsoup.nodes.Entities$EscapeMode)>(r0, $r2, $r3);
        return $r4;
    }

    static java.lang.String escape(java.lang.String, java.nio.charset.CharsetEncoder, org.jsoup.nodes.Entities$EscapeMode)
    {
        java.lang.String r0, $r9, $r16;
        java.nio.charset.CharsetEncoder r1;
        org.jsoup.nodes.Entities$EscapeMode r2;
        java.lang.StringBuilder $r3, r4, $r7, $r10, $r13, $r14;
        java.util.Map r5;
        int i0, $i1, $i2, $i3;
        java.lang.Character r6;
        char $c4, $c5, $c6, $c7;
        boolean $z0, $z1;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.nio.charset.CharsetEncoder;
        r2 := @parameter2: org.jsoup.nodes.Entities$EscapeMode;
        $r3 = new java.lang.StringBuilder;
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        $i2 = $i1 * 2;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i2);
        r4 = $r3;
        r5 = virtualinvoke r2.<org.jsoup.nodes.Entities$EscapeMode: java.util.Map getMap()>();
        i0 = 0;

     label0:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 >= $i3 goto label4;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4);
        $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);
        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);
        $r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);
        $r9 = (java.lang.String) $r8;
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);
        goto label3;

     label1:
        $c5 = virtualinvoke r6.<java.lang.Character: char charValue()>();
        $z1 = virtualinvoke r1.<java.nio.charset.CharsetEncoder: boolean canEncode(char)>($c5);
        if $z1 == 0 goto label2;

        $c6 = virtualinvoke r6.<java.lang.Character: char charValue()>();
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);
        goto label3;

     label2:
        $r13 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $c7 = virtualinvoke r6.<java.lang.Character: char charValue()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($c7);
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

     label3:
        i0 = i0 + 1;
        goto label0;

     label4:
        $r16 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;
    }

    static java.lang.String unescape(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>(r0, 0);
        return $r1;
    }

    static java.lang.String unescape(java.lang.String, boolean)
    {
        java.lang.String r0, r3, $r8, r12, r17, $r18, $r20, $r21, $r24;
        boolean z0, $z1, $z2, $z3;
        java.util.regex.Matcher r1, $r5;
        java.lang.StringBuffer r2, $r7;
        int i0, $i2;
        byte b1, $b3;
        java.util.regex.Pattern $r4, $r6;
        java.lang.Integer $r9;
        java.lang.NumberFormatException $r10, r11;
        java.util.Map $r13, $r14;
        java.lang.Object $r15;
        java.lang.Character $r16;
        char $c4;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("&");
        if $z1 != 0 goto label0;

        return r0;

     label0:
        if z0 == 0 goto label1;

        $r4 = <org.jsoup.nodes.Entities: java.util.regex.Pattern strictUnescapePattern>;
        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        goto label2;

     label1:
        $r6 = <org.jsoup.nodes.Entities: java.util.regex.Pattern unescapePattern>;
        $r5 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label2:
        r1 = $r5;
        $r7 = new java.lang.StringBuffer;
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        specialinvoke $r7.<java.lang.StringBuffer: void <init>(int)>($i2);
        r2 = $r7;

     label3:
        $z2 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();
        if $z2 == 0 goto label14;

        i0 = -1;
        r3 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(3);
        if r3 == null goto label9;

     label4:
        $r8 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);
        if $r8 == null goto label5;

        $b3 = 16;
        goto label6;

     label5:
        $b3 = 10;

     label6:
        b1 = $b3;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(r3, b1);
        i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

     label7:
        goto label10;

     label8:
        $r10 := @caughtexception;
        r11 = $r10;
        goto label10;

     label9:
        r12 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $r13 = <org.jsoup.nodes.Entities: java.util.Map full>;
        $z3 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>(r12);
        if $z3 == 0 goto label10;

        $r14 = <org.jsoup.nodes.Entities: java.util.Map full>;
        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);
        $r16 = (java.lang.Character) $r15;
        i0 = virtualinvoke $r16.<java.lang.Character: char charValue()>();

     label10:
        if i0 != -1 goto label11;

        if i0 <= 65535 goto label12;

     label11:
        $c4 = (char) i0;
        r17 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c4);
        $r18 = staticinvoke <java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>(r17);
        virtualinvoke r1.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r2, $r18);
        goto label13;

     label12:
        $r20 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(0);
        $r21 = staticinvoke <java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>($r20);
        virtualinvoke r1.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r2, $r21);

     label13:
        goto label3;

     label14:
        virtualinvoke r1.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r2);
        $r24 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r24;

        catch java.lang.NumberFormatException from label4 to label7 with label8;
    }

    private static java.util.Map loadEntities(java.lang.String)
    {
        java.lang.String r0, r8, $r15, $r17, $r22;
        java.util.Properties $r1, r2;
        java.util.HashMap r3, $r9;
        java.io.InputStream r4;
        java.lang.StringBuilder $r5, $r14, $r16;
        java.util.Map$Entry r6;
        java.lang.Character r7;
        java.lang.Class $r10;
        java.io.IOException $r11, r12;
        java.util.MissingResourceException $r13;
        java.util.Set $r18;
        java.util.Iterator r19;
        boolean $z0;
        java.lang.Object $r20, $r21, $r23;
        int $i0;
        char $c1;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.util.Properties;
        specialinvoke $r1.<java.util.Properties: void <init>()>();
        r2 = $r1;
        $r9 = new java.util.HashMap;
        specialinvoke $r9.<java.util.HashMap: void <init>()>();
        r3 = $r9;

     label0:
        $r10 = class "org/jsoup/nodes/Entities";
        r4 = virtualinvoke $r10.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r0);
        virtualinvoke r2.<java.util.Properties: void load(java.io.InputStream)>(r4);
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label1:
        goto label3;

     label2:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = new java.util.MissingResourceException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading entities resource: ");
        $r15 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>();
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r13.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r17, "Entities", r0);
        throw $r13;

     label3:
        $r18 = virtualinvoke r2.<java.util.Properties: java.util.Set entrySet()>();
        r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.util.Map$Entry) $r20;
        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r22 = (java.lang.String) $r21;
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r22, 16);
        $c1 = (char) $i0;
        r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);
        $r23 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        r8 = (java.lang.String) $r23;
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r7);
        goto label4;

     label5:
        return r3;

        catch java.io.IOException from label0 to label1 with label2;
    }

    private static java.util.Map toCharacterKey(java.util.Map)
    {
        java.util.Map r0;
        java.util.HashMap $r1, r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.Character r5;
        java.lang.String r6, $r11;
        java.util.Set $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r9, $r10;

        r0 := @parameter0: java.util.Map;
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        r2 = $r1;
        $r7 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r8;
        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r5 = (java.lang.Character) $r9;
        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        r6 = (java.lang.String) $r10;
        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);
        if $z1 == 0 goto label1;

        $r11 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase()>();
        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r6);
        if $z2 == 0 goto label2;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);
        goto label2;

     label1:
        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

     label2:
        goto label0;

     label3:
        return r2;
    }

    static java.util.Map access$000()
    {
        java.util.Map $r0;

        $r0 = <org.jsoup.nodes.Entities: java.util.Map xhtmlByVal>;
        return $r0;
    }

    static java.util.Map access$100()
    {
        java.util.Map $r0;

        $r0 = <org.jsoup.nodes.Entities: java.util.Map baseByVal>;
        return $r0;
    }

    static java.util.Map access$200()
    {
        java.util.Map $r0;

        $r0 = <org.jsoup.nodes.Entities: java.util.Map fullByVal>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Object[][] r0, $r5;
        int i0, i1, $i2;
        java.lang.Object[] r1, $r6, $r8, $r10, $r12, $r14;
        java.lang.Character r2;
        java.util.regex.Pattern $r3, $r4;
        java.lang.Integer $r7, $r9, $r11, $r13, $r15, $r23;
        java.util.HashMap $r16;
        java.util.Map $r17, $r18, $r19, $r20, $r21, $r24;
        java.lang.Object $r22, $r25;
        char $c3;
        java.lang.String $r26;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\d*);?");
        <org.jsoup.nodes.Entities: java.util.regex.Pattern unescapePattern> = $r3;
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\d*);");
        <org.jsoup.nodes.Entities: java.util.regex.Pattern strictUnescapePattern> = $r4;
        $r5 = newarray (java.lang.Object[])[5];
        $r6 = newarray (java.lang.Object)[2];
        $r6[0] = "quot";
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(34);
        $r6[1] = $r7;
        $r5[0] = $r6;
        $r8 = newarray (java.lang.Object)[2];
        $r8[0] = "amp";
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(38);
        $r8[1] = $r9;
        $r5[1] = $r8;
        $r10 = newarray (java.lang.Object)[2];
        $r10[0] = "apos";
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(39);
        $r10[1] = $r11;
        $r5[2] = $r10;
        $r12 = newarray (java.lang.Object)[2];
        $r12[0] = "lt";
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60);
        $r12[1] = $r13;
        $r5[3] = $r12;
        $r14 = newarray (java.lang.Object)[2];
        $r14[0] = "gt";
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(62);
        $r14[1] = $r15;
        $r5[4] = $r14;
        <org.jsoup.nodes.Entities: java.lang.Object[][] xhtmlArray> = $r5;
        $r16 = new java.util.HashMap;
        specialinvoke $r16.<java.util.HashMap: void <init>()>();
        <org.jsoup.nodes.Entities: java.util.Map xhtmlByVal> = $r16;
        $r17 = staticinvoke <org.jsoup.nodes.Entities: java.util.Map loadEntities(java.lang.String)>("entities-base.properties");
        $r18 = staticinvoke <org.jsoup.nodes.Entities: java.util.Map toCharacterKey(java.util.Map)>($r17);
        <org.jsoup.nodes.Entities: java.util.Map baseByVal> = $r18;
        $r19 = staticinvoke <org.jsoup.nodes.Entities: java.util.Map loadEntities(java.lang.String)>("entities-full.properties");
        <org.jsoup.nodes.Entities: java.util.Map full> = $r19;
        $r20 = <org.jsoup.nodes.Entities: java.util.Map full>;
        $r21 = staticinvoke <org.jsoup.nodes.Entities: java.util.Map toCharacterKey(java.util.Map)>($r20);
        <org.jsoup.nodes.Entities: java.util.Map fullByVal> = $r21;
        r0 = <org.jsoup.nodes.Entities: java.lang.Object[][] xhtmlArray>;
        i0 = lengthof r0;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r1 = r0[i1];
        $r22 = r1[1];
        $r23 = (java.lang.Integer) $r22;
        $i2 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();
        $c3 = (char) $i2;
        r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);
        $r24 = <org.jsoup.nodes.Entities: java.util.Map xhtmlByVal>;
        $r25 = r1[0];
        $r26 = (java.lang.String) $r25;
        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r26);
        i1 = i1 + 1;
        goto label0;

     label1:
        return;
    }
}
class org.jsoup.nodes.Node$1 extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    final java.lang.String val$baseUri;
    final org.jsoup.nodes.Node this$0;

    void <init>(org.jsoup.nodes.Node, java.lang.String)
    {
        org.jsoup.nodes.Node$1 r0;
        org.jsoup.nodes.Node r1;
        java.lang.String r2;

        r0 := @this: org.jsoup.nodes.Node$1;
        r1 := @parameter0: org.jsoup.nodes.Node;
        r2 := @parameter1: java.lang.String;
        r0.<org.jsoup.nodes.Node$1: org.jsoup.nodes.Node this$0> = r1;
        r0.<org.jsoup.nodes.Node$1: java.lang.String val$baseUri> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node$1 r0;
        org.jsoup.nodes.Node r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: org.jsoup.nodes.Node$1;
        r1 := @parameter0: org.jsoup.nodes.Node;
        i0 := @parameter1: int;
        $r2 = r0.<org.jsoup.nodes.Node$1: java.lang.String val$baseUri>;
        r1.<org.jsoup.nodes.Node: java.lang.String baseUri> = $r2;
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node$1 r0;
        org.jsoup.nodes.Node r1;
        int i0;

        r0 := @this: org.jsoup.nodes.Node$1;
        r1 := @parameter0: org.jsoup.nodes.Node;
        i0 := @parameter1: int;
        return;
    }
}
class org.jsoup.nodes.Node$OuterHtmlVisitor extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    private java.lang.StringBuilder accum;
    private org.jsoup.nodes.Document$OutputSettings out;

    void <init>(java.lang.StringBuilder, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Node$OuterHtmlVisitor r0;
        java.lang.StringBuilder r1;
        org.jsoup.nodes.Document$OutputSettings r2;

        r0 := @this: org.jsoup.nodes.Node$OuterHtmlVisitor;
        r1 := @parameter0: java.lang.StringBuilder;
        r2 := @parameter1: org.jsoup.nodes.Document$OutputSettings;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: java.lang.StringBuilder accum> = r1;
        r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: org.jsoup.nodes.Document$OutputSettings out> = r2;
        return;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node$OuterHtmlVisitor r0;
        org.jsoup.nodes.Node r1;
        int i0;
        java.lang.StringBuilder $r2;
        org.jsoup.nodes.Document$OutputSettings $r3;

        r0 := @this: org.jsoup.nodes.Node$OuterHtmlVisitor;
        r1 := @parameter0: org.jsoup.nodes.Node;
        i0 := @parameter1: int;
        $r2 = r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: java.lang.StringBuilder accum>;
        $r3 = r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: org.jsoup.nodes.Document$OutputSettings out>;
        virtualinvoke r1.<org.jsoup.nodes.Node: void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings)>($r2, i0, $r3);
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node$OuterHtmlVisitor r0;
        org.jsoup.nodes.Node r1;
        int i0;
        java.lang.String $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        org.jsoup.nodes.Document$OutputSettings $r4;

        r0 := @this: org.jsoup.nodes.Node$OuterHtmlVisitor;
        r1 := @parameter0: org.jsoup.nodes.Node;
        i0 := @parameter1: int;
        $r2 = virtualinvoke r1.<org.jsoup.nodes.Node: java.lang.String nodeName()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("#text");
        if $z0 != 0 goto label0;

        $r3 = r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: java.lang.StringBuilder accum>;
        $r4 = r0.<org.jsoup.nodes.Node$OuterHtmlVisitor: org.jsoup.nodes.Document$OutputSettings out>;
        virtualinvoke r1.<org.jsoup.nodes.Node: void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings)>($r3, i0, $r4);

     label0:
        return;
    }
}
public abstract class org.jsoup.nodes.Node extends java.lang.Object implements java.lang.Cloneable
{
    org.jsoup.nodes.Node parentNode;
    java.util.List childNodes;
    org.jsoup.nodes.Attributes attributes;
    java.lang.String baseUri;
    int siblingIndex;

    protected void <init>(java.lang.String, org.jsoup.nodes.Attributes)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1, $r4;
        org.jsoup.nodes.Attributes r2;
        java.util.ArrayList $r3;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.jsoup.nodes.Attributes;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(4);
        r0.<org.jsoup.nodes.Node: java.util.List childNodes> = $r3;
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        r0.<org.jsoup.nodes.Node: java.lang.String baseUri> = $r4;
        r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes> = r2;
        return;
    }

    protected void <init>(java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1;
        org.jsoup.nodes.Attributes $r2;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.nodes.Attributes;
        specialinvoke $r2.<org.jsoup.nodes.Attributes: void <init>()>();
        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>(r1, $r2);
        return;
    }

    protected void <init>()
    {
        org.jsoup.nodes.Node r0;
        java.util.List $r1;

        r0 := @this: org.jsoup.nodes.Node;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r0.<org.jsoup.nodes.Node: java.util.List childNodes> = $r1;
        r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes> = null;
        return;
    }

    public abstract java.lang.String nodeName();

    public java.lang.String attr(java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1, $r2, $r5, $r6, $r7, $r8;
        org.jsoup.nodes.Attributes $r3, $r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        $z0 = virtualinvoke $r3.<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>(r1);
        return $r5;

     label0:
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("abs:");
        if $z1 == 0 goto label1;

        $r2 = "abs:";
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);
        $r8 = virtualinvoke r0.<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>($r7);
        return $r8;

     label1:
        return "";
    }

    public org.jsoup.nodes.Attributes attributes()
    {
        org.jsoup.nodes.Node r0;
        org.jsoup.nodes.Attributes $r1;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        return $r1;
    }

    public org.jsoup.nodes.Node attr(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1, r2;
        org.jsoup.nodes.Attributes $r3;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>(r1, r2);
        return r0;
    }

    public boolean hasAttr(java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1, r2, $r3, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        org.jsoup.nodes.Attributes $r5, $r7;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("abs:");
        if $z0 == 0 goto label0;

        $r4 = "abs:";
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);
        $r5 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        $z1 = virtualinvoke $r5.<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>(r2);
        if $z1 == 0 goto label0;

        $r6 = virtualinvoke r0.<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>(r2);
        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z2 != 0 goto label0;

        return 1;

     label0:
        $r7 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        $z3 = virtualinvoke $r7.<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>(r1);
        return $z3;
    }

    public org.jsoup.nodes.Node removeAttr(java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1;
        org.jsoup.nodes.Attributes $r2;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r2.<org.jsoup.nodes.Attributes: void remove(java.lang.String)>(r1);
        return r0;
    }

    public java.lang.String baseUri()
    {
        org.jsoup.nodes.Node r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = r0.<org.jsoup.nodes.Node: java.lang.String baseUri>;
        return $r1;
    }

    public void setBaseUri(java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1;
        org.jsoup.nodes.Node$1 $r2;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r2 = new org.jsoup.nodes.Node$1;
        specialinvoke $r2.<org.jsoup.nodes.Node$1: void <init>(org.jsoup.nodes.Node,java.lang.String)>(r0, r1);
        virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node traverse(org.jsoup.select.NodeVisitor)>($r2);
        return;
    }

    public java.lang.String absUrl(java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1, r2, $r7, $r10, $r12, $r17;
        java.net.URL r3, r5, $r6, $r9, $r15, r16;
        java.net.MalformedURLException r4, $r8, $r18, r19;
        boolean $z0, $z1;
        java.lang.StringBuilder $r11, $r13, $r14;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        r2 = virtualinvoke r0.<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>(r1);
        $z0 = virtualinvoke r0.<org.jsoup.nodes.Node: boolean hasAttr(java.lang.String)>(r1);
        if $z0 != 0 goto label0;

        return "";

     label0:
        $r6 = new java.net.URL;
        $r7 = r0.<org.jsoup.nodes.Node: java.lang.String baseUri>;
        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r7);
        r3 = $r6;

     label1:
        goto label4;

     label2:
        $r8 := @caughtexception;
        r4 = $r8;
        $r9 = new java.net.URL;
        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>(r2);
        r5 = $r9;
        $r10 = virtualinvoke r5.<java.net.URL: java.lang.String toExternalForm()>();

     label3:
        return $r10;

     label4:
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("?");
        if $z1 == 0 goto label5;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r15 = new java.net.URL;
        specialinvoke $r15.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(r3, r2);
        r16 = $r15;
        $r17 = virtualinvoke r16.<java.net.URL: java.lang.String toExternalForm()>();

     label6:
        return $r17;

     label7:
        $r18 := @caughtexception;
        r19 = $r18;
        return "";

        catch java.net.MalformedURLException from label0 to label1 with label2;
        catch java.net.MalformedURLException from label0 to label3 with label7;
        catch java.net.MalformedURLException from label4 to label6 with label7;
    }

    public org.jsoup.nodes.Node childNode(int)
    {
        org.jsoup.nodes.Node r0, $r3;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: org.jsoup.nodes.Node;
        i0 := @parameter0: int;
        $r1 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);
        $r3 = (org.jsoup.nodes.Node) $r2;
        return $r3;
    }

    public java.util.List childNodes()
    {
        org.jsoup.nodes.Node r0;
        java.util.List $r1, $r2;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);
        return $r2;
    }

    protected org.jsoup.nodes.Node[] childNodesAsArray()
    {
        org.jsoup.nodes.Node r0;
        java.util.List $r1, $r2;
        int $i0;
        org.jsoup.nodes.Node[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $r2 = virtualinvoke r0.<org.jsoup.nodes.Node: java.util.List childNodes()>();
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();
        $r3 = newarray (org.jsoup.nodes.Node)[$i0];
        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);
        $r5 = (org.jsoup.nodes.Node[]) $r4;
        return $r5;
    }

    public org.jsoup.nodes.Node parent()
    {
        org.jsoup.nodes.Node r0, $r1;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        return $r1;
    }

    public org.jsoup.nodes.Document ownerDocument()
    {
        org.jsoup.nodes.Node r0, $r2, $r3;
        boolean $z0;
        org.jsoup.nodes.Document $r1, $r4;

        r0 := @this: org.jsoup.nodes.Node;
        $z0 = r0 instanceof org.jsoup.nodes.Document;
        if $z0 == 0 goto label0;

        $r1 = (org.jsoup.nodes.Document) r0;
        return $r1;

     label0:
        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Node: org.jsoup.nodes.Document ownerDocument()>();
        return $r4;
    }

    public void remove()
    {
        org.jsoup.nodes.Node r0, $r1, $r2;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);
        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        virtualinvoke $r2.<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>(r0);
        return;
    }

    public org.jsoup.nodes.Node before(java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        $i0 = virtualinvoke r0.<org.jsoup.nodes.Node: int siblingIndex()>();
        specialinvoke r0.<org.jsoup.nodes.Node: void addSiblingHtml(int,java.lang.String)>($i0, r1);
        return r0;
    }

    public org.jsoup.nodes.Node before(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r0, r1, $r2, $r3;
        int $i0;
        org.jsoup.nodes.Node[] $r4;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r2);
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        $i0 = virtualinvoke r0.<org.jsoup.nodes.Node: int siblingIndex()>();
        $r4 = newarray (org.jsoup.nodes.Node)[1];
        $r4[0] = r1;
        virtualinvoke $r3.<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>($i0, $r4);
        return r0;
    }

    public org.jsoup.nodes.Node after(java.lang.String)
    {
        org.jsoup.nodes.Node r0;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        $i0 = virtualinvoke r0.<org.jsoup.nodes.Node: int siblingIndex()>();
        $i1 = $i0 + 1;
        specialinvoke r0.<org.jsoup.nodes.Node: void addSiblingHtml(int,java.lang.String)>($i1, r1);
        return r0;
    }

    public org.jsoup.nodes.Node after(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r0, r1, $r2, $r3;
        int $i0, $i1;
        org.jsoup.nodes.Node[] $r4;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r2);
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        $i0 = virtualinvoke r0.<org.jsoup.nodes.Node: int siblingIndex()>();
        $i1 = $i0 + 1;
        $r4 = newarray (org.jsoup.nodes.Node)[1];
        $r4[0] = r1;
        virtualinvoke $r3.<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>($i1, $r4);
        return r0;
    }

    private void addSiblingHtml(int, java.lang.String)
    {
        org.jsoup.nodes.Node r0, $r4, $r5, $r6, $r9;
        int i0, $i1;
        java.lang.String r1, $r8;
        org.jsoup.nodes.Element r2, $r7;
        java.util.List r3;
        boolean $z0;
        org.jsoup.nodes.Node[] $r10, $r12;
        java.lang.Object[] $r11;

        r0 := @this: org.jsoup.nodes.Node;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r4 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r4);
        $r5 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parent()>();
        $z0 = $r5 instanceof org.jsoup.nodes.Element;
        if $z0 == 0 goto label0;

        $r6 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parent()>();
        $r7 = (org.jsoup.nodes.Element) $r6;
        goto label1;

     label0:
        $r7 = null;

     label1:
        r2 = $r7;
        $r8 = virtualinvoke r0.<org.jsoup.nodes.Node: java.lang.String baseUri()>();
        r3 = staticinvoke <org.jsoup.parser.Parser: java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String)>(r1, r2, $r8);
        $r9 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();
        $r10 = newarray (org.jsoup.nodes.Node)[$i1];
        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);
        $r12 = (org.jsoup.nodes.Node[]) $r11;
        virtualinvoke $r9.<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>(i0, $r12);
        return;
    }

    public org.jsoup.nodes.Node wrap(java.lang.String)
    {
        org.jsoup.nodes.Node r0, r4, r7, $r8, $r9, $r13, $r16;
        java.lang.String r1, $r11;
        org.jsoup.nodes.Element r2, r5, r6, $r10;
        java.util.List r3;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.Object $r12, $r15;
        org.jsoup.nodes.Node[] $r14;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r8 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parent()>();
        $z0 = $r8 instanceof org.jsoup.nodes.Element;
        if $z0 == 0 goto label0;

        $r9 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parent()>();
        $r10 = (org.jsoup.nodes.Element) $r9;
        goto label1;

     label0:
        $r10 = null;

     label1:
        r2 = $r10;
        $r11 = virtualinvoke r0.<org.jsoup.nodes.Node: java.lang.String baseUri()>();
        r3 = staticinvoke <org.jsoup.parser.Parser: java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String)>(r1, r2, $r11);
        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);
        r4 = (org.jsoup.nodes.Node) $r12;
        if r4 == null goto label2;

        $z1 = r4 instanceof org.jsoup.nodes.Element;
        if $z1 != 0 goto label3;

     label2:
        return null;

     label3:
        r5 = (org.jsoup.nodes.Element) r4;
        r6 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Element getDeepChild(org.jsoup.nodes.Element)>(r5);
        $r13 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        virtualinvoke $r13.<org.jsoup.nodes.Node: void replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node)>(r0, r5);
        $r14 = newarray (org.jsoup.nodes.Node)[1];
        $r14[0] = r0;
        virtualinvoke r6.<org.jsoup.nodes.Element: void addChildren(org.jsoup.nodes.Node[])>($r14);
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();
        if $i1 <= 0 goto label5;

        i0 = 0;

     label4:
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();
        if i0 >= $i2 goto label5;

        $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);
        r7 = (org.jsoup.nodes.Node) $r15;
        $r16 = r7.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        virtualinvoke $r16.<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>(r7);
        virtualinvoke r5.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r7);
        i0 = i0 + 1;
        goto label4;

     label5:
        return r0;
    }

    public org.jsoup.nodes.Node unwrap()
    {
        org.jsoup.nodes.Node r0, r1, $r2, $r6, $r7;
        int i0, $i1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        org.jsoup.nodes.Node[] $r8;

        r0 := @this: org.jsoup.nodes.Node;
        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r2);
        i0 = r0.<org.jsoup.nodes.Node: int siblingIndex>;
        $r3 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();
        if $i1 <= 0 goto label0;

        $r4 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);
        $r6 = (org.jsoup.nodes.Node) $r5;
        goto label1;

     label0:
        $r6 = null;

     label1:
        r1 = $r6;
        $r7 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        $r8 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node[] childNodesAsArray()>();
        virtualinvoke $r7.<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>(i0, $r8);
        virtualinvoke r0.<org.jsoup.nodes.Node: void remove()>();
        return r1;
    }

    private org.jsoup.nodes.Element getDeepChild(org.jsoup.nodes.Element)
    {
        org.jsoup.nodes.Node r0;
        org.jsoup.nodes.Element r1, $r4, $r5;
        org.jsoup.select.Elements r2;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 = virtualinvoke r1.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();
        if $i0 <= 0 goto label0;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);
        $r4 = (org.jsoup.nodes.Element) $r3;
        $r5 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Element getDeepChild(org.jsoup.nodes.Element)>($r4);
        return $r5;

     label0:
        return r1;
    }

    public void replaceWith(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r0, r1, $r2, $r3;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r2);
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        virtualinvoke $r3.<org.jsoup.nodes.Node: void replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node)>(r0, r1);
        return;
    }

    protected void setParentNode(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r0, r1, $r2, $r3;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r2 == null goto label0;

        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        virtualinvoke $r3.<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>(r0);

     label0:
        r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode> = r1;
        return;
    }

    protected void replaceChild(org.jsoup.nodes.Node, org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r0, r1, r2, $r4, $r5, $r6;
        java.lang.Integer r3;
        boolean $z0;
        int $i0, $i1, $i2;
        java.util.List $r7;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node;
        r2 := @parameter1: org.jsoup.nodes.Node;
        $r4 = r1.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r4 != r0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean)>($z0);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $r5 = r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r5 == null goto label2;

        $r6 = r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        virtualinvoke $r6.<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>(r2);

     label2:
        $i0 = virtualinvoke r1.<org.jsoup.nodes.Node: int siblingIndex()>();
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        $r7 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        interfaceinvoke $r7.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r2);
        r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode> = r0;
        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        virtualinvoke r2.<org.jsoup.nodes.Node: void setSiblingIndex(int)>($i2);
        r1.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode> = null;
        return;
    }

    protected void removeChild(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r0, r1, $r2;
        int i0;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = r1.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r2 != r0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean)>($z0);
        i0 = virtualinvoke r1.<org.jsoup.nodes.Node: int siblingIndex()>();
        $r3 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(i0);
        specialinvoke r0.<org.jsoup.nodes.Node: void reindexChildren()>();
        r1.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode> = null;
        return;
    }

    protected transient void addChildren(org.jsoup.nodes.Node[])
    {
        org.jsoup.nodes.Node r0, r3;
        org.jsoup.nodes.Node[] r1, r2;
        int i0, i1, $i2, $i3;
        java.util.List $r4, $r5;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node[];
        r2 = r1;
        i0 = lengthof r2;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r3 = r2[i1];
        specialinvoke r0.<org.jsoup.nodes.Node: void reparentChild(org.jsoup.nodes.Node)>(r3);
        $r4 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);
        $r5 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i3 = $i2 - 1;
        virtualinvoke r3.<org.jsoup.nodes.Node: void setSiblingIndex(int)>($i3);
        i1 = i1 + 1;
        goto label0;

     label1:
        return;
    }

    protected transient void addChildren(int, org.jsoup.nodes.Node[])
    {
        org.jsoup.nodes.Node r0, r2;
        int i0, i1, $i2;
        org.jsoup.nodes.Node[] r1;
        java.util.List $r3;

        r0 := @this: org.jsoup.nodes.Node;
        i0 := @parameter0: int;
        r1 := @parameter1: org.jsoup.nodes.Node[];
        staticinvoke <org.jsoup.helper.Validate: void noNullElements(java.lang.Object[])>(r1);
        $i2 = lengthof r1;
        i1 = $i2 - 1;

     label0:
        if i1 < 0 goto label1;

        r2 = r1[i1];
        specialinvoke r0.<org.jsoup.nodes.Node: void reparentChild(org.jsoup.nodes.Node)>(r2);
        $r3 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(i0, r2);
        i1 = i1 + -1;
        goto label0;

     label1:
        specialinvoke r0.<org.jsoup.nodes.Node: void reindexChildren()>();
        return;
    }

    private void reparentChild(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r0, r1, $r2, $r3;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = r1.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r2 == null goto label0;

        $r3 = r1.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        virtualinvoke $r3.<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>(r1);

     label0:
        virtualinvoke r1.<org.jsoup.nodes.Node: void setParentNode(org.jsoup.nodes.Node)>(r0);
        return;
    }

    private void reindexChildren()
    {
        org.jsoup.nodes.Node r0, $r4;
        int i0, $i1;
        java.util.List $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.jsoup.nodes.Node;
        i0 = 0;

     label0:
        $r1 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        if i0 >= $i1 goto label1;

        $r2 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);
        $r4 = (org.jsoup.nodes.Node) $r3;
        virtualinvoke $r4.<org.jsoup.nodes.Node: void setSiblingIndex(int)>(i0);
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }

    public java.util.List siblingNodes()
    {
        org.jsoup.nodes.Node r0, r4, $r5, $r7;
        java.util.List r1, $r6;
        java.util.ArrayList r2, $r8;
        java.util.Iterator r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: org.jsoup.nodes.Node;
        $r5 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r5 != null goto label0;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        return $r6;

     label0:
        $r7 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        r1 = $r7.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $r8 = new java.util.ArrayList;
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        $i1 = $i0 - 1;
        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);
        r2 = $r8;
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Node) $r9;
        if r4 == r0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        return r2;
    }

    public org.jsoup.nodes.Node nextSibling()
    {
        org.jsoup.nodes.Node r0, $r3, $r4, $r6;
        java.util.List r1;
        java.lang.Integer r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.nodes.Node;
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r3 != null goto label0;

        return null;

     label0:
        $r4 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        r1 = $r4.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $i0 = virtualinvoke r0.<org.jsoup.nodes.Node: int siblingIndex()>();
        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();
        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        $i3 = $i2 + 1;
        if $i1 <= $i3 goto label1;

        $i4 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        $i5 = $i4 + 1;
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i5);
        $r6 = (org.jsoup.nodes.Node) $r5;
        return $r6;

     label1:
        return null;
    }

    public org.jsoup.nodes.Node previousSibling()
    {
        org.jsoup.nodes.Node r0, $r3, $r4, $r6;
        java.util.List r1;
        java.lang.Integer r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.nodes.Node;
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r3 != null goto label0;

        return null;

     label0:
        $r4 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        r1 = $r4.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $i0 = virtualinvoke r0.<org.jsoup.nodes.Node: int siblingIndex()>();
        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        if $i1 <= 0 goto label1;

        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        $i3 = $i2 - 1;
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i3);
        $r6 = (org.jsoup.nodes.Node) $r5;
        return $r6;

     label1:
        return null;
    }

    public int siblingIndex()
    {
        org.jsoup.nodes.Node r0;
        int $i0;

        r0 := @this: org.jsoup.nodes.Node;
        $i0 = r0.<org.jsoup.nodes.Node: int siblingIndex>;
        return $i0;
    }

    protected void setSiblingIndex(int)
    {
        org.jsoup.nodes.Node r0;
        int i0;

        r0 := @this: org.jsoup.nodes.Node;
        i0 := @parameter0: int;
        r0.<org.jsoup.nodes.Node: int siblingIndex> = i0;
        return;
    }

    public org.jsoup.nodes.Node traverse(org.jsoup.select.NodeVisitor)
    {
        org.jsoup.nodes.Node r0;
        org.jsoup.select.NodeVisitor r1;
        org.jsoup.select.NodeTraversor r2, $r3;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.select.NodeVisitor;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = new org.jsoup.select.NodeTraversor;
        specialinvoke $r3.<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>(r1);
        r2 = $r3;
        virtualinvoke r2.<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>(r0);
        return r0;
    }

    public java.lang.String outerHtml()
    {
        org.jsoup.nodes.Node r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(128);
        r2 = $r1;
        virtualinvoke r0.<org.jsoup.nodes.Node: void outerHtml(java.lang.StringBuilder)>(r2);
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r3;
    }

    protected void outerHtml(java.lang.StringBuilder)
    {
        org.jsoup.nodes.Node r0;
        java.lang.StringBuilder r1;
        org.jsoup.select.NodeTraversor $r2;
        org.jsoup.nodes.Node$OuterHtmlVisitor $r3;
        org.jsoup.nodes.Document$OutputSettings $r4;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.StringBuilder;
        $r2 = new org.jsoup.select.NodeTraversor;
        $r3 = new org.jsoup.nodes.Node$OuterHtmlVisitor;
        $r4 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Document$OutputSettings getOutputSettings()>();
        specialinvoke $r3.<org.jsoup.nodes.Node$OuterHtmlVisitor: void <init>(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings)>(r1, $r4);
        specialinvoke $r2.<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>($r3);
        virtualinvoke $r2.<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>(r0);
        return;
    }

    private org.jsoup.nodes.Document$OutputSettings getOutputSettings()
    {
        org.jsoup.nodes.Node r0;
        org.jsoup.nodes.Document $r1, $r2, $r4;
        org.jsoup.nodes.Document$OutputSettings $r3;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Document ownerDocument()>();
        if $r1 == null goto label0;

        $r2 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Document ownerDocument()>();
        $r3 = virtualinvoke $r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();
        goto label1;

     label0:
        $r4 = new org.jsoup.nodes.Document;
        specialinvoke $r4.<org.jsoup.nodes.Document: void <init>(java.lang.String)>("");
        $r3 = virtualinvoke $r4.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();

     label1:
        return $r3;
    }

    abstract void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings);

    abstract void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings);

    public java.lang.String toString()
    {
        org.jsoup.nodes.Node r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Node: java.lang.String outerHtml()>();
        return $r1;
    }

    protected void indent(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Node r0;
        java.lang.StringBuilder r1, $r3;
        int i0, $i1, $i2;
        org.jsoup.nodes.Document$OutputSettings r2;
        java.lang.String $r4;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $i1 = virtualinvoke r2.<org.jsoup.nodes.Document$OutputSettings: int indentAmount()>();
        $i2 = i0 * $i1;
        $r4 = staticinvoke <org.jsoup.helper.StringUtil: java.lang.String padding(int)>($i2);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.jsoup.nodes.Node r0;
        java.lang.Object r1;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        return 0;
    }

    public int hashCode()
    {
        org.jsoup.nodes.Node r0, $r1, $r2;
        int i0, $i1, $i2, $i3, i4;
        org.jsoup.nodes.Attributes $r3, $r4;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        if $r1 == null goto label0;

        $r2 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode>;
        $i1 = virtualinvoke $r2.<org.jsoup.nodes.Node: int hashCode()>();
        goto label1;

     label0:
        $i1 = 0;

     label1:
        i0 = $i1;
        $i2 = 31 * i0;
        $r3 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        if $r3 == null goto label2;

        $r4 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        $i3 = virtualinvoke $r4.<org.jsoup.nodes.Attributes: int hashCode()>();
        goto label3;

     label2:
        $i3 = 0;

     label3:
        i4 = $i2 + $i3;
        return i4;
    }

    public org.jsoup.nodes.Node clone()
    {
        org.jsoup.nodes.Node r0, $r1;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node doClone(org.jsoup.nodes.Node)>(null);
        return $r1;
    }

    protected org.jsoup.nodes.Node doClone(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Node r0, r1, r2, r4, $r20;
        java.lang.CloneNotSupportedException r3, $r6;
        java.lang.Object $r5, $r18;
        java.lang.RuntimeException $r7;
        int $i0, $i1;
        org.jsoup.nodes.Attributes $r10, $r11, $r12;
        java.lang.String $r13;
        java.util.ArrayList $r14;
        java.util.List $r15, $r16, $r19;
        java.util.Iterator r17;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Node;
        r1 := @parameter0: org.jsoup.nodes.Node;

     label0:
        $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r2 = (org.jsoup.nodes.Node) $r5;

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        $r7 = new java.lang.RuntimeException;
        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);
        throw $r7;

     label3:
        r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parentNode> = r1;
        if r1 != null goto label4;

        $i0 = 0;
        goto label5;

     label4:
        $i0 = r0.<org.jsoup.nodes.Node: int siblingIndex>;

     label5:
        r2.<org.jsoup.nodes.Node: int siblingIndex> = $i0;
        $r10 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        if $r10 == null goto label6;

        $r11 = r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes>;
        $r12 = virtualinvoke $r11.<org.jsoup.nodes.Attributes: org.jsoup.nodes.Attributes clone()>();
        goto label7;

     label6:
        $r12 = null;

     label7:
        r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes> = $r12;
        $r13 = r0.<org.jsoup.nodes.Node: java.lang.String baseUri>;
        r2.<org.jsoup.nodes.Node: java.lang.String baseUri> = $r13;
        $r14 = new java.util.ArrayList;
        $r15 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();
        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>($i1);
        r2.<org.jsoup.nodes.Node: java.util.List childNodes> = $r14;
        $r16 = r0.<org.jsoup.nodes.Node: java.util.List childNodes>;
        r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label9;

        $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Node) $r18;
        $r19 = r2.<org.jsoup.nodes.Node: java.util.List childNodes>;
        $r20 = virtualinvoke r4.<org.jsoup.nodes.Node: org.jsoup.nodes.Node doClone(org.jsoup.nodes.Node)>(r2);
        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);
        goto label8;

     label9:
        return r2;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.nodes.Node r0, $r1;

        r0 := @this: org.jsoup.nodes.Node;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node clone()>();
        return $r1;
    }
}
public class org.jsoup.nodes.TextNode extends org.jsoup.nodes.Node
{
    private static final java.lang.String TEXT_KEY;
    java.lang.String text;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.Node: void <init>()>();
        r0.<org.jsoup.nodes.TextNode: java.lang.String baseUri> = r2;
        r0.<org.jsoup.nodes.TextNode: java.lang.String text> = r1;
        return;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.TextNode r0;

        r0 := @this: org.jsoup.nodes.TextNode;
        return "#text";
    }

    public java.lang.String text()
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.jsoup.nodes.TextNode;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();
        $r2 = staticinvoke <org.jsoup.nodes.TextNode: java.lang.String normaliseWhitespace(java.lang.String)>($r1);
        return $r2;
    }

    public org.jsoup.nodes.TextNode text(java.lang.String)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String r1;
        org.jsoup.nodes.Attributes $r2, $r3;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.String;
        r0.<org.jsoup.nodes.TextNode: java.lang.String text> = r1;
        $r2 = r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Attributes attributes>;
        if $r2 == null goto label0;

        $r3 = r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("text", r1);

     label0:
        return r0;
    }

    public java.lang.String getWholeText()
    {
        org.jsoup.nodes.TextNode r0;
        org.jsoup.nodes.Attributes $r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.jsoup.nodes.TextNode;
        $r1 = r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Attributes attributes>;
        if $r1 != null goto label0;

        $r2 = r0.<org.jsoup.nodes.TextNode: java.lang.String text>;
        goto label1;

     label0:
        $r3 = r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Attributes attributes>;
        $r2 = virtualinvoke $r3.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("text");

     label1:
        return $r2;
    }

    public boolean isBlank()
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.TextNode;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();
        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean isBlank(java.lang.String)>($r1);
        return $z0;
    }

    public org.jsoup.nodes.TextNode splitText(int)
    {
        org.jsoup.nodes.TextNode r0, r3, $r8;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, r2, $r4, $r5, $r6, $r9;
        boolean $z0, $z1;
        org.jsoup.nodes.Node $r10, $r11;
        org.jsoup.nodes.Node[] $r12;

        r0 := @this: org.jsoup.nodes.TextNode;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Split offset must be not be negative");
        $r4 = r0.<org.jsoup.nodes.TextNode: java.lang.String text>;
        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();
        if i0 >= $i1 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z1, "Split offset must not be greater than current text length");
        $r5 = virtualinvoke r0.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();
        r1 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $r6 = virtualinvoke r0.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();
        r2 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(i0);
        virtualinvoke r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.TextNode text(java.lang.String)>(r1);
        $r8 = new org.jsoup.nodes.TextNode;
        $r9 = virtualinvoke r0.<org.jsoup.nodes.TextNode: java.lang.String baseUri()>();
        specialinvoke $r8.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>(r2, $r9);
        r3 = $r8;
        $r10 = virtualinvoke r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Node parent()>();
        if $r10 == null goto label4;

        $r11 = virtualinvoke r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Node parent()>();
        $i2 = virtualinvoke r0.<org.jsoup.nodes.TextNode: int siblingIndex()>();
        $i3 = $i2 + 1;
        $r12 = newarray (org.jsoup.nodes.Node)[1];
        $r12[0] = r3;
        virtualinvoke $r11.<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>($i3, $r12);

     label4:
        return r3;
    }

    void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.StringBuilder r1;
        int i0, $i1;
        org.jsoup.nodes.Document$OutputSettings r2;
        java.lang.String r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.jsoup.nodes.Node $r5, $r6, $r8, $r9;
        org.jsoup.nodes.Element $r7, $r10;
        org.jsoup.parser.Tag $r11;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        $r4 = virtualinvoke r0.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();
        r3 = staticinvoke <org.jsoup.nodes.Entities: java.lang.String escape(java.lang.String,org.jsoup.nodes.Document$OutputSettings)>($r4, r2);
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint()>();
        if $z0 == 0 goto label0;

        $r5 = virtualinvoke r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Node parent()>();
        $z1 = $r5 instanceof org.jsoup.nodes.Element;
        if $z1 == 0 goto label0;

        $r6 = virtualinvoke r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Node parent()>();
        $r7 = (org.jsoup.nodes.Element) $r6;
        $z2 = virtualinvoke $r7.<org.jsoup.nodes.Element: boolean preserveWhitespace()>();
        if $z2 != 0 goto label0;

        r3 = staticinvoke <org.jsoup.nodes.TextNode: java.lang.String normaliseWhitespace(java.lang.String)>(r3);

     label0:
        $z3 = virtualinvoke r2.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint()>();
        if $z3 == 0 goto label1;

        $i1 = virtualinvoke r0.<org.jsoup.nodes.TextNode: int siblingIndex()>();
        if $i1 != 0 goto label1;

        $r8 = r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Node parentNode>;
        $z4 = $r8 instanceof org.jsoup.nodes.Element;
        if $z4 == 0 goto label1;

        $r9 = r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Node parentNode>;
        $r10 = (org.jsoup.nodes.Element) $r9;
        $r11 = virtualinvoke $r10.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag()>();
        $z5 = virtualinvoke $r11.<org.jsoup.parser.Tag: boolean formatAsBlock()>();
        if $z5 == 0 goto label1;

        $z6 = virtualinvoke r0.<org.jsoup.nodes.TextNode: boolean isBlank()>();
        if $z6 != 0 goto label1;

        virtualinvoke r0.<org.jsoup.nodes.TextNode: void indent(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings)>(r1, i0, r2);

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        return;
    }

    void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.StringBuilder r1;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.TextNode;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.TextNode: java.lang.String outerHtml()>();
        return $r1;
    }

    public static org.jsoup.nodes.TextNode createFromEncoded(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        org.jsoup.nodes.TextNode $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 = staticinvoke <org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String)>(r0);
        $r3 = new org.jsoup.nodes.TextNode;
        specialinvoke $r3.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>(r2, r1);
        return $r3;
    }

    static java.lang.String normaliseWhitespace(java.lang.String)
    {
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;
        r1 = staticinvoke <org.jsoup.helper.StringUtil: java.lang.String normaliseWhitespace(java.lang.String)>(r0);
        return r1;
    }

    static java.lang.String stripLeadingWhitespace(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("^\\s+", "");
        return $r1;
    }

    static boolean lastCharIsWhitespace(java.lang.StringBuilder)
    {
        java.lang.StringBuilder r0;
        int $i0, $i1, $i2;
        char $c3;
        boolean $z0;

        r0 := @parameter0: java.lang.StringBuilder;
        $i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();
        if $i0 == 0 goto label0;

        $i1 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();
        $i2 = $i1 - 1;
        $c3 = virtualinvoke r0.<java.lang.StringBuilder: char charAt(int)>($i2);
        if $c3 != 32 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private void ensureAttributes()
    {
        org.jsoup.nodes.TextNode r0;
        org.jsoup.nodes.Attributes $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.jsoup.nodes.TextNode;
        $r2 = r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Attributes attributes>;
        if $r2 != null goto label0;

        $r1 = new org.jsoup.nodes.Attributes;
        specialinvoke $r1.<org.jsoup.nodes.Attributes: void <init>()>();
        r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Attributes attributes> = $r1;
        $r3 = r0.<org.jsoup.nodes.TextNode: org.jsoup.nodes.Attributes attributes>;
        $r4 = r0.<org.jsoup.nodes.TextNode: java.lang.String text>;
        virtualinvoke $r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("text", $r4);

     label0:
        return;
    }

    public java.lang.String attr(java.lang.String)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.TextNode: void ensureAttributes()>();
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>(r1);
        return $r2;
    }

    public org.jsoup.nodes.Attributes attributes()
    {
        org.jsoup.nodes.TextNode r0;
        org.jsoup.nodes.Attributes $r1;

        r0 := @this: org.jsoup.nodes.TextNode;
        specialinvoke r0.<org.jsoup.nodes.TextNode: void ensureAttributes()>();
        $r1 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Attributes attributes()>();
        return $r1;
    }

    public org.jsoup.nodes.Node attr(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String r1, r2;
        org.jsoup.nodes.Node $r3;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.TextNode: void ensureAttributes()>();
        $r3 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node attr(java.lang.String,java.lang.String)>(r1, r2);
        return $r3;
    }

    public boolean hasAttr(java.lang.String)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.TextNode: void ensureAttributes()>();
        $z0 = specialinvoke r0.<org.jsoup.nodes.Node: boolean hasAttr(java.lang.String)>(r1);
        return $z0;
    }

    public org.jsoup.nodes.Node removeAttr(java.lang.String)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String r1;
        org.jsoup.nodes.Node $r2;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.TextNode: void ensureAttributes()>();
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: org.jsoup.nodes.Node removeAttr(java.lang.String)>(r1);
        return $r2;
    }

    public java.lang.String absUrl(java.lang.String)
    {
        org.jsoup.nodes.TextNode r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.nodes.TextNode;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.nodes.TextNode: void ensureAttributes()>();
        $r2 = specialinvoke r0.<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>(r1);
        return $r2;
    }
}
public class org.jsoup.nodes.XmlDeclaration extends org.jsoup.nodes.Node
{
    private static final java.lang.String DECL_KEY;
    private final boolean isProcessingInstruction;

    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.String r1, r2;
        boolean z0;
        org.jsoup.nodes.Attributes $r3;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String)>(r2);
        $r3 = r0.<org.jsoup.nodes.XmlDeclaration: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("declaration", r1);
        r0.<org.jsoup.nodes.XmlDeclaration: boolean isProcessingInstruction> = z0;
        return;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.XmlDeclaration r0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;
        return "#declaration";
    }

    public java.lang.String getWholeDeclaration()
    {
        org.jsoup.nodes.XmlDeclaration r0;
        org.jsoup.nodes.Attributes $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;
        $r1 = r0.<org.jsoup.nodes.XmlDeclaration: org.jsoup.nodes.Attributes attributes>;
        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("declaration");
        return $r2;
    }

    void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.StringBuilder r1, $r3, $r5, $r7;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;
        boolean $z0;
        java.lang.String $r4, $r6;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $z0 = r0.<org.jsoup.nodes.XmlDeclaration: boolean isProcessingInstruction>;
        if $z0 == 0 goto label0;

        $r4 = "!";
        goto label1;

     label0:
        $r4 = "?";

     label1:
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke r0.<org.jsoup.nodes.XmlDeclaration: java.lang.String getWholeDeclaration()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        return;
    }

    void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.StringBuilder r1;
        int i0;
        org.jsoup.nodes.Document$OutputSettings r2;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.XmlDeclaration r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;
        $r1 = virtualinvoke r0.<org.jsoup.nodes.XmlDeclaration: java.lang.String outerHtml()>();
        return $r1;
    }
}
class org.jsoup.parser.CharacterReader extends java.lang.Object
{
    static final char EOF;
    private final java.lang.String input;
    private final int length;
    private int pos;
    private int mark;

    void <init>(java.lang.String)
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String r1, r2;
        int $i0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.parser.CharacterReader: int pos> = 0;
        r0.<org.jsoup.parser.CharacterReader: int mark> = 0;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r\n?", "\n");
        r0.<org.jsoup.parser.CharacterReader: java.lang.String input> = r2;
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();
        r0.<org.jsoup.parser.CharacterReader: int length> = $i0;
        return;
    }

    int pos()
    {
        org.jsoup.parser.CharacterReader r0;
        int $i0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        return $i0;
    }

    boolean isEmpty()
    {
        org.jsoup.parser.CharacterReader r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i1 = r0.<org.jsoup.parser.CharacterReader: int length>;
        if $i0 < $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    char current()
    {
        org.jsoup.parser.CharacterReader r0;
        boolean $z0;
        char $c0;
        java.lang.String $r1;
        int $i1;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $c0 = 65535;
        goto label1;

     label0:
        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i1 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

     label1:
        return $c0;
    }

    char consume()
    {
        org.jsoup.parser.CharacterReader r0;
        char c0, $c1;
        boolean $z0;
        java.lang.String $r1;
        int $i2, $i3, $i4;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $c1 = 65535;
        goto label1;

     label0:
        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

     label1:
        c0 = $c1;
        $i3 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i4 = $i3 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i4;
        return c0;
    }

    void unconsume()
    {
        org.jsoup.parser.CharacterReader r0;
        int $i0, $i1;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i1 = $i0 - 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i1;
        return;
    }

    void advance()
    {
        org.jsoup.parser.CharacterReader r0;
        int $i0, $i1;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i1 = $i0 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i1;
        return;
    }

    void mark()
    {
        org.jsoup.parser.CharacterReader r0;
        int $i0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        r0.<org.jsoup.parser.CharacterReader: int mark> = $i0;
        return;
    }

    void rewindToMark()
    {
        org.jsoup.parser.CharacterReader r0;
        int $i0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int mark>;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i0;
        return;
    }

    java.lang.String consumeAsString()
    {
        org.jsoup.parser.CharacterReader r0;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $r2 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i1 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i2 = $i0 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i2;
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);
        return $r3;
    }

    java.lang.String consumeTo(char)
    {
        org.jsoup.parser.CharacterReader r0;
        char c0;
        int i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r1, $r2, $r3, $r5;

        r0 := @this: org.jsoup.parser.CharacterReader;
        c0 := @parameter0: char;
        $r2 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int,int)>(c0, $i2);
        if i1 == -1 goto label0;

        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i3 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        r1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i3, i1);
        $i4 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();
        $i6 = $i4 + $i5;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i6;
        return r1;

     label0:
        $r5 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: java.lang.String consumeToEnd()>();
        return $r5;
    }

    java.lang.String consumeTo(java.lang.String)
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String r1, r2, $r3, $r4, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i1 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String,int)>(r1, $i1);
        if i0 == -1 goto label0;

        $r4 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i2, i0);
        $i3 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i4 = virtualinvoke r2.<java.lang.String: int length()>();
        $i5 = $i3 + $i4;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i5;
        return r2;

     label0:
        $r6 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: java.lang.String consumeToEnd()>();
        return $r6;
    }

    transient java.lang.String consumeToAny(char[])
    {
        org.jsoup.parser.CharacterReader r0;
        char[] r1, r2;
        int i0, i2, i3, $i5, $i6, $i7, $i8, $i9;
        char c1, c4;
        boolean $z0;
        java.lang.String $r3, $r5, $r6;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: char[];
        i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 != 0 goto label4;

        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i5 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i5);
        r2 = r1;
        i2 = lengthof r2;
        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        c4 = r2[i3];
        if c4 != c1 goto label2;

        goto label4;

     label2:
        i3 = i3 + 1;
        goto label1;

     label3:
        $i6 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i7 = $i6 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i7;
        goto label0;

     label4:
        $i8 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        if $i8 <= i0 goto label5;

        $r5 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i9 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(i0, $i9);
        goto label6;

     label5:
        $r6 = "";

     label6:
        return $r6;
    }

    java.lang.String consumeToEnd()
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $r2 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();
        r1 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);
        $r4 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i2;
        return r1;
    }

    java.lang.String consumeLetterSequence()
    {
        org.jsoup.parser.CharacterReader r0;
        int i0, $i2, $i3, $i4, $i5;
        char c1;
        boolean $z0;
        java.lang.String $r1, $r3, $r4;

        r0 := @this: org.jsoup.parser.CharacterReader;
        i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 != 0 goto label3;

        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);
        if c1 < 65 goto label1;

        if c1 <= 90 goto label2;

     label1:
        if c1 < 97 goto label3;

        if c1 > 122 goto label3;

     label2:
        $i3 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i4 = $i3 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i4;
        goto label0;

     label3:
        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i5 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5);
        return $r4;
    }

    java.lang.String consumeLetterThenDigitSequence()
    {
        org.jsoup.parser.CharacterReader r0;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        char c1, c6;
        boolean $z0, $z1;
        java.lang.String $r1, $r3, $r5, $r6;

        r0 := @this: org.jsoup.parser.CharacterReader;
        i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 != 0 goto label3;

        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);
        if c1 < 65 goto label1;

        if c1 <= 90 goto label2;

     label1:
        if c1 < 97 goto label3;

        if c1 > 122 goto label3;

     label2:
        $i3 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i4 = $i3 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i4;
        goto label0;

     label3:
        $z1 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z1 != 0 goto label4;

        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i5 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i5);
        if c6 < 48 goto label4;

        if c6 > 57 goto label4;

        $i7 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i8 = $i7 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i8;
        goto label3;

     label4:
        $r5 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i9 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(i0, $i9);
        return $r6;
    }

    java.lang.String consumeHexSequence()
    {
        org.jsoup.parser.CharacterReader r0;
        int i0, $i2, $i3, $i4, $i5;
        char c1;
        boolean $z0;
        java.lang.String $r1, $r3, $r4;

        r0 := @this: org.jsoup.parser.CharacterReader;
        i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 != 0 goto label4;

        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);
        if c1 < 48 goto label1;

        if c1 <= 57 goto label3;

     label1:
        if c1 < 65 goto label2;

        if c1 <= 70 goto label3;

     label2:
        if c1 < 97 goto label4;

        if c1 > 102 goto label4;

     label3:
        $i3 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i4 = $i3 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i4;
        goto label0;

     label4:
        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i5 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5);
        return $r4;
    }

    java.lang.String consumeDigitSequence()
    {
        org.jsoup.parser.CharacterReader r0;
        int i0, $i2, $i3, $i4, $i5;
        char c1;
        boolean $z0;
        java.lang.String $r1, $r3, $r4;

        r0 := @this: org.jsoup.parser.CharacterReader;
        i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);
        if c1 < 48 goto label1;

        if c1 > 57 goto label1;

        $i3 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i4 = $i3 + 1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i4;
        goto label0;

     label1:
        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i5 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5);
        return $r4;
    }

    boolean matches(char)
    {
        org.jsoup.parser.CharacterReader r0;
        char c0, $c2;
        boolean $z0, $z1;
        java.lang.String $r1;
        int $i1;

        r0 := @this: org.jsoup.parser.CharacterReader;
        c0 := @parameter0: char;
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i1 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);
        if $c2 != c0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    boolean matches(java.lang.String)
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i0);
        return $z0;
    }

    boolean matchesIgnoreCase(java.lang.String)
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i0, r1, 0, $i1);
        return $z0;
    }

    transient boolean matchesAny(char[])
    {
        org.jsoup.parser.CharacterReader r0;
        char[] r1, r2;
        char c0, c3;
        int i1, i2, $i4;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: char[];
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $r3 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i4 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i4);
        r2 = r1;
        i1 = lengthof r2;
        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        c3 = r2[i2];
        if c3 != c0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;
        goto label1;

     label3:
        return 0;
    }

    boolean matchesLetter()
    {
        org.jsoup.parser.CharacterReader r0;
        char c0;
        boolean $z0, $z1;
        java.lang.String $r1;
        int $i1;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i1 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);
        if c0 < 65 goto label1;

        if c0 <= 90 goto label2;

     label1:
        if c0 < 97 goto label3;

        if c0 > 122 goto label3;

     label2:
        $z1 = 1;
        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    boolean matchesDigit()
    {
        org.jsoup.parser.CharacterReader r0;
        char c0;
        boolean $z0, $z1;
        java.lang.String $r1;
        int $i1;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i1 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);
        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean matchConsume(java.lang.String)
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String r1;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean matches(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = $i0 + $i1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i2;
        return 1;

     label0:
        return 0;
    }

    boolean matchConsumeIgnoreCase(java.lang.String)
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String r1;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.jsoup.parser.CharacterReader: boolean matchesIgnoreCase(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = $i0 + $i1;
        r0.<org.jsoup.parser.CharacterReader: int pos> = $i2;
        return 1;

     label0:
        return 0;
    }

    boolean containsIgnoreCase(java.lang.String)
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String r1, r2, r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();
        $r4 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String,int)>(r2, $i0);
        if $i1 > -1 goto label0;

        $r5 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i2 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $i3 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String,int)>(r3, $i2);
        if $i3 <= -1 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.CharacterReader r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.jsoup.parser.CharacterReader;
        $r1 = r0.<org.jsoup.parser.CharacterReader: java.lang.String input>;
        $i0 = r0.<org.jsoup.parser.CharacterReader: int pos>;
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);
        return $r2;
    }
}
class org.jsoup.parser.HtmlTreeBuilder extends org.jsoup.parser.TreeBuilder
{
    private org.jsoup.parser.HtmlTreeBuilderState state;
    private org.jsoup.parser.HtmlTreeBuilderState originalState;
    private boolean baseUriSetFromDoc;
    private org.jsoup.nodes.Element headElement;
    private org.jsoup.nodes.Element formElement;
    private org.jsoup.nodes.Element contextElement;
    private org.jsoup.helper.DescendableLinkedList formattingElements;
    private java.util.List pendingTableCharacters;
    private boolean framesetOk;
    private boolean fosterInserts;
    private boolean fragmentParsing;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.helper.DescendableLinkedList $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        specialinvoke r0.<org.jsoup.parser.TreeBuilder: void <init>()>();
        r0.<org.jsoup.parser.HtmlTreeBuilder: boolean baseUriSetFromDoc> = 0;
        $r1 = new org.jsoup.helper.DescendableLinkedList;
        specialinvoke $r1.<org.jsoup.helper.DescendableLinkedList: void <init>()>();
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements> = $r1;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.jsoup.parser.HtmlTreeBuilder: java.util.List pendingTableCharacters> = $r2;
        r0.<org.jsoup.parser.HtmlTreeBuilder: boolean framesetOk> = 1;
        r0.<org.jsoup.parser.HtmlTreeBuilder: boolean fosterInserts> = 0;
        r0.<org.jsoup.parser.HtmlTreeBuilder: boolean fragmentParsing> = 0;
        return;
    }

    org.jsoup.nodes.Document parse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, r2;
        org.jsoup.parser.ParseErrorList r3;
        org.jsoup.parser.HtmlTreeBuilderState $r4;
        org.jsoup.nodes.Document $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.jsoup.parser.ParseErrorList;
        $r4 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState Initial>;
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state> = $r4;
        $r5 = specialinvoke r0.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r1, r2, r3);
        return $r5;
    }

    java.util.List parseFragment(java.lang.String, org.jsoup.nodes.Element, java.lang.String, org.jsoup.parser.ParseErrorList)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, r3, r7;
        org.jsoup.nodes.Element r2, r6, $r27;
        org.jsoup.parser.ParseErrorList r4;
        org.jsoup.parser.HtmlTreeBuilderState $r5;
        org.jsoup.nodes.Document $r8, $r9, $r10, $r29, $r33;
        org.jsoup.nodes.Document$QuirksMode $r11;
        java.lang.String[] $r13, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.parser.Tokeniser $r14, $r17, $r19, $r21, $r23, $r25;
        org.jsoup.parser.TokeniserState $r15, $r18, $r20, $r22, $r24, $r26;
        org.jsoup.parser.Tag $r28;
        org.jsoup.helper.DescendableLinkedList $r31;
        java.util.List $r32, $r34;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.jsoup.nodes.Element;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: org.jsoup.parser.ParseErrorList;
        $r5 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState Initial>;
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state> = $r5;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r1, r3, r4);
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element contextElement> = r2;
        r0.<org.jsoup.parser.HtmlTreeBuilder: boolean fragmentParsing> = 1;
        r6 = null;
        if r2 == null goto label7;

        $r8 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Document ownerDocument()>();
        if $r8 == null goto label0;

        $r9 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document doc>;
        $r10 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Document ownerDocument()>();
        $r11 = virtualinvoke $r10.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$QuirksMode quirksMode()>();
        virtualinvoke $r9.<org.jsoup.nodes.Document: org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode)>($r11);

     label0:
        r7 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $r13 = newarray (java.lang.String)[2];
        $r13[0] = "title";
        $r13[1] = "textarea";
        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r7, $r13);
        if $z0 == 0 goto label1;

        $r14 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r15 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rcdata>;
        virtualinvoke $r14.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r15);
        goto label6;

     label1:
        $r16 = newarray (java.lang.String)[5];
        $r16[0] = "iframe";
        $r16[1] = "noembed";
        $r16[2] = "noframes";
        $r16[3] = "style";
        $r16[4] = "xmp";
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r7, $r16);
        if $z1 == 0 goto label2;

        $r17 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r18 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rawtext>;
        virtualinvoke $r17.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r18);
        goto label6;

     label2:
        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("script");
        if $z2 == 0 goto label3;

        $r19 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r20 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke $r19.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r20);
        goto label6;

     label3:
        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("noscript");
        if $z3 == 0 goto label4;

        $r21 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r22 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke $r21.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r22);
        goto label6;

     label4:
        $z4 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("plaintext");
        if $z4 == 0 goto label5;

        $r23 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r24 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke $r23.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r24);
        goto label6;

     label5:
        $r25 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r26 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke $r25.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r26);

     label6:
        $r27 = new org.jsoup.nodes.Element;
        $r28 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>("html");
        specialinvoke $r27.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r28, r3);
        r6 = $r27;
        $r29 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document doc>;
        virtualinvoke $r29.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r6);
        $r31 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        virtualinvoke $r31.<org.jsoup.helper.DescendableLinkedList: void push(java.lang.Object)>(r6);
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void resetInsertionMode()>();

     label7:
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void runParser()>();
        if r2 == null goto label8;

        $r32 = virtualinvoke r6.<org.jsoup.nodes.Element: java.util.List childNodes()>();
        return $r32;

     label8:
        $r33 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document doc>;
        $r34 = virtualinvoke $r33.<org.jsoup.nodes.Document: java.util.List childNodes()>();
        return $r34;
    }

    protected boolean process(org.jsoup.parser.Token)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilderState $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token;
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Token currentToken> = r1;
        $r2 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state>;
        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilderState: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r0);
        return $z0;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilderState)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilderState r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilderState;
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Token currentToken> = r1;
        $z0 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilderState: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r0);
        return $z0;
    }

    void transition(org.jsoup.parser.HtmlTreeBuilderState)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.HtmlTreeBuilderState r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.HtmlTreeBuilderState;
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state> = r1;
        return;
    }

    org.jsoup.parser.HtmlTreeBuilderState state()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.HtmlTreeBuilderState $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state>;
        return $r1;
    }

    void markInsertionMode()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.HtmlTreeBuilderState $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state>;
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState originalState> = $r1;
        return;
    }

    org.jsoup.parser.HtmlTreeBuilderState originalState()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.HtmlTreeBuilderState $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState originalState>;
        return $r1;
    }

    void framesetOk(boolean)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        boolean z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        z0 := @parameter0: boolean;
        r0.<org.jsoup.parser.HtmlTreeBuilder: boolean framesetOk> = z0;
        return;
    }

    boolean framesetOk()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = r0.<org.jsoup.parser.HtmlTreeBuilder: boolean framesetOk>;
        return $z0;
    }

    org.jsoup.nodes.Document getDocument()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Document $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document doc>;
        return $r1;
    }

    java.lang.String getBaseUri()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String baseUri>;
        return $r1;
    }

    void maybeSetBaseUri(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;
        java.lang.String r2;
        boolean $z0;
        int $i0;
        org.jsoup.nodes.Document $r3;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $z0 = r0.<org.jsoup.parser.HtmlTreeBuilder: boolean baseUriSetFromDoc>;
        if $z0 == 0 goto label0;

        return;

     label0:
        r2 = virtualinvoke r1.<org.jsoup.nodes.Element: java.lang.String absUrl(java.lang.String)>("href");
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i0 == 0 goto label1;

        r0.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String baseUri> = r2;
        r0.<org.jsoup.parser.HtmlTreeBuilder: boolean baseUriSetFromDoc> = 1;
        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document doc>;
        virtualinvoke $r3.<org.jsoup.nodes.Document: void setBaseUri(java.lang.String)>(r2);

     label1:
        return;
    }

    boolean isFragmentParsing()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = r0.<org.jsoup.parser.HtmlTreeBuilder: boolean fragmentParsing>;
        return $z0;
    }

    void error(org.jsoup.parser.HtmlTreeBuilderState)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.HtmlTreeBuilderState r1;
        org.jsoup.parser.ParseError $r2;
        org.jsoup.parser.ParseErrorList $r3, $r4;
        boolean $z0;
        org.jsoup.parser.CharacterReader $r5;
        int $i0;
        java.lang.Object[] $r6;
        org.jsoup.parser.Token $r7;
        java.lang.String $r8;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.HtmlTreeBuilderState;
        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.ParseErrorList errors>;
        $z0 = virtualinvoke $r3.<org.jsoup.parser.ParseErrorList: boolean canAddError()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.ParseErrorList errors>;
        $r2 = new org.jsoup.parser.ParseError;
        $r5 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.CharacterReader reader>;
        $i0 = virtualinvoke $r5.<org.jsoup.parser.CharacterReader: int pos()>();
        $r6 = newarray (java.lang.Object)[2];
        $r7 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Token currentToken>;
        $r8 = virtualinvoke $r7.<org.jsoup.parser.Token: java.lang.String tokenType()>();
        $r6[0] = $r8;
        $r6[1] = r1;
        specialinvoke $r2.<org.jsoup.parser.ParseError: void <init>(int,java.lang.String,java.lang.Object[])>($i0, "Unexpected token [%s] when in state [%s]", $r6);
        virtualinvoke $r4.<org.jsoup.parser.ParseErrorList: boolean add(java.lang.Object)>($r2);

     label0:
        return;
    }

    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.Token$StartTag r1;
        org.jsoup.nodes.Element r2, $r6, r11;
        boolean $z0, $z1;
        java.lang.String $r3, $r5, $r7, $r9;
        org.jsoup.parser.Token$EndTag $r4;
        org.jsoup.parser.Tag $r8;
        org.jsoup.nodes.Attributes $r10;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$StartTag;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token$StartTag: boolean isSelfClosing()>();
        if $z0 == 0 goto label0;

        $r3 = virtualinvoke r1.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z1 = staticinvoke <org.jsoup.parser.Tag: boolean isKnownTag(java.lang.String)>($r3);
        if $z1 != 0 goto label0;

        r2 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r1);
        $r4 = new org.jsoup.parser.Token$EndTag;
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        specialinvoke $r4.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>($r5);
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);
        return r2;

     label0:
        $r6 = new org.jsoup.nodes.Element;
        $r7 = virtualinvoke r1.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $r8 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>($r7);
        $r9 = r0.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String baseUri>;
        $r10 = r1.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        specialinvoke $r6.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>($r8, $r9, $r10);
        r11 = $r6;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.nodes.Element)>(r11);
        return r11;
    }

    org.jsoup.nodes.Element insert(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, $r5;
        org.jsoup.nodes.Element $r2, r3;
        org.jsoup.parser.Tag $r4;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.nodes.Element;
        $r4 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>(r1);
        $r5 = r0.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String baseUri>;
        specialinvoke $r2.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r4, $r5);
        r3 = $r2;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.nodes.Element)>(r3);
        return r3;
    }

    void insert(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.helper.DescendableLinkedList $r2;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r1);
        $r2 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        virtualinvoke $r2.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>(r1);
        return;
    }

    org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.Token$StartTag r1;
        org.jsoup.parser.Tag r2;
        org.jsoup.nodes.Element r3, $r5;
        java.lang.String $r4, $r6;
        org.jsoup.nodes.Attributes $r7;
        boolean $z0, $z1;
        org.jsoup.parser.Tokeniser $r8;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$StartTag;
        $r4 = virtualinvoke r1.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        r2 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>($r4);
        $r5 = new org.jsoup.nodes.Element;
        $r6 = r0.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String baseUri>;
        $r7 = r1.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        specialinvoke $r5.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>(r2, $r6, $r7);
        r3 = $r5;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r3);
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token$StartTag: boolean isSelfClosing()>();
        if $z0 == 0 goto label0;

        $r8 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        virtualinvoke $r8.<org.jsoup.parser.Tokeniser: void acknowledgeSelfClosingFlag()>();
        $z1 = virtualinvoke r2.<org.jsoup.parser.Tag: boolean isKnownTag()>();
        if $z1 != 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.Tag: org.jsoup.parser.Tag setSelfClosing()>();

     label0:
        return r3;
    }

    void insert(org.jsoup.parser.Token$Comment)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.Token$Comment r1;
        org.jsoup.nodes.Comment $r2, r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$Comment;
        $r2 = new org.jsoup.nodes.Comment;
        $r4 = virtualinvoke r1.<org.jsoup.parser.Token$Comment: java.lang.String getData()>();
        $r5 = r0.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String baseUri>;
        specialinvoke $r2.<org.jsoup.nodes.Comment: void <init>(java.lang.String,java.lang.String)>($r4, $r5);
        r3 = $r2;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r3);
        return;
    }

    void insert(org.jsoup.parser.Token$Character)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.parser.Token$Character r1;
        org.jsoup.nodes.Node r2;
        org.jsoup.nodes.Element $r3, $r12;
        java.lang.String $r4, $r7, $r8, $r10, $r11;
        java.lang.String[] $r5;
        boolean $z0;
        org.jsoup.nodes.DataNode $r6;
        org.jsoup.nodes.TextNode $r9;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$Character;
        $r3 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "script";
        $r5[1] = "style";
        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);
        if $z0 == 0 goto label0;

        $r6 = new org.jsoup.nodes.DataNode;
        $r7 = virtualinvoke r1.<org.jsoup.parser.Token$Character: java.lang.String getData()>();
        $r8 = r0.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String baseUri>;
        specialinvoke $r6.<org.jsoup.nodes.DataNode: void <init>(java.lang.String,java.lang.String)>($r7, $r8);
        r2 = $r6;
        goto label1;

     label0:
        $r9 = new org.jsoup.nodes.TextNode;
        $r10 = virtualinvoke r1.<org.jsoup.parser.Token$Character: java.lang.String getData()>();
        $r11 = r0.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String baseUri>;
        specialinvoke $r9.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>($r10, $r11);
        r2 = $r9;

     label1:
        $r12 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        virtualinvoke $r12.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r2);
        return;
    }

    private void insertNode(org.jsoup.nodes.Node)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Node r1;
        org.jsoup.helper.DescendableLinkedList $r2;
        int $i0;
        org.jsoup.nodes.Document $r3;
        boolean $z0;
        org.jsoup.nodes.Element $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $i0 = virtualinvoke $r2.<org.jsoup.helper.DescendableLinkedList: int size()>();
        if $i0 != 0 goto label0;

        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document doc>;
        virtualinvoke $r3.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r1);
        goto label2;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean isFosterInserts()>();
        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void insertInFosterParent(org.jsoup.nodes.Node)>(r1);
        goto label2;

     label1:
        $r5 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        virtualinvoke $r5.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r1);

     label2:
        return;
    }

    org.jsoup.nodes.Element pop()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.helper.DescendableLinkedList $r1, $r7, $r11;
        java.lang.Object $r2, $r8, $r12;
        org.jsoup.nodes.Element $r3, $r9, $r13;
        java.lang.String $r4, $r6, $r10;
        boolean $z0, $z1, $z2;
        org.jsoup.parser.HtmlTreeBuilderState $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $r2 = virtualinvoke $r1.<org.jsoup.helper.DescendableLinkedList: java.lang.Object peekLast()>();
        $r3 = (org.jsoup.nodes.Element) $r2;
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("td");
        if $z0 == 0 goto label0;

        $r5 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state>;
        $r6 = virtualinvoke $r5.<org.jsoup.parser.HtmlTreeBuilderState: java.lang.String name()>();
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("InCell");
        if $z1 != 0 goto label0;

        staticinvoke <org.jsoup.helper.Validate: void isFalse(boolean,java.lang.String)>(1, "pop td not in cell");

     label0:
        $r7 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $r8 = virtualinvoke $r7.<org.jsoup.helper.DescendableLinkedList: java.lang.Object peekLast()>();
        $r9 = (org.jsoup.nodes.Element) $r8;
        $r10 = virtualinvoke $r9.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z2 == 0 goto label1;

        staticinvoke <org.jsoup.helper.Validate: void isFalse(boolean,java.lang.String)>(1, "popping html!");

     label1:
        $r11 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $r12 = virtualinvoke $r11.<org.jsoup.helper.DescendableLinkedList: java.lang.Object pollLast()>();
        $r13 = (org.jsoup.nodes.Element) $r12;
        return $r13;
    }

    void push(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.helper.DescendableLinkedList $r2;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $r2 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        virtualinvoke $r2.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>(r1);
        return;
    }

    org.jsoup.helper.DescendableLinkedList getStack()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.helper.DescendableLinkedList $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        return $r1;
    }

    boolean onStack(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.helper.DescendableLinkedList $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $r2 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean isElementInQueue(org.jsoup.helper.DescendableLinkedList,org.jsoup.nodes.Element)>($r2, r1);
        return $z0;
    }

    private boolean isElementInQueue(org.jsoup.helper.DescendableLinkedList, org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.helper.DescendableLinkedList r1;
        org.jsoup.nodes.Element r2, r4;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.helper.DescendableLinkedList;
        r2 := @parameter1: org.jsoup.nodes.Element;
        r3 = virtualinvoke r1.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r5;
        if r4 != r2 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    org.jsoup.nodes.Element getFromStack(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        org.jsoup.helper.DescendableLinkedList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        $r6 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label1;

        return r3;

     label1:
        goto label0;

     label2:
        return null;
    }

    boolean removeFromStack(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1, r3;
        java.util.Iterator r2;
        org.jsoup.helper.DescendableLinkedList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        if r3 != r1 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    void popStackToClose(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        org.jsoup.helper.DescendableLinkedList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        $r6 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        goto label2;

     label1:
        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        goto label0;

     label2:
        return;
    }

    transient void popStackToClose(java.lang.String[])
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String[] r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        org.jsoup.helper.DescendableLinkedList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String[];
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        $r6 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r6, r1);
        if $z1 == 0 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        goto label2;

     label1:
        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        goto label0;

     label2:
        return;
    }

    void popStackToBefore(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        org.jsoup.helper.DescendableLinkedList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        $r6 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label1;

        goto label2;

     label1:
        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        goto label0;

     label2:
        return;
    }

    void clearStackToTableContext()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String[] $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = newarray (java.lang.String)[1];
        $r1[0] = "table";
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToContext(java.lang.String[])>($r1);
        return;
    }

    void clearStackToTableBodyContext()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String[] $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = newarray (java.lang.String)[3];
        $r1[0] = "tbody";
        $r1[1] = "tfoot";
        $r1[2] = "thead";
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToContext(java.lang.String[])>($r1);
        return;
    }

    void clearStackToTableRowContext()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String[] $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = newarray (java.lang.String)[1];
        $r1[0] = "tr";
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToContext(java.lang.String[])>($r1);
        return;
    }

    private transient void clearStackToContext(java.lang.String[])
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String[] r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        org.jsoup.helper.DescendableLinkedList $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String[];
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        $r6 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r6, r1);
        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z2 == 0 goto label1;

        goto label2;

     label1:
        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        goto label0;

     label2:
        return;
    }

    org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1, r3, $r8;
        boolean $z0, $z1, $z2;
        java.util.Iterator r2;
        java.lang.AssertionError $r4;
        org.jsoup.helper.DescendableLinkedList $r5;
        java.lang.Object $r6, $r7;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $z0 = <org.jsoup.parser.HtmlTreeBuilder: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean onStack(org.jsoup.nodes.Element)>(r1);
        if $z1 != 0 goto label0;

        $r4 = new java.lang.AssertionError;
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
        throw $r4;

     label0:
        $r5 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r2 = virtualinvoke $r5.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r6;
        if r3 != r1 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        $r8 = (org.jsoup.nodes.Element) $r7;
        return $r8;

     label2:
        goto label1;

     label3:
        return null;
    }

    void insertOnStackAfter(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1, r2;
        int i0, $i1;
        org.jsoup.helper.DescendableLinkedList $r3, $r4;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        i0 = virtualinvoke $r3.<org.jsoup.helper.DescendableLinkedList: int lastIndexOf(java.lang.Object)>(r1);
        if i0 == -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean)>($z0);
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $i1 = i0 + 1;
        virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: void add(int,java.lang.Object)>($i1, r2);
        return;
    }

    void replaceOnStack(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1, r2;
        org.jsoup.helper.DescendableLinkedList $r3;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void replaceInQueue(java.util.LinkedList,org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($r3, r1, r2);
        return;
    }

    private void replaceInQueue(java.util.LinkedList, org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.util.LinkedList r1;
        org.jsoup.nodes.Element r2, r3;
        int i0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.util.LinkedList;
        r2 := @parameter1: org.jsoup.nodes.Element;
        r3 := @parameter2: org.jsoup.nodes.Element;
        i0 = virtualinvoke r1.<java.util.LinkedList: int lastIndexOf(java.lang.Object)>(r2);
        if i0 == -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean)>($z0);
        virtualinvoke r1.<java.util.LinkedList: java.lang.Object remove(int)>(i0);
        virtualinvoke r1.<java.util.LinkedList: void add(int,java.lang.Object)>(i0, r3);
        return;
    }

    void resetInsertionMode()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.util.Iterator r1;
        org.jsoup.nodes.Element r2;
        java.lang.String r3, $r6, $r8, $r9, $r11, $r13, $r14, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        org.jsoup.helper.DescendableLinkedList $r4;
        java.lang.Object $r5;
        org.jsoup.parser.HtmlTreeBuilderState $r7, $r10, $r12, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r31;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        z0 = 0;
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r1 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label16;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.jsoup.nodes.Element) $r5;
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label1;

        z0 = 1;
        r2 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element contextElement>;

     label1:
        r3 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r6 = "select";
        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z3 == 0 goto label2;

        $r7 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InSelect>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r7);
        goto label16;

     label2:
        $r8 = "td";
        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z4 != 0 goto label3;

        $r9 = "td";
        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z5 == 0 goto label4;

        if z0 != 0 goto label4;

     label3:
        $r10 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InCell>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r10);
        goto label16;

     label4:
        $r11 = "tr";
        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z6 == 0 goto label5;

        $r12 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InRow>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r12);
        goto label16;

     label5:
        $r13 = "tbody";
        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z7 != 0 goto label6;

        $r14 = "thead";
        $z8 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z8 != 0 goto label6;

        $r15 = "tfoot";
        $z9 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z9 == 0 goto label7;

     label6:
        $r16 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InTableBody>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r16);
        goto label16;

     label7:
        $r17 = "caption";
        $z10 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z10 == 0 goto label8;

        $r18 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InCaption>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r18);
        goto label16;

     label8:
        $r19 = "colgroup";
        $z11 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z11 == 0 goto label9;

        $r20 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InColumnGroup>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r20);
        goto label16;

     label9:
        $r21 = "table";
        $z12 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z12 == 0 goto label10;

        $r22 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r22);
        goto label16;

     label10:
        $r23 = "head";
        $z13 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z13 == 0 goto label11;

        $r24 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r24);
        goto label16;

     label11:
        $r25 = "body";
        $z14 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z14 == 0 goto label12;

        $r26 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r26);
        goto label16;

     label12:
        $r27 = "frameset";
        $z15 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z15 == 0 goto label13;

        $r28 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InFrameset>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r28);
        goto label16;

     label13:
        $r29 = "html";
        $z16 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z16 == 0 goto label14;

        $r30 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState BeforeHead>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r30);
        goto label16;

     label14:
        if z0 == 0 goto label15;

        $r31 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r31);
        goto label16;

     label15:
        goto label0;

     label16:
        return;
    }

    private boolean inSpecificScope(java.lang.String, java.lang.String[], java.lang.String[])
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1;
        java.lang.String[] r2, r3, $r4;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        r3 := @parameter2: java.lang.String[];
        $r4 = newarray (java.lang.String)[1];
        $r4[0] = r1;
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean inSpecificScope(java.lang.String[],java.lang.String[],java.lang.String[])>($r4, r2, r3);
        return $z0;
    }

    private boolean inSpecificScope(java.lang.String[], java.lang.String[], java.lang.String[])
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String[] r1, r2, r3;
        java.util.Iterator r4;
        org.jsoup.nodes.Element r5;
        java.lang.String r6;
        org.jsoup.helper.DescendableLinkedList $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String[];
        r2 := @parameter1: java.lang.String[];
        r3 := @parameter2: java.lang.String[];
        $r7 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r4 = virtualinvoke $r7.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.jsoup.nodes.Element) $r8;
        r6 = virtualinvoke r5.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r6, r1);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z2 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r6, r2);
        if $z2 == 0 goto label2;

        return 0;

     label2:
        if r3 == null goto label3;

        $z3 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r6, r3);
        if $z3 == 0 goto label3;

        return 0;

     label3:
        goto label0;

     label4:
        staticinvoke <org.jsoup.helper.Validate: void fail(java.lang.String)>("Should not be reachable");
        return 0;
    }

    boolean inScope(java.lang.String[])
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String[] r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String[];
        $r2 = newarray (java.lang.String)[8];
        $r2[0] = "applet";
        $r2[1] = "caption";
        $r2[2] = "html";
        $r2[3] = "table";
        $r2[4] = "td";
        $r2[5] = "th";
        $r2[6] = "marquee";
        $r2[7] = "object";
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean inSpecificScope(java.lang.String[],java.lang.String[],java.lang.String[])>(r1, $r2, null);
        return $z0;
    }

    boolean inScope(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String,java.lang.String[])>(r1, null);
        return $z0;
    }

    boolean inScope(java.lang.String, java.lang.String[])
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1;
        java.lang.String[] r2, $r3;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        $r3 = newarray (java.lang.String)[8];
        $r3[0] = "applet";
        $r3[1] = "caption";
        $r3[2] = "html";
        $r3[3] = "table";
        $r3[4] = "td";
        $r3[5] = "th";
        $r3[6] = "marquee";
        $r3[7] = "object";
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean inSpecificScope(java.lang.String,java.lang.String[],java.lang.String[])>(r1, $r3, r2);
        return $z0;
    }

    boolean inListItemScope(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r2 = newarray (java.lang.String)[2];
        $r2[0] = "ol";
        $r2[1] = "ul";
        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String,java.lang.String[])>(r1, $r2);
        return $z0;
    }

    boolean inButtonScope(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r2 = newarray (java.lang.String)[1];
        $r2[0] = "button";
        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String,java.lang.String[])>(r1, $r2);
        return $z0;
    }

    boolean inTableScope(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r2 = newarray (java.lang.String)[2];
        $r2[0] = "html";
        $r2[1] = "table";
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean inSpecificScope(java.lang.String,java.lang.String[],java.lang.String[])>(r1, $r2, null);
        return $z0;
    }

    boolean inSelectScope(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, r4;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        org.jsoup.helper.DescendableLinkedList $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;
        java.lang.String[] $r7;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r2 = virtualinvoke $r5.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r6;
        r4 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        $r7 = newarray (java.lang.String)[2];
        $r7[0] = "optgroup";
        $r7[1] = "option";
        $z2 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r7);
        if $z2 != 0 goto label2;

        return 0;

     label2:
        goto label0;

     label3:
        staticinvoke <org.jsoup.helper.Validate: void fail(java.lang.String)>("Should not be reachable");
        return 0;
    }

    void setHeadElement(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element headElement> = r1;
        return;
    }

    org.jsoup.nodes.Element getHeadElement()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element headElement>;
        return $r1;
    }

    boolean isFosterInserts()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = r0.<org.jsoup.parser.HtmlTreeBuilder: boolean fosterInserts>;
        return $z0;
    }

    void setFosterInserts(boolean)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        boolean z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        z0 := @parameter0: boolean;
        r0.<org.jsoup.parser.HtmlTreeBuilder: boolean fosterInserts> = z0;
        return;
    }

    org.jsoup.nodes.Element getFormElement()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element formElement>;
        return $r1;
    }

    void setFormElement(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element formElement> = r1;
        return;
    }

    void newPendingTableCharacters()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.jsoup.parser.HtmlTreeBuilder: java.util.List pendingTableCharacters> = $r1;
        return;
    }

    java.util.List getPendingTableCharacters()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.util.List $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: java.util.List pendingTableCharacters>;
        return $r1;
    }

    void setPendingTableCharacters(java.util.List)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.util.List r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.util.List;
        r0.<org.jsoup.parser.HtmlTreeBuilder: java.util.List pendingTableCharacters> = r1;
        return;
    }

    void generateImpliedEndTags(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, $r3, $r5;
        org.jsoup.nodes.Element $r2, $r4;
        boolean $z0, $z1;
        java.lang.String[] $r6;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;

     label0:
        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r3 = virtualinvoke $r2.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r6 = newarray (java.lang.String)[8];
        $r6[0] = "dd";
        $r6[1] = "dt";
        $r6[2] = "li";
        $r6[3] = "option";
        $r6[4] = "optgroup";
        $r6[5] = "p";
        $r6[6] = "rp";
        $r6[7] = "rt";
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r5, $r6);
        if $z1 == 0 goto label1;

        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        goto label0;

     label1:
        return;
    }

    void generateImpliedEndTags()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags(java.lang.String)>(null);
        return;
    }

    boolean isSpecial(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;
        java.lang.String r2;
        java.lang.String[] $r3;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 = virtualinvoke r1.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r3 = newarray (java.lang.String)[79];
        $r3[0] = "address";
        $r3[1] = "applet";
        $r3[2] = "area";
        $r3[3] = "article";
        $r3[4] = "aside";
        $r3[5] = "base";
        $r3[6] = "basefont";
        $r3[7] = "bgsound";
        $r3[8] = "blockquote";
        $r3[9] = "body";
        $r3[10] = "br";
        $r3[11] = "button";
        $r3[12] = "caption";
        $r3[13] = "center";
        $r3[14] = "col";
        $r3[15] = "colgroup";
        $r3[16] = "command";
        $r3[17] = "dd";
        $r3[18] = "details";
        $r3[19] = "dir";
        $r3[20] = "div";
        $r3[21] = "dl";
        $r3[22] = "dt";
        $r3[23] = "embed";
        $r3[24] = "fieldset";
        $r3[25] = "figcaption";
        $r3[26] = "figure";
        $r3[27] = "footer";
        $r3[28] = "form";
        $r3[29] = "frame";
        $r3[30] = "frameset";
        $r3[31] = "h1";
        $r3[32] = "h2";
        $r3[33] = "h3";
        $r3[34] = "h4";
        $r3[35] = "h5";
        $r3[36] = "h6";
        $r3[37] = "head";
        $r3[38] = "header";
        $r3[39] = "hgroup";
        $r3[40] = "hr";
        $r3[41] = "html";
        $r3[42] = "iframe";
        $r3[43] = "img";
        $r3[44] = "input";
        $r3[45] = "isindex";
        $r3[46] = "li";
        $r3[47] = "link";
        $r3[48] = "listing";
        $r3[49] = "marquee";
        $r3[50] = "menu";
        $r3[51] = "meta";
        $r3[52] = "nav";
        $r3[53] = "noembed";
        $r3[54] = "noframes";
        $r3[55] = "noscript";
        $r3[56] = "object";
        $r3[57] = "ol";
        $r3[58] = "p";
        $r3[59] = "param";
        $r3[60] = "plaintext";
        $r3[61] = "pre";
        $r3[62] = "script";
        $r3[63] = "section";
        $r3[64] = "select";
        $r3[65] = "style";
        $r3[66] = "summary";
        $r3[67] = "table";
        $r3[68] = "tbody";
        $r3[69] = "td";
        $r3[70] = "textarea";
        $r3[71] = "tfoot";
        $r3[72] = "th";
        $r3[73] = "thead";
        $r3[74] = "title";
        $r3[75] = "tr";
        $r3[76] = "ul";
        $r3[77] = "wbr";
        $r3[78] = "xmp";
        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r2, $r3);
        return $z0;
    }

    void pushActiveFormattingElements(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1, r3;
        int i0;
        java.util.Iterator r2;
        org.jsoup.helper.DescendableLinkedList $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        i0 = 0;
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        if r3 != null goto label1;

        goto label4;

     label1:
        $z1 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean isSameFormattingElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r3);
        if $z1 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        if i0 != 3 goto label3;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        goto label4;

     label3:
        goto label0;

     label4:
        $r6 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        virtualinvoke $r6.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>(r1);
        return;
    }

    private boolean isSameFormattingElement(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;
        org.jsoup.nodes.Attributes $r5, $r6;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = virtualinvoke r1.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r4 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z0 == 0 goto label0;

        $r5 = virtualinvoke r1.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        $r6 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        $z1 = virtualinvoke $r5.<org.jsoup.nodes.Attributes: boolean equals(java.lang.Object)>($r6);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    void reconstructFormattingElements()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        int i0, i1, $i2, $i3;
        org.jsoup.nodes.Element r1, r2, $r8;
        boolean z0, $z1, $z2;
        org.jsoup.helper.DescendableLinkedList $r3, $r4, $r6, $r9, $r11, $r13, $r18, $r19;
        java.lang.Object $r5, $r7, $r10, $r12, $r14;
        java.lang.String $r15;
        org.jsoup.nodes.Attributes $r16, $r17;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        i0 = virtualinvoke $r3.<org.jsoup.helper.DescendableLinkedList: int size()>();
        if i0 == 0 goto label0;

        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        $r5 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.lang.Object getLast()>();
        if $r5 == null goto label0;

        $r6 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        $r7 = virtualinvoke $r6.<org.jsoup.helper.DescendableLinkedList: java.lang.Object getLast()>();
        $r8 = (org.jsoup.nodes.Element) $r7;
        $z1 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean onStack(org.jsoup.nodes.Element)>($r8);
        if $z1 == 0 goto label1;

     label0:
        return;

     label1:
        $r9 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        $r10 = virtualinvoke $r9.<org.jsoup.helper.DescendableLinkedList: java.lang.Object getLast()>();
        r1 = (org.jsoup.nodes.Element) $r10;
        i1 = i0 - 1;
        z0 = 0;

     label2:
        if i1 != 0 goto label3;

        z0 = 1;
        goto label4;

     label3:
        $r11 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        i1 = i1 + -1;
        $r12 = virtualinvoke $r11.<org.jsoup.helper.DescendableLinkedList: java.lang.Object get(int)>(i1);
        r1 = (org.jsoup.nodes.Element) $r12;
        if r1 == null goto label4;

        $z2 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean onStack(org.jsoup.nodes.Element)>(r1);
        if $z2 == 0 goto label2;

        goto label4;

     label4:
        if z0 != 0 goto label5;

        $r13 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        i1 = i1 + 1;
        $r14 = virtualinvoke $r13.<org.jsoup.helper.DescendableLinkedList: java.lang.Object get(int)>(i1);
        r1 = (org.jsoup.nodes.Element) $r14;

     label5:
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        z0 = 0;
        $r15 = virtualinvoke r1.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        r2 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(java.lang.String)>($r15);
        $r16 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        $r17 = virtualinvoke r1.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        virtualinvoke $r16.<org.jsoup.nodes.Attributes: void addAll(org.jsoup.nodes.Attributes)>($r17);
        $r18 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        virtualinvoke $r18.<org.jsoup.helper.DescendableLinkedList: void add(int,java.lang.Object)>(i1, r2);
        $r19 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        $i2 = i1 + 1;
        virtualinvoke $r19.<org.jsoup.helper.DescendableLinkedList: java.lang.Object remove(int)>($i2);
        $i3 = i0 - 1;
        if i1 != $i3 goto label6;

        goto label7;

     label6:
        goto label4;

     label7:
        return;
    }

    void clearFormattingElementsToLastMarker()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.helper.DescendableLinkedList $r2, $r3, $r5;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;

     label0:
        $r2 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        $z0 = virtualinvoke $r2.<org.jsoup.helper.DescendableLinkedList: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        $r4 = virtualinvoke $r3.<org.jsoup.helper.DescendableLinkedList: java.lang.Object peekLast()>();
        r1 = (org.jsoup.nodes.Element) $r4;
        $r5 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        virtualinvoke $r5.<org.jsoup.helper.DescendableLinkedList: java.lang.Object removeLast()>();
        if r1 != null goto label1;

        goto label2;

     label1:
        goto label0;

     label2:
        return;
    }

    void removeFromActiveFormattingElements(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1, r3;
        java.util.Iterator r2;
        org.jsoup.helper.DescendableLinkedList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        if r3 != r1 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();
        goto label2;

     label1:
        goto label0;

     label2:
        return;
    }

    boolean isInActiveFormattingElements(org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.helper.DescendableLinkedList $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $r2 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: boolean isElementInQueue(org.jsoup.helper.DescendableLinkedList,org.jsoup.nodes.Element)>($r2, r1);
        return $z0;
    }

    org.jsoup.nodes.Element getActiveFormattingElement(java.lang.String)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        org.jsoup.helper.DescendableLinkedList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        r2 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        if r3 != null goto label1;

        goto label3;

     label1:
        $r6 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label0;

     label3:
        return null;
    }

    void replaceActiveFormattingElement(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Element r1, r2;
        org.jsoup.helper.DescendableLinkedList $r3;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: void replaceInQueue(java.util.LinkedList,org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($r3, r1, r2);
        return;
    }

    void insertMarkerToFormattingElements()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.helper.DescendableLinkedList $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList formattingElements>;
        virtualinvoke $r1.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>(null);
        return;
    }

    void insertInFosterParent(org.jsoup.nodes.Node)
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        org.jsoup.nodes.Node r1;
        null_type n0;
        org.jsoup.nodes.Element r2, $r3, r4;
        boolean z0;
        org.jsoup.helper.DescendableLinkedList $r5;
        java.lang.Object $r6;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Node;
        n0 = null;
        r2 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFromStack(java.lang.String)>("table");
        z0 = 0;
        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if $r3 == null goto label0;

        r4 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        z0 = 1;
        goto label2;

     label0:
        r4 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element)>(r2);
        goto label2;

     label1:
        $r5 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $r6 = virtualinvoke $r5.<org.jsoup.helper.DescendableLinkedList: java.lang.Object get(int)>(0);
        r4 = (org.jsoup.nodes.Element) $r6;

     label2:
        if z0 == 0 goto label3;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element before(org.jsoup.nodes.Node)>(r1);
        goto label4;

     label3:
        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r1);

     label4:
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.HtmlTreeBuilder r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11;
        org.jsoup.parser.Token $r3;
        org.jsoup.parser.HtmlTreeBuilderState $r6;
        org.jsoup.nodes.Element $r9;
        java.lang.String $r12;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilder;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TreeBuilder{currentToken=");
        $r3 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Token currentToken>;
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=");
        $r6 = r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentElement=");
        $r9 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "org/jsoup/parser/HtmlTreeBuilder";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <org.jsoup.parser.HtmlTreeBuilder: boolean $assertionsDisabled> = $z1;
        return;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$1 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$1 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$1;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$1 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$Doctype r3;
        org.jsoup.nodes.DocumentType r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.parser.Token$Comment $r5;
        java.lang.String $r7, $r8, $r9, $r10;
        org.jsoup.nodes.Document $r11, $r13;
        org.jsoup.nodes.Document$QuirksMode $r14;
        org.jsoup.parser.HtmlTreeBuilderState $r16, $r17;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$1;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r5);
        goto label4;

     label1:
        $z2 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z2 == 0 goto label3;

        r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Doctype asDoctype()>();
        $r6 = new org.jsoup.nodes.DocumentType;
        $r7 = virtualinvoke r3.<org.jsoup.parser.Token$Doctype: java.lang.String getName()>();
        $r8 = virtualinvoke r3.<org.jsoup.parser.Token$Doctype: java.lang.String getPublicIdentifier()>();
        $r9 = virtualinvoke r3.<org.jsoup.parser.Token$Doctype: java.lang.String getSystemIdentifier()>();
        $r10 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String getBaseUri()>();
        specialinvoke $r6.<org.jsoup.nodes.DocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r9, $r10);
        r4 = $r6;
        $r11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document getDocument()>();
        virtualinvoke $r11.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r4);
        $z3 = virtualinvoke r3.<org.jsoup.parser.Token$Doctype: boolean isForceQuirks()>();
        if $z3 == 0 goto label2;

        $r13 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document getDocument()>();
        $r14 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode quirks>;
        virtualinvoke $r13.<org.jsoup.nodes.Document: org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode)>($r14);

     label2:
        $r16 = <org.jsoup.parser.HtmlTreeBuilderState$1: org.jsoup.parser.HtmlTreeBuilderState BeforeHtml>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r16);
        goto label4;

     label3:
        $r17 = <org.jsoup.parser.HtmlTreeBuilderState$1: org.jsoup.parser.HtmlTreeBuilderState BeforeHtml>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r17);
        $z4 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z4;

     label4:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$10 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$10 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$10;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$10 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        int[] $r3;
        org.jsoup.parser.Token$Character r4, r6;
        java.util.Iterator r5;
        org.jsoup.parser.Token$TokenType $r7;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r9, $r15;
        boolean $z0, $z2, $z3, $z4, $z7;
        java.util.List $r10, $r11, $r12;
        java.lang.Object $r13;
        org.jsoup.nodes.Element $r14;
        java.lang.String[] $r16;
        org.jsoup.parser.HtmlTreeBuilderState $r17, $r18, $r19;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$10;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r7 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $i0 = virtualinvoke $r7.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $i1 = $r3[$i0];
        lookupswitch($i1)
        {
            case 5: goto label0;
            default: goto label2;
        };

     label0:
        r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        $r8 = virtualinvoke r4.<org.jsoup.parser.Token$Character: java.lang.String getData()>();
        $r9 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: java.lang.String access$400()>();
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label1:
        $r10 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: java.util.List getPendingTableCharacters()>();
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r4);
        goto label9;

     label2:
        $r11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: java.util.List getPendingTableCharacters()>();
        $i2 = interfaceinvoke $r11.<java.util.List: int size()>();
        if $i2 <= 0 goto label8;

        $r12 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: java.util.List getPendingTableCharacters()>();
        r5 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label7;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (org.jsoup.parser.Token$Character) $r13;
        $z3 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r6);
        if $z3 != 0 goto label5;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r14 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r15 = virtualinvoke $r14.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r16 = newarray (java.lang.String)[5];
        $r16[0] = "table";
        $r16[1] = "tbody";
        $r16[2] = "tfoot";
        $r16[3] = "thead";
        $r16[4] = "tr";
        $z4 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r15, $r16);
        if $z4 == 0 goto label4;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(1);
        $r17 = <org.jsoup.parser.HtmlTreeBuilderState$10: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r6, $r17);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(0);
        goto label6;

     label4:
        $r18 = <org.jsoup.parser.HtmlTreeBuilderState$10: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r6, $r18);
        goto label6;

     label5:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>(r6);

     label6:
        goto label3;

     label7:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void newPendingTableCharacters()>();

     label8:
        $r19 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState originalState()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r19);
        $z7 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z7;

     label9:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$11 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$11 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$11;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$11 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$EndTag r3, $r5, $r13, $r15, $r16;
        java.lang.String r4, $r6, $r8, $r11, $r14, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, $z10, $z11, $z12;
        org.jsoup.nodes.Element $r7;
        org.jsoup.parser.HtmlTreeBuilderState $r9, $r19;
        org.jsoup.parser.Token$StartTag $r10;
        java.lang.String[] $r12, $r18;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$11;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r6 = virtualinvoke $r5.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("caption");
        if $z1 == 0 goto label2;

        r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r4 = virtualinvoke r3.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>(r4);
        if $z2 != 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label0:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags()>();
        $r7 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r8 = virtualinvoke $r7.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("caption");
        if $z3 != 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label1:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>("caption");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearFormattingElementsToLastMarker()>();
        $r9 = <org.jsoup.parser.HtmlTreeBuilderState$11: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r9);
        goto label8;

     label2:
        $z4 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z4 == 0 goto label3;

        $r10 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r11 = virtualinvoke $r10.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $r12 = newarray (java.lang.String)[9];
        $r12[0] = "caption";
        $r12[1] = "col";
        $r12[2] = "colgroup";
        $r12[3] = "tbody";
        $r12[4] = "td";
        $r12[5] = "tfoot";
        $r12[6] = "th";
        $r12[7] = "thead";
        $r12[8] = "tr";
        $z5 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r11, $r12);
        if $z5 != 0 goto label4;

     label3:
        $z6 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z6 == 0 goto label6;

        $r13 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r14 = virtualinvoke $r13.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("table");
        if $z7 == 0 goto label6;

     label4:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r15 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r15.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("caption");
        z8 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r15);
        if z8 == 0 goto label5;

        $z9 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z9;

     label5:
        goto label8;

     label6:
        $z10 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z10 == 0 goto label7;

        $r16 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r17 = virtualinvoke $r16.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $r18 = newarray (java.lang.String)[10];
        $r18[0] = "body";
        $r18[1] = "col";
        $r18[2] = "colgroup";
        $r18[3] = "html";
        $r18[4] = "tbody";
        $r18[5] = "td";
        $r18[6] = "tfoot";
        $r18[7] = "th";
        $r18[8] = "thead";
        $r18[9] = "tr";
        $z11 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r17, $r18);
        if $z11 == 0 goto label7;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label7:
        $r19 = <org.jsoup.parser.HtmlTreeBuilderState$11: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z12 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r19);
        return $z12;

     label8:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$12 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$12 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$12;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$12 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$StartTag r3;
        java.lang.String r4, r12, $r14, $r18;
        org.jsoup.parser.HtmlTreeBuilderState $r5, $r16;
        org.jsoup.parser.Token$EndTag r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.jsoup.parser.Token$Character $r7;
        int[] $r8;
        org.jsoup.parser.Token$TokenType $r9;
        int $i0, $i1;
        org.jsoup.parser.Token$Comment $r10;
        org.jsoup.nodes.Element $r13, $r17;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$12;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z0 == 0 goto label0;

        $r7 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r7);
        return 1;

     label0:
        $r8 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r9 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $i0 = virtualinvoke $r9.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $i1 = $r8[$i0];
        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label6;
            case 5: goto label11;
            case 6: goto label9;
            default: goto label11;
        };

     label1:
        $r10 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r10);
        goto label12;

     label2:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        goto label12;

     label3:
        r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r4 = virtualinvoke r3.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z1 == 0 goto label4;

        $r5 = <org.jsoup.parser.HtmlTreeBuilderState$12: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r5);
        return $z2;

     label4:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("col");
        if $z3 == 0 goto label5;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r3);
        goto label12;

     label5:
        $z4 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$12: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z4;

     label6:
        r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r12 = virtualinvoke r6.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z5 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("colgroup");
        if $z5 == 0 goto label8;

        $r13 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r14 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z6 == 0 goto label7;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label7:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        $r16 = <org.jsoup.parser.HtmlTreeBuilderState$12: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r16);
        goto label12;

     label8:
        $z7 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$12: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z7;

     label9:
        $r17 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r18 = virtualinvoke $r17.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z8 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z8 == 0 goto label10;

        return 1;

     label10:
        $z9 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$12: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z9;

     label11:
        $z10 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$12: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z10;

     label12:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$12 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.TreeBuilder r2;
        org.jsoup.parser.Token$EndTag $r3;
        boolean z0, $z1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$12;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.TreeBuilder;
        $r3 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r3.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("colgroup");
        z0 = virtualinvoke r2.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);
        if z0 == 0 goto label0;

        $z1 = virtualinvoke r2.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z1;

     label0:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$13 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$13 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$13;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$13 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        int[] $r3;
        org.jsoup.parser.Token$StartTag r4, $r11;
        java.lang.String r5, r13;
        org.jsoup.parser.Token$EndTag r6;
        org.jsoup.parser.Token$TokenType $r7;
        int $i0, $i1;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.jsoup.parser.HtmlTreeBuilderState $r9, $r16;
        java.lang.String[] $r10, $r12, $r14, $r17;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$13;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r7 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $i0 = virtualinvoke $r7.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $i1 = $r3[$i0];
        lookupswitch($i1)
        {
            case 3: goto label0;
            case 4: goto label4;
            default: goto label9;
        };

     label0:
        r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r5 = virtualinvoke r4.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("tr");
        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableBodyContext()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r4);
        $r9 = <org.jsoup.parser.HtmlTreeBuilderState$13: org.jsoup.parser.HtmlTreeBuilderState InRow>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r9);
        goto label10;

     label1:
        $r10 = newarray (java.lang.String)[2];
        $r10[0] = "th";
        $r10[1] = "td";
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r10);
        if $z1 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r11 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r11.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("tr");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r11);
        $z3 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r4);
        return $z3;

     label2:
        $r12 = newarray (java.lang.String)[6];
        $r12[0] = "caption";
        $r12[1] = "col";
        $r12[2] = "colgroup";
        $r12[3] = "tbody";
        $r12[4] = "tfoot";
        $r12[5] = "thead";
        $z4 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r12);
        if $z4 == 0 goto label3;

        $z5 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean exitTableBody(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z5;

     label3:
        $z6 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z6;

     label4:
        r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r13 = virtualinvoke r6.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $r14 = newarray (java.lang.String)[3];
        $r14[0] = "tbody";
        $r14[1] = "tfoot";
        $r14[2] = "thead";
        $z7 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r13, $r14);
        if $z7 == 0 goto label6;

        $z8 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>(r13);
        if $z8 != 0 goto label5;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label5:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableBodyContext()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        $r16 = <org.jsoup.parser.HtmlTreeBuilderState$13: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r16);
        goto label10;

     label6:
        $z9 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("table");
        if $z9 == 0 goto label7;

        $z10 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean exitTableBody(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z10;

     label7:
        $r17 = newarray (java.lang.String)[8];
        $r17[0] = "body";
        $r17[1] = "caption";
        $r17[2] = "col";
        $r17[3] = "colgroup";
        $r17[4] = "html";
        $r17[5] = "td";
        $r17[6] = "th";
        $r17[7] = "tr";
        $z11 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r13, $r17);
        if $z11 == 0 goto label8;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label8:
        $z12 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z12;

     label9:
        $z13 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z13;

     label10:
        return 1;
    }

    private boolean exitTableBody(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$13 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        boolean $z0, $z1, $z2, $z4;
        org.jsoup.parser.Token$EndTag $r3;
        org.jsoup.nodes.Element $r4;
        java.lang.String $r5;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$13;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>("tbody");
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>("thead");
        if $z1 != 0 goto label0;

        $z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>("tfoot");
        if $z2 != 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label0:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableBodyContext()>();
        $r3 = new org.jsoup.parser.Token$EndTag;
        $r4 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        specialinvoke $r3.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>($r5);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);
        $z4 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z4;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$13 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$13;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$13: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        $z0 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r3);
        return $z0;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$14 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$14 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$14;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$14 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$StartTag r3;
        java.lang.String r4, r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16;
        java.lang.String[] $r5, $r8, $r13, $r15;
        org.jsoup.parser.HtmlTreeBuilderState $r7, $r12;
        org.jsoup.parser.Token$EndTag r9, $r14;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$14;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z0 == 0 goto label3;

        r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r4 = virtualinvoke r3.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "th";
        $r5[1] = "td";
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r5);
        if $z1 == 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableRowContext()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r3);
        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$14: org.jsoup.parser.HtmlTreeBuilderState InCell>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r7);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insertMarkerToFormattingElements()>();
        goto label2;

     label0:
        $r8 = newarray (java.lang.String)[7];
        $r8[0] = "caption";
        $r8[1] = "col";
        $r8[2] = "colgroup";
        $r8[3] = "tbody";
        $r8[4] = "tfoot";
        $r8[5] = "thead";
        $r8[6] = "tr";
        $z2 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r8);
        if $z2 == 0 goto label1;

        $z3 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean handleMissingTr(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z3;

     label1:
        $z4 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z4;

     label2:
        goto label12;

     label3:
        $z5 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z5 == 0 goto label11;

        r9 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r10 = virtualinvoke r9.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z6 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("tr");
        if $z6 == 0 goto label5;

        $z7 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>(r10);
        if $z7 != 0 goto label4;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label4:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableRowContext()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        $r12 = <org.jsoup.parser.HtmlTreeBuilderState$14: org.jsoup.parser.HtmlTreeBuilderState InTableBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r12);
        goto label10;

     label5:
        $z8 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("table");
        if $z8 == 0 goto label6;

        $z9 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean handleMissingTr(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z9;

     label6:
        $r13 = newarray (java.lang.String)[3];
        $r13[0] = "tbody";
        $r13[1] = "tfoot";
        $r13[2] = "thead";
        $z10 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r10, $r13);
        if $z10 == 0 goto label8;

        $z11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>(r10);
        if $z11 != 0 goto label7;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label7:
        $r14 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r14.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("tr");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r14);
        $z13 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z13;

     label8:
        $r15 = newarray (java.lang.String)[7];
        $r15[0] = "body";
        $r15[1] = "caption";
        $r15[2] = "col";
        $r15[3] = "colgroup";
        $r15[4] = "html";
        $r15[5] = "td";
        $r15[6] = "th";
        $z14 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r10, $r15);
        if $z14 == 0 goto label9;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label9:
        $z15 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z15;

     label10:
        goto label12;

     label11:
        $z16 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z16;

     label12:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$14 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$14;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$14: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        $z0 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r3);
        return $z0;
    }

    private boolean handleMissingTr(org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$14 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.TreeBuilder r2;
        org.jsoup.parser.Token$EndTag $r3;
        boolean z0, $z1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$14;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.TreeBuilder;
        $r3 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r3.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("tr");
        z0 = virtualinvoke r2.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);
        if z0 == 0 goto label0;

        $z1 = virtualinvoke r2.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z1;

     label0:
        return 0;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$15 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$15 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$15;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$15 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$EndTag r3;
        java.lang.String r4, $r8, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.String[] $r5, $r10, $r11, $r14;
        org.jsoup.parser.HtmlTreeBuilderState $r6, $r9;
        org.jsoup.nodes.Element $r7;
        org.jsoup.parser.Token$StartTag $r12;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$15;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z0 == 0 goto label7;

        r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r4 = virtualinvoke r3.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "td";
        $r5[1] = "th";
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r5);
        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>(r4);
        if $z2 != 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$15: org.jsoup.parser.HtmlTreeBuilderState InRow>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r6);
        return 0;

     label0:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags()>();
        $r7 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r8 = virtualinvoke $r7.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z3 != 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label1:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>(r4);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearFormattingElementsToLastMarker()>();
        $r9 = <org.jsoup.parser.HtmlTreeBuilderState$15: org.jsoup.parser.HtmlTreeBuilderState InRow>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r9);
        goto label6;

     label2:
        $r10 = newarray (java.lang.String)[5];
        $r10[0] = "body";
        $r10[1] = "caption";
        $r10[2] = "col";
        $r10[3] = "colgroup";
        $r10[4] = "html";
        $z4 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r10);
        if $z4 == 0 goto label3;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label3:
        $r11 = newarray (java.lang.String)[5];
        $r11[0] = "table";
        $r11[1] = "tbody";
        $r11[2] = "tfoot";
        $r11[3] = "thead";
        $r11[4] = "tr";
        $z5 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r11);
        if $z5 == 0 goto label5;

        $z6 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>(r4);
        if $z6 != 0 goto label4;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label4:
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$15: void closeCell(org.jsoup.parser.HtmlTreeBuilder)>(r2);
        $z7 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z7;

     label5:
        $z8 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$15: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z8;

     label6:
        goto label10;

     label7:
        $z9 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z9 == 0 goto label9;

        $r12 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r13 = virtualinvoke $r12.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $r14 = newarray (java.lang.String)[9];
        $r14[0] = "caption";
        $r14[1] = "col";
        $r14[2] = "colgroup";
        $r14[3] = "tbody";
        $r14[4] = "td";
        $r14[5] = "tfoot";
        $r14[6] = "th";
        $r14[7] = "thead";
        $r14[8] = "tr";
        $z10 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r13, $r14);
        if $z10 == 0 goto label9;

        $z11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>("td");
        if $z11 != 0 goto label8;

        $z12 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>("th");
        if $z12 != 0 goto label8;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label8:
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$15: void closeCell(org.jsoup.parser.HtmlTreeBuilder)>(r2);
        $z13 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z13;

     label9:
        $z14 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$15: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z14;

     label10:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$15 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$15;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$15: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z0 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r3);
        return $z0;
    }

    private void closeCell(org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$15 r0;
        org.jsoup.parser.HtmlTreeBuilder r1;
        boolean $z0;
        org.jsoup.parser.Token$EndTag $r2, $r3;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$15;
        r1 := @parameter0: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>("td");
        if $z0 == 0 goto label0;

        $r2 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r2.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("td");
        virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r2);
        goto label1;

     label0:
        $r3 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r3.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("th");
        virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$16 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$16 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$16;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$16 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        int[] $r3;
        org.jsoup.parser.Token$Character r4;
        org.jsoup.parser.Token$StartTag r5;
        java.lang.String r6, $r10, $r11, $r16, $r19, r26, $r28, $r33, $r36, $r39, $r42;
        org.jsoup.parser.HtmlTreeBuilderState $r7, $r25;
        org.jsoup.parser.Token$EndTag r8, $r13, $r17, $r20, $r22, $r24, $r34;
        org.jsoup.parser.Token$TokenType $r9;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z8, $z10, $z11, $z12, $z13, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30;
        org.jsoup.parser.Token$Comment $r12;
        org.jsoup.nodes.Element $r15, $r18, $r27, $r29, $r30, $r31, $r32, $r35, $r38, $r41;
        java.lang.String[] $r23;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$16;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r9 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $i0 = virtualinvoke $r9.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $i1 = $r3[$i0];
        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label14;
            case 5: goto label0;
            case 6: goto label22;
            default: goto label23;
        };

     label0:
        r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        $r10 = virtualinvoke r4.<org.jsoup.parser.Token$Character: java.lang.String getData()>();
        $r11 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: java.lang.String access$400()>();
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);
        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label1:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>(r4);
        goto label24;

     label2:
        $r12 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r12);
        goto label24;

     label3:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label4:
        r5 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r6 = virtualinvoke r5.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z1 == 0 goto label5;

        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$16: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r5, $r7);
        return $z2;

     label5:
        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("option");
        if $z3 == 0 goto label6;

        $r13 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r13.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("option");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r13);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r5);
        goto label24;

     label6:
        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");
        if $z5 == 0 goto label9;

        $r15 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r16 = virtualinvoke $r15.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("option");
        if $z6 == 0 goto label7;

        $r17 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r17.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("option");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r17);
        goto label8;

     label7:
        $r18 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r19 = virtualinvoke $r18.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z8 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");
        if $z8 == 0 goto label8;

        $r20 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r20.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("optgroup");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r20);

     label8:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r5);
        goto label24;

     label9:
        $z10 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("select");
        if $z10 == 0 goto label10;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r22 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r22.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("select");
        $z11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r22);
        return $z11;

     label10:
        $r23 = newarray (java.lang.String)[3];
        $r23[0] = "input";
        $r23[1] = "keygen";
        $r23[2] = "textarea";
        $z12 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r6, $r23);
        if $z12 == 0 goto label12;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $z13 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inSelectScope(java.lang.String)>("select");
        if $z13 != 0 goto label11;

        return 0;

     label11:
        $r24 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r24.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("select");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r24);
        $z15 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r5);
        return $z15;

     label12:
        $z16 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("script");
        if $z16 == 0 goto label13;

        $r25 = <org.jsoup.parser.HtmlTreeBuilderState$16: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        $z17 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r25);
        return $z17;

     label13:
        $z18 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$16: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z18;

     label14:
        r8 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r26 = virtualinvoke r8.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z19 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");
        if $z19 == 0 goto label17;

        $r27 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r28 = virtualinvoke $r27.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z20 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("option");
        if $z20 == 0 goto label15;

        $r29 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r30 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element)>($r29);
        if $r30 == null goto label15;

        $r31 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r32 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element)>($r31);
        $r33 = virtualinvoke $r32.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z21 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");
        if $z21 == 0 goto label15;

        $r34 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r34.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("option");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r34);

     label15:
        $r35 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r36 = virtualinvoke $r35.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z23 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>("optgroup");
        if $z23 == 0 goto label16;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        goto label24;

     label16:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        goto label24;

     label17:
        $z24 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("option");
        if $z24 == 0 goto label19;

        $r38 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r39 = virtualinvoke $r38.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z25 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>("option");
        if $z25 == 0 goto label18;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        goto label24;

     label18:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        goto label24;

     label19:
        $z26 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("select");
        if $z26 == 0 goto label21;

        $z27 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inSelectScope(java.lang.String)>(r26);
        if $z27 != 0 goto label20;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label20:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>(r26);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void resetInsertionMode()>();
        goto label24;

     label21:
        $z28 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$16: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z28;

     label22:
        $r41 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r42 = virtualinvoke $r41.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z29 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z29 != 0 goto label24;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        goto label24;

     label23:
        $z30 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$16: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z30;

     label24:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$16 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$16;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$17 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$17 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$17;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$17 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z8, $z9;
        org.jsoup.parser.Token$StartTag $r3;
        java.lang.String $r4, $r8, $r11;
        java.lang.String[] $r5, $r9;
        org.jsoup.parser.Token$EndTag $r6, $r7, $r10, $r12;
        org.jsoup.parser.HtmlTreeBuilderState $r13;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$17;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z0 == 0 goto label0;

        $r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r4 = virtualinvoke $r3.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $r5 = newarray (java.lang.String)[8];
        $r5[0] = "caption";
        $r5[1] = "table";
        $r5[2] = "tbody";
        $r5[3] = "tfoot";
        $r5[4] = "thead";
        $r5[5] = "tr";
        $r5[6] = "td";
        $r5[7] = "th";
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);
        if $z1 == 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r6 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r6.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("select");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r6);
        $z3 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z3;

     label0:
        $z4 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z4 == 0 goto label2;

        $r7 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r8 = virtualinvoke $r7.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $r9 = newarray (java.lang.String)[8];
        $r9[0] = "caption";
        $r9[1] = "table";
        $r9[2] = "tbody";
        $r9[3] = "tfoot";
        $r9[4] = "thead";
        $r9[5] = "tr";
        $r9[6] = "td";
        $r9[7] = "th";
        $z5 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r8, $r9);
        if $z5 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r10 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r11 = virtualinvoke $r10.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z6 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>($r11);
        if $z6 == 0 goto label1;

        $r12 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r12.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("select");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r12);
        $z8 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z8;

     label1:
        return 0;

     label2:
        $r13 = <org.jsoup.parser.HtmlTreeBuilderState$17: org.jsoup.parser.HtmlTreeBuilderState InSelect>;
        $z9 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r13);
        return $z9;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$18 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$18 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$18;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$18 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3, $r7, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.jsoup.parser.Token$Comment $r4;
        org.jsoup.parser.Token$StartTag $r5;
        java.lang.String $r6, $r9;
        org.jsoup.parser.Token$EndTag $r8;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$18;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z0 == 0 goto label0;

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$18: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z1 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r3);
        return $z1;

     label0:
        $z2 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z2 == 0 goto label1;

        $r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r4);
        goto label7;

     label1:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z3 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label2:
        $z4 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z4 == 0 goto label3;

        $r5 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r6 = virtualinvoke $r5.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z5 == 0 goto label3;

        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$18: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z6 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r7);
        return $z6;

     label3:
        $z7 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z7 == 0 goto label5;

        $r8 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r9 = virtualinvoke $r8.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z8 == 0 goto label5;

        $z9 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean isFragmentParsing()>();
        if $z9 == 0 goto label4;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label4:
        $r10 = <org.jsoup.parser.HtmlTreeBuilderState$18: org.jsoup.parser.HtmlTreeBuilderState AfterAfterBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r10);
        goto label7;

     label5:
        $z10 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEOF()>();
        if $z10 == 0 goto label6;

        goto label7;

     label6:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r11 = <org.jsoup.parser.HtmlTreeBuilderState$18: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r11);
        $z11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z11;

     label7:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$19 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$19 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$19;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$19 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$StartTag r3;
        java.lang.String r4, $r12, $r14, $r17, $r20;
        org.jsoup.parser.HtmlTreeBuilderState $r5, $r10, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        org.jsoup.parser.Token$Character $r6;
        org.jsoup.parser.Token$Comment $r7;
        org.jsoup.parser.Token$EndTag $r11;
        org.jsoup.nodes.Element $r13, $r16, $r19;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$19;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z0 == 0 goto label0;

        $r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r6);
        goto label12;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z1 == 0 goto label1;

        $r7 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r7);
        goto label12;

     label1:
        $z2 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z2 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label2:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z3 == 0 goto label8;

        r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r4 = virtualinvoke r3.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z4 == 0 goto label3;

        $r5 = <org.jsoup.parser.HtmlTreeBuilderState$19: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z5 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r3, $r5);
        return $z5;

     label3:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("frameset");
        if $z6 == 0 goto label4;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r3);
        goto label7;

     label4:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("frame");
        if $z7 == 0 goto label5;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r3);
        goto label7;

     label5:
        $z8 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("noframes");
        if $z8 == 0 goto label6;

        $r10 = <org.jsoup.parser.HtmlTreeBuilderState$19: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        $z9 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r3, $r10);
        return $z9;

     label6:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label7:
        goto label12;

     label8:
        $z10 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z10 == 0 goto label10;

        $r11 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r12 = virtualinvoke $r11.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z11 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("frameset");
        if $z11 == 0 goto label10;

        $r13 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r14 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z12 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z12 == 0 goto label9;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label9:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        $z13 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean isFragmentParsing()>();
        if $z13 != 0 goto label12;

        $r16 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r17 = virtualinvoke $r16.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z14 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("frameset");
        if $z14 != 0 goto label12;

        $r18 = <org.jsoup.parser.HtmlTreeBuilderState$19: org.jsoup.parser.HtmlTreeBuilderState AfterFrameset>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r18);
        goto label12;

     label10:
        $z15 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEOF()>();
        if $z15 == 0 goto label11;

        $r19 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r20 = virtualinvoke $r19.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z16 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z16 != 0 goto label12;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 1;

     label11:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label12:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$2 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$2 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$2;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$2 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.jsoup.parser.Token$Comment $r3;
        org.jsoup.parser.Token$StartTag $r4, $r6;
        java.lang.String $r5, $r10;
        org.jsoup.parser.HtmlTreeBuilderState $r8;
        org.jsoup.parser.Token$EndTag $r9;
        java.lang.String[] $r11;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$2;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z0 == 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r3);
        goto label6;

     label1:
        $z2 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z2 == 0 goto label2;

        return 1;

     label2:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z3 == 0 goto label3;

        $r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r5 = virtualinvoke $r4.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z4 == 0 goto label3;

        $r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r6);
        $r8 = <org.jsoup.parser.HtmlTreeBuilderState$2: org.jsoup.parser.HtmlTreeBuilderState BeforeHead>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r8);
        goto label6;

     label3:
        $z5 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z5 == 0 goto label4;

        $r9 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r10 = virtualinvoke $r9.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $r11 = newarray (java.lang.String)[4];
        $r11[0] = "head";
        $r11[1] = "body";
        $r11[2] = "html";
        $r11[3] = "br";
        $z6 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r10, $r11);
        if $z6 == 0 goto label4;

        $z7 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$2: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z7;

     label4:
        $z8 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z8 == 0 goto label5;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label5:
        $z9 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$2: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z9;

     label6:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$2 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r4;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$2;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(java.lang.String)>("html");
        $r4 = <org.jsoup.parser.HtmlTreeBuilderState$2: org.jsoup.parser.HtmlTreeBuilderState BeforeHead>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r4);
        $z0 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z0;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$20 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$20 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$20;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$20 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3, $r10, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.jsoup.parser.Token$Character $r4;
        org.jsoup.parser.Token$Comment $r5;
        org.jsoup.parser.Token$StartTag $r6, $r11;
        java.lang.String $r7, $r9, $r12;
        org.jsoup.parser.Token$EndTag $r8;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$20;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r4);
        goto label7;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r5);
        goto label7;

     label1:
        $z2 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z2 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label2:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z3 == 0 goto label3;

        $r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r7 = virtualinvoke $r6.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z4 == 0 goto label3;

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$20: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z5 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r3);
        return $z5;

     label3:
        $z6 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z6 == 0 goto label4;

        $r8 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r9 = virtualinvoke $r8.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z7 == 0 goto label4;

        $r10 = <org.jsoup.parser.HtmlTreeBuilderState$20: org.jsoup.parser.HtmlTreeBuilderState AfterAfterFrameset>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r10);
        goto label7;

     label4:
        $z8 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z8 == 0 goto label5;

        $r11 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r12 = virtualinvoke $r11.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("noframes");
        if $z9 == 0 goto label5;

        $r13 = <org.jsoup.parser.HtmlTreeBuilderState$20: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        $z10 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r13);
        return $z10;

     label5:
        $z11 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEOF()>();
        if $z11 == 0 goto label6;

        goto label7;

     label6:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label7:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$21 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$21 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$21;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$21 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.jsoup.parser.Token$Comment $r4;
        org.jsoup.parser.Token$StartTag $r5;
        java.lang.String $r6;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$21;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r4);
        goto label4;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z1 != 0 goto label1;

        $z2 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z3 == 0 goto label2;

        $r5 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r6 = virtualinvoke $r5.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z4 == 0 goto label2;

     label1:
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$21: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z5 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r3);
        return $z5;

     label2:
        $z6 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEOF()>();
        if $z6 == 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$21: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r7);
        $z7 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z7;

     label4:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$22 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$22 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$22;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$22 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.jsoup.parser.Token$Comment $r4;
        org.jsoup.parser.Token$StartTag $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$22;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z0 == 0 goto label0;

        $r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r4);
        goto label5;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z1 != 0 goto label1;

        $z2 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z3 == 0 goto label2;

        $r5 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r6 = virtualinvoke $r5.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z4 == 0 goto label2;

     label1:
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$22: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z5 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r3);
        return $z5;

     label2:
        $z6 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEOF()>();
        if $z6 == 0 goto label3;

        goto label5;

     label3:
        $z7 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z7 == 0 goto label4;

        $r7 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r8 = virtualinvoke $r7.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z8 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("noframes");
        if $z8 == 0 goto label4;

        $r9 = <org.jsoup.parser.HtmlTreeBuilderState$22: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        $z9 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r9);
        return $z9;

     label4:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label5:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$23 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$23 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$23;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$23 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$23;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        return 1;
    }
}
class org.jsoup.parser.HtmlTreeBuilderState$24 extends java.lang.Object
{
    static final int[] $SwitchMap$org$jsoup$parser$Token$TokenType;

    static void <clinit>()
    {
        org.jsoup.parser.Token$TokenType[] $r0;
        org.jsoup.parser.Token$TokenType $r1, $r7, $r11, $r15, $r19, $r23;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9, $r12, r13, $r16, r17, $r20, r21, $r24, r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3, $r4, $r6, $r10, $r14, $r18, $r22;

        $r0 = staticinvoke <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType> = $r3;

     label0:
        $r4 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Comment>;
        $i1 = virtualinvoke $r1.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r7 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Doctype>;
        $i2 = virtualinvoke $r7.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        $r10 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r11 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType StartTag>;
        $i3 = virtualinvoke $r11.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r10[$i3] = 3;

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        r13 = $r12;

     label9:
        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r15 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EndTag>;
        $i4 = virtualinvoke $r15.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r14[$i4] = 4;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;
        r17 = $r16;

     label12:
        $r18 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r19 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Character>;
        $i5 = virtualinvoke $r19.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r18[$i5] = 5;

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;
        r21 = $r20;

     label15:
        $r22 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r23 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF>;
        $i6 = virtualinvoke $r23.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r22[$i6] = 6;

     label16:
        goto label18;

     label17:
        $r24 := @caughtexception;
        r25 = $r24;

     label18:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
        catch java.lang.NoSuchFieldError from label15 to label16 with label17;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$3 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$3 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$3;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$3 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.nodes.Element r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z14;
        org.jsoup.parser.Token$Comment $r4;
        org.jsoup.parser.Token$StartTag $r5, $r8, $r10, $r15, $r16;
        java.lang.String $r6, $r9, $r13;
        org.jsoup.parser.HtmlTreeBuilderState $r7, $r11;
        org.jsoup.parser.Token$EndTag $r12;
        java.lang.String[] $r14;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$3;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r4);
        goto label7;

     label1:
        $z2 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z2 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label2:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z3 == 0 goto label3;

        $r5 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r6 = virtualinvoke $r5.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z4 == 0 goto label3;

        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$3: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z5 = virtualinvoke $r7.<org.jsoup.parser.HtmlTreeBuilderState: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z5;

     label3:
        $z6 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z6 == 0 goto label4;

        $r8 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r9 = virtualinvoke $r8.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("head");
        if $z7 == 0 goto label4;

        $r10 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r3 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r10);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void setHeadElement(org.jsoup.nodes.Element)>(r3);
        $r11 = <org.jsoup.parser.HtmlTreeBuilderState$3: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r11);
        goto label7;

     label4:
        $z8 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z8 == 0 goto label5;

        $r12 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r13 = virtualinvoke $r12.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $r14 = newarray (java.lang.String)[4];
        $r14[0] = "head";
        $r14[1] = "body";
        $r14[2] = "html";
        $r14[3] = "br";
        $z9 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r13, $r14);
        if $z9 == 0 goto label5;

        $r15 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r15.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("head");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r15);
        $z11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z11;

     label5:
        $z12 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z12 == 0 goto label6;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label6:
        $r16 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r16.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("head");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r16);
        $z14 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z14;

     label7:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$4 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$4 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$4;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$4 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$StartTag r3;
        java.lang.String r4, r21;
        org.jsoup.nodes.Element r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        org.jsoup.parser.Token$Character $r6;
        int[] $r7;
        org.jsoup.parser.Token$TokenType $r8;
        int $i0, $i1;
        org.jsoup.parser.Token$Comment $r9;
        org.jsoup.parser.HtmlTreeBuilderState $r10, $r15, $r19, $r23;
        java.lang.String[] $r11, $r13, $r24;
        org.jsoup.parser.Tokeniser $r17;
        org.jsoup.parser.TokeniserState $r18;
        org.jsoup.parser.Token$EndTag r20;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$4;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z0 == 0 goto label0;

        $r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r6);
        return 1;

     label0:
        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r8 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $i0 = virtualinvoke $r8.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $i1 = $r7[$i0];
        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label13;
            default: goto label16;
        };

     label1:
        $r9 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r9);
        goto label17;

     label2:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label3:
        r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r4 = virtualinvoke r3.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z1 == 0 goto label4;

        $r10 = <org.jsoup.parser.HtmlTreeBuilderState$4: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z2 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z2;

     label4:
        $r11 = newarray (java.lang.String)[5];
        $r11[0] = "base";
        $r11[1] = "basefont";
        $r11[2] = "bgsound";
        $r11[3] = "command";
        $r11[4] = "link";
        $z3 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r11);
        if $z3 == 0 goto label6;

        r5 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r3);
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("base");
        if $z4 == 0 goto label5;

        $z5 = virtualinvoke r5.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>("href");
        if $z5 == 0 goto label5;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void maybeSetBaseUri(org.jsoup.nodes.Element)>(r5);

     label5:
        goto label17;

     label6:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("meta");
        if $z6 == 0 goto label7;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r3);
        goto label17;

     label7:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("title");
        if $z7 == 0 goto label8;

        staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: void access$200(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder)>(r3, r2);
        goto label17;

     label8:
        $r13 = newarray (java.lang.String)[2];
        $r13[0] = "noframes";
        $r13[1] = "style";
        $z8 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r13);
        if $z8 == 0 goto label9;

        staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: void access$300(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder)>(r3, r2);
        goto label17;

     label9:
        $z9 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("noscript");
        if $z9 == 0 goto label10;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r3);
        $r15 = <org.jsoup.parser.HtmlTreeBuilderState$4: org.jsoup.parser.HtmlTreeBuilderState InHeadNoscript>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r15);
        goto label17;

     label10:
        $z10 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("script");
        if $z10 == 0 goto label11;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r3);
        $r17 = r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r18 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke $r17.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r18);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void markInsertionMode()>();
        $r19 = <org.jsoup.parser.HtmlTreeBuilderState$4: org.jsoup.parser.HtmlTreeBuilderState Text>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r19);
        goto label17;

     label11:
        $z11 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("head");
        if $z11 == 0 goto label12;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label12:
        $z12 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$4: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z12;

     label13:
        r20 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r21 = virtualinvoke r20.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z13 = virtualinvoke r21.<java.lang.String: boolean equals(java.lang.Object)>("head");
        if $z13 == 0 goto label14;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        $r23 = <org.jsoup.parser.HtmlTreeBuilderState$4: org.jsoup.parser.HtmlTreeBuilderState AfterHead>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r23);
        goto label17;

     label14:
        $r24 = newarray (java.lang.String)[3];
        $r24[0] = "body";
        $r24[1] = "html";
        $r24[2] = "br";
        $z14 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r21, $r24);
        if $z14 == 0 goto label15;

        $z15 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$4: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z15;

     label15:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label16:
        $z16 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$4: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r1, r2);
        return $z16;

     label17:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$4 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.TreeBuilder r2;
        org.jsoup.parser.Token$EndTag $r3;
        boolean $z1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$4;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.TreeBuilder;
        $r3 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r3.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("head");
        virtualinvoke r2.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);
        $z1 = virtualinvoke r2.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$5 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$5 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$5;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$5 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3, $r9, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        org.jsoup.parser.Token$StartTag $r4, $r10, $r16;
        java.lang.String $r5, $r7, $r11, $r15, $r17;
        org.jsoup.parser.Token$EndTag $r6, $r14;
        java.lang.String[] $r12, $r18;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$5;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z0 == 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        goto label9;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r5 = virtualinvoke $r4.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z2 == 0 goto label1;

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$5: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z3 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r3);
        return $z3;

     label1:
        $z4 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z4 == 0 goto label2;

        $r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r7 = virtualinvoke $r6.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("noscript");
        if $z5 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        $r9 = <org.jsoup.parser.HtmlTreeBuilderState$5: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r9);
        goto label9;

     label2:
        $z6 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z6 != 0 goto label3;

        $z7 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z7 != 0 goto label3;

        $z8 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z8 == 0 goto label4;

        $r10 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r11 = virtualinvoke $r10.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $r12 = newarray (java.lang.String)[6];
        $r12[0] = "basefont";
        $r12[1] = "bgsound";
        $r12[2] = "link";
        $r12[3] = "meta";
        $r12[4] = "noframes";
        $r12[5] = "style";
        $z9 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r11, $r12);
        if $z9 == 0 goto label4;

     label3:
        $r13 = <org.jsoup.parser.HtmlTreeBuilderState$5: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        $z10 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r13);
        return $z10;

     label4:
        $z11 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z11 == 0 goto label5;

        $r14 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r15 = virtualinvoke $r14.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("br");
        if $z12 == 0 goto label5;

        $z13 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$5: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z13;

     label5:
        $z14 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z14 == 0 goto label6;

        $r16 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        $r17 = virtualinvoke $r16.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $r18 = newarray (java.lang.String)[2];
        $r18[0] = "head";
        $r18[1] = "noscript";
        $z15 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r17, $r18);
        if $z15 != 0 goto label7;

     label6:
        $z16 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z16 == 0 goto label8;

     label7:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label8:
        $z17 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$5: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z17;

     label9:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$5 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$EndTag $r3;
        boolean $z1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$5;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r3 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r3.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("noscript");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);
        $z1 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$6 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$6 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$6;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$6 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$StartTag r3;
        java.lang.String r4, $r16;
        org.jsoup.parser.HtmlTreeBuilderState $r5, $r10, $r12, $r14;
        org.jsoup.nodes.Element r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z11, $z13, $z14;
        org.jsoup.parser.Token$Character $r7;
        org.jsoup.parser.Token$Comment $r8;
        java.lang.String[] $r13, $r17;
        org.jsoup.parser.Token$EndTag $r15;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$6;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r1);
        if $z0 == 0 goto label0;

        $r7 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r7);
        goto label12;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r8);
        goto label12;

     label1:
        $z2 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z2 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        goto label12;

     label2:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z3 == 0 goto label9;

        r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r4 = virtualinvoke r3.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z4 == 0 goto label3;

        $r5 = <org.jsoup.parser.HtmlTreeBuilderState$6: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $z5 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r5);
        return $z5;

     label3:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("body");
        if $z6 == 0 goto label4;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r3);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        $r10 = <org.jsoup.parser.HtmlTreeBuilderState$6: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r10);
        goto label8;

     label4:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("frameset");
        if $z7 == 0 goto label5;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r3);
        $r12 = <org.jsoup.parser.HtmlTreeBuilderState$6: org.jsoup.parser.HtmlTreeBuilderState InFrameset>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r12);
        goto label8;

     label5:
        $r13 = newarray (java.lang.String)[9];
        $r13[0] = "base";
        $r13[1] = "basefont";
        $r13[2] = "bgsound";
        $r13[3] = "link";
        $r13[4] = "meta";
        $r13[5] = "noframes";
        $r13[6] = "script";
        $r13[7] = "style";
        $r13[8] = "title";
        $z8 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r4, $r13);
        if $z8 == 0 goto label6;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        r6 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getHeadElement()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void push(org.jsoup.nodes.Element)>(r6);
        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$6: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r14);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean removeFromStack(org.jsoup.nodes.Element)>(r6);
        goto label8;

     label6:
        $z11 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("head");
        if $z11 == 0 goto label7;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label7:
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$6: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);

     label8:
        goto label12;

     label9:
        $z13 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z13 == 0 goto label11;

        $r15 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        $r16 = virtualinvoke $r15.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $r17 = newarray (java.lang.String)[2];
        $r17[0] = "body";
        $r17[1] = "html";
        $z14 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r16, $r17);
        if $z14 == 0 goto label10;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$6: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        goto label12;

     label10:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label11:
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$6: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);

     label12:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$6 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.Token$StartTag $r3;
        boolean $z1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$6;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r3.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("body");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(1);
        $z1 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$7 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$7 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$7;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$7 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        int[] $r3;
        org.jsoup.parser.Token$Character r4, $r132;
        java.lang.String r5, $r17, $r18, $r25, $r32, $r38, $r43, $r56, $r69, $r71, $r79, $r82, $r83, $r112, $r124, $r130, r131, $r139, $r161, $r166, r175, $r180, $r183, $r186, $r188, $r191, $r195, $r199, $r204, $r208, $r210, $r213, $r220, $r231;
        org.jsoup.nodes.Element r6, r10, r12, r13, $r31, r34, $r42, r45, $r46, $r55, $r63, r65, r68, r78, $r93, r95, r96, r98, r100, r111, $r118, r122, $r160, $r165, $r179, r181, $r182, $r185, $r187, $r190, $r194, r198, $r200, r201, r205, r206, $r207, $r211, $r215, $r216, $r218, r221, $r230;
        java.util.Iterator r7, r36, r136;
        org.jsoup.nodes.Attribute r8, r9, r138;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z18, $z19, $z21, $z22, $z23, $z25, $z26, $z28, $z29, $z31, $z32, $z33, $z35, $z36, $z38, $z39, $z40, $z42, $z43, $z45, $z46, $z49, $z52, $z53, $z54, $z56, $z57, $z58, $z60, $z61, $z62, $z63, $z64, $z65, $z67, $z68, $z69, $z71, $z74, $z76, $z77, $z82, $z83, $z84, $z86, $z87, $z88, $z89, $z90, $z91, $z92, $z93, $z94, $z95, $z97, $z98, $z99, $z100, $z101, $z102, $z103, $z104, $z105, z106, $z107, $z108, $z109, $z110, $z111, $z112, $z113, $z115, $z116, $z118, $z119, $z120, $z121, $z122, $z123, $z124, $z125, $z126, $z127, $z128, $z129, $z130, $z131, $z132, $z133, $z134, $z135, $z136, $z137, $z139, $z141, $z142, $z143, $z144, $z145, $z147;
        org.jsoup.helper.DescendableLinkedList r11, $r21, r29, r40, r66, r76;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, i14, i15, $i16, $i17, $i18;
        org.jsoup.nodes.Node[] r14, $r224, r226;
        org.jsoup.nodes.Node r15;
        org.jsoup.parser.Token$TokenType $r16;
        org.jsoup.parser.Token$Comment $r19;
        org.jsoup.parser.Token$StartTag r20, $r120, $r126, $r127, $r141, $r143, $r184, $r232;
        java.lang.Object $r22, $r24, $r30, $r33, $r37, $r41, $r44, $r67, $r77, $r137, $r202, $r203;
        org.jsoup.nodes.Attributes $r23, $r26, $r35, $r39, $r121, $r123, $r128, $r129, $r133, r134, $r135;
        java.lang.String[] $r27, $r50, $r53, $r57, $r60, $r72, $r75, $r80, $r84, $r97, $r101, $r109, $r113, $r140, $r159, $r164, $r172, $r178, $r189, $r192, $r193, $r196, $r197, $r214, $r229;
        org.jsoup.parser.HtmlTreeBuilderState $r28, $r49, $r108, $r148, r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r176;
        org.jsoup.parser.Token$EndTag $r51, $r54, $r61, $r64, $r70, $r73, $r81, $r85, $r87, $r91, $r94, $r99, $r106, $r115, $r142, $r144, $r149, $r162, r174, $r177;
        org.jsoup.parser.Tokeniser $r89, $r119, $r146, $r169, $r171;
        org.jsoup.parser.TokeniserState $r90, $r147;
        org.jsoup.nodes.Document $r103;
        org.jsoup.nodes.Document$QuirksMode $r104, $r105;
        org.jsoup.parser.Tag $r209, $r219;
        java.util.List $r222, $r223;
        java.lang.Object[] $r225;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$7;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r16 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $i4 = virtualinvoke $r16.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $i5 = $r3[$i4];
        tableswitch($i5)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label88;
            case 5: goto label0;
            case 6: goto label143;
            default: goto label143;
        };

     label0:
        r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        $r17 = virtualinvoke r4.<org.jsoup.parser.Token$Character: java.lang.String getData()>();
        $r18 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: java.lang.String access$400()>();
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);
        if $z1 == 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label1:
        $z2 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r4);
        if $z2 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>(r4);
        goto label143;

     label2:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>(r4);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        goto label143;

     label3:
        $r19 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r19);
        goto label143;

     label4:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label5:
        r20 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r5 = virtualinvoke r20.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z3 == 0 goto label9;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r21 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList getStack()>();
        $r22 = virtualinvoke $r21.<org.jsoup.helper.DescendableLinkedList: java.lang.Object getFirst()>();
        r6 = (org.jsoup.nodes.Element) $r22;
        $r23 = virtualinvoke r20.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes getAttributes()>();
        r7 = virtualinvoke $r23.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label6:
        $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label8;

        $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (org.jsoup.nodes.Attribute) $r24;
        $r25 = virtualinvoke r8.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        $z5 = virtualinvoke r6.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r25);
        if $z5 != 0 goto label7;

        $r26 = virtualinvoke r6.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        virtualinvoke $r26.<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>(r8);

     label7:
        goto label6;

     label8:
        goto label143;

     label9:
        $r27 = newarray (java.lang.String)[10];
        $r27[0] = "base";
        $r27[1] = "basefont";
        $r27[2] = "bgsound";
        $r27[3] = "command";
        $r27[4] = "link";
        $r27[5] = "meta";
        $r27[6] = "noframes";
        $r27[7] = "script";
        $r27[8] = "style";
        $r27[9] = "title";
        $z6 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r27);
        if $z6 == 0 goto label10;

        $r28 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        $z7 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r28);
        return $z7;

     label10:
        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("body");
        if $z8 == 0 goto label16;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        r29 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList getStack()>();
        $i6 = virtualinvoke r29.<java.util.LinkedList: int size()>();
        if $i6 == 1 goto label11;

        $i7 = virtualinvoke r29.<java.util.LinkedList: int size()>();
        if $i7 <= 2 goto label12;

        $r30 = virtualinvoke r29.<java.util.LinkedList: java.lang.Object get(int)>(1);
        $r31 = (org.jsoup.nodes.Element) $r30;
        $r32 = virtualinvoke $r31.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z9 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("body");
        if $z9 != 0 goto label12;

     label11:
        return 0;

     label12:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        $r33 = virtualinvoke r29.<java.util.LinkedList: java.lang.Object get(int)>(1);
        r34 = (org.jsoup.nodes.Element) $r33;
        $r35 = virtualinvoke r20.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes getAttributes()>();
        r36 = virtualinvoke $r35.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label13:
        $z10 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();
        if $z10 == 0 goto label15;

        $r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();
        r9 = (org.jsoup.nodes.Attribute) $r37;
        $r38 = virtualinvoke r9.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        $z11 = virtualinvoke r34.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r38);
        if $z11 != 0 goto label14;

        $r39 = virtualinvoke r34.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        virtualinvoke $r39.<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>(r9);

     label14:
        goto label13;

     label15:
        goto label143;

     label16:
        $z12 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("frameset");
        if $z12 == 0 goto label22;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        r40 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList getStack()>();
        $i8 = virtualinvoke r40.<java.util.LinkedList: int size()>();
        if $i8 == 1 goto label17;

        $i9 = virtualinvoke r40.<java.util.LinkedList: int size()>();
        if $i9 <= 2 goto label18;

        $r41 = virtualinvoke r40.<java.util.LinkedList: java.lang.Object get(int)>(1);
        $r42 = (org.jsoup.nodes.Element) $r41;
        $r43 = virtualinvoke $r42.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z13 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("body");
        if $z13 != 0 goto label18;

     label17:
        return 0;

     label18:
        $z14 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean framesetOk()>();
        if $z14 != 0 goto label19;

        return 0;

     label19:
        $r44 = virtualinvoke r40.<java.util.LinkedList: java.lang.Object get(int)>(1);
        r45 = (org.jsoup.nodes.Element) $r44;
        $r46 = virtualinvoke r45.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if $r46 == null goto label20;

        virtualinvoke r45.<org.jsoup.nodes.Element: void remove()>();

     label20:
        $i10 = virtualinvoke r40.<java.util.LinkedList: int size()>();
        if $i10 <= 1 goto label21;

        virtualinvoke r40.<java.util.LinkedList: java.lang.Object removeLast()>();
        goto label20;

     label21:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        $r49 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InFrameset>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r49);
        goto label143;

     label22:
        $r50 = newarray (java.lang.String)[22];
        $r50[0] = "address";
        $r50[1] = "article";
        $r50[2] = "aside";
        $r50[3] = "blockquote";
        $r50[4] = "center";
        $r50[5] = "details";
        $r50[6] = "dir";
        $r50[7] = "div";
        $r50[8] = "dl";
        $r50[9] = "fieldset";
        $r50[10] = "figcaption";
        $r50[11] = "figure";
        $r50[12] = "footer";
        $r50[13] = "header";
        $r50[14] = "hgroup";
        $r50[15] = "menu";
        $r50[16] = "nav";
        $r50[17] = "ol";
        $r50[18] = "p";
        $r50[19] = "section";
        $r50[20] = "summary";
        $r50[21] = "ul";
        $z15 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r50);
        if $z15 == 0 goto label24;

        $z16 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z16 == 0 goto label23;

        $r51 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r51.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r51);

     label23:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        goto label143;

     label24:
        $r53 = newarray (java.lang.String)[6];
        $r53[0] = "h1";
        $r53[1] = "h2";
        $r53[2] = "h3";
        $r53[3] = "h4";
        $r53[4] = "h5";
        $r53[5] = "h6";
        $z18 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r53);
        if $z18 == 0 goto label27;

        $z19 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z19 == 0 goto label25;

        $r54 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r54.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r54);

     label25:
        $r55 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r56 = virtualinvoke $r55.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r57 = newarray (java.lang.String)[6];
        $r57[0] = "h1";
        $r57[1] = "h2";
        $r57[2] = "h3";
        $r57[3] = "h4";
        $r57[4] = "h5";
        $r57[5] = "h6";
        $z21 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r56, $r57);
        if $z21 == 0 goto label26;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();

     label26:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        goto label143;

     label27:
        $r60 = newarray (java.lang.String)[2];
        $r60[0] = "pre";
        $r60[1] = "listing";
        $z22 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r60);
        if $z22 == 0 goto label29;

        $z23 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z23 == 0 goto label28;

        $r61 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r61.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r61);

     label28:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        goto label143;

     label29:
        $z25 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("form");
        if $z25 == 0 goto label32;

        $r63 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFormElement()>();
        if $r63 == null goto label30;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label30:
        $z26 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z26 == 0 goto label31;

        $r64 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r64.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r64);

     label31:
        r65 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void setFormElement(org.jsoup.nodes.Element)>(r65);
        goto label143;

     label32:
        $z28 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("li");
        if $z28 == 0 goto label38;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        r66 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList getStack()>();
        $i11 = virtualinvoke r66.<java.util.LinkedList: int size()>();
        i12 = $i11 - 1;

     label33:
        if i12 <= 0 goto label36;

        $r67 = virtualinvoke r66.<java.util.LinkedList: java.lang.Object get(int)>(i12);
        r68 = (org.jsoup.nodes.Element) $r67;
        $r69 = virtualinvoke r68.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z29 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>("li");
        if $z29 == 0 goto label34;

        $r70 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r70.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("li");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r70);
        goto label36;

     label34:
        $z31 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean isSpecial(org.jsoup.nodes.Element)>(r68);
        if $z31 == 0 goto label35;

        $r71 = virtualinvoke r68.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r72 = newarray (java.lang.String)[3];
        $r72[0] = "address";
        $r72[1] = "div";
        $r72[2] = "p";
        $z32 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r71, $r72);
        if $z32 != 0 goto label35;

        goto label36;

     label35:
        i12 = i12 + -1;
        goto label33;

     label36:
        $z33 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z33 == 0 goto label37;

        $r73 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r73.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r73);

     label37:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        goto label143;

     label38:
        $r75 = newarray (java.lang.String)[2];
        $r75[0] = "dd";
        $r75[1] = "dt";
        $z35 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r75);
        if $z35 == 0 goto label44;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        r76 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList getStack()>();
        $i13 = virtualinvoke r76.<java.util.LinkedList: int size()>();
        i14 = $i13 - 1;

     label39:
        if i14 <= 0 goto label42;

        $r77 = virtualinvoke r76.<java.util.LinkedList: java.lang.Object get(int)>(i14);
        r78 = (org.jsoup.nodes.Element) $r77;
        $r79 = virtualinvoke r78.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r80 = newarray (java.lang.String)[2];
        $r80[0] = "dd";
        $r80[1] = "dt";
        $z36 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r79, $r80);
        if $z36 == 0 goto label40;

        $r81 = new org.jsoup.parser.Token$EndTag;
        $r82 = virtualinvoke r78.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        specialinvoke $r81.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>($r82);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r81);
        goto label42;

     label40:
        $z38 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean isSpecial(org.jsoup.nodes.Element)>(r78);
        if $z38 == 0 goto label41;

        $r83 = virtualinvoke r78.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r84 = newarray (java.lang.String)[3];
        $r84[0] = "address";
        $r84[1] = "div";
        $r84[2] = "p";
        $z39 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r83, $r84);
        if $z39 != 0 goto label41;

        goto label42;

     label41:
        i14 = i14 + -1;
        goto label39;

     label42:
        $z40 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z40 == 0 goto label43;

        $r85 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r85.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r85);

     label43:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        goto label143;

     label44:
        $z42 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("plaintext");
        if $z42 == 0 goto label46;

        $z43 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z43 == 0 goto label45;

        $r87 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r87.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r87);

     label45:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        $r89 = r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r90 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState PLAINTEXT>;
        virtualinvoke $r89.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r90);
        goto label143;

     label46:
        $z45 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("button");
        if $z45 == 0 goto label48;

        $z46 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("button");
        if $z46 == 0 goto label47;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r91 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r91.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("button");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r91);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r20);
        goto label143;

     label47:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        goto label143;

     label48:
        $z49 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("a");
        if $z49 == 0 goto label50;

        $r93 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getActiveFormattingElement(java.lang.String)>("a");
        if $r93 == null goto label49;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r94 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r94.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("a");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r94);
        r95 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFromStack(java.lang.String)>("a");
        if r95 == null goto label49;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void removeFromActiveFormattingElements(org.jsoup.nodes.Element)>(r95);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean removeFromStack(org.jsoup.nodes.Element)>(r95);

     label49:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        r96 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void pushActiveFormattingElements(org.jsoup.nodes.Element)>(r96);
        goto label143;

     label50:
        $r97 = newarray (java.lang.String)[12];
        $r97[0] = "b";
        $r97[1] = "big";
        $r97[2] = "code";
        $r97[3] = "em";
        $r97[4] = "font";
        $r97[5] = "i";
        $r97[6] = "s";
        $r97[7] = "small";
        $r97[8] = "strike";
        $r97[9] = "strong";
        $r97[10] = "tt";
        $r97[11] = "u";
        $z52 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r97);
        if $z52 == 0 goto label51;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        r98 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void pushActiveFormattingElements(org.jsoup.nodes.Element)>(r98);
        goto label143;

     label51:
        $z53 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("nobr");
        if $z53 == 0 goto label53;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        $z54 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>("nobr");
        if $z54 == 0 goto label52;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r99 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r99.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("nobr");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r99);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();

     label52:
        r100 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void pushActiveFormattingElements(org.jsoup.nodes.Element)>(r100);
        goto label143;

     label53:
        $r101 = newarray (java.lang.String)[3];
        $r101[0] = "applet";
        $r101[1] = "marquee";
        $r101[2] = "object";
        $z56 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r101);
        if $z56 == 0 goto label54;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insertMarkerToFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        goto label143;

     label54:
        $z57 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("table");
        if $z57 == 0 goto label56;

        $r103 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document getDocument()>();
        $r104 = virtualinvoke $r103.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$QuirksMode quirksMode()>();
        $r105 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode quirks>;
        if $r104 == $r105 goto label55;

        $z58 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z58 == 0 goto label55;

        $r106 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r106.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r106);

     label55:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        $r108 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r108);
        goto label143;

     label56:
        $r109 = newarray (java.lang.String)[6];
        $r109[0] = "area";
        $r109[1] = "br";
        $r109[2] = "embed";
        $r109[3] = "img";
        $r109[4] = "keygen";
        $r109[5] = "wbr";
        $z60 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r109);
        if $z60 == 0 goto label57;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        goto label143;

     label57:
        $z61 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("input");
        if $z61 == 0 goto label59;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        r111 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r20);
        $r112 = virtualinvoke r111.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("type");
        $z62 = virtualinvoke $r112.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hidden");
        if $z62 != 0 goto label58;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);

     label58:
        goto label143;

     label59:
        $r113 = newarray (java.lang.String)[3];
        $r113[0] = "param";
        $r113[1] = "source";
        $r113[2] = "track";
        $z63 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r113);
        if $z63 == 0 goto label60;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r20);
        goto label143;

     label60:
        $z64 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("hr");
        if $z64 == 0 goto label62;

        $z65 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z65 == 0 goto label61;

        $r115 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r115.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r115);

     label61:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        goto label143;

     label62:
        $z67 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("image");
        if $z67 == 0 goto label63;

        virtualinvoke r20.<org.jsoup.parser.Token$StartTag: org.jsoup.parser.Token$Tag name(java.lang.String)>("img");
        $z68 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r20);
        return $z68;

     label63:
        $z69 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("isindex");
        if $z69 == 0 goto label71;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r118 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFormElement()>();
        if $r118 == null goto label64;

        return 0;

     label64:
        $r119 = r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        virtualinvoke $r119.<org.jsoup.parser.Tokeniser: void acknowledgeSelfClosingFlag()>();
        $r120 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r120.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("form");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r120);
        $r121 = r20.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        $z71 = virtualinvoke $r121.<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>("action");
        if $z71 == 0 goto label65;

        r122 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFormElement()>();
        $r123 = r20.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        $r124 = virtualinvoke $r123.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("action");
        virtualinvoke r122.<org.jsoup.nodes.Element: org.jsoup.nodes.Element attr(java.lang.String,java.lang.String)>("action", $r124);

     label65:
        $r126 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r126.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("hr");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r126);
        $r127 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r127.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("label");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r127);
        $r128 = r20.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        $z74 = virtualinvoke $r128.<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>("prompt");
        if $z74 == 0 goto label66;

        $r129 = r20.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        $r130 = virtualinvoke $r129.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("prompt");
        goto label67;

     label66:
        $r130 = "This is a searchable index. Enter search keywords: ";

     label67:
        r131 = $r130;
        $r132 = new org.jsoup.parser.Token$Character;
        specialinvoke $r132.<org.jsoup.parser.Token$Character: void <init>(java.lang.String)>(r131);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r132);
        $r133 = new org.jsoup.nodes.Attributes;
        specialinvoke $r133.<org.jsoup.nodes.Attributes: void <init>()>();
        r134 = $r133;
        $r135 = r20.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        r136 = virtualinvoke $r135.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label68:
        $z76 = interfaceinvoke r136.<java.util.Iterator: boolean hasNext()>();
        if $z76 == 0 goto label70;

        $r137 = interfaceinvoke r136.<java.util.Iterator: java.lang.Object next()>();
        r138 = (org.jsoup.nodes.Attribute) $r137;
        $r139 = virtualinvoke r138.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        $r140 = newarray (java.lang.String)[3];
        $r140[0] = "name";
        $r140[1] = "action";
        $r140[2] = "prompt";
        $z77 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r139, $r140);
        if $z77 != 0 goto label69;

        virtualinvoke r134.<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>(r138);

     label69:
        goto label68;

     label70:
        virtualinvoke r134.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("name", "isindex");
        $r141 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r141.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>("input", r134);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r141);
        $r142 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r142.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("label");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r142);
        $r143 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r143.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("hr");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r143);
        $r144 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r144.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("form");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r144);
        goto label143;

     label71:
        $z82 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("textarea");
        if $z82 == 0 goto label72;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        $r146 = r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r147 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rcdata>;
        virtualinvoke $r146.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r147);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void markInsertionMode()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        $r148 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState Text>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r148);
        goto label143;

     label72:
        $z83 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("xmp");
        if $z83 == 0 goto label74;

        $z84 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>("p");
        if $z84 == 0 goto label73;

        $r149 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r149.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("p");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r149);

     label73:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: void access$300(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder)>(r20, r2);
        goto label143;

     label74:
        $z86 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("iframe");
        if $z86 == 0 goto label75;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: void access$300(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder)>(r20, r2);
        goto label143;

     label75:
        $z87 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("noembed");
        if $z87 == 0 goto label76;

        staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: void access$300(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder)>(r20, r2);
        goto label143;

     label76:
        $z88 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("select");
        if $z88 == 0 goto label80;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void framesetOk(boolean)>(0);
        r151 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState state()>();
        $r152 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        $z89 = virtualinvoke r151.<org.jsoup.parser.HtmlTreeBuilderState: boolean equals(java.lang.Object)>($r152);
        if $z89 != 0 goto label77;

        $r153 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InCaption>;
        $z90 = virtualinvoke r151.<org.jsoup.parser.HtmlTreeBuilderState: boolean equals(java.lang.Object)>($r153);
        if $z90 != 0 goto label77;

        $r154 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InTableBody>;
        $z91 = virtualinvoke r151.<org.jsoup.parser.HtmlTreeBuilderState: boolean equals(java.lang.Object)>($r154);
        if $z91 != 0 goto label77;

        $r155 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InRow>;
        $z92 = virtualinvoke r151.<org.jsoup.parser.HtmlTreeBuilderState: boolean equals(java.lang.Object)>($r155);
        if $z92 != 0 goto label77;

        $r156 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InCell>;
        $z93 = virtualinvoke r151.<org.jsoup.parser.HtmlTreeBuilderState: boolean equals(java.lang.Object)>($r156);
        if $z93 == 0 goto label78;

     label77:
        $r157 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InSelectInTable>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r157);
        goto label79;

     label78:
        $r158 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState InSelect>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r158);

     label79:
        goto label143;

     label80:
        $r159 = newarray (java.lang.String)[1];
        $r159[0] = "option";
        $z94 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>("optgroup", $r159);
        if $z94 == 0 goto label82;

        $r160 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r161 = virtualinvoke $r160.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z95 = virtualinvoke $r161.<java.lang.String: boolean equals(java.lang.Object)>("option");
        if $z95 == 0 goto label81;

        $r162 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r162.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("option");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r162);

     label81:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        goto label143;

     label82:
        $r164 = newarray (java.lang.String)[1];
        $r164[0] = "rt";
        $z97 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>("rp", $r164);
        if $z97 == 0 goto label84;

        $z98 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>("ruby");
        if $z98 == 0 goto label143;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags()>();
        $r165 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r166 = virtualinvoke $r165.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z99 = virtualinvoke $r166.<java.lang.String: boolean equals(java.lang.Object)>("ruby");
        if $z99 != 0 goto label83;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToBefore(java.lang.String)>("ruby");

     label83:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        goto label143;

     label84:
        $z100 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("math");
        if $z100 == 0 goto label85;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        $r169 = r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        virtualinvoke $r169.<org.jsoup.parser.Tokeniser: void acknowledgeSelfClosingFlag()>();
        goto label143;

     label85:
        $z101 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("svg");
        if $z101 == 0 goto label86;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        $r171 = r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        virtualinvoke $r171.<org.jsoup.parser.Tokeniser: void acknowledgeSelfClosingFlag()>();
        goto label143;

     label86:
        $r172 = newarray (java.lang.String)[11];
        $r172[0] = "caption";
        $r172[1] = "col";
        $r172[2] = "colgroup";
        $r172[3] = "frame";
        $r172[4] = "head";
        $r172[5] = "tbody";
        $r172[6] = "td";
        $r172[7] = "tfoot";
        $r172[8] = "th";
        $r172[9] = "thead";
        $r172[10] = "tr";
        $z102 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r172);
        if $z102 == 0 goto label87;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label87:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void reconstructFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r20);
        goto label143;

     label88:
        r174 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r175 = virtualinvoke r174.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z103 = virtualinvoke r175.<java.lang.String: boolean equals(java.lang.Object)>("body");
        if $z103 == 0 goto label90;

        $z104 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>("body");
        if $z104 != 0 goto label89;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label89:
        $r176 = <org.jsoup.parser.HtmlTreeBuilderState$7: org.jsoup.parser.HtmlTreeBuilderState AfterBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r176);
        goto label143;

     label90:
        $z105 = virtualinvoke r175.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z105 == 0 goto label92;

        $r177 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r177.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("body");
        z106 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r177);
        if z106 == 0 goto label91;

        $z107 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r174);
        return $z107;

     label91:
        goto label143;

     label92:
        $r178 = newarray (java.lang.String)[24];
        $r178[0] = "address";
        $r178[1] = "article";
        $r178[2] = "aside";
        $r178[3] = "blockquote";
        $r178[4] = "button";
        $r178[5] = "center";
        $r178[6] = "details";
        $r178[7] = "dir";
        $r178[8] = "div";
        $r178[9] = "dl";
        $r178[10] = "fieldset";
        $r178[11] = "figcaption";
        $r178[12] = "figure";
        $r178[13] = "footer";
        $r178[14] = "header";
        $r178[15] = "hgroup";
        $r178[16] = "listing";
        $r178[17] = "menu";
        $r178[18] = "nav";
        $r178[19] = "ol";
        $r178[20] = "pre";
        $r178[21] = "section";
        $r178[22] = "summary";
        $r178[23] = "ul";
        $z108 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r175, $r178);
        if $z108 == 0 goto label95;

        $z109 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>(r175);
        if $z109 != 0 goto label93;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label93:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags()>();
        $r179 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r180 = virtualinvoke $r179.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z110 = virtualinvoke $r180.<java.lang.String: boolean equals(java.lang.Object)>(r175);
        if $z110 != 0 goto label94;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label94:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>(r175);
        goto label143;

     label95:
        $z111 = virtualinvoke r175.<java.lang.String: boolean equals(java.lang.Object)>("form");
        if $z111 == 0 goto label99;

        r181 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFormElement()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void setFormElement(org.jsoup.nodes.Element)>(null);
        if r181 == null goto label96;

        $z112 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>(r175);
        if $z112 != 0 goto label97;

     label96:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label97:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags()>();
        $r182 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r183 = virtualinvoke $r182.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z113 = virtualinvoke $r183.<java.lang.String: boolean equals(java.lang.Object)>(r175);
        if $z113 != 0 goto label98;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label98:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean removeFromStack(org.jsoup.nodes.Element)>(r181);
        goto label143;

     label99:
        $z115 = virtualinvoke r175.<java.lang.String: boolean equals(java.lang.Object)>("p");
        if $z115 == 0 goto label102;

        $z116 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inButtonScope(java.lang.String)>(r175);
        if $z116 != 0 goto label100;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r184 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r184.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>(r175);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r184);
        $z118 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r174);
        return $z118;

     label100:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags(java.lang.String)>(r175);
        $r185 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r186 = virtualinvoke $r185.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z119 = virtualinvoke $r186.<java.lang.String: boolean equals(java.lang.Object)>(r175);
        if $z119 != 0 goto label101;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label101:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>(r175);
        goto label143;

     label102:
        $z120 = virtualinvoke r175.<java.lang.String: boolean equals(java.lang.Object)>("li");
        if $z120 == 0 goto label105;

        $z121 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inListItemScope(java.lang.String)>(r175);
        if $z121 != 0 goto label103;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label103:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags(java.lang.String)>(r175);
        $r187 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r188 = virtualinvoke $r187.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z122 = virtualinvoke $r188.<java.lang.String: boolean equals(java.lang.Object)>(r175);
        if $z122 != 0 goto label104;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label104:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>(r175);
        goto label143;

     label105:
        $r189 = newarray (java.lang.String)[2];
        $r189[0] = "dd";
        $r189[1] = "dt";
        $z123 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r175, $r189);
        if $z123 == 0 goto label108;

        $z124 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>(r175);
        if $z124 != 0 goto label106;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label106:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags(java.lang.String)>(r175);
        $r190 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r191 = virtualinvoke $r190.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z125 = virtualinvoke $r191.<java.lang.String: boolean equals(java.lang.Object)>(r175);
        if $z125 != 0 goto label107;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label107:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>(r175);
        goto label143;

     label108:
        $r192 = newarray (java.lang.String)[6];
        $r192[0] = "h1";
        $r192[1] = "h2";
        $r192[2] = "h3";
        $r192[3] = "h4";
        $r192[4] = "h5";
        $r192[5] = "h6";
        $z126 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r175, $r192);
        if $z126 == 0 goto label111;

        $r193 = newarray (java.lang.String)[6];
        $r193[0] = "h1";
        $r193[1] = "h2";
        $r193[2] = "h3";
        $r193[3] = "h4";
        $r193[4] = "h5";
        $r193[5] = "h6";
        $z127 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String[])>($r193);
        if $z127 != 0 goto label109;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label109:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags(java.lang.String)>(r175);
        $r194 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r195 = virtualinvoke $r194.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z128 = virtualinvoke $r195.<java.lang.String: boolean equals(java.lang.Object)>(r175);
        if $z128 != 0 goto label110;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label110:
        $r196 = newarray (java.lang.String)[6];
        $r196[0] = "h1";
        $r196[1] = "h2";
        $r196[2] = "h3";
        $r196[3] = "h4";
        $r196[4] = "h5";
        $r196[5] = "h6";
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String[])>($r196);
        goto label143;

     label111:
        $z129 = virtualinvoke r175.<java.lang.String: boolean equals(java.lang.Object)>("sarcasm");
        if $z129 == 0 goto label112;

        $z130 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$7: boolean anyOtherEndTag(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z130;

     label112:
        $r197 = newarray (java.lang.String)[14];
        $r197[0] = "a";
        $r197[1] = "b";
        $r197[2] = "big";
        $r197[3] = "code";
        $r197[4] = "em";
        $r197[5] = "font";
        $r197[6] = "i";
        $r197[7] = "nobr";
        $r197[8] = "s";
        $r197[9] = "small";
        $r197[10] = "strike";
        $r197[11] = "strong";
        $r197[12] = "tt";
        $r197[13] = "u";
        $z131 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r175, $r197);
        if $z131 == 0 goto label138;

        i15 = 0;

     label113:
        if i15 >= 8 goto label137;

        r198 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getActiveFormattingElement(java.lang.String)>(r175);
        if r198 != null goto label114;

        $z132 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$7: boolean anyOtherEndTag(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z132;

     label114:
        $z133 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean onStack(org.jsoup.nodes.Element)>(r198);
        if $z133 != 0 goto label115;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void removeFromActiveFormattingElements(org.jsoup.nodes.Element)>(r198);
        return 1;

     label115:
        $r199 = virtualinvoke r198.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z134 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>($r199);
        if $z134 != 0 goto label116;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label116:
        $r200 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        if $r200 == r198 goto label117;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label117:
        r201 = null;
        r10 = null;
        z0 = 0;
        r11 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList getStack()>();
        i0 = 0;

     label118:
        $i16 = virtualinvoke r11.<java.util.LinkedList: int size()>();
        if i0 >= $i16 goto label121;

        $r202 = virtualinvoke r11.<java.util.LinkedList: java.lang.Object get(int)>(i0);
        r12 = (org.jsoup.nodes.Element) $r202;
        if r12 != r198 goto label119;

        $i17 = i0 - 1;
        $r203 = virtualinvoke r11.<java.util.LinkedList: java.lang.Object get(int)>($i17);
        r10 = (org.jsoup.nodes.Element) $r203;
        z0 = 1;
        goto label120;

     label119:
        if z0 == 0 goto label120;

        $z135 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean isSpecial(org.jsoup.nodes.Element)>(r12);
        if $z135 == 0 goto label120;

        r201 = r12;
        goto label121;

     label120:
        i0 = i0 + 1;
        goto label118;

     label121:
        if r201 != null goto label122;

        $r204 = virtualinvoke r198.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>($r204);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void removeFromActiveFormattingElements(org.jsoup.nodes.Element)>(r198);
        return 1;

     label122:
        r205 = r201;
        r206 = r201;
        i1 = 0;

     label123:
        if i1 >= 3 goto label130;

        $z136 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean onStack(org.jsoup.nodes.Element)>(r205);
        if $z136 == 0 goto label124;

        r205 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element)>(r205);

     label124:
        $z137 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean isInActiveFormattingElements(org.jsoup.nodes.Element)>(r205);
        if $z137 != 0 goto label125;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean removeFromStack(org.jsoup.nodes.Element)>(r205);
        goto label129;

     label125:
        if r205 != r198 goto label126;

        goto label130;

     label126:
        $r207 = new org.jsoup.nodes.Element;
        $r208 = virtualinvoke r205.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r209 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>($r208);
        $r210 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String getBaseUri()>();
        specialinvoke $r207.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r209, $r210);
        r13 = $r207;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void replaceActiveFormattingElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r205, r13);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void replaceOnStack(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r205, r13);
        r205 = r13;
        if r206 != r201 goto label127;

     label127:
        $r211 = virtualinvoke r206.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if $r211 == null goto label128;

        virtualinvoke r206.<org.jsoup.nodes.Element: void remove()>();

     label128:
        virtualinvoke r205.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r206);
        r206 = r205;

     label129:
        i1 = i1 + 1;
        goto label123;

     label130:
        $r213 = virtualinvoke r10.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r214 = newarray (java.lang.String)[5];
        $r214[0] = "table";
        $r214[1] = "tbody";
        $r214[2] = "tfoot";
        $r214[3] = "thead";
        $r214[4] = "tr";
        $z139 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r213, $r214);
        if $z139 == 0 goto label132;

        $r215 = virtualinvoke r206.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if $r215 == null goto label131;

        virtualinvoke r206.<org.jsoup.nodes.Element: void remove()>();

     label131:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insertInFosterParent(org.jsoup.nodes.Node)>(r206);
        goto label134;

     label132:
        $r216 = virtualinvoke r206.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if $r216 == null goto label133;

        virtualinvoke r206.<org.jsoup.nodes.Element: void remove()>();

     label133:
        virtualinvoke r10.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r206);

     label134:
        $r218 = new org.jsoup.nodes.Element;
        $r219 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>(r175);
        $r220 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String getBaseUri()>();
        specialinvoke $r218.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r219, $r220);
        r221 = $r218;
        $r222 = virtualinvoke r201.<org.jsoup.nodes.Element: java.util.List childNodes()>();
        $r223 = virtualinvoke r201.<org.jsoup.nodes.Element: java.util.List childNodes()>();
        $i18 = interfaceinvoke $r223.<java.util.List: int size()>();
        $r224 = newarray (org.jsoup.nodes.Node)[$i18];
        $r225 = interfaceinvoke $r222.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r224);
        r226 = (org.jsoup.nodes.Node[]) $r225;
        r14 = r226;
        i2 = lengthof r14;
        i3 = 0;

     label135:
        if i3 >= i2 goto label136;

        r15 = r14[i3];
        virtualinvoke r221.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r15);
        i3 = i3 + 1;
        goto label135;

     label136:
        virtualinvoke r201.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r221);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void removeFromActiveFormattingElements(org.jsoup.nodes.Element)>(r198);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean removeFromStack(org.jsoup.nodes.Element)>(r198);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insertOnStackAfter(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r201, r221);
        i15 = i15 + 1;
        goto label113;

     label137:
        goto label143;

     label138:
        $r229 = newarray (java.lang.String)[3];
        $r229[0] = "applet";
        $r229[1] = "marquee";
        $r229[2] = "object";
        $z141 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r175, $r229);
        if $z141 == 0 goto label141;

        $z142 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>("name");
        if $z142 != 0 goto label143;

        $z143 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>(r175);
        if $z143 != 0 goto label139;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label139:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags()>();
        $r230 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r231 = virtualinvoke $r230.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z144 = virtualinvoke $r231.<java.lang.String: boolean equals(java.lang.Object)>(r175);
        if $z144 != 0 goto label140;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label140:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>(r175);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearFormattingElementsToLastMarker()>();
        goto label143;

     label141:
        $z145 = virtualinvoke r175.<java.lang.String: boolean equals(java.lang.Object)>("br");
        if $z145 == 0 goto label142;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r232 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r232.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("br");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r232);
        return 0;

     label142:
        $z147 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$7: boolean anyOtherEndTag(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z147;

     label143:
        return 1;
    }

    boolean anyOtherEndTag(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$7 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        java.lang.String r3, $r9, $r11;
        org.jsoup.helper.DescendableLinkedList r4;
        java.util.Iterator r5;
        org.jsoup.nodes.Element r6, $r10;
        org.jsoup.parser.Token$EndTag $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$7;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $r7 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r3 = virtualinvoke $r7.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        r4 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.helper.DescendableLinkedList getStack()>();
        r5 = virtualinvoke r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (org.jsoup.nodes.Element) $r8;
        $r9 = virtualinvoke r6.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z1 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void generateImpliedEndTags(java.lang.String)>(r3);
        $r10 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r11 = virtualinvoke $r10.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r11);
        if $z2 != 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label1:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>(r3);
        goto label4;

     label2:
        $z3 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean isSpecial(org.jsoup.nodes.Element)>(r6);
        if $z3 == 0 goto label3;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label3:
        goto label0;

     label4:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$8 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$8 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$8;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$8 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        boolean $z0, $z1, $z2, $z3;
        org.jsoup.parser.Token$Character $r3;
        org.jsoup.parser.HtmlTreeBuilderState $r5, $r7;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$8;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isCharacter()>();
        if $z0 == 0 goto label0;

        $r3 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r3);
        goto label2;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEOF()>();
        if $z1 == 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        $r5 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState originalState()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r5);
        $z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z2;

     label1:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z3 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();
        $r7 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState originalState()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r7);

     label2:
        return 1;
    }
}
final enum class org.jsoup.parser.HtmlTreeBuilderState$9 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$9 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);
        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$9 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        org.jsoup.parser.HtmlTreeBuilderState $r3, $r8, $r10, $r14, $r19;
        org.jsoup.parser.Token$StartTag r4, $r11, $r16;
        java.lang.String r5, $r21, r26, $r29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        org.jsoup.parser.Token$Comment $r6;
        java.lang.String[] $r12, $r15, $r18, $r27;
        org.jsoup.parser.Token$EndTag $r17, r25;
        org.jsoup.nodes.Attributes $r20;
        org.jsoup.nodes.Element $r23, r24, $r28;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        $z1 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isCharacter()>();
        if $z1 == 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void newPendingTableCharacters()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void markInsertionMode()>();
        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InTableText>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r3);
        $z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z2;

     label0:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isComment()>();
        if $z3 == 0 goto label1;

        $r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r6);
        return 1;

     label1:
        $z4 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isDoctype()>();
        if $z4 == 0 goto label2;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label2:
        $z5 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isStartTag()>();
        if $z5 == 0 goto label16;

        r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        r5 = virtualinvoke r4.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("caption");
        if $z6 == 0 goto label3;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void insertMarkerToFormattingElements()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r4);
        $r8 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InCaption>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r8);
        goto label15;

     label3:
        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("colgroup");
        if $z7 == 0 goto label4;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r4);
        $r10 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InColumnGroup>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r10);
        goto label15;

     label4:
        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("col");
        if $z8 == 0 goto label5;

        $r11 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r11.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("colgroup");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r11);
        $z10 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z10;

     label5:
        $r12 = newarray (java.lang.String)[3];
        $r12[0] = "tbody";
        $r12[1] = "tfoot";
        $r12[2] = "thead";
        $z11 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r12);
        if $z11 == 0 goto label6;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r4);
        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InTableBody>;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r14);
        goto label15;

     label6:
        $r15 = newarray (java.lang.String)[3];
        $r15[0] = "td";
        $r15[1] = "th";
        $r15[2] = "tr";
        $z12 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r15);
        if $z12 == 0 goto label7;

        $r16 = new org.jsoup.parser.Token$StartTag;
        specialinvoke $r16.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("tbody");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r16);
        $z14 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z14;

     label7:
        $z15 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("table");
        if $z15 == 0 goto label9;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r17 = new org.jsoup.parser.Token$EndTag;
        specialinvoke $r17.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("table");
        z0 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r17);
        if z0 == 0 goto label8;

        $z16 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        return $z16;

     label8:
        goto label15;

     label9:
        $r18 = newarray (java.lang.String)[2];
        $r18[0] = "style";
        $r18[1] = "script";
        $z17 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r5, $r18);
        if $z17 == 0 goto label10;

        $r19 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        $z18 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r19);
        return $z18;

     label10:
        $z19 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("input");
        if $z19 == 0 goto label12;

        $r20 = r4.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        $r21 = virtualinvoke $r20.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("type");
        $z20 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hidden");
        if $z20 != 0 goto label11;

        $z21 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z21;

     label11:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r4);
        goto label15;

     label12:
        $z22 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("form");
        if $z22 == 0 goto label14;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        $r23 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFormElement()>();
        if $r23 == null goto label13;

        return 0;

     label13:
        r24 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>(r4);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void setFormElement(org.jsoup.nodes.Element)>(r24);
        goto label15;

     label14:
        $z23 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z23;

     label15:
        goto label23;

     label16:
        $z24 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEndTag()>();
        if $z24 == 0 goto label21;

        r25 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        r26 = virtualinvoke r25.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $z25 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("table");
        if $z25 == 0 goto label18;

        $z26 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>(r26);
        if $z26 != 0 goto label17;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label17:
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>("table");
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void resetInsertionMode()>();
        goto label20;

     label18:
        $r27 = newarray (java.lang.String)[11];
        $r27[0] = "body";
        $r27[1] = "caption";
        $r27[2] = "col";
        $r27[3] = "colgroup";
        $r27[4] = "html";
        $r27[5] = "tbody";
        $r27[6] = "td";
        $r27[7] = "tfoot";
        $r27[8] = "th";
        $r27[9] = "thead";
        $r27[10] = "tr";
        $z27 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>(r26, $r27);
        if $z27 == 0 goto label19;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        return 0;

     label19:
        $z28 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z28;

     label20:
        goto label23;

     label21:
        $z29 = virtualinvoke r1.<org.jsoup.parser.Token: boolean isEOF()>();
        if $z29 == 0 goto label23;

        $r28 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r29 = virtualinvoke $r28.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z30 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("html");
        if $z30 == 0 goto label22;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label22:
        return 1;

     label23:
        $z31 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>(r1, r2);
        return $z31;
    }

    boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$9 r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.HtmlTreeBuilder r2;
        boolean z0, $z1, z2;
        org.jsoup.nodes.Element $r3;
        java.lang.String $r4;
        java.lang.String[] $r5;
        org.jsoup.parser.HtmlTreeBuilderState $r6, $r7;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;
        r1 := @parameter0: org.jsoup.parser.Token;
        r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);
        z0 = 1;
        $r3 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $r5 = newarray (java.lang.String)[5];
        $r5[0] = "table";
        $r5[1] = "tbody";
        $r5[2] = "tfoot";
        $r5[3] = "thead";
        $r5[4] = "tr";
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);
        if $z1 == 0 goto label0;

        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(1);
        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r6);
        virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(0);
        goto label1;

     label0:
        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        z2 = virtualinvoke r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r1, $r7);

     label1:
        return z2;
    }
}
abstract enum class org.jsoup.parser.HtmlTreeBuilderState extends java.lang.Enum
{
    public static final enum org.jsoup.parser.HtmlTreeBuilderState Initial;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState BeforeHtml;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState BeforeHead;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InHead;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InHeadNoscript;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState AfterHead;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InBody;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState Text;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InTable;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InTableText;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InCaption;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InColumnGroup;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InTableBody;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InRow;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InCell;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InSelect;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InSelectInTable;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState AfterBody;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState InFrameset;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState AfterFrameset;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState AfterAfterBody;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState AfterAfterFrameset;
    public static final enum org.jsoup.parser.HtmlTreeBuilderState ForeignContent;
    private static java.lang.String nullString;
    private static final org.jsoup.parser.HtmlTreeBuilderState[] $VALUES;

    public static org.jsoup.parser.HtmlTreeBuilderState[] values()
    {
        org.jsoup.parser.HtmlTreeBuilderState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.jsoup.parser.HtmlTreeBuilderState[]) $r1;
        return $r2;
    }

    public static org.jsoup.parser.HtmlTreeBuilderState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.jsoup.parser.HtmlTreeBuilderState $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/jsoup/parser/HtmlTreeBuilderState", r0);
        $r2 = (org.jsoup.parser.HtmlTreeBuilderState) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    abstract boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder);

    private static boolean isWhitespace(org.jsoup.parser.Token)
    {
        org.jsoup.parser.Token r0;
        java.lang.String r1;
        int i0, $i2;
        char c1;
        boolean $z0, $z1;
        org.jsoup.parser.Token$Character $r2;

        r0 := @parameter0: org.jsoup.parser.Token;
        $z0 = virtualinvoke r0.<org.jsoup.parser.Token: boolean isCharacter()>();
        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        r1 = virtualinvoke $r2.<org.jsoup.parser.Token$Character: java.lang.String getData()>();
        i0 = 0;

     label0:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        if i0 >= $i2 goto label2;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean isWhitespace(int)>(c1);
        if $z1 != 0 goto label1;

        return 0;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return 1;

     label3:
        return 0;
    }

    private static void handleRcData(org.jsoup.parser.Token$StartTag, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag r0;
        org.jsoup.parser.HtmlTreeBuilder r1;
        org.jsoup.parser.Tokeniser $r3;
        org.jsoup.parser.TokeniserState $r4;
        org.jsoup.parser.HtmlTreeBuilderState $r5;

        r0 := @parameter0: org.jsoup.parser.Token$StartTag;
        r1 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r0);
        $r3 = r1.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r4 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rcdata>;
        virtualinvoke $r3.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: void markInsertionMode()>();
        $r5 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState Text>;
        virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r5);
        return;
    }

    private static void handleRawtext(org.jsoup.parser.Token$StartTag, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag r0;
        org.jsoup.parser.HtmlTreeBuilder r1;
        org.jsoup.parser.Tokeniser $r3;
        org.jsoup.parser.TokeniserState $r4;
        org.jsoup.parser.HtmlTreeBuilderState $r5;

        r0 := @parameter0: org.jsoup.parser.Token$StartTag;
        r1 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>(r0);
        $r3 = r1.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        $r4 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rawtext>;
        virtualinvoke $r3.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: void markInsertionMode()>();
        $r5 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState Text>;
        virtualinvoke r1.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r5);
        return;
    }

    void <init>(java.lang.String, int, org.jsoup.parser.HtmlTreeBuilderState$1)
    {
        org.jsoup.parser.HtmlTreeBuilderState r0;
        java.lang.String r1;
        int i0;
        org.jsoup.parser.HtmlTreeBuilderState$1 r2;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.parser.HtmlTreeBuilderState$1;
        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static boolean access$100(org.jsoup.parser.Token)
    {
        org.jsoup.parser.Token r0;
        boolean $z0;

        r0 := @parameter0: org.jsoup.parser.Token;
        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean isWhitespace(org.jsoup.parser.Token)>(r0);
        return $z0;
    }

    static void access$200(org.jsoup.parser.Token$StartTag, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag r0;
        org.jsoup.parser.HtmlTreeBuilder r1;

        r0 := @parameter0: org.jsoup.parser.Token$StartTag;
        r1 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: void handleRcData(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder)>(r0, r1);
        return;
    }

    static void access$300(org.jsoup.parser.Token$StartTag, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag r0;
        org.jsoup.parser.HtmlTreeBuilder r1;

        r0 := @parameter0: org.jsoup.parser.Token$StartTag;
        r1 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;
        staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: void handleRawtext(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder)>(r0, r1);
        return;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <org.jsoup.parser.HtmlTreeBuilderState: java.lang.String nullString>;
        return $r0;
    }

    static void <clinit>()
    {
        org.jsoup.parser.HtmlTreeBuilderState$1 $r0;
        org.jsoup.parser.HtmlTreeBuilderState$2 $r1;
        org.jsoup.parser.HtmlTreeBuilderState$3 $r2;
        org.jsoup.parser.HtmlTreeBuilderState$4 $r3;
        org.jsoup.parser.HtmlTreeBuilderState$5 $r4;
        org.jsoup.parser.HtmlTreeBuilderState$6 $r5;
        org.jsoup.parser.HtmlTreeBuilderState$7 $r6;
        org.jsoup.parser.HtmlTreeBuilderState$8 $r7;
        org.jsoup.parser.HtmlTreeBuilderState$9 $r8;
        org.jsoup.parser.HtmlTreeBuilderState$10 $r9;
        org.jsoup.parser.HtmlTreeBuilderState$11 $r10;
        org.jsoup.parser.HtmlTreeBuilderState$12 $r11;
        org.jsoup.parser.HtmlTreeBuilderState$13 $r12;
        org.jsoup.parser.HtmlTreeBuilderState$14 $r13;
        org.jsoup.parser.HtmlTreeBuilderState$15 $r14;
        org.jsoup.parser.HtmlTreeBuilderState$16 $r15;
        org.jsoup.parser.HtmlTreeBuilderState$17 $r16;
        org.jsoup.parser.HtmlTreeBuilderState$18 $r17;
        org.jsoup.parser.HtmlTreeBuilderState$19 $r18;
        org.jsoup.parser.HtmlTreeBuilderState$20 $r19;
        org.jsoup.parser.HtmlTreeBuilderState$21 $r20;
        org.jsoup.parser.HtmlTreeBuilderState$22 $r21;
        org.jsoup.parser.HtmlTreeBuilderState$23 $r22;
        org.jsoup.parser.HtmlTreeBuilderState[] $r23;
        org.jsoup.parser.HtmlTreeBuilderState $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46;
        java.lang.String $r47;

        $r0 = new org.jsoup.parser.HtmlTreeBuilderState$1;
        specialinvoke $r0.<org.jsoup.parser.HtmlTreeBuilderState$1: void <init>(java.lang.String,int)>("Initial", 0);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState Initial> = $r0;
        $r1 = new org.jsoup.parser.HtmlTreeBuilderState$2;
        specialinvoke $r1.<org.jsoup.parser.HtmlTreeBuilderState$2: void <init>(java.lang.String,int)>("BeforeHtml", 1);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState BeforeHtml> = $r1;
        $r2 = new org.jsoup.parser.HtmlTreeBuilderState$3;
        specialinvoke $r2.<org.jsoup.parser.HtmlTreeBuilderState$3: void <init>(java.lang.String,int)>("BeforeHead", 2);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState BeforeHead> = $r2;
        $r3 = new org.jsoup.parser.HtmlTreeBuilderState$4;
        specialinvoke $r3.<org.jsoup.parser.HtmlTreeBuilderState$4: void <init>(java.lang.String,int)>("InHead", 3);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InHead> = $r3;
        $r4 = new org.jsoup.parser.HtmlTreeBuilderState$5;
        specialinvoke $r4.<org.jsoup.parser.HtmlTreeBuilderState$5: void <init>(java.lang.String,int)>("InHeadNoscript", 4);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InHeadNoscript> = $r4;
        $r5 = new org.jsoup.parser.HtmlTreeBuilderState$6;
        specialinvoke $r5.<org.jsoup.parser.HtmlTreeBuilderState$6: void <init>(java.lang.String,int)>("AfterHead", 5);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterHead> = $r5;
        $r6 = new org.jsoup.parser.HtmlTreeBuilderState$7;
        specialinvoke $r6.<org.jsoup.parser.HtmlTreeBuilderState$7: void <init>(java.lang.String,int)>("InBody", 6);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InBody> = $r6;
        $r7 = new org.jsoup.parser.HtmlTreeBuilderState$8;
        specialinvoke $r7.<org.jsoup.parser.HtmlTreeBuilderState$8: void <init>(java.lang.String,int)>("Text", 7);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState Text> = $r7;
        $r8 = new org.jsoup.parser.HtmlTreeBuilderState$9;
        specialinvoke $r8.<org.jsoup.parser.HtmlTreeBuilderState$9: void <init>(java.lang.String,int)>("InTable", 8);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InTable> = $r8;
        $r9 = new org.jsoup.parser.HtmlTreeBuilderState$10;
        specialinvoke $r9.<org.jsoup.parser.HtmlTreeBuilderState$10: void <init>(java.lang.String,int)>("InTableText", 9);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InTableText> = $r9;
        $r10 = new org.jsoup.parser.HtmlTreeBuilderState$11;
        specialinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$11: void <init>(java.lang.String,int)>("InCaption", 10);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InCaption> = $r10;
        $r11 = new org.jsoup.parser.HtmlTreeBuilderState$12;
        specialinvoke $r11.<org.jsoup.parser.HtmlTreeBuilderState$12: void <init>(java.lang.String,int)>("InColumnGroup", 11);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InColumnGroup> = $r11;
        $r12 = new org.jsoup.parser.HtmlTreeBuilderState$13;
        specialinvoke $r12.<org.jsoup.parser.HtmlTreeBuilderState$13: void <init>(java.lang.String,int)>("InTableBody", 12);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InTableBody> = $r12;
        $r13 = new org.jsoup.parser.HtmlTreeBuilderState$14;
        specialinvoke $r13.<org.jsoup.parser.HtmlTreeBuilderState$14: void <init>(java.lang.String,int)>("InRow", 13);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InRow> = $r13;
        $r14 = new org.jsoup.parser.HtmlTreeBuilderState$15;
        specialinvoke $r14.<org.jsoup.parser.HtmlTreeBuilderState$15: void <init>(java.lang.String,int)>("InCell", 14);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InCell> = $r14;
        $r15 = new org.jsoup.parser.HtmlTreeBuilderState$16;
        specialinvoke $r15.<org.jsoup.parser.HtmlTreeBuilderState$16: void <init>(java.lang.String,int)>("InSelect", 15);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InSelect> = $r15;
        $r16 = new org.jsoup.parser.HtmlTreeBuilderState$17;
        specialinvoke $r16.<org.jsoup.parser.HtmlTreeBuilderState$17: void <init>(java.lang.String,int)>("InSelectInTable", 16);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InSelectInTable> = $r16;
        $r17 = new org.jsoup.parser.HtmlTreeBuilderState$18;
        specialinvoke $r17.<org.jsoup.parser.HtmlTreeBuilderState$18: void <init>(java.lang.String,int)>("AfterBody", 17);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterBody> = $r17;
        $r18 = new org.jsoup.parser.HtmlTreeBuilderState$19;
        specialinvoke $r18.<org.jsoup.parser.HtmlTreeBuilderState$19: void <init>(java.lang.String,int)>("InFrameset", 18);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InFrameset> = $r18;
        $r19 = new org.jsoup.parser.HtmlTreeBuilderState$20;
        specialinvoke $r19.<org.jsoup.parser.HtmlTreeBuilderState$20: void <init>(java.lang.String,int)>("AfterFrameset", 19);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterFrameset> = $r19;
        $r20 = new org.jsoup.parser.HtmlTreeBuilderState$21;
        specialinvoke $r20.<org.jsoup.parser.HtmlTreeBuilderState$21: void <init>(java.lang.String,int)>("AfterAfterBody", 20);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterAfterBody> = $r20;
        $r21 = new org.jsoup.parser.HtmlTreeBuilderState$22;
        specialinvoke $r21.<org.jsoup.parser.HtmlTreeBuilderState$22: void <init>(java.lang.String,int)>("AfterAfterFrameset", 21);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterAfterFrameset> = $r21;
        $r22 = new org.jsoup.parser.HtmlTreeBuilderState$23;
        specialinvoke $r22.<org.jsoup.parser.HtmlTreeBuilderState$23: void <init>(java.lang.String,int)>("ForeignContent", 22);
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState ForeignContent> = $r22;
        $r23 = newarray (org.jsoup.parser.HtmlTreeBuilderState)[23];
        $r24 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState Initial>;
        $r23[0] = $r24;
        $r25 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState BeforeHtml>;
        $r23[1] = $r25;
        $r26 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState BeforeHead>;
        $r23[2] = $r26;
        $r27 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InHead>;
        $r23[3] = $r27;
        $r28 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InHeadNoscript>;
        $r23[4] = $r28;
        $r29 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterHead>;
        $r23[5] = $r29;
        $r30 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InBody>;
        $r23[6] = $r30;
        $r31 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState Text>;
        $r23[7] = $r31;
        $r32 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InTable>;
        $r23[8] = $r32;
        $r33 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InTableText>;
        $r23[9] = $r33;
        $r34 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InCaption>;
        $r23[10] = $r34;
        $r35 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InColumnGroup>;
        $r23[11] = $r35;
        $r36 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InTableBody>;
        $r23[12] = $r36;
        $r37 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InRow>;
        $r23[13] = $r37;
        $r38 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InCell>;
        $r23[14] = $r38;
        $r39 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InSelect>;
        $r23[15] = $r39;
        $r40 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InSelectInTable>;
        $r23[16] = $r40;
        $r41 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterBody>;
        $r23[17] = $r41;
        $r42 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState InFrameset>;
        $r23[18] = $r42;
        $r43 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterFrameset>;
        $r23[19] = $r43;
        $r44 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterAfterBody>;
        $r23[20] = $r44;
        $r45 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState AfterAfterFrameset>;
        $r23[21] = $r45;
        $r46 = <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState ForeignContent>;
        $r23[22] = $r46;
        <org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState[] $VALUES> = $r23;
        $r47 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(0);
        <org.jsoup.parser.HtmlTreeBuilderState: java.lang.String nullString> = $r47;
        return;
    }
}
public class org.jsoup.parser.ParseError extends java.lang.Object
{
    private int pos;
    private java.lang.String errorMsg;

    void <init>(int, java.lang.String)
    {
        org.jsoup.parser.ParseError r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.ParseError;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.parser.ParseError: int pos> = i0;
        r0.<org.jsoup.parser.ParseError: java.lang.String errorMsg> = r1;
        return;
    }

    transient void <init>(int, java.lang.String, java.lang.Object[])
    {
        org.jsoup.parser.ParseError r0;
        int i0;
        java.lang.String r1, $r3;
        java.lang.Object[] r2;

        r0 := @this: org.jsoup.parser.ParseError;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Object[];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);
        r0.<org.jsoup.parser.ParseError: java.lang.String errorMsg> = $r3;
        r0.<org.jsoup.parser.ParseError: int pos> = i0;
        return;
    }

    public java.lang.String getErrorMessage()
    {
        org.jsoup.parser.ParseError r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.ParseError;
        $r1 = r0.<org.jsoup.parser.ParseError: java.lang.String errorMsg>;
        return $r1;
    }

    public int getPosition()
    {
        org.jsoup.parser.ParseError r0;
        int $i0;

        r0 := @this: org.jsoup.parser.ParseError;
        $i0 = r0.<org.jsoup.parser.ParseError: int pos>;
        return $i0;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.ParseError r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5;
        int $i0;
        java.lang.String $r4, $r6;

        r0 := @this: org.jsoup.parser.ParseError;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $i0 = r0.<org.jsoup.parser.ParseError: int pos>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r4 = r0.<org.jsoup.parser.ParseError: java.lang.String errorMsg>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }
}
class org.jsoup.parser.ParseErrorList extends java.util.ArrayList
{
    private static final int INITIAL_CAPACITY;
    private final int maxSize;

    void <init>(int, int)
    {
        org.jsoup.parser.ParseErrorList r0;
        int i0, i1;

        r0 := @this: org.jsoup.parser.ParseErrorList;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        specialinvoke r0.<java.util.ArrayList: void <init>(int)>(i0);
        r0.<org.jsoup.parser.ParseErrorList: int maxSize> = i1;
        return;
    }

    boolean canAddError()
    {
        org.jsoup.parser.ParseErrorList r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jsoup.parser.ParseErrorList;
        $i0 = virtualinvoke r0.<org.jsoup.parser.ParseErrorList: int size()>();
        $i1 = r0.<org.jsoup.parser.ParseErrorList: int maxSize>;
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    int getMaxSize()
    {
        org.jsoup.parser.ParseErrorList r0;
        int $i0;

        r0 := @this: org.jsoup.parser.ParseErrorList;
        $i0 = r0.<org.jsoup.parser.ParseErrorList: int maxSize>;
        return $i0;
    }

    static org.jsoup.parser.ParseErrorList noTracking()
    {
        org.jsoup.parser.ParseErrorList $r0;

        $r0 = new org.jsoup.parser.ParseErrorList;
        specialinvoke $r0.<org.jsoup.parser.ParseErrorList: void <init>(int,int)>(0, 0);
        return $r0;
    }

    static org.jsoup.parser.ParseErrorList tracking(int)
    {
        int i0;
        org.jsoup.parser.ParseErrorList $r0;

        i0 := @parameter0: int;
        $r0 = new org.jsoup.parser.ParseErrorList;
        specialinvoke $r0.<org.jsoup.parser.ParseErrorList: void <init>(int,int)>(16, i0);
        return $r0;
    }
}
public class org.jsoup.parser.Parser extends java.lang.Object
{
    private static final int DEFAULT_MAX_ERRORS;
    private org.jsoup.parser.TreeBuilder treeBuilder;
    private int maxErrors;
    private org.jsoup.parser.ParseErrorList errors;

    public void <init>(org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.Parser r0;
        org.jsoup.parser.TreeBuilder r1;

        r0 := @this: org.jsoup.parser.Parser;
        r1 := @parameter0: org.jsoup.parser.TreeBuilder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.parser.Parser: int maxErrors> = 0;
        r0.<org.jsoup.parser.Parser: org.jsoup.parser.TreeBuilder treeBuilder> = r1;
        return;
    }

    public org.jsoup.nodes.Document parseInput(java.lang.String, java.lang.String)
    {
        org.jsoup.parser.Parser r0;
        java.lang.String r1, r2;
        org.jsoup.nodes.Document r4;
        boolean $z0;
        int $i0;
        org.jsoup.parser.ParseErrorList $r5, $r7;
        org.jsoup.parser.TreeBuilder $r6;

        r0 := @this: org.jsoup.parser.Parser;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $z0 = virtualinvoke r0.<org.jsoup.parser.Parser: boolean isTrackErrors()>();
        if $z0 == 0 goto label0;

        $i0 = r0.<org.jsoup.parser.Parser: int maxErrors>;
        $r5 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList tracking(int)>($i0);
        goto label1;

     label0:
        $r5 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList noTracking()>();

     label1:
        r0.<org.jsoup.parser.Parser: org.jsoup.parser.ParseErrorList errors> = $r5;
        $r6 = r0.<org.jsoup.parser.Parser: org.jsoup.parser.TreeBuilder treeBuilder>;
        $r7 = r0.<org.jsoup.parser.Parser: org.jsoup.parser.ParseErrorList errors>;
        r4 = virtualinvoke $r6.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r1, r2, $r7);
        return r4;
    }

    public org.jsoup.parser.TreeBuilder getTreeBuilder()
    {
        org.jsoup.parser.Parser r0;
        org.jsoup.parser.TreeBuilder $r1;

        r0 := @this: org.jsoup.parser.Parser;
        $r1 = r0.<org.jsoup.parser.Parser: org.jsoup.parser.TreeBuilder treeBuilder>;
        return $r1;
    }

    public org.jsoup.parser.Parser setTreeBuilder(org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.Parser r0;
        org.jsoup.parser.TreeBuilder r1;

        r0 := @this: org.jsoup.parser.Parser;
        r1 := @parameter0: org.jsoup.parser.TreeBuilder;
        r0.<org.jsoup.parser.Parser: org.jsoup.parser.TreeBuilder treeBuilder> = r1;
        return r0;
    }

    public boolean isTrackErrors()
    {
        org.jsoup.parser.Parser r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Parser;
        $i0 = r0.<org.jsoup.parser.Parser: int maxErrors>;
        if $i0 <= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public org.jsoup.parser.Parser setTrackErrors(int)
    {
        org.jsoup.parser.Parser r0;
        int i0;

        r0 := @this: org.jsoup.parser.Parser;
        i0 := @parameter0: int;
        r0.<org.jsoup.parser.Parser: int maxErrors> = i0;
        return r0;
    }

    public java.util.List getErrors()
    {
        org.jsoup.parser.Parser r0;
        org.jsoup.parser.ParseErrorList $r1;

        r0 := @this: org.jsoup.parser.Parser;
        $r1 = r0.<org.jsoup.parser.Parser: org.jsoup.parser.ParseErrorList errors>;
        return $r1;
    }

    public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.jsoup.parser.HtmlTreeBuilder $r2, r3;
        org.jsoup.parser.ParseErrorList $r4;
        org.jsoup.nodes.Document $r5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = new org.jsoup.parser.HtmlTreeBuilder;
        specialinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void <init>()>();
        r3 = $r2;
        $r4 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList noTracking()>();
        $r5 = virtualinvoke r3.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r0, r1, $r4);
        return $r5;
    }

    public static java.util.List parseFragment(java.lang.String, org.jsoup.nodes.Element, java.lang.String)
    {
        java.lang.String r0, r2;
        org.jsoup.nodes.Element r1;
        org.jsoup.parser.HtmlTreeBuilder $r3, r4;
        org.jsoup.parser.ParseErrorList $r5;
        java.util.List $r6;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.jsoup.nodes.Element;
        r2 := @parameter2: java.lang.String;
        $r3 = new org.jsoup.parser.HtmlTreeBuilder;
        specialinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: void <init>()>();
        r4 = $r3;
        $r5 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList noTracking()>();
        $r6 = virtualinvoke r4.<org.jsoup.parser.HtmlTreeBuilder: java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList)>(r0, r1, r2, $r5);
        return $r6;
    }

    public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.jsoup.nodes.Document r2;
        org.jsoup.nodes.Element r3;
        java.util.List r4;
        org.jsoup.nodes.Node[] r5, r6, $r8;
        int i0, i1, $i2;
        org.jsoup.nodes.Node r7;
        java.lang.Object[] $r9;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 = staticinvoke <org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>(r1);
        r3 = virtualinvoke r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        r4 = staticinvoke <org.jsoup.parser.Parser: java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String)>(r0, r3, r1);
        $i2 = interfaceinvoke r4.<java.util.List: int size()>();
        $r8 = newarray (org.jsoup.nodes.Node)[$i2];
        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);
        r5 = (org.jsoup.nodes.Node[]) $r9;
        r6 = r5;
        i0 = lengthof r6;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r7 = r6[i1];
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r7);
        i1 = i1 + 1;
        goto label0;

     label1:
        return r2;
    }

    public static org.jsoup.nodes.Document parseBodyFragmentRelaxed(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.jsoup.nodes.Document $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>(r0, r1);
        return $r2;
    }

    public static org.jsoup.parser.Parser htmlParser()
    {
        org.jsoup.parser.Parser $r0;
        org.jsoup.parser.HtmlTreeBuilder $r1;

        $r0 = new org.jsoup.parser.Parser;
        $r1 = new org.jsoup.parser.HtmlTreeBuilder;
        specialinvoke $r1.<org.jsoup.parser.HtmlTreeBuilder: void <init>()>();
        specialinvoke $r0.<org.jsoup.parser.Parser: void <init>(org.jsoup.parser.TreeBuilder)>($r1);
        return $r0;
    }

    public static org.jsoup.parser.Parser xmlParser()
    {
        org.jsoup.parser.Parser $r0;
        org.jsoup.parser.XmlTreeBuilder $r1;

        $r0 = new org.jsoup.parser.Parser;
        $r1 = new org.jsoup.parser.XmlTreeBuilder;
        specialinvoke $r1.<org.jsoup.parser.XmlTreeBuilder: void <init>()>();
        specialinvoke $r0.<org.jsoup.parser.Parser: void <init>(org.jsoup.parser.TreeBuilder)>($r1);
        return $r0;
    }
}
public class org.jsoup.parser.Tag extends java.lang.Object
{
    private static final java.util.Map tags;
    private java.lang.String tagName;
    private boolean isBlock;
    private boolean formatAsBlock;
    private boolean canContainBlock;
    private boolean canContainInline;
    private boolean empty;
    private boolean selfClosing;
    private boolean preserveWhitespace;
    private static final java.lang.String[] blockTags;
    private static final java.lang.String[] inlineTags;
    private static final java.lang.String[] emptyTags;
    private static final java.lang.String[] formatAsInlineTags;
    private static final java.lang.String[] preserveWhitespaceTags;

    private void <init>(java.lang.String)
    {
        org.jsoup.parser.Tag r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.parser.Tag;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.parser.Tag: boolean isBlock> = 1;
        r0.<org.jsoup.parser.Tag: boolean formatAsBlock> = 1;
        r0.<org.jsoup.parser.Tag: boolean canContainBlock> = 1;
        r0.<org.jsoup.parser.Tag: boolean canContainInline> = 1;
        r0.<org.jsoup.parser.Tag: boolean empty> = 0;
        r0.<org.jsoup.parser.Tag: boolean selfClosing> = 0;
        r0.<org.jsoup.parser.Tag: boolean preserveWhitespace> = 0;
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.jsoup.parser.Tag: java.lang.String tagName> = $r2;
        return;
    }

    public java.lang.String getName()
    {
        org.jsoup.parser.Tag r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Tag;
        $r1 = r0.<org.jsoup.parser.Tag: java.lang.String tagName>;
        return $r1;
    }

    public static org.jsoup.parser.Tag valueOf(java.lang.String)
    {
        java.lang.String r0, $r4, r5;
        java.util.Map r1, $r6, $r7;
        org.jsoup.parser.Tag r2, $r9;
        java.lang.Throwable r3, $r11;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r0);
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();
        r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r5);
        $r6 = <org.jsoup.parser.Tag: java.util.Map tags>;
        r1 = $r6;
        entermonitor $r6;

     label0:
        $r7 = <org.jsoup.parser.Tag: java.util.Map tags>;
        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
        r2 = (org.jsoup.parser.Tag) $r8;
        if r2 != null goto label1;

        $r9 = new org.jsoup.parser.Tag;
        specialinvoke $r9.<org.jsoup.parser.Tag: void <init>(java.lang.String)>(r5);
        r2 = $r9;
        r2.<org.jsoup.parser.Tag: boolean isBlock> = 0;
        r2.<org.jsoup.parser.Tag: boolean canContainBlock> = 1;

     label1:
        exitmonitor r1;

     label2:
        return r2;

     label3:
        $r11 := @caughtexception;

     label4:
        r3 = $r11;
        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label0 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isBlock()
    {
        org.jsoup.parser.Tag r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Tag;
        $z0 = r0.<org.jsoup.parser.Tag: boolean isBlock>;
        return $z0;
    }

    public boolean formatAsBlock()
    {
        org.jsoup.parser.Tag r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Tag;
        $z0 = r0.<org.jsoup.parser.Tag: boolean formatAsBlock>;
        return $z0;
    }

    public boolean canContainBlock()
    {
        org.jsoup.parser.Tag r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Tag;
        $z0 = r0.<org.jsoup.parser.Tag: boolean canContainBlock>;
        return $z0;
    }

    public boolean isInline()
    {
        org.jsoup.parser.Tag r0;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.parser.Tag;
        $z0 = r0.<org.jsoup.parser.Tag: boolean isBlock>;
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public boolean isData()
    {
        org.jsoup.parser.Tag r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jsoup.parser.Tag;
        $z0 = r0.<org.jsoup.parser.Tag: boolean canContainInline>;
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r0.<org.jsoup.parser.Tag: boolean isEmpty()>();
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public boolean isEmpty()
    {
        org.jsoup.parser.Tag r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Tag;
        $z0 = r0.<org.jsoup.parser.Tag: boolean empty>;
        return $z0;
    }

    public boolean isSelfClosing()
    {
        org.jsoup.parser.Tag r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jsoup.parser.Tag;
        $z0 = r0.<org.jsoup.parser.Tag: boolean empty>;
        if $z0 != 0 goto label0;

        $z1 = r0.<org.jsoup.parser.Tag: boolean selfClosing>;
        if $z1 == 0 goto label1;

     label0:
        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isKnownTag()
    {
        org.jsoup.parser.Tag r0;
        java.util.Map $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Tag;
        $r1 = <org.jsoup.parser.Tag: java.util.Map tags>;
        $r2 = r0.<org.jsoup.parser.Tag: java.lang.String tagName>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);
        return $z0;
    }

    public static boolean isKnownTag(java.lang.String)
    {
        java.lang.String r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.jsoup.parser.Tag: java.util.Map tags>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);
        return $z0;
    }

    public boolean preserveWhitespace()
    {
        org.jsoup.parser.Tag r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Tag;
        $z0 = r0.<org.jsoup.parser.Tag: boolean preserveWhitespace>;
        return $z0;
    }

    org.jsoup.parser.Tag setSelfClosing()
    {
        org.jsoup.parser.Tag r0;

        r0 := @this: org.jsoup.parser.Tag;
        r0.<org.jsoup.parser.Tag: boolean selfClosing> = 1;
        return r0;
    }

    public boolean equals(java.lang.Object)
    {
        org.jsoup.parser.Tag r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.parser.Tag;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof org.jsoup.parser.Tag;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.jsoup.parser.Tag) r1;
        $z1 = r0.<org.jsoup.parser.Tag: boolean canContainBlock>;
        $z2 = r2.<org.jsoup.parser.Tag: boolean canContainBlock>;
        if $z1 == $z2 goto label2;

        return 0;

     label2:
        $z3 = r0.<org.jsoup.parser.Tag: boolean canContainInline>;
        $z4 = r2.<org.jsoup.parser.Tag: boolean canContainInline>;
        if $z3 == $z4 goto label3;

        return 0;

     label3:
        $z5 = r0.<org.jsoup.parser.Tag: boolean empty>;
        $z6 = r2.<org.jsoup.parser.Tag: boolean empty>;
        if $z5 == $z6 goto label4;

        return 0;

     label4:
        $z7 = r0.<org.jsoup.parser.Tag: boolean formatAsBlock>;
        $z8 = r2.<org.jsoup.parser.Tag: boolean formatAsBlock>;
        if $z7 == $z8 goto label5;

        return 0;

     label5:
        $z9 = r0.<org.jsoup.parser.Tag: boolean isBlock>;
        $z10 = r2.<org.jsoup.parser.Tag: boolean isBlock>;
        if $z9 == $z10 goto label6;

        return 0;

     label6:
        $z11 = r0.<org.jsoup.parser.Tag: boolean preserveWhitespace>;
        $z12 = r2.<org.jsoup.parser.Tag: boolean preserveWhitespace>;
        if $z11 == $z12 goto label7;

        return 0;

     label7:
        $z13 = r0.<org.jsoup.parser.Tag: boolean selfClosing>;
        $z14 = r2.<org.jsoup.parser.Tag: boolean selfClosing>;
        if $z13 == $z14 goto label8;

        return 0;

     label8:
        $r3 = r0.<org.jsoup.parser.Tag: java.lang.String tagName>;
        $r4 = r2.<org.jsoup.parser.Tag: java.lang.String tagName>;
        $z15 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z15 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }

    public int hashCode()
    {
        org.jsoup.parser.Tag r0;
        int i0, $i1, i3, $i4, i6, $i7, i9, $i10, i12, $i13, i15, $i16, i18, $i19, i21;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte $b2, $b5, $b8, $b11, $b14, $b17, $b20;

        r0 := @this: org.jsoup.parser.Tag;
        $r1 = r0.<org.jsoup.parser.Tag: java.lang.String tagName>;
        i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();
        $i1 = 31 * i0;
        $z0 = r0.<org.jsoup.parser.Tag: boolean isBlock>;
        if $z0 == 0 goto label0;

        $b2 = 1;
        goto label1;

     label0:
        $b2 = 0;

     label1:
        i3 = $i1 + $b2;
        $i4 = 31 * i3;
        $z1 = r0.<org.jsoup.parser.Tag: boolean formatAsBlock>;
        if $z1 == 0 goto label2;

        $b5 = 1;
        goto label3;

     label2:
        $b5 = 0;

     label3:
        i6 = $i4 + $b5;
        $i7 = 31 * i6;
        $z2 = r0.<org.jsoup.parser.Tag: boolean canContainBlock>;
        if $z2 == 0 goto label4;

        $b8 = 1;
        goto label5;

     label4:
        $b8 = 0;

     label5:
        i9 = $i7 + $b8;
        $i10 = 31 * i9;
        $z3 = r0.<org.jsoup.parser.Tag: boolean canContainInline>;
        if $z3 == 0 goto label6;

        $b11 = 1;
        goto label7;

     label6:
        $b11 = 0;

     label7:
        i12 = $i10 + $b11;
        $i13 = 31 * i12;
        $z4 = r0.<org.jsoup.parser.Tag: boolean empty>;
        if $z4 == 0 goto label8;

        $b14 = 1;
        goto label9;

     label8:
        $b14 = 0;

     label9:
        i15 = $i13 + $b14;
        $i16 = 31 * i15;
        $z5 = r0.<org.jsoup.parser.Tag: boolean selfClosing>;
        if $z5 == 0 goto label10;

        $b17 = 1;
        goto label11;

     label10:
        $b17 = 0;

     label11:
        i18 = $i16 + $b17;
        $i19 = 31 * i18;
        $z6 = r0.<org.jsoup.parser.Tag: boolean preserveWhitespace>;
        if $z6 == 0 goto label12;

        $b20 = 1;
        goto label13;

     label12:
        $b20 = 0;

     label13:
        i21 = $i19 + $b20;
        return i21;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.Tag r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Tag;
        $r1 = r0.<org.jsoup.parser.Tag: java.lang.String tagName>;
        return $r1;
    }

    private static org.jsoup.parser.Tag register(org.jsoup.parser.Tag)
    {
        org.jsoup.parser.Tag r0;
        java.util.Map $r1, r2, $r4;
        java.lang.Throwable r3, $r7;
        java.lang.String $r5;

        r0 := @parameter0: org.jsoup.parser.Tag;
        $r1 = <org.jsoup.parser.Tag: java.util.Map tags>;
        r2 = $r1;
        entermonitor $r1;

     label0:
        $r4 = <org.jsoup.parser.Tag: java.util.Map tags>;
        $r5 = r0.<org.jsoup.parser.Tag: java.lang.String tagName>;
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);
        exitmonitor r2;

     label1:
        goto label5;

     label2:
        $r7 := @caughtexception;

     label3:
        r3 = $r7;
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return r0;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.lang.String[] r1, $r4, $r5, $r6, $r7, $r8, r11, r16, r21, r26;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        java.lang.String r2, r12, r17, r22, r27;
        org.jsoup.parser.Tag r3, $r9, $r13, r14, r20, r25, r30;
        java.util.Map $r18, $r23, $r28;
        java.lang.Object $r19, $r24, $r29;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <org.jsoup.parser.Tag: java.util.Map tags> = $r0;
        $r4 = newarray (java.lang.String)[58];
        $r4[0] = "html";
        $r4[1] = "head";
        $r4[2] = "body";
        $r4[3] = "frameset";
        $r4[4] = "script";
        $r4[5] = "noscript";
        $r4[6] = "style";
        $r4[7] = "meta";
        $r4[8] = "link";
        $r4[9] = "title";
        $r4[10] = "frame";
        $r4[11] = "noframes";
        $r4[12] = "section";
        $r4[13] = "nav";
        $r4[14] = "aside";
        $r4[15] = "hgroup";
        $r4[16] = "header";
        $r4[17] = "footer";
        $r4[18] = "p";
        $r4[19] = "h1";
        $r4[20] = "h2";
        $r4[21] = "h3";
        $r4[22] = "h4";
        $r4[23] = "h5";
        $r4[24] = "h6";
        $r4[25] = "ul";
        $r4[26] = "ol";
        $r4[27] = "pre";
        $r4[28] = "div";
        $r4[29] = "blockquote";
        $r4[30] = "hr";
        $r4[31] = "address";
        $r4[32] = "figure";
        $r4[33] = "figcaption";
        $r4[34] = "form";
        $r4[35] = "fieldset";
        $r4[36] = "ins";
        $r4[37] = "del";
        $r4[38] = "dl";
        $r4[39] = "dt";
        $r4[40] = "dd";
        $r4[41] = "li";
        $r4[42] = "table";
        $r4[43] = "caption";
        $r4[44] = "thead";
        $r4[45] = "tfoot";
        $r4[46] = "tbody";
        $r4[47] = "colgroup";
        $r4[48] = "col";
        $r4[49] = "tr";
        $r4[50] = "th";
        $r4[51] = "td";
        $r4[52] = "video";
        $r4[53] = "audio";
        $r4[54] = "canvas";
        $r4[55] = "details";
        $r4[56] = "menu";
        $r4[57] = "plaintext";
        <org.jsoup.parser.Tag: java.lang.String[] blockTags> = $r4;
        $r5 = newarray (java.lang.String)[56];
        $r5[0] = "object";
        $r5[1] = "base";
        $r5[2] = "font";
        $r5[3] = "tt";
        $r5[4] = "i";
        $r5[5] = "b";
        $r5[6] = "u";
        $r5[7] = "big";
        $r5[8] = "small";
        $r5[9] = "em";
        $r5[10] = "strong";
        $r5[11] = "dfn";
        $r5[12] = "code";
        $r5[13] = "samp";
        $r5[14] = "kbd";
        $r5[15] = "var";
        $r5[16] = "cite";
        $r5[17] = "abbr";
        $r5[18] = "time";
        $r5[19] = "acronym";
        $r5[20] = "mark";
        $r5[21] = "ruby";
        $r5[22] = "rt";
        $r5[23] = "rp";
        $r5[24] = "a";
        $r5[25] = "img";
        $r5[26] = "br";
        $r5[27] = "wbr";
        $r5[28] = "map";
        $r5[29] = "q";
        $r5[30] = "sub";
        $r5[31] = "sup";
        $r5[32] = "bdo";
        $r5[33] = "iframe";
        $r5[34] = "embed";
        $r5[35] = "span";
        $r5[36] = "input";
        $r5[37] = "select";
        $r5[38] = "textarea";
        $r5[39] = "label";
        $r5[40] = "button";
        $r5[41] = "optgroup";
        $r5[42] = "option";
        $r5[43] = "legend";
        $r5[44] = "datalist";
        $r5[45] = "keygen";
        $r5[46] = "output";
        $r5[47] = "progress";
        $r5[48] = "meter";
        $r5[49] = "area";
        $r5[50] = "param";
        $r5[51] = "source";
        $r5[52] = "track";
        $r5[53] = "summary";
        $r5[54] = "command";
        $r5[55] = "device";
        <org.jsoup.parser.Tag: java.lang.String[] inlineTags> = $r5;
        $r6 = newarray (java.lang.String)[14];
        $r6[0] = "meta";
        $r6[1] = "link";
        $r6[2] = "base";
        $r6[3] = "frame";
        $r6[4] = "img";
        $r6[5] = "br";
        $r6[6] = "wbr";
        $r6[7] = "embed";
        $r6[8] = "hr";
        $r6[9] = "input";
        $r6[10] = "keygen";
        $r6[11] = "col";
        $r6[12] = "command";
        $r6[13] = "device";
        <org.jsoup.parser.Tag: java.lang.String[] emptyTags> = $r6;
        $r7 = newarray (java.lang.String)[16];
        $r7[0] = "title";
        $r7[1] = "a";
        $r7[2] = "p";
        $r7[3] = "h1";
        $r7[4] = "h2";
        $r7[5] = "h3";
        $r7[6] = "h4";
        $r7[7] = "h5";
        $r7[8] = "h6";
        $r7[9] = "pre";
        $r7[10] = "address";
        $r7[11] = "li";
        $r7[12] = "th";
        $r7[13] = "td";
        $r7[14] = "script";
        $r7[15] = "style";
        <org.jsoup.parser.Tag: java.lang.String[] formatAsInlineTags> = $r7;
        $r8 = newarray (java.lang.String)[3];
        $r8[0] = "pre";
        $r8[1] = "plaintext";
        $r8[2] = "title";
        <org.jsoup.parser.Tag: java.lang.String[] preserveWhitespaceTags> = $r8;
        r1 = <org.jsoup.parser.Tag: java.lang.String[] blockTags>;
        i0 = lengthof r1;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r2 = r1[i1];
        $r9 = new org.jsoup.parser.Tag;
        specialinvoke $r9.<org.jsoup.parser.Tag: void <init>(java.lang.String)>(r2);
        r3 = $r9;
        staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>(r3);
        i1 = i1 + 1;
        goto label0;

     label1:
        r11 = <org.jsoup.parser.Tag: java.lang.String[] inlineTags>;
        i2 = lengthof r11;
        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        r12 = r11[i3];
        $r13 = new org.jsoup.parser.Tag;
        specialinvoke $r13.<org.jsoup.parser.Tag: void <init>(java.lang.String)>(r12);
        r14 = $r13;
        r14.<org.jsoup.parser.Tag: boolean isBlock> = 0;
        r14.<org.jsoup.parser.Tag: boolean canContainBlock> = 0;
        r14.<org.jsoup.parser.Tag: boolean formatAsBlock> = 0;
        staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>(r14);
        i3 = i3 + 1;
        goto label2;

     label3:
        r16 = <org.jsoup.parser.Tag: java.lang.String[] emptyTags>;
        i4 = lengthof r16;
        i5 = 0;

     label4:
        if i5 >= i4 goto label5;

        r17 = r16[i5];
        $r18 = <org.jsoup.parser.Tag: java.util.Map tags>;
        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);
        r20 = (org.jsoup.parser.Tag) $r19;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r20);
        r20.<org.jsoup.parser.Tag: boolean canContainBlock> = 0;
        r20.<org.jsoup.parser.Tag: boolean canContainInline> = 0;
        r20.<org.jsoup.parser.Tag: boolean empty> = 1;
        i5 = i5 + 1;
        goto label4;

     label5:
        r21 = <org.jsoup.parser.Tag: java.lang.String[] formatAsInlineTags>;
        i6 = lengthof r21;
        i7 = 0;

     label6:
        if i7 >= i6 goto label7;

        r22 = r21[i7];
        $r23 = <org.jsoup.parser.Tag: java.util.Map tags>;
        $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22);
        r25 = (org.jsoup.parser.Tag) $r24;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r25);
        r25.<org.jsoup.parser.Tag: boolean formatAsBlock> = 0;
        i7 = i7 + 1;
        goto label6;

     label7:
        r26 = <org.jsoup.parser.Tag: java.lang.String[] preserveWhitespaceTags>;
        i8 = lengthof r26;
        i9 = 0;

     label8:
        if i9 >= i8 goto label9;

        r27 = r26[i9];
        $r28 = <org.jsoup.parser.Tag: java.util.Map tags>;
        $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r27);
        r30 = (org.jsoup.parser.Tag) $r29;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r30);
        r30.<org.jsoup.parser.Tag: boolean preserveWhitespace> = 1;
        i9 = i9 + 1;
        goto label8;

     label9:
        return;
    }
}
class org.jsoup.parser.Token$1 extends java.lang.Object
{
}
class org.jsoup.parser.Token$Character extends org.jsoup.parser.Token
{
    private final java.lang.String data;

    void <init>(java.lang.String)
    {
        org.jsoup.parser.Token$Character r0;
        java.lang.String r1;
        org.jsoup.parser.Token$TokenType $r2;

        r0 := @this: org.jsoup.parser.Token$Character;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.parser.Token: void <init>(org.jsoup.parser.Token$1)>(null);
        $r2 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Character>;
        r0.<org.jsoup.parser.Token$Character: org.jsoup.parser.Token$TokenType type> = $r2;
        r0.<org.jsoup.parser.Token$Character: java.lang.String data> = r1;
        return;
    }

    java.lang.String getData()
    {
        org.jsoup.parser.Token$Character r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Character;
        $r1 = r0.<org.jsoup.parser.Token$Character: java.lang.String data>;
        return $r1;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.Token$Character r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Character;
        $r1 = virtualinvoke r0.<org.jsoup.parser.Token$Character: java.lang.String getData()>();
        return $r1;
    }
}
class org.jsoup.parser.Token$Comment extends org.jsoup.parser.Token
{
    final java.lang.StringBuilder data;

    void <init>()
    {
        org.jsoup.parser.Token$Comment r0;
        java.lang.StringBuilder $r1;
        org.jsoup.parser.Token$TokenType $r2;

        r0 := @this: org.jsoup.parser.Token$Comment;
        specialinvoke r0.<org.jsoup.parser.Token: void <init>(org.jsoup.parser.Token$1)>(null);
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r0.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data> = $r1;
        $r2 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Comment>;
        r0.<org.jsoup.parser.Token$Comment: org.jsoup.parser.Token$TokenType type> = $r2;
        return;
    }

    java.lang.String getData()
    {
        org.jsoup.parser.Token$Comment r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.parser.Token$Comment;
        $r1 = r0.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.Token$Comment r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.jsoup.parser.Token$Comment;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!--");
        $r3 = virtualinvoke r0.<org.jsoup.parser.Token$Comment: java.lang.String getData()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }
}
class org.jsoup.parser.Token$Doctype extends org.jsoup.parser.Token
{
    final java.lang.StringBuilder name;
    final java.lang.StringBuilder publicIdentifier;
    final java.lang.StringBuilder systemIdentifier;
    boolean forceQuirks;

    void <init>()
    {
        org.jsoup.parser.Token$Doctype r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        org.jsoup.parser.Token$TokenType $r4;

        r0 := @this: org.jsoup.parser.Token$Doctype;
        specialinvoke r0.<org.jsoup.parser.Token: void <init>(org.jsoup.parser.Token$1)>(null);
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r0.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name> = $r1;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        r0.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder publicIdentifier> = $r2;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r0.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder systemIdentifier> = $r3;
        r0.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 0;
        $r4 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Doctype>;
        r0.<org.jsoup.parser.Token$Doctype: org.jsoup.parser.Token$TokenType type> = $r4;
        return;
    }

    java.lang.String getName()
    {
        org.jsoup.parser.Token$Doctype r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.parser.Token$Doctype;
        $r1 = r0.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    java.lang.String getPublicIdentifier()
    {
        org.jsoup.parser.Token$Doctype r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.parser.Token$Doctype;
        $r1 = r0.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder publicIdentifier>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    public java.lang.String getSystemIdentifier()
    {
        org.jsoup.parser.Token$Doctype r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.parser.Token$Doctype;
        $r1 = r0.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder systemIdentifier>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    public boolean isForceQuirks()
    {
        org.jsoup.parser.Token$Doctype r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token$Doctype;
        $z0 = r0.<org.jsoup.parser.Token$Doctype: boolean forceQuirks>;
        return $z0;
    }
}
class org.jsoup.parser.Token$EndTag extends org.jsoup.parser.Token$Tag
{

    void <init>()
    {
        org.jsoup.parser.Token$EndTag r0;
        org.jsoup.parser.Token$TokenType $r1;

        r0 := @this: org.jsoup.parser.Token$EndTag;
        specialinvoke r0.<org.jsoup.parser.Token$Tag: void <init>()>();
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EndTag>;
        r0.<org.jsoup.parser.Token$EndTag: org.jsoup.parser.Token$TokenType type> = $r1;
        return;
    }

    void <init>(java.lang.String)
    {
        org.jsoup.parser.Token$EndTag r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.Token$EndTag;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.parser.Token$EndTag: void <init>()>();
        r0.<org.jsoup.parser.Token$EndTag: java.lang.String tagName> = r1;
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.Token$EndTag r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8, $r9;
        java.lang.String $r3, $r7, $r10;
        org.jsoup.nodes.Attributes $r6;

        r0 := @this: org.jsoup.parser.Token$EndTag;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r3 = virtualinvoke r0.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r6 = r0.<org.jsoup.parser.Token$EndTag: org.jsoup.nodes.Attributes attributes>;
        $r7 = virtualinvoke $r6.<org.jsoup.nodes.Attributes: java.lang.String toString()>();
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;
    }
}
class org.jsoup.parser.Token$EOF extends org.jsoup.parser.Token
{

    void <init>()
    {
        org.jsoup.parser.Token$EOF r0;
        org.jsoup.parser.Token$TokenType $r1;

        r0 := @this: org.jsoup.parser.Token$EOF;
        specialinvoke r0.<org.jsoup.parser.Token: void <init>(org.jsoup.parser.Token$1)>(null);
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF>;
        r0.<org.jsoup.parser.Token$EOF: org.jsoup.parser.Token$TokenType type> = $r1;
        return;
    }
}
class org.jsoup.parser.Token$StartTag extends org.jsoup.parser.Token$Tag
{

    void <init>()
    {
        org.jsoup.parser.Token$StartTag r0;
        org.jsoup.parser.Token$TokenType $r1;

        r0 := @this: org.jsoup.parser.Token$StartTag;
        specialinvoke r0.<org.jsoup.parser.Token$Tag: void <init>()>();
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType StartTag>;
        r0.<org.jsoup.parser.Token$StartTag: org.jsoup.parser.Token$TokenType type> = $r1;
        return;
    }

    void <init>(java.lang.String)
    {
        org.jsoup.parser.Token$StartTag r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.Token$StartTag;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.parser.Token$StartTag: void <init>()>();
        r0.<org.jsoup.parser.Token$StartTag: java.lang.String tagName> = r1;
        return;
    }

    void <init>(java.lang.String, org.jsoup.nodes.Attributes)
    {
        org.jsoup.parser.Token$StartTag r0;
        java.lang.String r1;
        org.jsoup.nodes.Attributes r2;

        r0 := @this: org.jsoup.parser.Token$StartTag;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.jsoup.nodes.Attributes;
        specialinvoke r0.<org.jsoup.parser.Token$StartTag: void <init>()>();
        r0.<org.jsoup.parser.Token$StartTag: java.lang.String tagName> = r1;
        r0.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes> = r2;
        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.Token$StartTag r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8, $r9;
        java.lang.String $r3, $r7, $r10;
        org.jsoup.nodes.Attributes $r6;

        r0 := @this: org.jsoup.parser.Token$StartTag;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $r3 = virtualinvoke r0.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r6 = r0.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        $r7 = virtualinvoke $r6.<org.jsoup.nodes.Attributes: java.lang.String toString()>();
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;
    }
}
abstract class org.jsoup.parser.Token$Tag extends org.jsoup.parser.Token
{
    protected java.lang.String tagName;
    private java.lang.String pendingAttributeName;
    private java.lang.String pendingAttributeValue;
    boolean selfClosing;
    org.jsoup.nodes.Attributes attributes;

    void <init>()
    {
        org.jsoup.parser.Token$Tag r0;
        org.jsoup.nodes.Attributes $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;
        specialinvoke r0.<org.jsoup.parser.Token: void <init>(org.jsoup.parser.Token$1)>(null);
        r0.<org.jsoup.parser.Token$Tag: boolean selfClosing> = 0;
        $r1 = new org.jsoup.nodes.Attributes;
        specialinvoke $r1.<org.jsoup.nodes.Attributes: void <init>()>();
        r0.<org.jsoup.parser.Token$Tag: org.jsoup.nodes.Attributes attributes> = $r1;
        return;
    }

    void newAttribute()
    {
        org.jsoup.parser.Token$Tag r0;
        org.jsoup.nodes.Attribute r1, $r4;
        java.lang.String $r2, $r3, $r5, $r6;
        org.jsoup.nodes.Attributes $r7;

        r0 := @this: org.jsoup.parser.Token$Tag;
        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;
        if $r2 == null goto label1;

        $r3 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValue>;
        if $r3 != null goto label0;

        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValue> = "";

     label0:
        $r4 = new org.jsoup.nodes.Attribute;
        $r5 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;
        $r6 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValue>;
        specialinvoke $r4.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>($r5, $r6);
        r1 = $r4;
        $r7 = r0.<org.jsoup.parser.Token$Tag: org.jsoup.nodes.Attributes attributes>;
        virtualinvoke $r7.<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>(r1);

     label1:
        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName> = null;
        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValue> = null;
        return;
    }

    void finaliseTag()
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;
        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;
        if $r1 == null goto label0;

        virtualinvoke r0.<org.jsoup.parser.Token$Tag: void newAttribute()>();

     label0:
        return;
    }

    java.lang.String name()
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token$Tag;
        $r1 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isFalse(boolean)>($z0);
        $r2 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;
        return $r2;
    }

    org.jsoup.parser.Token$Tag name(java.lang.String)
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.Token$Tag;
        r1 := @parameter0: java.lang.String;
        r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName> = r1;
        return r0;
    }

    boolean isSelfClosing()
    {
        org.jsoup.parser.Token$Tag r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token$Tag;
        $z0 = r0.<org.jsoup.parser.Token$Tag: boolean selfClosing>;
        return $z0;
    }

    org.jsoup.nodes.Attributes getAttributes()
    {
        org.jsoup.parser.Token$Tag r0;
        org.jsoup.nodes.Attributes $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;
        $r1 = r0.<org.jsoup.parser.Token$Tag: org.jsoup.nodes.Attributes attributes>;
        return $r1;
    }

    void appendTagName(java.lang.String)
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String r1, $r3, $r4, $r5;

        r0 := @this: org.jsoup.parser.Token$Tag;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;
        if $r3 != null goto label0;

        $r4 = r1;
        goto label1;

     label0:
        $r5 = r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;
        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String concat(java.lang.String)>(r1);

     label1:
        r0.<org.jsoup.parser.Token$Tag: java.lang.String tagName> = $r4;
        return;
    }

    void appendTagName(char)
    {
        org.jsoup.parser.Token$Tag r0;
        char c0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;
        c0 := @parameter0: char;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);
        virtualinvoke r0.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>($r1);
        return;
    }

    void appendAttributeName(java.lang.String)
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String r1, $r3, $r4, $r5;

        r0 := @this: org.jsoup.parser.Token$Tag;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;
        if $r3 != null goto label0;

        $r4 = r1;
        goto label1;

     label0:
        $r5 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName>;
        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String concat(java.lang.String)>(r1);

     label1:
        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeName> = $r4;
        return;
    }

    void appendAttributeName(char)
    {
        org.jsoup.parser.Token$Tag r0;
        char c0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;
        c0 := @parameter0: char;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);
        virtualinvoke r0.<org.jsoup.parser.Token$Tag: void appendAttributeName(java.lang.String)>($r1);
        return;
    }

    void appendAttributeValue(java.lang.String)
    {
        org.jsoup.parser.Token$Tag r0;
        java.lang.String r1, $r3, $r4, $r5;

        r0 := @this: org.jsoup.parser.Token$Tag;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValue>;
        if $r3 != null goto label0;

        $r4 = r1;
        goto label1;

     label0:
        $r5 = r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValue>;
        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String concat(java.lang.String)>(r1);

     label1:
        r0.<org.jsoup.parser.Token$Tag: java.lang.String pendingAttributeValue> = $r4;
        return;
    }

    void appendAttributeValue(char)
    {
        org.jsoup.parser.Token$Tag r0;
        char c0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Tag;
        c0 := @parameter0: char;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);
        virtualinvoke r0.<org.jsoup.parser.Token$Tag: void appendAttributeValue(java.lang.String)>($r1);
        return;
    }
}
final enum class org.jsoup.parser.Token$TokenType extends java.lang.Enum
{
    public static final enum org.jsoup.parser.Token$TokenType Doctype;
    public static final enum org.jsoup.parser.Token$TokenType StartTag;
    public static final enum org.jsoup.parser.Token$TokenType EndTag;
    public static final enum org.jsoup.parser.Token$TokenType Comment;
    public static final enum org.jsoup.parser.Token$TokenType Character;
    public static final enum org.jsoup.parser.Token$TokenType EOF;
    private static final org.jsoup.parser.Token$TokenType[] $VALUES;

    public static org.jsoup.parser.Token$TokenType[] values()
    {
        org.jsoup.parser.Token$TokenType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.jsoup.parser.Token$TokenType[]) $r1;
        return $r2;
    }

    public static org.jsoup.parser.Token$TokenType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.jsoup.parser.Token$TokenType $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/jsoup/parser/Token$TokenType", r0);
        $r2 = (org.jsoup.parser.Token$TokenType) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.jsoup.parser.Token$TokenType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.Token$TokenType;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        org.jsoup.parser.Token$TokenType $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        org.jsoup.parser.Token$TokenType[] $r6;

        $r0 = new org.jsoup.parser.Token$TokenType;
        specialinvoke $r0.<org.jsoup.parser.Token$TokenType: void <init>(java.lang.String,int)>("Doctype", 0);
        <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Doctype> = $r0;
        $r1 = new org.jsoup.parser.Token$TokenType;
        specialinvoke $r1.<org.jsoup.parser.Token$TokenType: void <init>(java.lang.String,int)>("StartTag", 1);
        <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType StartTag> = $r1;
        $r2 = new org.jsoup.parser.Token$TokenType;
        specialinvoke $r2.<org.jsoup.parser.Token$TokenType: void <init>(java.lang.String,int)>("EndTag", 2);
        <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EndTag> = $r2;
        $r3 = new org.jsoup.parser.Token$TokenType;
        specialinvoke $r3.<org.jsoup.parser.Token$TokenType: void <init>(java.lang.String,int)>("Comment", 3);
        <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Comment> = $r3;
        $r4 = new org.jsoup.parser.Token$TokenType;
        specialinvoke $r4.<org.jsoup.parser.Token$TokenType: void <init>(java.lang.String,int)>("Character", 4);
        <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Character> = $r4;
        $r5 = new org.jsoup.parser.Token$TokenType;
        specialinvoke $r5.<org.jsoup.parser.Token$TokenType: void <init>(java.lang.String,int)>("EOF", 5);
        <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF> = $r5;
        $r6 = newarray (org.jsoup.parser.Token$TokenType)[6];
        $r7 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Doctype>;
        $r6[0] = $r7;
        $r8 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType StartTag>;
        $r6[1] = $r8;
        $r9 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EndTag>;
        $r6[2] = $r9;
        $r10 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Comment>;
        $r6[3] = $r10;
        $r11 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Character>;
        $r6[4] = $r11;
        $r12 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF>;
        $r6[5] = $r12;
        <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType[] $VALUES> = $r6;
        return;
    }
}
abstract class org.jsoup.parser.Token extends java.lang.Object
{
    org.jsoup.parser.Token$TokenType type;

    private void <init>()
    {
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    java.lang.String tokenType()
    {
        org.jsoup.parser.Token r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.parser.Token;
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();
        return $r2;
    }

    boolean isDoctype()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token;
        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Doctype>;
        if $r2 != $r1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    org.jsoup.parser.Token$Doctype asDoctype()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$Doctype $r1;

        r0 := @this: org.jsoup.parser.Token;
        $r1 = (org.jsoup.parser.Token$Doctype) r0;
        return $r1;
    }

    boolean isStartTag()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token;
        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType StartTag>;
        if $r2 != $r1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    org.jsoup.parser.Token$StartTag asStartTag()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$StartTag $r1;

        r0 := @this: org.jsoup.parser.Token;
        $r1 = (org.jsoup.parser.Token$StartTag) r0;
        return $r1;
    }

    boolean isEndTag()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token;
        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EndTag>;
        if $r2 != $r1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    org.jsoup.parser.Token$EndTag asEndTag()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$EndTag $r1;

        r0 := @this: org.jsoup.parser.Token;
        $r1 = (org.jsoup.parser.Token$EndTag) r0;
        return $r1;
    }

    boolean isComment()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token;
        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Comment>;
        if $r2 != $r1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    org.jsoup.parser.Token$Comment asComment()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$Comment $r1;

        r0 := @this: org.jsoup.parser.Token;
        $r1 = (org.jsoup.parser.Token$Comment) r0;
        return $r1;
    }

    boolean isCharacter()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token;
        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Character>;
        if $r2 != $r1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    org.jsoup.parser.Token$Character asCharacter()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$Character $r1;

        r0 := @this: org.jsoup.parser.Token;
        $r1 = (org.jsoup.parser.Token$Character) r0;
        return $r1;
    }

    boolean isEOF()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Token;
        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF>;
        if $r2 != $r1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    void <init>(org.jsoup.parser.Token$1)
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$1 r1;

        r0 := @this: org.jsoup.parser.Token;
        r1 := @parameter0: org.jsoup.parser.Token$1;
        specialinvoke r0.<org.jsoup.parser.Token: void <init>()>();
        return;
    }
}
class org.jsoup.parser.Tokeniser extends java.lang.Object
{
    static final char replacementChar;
    private org.jsoup.parser.CharacterReader reader;
    private org.jsoup.parser.ParseErrorList errors;
    private org.jsoup.parser.TokeniserState state;
    private org.jsoup.parser.Token emitPending;
    private boolean isEmitPending;
    private java.lang.StringBuilder charBuffer;
    java.lang.StringBuilder dataBuffer;
    org.jsoup.parser.Token$Tag tagPending;
    org.jsoup.parser.Token$Doctype doctypePending;
    org.jsoup.parser.Token$Comment commentPending;
    private org.jsoup.parser.Token$StartTag lastStartTag;
    private boolean selfClosingFlagAcknowledged;

    void <init>(org.jsoup.parser.CharacterReader, org.jsoup.parser.ParseErrorList)
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.CharacterReader r1;
        org.jsoup.parser.ParseErrorList r2;
        org.jsoup.parser.TokeniserState $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: org.jsoup.parser.CharacterReader;
        r2 := @parameter1: org.jsoup.parser.ParseErrorList;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Data>;
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.TokeniserState state> = $r3;
        r0.<org.jsoup.parser.Tokeniser: boolean isEmitPending> = 0;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r0.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder charBuffer> = $r4;
        r0.<org.jsoup.parser.Tokeniser: boolean selfClosingFlagAcknowledged> = 1;
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader> = r1;
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors> = r2;
        return;
    }

    org.jsoup.parser.Token read()
    {
        org.jsoup.parser.Tokeniser r0;
        java.lang.String r1;
        boolean $z0, $z1;
        org.jsoup.parser.TokeniserState $r2;
        org.jsoup.parser.CharacterReader $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        int $i0, $i1;
        org.jsoup.parser.Token$Character $r9;
        org.jsoup.parser.Token $r10;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $z0 = r0.<org.jsoup.parser.Tokeniser: boolean selfClosingFlagAcknowledged>;
        if $z0 != 0 goto label0;

        specialinvoke r0.<org.jsoup.parser.Tokeniser: void error(java.lang.String)>("Self closing flag not acknowledged");
        r0.<org.jsoup.parser.Tokeniser: boolean selfClosingFlagAcknowledged> = 1;

     label0:
        $z1 = r0.<org.jsoup.parser.Tokeniser: boolean isEmitPending>;
        if $z1 != 0 goto label1;

        $r2 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.TokeniserState state>;
        $r3 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        virtualinvoke $r2.<org.jsoup.parser.TokeniserState: void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r0, $r3);
        goto label0;

     label1:
        $r4 = r0.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder charBuffer>;
        $i0 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();
        if $i0 <= 0 goto label2;

        $r5 = r0.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder charBuffer>;
        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $r6 = r0.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder charBuffer>;
        $r7 = r0.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder charBuffer>;
        $i1 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i1);
        $r9 = new org.jsoup.parser.Token$Character;
        specialinvoke $r9.<org.jsoup.parser.Token$Character: void <init>(java.lang.String)>(r1);
        return $r9;

     label2:
        r0.<org.jsoup.parser.Tokeniser: boolean isEmitPending> = 0;
        $r10 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token emitPending>;
        return $r10;
    }

    void emit(org.jsoup.parser.Token)
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.Token$StartTag r2;
        boolean $z0, $z1;
        org.jsoup.parser.Token$TokenType $r3, $r4, $r5, $r6;
        org.jsoup.parser.Token$EndTag r7;
        org.jsoup.nodes.Attributes $r8;
        int $i0;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: org.jsoup.parser.Token;
        $z0 = r0.<org.jsoup.parser.Tokeniser: boolean isEmitPending>;
        staticinvoke <org.jsoup.helper.Validate: void isFalse(boolean,java.lang.String)>($z0, "There is an unread token pending!");
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token emitPending> = r1;
        r0.<org.jsoup.parser.Tokeniser: boolean isEmitPending> = 1;
        $r3 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r4 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType StartTag>;
        if $r3 != $r4 goto label1;

        r2 = (org.jsoup.parser.Token$StartTag) r1;
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$StartTag lastStartTag> = r2;
        $z1 = r2.<org.jsoup.parser.Token$StartTag: boolean selfClosing>;
        if $z1 == 0 goto label0;

        r0.<org.jsoup.parser.Tokeniser: boolean selfClosingFlagAcknowledged> = 0;

     label0:
        goto label2;

     label1:
        $r5 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r6 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EndTag>;
        if $r5 != $r6 goto label2;

        r7 = (org.jsoup.parser.Token$EndTag) r1;
        $r8 = r7.<org.jsoup.parser.Token$EndTag: org.jsoup.nodes.Attributes attributes>;
        $i0 = virtualinvoke $r8.<org.jsoup.nodes.Attributes: int size()>();
        if $i0 <= 0 goto label2;

        specialinvoke r0.<org.jsoup.parser.Tokeniser: void error(java.lang.String)>("Attributes incorrectly present on end tag");

     label2:
        return;
    }

    void emit(java.lang.String)
    {
        org.jsoup.parser.Tokeniser r0;
        java.lang.String r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder charBuffer>;
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        return;
    }

    void emit(char)
    {
        org.jsoup.parser.Tokeniser r0;
        char c0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.jsoup.parser.Tokeniser;
        c0 := @parameter0: char;
        $r1 = r0.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder charBuffer>;
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        return;
    }

    org.jsoup.parser.TokeniserState getState()
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.TokeniserState $r1;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.TokeniserState state>;
        return $r1;
    }

    void transition(org.jsoup.parser.TokeniserState)
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.TokeniserState r1;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: org.jsoup.parser.TokeniserState;
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.TokeniserState state> = r1;
        return;
    }

    void advanceTransition(org.jsoup.parser.TokeniserState)
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.TokeniserState r1;
        org.jsoup.parser.CharacterReader $r2;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: org.jsoup.parser.TokeniserState;
        $r2 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        virtualinvoke $r2.<org.jsoup.parser.CharacterReader: void advance()>();
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.TokeniserState state> = r1;
        return;
    }

    void acknowledgeSelfClosingFlag()
    {
        org.jsoup.parser.Tokeniser r0;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r0.<org.jsoup.parser.Tokeniser: boolean selfClosingFlagAcknowledged> = 1;
        return;
    }

    java.lang.Character consumeCharacterReference(java.lang.Character, boolean)
    {
        org.jsoup.parser.Tokeniser r0;
        java.lang.Character r1, $r18, $r19, $r35;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6, z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String r2, $r11, r21, $r22, r23, $r27;
        int i0, $i4, $i7, $i8, $i9;
        byte b1, $b5;
        org.jsoup.parser.CharacterReader $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r20, $r24, $r25, $r28, $r29, $r30, $r31, $r33, $r34;
        char $c2, $c3, $c6;
        char[] $r6, $r32;
        java.lang.Integer $r15;
        java.lang.NumberFormatException $r16, r17;
        java.lang.Object[] $r26;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: java.lang.Character;
        z0 := @parameter1: boolean;
        $r3 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $z2 = virtualinvoke $r3.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z2 == 0 goto label0;

        return null;

     label0:
        if r1 == null goto label1;

        $c2 = virtualinvoke r1.<java.lang.Character: char charValue()>();
        $r4 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $c3 = virtualinvoke $r4.<org.jsoup.parser.CharacterReader: char current()>();
        if $c2 != $c3 goto label1;

        return null;

     label1:
        $r5 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $r6 = newarray (char)[6];
        $r6[0] = 9;
        $r6[1] = 10;
        $r6[2] = 12;
        $r6[3] = 32;
        $r6[4] = 60;
        $r6[5] = 38;
        $z3 = virtualinvoke $r5.<org.jsoup.parser.CharacterReader: boolean matchesAny(char[])>($r6);
        if $z3 == 0 goto label2;

        return null;

     label2:
        $r7 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        virtualinvoke $r7.<org.jsoup.parser.CharacterReader: void mark()>();
        $r8 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $z4 = virtualinvoke $r8.<org.jsoup.parser.CharacterReader: boolean matchConsume(java.lang.String)>("#");
        if $z4 == 0 goto label16;

        $r9 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        z1 = virtualinvoke $r9.<org.jsoup.parser.CharacterReader: boolean matchConsumeIgnoreCase(java.lang.String)>("X");
        if z1 == 0 goto label3;

        $r10 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $r11 = virtualinvoke $r10.<org.jsoup.parser.CharacterReader: java.lang.String consumeHexSequence()>();
        goto label4;

     label3:
        $r12 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $r11 = virtualinvoke $r12.<org.jsoup.parser.CharacterReader: java.lang.String consumeDigitSequence()>();

     label4:
        r2 = $r11;
        $i4 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i4 != 0 goto label5;

        specialinvoke r0.<org.jsoup.parser.Tokeniser: void characterReferenceError(java.lang.String)>("numeric reference with no numerals");
        $r13 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        virtualinvoke $r13.<org.jsoup.parser.CharacterReader: void rewindToMark()>();
        return null;

     label5:
        $r14 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $z5 = virtualinvoke $r14.<org.jsoup.parser.CharacterReader: boolean matchConsume(java.lang.String)>(";");
        if $z5 != 0 goto label6;

        specialinvoke r0.<org.jsoup.parser.Tokeniser: void characterReferenceError(java.lang.String)>("missing semicolon");

     label6:
        i0 = -1;

     label7:
        if z1 == 0 goto label8;

        $b5 = 16;
        goto label9;

     label8:
        $b5 = 10;

     label9:
        b1 = $b5;
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>(r2, b1);
        i0 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;
        r17 = $r16;

     label12:
        if i0 == -1 goto label14;

        if i0 < 55296 goto label13;

        if i0 <= 57343 goto label14;

     label13:
        if i0 <= 1114111 goto label15;

     label14:
        specialinvoke r0.<org.jsoup.parser.Tokeniser: void characterReferenceError(java.lang.String)>("character outside of valid range");
        $r18 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65533);
        return $r18;

     label15:
        $c6 = (char) i0;
        $r19 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c6);
        return $r19;

     label16:
        $r20 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        r21 = virtualinvoke $r20.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterThenDigitSequence()>();
        $r22 = new java.lang.String;
        specialinvoke $r22.<java.lang.String: void <init>(java.lang.String)>(r21);
        r23 = $r22;
        $r24 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        z6 = virtualinvoke $r24.<org.jsoup.parser.CharacterReader: boolean matches(char)>(59);
        z7 = 0;

     label17:
        $i7 = virtualinvoke r21.<java.lang.String: int length()>();
        if $i7 <= 0 goto label19;

        if z7 != 0 goto label19;

        $z8 = staticinvoke <org.jsoup.nodes.Entities: boolean isNamedEntity(java.lang.String)>(r21);
        if $z8 == 0 goto label18;

        z7 = 1;
        goto label17;

     label18:
        $i8 = virtualinvoke r21.<java.lang.String: int length()>();
        $i9 = $i8 - 1;
        r21 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);
        $r25 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        virtualinvoke $r25.<org.jsoup.parser.CharacterReader: void unconsume()>();
        goto label17;

     label19:
        if z7 != 0 goto label21;

        if z6 == 0 goto label20;

        $r26 = newarray (java.lang.Object)[1];
        $r26[0] = r23;
        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("invalid named referenece \'%s\'", $r26);
        specialinvoke r0.<org.jsoup.parser.Tokeniser: void characterReferenceError(java.lang.String)>($r27);

     label20:
        $r28 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        virtualinvoke $r28.<org.jsoup.parser.CharacterReader: void rewindToMark()>();
        return null;

     label21:
        if z0 == 0 goto label23;

        $r29 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $z9 = virtualinvoke $r29.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z9 != 0 goto label22;

        $r30 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $z10 = virtualinvoke $r30.<org.jsoup.parser.CharacterReader: boolean matchesDigit()>();
        if $z10 != 0 goto label22;

        $r31 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $r32 = newarray (char)[3];
        $r32[0] = 61;
        $r32[1] = 45;
        $r32[2] = 95;
        $z11 = virtualinvoke $r31.<org.jsoup.parser.CharacterReader: boolean matchesAny(char[])>($r32);
        if $z11 == 0 goto label23;

     label22:
        $r33 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        virtualinvoke $r33.<org.jsoup.parser.CharacterReader: void rewindToMark()>();
        return null;

     label23:
        $r34 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $z12 = virtualinvoke $r34.<org.jsoup.parser.CharacterReader: boolean matchConsume(java.lang.String)>(";");
        if $z12 != 0 goto label24;

        specialinvoke r0.<org.jsoup.parser.Tokeniser: void characterReferenceError(java.lang.String)>("missing semicolon");

     label24:
        $r35 = staticinvoke <org.jsoup.nodes.Entities: java.lang.Character getCharacterByName(java.lang.String)>(r21);
        return $r35;

        catch java.lang.NumberFormatException from label7 to label10 with label11;
    }

    org.jsoup.parser.Token$Tag createTagPending(boolean)
    {
        org.jsoup.parser.Tokeniser r0;
        boolean z0;
        org.jsoup.parser.Token$Tag $r2, $r3;
        org.jsoup.parser.Token$StartTag r4;
        org.jsoup.parser.Token$EndTag r5;

        r0 := @this: org.jsoup.parser.Tokeniser;
        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        r4 = new org.jsoup.parser.Token$StartTag;
        $r2 = r4;
        specialinvoke r4.<org.jsoup.parser.Token$StartTag: void <init>()>();
        goto label1;

     label0:
        r5 = new org.jsoup.parser.Token$EndTag;
        $r2 = r5;
        specialinvoke r5.<org.jsoup.parser.Token$EndTag: void <init>()>();

     label1:
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending> = $r2;
        $r3 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        return $r3;
    }

    void emitTagPending()
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.Token$Tag $r1, $r2;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r1.<org.jsoup.parser.Token$Tag: void finaliseTag()>();
        $r2 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke r0.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r2);
        return;
    }

    void createCommentPending()
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.Token$Comment $r1;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = new org.jsoup.parser.Token$Comment;
        specialinvoke $r1.<org.jsoup.parser.Token$Comment: void <init>()>();
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending> = $r1;
        return;
    }

    void emitCommentPending()
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.Token$Comment $r1;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        virtualinvoke r0.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r1);
        return;
    }

    void createDoctypePending()
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.Token$Doctype $r1;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = new org.jsoup.parser.Token$Doctype;
        specialinvoke $r1.<org.jsoup.parser.Token$Doctype: void <init>()>();
        r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending> = $r1;
        return;
    }

    void emitDoctypePending()
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.Token$Doctype $r1;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        virtualinvoke r0.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r1);
        return;
    }

    void createTempBuffer()
    {
        org.jsoup.parser.Tokeniser r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r0.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer> = $r1;
        return;
    }

    boolean isAppropriateEndTagToken()
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.Token$StartTag $r1, $r4;
        org.jsoup.parser.Token$Tag $r2;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$StartTag lastStartTag>;
        if $r1 != null goto label0;

        return 0;

     label0:
        $r2 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $r3 = $r2.<org.jsoup.parser.Token$Tag: java.lang.String tagName>;
        $r4 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$StartTag lastStartTag>;
        $r5 = $r4.<org.jsoup.parser.Token$StartTag: java.lang.String tagName>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        return $z0;
    }

    java.lang.String appropriateEndTagName()
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.Token$StartTag $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.parser.Tokeniser;
        $r1 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$StartTag lastStartTag>;
        $r2 = $r1.<org.jsoup.parser.Token$StartTag: java.lang.String tagName>;
        return $r2;
    }

    void error(org.jsoup.parser.TokeniserState)
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.TokeniserState r1;
        org.jsoup.parser.ParseError $r2;
        org.jsoup.parser.ParseErrorList $r3, $r4;
        boolean $z0;
        org.jsoup.parser.CharacterReader $r5, $r7;
        int $i0;
        java.lang.Object[] $r6;
        char $c1;
        java.lang.Character $r8;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: org.jsoup.parser.TokeniserState;
        $r3 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors>;
        $z0 = virtualinvoke $r3.<org.jsoup.parser.ParseErrorList: boolean canAddError()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors>;
        $r2 = new org.jsoup.parser.ParseError;
        $r5 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $i0 = virtualinvoke $r5.<org.jsoup.parser.CharacterReader: int pos()>();
        $r6 = newarray (java.lang.Object)[2];
        $r7 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $c1 = virtualinvoke $r7.<org.jsoup.parser.CharacterReader: char current()>();
        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);
        $r6[0] = $r8;
        $r6[1] = r1;
        specialinvoke $r2.<org.jsoup.parser.ParseError: void <init>(int,java.lang.String,java.lang.Object[])>($i0, "Unexpected character \'%s\' in input state [%s]", $r6);
        virtualinvoke $r4.<org.jsoup.parser.ParseErrorList: boolean add(java.lang.Object)>($r2);

     label0:
        return;
    }

    void eofError(org.jsoup.parser.TokeniserState)
    {
        org.jsoup.parser.Tokeniser r0;
        org.jsoup.parser.TokeniserState r1;
        org.jsoup.parser.ParseError $r2;
        org.jsoup.parser.ParseErrorList $r3, $r4;
        boolean $z0;
        org.jsoup.parser.CharacterReader $r5;
        int $i0;
        java.lang.Object[] $r6;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: org.jsoup.parser.TokeniserState;
        $r3 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors>;
        $z0 = virtualinvoke $r3.<org.jsoup.parser.ParseErrorList: boolean canAddError()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors>;
        $r2 = new org.jsoup.parser.ParseError;
        $r5 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $i0 = virtualinvoke $r5.<org.jsoup.parser.CharacterReader: int pos()>();
        $r6 = newarray (java.lang.Object)[1];
        $r6[0] = r1;
        specialinvoke $r2.<org.jsoup.parser.ParseError: void <init>(int,java.lang.String,java.lang.Object[])>($i0, "Unexpectedly reached end of file (EOF) in input state [%s]", $r6);
        virtualinvoke $r4.<org.jsoup.parser.ParseErrorList: boolean add(java.lang.Object)>($r2);

     label0:
        return;
    }

    private void characterReferenceError(java.lang.String)
    {
        org.jsoup.parser.Tokeniser r0;
        java.lang.String r1;
        org.jsoup.parser.ParseError $r2;
        org.jsoup.parser.ParseErrorList $r3, $r4;
        boolean $z0;
        org.jsoup.parser.CharacterReader $r5;
        int $i0;
        java.lang.Object[] $r6;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors>;
        $z0 = virtualinvoke $r3.<org.jsoup.parser.ParseErrorList: boolean canAddError()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors>;
        $r2 = new org.jsoup.parser.ParseError;
        $r5 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $i0 = virtualinvoke $r5.<org.jsoup.parser.CharacterReader: int pos()>();
        $r6 = newarray (java.lang.Object)[1];
        $r6[0] = r1;
        specialinvoke $r2.<org.jsoup.parser.ParseError: void <init>(int,java.lang.String,java.lang.Object[])>($i0, "Invalid character reference: %s", $r6);
        virtualinvoke $r4.<org.jsoup.parser.ParseErrorList: boolean add(java.lang.Object)>($r2);

     label0:
        return;
    }

    private void error(java.lang.String)
    {
        org.jsoup.parser.Tokeniser r0;
        java.lang.String r1;
        org.jsoup.parser.ParseError $r2;
        org.jsoup.parser.ParseErrorList $r3, $r4;
        boolean $z0;
        org.jsoup.parser.CharacterReader $r5;
        int $i0;

        r0 := @this: org.jsoup.parser.Tokeniser;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors>;
        $z0 = virtualinvoke $r3.<org.jsoup.parser.ParseErrorList: boolean canAddError()>();
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.ParseErrorList errors>;
        $r2 = new org.jsoup.parser.ParseError;
        $r5 = r0.<org.jsoup.parser.Tokeniser: org.jsoup.parser.CharacterReader reader>;
        $i0 = virtualinvoke $r5.<org.jsoup.parser.CharacterReader: int pos()>();
        specialinvoke $r2.<org.jsoup.parser.ParseError: void <init>(int,java.lang.String)>($i0, r1);
        virtualinvoke $r4.<org.jsoup.parser.ParseErrorList: boolean add(java.lang.Object)>($r2);

     label0:
        return;
    }

    boolean currentNodeInHtmlNS()
    {
        org.jsoup.parser.Tokeniser r0;

        r0 := @this: org.jsoup.parser.Tokeniser;
        return 1;
    }
}
final enum class org.jsoup.parser.TokeniserState$1 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$1 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$1;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$1 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        org.jsoup.parser.TokeniserState $r3, $r5;
        java.lang.String r4;
        char $c0, $c1;
        org.jsoup.parser.Token$EOF $r6;
        char[] $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$1;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch($c0)
        {
            case 0: goto label2;
            case 38: goto label0;
            case 60: goto label1;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$1: org.jsoup.parser.TokeniserState CharacterReferenceInData>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        $r5 = <org.jsoup.parser.TokeniserState$1: org.jsoup.parser.TokeniserState TagOpen>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r5);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $c1 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>($c1);
        goto label5;

     label3:
        $r6 = new org.jsoup.parser.Token$EOF;
        specialinvoke $r6.<org.jsoup.parser.Token$EOF: void <init>()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r6);
        goto label5;

     label4:
        $r7 = newarray (char)[3];
        $r7[0] = 38;
        $r7[1] = 60;
        $r7[2] = 0;
        r4 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r7);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r4);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$10 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$10 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$10;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$10 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r5, $r11;
        char[] $r4;
        org.jsoup.parser.Token$Tag $r6, $r10;
        char $c0;
        org.jsoup.parser.TokeniserState $r7, $r8, $r9, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$10;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r4 = newarray (char)[7];
        $r4[0] = 9;
        $r4[1] = 10;
        $r4[2] = 12;
        $r4[3] = 32;
        $r4[4] = 47;
        $r4[5] = 62;
        $r4[6] = 0;
        $r5 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r4);
        r3 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        $r6 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r6.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>(r3);
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch($c0)
        {
            case 0: goto label3;
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 47: goto label1;
            case 62: goto label2;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        $r7 = <org.jsoup.parser.TokeniserState$10: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label5;

     label1:
        $r8 = <org.jsoup.parser.TokeniserState$10: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r9 = <org.jsoup.parser.TokeniserState$10: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label5;

     label3:
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $r11 = staticinvoke <org.jsoup.parser.TokeniserState: java.lang.String access$100()>();
        virtualinvoke $r10.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>($r11);
        goto label5;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r12 = <org.jsoup.parser.TokeniserState$10: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r12);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$11 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$11 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$11;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$11 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0, $z1, $z2;
        org.jsoup.parser.TokeniserState $r3, $r11, $r12;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8, $r10;
        org.jsoup.parser.Token$EndTag $r9;

        r0 := @this: org.jsoup.parser.TokeniserState$11;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(47);
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createTempBuffer()>();
        $r3 = <org.jsoup.parser.TokeniserState$11: org.jsoup.parser.TokeniserState RCDATAEndTagOpen>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label2;

     label0:
        $z1 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r6 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: java.lang.String appropriateEndTagName()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $z2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean containsIgnoreCase(java.lang.String)>($r8);
        if $z2 != 0 goto label1;

        $r9 = new org.jsoup.parser.Token$EndTag;
        $r10 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: java.lang.String appropriateEndTagName()>();
        specialinvoke $r9.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>($r10);
        r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending> = $r9;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r11 = <org.jsoup.parser.TokeniserState$11: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r11);
        goto label2;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("<");
        $r12 = <org.jsoup.parser.TokeniserState$11: org.jsoup.parser.TokeniserState Rcdata>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r12);

     label2:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$12 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$12 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$12;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$12 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0;
        org.jsoup.parser.Token$Tag $r4;
        char $c0, $c1, $c2, $c3;
        java.lang.StringBuilder $r5;
        org.jsoup.parser.TokeniserState $r7, $r8;

        r0 := @this: org.jsoup.parser.TokeniserState$12;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag createTagPending(boolean)>(0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c0);
        virtualinvoke $r4.<org.jsoup.parser.Token$Tag: void appendTagName(char)>($c1);
        $r5 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $c2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);
        $r7 = <org.jsoup.parser.TokeniserState$12: org.jsoup.parser.TokeniserState RCDATAEndTagName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r7);
        goto label1;

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("</");
        $r8 = <org.jsoup.parser.TokeniserState$12: org.jsoup.parser.TokeniserState Rcdata>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$13 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$13 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$13;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$13 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r5;
        boolean $z0, $z1, $z2, $z3;
        org.jsoup.parser.Token$Tag $r4;
        java.lang.StringBuilder $r6;
        char c0;
        org.jsoup.parser.TokeniserState $r8, $r9, $r10;

        r0 := @this: org.jsoup.parser.TokeniserState$13;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterSequence()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r4.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>($r5);
        $r6 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        return;

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 12: goto label1;
            case 32: goto label1;
            case 47: goto label3;
            case 62: goto label5;
            default: goto label7;
        };

     label1:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();
        if $z1 == 0 goto label2;

        $r8 = <org.jsoup.parser.TokeniserState$13: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label8;

     label2:
        specialinvoke r0.<org.jsoup.parser.TokeniserState$13: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);
        goto label8;

     label3:
        $z2 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();
        if $z2 == 0 goto label4;

        $r9 = <org.jsoup.parser.TokeniserState$13: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label8;

     label4:
        specialinvoke r0.<org.jsoup.parser.TokeniserState$13: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);
        goto label8;

     label5:
        $z3 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();
        if $z3 == 0 goto label6;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r10 = <org.jsoup.parser.TokeniserState$13: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label8;

     label6:
        specialinvoke r0.<org.jsoup.parser.TokeniserState$13: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);
        goto label8;

     label7:
        specialinvoke r0.<org.jsoup.parser.TokeniserState$13: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);

     label8:
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$13 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        org.jsoup.parser.TokeniserState $r9;

        r0 := @this: org.jsoup.parser.TokeniserState$13;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r5 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>($r8);
        $r9 = <org.jsoup.parser.TokeniserState$13: org.jsoup.parser.TokeniserState Rcdata>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$14 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$14 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$14;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$14 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r3, $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$14;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(47);
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createTempBuffer()>();
        $r3 = <org.jsoup.parser.TokeniserState$14: org.jsoup.parser.TokeniserState RawtextEndTagOpen>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label1;

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(60);
        $r4 = <org.jsoup.parser.TokeniserState$14: org.jsoup.parser.TokeniserState Rawtext>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$15 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$15 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$15;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$15 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r4, $r5;

        r0 := @this: org.jsoup.parser.TokeniserState$15;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag createTagPending(boolean)>(0);
        $r4 = <org.jsoup.parser.TokeniserState$15: org.jsoup.parser.TokeniserState RawtextEndTagName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label1;

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("</");
        $r5 = <org.jsoup.parser.TokeniserState$15: org.jsoup.parser.TokeniserState Rawtext>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$16 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$16 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$16;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$16 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r5;
        boolean $z0, $z1, $z2;
        org.jsoup.parser.Token$Tag $r4;
        java.lang.StringBuilder $r6, $r11;
        char c0;
        org.jsoup.parser.TokeniserState $r8, $r9, $r10;

        r0 := @this: org.jsoup.parser.TokeniserState$16;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterSequence()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r4.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>($r5);
        $r6 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        return;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();
        if $z1 == 0 goto label6;

        $z2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z2 != 0 goto label6;

        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 12: goto label1;
            case 32: goto label1;
            case 47: goto label2;
            case 62: goto label3;
            default: goto label4;
        };

     label1:
        $r8 = <org.jsoup.parser.TokeniserState$16: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label2:
        $r9 = <org.jsoup.parser.TokeniserState$16: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r10 = <org.jsoup.parser.TokeniserState$16: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label5;

     label4:
        $r11 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        specialinvoke r0.<org.jsoup.parser.TokeniserState$16: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);

     label5:
        goto label7;

     label6:
        specialinvoke r0.<org.jsoup.parser.TokeniserState$16: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);

     label7:
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$16 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        org.jsoup.parser.TokeniserState $r9;

        r0 := @this: org.jsoup.parser.TokeniserState$16;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r5 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>($r8);
        $r9 = <org.jsoup.parser.TokeniserState$16: org.jsoup.parser.TokeniserState Rawtext>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$17 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$17 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$17;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$17 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5;
        char $c0;

        r0 := @this: org.jsoup.parser.TokeniserState$17;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch($c0)
        {
            case 33: goto label1;
            case 47: goto label0;
            default: goto label2;
        };

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createTempBuffer()>();
        $r3 = <org.jsoup.parser.TokeniserState$17: org.jsoup.parser.TokeniserState ScriptDataEndTagOpen>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label3;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("<!");
        $r4 = <org.jsoup.parser.TokeniserState$17: org.jsoup.parser.TokeniserState ScriptDataEscapeStart>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label3;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("<");
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r5 = <org.jsoup.parser.TokeniserState$17: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);

     label3:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$18 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$18 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$18;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$18 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r4, $r5;

        r0 := @this: org.jsoup.parser.TokeniserState$18;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag createTagPending(boolean)>(0);
        $r4 = <org.jsoup.parser.TokeniserState$18: org.jsoup.parser.TokeniserState ScriptDataEndTagName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label1;

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("</");
        $r5 = <org.jsoup.parser.TokeniserState$18: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$19 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$19 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$19;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$19 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r5;
        boolean $z0, $z1, $z2;
        org.jsoup.parser.Token$Tag $r4;
        java.lang.StringBuilder $r6, $r11;
        char c0;
        org.jsoup.parser.TokeniserState $r8, $r9, $r10;

        r0 := @this: org.jsoup.parser.TokeniserState$19;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterSequence()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r4.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>($r5);
        $r6 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        return;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();
        if $z1 == 0 goto label6;

        $z2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z2 != 0 goto label6;

        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 12: goto label1;
            case 32: goto label1;
            case 47: goto label2;
            case 62: goto label3;
            default: goto label4;
        };

     label1:
        $r8 = <org.jsoup.parser.TokeniserState$19: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label2:
        $r9 = <org.jsoup.parser.TokeniserState$19: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r10 = <org.jsoup.parser.TokeniserState$19: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label5;

     label4:
        $r11 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        specialinvoke r0.<org.jsoup.parser.TokeniserState$19: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);

     label5:
        goto label7;

     label6:
        specialinvoke r0.<org.jsoup.parser.TokeniserState$19: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);

     label7:
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$19 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        org.jsoup.parser.TokeniserState $r9;

        r0 := @this: org.jsoup.parser.TokeniserState$19;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r5 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>($r8);
        $r9 = <org.jsoup.parser.TokeniserState$19: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$2 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$2 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$2;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$2 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.Character r3;
        char $c0;
        org.jsoup.parser.TokeniserState $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$2;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        r3 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: java.lang.Character consumeCharacterReference(java.lang.Character,boolean)>(null, 0);
        if r3 != null goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(38);
        goto label1;

     label0:
        $c0 = virtualinvoke r3.<java.lang.Character: char charValue()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>($c0);

     label1:
        $r4 = <org.jsoup.parser.TokeniserState$2: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$20 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$20 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$20;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$20 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r3, $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$20;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(45);
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(45);
        $r3 = <org.jsoup.parser.TokeniserState$20: org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label1;

     label0:
        $r4 = <org.jsoup.parser.TokeniserState$20: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$21 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$21 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$21;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$21 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r3, $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$21;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(45);
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(45);
        $r3 = <org.jsoup.parser.TokeniserState$21: org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label1;

     label0:
        $r4 = <org.jsoup.parser.TokeniserState$21: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$22 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$22 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$22;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$22 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r4, $r5, $r6;
        char $c0;
        char[] $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$22;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = <org.jsoup.parser.TokeniserState$22: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        return;

     label0:
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch($c0)
        {
            case 0: goto label3;
            case 45: goto label1;
            case 60: goto label2;
            default: goto label4;
        };

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(45);
        $r5 = <org.jsoup.parser.TokeniserState$22: org.jsoup.parser.TokeniserState ScriptDataEscapedDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r5);
        goto label5;

     label2:
        $r6 = <org.jsoup.parser.TokeniserState$22: org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r6);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void advance()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        goto label5;

     label4:
        $r7 = newarray (char)[3];
        $r7[0] = 45;
        $r7[1] = 60;
        $r7[2] = 0;
        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r7);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r3);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$23 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$23 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$23;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$23 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$23;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r3 = <org.jsoup.parser.TokeniserState$23: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        return;

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label3;
            case 45: goto label1;
            case 60: goto label2;
            default: goto label4;
        };

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r4 = <org.jsoup.parser.TokeniserState$23: org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label5;

     label2:
        $r5 = <org.jsoup.parser.TokeniserState$23: org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        $r6 = <org.jsoup.parser.TokeniserState$23: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label5;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r7 = <org.jsoup.parser.TokeniserState$23: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$24 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$24 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$24;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$24 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$24;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r3 = <org.jsoup.parser.TokeniserState$24: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        return;

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label4;
            case 45: goto label1;
            case 60: goto label2;
            case 62: goto label3;
            default: goto label5;
        };

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        goto label6;

     label2:
        $r4 = <org.jsoup.parser.TokeniserState$24: org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r5 = <org.jsoup.parser.TokeniserState$24: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        $r6 = <org.jsoup.parser.TokeniserState$24: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r7 = <org.jsoup.parser.TokeniserState$24: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$25 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$25 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$25;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$25 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        char $c0, $c1, $c2;
        java.lang.String $r8;
        org.jsoup.parser.TokeniserState $r9, $r10, $r11;

        r0 := @this: org.jsoup.parser.TokeniserState$25;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createTempBuffer()>();
        $r3 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c0);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $c2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>($r8);
        $r9 = <org.jsoup.parser.TokeniserState$25: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r9);
        goto label2;

     label0:
        $z1 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(47);
        if $z1 == 0 goto label1;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createTempBuffer()>();
        $r10 = <org.jsoup.parser.TokeniserState$25: org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r10);
        goto label2;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(60);
        $r11 = <org.jsoup.parser.TokeniserState$25: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r11);

     label2:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$26 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$26 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$26;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$26 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0;
        org.jsoup.parser.Token$Tag $r4;
        char $c0, $c1, $c2;
        java.lang.StringBuilder $r5;
        org.jsoup.parser.TokeniserState $r7, $r8;

        r0 := @this: org.jsoup.parser.TokeniserState$26;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag createTagPending(boolean)>(0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c0);
        virtualinvoke $r4.<org.jsoup.parser.Token$Tag: void appendTagName(char)>($c1);
        $r5 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $c2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);
        $r7 = <org.jsoup.parser.TokeniserState$26: org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r7);
        goto label1;

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("</");
        $r8 = <org.jsoup.parser.TokeniserState$26: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$27 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$27 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$27;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$27 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r5;
        boolean $z0, $z1, $z2;
        org.jsoup.parser.Token$Tag $r4;
        java.lang.StringBuilder $r6, $r11;
        char c0;
        org.jsoup.parser.TokeniserState $r8, $r9, $r10;

        r0 := @this: org.jsoup.parser.TokeniserState$27;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterSequence()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r4.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>($r5);
        $r6 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        return;

     label0:
        $z1 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();
        if $z1 == 0 goto label6;

        $z2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z2 != 0 goto label6;

        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 12: goto label1;
            case 32: goto label1;
            case 47: goto label2;
            case 62: goto label3;
            default: goto label4;
        };

     label1:
        $r8 = <org.jsoup.parser.TokeniserState$27: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label2:
        $r9 = <org.jsoup.parser.TokeniserState$27: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r10 = <org.jsoup.parser.TokeniserState$27: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label5;

     label4:
        $r11 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        specialinvoke r0.<org.jsoup.parser.TokeniserState$27: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);

     label5:
        goto label7;

     label6:
        specialinvoke r0.<org.jsoup.parser.TokeniserState$27: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(r1, r2);

     label7:
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$27 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        org.jsoup.parser.TokeniserState $r9;

        r0 := @this: org.jsoup.parser.TokeniserState$27;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r5 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>($r8);
        $r9 = <org.jsoup.parser.TokeniserState$27: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$28 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$28 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$28;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$28 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r5, $r8;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r7;
        char c0;
        org.jsoup.parser.TokeniserState $r9, $r10, $r11;

        r0 := @this: org.jsoup.parser.TokeniserState$28;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterSequence()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r3);
        return;

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 12: goto label1;
            case 32: goto label1;
            case 47: goto label1;
            case 62: goto label1;
            default: goto label4;
        };

     label1:
        $r7 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("script");
        if $z1 == 0 goto label2;

        $r9 = <org.jsoup.parser.TokeniserState$28: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label3;

     label2:
        $r10 = <org.jsoup.parser.TokeniserState$28: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        goto label5;

     label4:
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r11 = <org.jsoup.parser.TokeniserState$28: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r11);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$29 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$29 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$29;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$29 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        java.lang.String r3;
        org.jsoup.parser.TokeniserState $r4, $r5, $r6;
        char[] $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$29;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch(c0)
        {
            case 0: goto label2;
            case 45: goto label0;
            case 60: goto label1;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r4 = <org.jsoup.parser.TokeniserState$29: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r4);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r5 = <org.jsoup.parser.TokeniserState$29: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r5);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void advance()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$29: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label5;

     label4:
        $r7 = newarray (char)[3];
        $r7[0] = 45;
        $r7[1] = 60;
        $r7[2] = 0;
        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r7);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r3);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$3 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$3 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$3;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$3 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        org.jsoup.parser.TokeniserState $r3, $r5;
        java.lang.String r4;
        char $c0;
        org.jsoup.parser.Token$EOF $r6;
        char[] $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$3;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch($c0)
        {
            case 0: goto label2;
            case 38: goto label0;
            case 60: goto label1;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$3: org.jsoup.parser.TokeniserState CharacterReferenceInRcdata>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        $r5 = <org.jsoup.parser.TokeniserState$3: org.jsoup.parser.TokeniserState RcdataLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r5);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void advance()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        goto label5;

     label3:
        $r6 = new org.jsoup.parser.Token$EOF;
        specialinvoke $r6.<org.jsoup.parser.Token$EOF: void <init>()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r6);
        goto label5;

     label4:
        $r7 = newarray (char)[3];
        $r7[0] = 38;
        $r7[1] = 60;
        $r7[2] = 0;
        r4 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r7);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r4);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$30 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$30 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$30;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$30 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$30;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label2;
            case 45: goto label0;
            case 60: goto label1;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r3 = <org.jsoup.parser.TokeniserState$30: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r4 = <org.jsoup.parser.TokeniserState$30: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        $r5 = <org.jsoup.parser.TokeniserState$30: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$30: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label5;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r7 = <org.jsoup.parser.TokeniserState$30: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$31 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$31 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$31;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$31 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$31;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label3;
            case 45: goto label0;
            case 60: goto label1;
            case 62: goto label2;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        goto label6;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r3 = <org.jsoup.parser.TokeniserState$31: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label6;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r4 = <org.jsoup.parser.TokeniserState$31: org.jsoup.parser.TokeniserState ScriptData>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        $r5 = <org.jsoup.parser.TokeniserState$31: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$31: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        $r7 = <org.jsoup.parser.TokeniserState$31: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$32 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$32 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$32;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$32 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0;
        org.jsoup.parser.TokeniserState $r3, $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$32;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(47);
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(47);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createTempBuffer()>();
        $r3 = <org.jsoup.parser.TokeniserState$32: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label1;

     label0:
        $r4 = <org.jsoup.parser.TokeniserState$32: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);

     label1:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$33 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$33 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$33;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$33 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r5, $r8;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r7;
        char c0;
        org.jsoup.parser.TokeniserState $r9, $r10, $r11;

        r0 := @this: org.jsoup.parser.TokeniserState$33;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterSequence()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r3);
        return;

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 12: goto label1;
            case 32: goto label1;
            case 47: goto label1;
            case 62: goto label1;
            default: goto label4;
        };

     label1:
        $r7 = r1.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("script");
        if $z1 == 0 goto label2;

        $r9 = <org.jsoup.parser.TokeniserState$33: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label3;

     label2:
        $r10 = <org.jsoup.parser.TokeniserState$33: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(c0);
        goto label5;

     label4:
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r11 = <org.jsoup.parser.TokeniserState$33: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r11);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$34 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$34 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$34;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$34 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r6, $r7, $r10, $r12;
        org.jsoup.parser.Token$Tag $r5, $r8, $r9, $r11;

        r0 := @this: org.jsoup.parser.TokeniserState$34;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label3;
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label5;
            case 39: goto label5;
            case 47: goto label1;
            case 60: goto label5;
            case 61: goto label5;
            case 62: goto label2;
            case 65535: goto label4;
            default: goto label6;
        };

     label0:
        goto label7;

     label1:
        $r3 = <org.jsoup.parser.TokeniserState$34: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label7;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r4 = <org.jsoup.parser.TokeniserState$34: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label7;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r5 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r5.<org.jsoup.parser.Token$Tag: void newAttribute()>();
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r6 = <org.jsoup.parser.TokeniserState$34: org.jsoup.parser.TokeniserState AttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label7;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = <org.jsoup.parser.TokeniserState$34: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label7;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r8 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r8.<org.jsoup.parser.Token$Tag: void newAttribute()>();
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r9.<org.jsoup.parser.Token$Tag: void appendAttributeName(char)>(c0);
        $r10 = <org.jsoup.parser.TokeniserState$34: org.jsoup.parser.TokeniserState AttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label7;

     label6:
        $r11 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r11.<org.jsoup.parser.Token$Tag: void newAttribute()>();
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r12 = <org.jsoup.parser.TokeniserState$34: org.jsoup.parser.TokeniserState AttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r12);

     label7:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$35 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$35 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$35;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$35 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r6;
        char c0;
        char[] $r4;
        org.jsoup.parser.Token$Tag $r5, $r11, $r13;
        org.jsoup.parser.TokeniserState $r7, $r8, $r9, $r10, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$35;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r4 = newarray (char)[11];
        $r4[0] = 9;
        $r4[1] = 10;
        $r4[2] = 12;
        $r4[3] = 32;
        $r4[4] = 47;
        $r4[5] = 61;
        $r4[6] = 62;
        $r4[7] = 0;
        $r4[8] = 34;
        $r4[9] = 39;
        $r4[10] = 60;
        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r4);
        $r5 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r5.<org.jsoup.parser.Token$Tag: void appendAttributeName(java.lang.String)>($r6);
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label4;
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label6;
            case 39: goto label6;
            case 47: goto label1;
            case 60: goto label6;
            case 61: goto label2;
            case 62: goto label3;
            case 65535: goto label5;
            default: goto label7;
        };

     label0:
        $r7 = <org.jsoup.parser.TokeniserState$35: org.jsoup.parser.TokeniserState AfterAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label7;

     label1:
        $r8 = <org.jsoup.parser.TokeniserState$35: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label7;

     label2:
        $r9 = <org.jsoup.parser.TokeniserState$35: org.jsoup.parser.TokeniserState BeforeAttributeValue>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label7;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r10 = <org.jsoup.parser.TokeniserState$35: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label7;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r11 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r11.<org.jsoup.parser.Token$Tag: void appendAttributeName(char)>(65533);
        goto label7;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r12 = <org.jsoup.parser.TokeniserState$35: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r12);
        goto label7;

     label6:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r13 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r13.<org.jsoup.parser.Token$Tag: void appendAttributeName(char)>(c0);

     label7:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$36 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$36 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$36;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$36 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r7, $r8, $r11, $r13;
        org.jsoup.parser.Token$Tag $r6, $r9, $r10, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$36;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label4;
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label6;
            case 39: goto label6;
            case 47: goto label1;
            case 60: goto label6;
            case 61: goto label2;
            case 62: goto label3;
            case 65535: goto label5;
            default: goto label7;
        };

     label0:
        goto label8;

     label1:
        $r3 = <org.jsoup.parser.TokeniserState$36: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label8;

     label2:
        $r4 = <org.jsoup.parser.TokeniserState$36: org.jsoup.parser.TokeniserState BeforeAttributeValue>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label8;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r5 = <org.jsoup.parser.TokeniserState$36: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label8;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r6.<org.jsoup.parser.Token$Tag: void appendAttributeName(char)>(65533);
        $r7 = <org.jsoup.parser.TokeniserState$36: org.jsoup.parser.TokeniserState AttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label8;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r8 = <org.jsoup.parser.TokeniserState$36: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label8;

     label6:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r9.<org.jsoup.parser.Token$Tag: void newAttribute()>();
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r10.<org.jsoup.parser.Token$Tag: void appendAttributeName(char)>(c0);
        $r11 = <org.jsoup.parser.TokeniserState$36: org.jsoup.parser.TokeniserState AttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r11);
        goto label8;

     label7:
        $r12 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r12.<org.jsoup.parser.Token$Tag: void newAttribute()>();
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r13 = <org.jsoup.parser.TokeniserState$36: org.jsoup.parser.TokeniserState AttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r13);

     label8:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$37 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$37 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$37;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$37 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12;
        org.jsoup.parser.Token$Tag $r6, $r10;

        r0 := @this: org.jsoup.parser.TokeniserState$37;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label4;
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label1;
            case 38: goto label2;
            case 39: goto label3;
            case 60: goto label7;
            case 61: goto label7;
            case 62: goto label6;
            case 96: goto label7;
            case 65535: goto label5;
            default: goto label8;
        };

     label0:
        goto label9;

     label1:
        $r3 = <org.jsoup.parser.TokeniserState$37: org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label9;

     label2:
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r4 = <org.jsoup.parser.TokeniserState$37: org.jsoup.parser.TokeniserState AttributeValue_unquoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label9;

     label3:
        $r5 = <org.jsoup.parser.TokeniserState$37: org.jsoup.parser.TokeniserState AttributeValue_singleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label9;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r6.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(65533);
        $r7 = <org.jsoup.parser.TokeniserState$37: org.jsoup.parser.TokeniserState AttributeValue_unquoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label9;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r8 = <org.jsoup.parser.TokeniserState$37: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label9;

     label6:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r9 = <org.jsoup.parser.TokeniserState$37: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label9;

     label7:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r10.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(c0);
        $r11 = <org.jsoup.parser.TokeniserState$37: org.jsoup.parser.TokeniserState AttributeValue_unquoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r11);
        goto label9;

     label8:
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r12 = <org.jsoup.parser.TokeniserState$37: org.jsoup.parser.TokeniserState AttributeValue_unquoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r12);

     label9:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$38 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$38 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$38;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$38 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3;
        char c0, $c2;
        java.lang.Character r4, $r8;
        char[] $r5;
        int $i1;
        org.jsoup.parser.Token$Tag $r6, $r9, $r10, $r11;
        org.jsoup.parser.TokeniserState $r7, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$38;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r5 = newarray (char)[3];
        $r5[0] = 34;
        $r5[1] = 38;
        $r5[2] = 0;
        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r5);
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i1 <= 0 goto label0;

        $r6 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r6.<org.jsoup.parser.Token$Tag: void appendAttributeValue(java.lang.String)>(r3);

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label4;
            case 34: goto label1;
            case 38: goto label2;
            case 65535: goto label5;
            default: goto label6;
        };

     label1:
        $r7 = <org.jsoup.parser.TokeniserState$38: org.jsoup.parser.TokeniserState AfterAttributeValue_quoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label6;

     label2:
        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(34);
        r4 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: java.lang.Character consumeCharacterReference(java.lang.Character,boolean)>($r8, 1);
        if r4 == null goto label3;

        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $c2 = virtualinvoke r4.<java.lang.Character: char charValue()>();
        virtualinvoke $r9.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>($c2);
        goto label6;

     label3:
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r10.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(38);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r11 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r11.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(65533);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r12 = <org.jsoup.parser.TokeniserState$38: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r12);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$39 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$39 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$39;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$39 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3;
        char c0, $c2;
        java.lang.Character r4, $r8;
        char[] $r5;
        int $i1;
        org.jsoup.parser.Token$Tag $r6, $r9, $r10, $r11;
        org.jsoup.parser.TokeniserState $r7, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$39;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r5 = newarray (char)[3];
        $r5[0] = 39;
        $r5[1] = 38;
        $r5[2] = 0;
        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r5);
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i1 <= 0 goto label0;

        $r6 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r6.<org.jsoup.parser.Token$Tag: void appendAttributeValue(java.lang.String)>(r3);

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label4;
            case 38: goto label2;
            case 39: goto label1;
            case 65535: goto label5;
            default: goto label6;
        };

     label1:
        $r7 = <org.jsoup.parser.TokeniserState$39: org.jsoup.parser.TokeniserState AfterAttributeValue_quoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label6;

     label2:
        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(39);
        r4 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: java.lang.Character consumeCharacterReference(java.lang.Character,boolean)>($r8, 1);
        if r4 == null goto label3;

        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $c2 = virtualinvoke r4.<java.lang.Character: char charValue()>();
        virtualinvoke $r9.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>($c2);
        goto label6;

     label3:
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r10.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(38);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r11 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r11.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(65533);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r12 = <org.jsoup.parser.TokeniserState$39: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r12);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$4 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$4 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$4;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$4 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.Character r3;
        char $c0;
        org.jsoup.parser.TokeniserState $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$4;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        r3 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: java.lang.Character consumeCharacterReference(java.lang.Character,boolean)>(null, 0);
        if r3 != null goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(38);
        goto label1;

     label0:
        $c0 = virtualinvoke r3.<java.lang.Character: char charValue()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>($c0);

     label1:
        $r4 = <org.jsoup.parser.TokeniserState$4: org.jsoup.parser.TokeniserState Rcdata>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$40 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$40 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$40;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$40 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3;
        char c0, $c2;
        java.lang.Character r4, $r8;
        char[] $r5;
        int $i1;
        org.jsoup.parser.Token$Tag $r6, $r9, $r10, $r12, $r14;
        org.jsoup.parser.TokeniserState $r7, $r11, $r13;

        r0 := @this: org.jsoup.parser.TokeniserState$40;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $r5 = newarray (char)[12];
        $r5[0] = 9;
        $r5[1] = 10;
        $r5[2] = 12;
        $r5[3] = 32;
        $r5[4] = 38;
        $r5[5] = 62;
        $r5[6] = 0;
        $r5[7] = 34;
        $r5[8] = 39;
        $r5[9] = 60;
        $r5[10] = 61;
        $r5[11] = 96;
        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r5);
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i1 <= 0 goto label0;

        $r6 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r6.<org.jsoup.parser.Token$Tag: void appendAttributeValue(java.lang.String)>(r3);

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label5;
            case 9: goto label1;
            case 10: goto label1;
            case 12: goto label1;
            case 32: goto label1;
            case 34: goto label7;
            case 38: goto label2;
            case 39: goto label7;
            case 60: goto label7;
            case 61: goto label7;
            case 62: goto label4;
            case 96: goto label7;
            case 65535: goto label6;
            default: goto label8;
        };

     label1:
        $r7 = <org.jsoup.parser.TokeniserState$40: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label8;

     label2:
        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(62);
        r4 = virtualinvoke r1.<org.jsoup.parser.Tokeniser: java.lang.Character consumeCharacterReference(java.lang.Character,boolean)>($r8, 1);
        if r4 == null goto label3;

        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $c2 = virtualinvoke r4.<java.lang.Character: char charValue()>();
        virtualinvoke $r9.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>($c2);
        goto label8;

     label3:
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r10.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(38);
        goto label8;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r11 = <org.jsoup.parser.TokeniserState$40: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r11);
        goto label8;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r12 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r12.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(65533);
        goto label8;

     label6:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r13 = <org.jsoup.parser.TokeniserState$40: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r13);
        goto label8;

     label7:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r14 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        virtualinvoke $r14.<org.jsoup.parser.Token$Tag: void appendAttributeValue(char)>(c0);

     label8:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$41 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$41 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$41;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$41 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$41;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 47: goto label1;
            case 62: goto label2;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$41: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        $r4 = <org.jsoup.parser.TokeniserState$41: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r5 = <org.jsoup.parser.TokeniserState$41: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$41: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label5;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r7 = <org.jsoup.parser.TokeniserState$41: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$42 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$42 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$42;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$42 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.Token$Tag $r3;
        org.jsoup.parser.TokeniserState $r4, $r5, $r6;

        r0 := @this: org.jsoup.parser.TokeniserState$42;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 62: goto label0;
            case 65535: goto label1;
            default: goto label2;
        };

     label0:
        $r3 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;
        $r3.<org.jsoup.parser.Token$Tag: boolean selfClosing> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitTagPending()>();
        $r4 = <org.jsoup.parser.TokeniserState$42: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label3;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r5 = <org.jsoup.parser.TokeniserState$42: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label3;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$42: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);

     label3:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$43 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$43 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$43;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$43 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        org.jsoup.parser.Token$Comment r3, $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        org.jsoup.parser.TokeniserState $r8;

        r0 := @this: org.jsoup.parser.TokeniserState$43;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void unconsume()>();
        $r4 = new org.jsoup.parser.Token$Comment;
        specialinvoke $r4.<org.jsoup.parser.Token$Comment: void <init>()>();
        r3 = $r4;
        $r5 = r3.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r6 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeTo(char)>(62);
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>(r3);
        $r8 = <org.jsoup.parser.TokeniserState$43: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r8);
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$44 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$44 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$44;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$44 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0, $z1, $z2;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r6;

        r0 := @this: org.jsoup.parser.TokeniserState$44;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchConsume(java.lang.String)>("--");
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createCommentPending()>();
        $r3 = <org.jsoup.parser.TokeniserState$44: org.jsoup.parser.TokeniserState CommentStart>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label3;

     label0:
        $z1 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchConsumeIgnoreCase(java.lang.String)>("DOCTYPE");
        if $z1 == 0 goto label1;

        $r4 = <org.jsoup.parser.TokeniserState$44: org.jsoup.parser.TokeniserState Doctype>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label3;

     label1:
        $z2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchConsume(java.lang.String)>("[CDATA[");
        if $z2 == 0 goto label2;

        $r5 = <org.jsoup.parser.TokeniserState$44: org.jsoup.parser.TokeniserState CdataSection>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label3;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$44: org.jsoup.parser.TokeniserState BogusComment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r6);

     label3:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$45 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$45 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$45;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$45 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r7, $r8, $r9, $r13;
        org.jsoup.parser.Token$Comment $r4, $r10;
        java.lang.StringBuilder $r5, $r11;

        r0 := @this: org.jsoup.parser.TokeniserState$45;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 45: goto label0;
            case 62: goto label2;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$45: org.jsoup.parser.TokeniserState CommentStartDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r5 = $r4.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        $r7 = <org.jsoup.parser.TokeniserState$45: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r8 = <org.jsoup.parser.TokeniserState$45: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r9 = <org.jsoup.parser.TokeniserState$45: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label5;

     label4:
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r11 = $r10.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r13 = <org.jsoup.parser.TokeniserState$45: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r13);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$46 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$46 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$46;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$46 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r7, $r8, $r9, $r13;
        org.jsoup.parser.Token$Comment $r4, $r10;
        java.lang.StringBuilder $r5, $r11;

        r0 := @this: org.jsoup.parser.TokeniserState$46;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 45: goto label0;
            case 62: goto label2;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$46: org.jsoup.parser.TokeniserState CommentStartDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r5 = $r4.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        $r7 = <org.jsoup.parser.TokeniserState$46: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r8 = <org.jsoup.parser.TokeniserState$46: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r9 = <org.jsoup.parser.TokeniserState$46: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label5;

     label4:
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r11 = $r10.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r13 = <org.jsoup.parser.TokeniserState$46: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r13);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$47 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$47 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$47;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$47 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r7;
        org.jsoup.parser.Token$Comment $r4, $r8;
        java.lang.StringBuilder $r5, $r9;
        char[] $r10;
        java.lang.String $r11;

        r0 := @this: org.jsoup.parser.TokeniserState$47;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 45: goto label0;
            case 65535: goto label2;
            default: goto label3;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$47: org.jsoup.parser.TokeniserState CommentEndDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label4;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void advance()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r5 = $r4.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        goto label4;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r7 = <org.jsoup.parser.TokeniserState$47: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label4;

     label3:
        $r8 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r9 = $r8.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r10 = newarray (char)[2];
        $r10[0] = 45;
        $r10[1] = 0;
        $r11 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r10);
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label4:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$48 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$48 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$48;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$48 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r8, $r9, $r14;
        org.jsoup.parser.Token$Comment $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r11, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$48;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 45: goto label0;
            case 65535: goto label2;
            default: goto label3;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$48: org.jsoup.parser.TokeniserState CommentEnd>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label4;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r5 = $r4.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        $r8 = <org.jsoup.parser.TokeniserState$48: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label4;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r9 = <org.jsoup.parser.TokeniserState$48: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label4;

     label3:
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r11 = $r10.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r14 = <org.jsoup.parser.TokeniserState$48: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r14);

     label4:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$49 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$49 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$49;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$49 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r8, $r9, $r13, $r18;
        org.jsoup.parser.Token$Comment $r4, $r10, $r14;
        java.lang.StringBuilder $r5, $r6, $r11, $r15, $r16;

        r0 := @this: org.jsoup.parser.TokeniserState$49;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 33: goto label2;
            case 45: goto label3;
            case 62: goto label0;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r3 = <org.jsoup.parser.TokeniserState$49: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label6;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r5 = $r4.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        $r8 = <org.jsoup.parser.TokeniserState$49: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label6;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = <org.jsoup.parser.TokeniserState$49: org.jsoup.parser.TokeniserState CommentEndBang>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r11 = $r10.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r13 = <org.jsoup.parser.TokeniserState$49: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r13);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r14 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r15 = $r14.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r18 = <org.jsoup.parser.TokeniserState$49: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r18);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$5 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$5 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$5;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$5 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        org.jsoup.parser.TokeniserState $r3;
        java.lang.String r4;
        char $c0;
        org.jsoup.parser.Token$EOF $r5;
        char[] $r6;

        r0 := @this: org.jsoup.parser.TokeniserState$5;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch($c0)
        {
            case 0: goto label1;
            case 60: goto label0;
            case 65535: goto label2;
            default: goto label3;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$5: org.jsoup.parser.TokeniserState RawtextLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label4;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void advance()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        goto label4;

     label2:
        $r5 = new org.jsoup.parser.Token$EOF;
        specialinvoke $r5.<org.jsoup.parser.Token$EOF: void <init>()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r5);
        goto label4;

     label3:
        $r6 = newarray (char)[2];
        $r6[0] = 60;
        $r6[1] = 0;
        r4 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r6);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r4);

     label4:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$50 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$50 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$50;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$50 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.Token$Comment $r3, $r8, $r14;
        java.lang.StringBuilder $r4, $r9, $r10, $r15, $r16;
        org.jsoup.parser.TokeniserState $r6, $r7, $r12, $r13, $r18;

        r0 := @this: org.jsoup.parser.TokeniserState$50;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label2;
            case 45: goto label0;
            case 62: goto label1;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r4 = $r3.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--!");
        $r6 = <org.jsoup.parser.TokeniserState$50: org.jsoup.parser.TokeniserState CommentEndDash>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r7 = <org.jsoup.parser.TokeniserState$50: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r8 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r9 = $r8.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--!");
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        $r12 = <org.jsoup.parser.TokeniserState$50: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r12);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitCommentPending()>();
        $r13 = <org.jsoup.parser.TokeniserState$50: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r13);
        goto label5;

     label4:
        $r14 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Comment commentPending>;
        $r15 = $r14.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--!");
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r18 = <org.jsoup.parser.TokeniserState$50: org.jsoup.parser.TokeniserState Comment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r18);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$51 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$51 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$51;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$51 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r5, $r6;
        org.jsoup.parser.Token$Doctype $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$51;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 65535: goto label1;
            default: goto label2;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$51: org.jsoup.parser.TokeniserState BeforeDoctypeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label3;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createDoctypePending()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r4.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r5 = <org.jsoup.parser.TokeniserState$51: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label3;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$51: org.jsoup.parser.TokeniserState BeforeDoctypeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);

     label3:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$52 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$52 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$52;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$52 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        org.jsoup.parser.TokeniserState $r3, $r7, $r9, $r13;
        char c0;
        boolean $z0;
        org.jsoup.parser.Token$Doctype $r4, $r8, $r10;
        java.lang.StringBuilder $r5, $r11;

        r0 := @this: org.jsoup.parser.TokeniserState$52;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createDoctypePending()>();
        $r3 = <org.jsoup.parser.TokeniserState$52: org.jsoup.parser.TokeniserState DoctypeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        return;

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label2;
            case 9: goto label1;
            case 10: goto label1;
            case 12: goto label1;
            case 32: goto label1;
            case 65535: goto label3;
            default: goto label4;
        };

     label1:
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r5 = $r4.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name>;
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        $r7 = <org.jsoup.parser.TokeniserState$52: org.jsoup.parser.TokeniserState DoctypeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createDoctypePending()>();
        $r8 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r8.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r9 = <org.jsoup.parser.TokeniserState$52: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label5;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void createDoctypePending()>();
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r11 = $r10.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r13 = <org.jsoup.parser.TokeniserState$52: org.jsoup.parser.TokeniserState DoctypeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r13);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$53 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$53 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$53;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$53 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3, $r6;
        boolean $z0;
        org.jsoup.parser.Token$Doctype $r4, $r10, $r13, $r15;
        java.lang.StringBuilder $r5, $r11, $r16;
        char c0;
        org.jsoup.parser.TokeniserState $r8, $r9, $r14;

        r0 := @this: org.jsoup.parser.TokeniserState$53;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterSequence()>();
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r5 = $r4.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name>;
        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        return;

     label0:
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label3;
            case 9: goto label2;
            case 10: goto label2;
            case 12: goto label2;
            case 32: goto label2;
            case 62: goto label1;
            case 65535: goto label4;
            default: goto label5;
        };

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r8 = <org.jsoup.parser.TokeniserState$53: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label6;

     label2:
        $r9 = <org.jsoup.parser.TokeniserState$53: org.jsoup.parser.TokeniserState AfterDoctypeName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r11 = $r10.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r13 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r13.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r14 = <org.jsoup.parser.TokeniserState$53: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r14);
        goto label6;

     label5:
        $r15 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r16 = $r15.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name>;
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$54 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$54 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$54;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$54 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.parser.Token$Doctype $r3, $r9;
        org.jsoup.parser.TokeniserState $r4, $r6, $r7, $r8, $r10;
        char[] $r5;

        r0 := @this: org.jsoup.parser.TokeniserState$54;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r3 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r3.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r4 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        return;

     label0:
        $r5 = newarray (char)[4];
        $r5[0] = 9;
        $r5[1] = 10;
        $r5[2] = 12;
        $r5[3] = 32;
        $z1 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesAny(char[])>($r5);
        if $z1 == 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void advance()>();
        goto label5;

     label1:
        $z2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(62);
        if $z2 == 0 goto label2;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r6 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r6);
        goto label5;

     label2:
        $z3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchConsumeIgnoreCase(java.lang.String)>("PUBLIC");
        if $z3 == 0 goto label3;

        $r7 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label5;

     label3:
        $z4 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchConsumeIgnoreCase(java.lang.String)>("SYSTEM");
        if $z4 == 0 goto label4;

        $r8 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        $r10 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState BogusDoctype>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r10);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$55 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$55 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$55;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$55 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r7, $r9, $r11;
        org.jsoup.parser.Token$Doctype $r6, $r8, $r10;

        r0 := @this: org.jsoup.parser.TokeniserState$55;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label1;
            case 39: goto label2;
            case 62: goto label3;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$55: org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label6;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = <org.jsoup.parser.TokeniserState$55: org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label6;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r5 = <org.jsoup.parser.TokeniserState$55: org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r6.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r7 = <org.jsoup.parser.TokeniserState$55: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r8 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r8.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r9 = <org.jsoup.parser.TokeniserState$55: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r10.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        $r11 = <org.jsoup.parser.TokeniserState$55: org.jsoup.parser.TokeniserState BogusDoctype>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r11);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$56 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$56 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$56;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$56 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r6, $r8, $r10;
        org.jsoup.parser.Token$Doctype $r5, $r7, $r9;

        r0 := @this: org.jsoup.parser.TokeniserState$56;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label1;
            case 39: goto label2;
            case 62: goto label3;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        goto label6;

     label1:
        $r3 = <org.jsoup.parser.TokeniserState$56: org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label6;

     label2:
        $r4 = <org.jsoup.parser.TokeniserState$56: org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r5 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r5.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r6 = <org.jsoup.parser.TokeniserState$56: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r7.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r8 = <org.jsoup.parser.TokeniserState$56: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        $r10 = <org.jsoup.parser.TokeniserState$56: org.jsoup.parser.TokeniserState BogusDoctype>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$57 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$57 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$57;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$57 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r8, $r10;
        org.jsoup.parser.Token$Doctype $r4, $r7, $r9, $r11;
        java.lang.StringBuilder $r5, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$57;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 34: goto label0;
            case 62: goto label2;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$57: org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r5 = $r4.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder publicIdentifier>;
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r7.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r8 = <org.jsoup.parser.TokeniserState$57: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r10 = <org.jsoup.parser.TokeniserState$57: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label5;

     label4:
        $r11 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r12 = $r11.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder publicIdentifier>;
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$58 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$58 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$58;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$58 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r8, $r10;
        org.jsoup.parser.Token$Doctype $r4, $r7, $r9, $r11;
        java.lang.StringBuilder $r5, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$58;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 39: goto label0;
            case 62: goto label2;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$58: org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r5 = $r4.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder publicIdentifier>;
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r7.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r8 = <org.jsoup.parser.TokeniserState$58: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r10 = <org.jsoup.parser.TokeniserState$58: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label5;

     label4:
        $r11 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r12 = $r11.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder publicIdentifier>;
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$59 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$59 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$59;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$59 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r6, $r8, $r10;
        org.jsoup.parser.Token$Doctype $r7, $r9;

        r0 := @this: org.jsoup.parser.TokeniserState$59;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label2;
            case 39: goto label3;
            case 62: goto label1;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$59: org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label6;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r4 = <org.jsoup.parser.TokeniserState$59: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label6;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r5 = <org.jsoup.parser.TokeniserState$59: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$59: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r7.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r8 = <org.jsoup.parser.TokeniserState$59: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        $r10 = <org.jsoup.parser.TokeniserState$59: org.jsoup.parser.TokeniserState BogusDoctype>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$6 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$6 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$6;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$6 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        org.jsoup.parser.TokeniserState $r3;
        java.lang.String r4;
        char $c0;
        org.jsoup.parser.Token$EOF $r5;
        char[] $r6;

        r0 := @this: org.jsoup.parser.TokeniserState$6;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch($c0)
        {
            case 0: goto label1;
            case 60: goto label0;
            case 65535: goto label2;
            default: goto label3;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$6: org.jsoup.parser.TokeniserState ScriptDataLessthanSign>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label4;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void advance()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        goto label4;

     label2:
        $r5 = new org.jsoup.parser.Token$EOF;
        specialinvoke $r5.<org.jsoup.parser.Token$EOF: void <init>()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r5);
        goto label4;

     label3:
        $r6 = newarray (char)[2];
        $r6[0] = 60;
        $r6[1] = 0;
        r4 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToAny(char[])>($r6);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r4);

     label4:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$60 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$60 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$60;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$60 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r7, $r9;
        org.jsoup.parser.Token$Doctype $r6, $r8;

        r0 := @this: org.jsoup.parser.TokeniserState$60;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label2;
            case 39: goto label3;
            case 62: goto label1;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        goto label6;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r3 = <org.jsoup.parser.TokeniserState$60: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label6;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = <org.jsoup.parser.TokeniserState$60: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r5 = <org.jsoup.parser.TokeniserState$60: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r6.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r7 = <org.jsoup.parser.TokeniserState$60: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r8 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r8.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        $r9 = <org.jsoup.parser.TokeniserState$60: org.jsoup.parser.TokeniserState BogusDoctype>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$61 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$61 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$61;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$61 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r5, $r6, $r7, $r9;
        org.jsoup.parser.Token$Doctype $r4, $r8, $r10;

        r0 := @this: org.jsoup.parser.TokeniserState$61;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label2;
            case 39: goto label3;
            case 62: goto label1;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$61: org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label6;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r4.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r5 = <org.jsoup.parser.TokeniserState$61: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label6;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$61: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = <org.jsoup.parser.TokeniserState$61: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r8 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r8.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r9 = <org.jsoup.parser.TokeniserState$61: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r9);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r10 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r10.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$62 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$62 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$62;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$62 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4, $r6, $r8, $r10;
        org.jsoup.parser.Token$Doctype $r5, $r7, $r9;

        r0 := @this: org.jsoup.parser.TokeniserState$62;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 34: goto label1;
            case 39: goto label2;
            case 62: goto label3;
            case 65535: goto label4;
            default: goto label5;
        };

     label0:
        goto label6;

     label1:
        $r3 = <org.jsoup.parser.TokeniserState$62: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label6;

     label2:
        $r4 = <org.jsoup.parser.TokeniserState$62: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label6;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r5 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r5.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r6 = <org.jsoup.parser.TokeniserState$62: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);
        goto label6;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r7.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r8 = <org.jsoup.parser.TokeniserState$62: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label6;

     label5:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        $r10 = <org.jsoup.parser.TokeniserState$62: org.jsoup.parser.TokeniserState BogusDoctype>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);

     label6:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$63 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$63 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$63;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$63 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r8, $r10;
        org.jsoup.parser.Token$Doctype $r4, $r7, $r9, $r11;
        java.lang.StringBuilder $r5, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$63;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 34: goto label0;
            case 62: goto label2;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$63: org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r5 = $r4.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder systemIdentifier>;
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r7.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r8 = <org.jsoup.parser.TokeniserState$63: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r10 = <org.jsoup.parser.TokeniserState$63: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label5;

     label4:
        $r11 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r12 = $r11.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder systemIdentifier>;
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$64 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$64 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$64;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$64 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r8, $r10;
        org.jsoup.parser.Token$Doctype $r4, $r7, $r9, $r11;
        java.lang.StringBuilder $r5, $r12;

        r0 := @this: org.jsoup.parser.TokeniserState$64;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 0: goto label1;
            case 39: goto label0;
            case 62: goto label2;
            case 65535: goto label3;
            default: goto label4;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$64: org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r5 = $r4.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder systemIdentifier>;
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);
        goto label5;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r7.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r8 = <org.jsoup.parser.TokeniserState$64: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);
        goto label5;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r9 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r10 = <org.jsoup.parser.TokeniserState$64: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r10);
        goto label5;

     label4:
        $r11 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r12 = $r11.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder systemIdentifier>;
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$65 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$65 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$65;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$65 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r5, $r6;
        org.jsoup.parser.Token$Doctype $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$65;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 9: goto label0;
            case 10: goto label0;
            case 12: goto label0;
            case 32: goto label0;
            case 62: goto label1;
            case 65535: goto label2;
            default: goto label3;
        };

     label0:
        goto label4;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r3 = <org.jsoup.parser.TokeniserState$65: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label4;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        $r4 = r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;
        $r4.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r5 = <org.jsoup.parser.TokeniserState$65: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label4;

     label3:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$65: org.jsoup.parser.TokeniserState BogusDoctype>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r6);

     label4:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$66 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$66 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$66;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$66 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        char c0;
        org.jsoup.parser.TokeniserState $r3, $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$66;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char consume()>();
        lookupswitch(c0)
        {
            case 62: goto label0;
            case 65535: goto label1;
            default: goto label2;
        };

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r3 = <org.jsoup.parser.TokeniserState$66: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label2;

     label1:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();
        $r4 = <org.jsoup.parser.TokeniserState$66: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        goto label2;

     label2:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$67 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$67 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$67;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$67 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3;
        org.jsoup.parser.TokeniserState $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$67;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeTo(java.lang.String)>("]]>");
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r3);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchConsume(java.lang.String)>("]]>");
        $r4 = <org.jsoup.parser.TokeniserState$67: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$7 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$7 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$7;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$7 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        java.lang.String r3;
        char $c0;
        org.jsoup.parser.Token$EOF $r4;

        r0 := @this: org.jsoup.parser.TokeniserState$7;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch($c0)
        {
            case 0: goto label0;
            case 65535: goto label1;
            default: goto label2;
        };

     label0:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r2.<org.jsoup.parser.CharacterReader: void advance()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);
        goto label3;

     label1:
        $r4 = new org.jsoup.parser.Token$EOF;
        specialinvoke $r4.<org.jsoup.parser.Token$EOF: void <init>()>();
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r4);
        goto label3;

     label2:
        r3 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeTo(char)>(0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>(r3);

     label3:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$8 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$8 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$8;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$8 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        org.jsoup.parser.TokeniserState $r3, $r4, $r5, $r7, $r8;
        char $c0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TokeniserState$8;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $c0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: char current()>();
        lookupswitch($c0)
        {
            case 33: goto label0;
            case 47: goto label1;
            case 63: goto label2;
            default: goto label3;
        };

     label0:
        $r3 = <org.jsoup.parser.TokeniserState$8: org.jsoup.parser.TokeniserState MarkupDeclarationOpen>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r3);
        goto label5;

     label1:
        $r4 = <org.jsoup.parser.TokeniserState$8: org.jsoup.parser.TokeniserState EndTagOpen>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r4);
        goto label5;

     label2:
        $r5 = <org.jsoup.parser.TokeniserState$8: org.jsoup.parser.TokeniserState BogusComment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r5);
        goto label5;

     label3:
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z0 == 0 goto label4;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag createTagPending(boolean)>(1);
        $r7 = <org.jsoup.parser.TokeniserState$8: org.jsoup.parser.TokeniserState TagName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);
        goto label5;

     label4:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(char)>(60);
        $r8 = <org.jsoup.parser.TokeniserState$8: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);

     label5:
        return;
    }
}
final enum class org.jsoup.parser.TokeniserState$9 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$9 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState$9;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(r1, i0, null);
        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.TokeniserState$9 r0;
        org.jsoup.parser.Tokeniser r1;
        org.jsoup.parser.CharacterReader r2;
        boolean $z0, $z1, $z2;
        org.jsoup.parser.TokeniserState $r3, $r5, $r6, $r7;

        r0 := @this: org.jsoup.parser.TokeniserState$9;
        r1 := @parameter0: org.jsoup.parser.Tokeniser;
        r2 := @parameter1: org.jsoup.parser.CharacterReader;
        $z0 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("</");
        $r3 = <org.jsoup.parser.TokeniserState$9: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r3);
        goto label3;

     label0:
        $z1 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();
        if $z1 == 0 goto label1;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag createTagPending(boolean)>(0);
        $r5 = <org.jsoup.parser.TokeniserState$9: org.jsoup.parser.TokeniserState TagName>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r5);
        goto label3;

     label1:
        $z2 = virtualinvoke r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(62);
        if $z2 == 0 goto label2;

        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r6 = <org.jsoup.parser.TokeniserState$9: org.jsoup.parser.TokeniserState Data>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r6);
        goto label3;

     label2:
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);
        $r7 = <org.jsoup.parser.TokeniserState$9: org.jsoup.parser.TokeniserState BogusComment>;
        virtualinvoke r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r7);

     label3:
        return;
    }
}
abstract enum class org.jsoup.parser.TokeniserState extends java.lang.Enum
{
    public static final enum org.jsoup.parser.TokeniserState Data;
    public static final enum org.jsoup.parser.TokeniserState CharacterReferenceInData;
    public static final enum org.jsoup.parser.TokeniserState Rcdata;
    public static final enum org.jsoup.parser.TokeniserState CharacterReferenceInRcdata;
    public static final enum org.jsoup.parser.TokeniserState Rawtext;
    public static final enum org.jsoup.parser.TokeniserState ScriptData;
    public static final enum org.jsoup.parser.TokeniserState PLAINTEXT;
    public static final enum org.jsoup.parser.TokeniserState TagOpen;
    public static final enum org.jsoup.parser.TokeniserState EndTagOpen;
    public static final enum org.jsoup.parser.TokeniserState TagName;
    public static final enum org.jsoup.parser.TokeniserState RcdataLessthanSign;
    public static final enum org.jsoup.parser.TokeniserState RCDATAEndTagOpen;
    public static final enum org.jsoup.parser.TokeniserState RCDATAEndTagName;
    public static final enum org.jsoup.parser.TokeniserState RawtextLessthanSign;
    public static final enum org.jsoup.parser.TokeniserState RawtextEndTagOpen;
    public static final enum org.jsoup.parser.TokeniserState RawtextEndTagName;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataLessthanSign;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEndTagOpen;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEndTagName;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapeStart;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscaped;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedDash;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd;
    public static final enum org.jsoup.parser.TokeniserState BeforeAttributeName;
    public static final enum org.jsoup.parser.TokeniserState AttributeName;
    public static final enum org.jsoup.parser.TokeniserState AfterAttributeName;
    public static final enum org.jsoup.parser.TokeniserState BeforeAttributeValue;
    public static final enum org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted;
    public static final enum org.jsoup.parser.TokeniserState AttributeValue_singleQuoted;
    public static final enum org.jsoup.parser.TokeniserState AttributeValue_unquoted;
    public static final enum org.jsoup.parser.TokeniserState AfterAttributeValue_quoted;
    public static final enum org.jsoup.parser.TokeniserState SelfClosingStartTag;
    public static final enum org.jsoup.parser.TokeniserState BogusComment;
    public static final enum org.jsoup.parser.TokeniserState MarkupDeclarationOpen;
    public static final enum org.jsoup.parser.TokeniserState CommentStart;
    public static final enum org.jsoup.parser.TokeniserState CommentStartDash;
    public static final enum org.jsoup.parser.TokeniserState Comment;
    public static final enum org.jsoup.parser.TokeniserState CommentEndDash;
    public static final enum org.jsoup.parser.TokeniserState CommentEnd;
    public static final enum org.jsoup.parser.TokeniserState CommentEndBang;
    public static final enum org.jsoup.parser.TokeniserState Doctype;
    public static final enum org.jsoup.parser.TokeniserState BeforeDoctypeName;
    public static final enum org.jsoup.parser.TokeniserState DoctypeName;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypeName;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword;
    public static final enum org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier;
    public static final enum org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted;
    public static final enum org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier;
    public static final enum org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword;
    public static final enum org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier;
    public static final enum org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted;
    public static final enum org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier;
    public static final enum org.jsoup.parser.TokeniserState BogusDoctype;
    public static final enum org.jsoup.parser.TokeniserState CdataSection;
    private static final char nullChar;
    private static final char replacementChar;
    private static final java.lang.String replacementStr;
    private static final char eof;
    private static final org.jsoup.parser.TokeniserState[] $VALUES;

    public static org.jsoup.parser.TokeniserState[] values()
    {
        org.jsoup.parser.TokeniserState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.jsoup.parser.TokeniserState[]) $r1;
        return $r2;
    }

    public static org.jsoup.parser.TokeniserState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.jsoup.parser.TokeniserState $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/jsoup/parser/TokeniserState", r0);
        $r2 = (org.jsoup.parser.TokeniserState) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.jsoup.parser.TokeniserState;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    abstract void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader);

    void <init>(java.lang.String, int, org.jsoup.parser.TokeniserState$1)
    {
        org.jsoup.parser.TokeniserState r0;
        java.lang.String r1;
        int i0;
        org.jsoup.parser.TokeniserState$1 r2;

        r0 := @this: org.jsoup.parser.TokeniserState;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: org.jsoup.parser.TokeniserState$1;
        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <org.jsoup.parser.TokeniserState: java.lang.String replacementStr>;
        return $r0;
    }

    static void <clinit>()
    {
        org.jsoup.parser.TokeniserState$1 $r0;
        org.jsoup.parser.TokeniserState$2 $r1;
        org.jsoup.parser.TokeniserState$3 $r2;
        org.jsoup.parser.TokeniserState$4 $r3;
        org.jsoup.parser.TokeniserState$5 $r4;
        org.jsoup.parser.TokeniserState$6 $r5;
        org.jsoup.parser.TokeniserState$7 $r6;
        org.jsoup.parser.TokeniserState$8 $r7;
        org.jsoup.parser.TokeniserState$9 $r8;
        org.jsoup.parser.TokeniserState$10 $r9;
        org.jsoup.parser.TokeniserState$11 $r10;
        org.jsoup.parser.TokeniserState$12 $r11;
        org.jsoup.parser.TokeniserState$13 $r12;
        org.jsoup.parser.TokeniserState$14 $r13;
        org.jsoup.parser.TokeniserState$15 $r14;
        org.jsoup.parser.TokeniserState$16 $r15;
        org.jsoup.parser.TokeniserState$17 $r16;
        org.jsoup.parser.TokeniserState$18 $r17;
        org.jsoup.parser.TokeniserState$19 $r18;
        org.jsoup.parser.TokeniserState$20 $r19;
        org.jsoup.parser.TokeniserState$21 $r20;
        org.jsoup.parser.TokeniserState$22 $r21;
        org.jsoup.parser.TokeniserState$23 $r22;
        org.jsoup.parser.TokeniserState$24 $r23;
        org.jsoup.parser.TokeniserState$25 $r24;
        org.jsoup.parser.TokeniserState$26 $r25;
        org.jsoup.parser.TokeniserState$27 $r26;
        org.jsoup.parser.TokeniserState$28 $r27;
        org.jsoup.parser.TokeniserState$29 $r28;
        org.jsoup.parser.TokeniserState$30 $r29;
        org.jsoup.parser.TokeniserState$31 $r30;
        org.jsoup.parser.TokeniserState$32 $r31;
        org.jsoup.parser.TokeniserState$33 $r32;
        org.jsoup.parser.TokeniserState$34 $r33;
        org.jsoup.parser.TokeniserState$35 $r34;
        org.jsoup.parser.TokeniserState$36 $r35;
        org.jsoup.parser.TokeniserState$37 $r36;
        org.jsoup.parser.TokeniserState$38 $r37;
        org.jsoup.parser.TokeniserState$39 $r38;
        org.jsoup.parser.TokeniserState$40 $r39;
        org.jsoup.parser.TokeniserState$41 $r40;
        org.jsoup.parser.TokeniserState$42 $r41;
        org.jsoup.parser.TokeniserState$43 $r42;
        org.jsoup.parser.TokeniserState$44 $r43;
        org.jsoup.parser.TokeniserState$45 $r44;
        org.jsoup.parser.TokeniserState$46 $r45;
        org.jsoup.parser.TokeniserState$47 $r46;
        org.jsoup.parser.TokeniserState$48 $r47;
        org.jsoup.parser.TokeniserState$49 $r48;
        org.jsoup.parser.TokeniserState$50 $r49;
        org.jsoup.parser.TokeniserState$51 $r50;
        org.jsoup.parser.TokeniserState$52 $r51;
        org.jsoup.parser.TokeniserState$53 $r52;
        org.jsoup.parser.TokeniserState$54 $r53;
        org.jsoup.parser.TokeniserState$55 $r54;
        org.jsoup.parser.TokeniserState$56 $r55;
        org.jsoup.parser.TokeniserState$57 $r56;
        org.jsoup.parser.TokeniserState$58 $r57;
        org.jsoup.parser.TokeniserState$59 $r58;
        org.jsoup.parser.TokeniserState$60 $r59;
        org.jsoup.parser.TokeniserState$61 $r60;
        org.jsoup.parser.TokeniserState$62 $r61;
        org.jsoup.parser.TokeniserState$63 $r62;
        org.jsoup.parser.TokeniserState$64 $r63;
        org.jsoup.parser.TokeniserState$65 $r64;
        org.jsoup.parser.TokeniserState$66 $r65;
        org.jsoup.parser.TokeniserState$67 $r66;
        org.jsoup.parser.TokeniserState[] $r67;
        org.jsoup.parser.TokeniserState $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134;
        java.lang.String $r135;

        $r0 = new org.jsoup.parser.TokeniserState$1;
        specialinvoke $r0.<org.jsoup.parser.TokeniserState$1: void <init>(java.lang.String,int)>("Data", 0);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Data> = $r0;
        $r1 = new org.jsoup.parser.TokeniserState$2;
        specialinvoke $r1.<org.jsoup.parser.TokeniserState$2: void <init>(java.lang.String,int)>("CharacterReferenceInData", 1);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CharacterReferenceInData> = $r1;
        $r2 = new org.jsoup.parser.TokeniserState$3;
        specialinvoke $r2.<org.jsoup.parser.TokeniserState$3: void <init>(java.lang.String,int)>("Rcdata", 2);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rcdata> = $r2;
        $r3 = new org.jsoup.parser.TokeniserState$4;
        specialinvoke $r3.<org.jsoup.parser.TokeniserState$4: void <init>(java.lang.String,int)>("CharacterReferenceInRcdata", 3);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CharacterReferenceInRcdata> = $r3;
        $r4 = new org.jsoup.parser.TokeniserState$5;
        specialinvoke $r4.<org.jsoup.parser.TokeniserState$5: void <init>(java.lang.String,int)>("Rawtext", 4);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rawtext> = $r4;
        $r5 = new org.jsoup.parser.TokeniserState$6;
        specialinvoke $r5.<org.jsoup.parser.TokeniserState$6: void <init>(java.lang.String,int)>("ScriptData", 5);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptData> = $r5;
        $r6 = new org.jsoup.parser.TokeniserState$7;
        specialinvoke $r6.<org.jsoup.parser.TokeniserState$7: void <init>(java.lang.String,int)>("PLAINTEXT", 6);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState PLAINTEXT> = $r6;
        $r7 = new org.jsoup.parser.TokeniserState$8;
        specialinvoke $r7.<org.jsoup.parser.TokeniserState$8: void <init>(java.lang.String,int)>("TagOpen", 7);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState TagOpen> = $r7;
        $r8 = new org.jsoup.parser.TokeniserState$9;
        specialinvoke $r8.<org.jsoup.parser.TokeniserState$9: void <init>(java.lang.String,int)>("EndTagOpen", 8);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState EndTagOpen> = $r8;
        $r9 = new org.jsoup.parser.TokeniserState$10;
        specialinvoke $r9.<org.jsoup.parser.TokeniserState$10: void <init>(java.lang.String,int)>("TagName", 9);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState TagName> = $r9;
        $r10 = new org.jsoup.parser.TokeniserState$11;
        specialinvoke $r10.<org.jsoup.parser.TokeniserState$11: void <init>(java.lang.String,int)>("RcdataLessthanSign", 10);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RcdataLessthanSign> = $r10;
        $r11 = new org.jsoup.parser.TokeniserState$12;
        specialinvoke $r11.<org.jsoup.parser.TokeniserState$12: void <init>(java.lang.String,int)>("RCDATAEndTagOpen", 11);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RCDATAEndTagOpen> = $r11;
        $r12 = new org.jsoup.parser.TokeniserState$13;
        specialinvoke $r12.<org.jsoup.parser.TokeniserState$13: void <init>(java.lang.String,int)>("RCDATAEndTagName", 12);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RCDATAEndTagName> = $r12;
        $r13 = new org.jsoup.parser.TokeniserState$14;
        specialinvoke $r13.<org.jsoup.parser.TokeniserState$14: void <init>(java.lang.String,int)>("RawtextLessthanSign", 13);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RawtextLessthanSign> = $r13;
        $r14 = new org.jsoup.parser.TokeniserState$15;
        specialinvoke $r14.<org.jsoup.parser.TokeniserState$15: void <init>(java.lang.String,int)>("RawtextEndTagOpen", 14);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RawtextEndTagOpen> = $r14;
        $r15 = new org.jsoup.parser.TokeniserState$16;
        specialinvoke $r15.<org.jsoup.parser.TokeniserState$16: void <init>(java.lang.String,int)>("RawtextEndTagName", 15);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RawtextEndTagName> = $r15;
        $r16 = new org.jsoup.parser.TokeniserState$17;
        specialinvoke $r16.<org.jsoup.parser.TokeniserState$17: void <init>(java.lang.String,int)>("ScriptDataLessthanSign", 16);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataLessthanSign> = $r16;
        $r17 = new org.jsoup.parser.TokeniserState$18;
        specialinvoke $r17.<org.jsoup.parser.TokeniserState$18: void <init>(java.lang.String,int)>("ScriptDataEndTagOpen", 17);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEndTagOpen> = $r17;
        $r18 = new org.jsoup.parser.TokeniserState$19;
        specialinvoke $r18.<org.jsoup.parser.TokeniserState$19: void <init>(java.lang.String,int)>("ScriptDataEndTagName", 18);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEndTagName> = $r18;
        $r19 = new org.jsoup.parser.TokeniserState$20;
        specialinvoke $r19.<org.jsoup.parser.TokeniserState$20: void <init>(java.lang.String,int)>("ScriptDataEscapeStart", 19);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapeStart> = $r19;
        $r20 = new org.jsoup.parser.TokeniserState$21;
        specialinvoke $r20.<org.jsoup.parser.TokeniserState$21: void <init>(java.lang.String,int)>("ScriptDataEscapeStartDash", 20);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash> = $r20;
        $r21 = new org.jsoup.parser.TokeniserState$22;
        specialinvoke $r21.<org.jsoup.parser.TokeniserState$22: void <init>(java.lang.String,int)>("ScriptDataEscaped", 21);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscaped> = $r21;
        $r22 = new org.jsoup.parser.TokeniserState$23;
        specialinvoke $r22.<org.jsoup.parser.TokeniserState$23: void <init>(java.lang.String,int)>("ScriptDataEscapedDash", 22);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedDash> = $r22;
        $r23 = new org.jsoup.parser.TokeniserState$24;
        specialinvoke $r23.<org.jsoup.parser.TokeniserState$24: void <init>(java.lang.String,int)>("ScriptDataEscapedDashDash", 23);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash> = $r23;
        $r24 = new org.jsoup.parser.TokeniserState$25;
        specialinvoke $r24.<org.jsoup.parser.TokeniserState$25: void <init>(java.lang.String,int)>("ScriptDataEscapedLessthanSign", 24);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign> = $r24;
        $r25 = new org.jsoup.parser.TokeniserState$26;
        specialinvoke $r25.<org.jsoup.parser.TokeniserState$26: void <init>(java.lang.String,int)>("ScriptDataEscapedEndTagOpen", 25);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen> = $r25;
        $r26 = new org.jsoup.parser.TokeniserState$27;
        specialinvoke $r26.<org.jsoup.parser.TokeniserState$27: void <init>(java.lang.String,int)>("ScriptDataEscapedEndTagName", 26);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName> = $r26;
        $r27 = new org.jsoup.parser.TokeniserState$28;
        specialinvoke $r27.<org.jsoup.parser.TokeniserState$28: void <init>(java.lang.String,int)>("ScriptDataDoubleEscapeStart", 27);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart> = $r27;
        $r28 = new org.jsoup.parser.TokeniserState$29;
        specialinvoke $r28.<org.jsoup.parser.TokeniserState$29: void <init>(java.lang.String,int)>("ScriptDataDoubleEscaped", 28);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped> = $r28;
        $r29 = new org.jsoup.parser.TokeniserState$30;
        specialinvoke $r29.<org.jsoup.parser.TokeniserState$30: void <init>(java.lang.String,int)>("ScriptDataDoubleEscapedDash", 29);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash> = $r29;
        $r30 = new org.jsoup.parser.TokeniserState$31;
        specialinvoke $r30.<org.jsoup.parser.TokeniserState$31: void <init>(java.lang.String,int)>("ScriptDataDoubleEscapedDashDash", 30);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash> = $r30;
        $r31 = new org.jsoup.parser.TokeniserState$32;
        specialinvoke $r31.<org.jsoup.parser.TokeniserState$32: void <init>(java.lang.String,int)>("ScriptDataDoubleEscapedLessthanSign", 31);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign> = $r31;
        $r32 = new org.jsoup.parser.TokeniserState$33;
        specialinvoke $r32.<org.jsoup.parser.TokeniserState$33: void <init>(java.lang.String,int)>("ScriptDataDoubleEscapeEnd", 32);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd> = $r32;
        $r33 = new org.jsoup.parser.TokeniserState$34;
        specialinvoke $r33.<org.jsoup.parser.TokeniserState$34: void <init>(java.lang.String,int)>("BeforeAttributeName", 33);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeAttributeName> = $r33;
        $r34 = new org.jsoup.parser.TokeniserState$35;
        specialinvoke $r34.<org.jsoup.parser.TokeniserState$35: void <init>(java.lang.String,int)>("AttributeName", 34);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AttributeName> = $r34;
        $r35 = new org.jsoup.parser.TokeniserState$36;
        specialinvoke $r35.<org.jsoup.parser.TokeniserState$36: void <init>(java.lang.String,int)>("AfterAttributeName", 35);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterAttributeName> = $r35;
        $r36 = new org.jsoup.parser.TokeniserState$37;
        specialinvoke $r36.<org.jsoup.parser.TokeniserState$37: void <init>(java.lang.String,int)>("BeforeAttributeValue", 36);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeAttributeValue> = $r36;
        $r37 = new org.jsoup.parser.TokeniserState$38;
        specialinvoke $r37.<org.jsoup.parser.TokeniserState$38: void <init>(java.lang.String,int)>("AttributeValue_doubleQuoted", 37);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted> = $r37;
        $r38 = new org.jsoup.parser.TokeniserState$39;
        specialinvoke $r38.<org.jsoup.parser.TokeniserState$39: void <init>(java.lang.String,int)>("AttributeValue_singleQuoted", 38);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AttributeValue_singleQuoted> = $r38;
        $r39 = new org.jsoup.parser.TokeniserState$40;
        specialinvoke $r39.<org.jsoup.parser.TokeniserState$40: void <init>(java.lang.String,int)>("AttributeValue_unquoted", 39);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AttributeValue_unquoted> = $r39;
        $r40 = new org.jsoup.parser.TokeniserState$41;
        specialinvoke $r40.<org.jsoup.parser.TokeniserState$41: void <init>(java.lang.String,int)>("AfterAttributeValue_quoted", 40);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterAttributeValue_quoted> = $r40;
        $r41 = new org.jsoup.parser.TokeniserState$42;
        specialinvoke $r41.<org.jsoup.parser.TokeniserState$42: void <init>(java.lang.String,int)>("SelfClosingStartTag", 41);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState SelfClosingStartTag> = $r41;
        $r42 = new org.jsoup.parser.TokeniserState$43;
        specialinvoke $r42.<org.jsoup.parser.TokeniserState$43: void <init>(java.lang.String,int)>("BogusComment", 42);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BogusComment> = $r42;
        $r43 = new org.jsoup.parser.TokeniserState$44;
        specialinvoke $r43.<org.jsoup.parser.TokeniserState$44: void <init>(java.lang.String,int)>("MarkupDeclarationOpen", 43);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState MarkupDeclarationOpen> = $r43;
        $r44 = new org.jsoup.parser.TokeniserState$45;
        specialinvoke $r44.<org.jsoup.parser.TokeniserState$45: void <init>(java.lang.String,int)>("CommentStart", 44);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentStart> = $r44;
        $r45 = new org.jsoup.parser.TokeniserState$46;
        specialinvoke $r45.<org.jsoup.parser.TokeniserState$46: void <init>(java.lang.String,int)>("CommentStartDash", 45);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentStartDash> = $r45;
        $r46 = new org.jsoup.parser.TokeniserState$47;
        specialinvoke $r46.<org.jsoup.parser.TokeniserState$47: void <init>(java.lang.String,int)>("Comment", 46);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Comment> = $r46;
        $r47 = new org.jsoup.parser.TokeniserState$48;
        specialinvoke $r47.<org.jsoup.parser.TokeniserState$48: void <init>(java.lang.String,int)>("CommentEndDash", 47);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentEndDash> = $r47;
        $r48 = new org.jsoup.parser.TokeniserState$49;
        specialinvoke $r48.<org.jsoup.parser.TokeniserState$49: void <init>(java.lang.String,int)>("CommentEnd", 48);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentEnd> = $r48;
        $r49 = new org.jsoup.parser.TokeniserState$50;
        specialinvoke $r49.<org.jsoup.parser.TokeniserState$50: void <init>(java.lang.String,int)>("CommentEndBang", 49);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentEndBang> = $r49;
        $r50 = new org.jsoup.parser.TokeniserState$51;
        specialinvoke $r50.<org.jsoup.parser.TokeniserState$51: void <init>(java.lang.String,int)>("Doctype", 50);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Doctype> = $r50;
        $r51 = new org.jsoup.parser.TokeniserState$52;
        specialinvoke $r51.<org.jsoup.parser.TokeniserState$52: void <init>(java.lang.String,int)>("BeforeDoctypeName", 51);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeDoctypeName> = $r51;
        $r52 = new org.jsoup.parser.TokeniserState$53;
        specialinvoke $r52.<org.jsoup.parser.TokeniserState$53: void <init>(java.lang.String,int)>("DoctypeName", 52);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypeName> = $r52;
        $r53 = new org.jsoup.parser.TokeniserState$54;
        specialinvoke $r53.<org.jsoup.parser.TokeniserState$54: void <init>(java.lang.String,int)>("AfterDoctypeName", 53);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypeName> = $r53;
        $r54 = new org.jsoup.parser.TokeniserState$55;
        specialinvoke $r54.<org.jsoup.parser.TokeniserState$55: void <init>(java.lang.String,int)>("AfterDoctypePublicKeyword", 54);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword> = $r54;
        $r55 = new org.jsoup.parser.TokeniserState$56;
        specialinvoke $r55.<org.jsoup.parser.TokeniserState$56: void <init>(java.lang.String,int)>("BeforeDoctypePublicIdentifier", 55);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier> = $r55;
        $r56 = new org.jsoup.parser.TokeniserState$57;
        specialinvoke $r56.<org.jsoup.parser.TokeniserState$57: void <init>(java.lang.String,int)>("DoctypePublicIdentifier_doubleQuoted", 56);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted> = $r56;
        $r57 = new org.jsoup.parser.TokeniserState$58;
        specialinvoke $r57.<org.jsoup.parser.TokeniserState$58: void <init>(java.lang.String,int)>("DoctypePublicIdentifier_singleQuoted", 57);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted> = $r57;
        $r58 = new org.jsoup.parser.TokeniserState$59;
        specialinvoke $r58.<org.jsoup.parser.TokeniserState$59: void <init>(java.lang.String,int)>("AfterDoctypePublicIdentifier", 58);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier> = $r58;
        $r59 = new org.jsoup.parser.TokeniserState$60;
        specialinvoke $r59.<org.jsoup.parser.TokeniserState$60: void <init>(java.lang.String,int)>("BetweenDoctypePublicAndSystemIdentifiers", 59);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers> = $r59;
        $r60 = new org.jsoup.parser.TokeniserState$61;
        specialinvoke $r60.<org.jsoup.parser.TokeniserState$61: void <init>(java.lang.String,int)>("AfterDoctypeSystemKeyword", 60);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword> = $r60;
        $r61 = new org.jsoup.parser.TokeniserState$62;
        specialinvoke $r61.<org.jsoup.parser.TokeniserState$62: void <init>(java.lang.String,int)>("BeforeDoctypeSystemIdentifier", 61);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier> = $r61;
        $r62 = new org.jsoup.parser.TokeniserState$63;
        specialinvoke $r62.<org.jsoup.parser.TokeniserState$63: void <init>(java.lang.String,int)>("DoctypeSystemIdentifier_doubleQuoted", 62);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted> = $r62;
        $r63 = new org.jsoup.parser.TokeniserState$64;
        specialinvoke $r63.<org.jsoup.parser.TokeniserState$64: void <init>(java.lang.String,int)>("DoctypeSystemIdentifier_singleQuoted", 63);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted> = $r63;
        $r64 = new org.jsoup.parser.TokeniserState$65;
        specialinvoke $r64.<org.jsoup.parser.TokeniserState$65: void <init>(java.lang.String,int)>("AfterDoctypeSystemIdentifier", 64);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier> = $r64;
        $r65 = new org.jsoup.parser.TokeniserState$66;
        specialinvoke $r65.<org.jsoup.parser.TokeniserState$66: void <init>(java.lang.String,int)>("BogusDoctype", 65);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BogusDoctype> = $r65;
        $r66 = new org.jsoup.parser.TokeniserState$67;
        specialinvoke $r66.<org.jsoup.parser.TokeniserState$67: void <init>(java.lang.String,int)>("CdataSection", 66);
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CdataSection> = $r66;
        $r67 = newarray (org.jsoup.parser.TokeniserState)[67];
        $r68 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Data>;
        $r67[0] = $r68;
        $r69 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CharacterReferenceInData>;
        $r67[1] = $r69;
        $r70 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rcdata>;
        $r67[2] = $r70;
        $r71 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CharacterReferenceInRcdata>;
        $r67[3] = $r71;
        $r72 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Rawtext>;
        $r67[4] = $r72;
        $r73 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptData>;
        $r67[5] = $r73;
        $r74 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState PLAINTEXT>;
        $r67[6] = $r74;
        $r75 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState TagOpen>;
        $r67[7] = $r75;
        $r76 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState EndTagOpen>;
        $r67[8] = $r76;
        $r77 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState TagName>;
        $r67[9] = $r77;
        $r78 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RcdataLessthanSign>;
        $r67[10] = $r78;
        $r79 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RCDATAEndTagOpen>;
        $r67[11] = $r79;
        $r80 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RCDATAEndTagName>;
        $r67[12] = $r80;
        $r81 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RawtextLessthanSign>;
        $r67[13] = $r81;
        $r82 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RawtextEndTagOpen>;
        $r67[14] = $r82;
        $r83 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState RawtextEndTagName>;
        $r67[15] = $r83;
        $r84 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataLessthanSign>;
        $r67[16] = $r84;
        $r85 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEndTagOpen>;
        $r67[17] = $r85;
        $r86 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEndTagName>;
        $r67[18] = $r86;
        $r87 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapeStart>;
        $r67[19] = $r87;
        $r88 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash>;
        $r67[20] = $r88;
        $r89 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscaped>;
        $r67[21] = $r89;
        $r90 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedDash>;
        $r67[22] = $r90;
        $r91 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash>;
        $r67[23] = $r91;
        $r92 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign>;
        $r67[24] = $r92;
        $r93 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen>;
        $r67[25] = $r93;
        $r94 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName>;
        $r67[26] = $r94;
        $r95 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart>;
        $r67[27] = $r95;
        $r96 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped>;
        $r67[28] = $r96;
        $r97 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash>;
        $r67[29] = $r97;
        $r98 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash>;
        $r67[30] = $r98;
        $r99 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign>;
        $r67[31] = $r99;
        $r100 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd>;
        $r67[32] = $r100;
        $r101 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeAttributeName>;
        $r67[33] = $r101;
        $r102 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AttributeName>;
        $r67[34] = $r102;
        $r103 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterAttributeName>;
        $r67[35] = $r103;
        $r104 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeAttributeValue>;
        $r67[36] = $r104;
        $r105 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted>;
        $r67[37] = $r105;
        $r106 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AttributeValue_singleQuoted>;
        $r67[38] = $r106;
        $r107 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AttributeValue_unquoted>;
        $r67[39] = $r107;
        $r108 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterAttributeValue_quoted>;
        $r67[40] = $r108;
        $r109 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState SelfClosingStartTag>;
        $r67[41] = $r109;
        $r110 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BogusComment>;
        $r67[42] = $r110;
        $r111 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState MarkupDeclarationOpen>;
        $r67[43] = $r111;
        $r112 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentStart>;
        $r67[44] = $r112;
        $r113 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentStartDash>;
        $r67[45] = $r113;
        $r114 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Comment>;
        $r67[46] = $r114;
        $r115 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentEndDash>;
        $r67[47] = $r115;
        $r116 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentEnd>;
        $r67[48] = $r116;
        $r117 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CommentEndBang>;
        $r67[49] = $r117;
        $r118 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState Doctype>;
        $r67[50] = $r118;
        $r119 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeDoctypeName>;
        $r67[51] = $r119;
        $r120 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypeName>;
        $r67[52] = $r120;
        $r121 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypeName>;
        $r67[53] = $r121;
        $r122 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword>;
        $r67[54] = $r122;
        $r123 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier>;
        $r67[55] = $r123;
        $r124 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted>;
        $r67[56] = $r124;
        $r125 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted>;
        $r67[57] = $r125;
        $r126 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier>;
        $r67[58] = $r126;
        $r127 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers>;
        $r67[59] = $r127;
        $r128 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword>;
        $r67[60] = $r128;
        $r129 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier>;
        $r67[61] = $r129;
        $r130 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted>;
        $r67[62] = $r130;
        $r131 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted>;
        $r67[63] = $r131;
        $r132 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier>;
        $r67[64] = $r132;
        $r133 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState BogusDoctype>;
        $r67[65] = $r133;
        $r134 = <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState CdataSection>;
        $r67[66] = $r134;
        <org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState[] $VALUES> = $r67;
        $r135 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(65533);
        <org.jsoup.parser.TokeniserState: java.lang.String replacementStr> = $r135;
        return;
    }
}
public class org.jsoup.parser.TokenQueue extends java.lang.Object
{
    private java.lang.String queue;
    private int pos;
    private static final char ESC;

    public void <init>(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.parser.TokenQueue: int pos> = 0;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r0.<org.jsoup.parser.TokenQueue: java.lang.String queue> = r1;
        return;
    }

    public boolean isEmpty()
    {
        org.jsoup.parser.TokenQueue r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $i0 = specialinvoke r0.<org.jsoup.parser.TokenQueue: int remainingLength()>();
        if $i0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private int remainingLength()
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $r1 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();
        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i2 = $i0 - $i1;
        return $i2;
    }

    public char peek()
    {
        org.jsoup.parser.TokenQueue r0;
        boolean $z0;
        char $c0;
        java.lang.String $r1;
        int $i1;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $c0 = 0;
        goto label1;

     label0:
        $r1 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

     label1:
        return $c0;
    }

    public void addFirst(java.lang.Character)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.Character r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.Character;
        $r2 = virtualinvoke r1.<java.lang.Character: java.lang.String toString()>();
        virtualinvoke r0.<org.jsoup.parser.TokenQueue: void addFirst(java.lang.String)>($r2);
        return;
    }

    public void addFirst(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1, $r4, $r5, $r7;
        java.lang.StringBuilder $r2, $r3, $r6;
        int $i0;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r4 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<org.jsoup.parser.TokenQueue: java.lang.String queue> = $r7;
        r0.<org.jsoup.parser.TokenQueue: int pos> = 0;
        return;
    }

    public boolean matches(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i0, r1, 0, $i1);
        return $z0;
    }

    public boolean matchesCS(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i0);
        return $z0;
    }

    public transient boolean matchesAny(java.lang.String[])
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String[];
        r2 = r1;
        i0 = lengthof r2;
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(r3);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return 0;
    }

    public transient boolean matchesAny(char[])
    {
        org.jsoup.parser.TokenQueue r0;
        char[] r1, r2;
        int i0, i1, $i3;
        char c2, $c4;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: char[];
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        return 0;

     label0:
        r2 = r1;
        i0 = lengthof r2;
        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        c2 = r2[i1];
        $r3 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $c4 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i3);
        if $c4 != c2 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        return 0;
    }

    public boolean matchesStartTag()
    {
        org.jsoup.parser.TokenQueue r0;
        int $i0, $i1, $i3, $i4;
        java.lang.String $r1, $r2;
        char $c2, $c5;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $i0 = specialinvoke r0.<org.jsoup.parser.TokenQueue: int remainingLength()>();
        if $i0 < 2 goto label0;

        $r1 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);
        if $c2 != 60 goto label0;

        $r2 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i4 = $i3 + 1;
        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i4);
        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c5);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public boolean matchChomp(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = $i0 + $i1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i2;
        return 1;

     label0:
        return 0;
    }

    public boolean matchesWhitespace()
    {
        org.jsoup.parser.TokenQueue r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;
        int $i0;
        char $c1;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $r1 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);
        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean isWhitespace(int)>($c1);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public boolean matchesWord()
    {
        org.jsoup.parser.TokenQueue r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;
        int $i0;
        char $c1;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $r1 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);
        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c1);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public void advance()
    {
        org.jsoup.parser.TokenQueue r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i1 = $i0 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i1;

     label0:
        return;
    }

    public char consume()
    {
        org.jsoup.parser.TokenQueue r0;
        int $i0, $i1;
        java.lang.String $r2;
        char $c2;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $r2 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i1 = $i0 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i1;
        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);
        return $c2;
    }

    public void consume(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.IllegalStateException $r2, $r3;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(r1);
        if $z0 != 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Queue did not match expected sequence");
        throw $r2;

     label0:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = specialinvoke r0.<org.jsoup.parser.TokenQueue: int remainingLength()>();
        if i0 <= $i1 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Queue not long enough to consume sequence");
        throw $r3;

     label1:
        $i2 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i3 = $i2 + i0;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i3;
        return;
    }

    public java.lang.String consumeTo(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1, r2, $r3, $r4, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String,int)>(r1, $i1);
        if i0 == -1 goto label0;

        $r4 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i2 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i2, i0);
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i4 = virtualinvoke r2.<java.lang.String: int length()>();
        $i5 = $i3 + $i4;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i5;
        return r2;

     label0:
        $r6 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        return $r6;
    }

    public java.lang.String consumeToIgnoreCase(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1, r2, $r3, $r4, $r5, $r7, $r10, r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1, $z2;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();
        z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label0:
        $z1 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z1 != 0 goto label6;

        $z2 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(r1);
        if $z2 == 0 goto label1;

        goto label6;

     label1:
        if z0 == 0 goto label5;

        $r5 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i2 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i3 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String,int)>(r2, $i2);
        $i4 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        i1 = $i3 - $i4;
        if i1 != 0 goto label2;

        $i5 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i6 = $i5 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i6;
        goto label4;

     label2:
        if i1 >= 0 goto label3;

        $r7 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i7 = virtualinvoke $r7.<java.lang.String: int length()>();
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i7;
        goto label4;

     label3:
        $i8 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i9 = $i8 + i1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i9;

     label4:
        goto label0;

     label5:
        $i10 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i11 = $i10 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i11;
        goto label0;

     label6:
        $r10 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i12 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(i0, $i12);
        return r11;
    }

    public transient java.lang.String consumeToAny(java.lang.String[])
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String[] r1;
        int i0, $i1, $i2, $i3;
        java.lang.String r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String[];
        i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>(r1);
        if $z1 != 0 goto label1;

        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i2 = $i1 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i2;
        goto label0;

     label1:
        $r4 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);
        return r2;
    }

    public java.lang.String chompTo(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>(r1);
        virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>(r1);
        return r2;
    }

    public java.lang.String chompToIgnoreCase(java.lang.String)
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.parser.TokenQueue;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>(r1);
        virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>(r1);
        return r2;
    }

    public java.lang.String chompBalanced(char, char)
    {
        org.jsoup.parser.TokenQueue r0;
        char c0, c1, c3, $c4;
        java.lang.StringBuilder $r1, r2;
        int i2;
        java.lang.Character r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.String $r7;

        r0 := @this: org.jsoup.parser.TokenQueue;
        c0 := @parameter0: char;
        c1 := @parameter1: char;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        i2 = 0;
        c3 = 0;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 == 0 goto label1;

        goto label6;

     label1:
        $c4 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: char consume()>();
        r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4);
        if c3 == 0 goto label2;

        if c3 == 92 goto label4;

     label2:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);
        $z1 = virtualinvoke r3.<java.lang.Character: boolean equals(java.lang.Object)>($r4);
        if $z1 == 0 goto label3;

        i2 = i2 + 1;
        goto label4;

     label3:
        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);
        $z2 = virtualinvoke r3.<java.lang.Character: boolean equals(java.lang.Object)>($r5);
        if $z2 == 0 goto label4;

        i2 = i2 + -1;

     label4:
        if i2 <= 0 goto label5;

        if c3 == 0 goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

     label5:
        c3 = virtualinvoke r3.<java.lang.Character: char charValue()>();
        if i2 > 0 goto label0;

     label6:
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    public static java.lang.String unescape(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.StringBuilder $r1, r2;
        char c0, c3;
        char[] r3;
        int i1, i2;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        c0 = 0;
        r3 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();
        i1 = lengthof r3;
        i2 = 0;

     label0:
        if i2 >= i1 goto label3;

        c3 = r3[i2];
        if c3 != 92 goto label1;

        if c0 == 0 goto label2;

        if c0 != 92 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
        goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

     label2:
        c0 = c3;
        i2 = i2 + 1;
        goto label0;

     label3:
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    public boolean consumeWhitespace()
    {
        org.jsoup.parser.TokenQueue r0;
        boolean z0, $z1;
        int $i0, $i1;

        r0 := @this: org.jsoup.parser.TokenQueue;
        z0 = 0;

     label0:
        $z1 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesWhitespace()>();
        if $z1 == 0 goto label1;

        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i1 = $i0 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i1;
        z0 = 1;
        goto label0;

     label1:
        return z0;
    }

    public java.lang.String consumeWord()
    {
        org.jsoup.parser.TokenQueue r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.parser.TokenQueue;
        i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesWord()>();
        if $z0 == 0 goto label1;

        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i2 = $i1 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i2;
        goto label0;

     label1:
        $r2 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);
        return $r3;
    }

    public java.lang.String consumeTagName()
    {
        org.jsoup.parser.TokenQueue r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        char[] $r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.parser.TokenQueue;
        i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesWord()>();
        if $z1 != 0 goto label1;

        $r1 = newarray (char)[3];
        $r1[0] = 58;
        $r1[1] = 95;
        $r1[2] = 45;
        $z2 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>($r1);
        if $z2 == 0 goto label2;

     label1:
        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i2 = $i1 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i2;
        goto label0;

     label2:
        $r3 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);
        return $r4;
    }

    public java.lang.String consumeElementSelector()
    {
        org.jsoup.parser.TokenQueue r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        char[] $r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.parser.TokenQueue;
        i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesWord()>();
        if $z1 != 0 goto label1;

        $r1 = newarray (char)[3];
        $r1[0] = 124;
        $r1[1] = 95;
        $r1[2] = 45;
        $z2 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>($r1);
        if $z2 == 0 goto label2;

     label1:
        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i2 = $i1 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i2;
        goto label0;

     label2:
        $r3 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);
        return $r4;
    }

    public java.lang.String consumeCssIdentifier()
    {
        org.jsoup.parser.TokenQueue r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        char[] $r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.parser.TokenQueue;
        i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesWord()>();
        if $z1 != 0 goto label1;

        $r1 = newarray (char)[2];
        $r1[0] = 45;
        $r1[1] = 95;
        $z2 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>($r1);
        if $z2 == 0 goto label2;

     label1:
        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i2 = $i1 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i2;
        goto label0;

     label2:
        $r3 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);
        return $r4;
    }

    public java.lang.String consumeAttributeKey()
    {
        org.jsoup.parser.TokenQueue r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        char[] $r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.jsoup.parser.TokenQueue;
        i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesWord()>();
        if $z1 != 0 goto label1;

        $r1 = newarray (char)[3];
        $r1[0] = 45;
        $r1[1] = 95;
        $r1[2] = 58;
        $z2 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>($r1);
        if $z2 == 0 goto label2;

     label1:
        $i1 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $i2 = $i1 + 1;
        r0.<org.jsoup.parser.TokenQueue: int pos> = $i2;
        goto label0;

     label2:
        $r3 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i3 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);
        return $r4;
    }

    public java.lang.String remainder()
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.StringBuilder $r1, r2;
        boolean $z0;
        char $c0;
        java.lang.String $r4;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;

     label0:
        $z0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        $c0 = virtualinvoke r0.<org.jsoup.parser.TokenQueue: char consume()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);
        goto label0;

     label1:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r4;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.TokenQueue r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.jsoup.parser.TokenQueue;
        $r1 = r0.<org.jsoup.parser.TokenQueue: java.lang.String queue>;
        $i0 = r0.<org.jsoup.parser.TokenQueue: int pos>;
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);
        return $r2;
    }
}
abstract class org.jsoup.parser.TreeBuilder extends java.lang.Object
{
    org.jsoup.parser.CharacterReader reader;
    org.jsoup.parser.Tokeniser tokeniser;
    protected org.jsoup.nodes.Document doc;
    protected org.jsoup.helper.DescendableLinkedList stack;
    protected java.lang.String baseUri;
    protected org.jsoup.parser.Token currentToken;
    protected org.jsoup.parser.ParseErrorList errors;

    void <init>()
    {
        org.jsoup.parser.TreeBuilder r0;

        r0 := @this: org.jsoup.parser.TreeBuilder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    protected void initialiseParse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList)
    {
        org.jsoup.parser.TreeBuilder r0;
        java.lang.String r1, r2;
        org.jsoup.parser.ParseErrorList r3;
        org.jsoup.nodes.Document $r4;
        org.jsoup.parser.CharacterReader $r5, $r7;
        org.jsoup.parser.Tokeniser $r6;
        org.jsoup.helper.DescendableLinkedList $r8;

        r0 := @this: org.jsoup.parser.TreeBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.jsoup.parser.ParseErrorList;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "String input must not be null");
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "BaseURI must not be null");
        $r4 = new org.jsoup.nodes.Document;
        specialinvoke $r4.<org.jsoup.nodes.Document: void <init>(java.lang.String)>(r2);
        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document doc> = $r4;
        $r5 = new org.jsoup.parser.CharacterReader;
        specialinvoke $r5.<org.jsoup.parser.CharacterReader: void <init>(java.lang.String)>(r1);
        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.CharacterReader reader> = $r5;
        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.ParseErrorList errors> = r3;
        $r6 = new org.jsoup.parser.Tokeniser;
        $r7 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.CharacterReader reader>;
        specialinvoke $r6.<org.jsoup.parser.Tokeniser: void <init>(org.jsoup.parser.CharacterReader,org.jsoup.parser.ParseErrorList)>($r7, r3);
        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Tokeniser tokeniser> = $r6;
        $r8 = new org.jsoup.helper.DescendableLinkedList;
        specialinvoke $r8.<org.jsoup.helper.DescendableLinkedList: void <init>()>();
        r0.<org.jsoup.parser.TreeBuilder: org.jsoup.helper.DescendableLinkedList stack> = $r8;
        r0.<org.jsoup.parser.TreeBuilder: java.lang.String baseUri> = r2;
        return;
    }

    org.jsoup.nodes.Document parse(java.lang.String, java.lang.String)
    {
        org.jsoup.parser.TreeBuilder r0;
        java.lang.String r1, r2;
        org.jsoup.parser.ParseErrorList $r3;
        org.jsoup.nodes.Document $r4;

        r0 := @this: org.jsoup.parser.TreeBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList noTracking()>();
        $r4 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r1, r2, $r3);
        return $r4;
    }

    org.jsoup.nodes.Document parse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList)
    {
        org.jsoup.parser.TreeBuilder r0;
        java.lang.String r1, r2;
        org.jsoup.parser.ParseErrorList r3;
        org.jsoup.nodes.Document $r4;

        r0 := @this: org.jsoup.parser.TreeBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.jsoup.parser.ParseErrorList;
        virtualinvoke r0.<org.jsoup.parser.TreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r1, r2, r3);
        virtualinvoke r0.<org.jsoup.parser.TreeBuilder: void runParser()>();
        $r4 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document doc>;
        return $r4;
    }

    protected void runParser()
    {
        org.jsoup.parser.TreeBuilder r0;
        org.jsoup.parser.Token r1;
        org.jsoup.parser.Tokeniser $r2;
        org.jsoup.parser.Token$TokenType $r3, $r4;

        r0 := @this: org.jsoup.parser.TreeBuilder;

     label0:
        $r2 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        r1 = virtualinvoke $r2.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token read()>();
        virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>(r1);
        $r3 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r4 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF>;
        if $r3 != $r4 goto label1;

        goto label2;

     label1:
        goto label0;

     label2:
        return;
    }

    protected abstract boolean process(org.jsoup.parser.Token);

    protected org.jsoup.nodes.Element currentElement()
    {
        org.jsoup.parser.TreeBuilder r0;
        org.jsoup.helper.DescendableLinkedList $r1;
        java.lang.Object $r2;
        org.jsoup.nodes.Element $r3;

        r0 := @this: org.jsoup.parser.TreeBuilder;
        $r1 = r0.<org.jsoup.parser.TreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $r2 = virtualinvoke $r1.<org.jsoup.helper.DescendableLinkedList: java.lang.Object getLast()>();
        $r3 = (org.jsoup.nodes.Element) $r2;
        return $r3;
    }
}
class org.jsoup.parser.XmlTreeBuilder$1 extends java.lang.Object
{
    static final int[] $SwitchMap$org$jsoup$parser$Token$TokenType;

    static void <clinit>()
    {
        org.jsoup.parser.Token$TokenType[] $r0;
        org.jsoup.parser.Token$TokenType $r1, $r7, $r11, $r15, $r19, $r23;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9, $r12, r13, $r16, r17, $r20, r21, $r24, r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3, $r4, $r6, $r10, $r14, $r18, $r22;

        $r0 = staticinvoke <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType> = $r3;

     label0:
        $r4 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType StartTag>;
        $i1 = virtualinvoke $r1.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r7 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EndTag>;
        $i2 = virtualinvoke $r7.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        $r10 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r11 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Comment>;
        $i3 = virtualinvoke $r11.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r10[$i3] = 3;

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        r13 = $r12;

     label9:
        $r14 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r15 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Character>;
        $i4 = virtualinvoke $r15.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r14[$i4] = 4;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;
        r17 = $r16;

     label12:
        $r18 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r19 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Doctype>;
        $i5 = virtualinvoke $r19.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r18[$i5] = 5;

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;
        r21 = $r20;

     label15:
        $r22 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r23 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF>;
        $i6 = virtualinvoke $r23.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $r22[$i6] = 6;

     label16:
        goto label18;

     label17:
        $r24 := @caughtexception;
        r25 = $r24;

     label18:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
        catch java.lang.NoSuchFieldError from label15 to label16 with label17;
    }
}
public class org.jsoup.parser.XmlTreeBuilder extends org.jsoup.parser.TreeBuilder
{

    public void <init>()
    {
        org.jsoup.parser.XmlTreeBuilder r0;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        specialinvoke r0.<org.jsoup.parser.TreeBuilder: void <init>()>();
        return;
    }

    protected void initialiseParse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        java.lang.String r1, r2;
        org.jsoup.parser.ParseErrorList r3;
        org.jsoup.helper.DescendableLinkedList $r4;
        org.jsoup.nodes.Document $r5;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.jsoup.parser.ParseErrorList;
        specialinvoke r0.<org.jsoup.parser.TreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>(r1, r2, r3);
        $r4 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        $r5 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Document doc>;
        virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>($r5);
        return;
    }

    protected boolean process(org.jsoup.parser.Token)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token r1;
        int[] $r2;
        org.jsoup.parser.Token$TokenType $r3, $r12;
        int $i0, $i1;
        org.jsoup.parser.Token$StartTag $r4;
        org.jsoup.parser.Token$EndTag $r6;
        org.jsoup.parser.Token$Comment $r7;
        org.jsoup.parser.Token$Character $r8;
        org.jsoup.parser.Token$Doctype $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r14;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token;
        $r2 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;
        $r3 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $i0 = virtualinvoke $r3.<org.jsoup.parser.Token$TokenType: int ordinal()>();
        $i1 = $r2[$i0];
        tableswitch($i1)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label5;
            default: goto label6;
        };

     label0:
        $r4 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();
        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r4);
        goto label7;

     label1:
        $r6 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();
        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void popStackToClose(org.jsoup.parser.Token$EndTag)>($r6);
        goto label7;

     label2:
        $r7 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();
        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r7);
        goto label7;

     label3:
        $r8 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();
        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r8);
        goto label7;

     label4:
        $r9 = virtualinvoke r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Doctype asDoctype()>();
        virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Doctype)>($r9);
        goto label7;

     label5:
        goto label7;

     label6:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token type: ");
        $r12 = r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.jsoup.helper.Validate: void fail(java.lang.String)>($r14);

     label7:
        return 1;
    }

    private void insertNode(org.jsoup.nodes.Node)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.nodes.Node r1;
        org.jsoup.nodes.Element $r2;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        r1 := @parameter0: org.jsoup.nodes.Node;
        $r2 = virtualinvoke r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();
        virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r1);
        return;
    }

    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$StartTag r1;
        org.jsoup.parser.Tag r2;
        org.jsoup.nodes.Element r3, $r5;
        java.lang.String $r4, $r6;
        org.jsoup.nodes.Attributes $r7;
        boolean $z0, $z1;
        org.jsoup.parser.Tokeniser $r8;
        org.jsoup.helper.DescendableLinkedList $r10;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$StartTag;
        $r4 = virtualinvoke r1.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();
        r2 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>($r4);
        $r5 = new org.jsoup.nodes.Element;
        $r6 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;
        $r7 = r1.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;
        specialinvoke $r5.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>(r2, $r6, $r7);
        r3 = $r5;
        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r3);
        $z0 = virtualinvoke r1.<org.jsoup.parser.Token$StartTag: boolean isSelfClosing()>();
        if $z0 == 0 goto label0;

        $r8 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;
        virtualinvoke $r8.<org.jsoup.parser.Tokeniser: void acknowledgeSelfClosingFlag()>();
        $z1 = virtualinvoke r2.<org.jsoup.parser.Tag: boolean isKnownTag()>();
        if $z1 != 0 goto label1;

        virtualinvoke r2.<org.jsoup.parser.Tag: org.jsoup.parser.Tag setSelfClosing()>();
        goto label1;

     label0:
        $r10 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        virtualinvoke $r10.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>(r3);

     label1:
        return r3;
    }

    void insert(org.jsoup.parser.Token$Comment)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$Comment r1;
        org.jsoup.nodes.Comment $r2, r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$Comment;
        $r2 = new org.jsoup.nodes.Comment;
        $r4 = virtualinvoke r1.<org.jsoup.parser.Token$Comment: java.lang.String getData()>();
        $r5 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;
        specialinvoke $r2.<org.jsoup.nodes.Comment: void <init>(java.lang.String,java.lang.String)>($r4, $r5);
        r3 = $r2;
        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r3);
        return;
    }

    void insert(org.jsoup.parser.Token$Character)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$Character r1;
        org.jsoup.nodes.TextNode $r2, r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$Character;
        $r2 = new org.jsoup.nodes.TextNode;
        $r4 = virtualinvoke r1.<org.jsoup.parser.Token$Character: java.lang.String getData()>();
        $r5 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;
        specialinvoke $r2.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>($r4, $r5);
        r3 = $r2;
        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r3);
        return;
    }

    void insert(org.jsoup.parser.Token$Doctype)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$Doctype r1;
        org.jsoup.nodes.DocumentType $r2, r3;
        java.lang.String $r4, $r5, $r6, $r7;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$Doctype;
        $r2 = new org.jsoup.nodes.DocumentType;
        $r4 = virtualinvoke r1.<org.jsoup.parser.Token$Doctype: java.lang.String getName()>();
        $r5 = virtualinvoke r1.<org.jsoup.parser.Token$Doctype: java.lang.String getPublicIdentifier()>();
        $r6 = virtualinvoke r1.<org.jsoup.parser.Token$Doctype: java.lang.String getSystemIdentifier()>();
        $r7 = r0.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;
        specialinvoke $r2.<org.jsoup.nodes.DocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r6, $r7);
        r3 = $r2;
        specialinvoke r0.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>(r3);
        return;
    }

    private void popStackToClose(org.jsoup.parser.Token$EndTag)
    {
        org.jsoup.parser.XmlTreeBuilder r0;
        org.jsoup.parser.Token$EndTag r1;
        java.lang.String r2, $r8;
        org.jsoup.nodes.Element r3, r5, r12;
        java.util.Iterator r4, r10;
        org.jsoup.helper.DescendableLinkedList $r6, $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7, $r11;

        r0 := @this: org.jsoup.parser.XmlTreeBuilder;
        r1 := @parameter0: org.jsoup.parser.Token$EndTag;
        r2 = virtualinvoke r1.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();
        r3 = null;
        $r6 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r4 = virtualinvoke $r6.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.jsoup.nodes.Element) $r7;
        $r8 = virtualinvoke r5.<org.jsoup.nodes.Element: java.lang.String nodeName()>();
        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 == 0 goto label1;

        r3 = r5;
        goto label2;

     label1:
        goto label0;

     label2:
        if r3 != null goto label3;

        return;

     label3:
        $r9 = r0.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;
        r10 = virtualinvoke $r9.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label4:
        $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label6;

        $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();
        r12 = (org.jsoup.nodes.Element) $r11;
        if r12 != r3 goto label5;

        interfaceinvoke r10.<java.util.Iterator: void remove()>();
        goto label6;

     label5:
        interfaceinvoke r10.<java.util.Iterator: void remove()>();
        goto label4;

     label6:
        return;
    }
}
class org.jsoup.safety.Cleaner$ElementMeta extends java.lang.Object
{
    org.jsoup.nodes.Element el;
    int numAttribsDiscarded;

    void <init>(org.jsoup.nodes.Element, int)
    {
        org.jsoup.safety.Cleaner$ElementMeta r0;
        org.jsoup.nodes.Element r1;
        int i0;

        r0 := @this: org.jsoup.safety.Cleaner$ElementMeta;
        r1 := @parameter0: org.jsoup.nodes.Element;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.safety.Cleaner$ElementMeta: org.jsoup.nodes.Element el> = r1;
        r0.<org.jsoup.safety.Cleaner$ElementMeta: int numAttribsDiscarded> = i0;
        return;
    }
}
public class org.jsoup.safety.Cleaner extends java.lang.Object
{
    private org.jsoup.safety.Whitelist whitelist;

    public void <init>(org.jsoup.safety.Whitelist)
    {
        org.jsoup.safety.Cleaner r0;
        org.jsoup.safety.Whitelist r1;

        r0 := @this: org.jsoup.safety.Cleaner;
        r1 := @parameter0: org.jsoup.safety.Whitelist;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r0.<org.jsoup.safety.Cleaner: org.jsoup.safety.Whitelist whitelist> = r1;
        return;
    }

    public org.jsoup.nodes.Document clean(org.jsoup.nodes.Document)
    {
        org.jsoup.safety.Cleaner r0;
        org.jsoup.nodes.Document r1, r2;
        java.lang.String $r3;
        org.jsoup.nodes.Element $r4, $r5;

        r0 := @this: org.jsoup.safety.Cleaner;
        r1 := @parameter0: org.jsoup.nodes.Document;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = virtualinvoke r1.<org.jsoup.nodes.Document: java.lang.String baseUri()>();
        r2 = staticinvoke <org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>($r3);
        $r4 = virtualinvoke r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        specialinvoke r0.<org.jsoup.safety.Cleaner: int copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($r4, $r5);
        return r2;
    }

    public boolean isValid(org.jsoup.nodes.Document)
    {
        org.jsoup.safety.Cleaner r0;
        org.jsoup.nodes.Document r1, r2;
        int i0;
        java.lang.String $r3;
        org.jsoup.nodes.Element $r4, $r5;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Cleaner;
        r1 := @parameter0: org.jsoup.nodes.Document;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r3 = virtualinvoke r1.<org.jsoup.nodes.Document: java.lang.String baseUri()>();
        r2 = staticinvoke <org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>($r3);
        $r4 = virtualinvoke r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();
        i0 = specialinvoke r0.<org.jsoup.safety.Cleaner: int copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($r4, $r5);
        if i0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private int copySafeNodes(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.safety.Cleaner r0;
        org.jsoup.nodes.Element r1, r2, r6, r8;
        java.util.List r3;
        int i0, $i1, i2, $i3, i4, $i5;
        java.util.Iterator r4;
        org.jsoup.nodes.Node r5;
        org.jsoup.safety.Cleaner$ElementMeta r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r9;
        org.jsoup.safety.Whitelist $r10;
        java.lang.String $r11, $r15, $r16;
        org.jsoup.nodes.TextNode r13, $r14, r17;

        r0 := @this: org.jsoup.safety.Cleaner;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        r3 = virtualinvoke r1.<org.jsoup.nodes.Element: java.util.List childNodes()>();
        i0 = 0;
        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.jsoup.nodes.Node) $r9;
        $z1 = r5 instanceof org.jsoup.nodes.Element;
        if $z1 == 0 goto label3;

        r6 = (org.jsoup.nodes.Element) r5;
        $r10 = r0.<org.jsoup.safety.Cleaner: org.jsoup.safety.Whitelist whitelist>;
        $r11 = virtualinvoke r6.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $z2 = virtualinvoke $r10.<org.jsoup.safety.Whitelist: boolean isSafeTag(java.lang.String)>($r11);
        if $z2 == 0 goto label1;

        r7 = specialinvoke r0.<org.jsoup.safety.Cleaner: org.jsoup.safety.Cleaner$ElementMeta createSafeElement(org.jsoup.nodes.Element)>(r6);
        r8 = r7.<org.jsoup.safety.Cleaner$ElementMeta: org.jsoup.nodes.Element el>;
        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r8);
        $i1 = r7.<org.jsoup.safety.Cleaner$ElementMeta: int numAttribsDiscarded>;
        i2 = i0 + $i1;
        $i3 = specialinvoke r0.<org.jsoup.safety.Cleaner: int copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r6, r8);
        i0 = i2 + $i3;
        goto label2;

     label1:
        i4 = i0 + 1;
        $i5 = specialinvoke r0.<org.jsoup.safety.Cleaner: int copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r6, r2);
        i0 = i4 + $i5;

     label2:
        goto label4;

     label3:
        $z3 = r5 instanceof org.jsoup.nodes.TextNode;
        if $z3 == 0 goto label4;

        r13 = (org.jsoup.nodes.TextNode) r5;
        $r14 = new org.jsoup.nodes.TextNode;
        $r15 = virtualinvoke r13.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();
        $r16 = virtualinvoke r5.<org.jsoup.nodes.Node: java.lang.String baseUri()>();
        specialinvoke $r14.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>($r15, $r16);
        r17 = $r14;
        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r17);

     label4:
        goto label0;

     label5:
        return i0;
    }

    private org.jsoup.safety.Cleaner$ElementMeta createSafeElement(org.jsoup.nodes.Element)
    {
        org.jsoup.safety.Cleaner r0;
        org.jsoup.nodes.Element r1, r4, $r9;
        java.lang.String r2, $r11;
        org.jsoup.nodes.Attributes r3, r5, $r8, r15;
        int i0;
        java.util.Iterator r6;
        org.jsoup.nodes.Attribute r7;
        org.jsoup.parser.Tag $r10;
        boolean $z0, $z1;
        java.lang.Object $r12;
        org.jsoup.safety.Whitelist $r13, $r14;
        org.jsoup.safety.Cleaner$ElementMeta $r16;

        r0 := @this: org.jsoup.safety.Cleaner;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 = virtualinvoke r1.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $r8 = new org.jsoup.nodes.Attributes;
        specialinvoke $r8.<org.jsoup.nodes.Attributes: void <init>()>();
        r3 = $r8;
        $r9 = new org.jsoup.nodes.Element;
        $r10 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>(r2);
        $r11 = virtualinvoke r1.<org.jsoup.nodes.Element: java.lang.String baseUri()>();
        specialinvoke $r9.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>($r10, $r11, r3);
        r4 = $r9;
        i0 = 0;
        r5 = virtualinvoke r1.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        r6 = virtualinvoke r5.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (org.jsoup.nodes.Attribute) $r12;
        $r13 = r0.<org.jsoup.safety.Cleaner: org.jsoup.safety.Whitelist whitelist>;
        $z1 = virtualinvoke $r13.<org.jsoup.safety.Whitelist: boolean isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute)>(r2, r1, r7);
        if $z1 == 0 goto label1;

        virtualinvoke r3.<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>(r7);
        goto label2;

     label1:
        i0 = i0 + 1;

     label2:
        goto label0;

     label3:
        $r14 = r0.<org.jsoup.safety.Cleaner: org.jsoup.safety.Whitelist whitelist>;
        r15 = virtualinvoke $r14.<org.jsoup.safety.Whitelist: org.jsoup.nodes.Attributes getEnforcedAttributes(java.lang.String)>(r2);
        virtualinvoke r3.<org.jsoup.nodes.Attributes: void addAll(org.jsoup.nodes.Attributes)>(r15);
        $r16 = new org.jsoup.safety.Cleaner$ElementMeta;
        specialinvoke $r16.<org.jsoup.safety.Cleaner$ElementMeta: void <init>(org.jsoup.nodes.Element,int)>(r4, i0);
        return $r16;
    }
}
class org.jsoup.safety.Whitelist$AttributeKey extends org.jsoup.safety.Whitelist$TypedValue
{

    void <init>(java.lang.String)
    {
        org.jsoup.safety.Whitelist$AttributeKey r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.safety.Whitelist$AttributeKey;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.safety.Whitelist$TypedValue: void <init>(java.lang.String)>(r1);
        return;
    }

    static org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.safety.Whitelist$AttributeKey $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new org.jsoup.safety.Whitelist$AttributeKey;
        specialinvoke $r1.<org.jsoup.safety.Whitelist$AttributeKey: void <init>(java.lang.String)>(r0);
        return $r1;
    }
}
class org.jsoup.safety.Whitelist$AttributeValue extends org.jsoup.safety.Whitelist$TypedValue
{

    void <init>(java.lang.String)
    {
        org.jsoup.safety.Whitelist$AttributeValue r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.safety.Whitelist$AttributeValue;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.safety.Whitelist$TypedValue: void <init>(java.lang.String)>(r1);
        return;
    }

    static org.jsoup.safety.Whitelist$AttributeValue valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.safety.Whitelist$AttributeValue $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new org.jsoup.safety.Whitelist$AttributeValue;
        specialinvoke $r1.<org.jsoup.safety.Whitelist$AttributeValue: void <init>(java.lang.String)>(r0);
        return $r1;
    }
}
class org.jsoup.safety.Whitelist$Protocol extends org.jsoup.safety.Whitelist$TypedValue
{

    void <init>(java.lang.String)
    {
        org.jsoup.safety.Whitelist$Protocol r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.safety.Whitelist$Protocol;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.safety.Whitelist$TypedValue: void <init>(java.lang.String)>(r1);
        return;
    }

    static org.jsoup.safety.Whitelist$Protocol valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.safety.Whitelist$Protocol $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new org.jsoup.safety.Whitelist$Protocol;
        specialinvoke $r1.<org.jsoup.safety.Whitelist$Protocol: void <init>(java.lang.String)>(r0);
        return $r1;
    }
}
class org.jsoup.safety.Whitelist$TagName extends org.jsoup.safety.Whitelist$TypedValue
{

    void <init>(java.lang.String)
    {
        org.jsoup.safety.Whitelist$TagName r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.safety.Whitelist$TagName;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.safety.Whitelist$TypedValue: void <init>(java.lang.String)>(r1);
        return;
    }

    static org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.safety.Whitelist$TagName $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = new org.jsoup.safety.Whitelist$TagName;
        specialinvoke $r1.<org.jsoup.safety.Whitelist$TagName: void <init>(java.lang.String)>(r0);
        return $r1;
    }
}
abstract class org.jsoup.safety.Whitelist$TypedValue extends java.lang.Object
{
    private java.lang.String value;

    void <init>(java.lang.String)
    {
        org.jsoup.safety.Whitelist$TypedValue r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.safety.Whitelist$TypedValue;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r0.<org.jsoup.safety.Whitelist$TypedValue: java.lang.String value> = r1;
        return;
    }

    public int hashCode()
    {
        org.jsoup.safety.Whitelist$TypedValue r0;
        byte b0, b1;
        int $i2, $i3, i4;
        java.lang.String $r1, $r2;

        r0 := @this: org.jsoup.safety.Whitelist$TypedValue;
        b0 = 31;
        b1 = 1;
        $i2 = 31 * b1;
        $r1 = r0.<org.jsoup.safety.Whitelist$TypedValue: java.lang.String value>;
        if $r1 != null goto label0;

        $i3 = 0;
        goto label1;

     label0:
        $r2 = r0.<org.jsoup.safety.Whitelist$TypedValue: java.lang.String value>;
        $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label1:
        i4 = $i2 + $i3;
        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        org.jsoup.safety.Whitelist$TypedValue r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist$TypedValue;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label2;

        return 0;

     label2:
        r2 = (org.jsoup.safety.Whitelist$TypedValue) r1;
        $r5 = r0.<org.jsoup.safety.Whitelist$TypedValue: java.lang.String value>;
        if $r5 != null goto label3;

        $r6 = r2.<org.jsoup.safety.Whitelist$TypedValue: java.lang.String value>;
        if $r6 == null goto label4;

        return 0;

     label3:
        $r7 = r0.<org.jsoup.safety.Whitelist$TypedValue: java.lang.String value>;
        $r8 = r2.<org.jsoup.safety.Whitelist$TypedValue: java.lang.String value>;
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public java.lang.String toString()
    {
        org.jsoup.safety.Whitelist$TypedValue r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.safety.Whitelist$TypedValue;
        $r1 = r0.<org.jsoup.safety.Whitelist$TypedValue: java.lang.String value>;
        return $r1;
    }
}
public class org.jsoup.safety.Whitelist extends java.lang.Object
{
    private java.util.Set tagNames;
    private java.util.Map attributes;
    private java.util.Map enforcedAttributes;
    private java.util.Map protocols;
    private boolean preserveRelativeLinks;

    public static org.jsoup.safety.Whitelist none()
    {
        org.jsoup.safety.Whitelist $r0;

        $r0 = new org.jsoup.safety.Whitelist;
        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();
        return $r0;
    }

    public static org.jsoup.safety.Whitelist simpleText()
    {
        org.jsoup.safety.Whitelist $r0, $r2;
        java.lang.String[] $r1;

        $r0 = new org.jsoup.safety.Whitelist;
        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();
        $r1 = newarray (java.lang.String)[5];
        $r1[0] = "b";
        $r1[1] = "em";
        $r1[2] = "i";
        $r1[3] = "strong";
        $r1[4] = "u";
        $r2 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);
        return $r2;
    }

    public static org.jsoup.safety.Whitelist basic()
    {
        org.jsoup.safety.Whitelist $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r15;
        java.lang.String[] $r1, $r3, $r5, $r7, $r9, $r11, $r13;

        $r0 = new org.jsoup.safety.Whitelist;
        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();
        $r1 = newarray (java.lang.String)[23];
        $r1[0] = "a";
        $r1[1] = "b";
        $r1[2] = "blockquote";
        $r1[3] = "br";
        $r1[4] = "cite";
        $r1[5] = "code";
        $r1[6] = "dd";
        $r1[7] = "dl";
        $r1[8] = "dt";
        $r1[9] = "em";
        $r1[10] = "i";
        $r1[11] = "li";
        $r1[12] = "ol";
        $r1[13] = "p";
        $r1[14] = "pre";
        $r1[15] = "q";
        $r1[16] = "small";
        $r1[17] = "strike";
        $r1[18] = "strong";
        $r1[19] = "sub";
        $r1[20] = "sup";
        $r1[21] = "u";
        $r1[22] = "ul";
        $r2 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);
        $r3 = newarray (java.lang.String)[1];
        $r3[0] = "href";
        $r4 = virtualinvoke $r2.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("a", $r3);
        $r5 = newarray (java.lang.String)[1];
        $r5[0] = "cite";
        $r6 = virtualinvoke $r4.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("blockquote", $r5);
        $r7 = newarray (java.lang.String)[1];
        $r7[0] = "cite";
        $r8 = virtualinvoke $r6.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("q", $r7);
        $r9 = newarray (java.lang.String)[4];
        $r9[0] = "ftp";
        $r9[1] = "http";
        $r9[2] = "https";
        $r9[3] = "mailto";
        $r10 = virtualinvoke $r8.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("a", "href", $r9);
        $r11 = newarray (java.lang.String)[2];
        $r11[0] = "http";
        $r11[1] = "https";
        $r12 = virtualinvoke $r10.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("blockquote", "cite", $r11);
        $r13 = newarray (java.lang.String)[2];
        $r13[0] = "http";
        $r13[1] = "https";
        $r14 = virtualinvoke $r12.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("cite", "cite", $r13);
        $r15 = virtualinvoke $r14.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String)>("a", "rel", "nofollow");
        return $r15;
    }

    public static org.jsoup.safety.Whitelist basicWithImages()
    {
        org.jsoup.safety.Whitelist $r0, $r2, $r4, $r6;
        java.lang.String[] $r1, $r3, $r5;

        $r0 = staticinvoke <org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist basic()>();
        $r1 = newarray (java.lang.String)[1];
        $r1[0] = "img";
        $r2 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);
        $r3 = newarray (java.lang.String)[6];
        $r3[0] = "align";
        $r3[1] = "alt";
        $r3[2] = "height";
        $r3[3] = "src";
        $r3[4] = "title";
        $r3[5] = "width";
        $r4 = virtualinvoke $r2.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("img", $r3);
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "http";
        $r5[1] = "https";
        $r6 = virtualinvoke $r4.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("img", "src", $r5);
        return $r6;
    }

    public static org.jsoup.safety.Whitelist relaxed()
    {
        org.jsoup.safety.Whitelist $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32;
        java.lang.String[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;

        $r0 = new org.jsoup.safety.Whitelist;
        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();
        $r1 = newarray (java.lang.String)[41];
        $r1[0] = "a";
        $r1[1] = "b";
        $r1[2] = "blockquote";
        $r1[3] = "br";
        $r1[4] = "caption";
        $r1[5] = "cite";
        $r1[6] = "code";
        $r1[7] = "col";
        $r1[8] = "colgroup";
        $r1[9] = "dd";
        $r1[10] = "div";
        $r1[11] = "dl";
        $r1[12] = "dt";
        $r1[13] = "em";
        $r1[14] = "h1";
        $r1[15] = "h2";
        $r1[16] = "h3";
        $r1[17] = "h4";
        $r1[18] = "h5";
        $r1[19] = "h6";
        $r1[20] = "i";
        $r1[21] = "img";
        $r1[22] = "li";
        $r1[23] = "ol";
        $r1[24] = "p";
        $r1[25] = "pre";
        $r1[26] = "q";
        $r1[27] = "small";
        $r1[28] = "strike";
        $r1[29] = "strong";
        $r1[30] = "sub";
        $r1[31] = "sup";
        $r1[32] = "table";
        $r1[33] = "tbody";
        $r1[34] = "td";
        $r1[35] = "tfoot";
        $r1[36] = "th";
        $r1[37] = "thead";
        $r1[38] = "tr";
        $r1[39] = "u";
        $r1[40] = "ul";
        $r2 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);
        $r3 = newarray (java.lang.String)[2];
        $r3[0] = "href";
        $r3[1] = "title";
        $r4 = virtualinvoke $r2.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("a", $r3);
        $r5 = newarray (java.lang.String)[1];
        $r5[0] = "cite";
        $r6 = virtualinvoke $r4.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("blockquote", $r5);
        $r7 = newarray (java.lang.String)[2];
        $r7[0] = "span";
        $r7[1] = "width";
        $r8 = virtualinvoke $r6.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("col", $r7);
        $r9 = newarray (java.lang.String)[2];
        $r9[0] = "span";
        $r9[1] = "width";
        $r10 = virtualinvoke $r8.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("colgroup", $r9);
        $r11 = newarray (java.lang.String)[6];
        $r11[0] = "align";
        $r11[1] = "alt";
        $r11[2] = "height";
        $r11[3] = "src";
        $r11[4] = "title";
        $r11[5] = "width";
        $r12 = virtualinvoke $r10.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("img", $r11);
        $r13 = newarray (java.lang.String)[2];
        $r13[0] = "start";
        $r13[1] = "type";
        $r14 = virtualinvoke $r12.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("ol", $r13);
        $r15 = newarray (java.lang.String)[1];
        $r15[0] = "cite";
        $r16 = virtualinvoke $r14.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("q", $r15);
        $r17 = newarray (java.lang.String)[2];
        $r17[0] = "summary";
        $r17[1] = "width";
        $r18 = virtualinvoke $r16.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("table", $r17);
        $r19 = newarray (java.lang.String)[5];
        $r19[0] = "abbr";
        $r19[1] = "axis";
        $r19[2] = "colspan";
        $r19[3] = "rowspan";
        $r19[4] = "width";
        $r20 = virtualinvoke $r18.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("td", $r19);
        $r21 = newarray (java.lang.String)[6];
        $r21[0] = "abbr";
        $r21[1] = "axis";
        $r21[2] = "colspan";
        $r21[3] = "rowspan";
        $r21[4] = "scope";
        $r21[5] = "width";
        $r22 = virtualinvoke $r20.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("th", $r21);
        $r23 = newarray (java.lang.String)[1];
        $r23[0] = "type";
        $r24 = virtualinvoke $r22.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("ul", $r23);
        $r25 = newarray (java.lang.String)[4];
        $r25[0] = "ftp";
        $r25[1] = "http";
        $r25[2] = "https";
        $r25[3] = "mailto";
        $r26 = virtualinvoke $r24.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("a", "href", $r25);
        $r27 = newarray (java.lang.String)[2];
        $r27[0] = "http";
        $r27[1] = "https";
        $r28 = virtualinvoke $r26.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("blockquote", "cite", $r27);
        $r29 = newarray (java.lang.String)[2];
        $r29[0] = "http";
        $r29[1] = "https";
        $r30 = virtualinvoke $r28.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("img", "src", $r29);
        $r31 = newarray (java.lang.String)[2];
        $r31[0] = "http";
        $r31[1] = "https";
        $r32 = virtualinvoke $r30.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("q", "cite", $r31);
        return $r32;
    }

    public void <init>()
    {
        org.jsoup.safety.Whitelist r0;
        java.util.HashSet $r1;
        java.util.HashMap $r2, $r3, $r4;

        r0 := @this: org.jsoup.safety.Whitelist;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.HashSet;
        specialinvoke $r1.<java.util.HashSet: void <init>()>();
        r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames> = $r1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r0.<org.jsoup.safety.Whitelist: java.util.Map attributes> = $r2;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes> = $r3;
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        r0.<org.jsoup.safety.Whitelist: java.util.Map protocols> = $r4;
        r0.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks> = 0;
        return;
    }

    public transient org.jsoup.safety.Whitelist addTags(java.lang.String[])
    {
        org.jsoup.safety.Whitelist r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3;
        java.util.Set $r4;
        org.jsoup.safety.Whitelist$TagName $r5;

        r0 := @this: org.jsoup.safety.Whitelist;
        r1 := @parameter0: java.lang.String[];
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r2 = r1;
        i0 = lengthof r2;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r3 = r2[i1];
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r3);
        $r4 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;
        $r5 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>(r3);
        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);
        i1 = i1 + 1;
        goto label0;

     label1:
        return r0;
    }

    public transient org.jsoup.safety.Whitelist addAttributes(java.lang.String, java.lang.String[])
    {
        org.jsoup.safety.Whitelist r0;
        java.lang.String r1, r6;
        java.lang.String[] r2, r5;
        org.jsoup.safety.Whitelist$TagName r3;
        java.util.HashSet r4, $r9;
        int i0, i1, $i2;
        boolean $z0, $z1, $z4;
        java.util.Set $r7, $r8, r14;
        org.jsoup.safety.Whitelist$AttributeKey $r10;
        java.util.Map $r11, $r12, $r15;
        java.lang.Object $r13;

        r0 := @this: org.jsoup.safety.Whitelist;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String[];
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $i2 = lengthof r2;
        if $i2 <= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "No attributes supplied.");
        r3 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>(r1);
        $r7 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;
        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>(r3);
        if $z1 != 0 goto label2;

        $r8 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;
        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label2:
        $r9 = new java.util.HashSet;
        specialinvoke $r9.<java.util.HashSet: void <init>()>();
        r4 = $r9;
        r5 = r2;
        i0 = lengthof r5;
        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        r6 = r5[i1];
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r6);
        $r10 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>(r6);
        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r10);
        i1 = i1 + 1;
        goto label3;

     label4:
        $r11 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;
        $z4 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);
        if $z4 == 0 goto label5;

        $r12 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;
        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);
        r14 = (java.util.Set) $r13;
        interfaceinvoke r14.<java.util.Set: boolean addAll(java.util.Collection)>(r4);
        goto label6;

     label5:
        $r15 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;
        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label6:
        return r0;
    }

    public org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        org.jsoup.safety.Whitelist r0;
        java.lang.String r1, r2, r3;
        org.jsoup.safety.Whitelist$TagName r4;
        org.jsoup.safety.Whitelist$AttributeKey r5;
        org.jsoup.safety.Whitelist$AttributeValue r6;
        java.util.HashMap r7, $r15;
        java.util.Set $r8, $r9;
        boolean $z0, $z2;
        java.util.Map $r10, $r11, $r13, $r17;
        java.lang.Object $r12;

        r0 := @this: org.jsoup.safety.Whitelist;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r2);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r3);
        r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>(r1);
        $r8 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;
        $z0 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r4);
        if $z0 != 0 goto label0;

        $r9 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;
        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>(r4);

     label0:
        r5 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>(r2);
        r6 = staticinvoke <org.jsoup.safety.Whitelist$AttributeValue: org.jsoup.safety.Whitelist$AttributeValue valueOf(java.lang.String)>(r3);
        $r10 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;
        $z2 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);
        if $z2 == 0 goto label1;

        $r11 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;
        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        $r13 = (java.util.Map) $r12;
        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);
        goto label2;

     label1:
        $r15 = new java.util.HashMap;
        specialinvoke $r15.<java.util.HashMap: void <init>()>();
        r7 = $r15;
        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);
        $r17 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;
        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r7);

     label2:
        return r0;
    }

    public org.jsoup.safety.Whitelist preserveRelativeLinks(boolean)
    {
        org.jsoup.safety.Whitelist r0;
        boolean z0;

        r0 := @this: org.jsoup.safety.Whitelist;
        z0 := @parameter0: boolean;
        r0.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks> = z0;
        return r0;
    }

    public transient org.jsoup.safety.Whitelist addProtocols(java.lang.String, java.lang.String, java.lang.String[])
    {
        org.jsoup.safety.Whitelist r0;
        java.lang.String r1, r2, r9;
        java.lang.String[] r3, r8;
        org.jsoup.safety.Whitelist$TagName r4;
        org.jsoup.safety.Whitelist$AttributeKey r5;
        java.util.Map r6, $r11, $r12, $r15;
        java.util.Set r7;
        int i0, i1;
        org.jsoup.safety.Whitelist$Protocol r10;
        boolean $z0, $z1;
        java.lang.Object $r13, $r17;
        java.util.HashMap $r14;
        java.util.HashSet $r18;

        r0 := @this: org.jsoup.safety.Whitelist;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String[];
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r2);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r3);
        r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>(r1);
        r5 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>(r2);
        $r11 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;
        $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);
        if $z0 == 0 goto label0;

        $r12 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;
        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r6 = (java.util.Map) $r13;
        goto label1;

     label0:
        $r14 = new java.util.HashMap;
        specialinvoke $r14.<java.util.HashMap: void <init>()>();
        r6 = $r14;
        $r15 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;
        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r6);

     label1:
        $z1 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);
        if $z1 == 0 goto label2;

        $r17 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
        r7 = (java.util.Set) $r17;
        goto label3;

     label2:
        $r18 = new java.util.HashSet;
        specialinvoke $r18.<java.util.HashSet: void <init>()>();
        r7 = $r18;
        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r7);

     label3:
        r8 = r3;
        i0 = lengthof r8;
        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        r9 = r8[i1];
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r9);
        r10 = staticinvoke <org.jsoup.safety.Whitelist$Protocol: org.jsoup.safety.Whitelist$Protocol valueOf(java.lang.String)>(r9);
        interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r10);
        i1 = i1 + 1;
        goto label4;

     label5:
        return r0;
    }

    boolean isSafeTag(java.lang.String)
    {
        org.jsoup.safety.Whitelist r0;
        java.lang.String r1;
        java.util.Set $r2;
        org.jsoup.safety.Whitelist$TagName $r3;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;
        $r3 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>(r1);
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);
        return $z0;
    }

    boolean isSafeAttribute(java.lang.String, org.jsoup.nodes.Element, org.jsoup.nodes.Attribute)
    {
        org.jsoup.safety.Whitelist r0;
        java.lang.String r1, $r7;
        org.jsoup.nodes.Element r2;
        org.jsoup.nodes.Attribute r3;
        org.jsoup.safety.Whitelist$TagName r4;
        org.jsoup.safety.Whitelist$AttributeKey r5;
        java.util.Map r6, $r8, $r9, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Object $r10, $r14, $r15;
        java.util.Set $r11, $r16;

        r0 := @this: org.jsoup.safety.Whitelist;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.jsoup.nodes.Element;
        r3 := @parameter2: org.jsoup.nodes.Attribute;
        r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>(r1);
        $r7 = virtualinvoke r3.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        r5 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r7);
        $r8 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;
        $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);
        if $z0 == 0 goto label4;

        $r9 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;
        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        $r11 = (java.util.Set) $r10;
        $z1 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r5);
        if $z1 == 0 goto label4;

        $r12 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;
        $z2 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);
        if $z2 == 0 goto label3;

        $r13 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;
        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r6 = (java.util.Map) $r14;
        $z3 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);
        if $z3 == 0 goto label0;

        $r15 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);
        $r16 = (java.util.Set) $r15;
        $z4 = specialinvoke r0.<org.jsoup.safety.Whitelist: boolean testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)>(r2, r3, $r16);
        if $z4 == 0 goto label1;

     label0:
        $z5 = 1;
        goto label2;

     label1:
        $z5 = 0;

     label2:
        return $z5;

     label3:
        return 1;

     label4:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(":all");
        if $z6 != 0 goto label5;

        $z7 = virtualinvoke r0.<org.jsoup.safety.Whitelist: boolean isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute)>(":all", r2, r3);
        if $z7 == 0 goto label5;

        $z8 = 1;
        goto label6;

     label5:
        $z8 = 0;

     label6:
        return $z8;
    }

    private boolean testValidProtocol(org.jsoup.nodes.Element, org.jsoup.nodes.Attribute, java.util.Set)
    {
        org.jsoup.safety.Whitelist r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.nodes.Attribute r2;
        java.util.Set r3;
        java.lang.String r4, r7, $r8, $r12, $r15;
        java.util.Iterator r5;
        org.jsoup.safety.Whitelist$Protocol r6;
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10;
        java.lang.StringBuilder $r11, $r13, $r14;

        r0 := @this: org.jsoup.safety.Whitelist;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Attribute;
        r3 := @parameter2: java.util.Set;
        $r8 = virtualinvoke r2.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        r4 = virtualinvoke r1.<org.jsoup.nodes.Element: java.lang.String absUrl(java.lang.String)>($r8);
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i0 != 0 goto label0;

        r4 = virtualinvoke r2.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();

     label0:
        $z0 = r0.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks>;
        if $z0 != 0 goto label1;

        virtualinvoke r2.<org.jsoup.nodes.Attribute: java.lang.String setValue(java.lang.String)>(r4);

     label1:
        r5 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (org.jsoup.safety.Whitelist$Protocol) $r10;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke r6.<org.jsoup.safety.Whitelist$Protocol: java.lang.String toString()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();
        $z2 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>(r7);
        if $z2 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    org.jsoup.nodes.Attributes getEnforcedAttributes(java.lang.String)
    {
        org.jsoup.safety.Whitelist r0;
        java.lang.String r1, $r15, $r18;
        org.jsoup.nodes.Attributes $r2, r3;
        org.jsoup.safety.Whitelist$TagName r4;
        java.util.Map r5, $r8, $r9;
        java.util.Iterator r6;
        java.util.Map$Entry r7;
        boolean $z0, $z1;
        java.lang.Object $r10, $r12, $r13, $r16;
        java.util.Set $r11;
        org.jsoup.safety.Whitelist$AttributeKey $r14;
        org.jsoup.safety.Whitelist$AttributeValue $r17;

        r0 := @this: org.jsoup.safety.Whitelist;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.jsoup.nodes.Attributes;
        specialinvoke $r2.<org.jsoup.nodes.Attributes: void <init>()>();
        r3 = $r2;
        r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>(r1);
        $r8 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;
        $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);
        if $z0 == 0 goto label1;

        $r9 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;
        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (java.util.Map) $r10;
        $r11 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>();
        r6 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label1;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.util.Map$Entry) $r12;
        $r13 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r14 = (org.jsoup.safety.Whitelist$AttributeKey) $r13;
        $r15 = virtualinvoke $r14.<org.jsoup.safety.Whitelist$AttributeKey: java.lang.String toString()>();
        $r16 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r17 = (org.jsoup.safety.Whitelist$AttributeValue) $r16;
        $r18 = virtualinvoke $r17.<org.jsoup.safety.Whitelist$AttributeValue: java.lang.String toString()>();
        virtualinvoke r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>($r15, $r18);
        goto label0;

     label1:
        return r3;
    }
}
class org.jsoup.select.Collector$Accumulator extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    private final org.jsoup.nodes.Element root;
    private final org.jsoup.select.Elements elements;
    private final org.jsoup.select.Evaluator eval;

    void <init>(org.jsoup.nodes.Element, org.jsoup.select.Elements, org.jsoup.select.Evaluator)
    {
        org.jsoup.select.Collector$Accumulator r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.select.Elements r2;
        org.jsoup.select.Evaluator r3;

        r0 := @this: org.jsoup.select.Collector$Accumulator;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.select.Elements;
        r3 := @parameter2: org.jsoup.select.Evaluator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.select.Collector$Accumulator: org.jsoup.nodes.Element root> = r1;
        r0.<org.jsoup.select.Collector$Accumulator: org.jsoup.select.Elements elements> = r2;
        r0.<org.jsoup.select.Collector$Accumulator: org.jsoup.select.Evaluator eval> = r3;
        return;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.select.Collector$Accumulator r0;
        org.jsoup.nodes.Node r1;
        int i0;
        org.jsoup.nodes.Element r2, $r4;
        boolean $z0, $z1;
        org.jsoup.select.Evaluator $r3;
        org.jsoup.select.Elements $r5;

        r0 := @this: org.jsoup.select.Collector$Accumulator;
        r1 := @parameter0: org.jsoup.nodes.Node;
        i0 := @parameter1: int;
        $z0 = r1 instanceof org.jsoup.nodes.Element;
        if $z0 == 0 goto label0;

        r2 = (org.jsoup.nodes.Element) r1;
        $r3 = r0.<org.jsoup.select.Collector$Accumulator: org.jsoup.select.Evaluator eval>;
        $r4 = r0.<org.jsoup.select.Collector$Accumulator: org.jsoup.nodes.Element root>;
        $z1 = virtualinvoke $r3.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($r4, r2);
        if $z1 == 0 goto label0;

        $r5 = r0.<org.jsoup.select.Collector$Accumulator: org.jsoup.select.Elements elements>;
        virtualinvoke $r5.<org.jsoup.select.Elements: boolean add(org.jsoup.nodes.Element)>(r2);

     label0:
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.select.Collector$Accumulator r0;
        org.jsoup.nodes.Node r1;
        int i0;

        r0 := @this: org.jsoup.select.Collector$Accumulator;
        r1 := @parameter0: org.jsoup.nodes.Node;
        i0 := @parameter1: int;
        return;
    }
}
public class org.jsoup.select.Collector extends java.lang.Object
{

    private void <init>()
    {
        org.jsoup.select.Collector r0;

        r0 := @this: org.jsoup.select.Collector;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static org.jsoup.select.Elements collect(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.select.Elements $r2, r3;
        org.jsoup.select.Collector$Accumulator $r4;
        org.jsoup.select.NodeTraversor $r5;

        r0 := @parameter0: org.jsoup.select.Evaluator;
        r1 := @parameter1: org.jsoup.nodes.Element;
        $r2 = new org.jsoup.select.Elements;
        specialinvoke $r2.<org.jsoup.select.Elements: void <init>()>();
        r3 = $r2;
        $r5 = new org.jsoup.select.NodeTraversor;
        $r4 = new org.jsoup.select.Collector$Accumulator;
        specialinvoke $r4.<org.jsoup.select.Collector$Accumulator: void <init>(org.jsoup.nodes.Element,org.jsoup.select.Elements,org.jsoup.select.Evaluator)>(r1, r3, r0);
        specialinvoke $r5.<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>($r4);
        virtualinvoke $r5.<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>(r1);
        return r3;
    }
}
final class org.jsoup.select.CombiningEvaluator$And extends org.jsoup.select.CombiningEvaluator
{

    void <init>(java.util.Collection)
    {
        org.jsoup.select.CombiningEvaluator$And r0;
        java.util.Collection r1;

        r0 := @this: org.jsoup.select.CombiningEvaluator$And;
        r1 := @parameter0: java.util.Collection;
        specialinvoke r0.<org.jsoup.select.CombiningEvaluator: void <init>(java.util.Collection)>(r1);
        return;
    }

    transient void <init>(org.jsoup.select.Evaluator[])
    {
        org.jsoup.select.CombiningEvaluator$And r0;
        org.jsoup.select.Evaluator[] r1;
        java.util.List $r2;

        r0 := @this: org.jsoup.select.CombiningEvaluator$And;
        r1 := @parameter0: org.jsoup.select.Evaluator[];
        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);
        specialinvoke r0.<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>($r2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.CombiningEvaluator$And r0;
        org.jsoup.nodes.Element r1, r2;
        java.util.Iterator r3;
        org.jsoup.select.Evaluator r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: org.jsoup.select.CombiningEvaluator$And;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r5 = r0.<org.jsoup.select.CombiningEvaluator$And: java.util.List evaluators>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.select.Evaluator) $r6;
        $z1 = virtualinvoke r4.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r2);
        if $z1 != 0 goto label1;

        return 0;

     label1:
        goto label0;

     label2:
        return 1;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.CombiningEvaluator$And r0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.select.CombiningEvaluator$And;
        $r1 = r0.<org.jsoup.select.CombiningEvaluator$And: java.util.List evaluators>;
        $r2 = staticinvoke <org.jsoup.helper.StringUtil: java.lang.String join(java.util.Collection,java.lang.String)>($r1, " ");
        return $r2;
    }
}
final class org.jsoup.select.CombiningEvaluator$Or extends org.jsoup.select.CombiningEvaluator
{

    void <init>(java.util.Collection)
    {
        org.jsoup.select.CombiningEvaluator$Or r0;
        java.util.Collection r1;
        int $i0;
        java.util.List $r2, $r4;
        org.jsoup.select.CombiningEvaluator$And $r3;

        r0 := @this: org.jsoup.select.CombiningEvaluator$Or;
        r1 := @parameter0: java.util.Collection;
        specialinvoke r0.<org.jsoup.select.CombiningEvaluator: void <init>()>();
        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();
        if $i0 <= 1 goto label0;

        $r2 = r0.<org.jsoup.select.CombiningEvaluator$Or: java.util.List evaluators>;
        $r3 = new org.jsoup.select.CombiningEvaluator$And;
        specialinvoke $r3.<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>(r1);
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);
        goto label1;

     label0:
        $r4 = r0.<org.jsoup.select.CombiningEvaluator$Or: java.util.List evaluators>;
        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>(r1);

     label1:
        return;
    }

    void <init>()
    {
        org.jsoup.select.CombiningEvaluator$Or r0;

        r0 := @this: org.jsoup.select.CombiningEvaluator$Or;
        specialinvoke r0.<org.jsoup.select.CombiningEvaluator: void <init>()>();
        return;
    }

    public void add(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.CombiningEvaluator$Or r0;
        org.jsoup.select.Evaluator r1;
        java.util.List $r2;

        r0 := @this: org.jsoup.select.CombiningEvaluator$Or;
        r1 := @parameter0: org.jsoup.select.Evaluator;
        $r2 = r0.<org.jsoup.select.CombiningEvaluator$Or: java.util.List evaluators>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.CombiningEvaluator$Or r0;
        org.jsoup.nodes.Element r1, r2;
        java.util.Iterator r3;
        org.jsoup.select.Evaluator r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: org.jsoup.select.CombiningEvaluator$Or;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r5 = r0.<org.jsoup.select.CombiningEvaluator$Or: java.util.List evaluators>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.select.Evaluator) $r6;
        $z1 = virtualinvoke r4.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r2);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.CombiningEvaluator$Or r0;
        java.lang.Object[] $r1;
        java.util.List $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.CombiningEvaluator$Or;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.CombiningEvaluator$Or: java.util.List evaluators>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":or%s", $r1);
        return $r3;
    }
}
abstract class org.jsoup.select.CombiningEvaluator extends org.jsoup.select.Evaluator
{
    final java.util.List evaluators;

    void <init>()
    {
        org.jsoup.select.CombiningEvaluator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.jsoup.select.CombiningEvaluator;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.jsoup.select.CombiningEvaluator: java.util.List evaluators> = $r1;
        return;
    }

    void <init>(java.util.Collection)
    {
        org.jsoup.select.CombiningEvaluator r0;
        java.util.Collection r1;
        java.util.List $r2;

        r0 := @this: org.jsoup.select.CombiningEvaluator;
        r1 := @parameter0: java.util.Collection;
        specialinvoke r0.<org.jsoup.select.CombiningEvaluator: void <init>()>();
        $r2 = r0.<org.jsoup.select.CombiningEvaluator: java.util.List evaluators>;
        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);
        return;
    }

    org.jsoup.select.Evaluator rightMostEvaluator()
    {
        org.jsoup.select.CombiningEvaluator r0;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        org.jsoup.select.Evaluator $r5;

        r0 := @this: org.jsoup.select.CombiningEvaluator;
        $r1 = r0.<org.jsoup.select.CombiningEvaluator: java.util.List evaluators>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i0 <= 0 goto label0;

        $r2 = r0.<org.jsoup.select.CombiningEvaluator: java.util.List evaluators>;
        $r3 = r0.<org.jsoup.select.CombiningEvaluator: java.util.List evaluators>;
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();
        $i2 = $i1 - 1;
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);
        $r5 = (org.jsoup.select.Evaluator) $r4;
        goto label1;

     label0:
        $r5 = null;

     label1:
        return $r5;
    }

    void replaceRightMostEvaluator(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.CombiningEvaluator r0;
        org.jsoup.select.Evaluator r1;
        java.util.List $r2, $r3;
        int $i0, $i1;

        r0 := @this: org.jsoup.select.CombiningEvaluator;
        r1 := @parameter0: org.jsoup.select.Evaluator;
        $r2 = r0.<org.jsoup.select.CombiningEvaluator: java.util.List evaluators>;
        $r3 = r0.<org.jsoup.select.CombiningEvaluator: java.util.List evaluators>;
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();
        $i1 = $i0 - 1;
        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r1);
        return;
    }
}
public class org.jsoup.select.Elements extends java.lang.Object implements java.util.List, java.lang.Cloneable
{
    private java.util.List contents;

    public void <init>()
    {
        org.jsoup.select.Elements r0;
        java.util.ArrayList $r1;

        r0 := @this: org.jsoup.select.Elements;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.jsoup.select.Elements: java.util.List contents> = $r1;
        return;
    }

    public void <init>(int)
    {
        org.jsoup.select.Elements r0;
        int i0;
        java.util.ArrayList $r1;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i0);
        r0.<org.jsoup.select.Elements: java.util.List contents> = $r1;
        return;
    }

    public void <init>(java.util.Collection)
    {
        org.jsoup.select.Elements r0;
        java.util.Collection r1;
        java.util.ArrayList $r2;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.util.Collection;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);
        r0.<org.jsoup.select.Elements: java.util.List contents> = $r2;
        return;
    }

    public void <init>(java.util.List)
    {
        org.jsoup.select.Elements r0;
        java.util.List r1;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.util.List;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.select.Elements: java.util.List contents> = r1;
        return;
    }

    public transient void <init>(org.jsoup.nodes.Element[])
    {
        org.jsoup.select.Elements r0;
        org.jsoup.nodes.Element[] r1;
        java.util.List $r2;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: org.jsoup.nodes.Element[];
        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);
        specialinvoke r0.<org.jsoup.select.Elements: void <init>(java.util.List)>($r2);
        return;
    }

    public org.jsoup.select.Elements clone()
    {
        org.jsoup.select.Elements r0, $r8;
        java.util.ArrayList $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r4, $r7;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r6;
        $r7 = virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element clone()>();
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);
        goto label0;

     label1:
        $r8 = new org.jsoup.select.Elements;
        specialinvoke $r8.<org.jsoup.select.Elements: void <init>(java.util.List)>(r2);
        return $r8;
    }

    public java.lang.String attr(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        $z1 = virtualinvoke r3.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>(r1);
        if $z1 == 0 goto label1;

        $r6 = virtualinvoke r3.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>(r1);
        return $r6;

     label1:
        goto label0;

     label2:
        return "";
    }

    public boolean hasAttr(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        $z1 = virtualinvoke r3.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>(r1);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    public org.jsoup.select.Elements attr(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r5 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r6;
        virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.nodes.Element attr(java.lang.String,java.lang.String)>(r1, r2);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements removeAttr(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Node removeAttr(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements addClass(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element addClass(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements removeClass(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element removeClass(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements toggleClass(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element toggleClass(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public boolean hasClass(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        $z1 = virtualinvoke r3.<org.jsoup.nodes.Element: boolean hasClass(java.lang.String)>(r1);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    public java.lang.String val()
    {
        org.jsoup.select.Elements r0;
        int $i0;
        org.jsoup.nodes.Element $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.select.Elements;
        $i0 = virtualinvoke r0.<org.jsoup.select.Elements: int size()>();
        if $i0 <= 0 goto label0;

        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();
        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Element: java.lang.String val()>();
        return $r2;

     label0:
        return "";
    }

    public org.jsoup.select.Elements val(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element val(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public java.lang.String text()
    {
        org.jsoup.select.Elements r0;
        java.lang.StringBuilder $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        int $i0;
        java.lang.String $r8, $r10;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r6;
        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();
        if $i0 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label1:
        $r8 = virtualinvoke r4.<org.jsoup.nodes.Element: java.lang.String text()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        goto label0;

     label2:
        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;
    }

    public boolean hasText()
    {
        org.jsoup.select.Elements r0;
        java.util.Iterator r1;
        org.jsoup.nodes.Element r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: org.jsoup.select.Elements;
        $r3 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.jsoup.nodes.Element) $r4;
        $z1 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean hasText()>();
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    public java.lang.String html()
    {
        org.jsoup.select.Elements r0;
        java.lang.StringBuilder $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        int $i0;
        java.lang.String $r8, $r10;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r6;
        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();
        if $i0 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label1:
        $r8 = virtualinvoke r4.<org.jsoup.nodes.Element: java.lang.String html()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        goto label0;

     label2:
        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;
    }

    public java.lang.String outerHtml()
    {
        org.jsoup.select.Elements r0;
        java.lang.StringBuilder $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        int $i0;
        java.lang.String $r8, $r10;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r6;
        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();
        if $i0 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label1:
        $r8 = virtualinvoke r4.<org.jsoup.nodes.Element: java.lang.String outerHtml()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        goto label0;

     label2:
        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Elements r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: java.lang.String outerHtml()>();
        return $r1;
    }

    public org.jsoup.select.Elements tagName(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element tagName(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements html(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element html(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements prepend(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prepend(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements append(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element append(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements before(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element before(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements after(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element after(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements wrap(java.lang.String)
    {
        org.jsoup.select.Elements r0;
        java.lang.String r1;
        java.util.Iterator r2;
        org.jsoup.nodes.Element r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.jsoup.nodes.Element) $r5;
        virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element wrap(java.lang.String)>(r1);
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements unwrap()
    {
        org.jsoup.select.Elements r0;
        java.util.Iterator r1;
        org.jsoup.nodes.Element r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.jsoup.select.Elements;
        $r3 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.jsoup.nodes.Element) $r4;
        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Node unwrap()>();
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements empty()
    {
        org.jsoup.select.Elements r0;
        java.util.Iterator r1;
        org.jsoup.nodes.Element r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.jsoup.select.Elements;
        $r3 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.jsoup.nodes.Element) $r4;
        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element empty()>();
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements remove()
    {
        org.jsoup.select.Elements r0;
        java.util.Iterator r1;
        org.jsoup.nodes.Element r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.jsoup.select.Elements;
        $r3 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.jsoup.nodes.Element) $r4;
        virtualinvoke r2.<org.jsoup.nodes.Element: void remove()>();
        goto label0;

     label1:
        return r0;
    }

    public org.jsoup.select.Elements select(java.lang.String)
    {
        org.jsoup.select.Elements r0, $r2;
        java.lang.String r1;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        $r2 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable)>(r1, r0);
        return $r2;
    }

    public org.jsoup.select.Elements not(java.lang.String)
    {
        org.jsoup.select.Elements r0, r2, $r3;
        java.lang.String r1;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        r2 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable)>(r1, r0);
        $r3 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements filterOut(java.util.Collection,java.util.Collection)>(r0, r2);
        return $r3;
    }

    public org.jsoup.select.Elements eq(int)
    {
        org.jsoup.select.Elements r0, $r2;
        int i0, $i1;
        java.util.List $r1;
        org.jsoup.nodes.Element[] $r3;
        org.jsoup.nodes.Element $r4;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i1 <= i0 goto label0;

        $r2 = new org.jsoup.select.Elements;
        $r3 = newarray (org.jsoup.nodes.Element)[1];
        $r4 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(i0);
        $r3[0] = $r4;
        specialinvoke $r2.<org.jsoup.select.Elements: void <init>(org.jsoup.nodes.Element[])>($r3);
        goto label1;

     label0:
        $r2 = new org.jsoup.select.Elements;
        specialinvoke $r2.<org.jsoup.select.Elements: void <init>()>();

     label1:
        return $r2;
    }

    public boolean is(java.lang.String)
    {
        org.jsoup.select.Elements r0, r2;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements select(java.lang.String)>(r1);
        $z0 = virtualinvoke r2.<org.jsoup.select.Elements: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public org.jsoup.select.Elements parents()
    {
        org.jsoup.select.Elements r0, $r7, $r8;
        java.util.LinkedHashSet $r1, r2;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = new java.util.LinkedHashSet;
        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();
        r2 = $r1;
        $r5 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r6;
        $r7 = virtualinvoke r4.<org.jsoup.nodes.Element: org.jsoup.select.Elements parents()>();
        virtualinvoke r2.<java.util.HashSet: boolean addAll(java.util.Collection)>($r7);
        goto label0;

     label1:
        $r8 = new org.jsoup.select.Elements;
        specialinvoke $r8.<org.jsoup.select.Elements: void <init>(java.util.Collection)>(r2);
        return $r8;
    }

    public org.jsoup.nodes.Element first()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1, $r3;
        boolean $z0;
        org.jsoup.nodes.Element $r2;
        java.lang.Object $r4;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r3 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);
        $r2 = (org.jsoup.nodes.Element) $r4;

     label1:
        return $r2;
    }

    public org.jsoup.nodes.Element last()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1, $r3, $r4;
        boolean $z0;
        org.jsoup.nodes.Element $r2;
        int $i0, $i1;
        java.lang.Object $r5;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r3 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r4 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();
        $i1 = $i0 - 1;
        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);
        $r2 = (org.jsoup.nodes.Element) $r5;

     label1:
        return $r2;
    }

    public org.jsoup.select.Elements traverse(org.jsoup.select.NodeVisitor)
    {
        org.jsoup.select.Elements r0;
        org.jsoup.select.NodeVisitor r1;
        org.jsoup.select.NodeTraversor r2, $r5;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r4;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: org.jsoup.select.NodeVisitor;
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r5 = new org.jsoup.select.NodeTraversor;
        specialinvoke $r5.<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>(r1);
        r2 = $r5;
        $r6 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r7;
        virtualinvoke r2.<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>(r4);
        goto label0;

     label1:
        return r0;
    }

    public int size()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        return $i0;
    }

    public boolean isEmpty()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();
        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        org.jsoup.select.Elements r0;
        java.lang.Object r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    public java.util.Iterator iterator()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();
        return $r2;
    }

    public java.lang.Object[] toArray()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();
        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.jsoup.select.Elements r0;
        java.lang.Object[] r1, $r3;
        java.util.List $r2;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.Object[];
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);
        return $r3;
    }

    public boolean add(org.jsoup.nodes.Element)
    {
        org.jsoup.select.Elements r0;
        org.jsoup.nodes.Element r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: org.jsoup.nodes.Element;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        org.jsoup.select.Elements r0;
        java.lang.Object r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);
        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        org.jsoup.select.Elements r0;
        java.util.Collection r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.util.Collection;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean containsAll(java.util.Collection)>(r1);
        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        org.jsoup.select.Elements r0;
        java.util.Collection r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.util.Collection;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);
        return $z0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        org.jsoup.select.Elements r0;
        int i0;
        java.util.Collection r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        r1 := @parameter1: java.util.Collection;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, r1);
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.jsoup.select.Elements r0;
        java.util.Collection r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.util.Collection;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean removeAll(java.util.Collection)>(r1);
        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.jsoup.select.Elements r0;
        java.util.Collection r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.util.Collection;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean retainAll(java.util.Collection)>(r1);
        return $z0;
    }

    public void clear()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        interfaceinvoke $r1.<java.util.List: void clear()>();
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.jsoup.select.Elements r0;
        java.lang.Object r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
        return $z0;
    }

    public int hashCode()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();
        return $i0;
    }

    public org.jsoup.nodes.Element get(int)
    {
        org.jsoup.select.Elements r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        org.jsoup.nodes.Element $r3;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);
        $r3 = (org.jsoup.nodes.Element) $r2;
        return $r3;
    }

    public org.jsoup.nodes.Element set(int, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Elements r0;
        int i0;
        org.jsoup.nodes.Element r1, $r4;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        r1 := @parameter1: org.jsoup.nodes.Element;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);
        $r4 = (org.jsoup.nodes.Element) $r3;
        return $r4;
    }

    public void add(int, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Elements r0;
        int i0;
        org.jsoup.nodes.Element r1;
        java.util.List $r2;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        r1 := @parameter1: org.jsoup.nodes.Element;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);
        return;
    }

    public org.jsoup.nodes.Element remove(int)
    {
        org.jsoup.select.Elements r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        org.jsoup.nodes.Element $r3;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);
        $r3 = (org.jsoup.nodes.Element) $r2;
        return $r3;
    }

    public int indexOf(java.lang.Object)
    {
        org.jsoup.select.Elements r0;
        java.lang.Object r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);
        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        org.jsoup.select.Elements r0;
        java.lang.Object r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $i0 = interfaceinvoke $r2.<java.util.List: int lastIndexOf(java.lang.Object)>(r1);
        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        org.jsoup.select.Elements r0;
        java.util.List $r1;
        java.util.ListIterator $r2;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();
        return $r2;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.jsoup.select.Elements r0;
        int i0;
        java.util.List $r1;
        java.util.ListIterator $r2;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>(i0);
        return $r2;
    }

    public java.util.List subList(int, int)
    {
        org.jsoup.select.Elements r0;
        int i0, i1;
        java.util.List $r1, $r2;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = r0.<org.jsoup.select.Elements: java.util.List contents>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>(i0, i1);
        return $r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.select.Elements r0, $r1;

        r0 := @this: org.jsoup.select.Elements;
        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.select.Elements clone()>();
        return $r1;
    }

    public volatile java.lang.Object remove(int)
    {
        org.jsoup.select.Elements r0;
        int i0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.nodes.Element remove(int)>(i0);
        return $r1;
    }

    public volatile void add(int, java.lang.Object)
    {
        org.jsoup.select.Elements r0;
        int i0;
        java.lang.Object r1;
        org.jsoup.nodes.Element $r2;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        $r2 = (org.jsoup.nodes.Element) r1;
        virtualinvoke r0.<org.jsoup.select.Elements: void add(int,org.jsoup.nodes.Element)>(i0, $r2);
        return;
    }

    public volatile java.lang.Object set(int, java.lang.Object)
    {
        org.jsoup.select.Elements r0;
        int i0;
        java.lang.Object r1;
        org.jsoup.nodes.Element $r2, $r3;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        $r2 = (org.jsoup.nodes.Element) r1;
        $r3 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.nodes.Element set(int,org.jsoup.nodes.Element)>(i0, $r2);
        return $r3;
    }

    public volatile java.lang.Object get(int)
    {
        org.jsoup.select.Elements r0;
        int i0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.select.Elements;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(i0);
        return $r1;
    }

    public volatile boolean add(java.lang.Object)
    {
        org.jsoup.select.Elements r0;
        java.lang.Object r1;
        org.jsoup.nodes.Element $r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.Elements;
        r1 := @parameter0: java.lang.Object;
        $r2 = (org.jsoup.nodes.Element) r1;
        $z0 = virtualinvoke r0.<org.jsoup.select.Elements: boolean add(org.jsoup.nodes.Element)>($r2);
        return $z0;
    }
}
public final class org.jsoup.select.Evaluator$AllElements extends org.jsoup.select.Evaluator
{

    public void <init>()
    {
        org.jsoup.select.Evaluator$AllElements r0;

        r0 := @this: org.jsoup.select.Evaluator$AllElements;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$AllElements r0;
        org.jsoup.nodes.Element r1, r2;

        r0 := @this: org.jsoup.select.Evaluator$AllElements;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        return 1;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$AllElements r0;

        r0 := @this: org.jsoup.select.Evaluator$AllElements;
        return "*";
    }
}
public final class org.jsoup.select.Evaluator$Attribute extends org.jsoup.select.Evaluator
{
    private java.lang.String key;

    public void <init>(java.lang.String)
    {
        org.jsoup.select.Evaluator$Attribute r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.select.Evaluator$Attribute;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        r0.<org.jsoup.select.Evaluator$Attribute: java.lang.String key> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$Attribute r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$Attribute;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$Attribute: java.lang.String key>;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r3);
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$Attribute r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.select.Evaluator$Attribute;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$Attribute: java.lang.String key>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s]", $r1);
        return $r3;
    }
}
public abstract class org.jsoup.select.Evaluator$AttributeKeyPair extends org.jsoup.select.Evaluator
{
    java.lang.String key;
    java.lang.String value;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Evaluator$AttributeKeyPair r0;
        java.lang.String r1, r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.jsoup.select.Evaluator$AttributeKeyPair;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r2);
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.jsoup.select.Evaluator$AttributeKeyPair: java.lang.String key> = $r4;
        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.jsoup.select.Evaluator$AttributeKeyPair: java.lang.String value> = $r6;
        return;
    }
}
public final class org.jsoup.select.Evaluator$AttributeStarting extends org.jsoup.select.Evaluator
{
    private java.lang.String keyPrefix;

    public void <init>(java.lang.String)
    {
        org.jsoup.select.Evaluator$AttributeStarting r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.select.Evaluator$AttributeStarting;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        r0.<org.jsoup.select.Evaluator$AttributeStarting: java.lang.String keyPrefix> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$AttributeStarting r0;
        org.jsoup.nodes.Element r1, r2;
        java.util.List r3;
        java.util.Iterator r4;
        org.jsoup.nodes.Attribute r5;
        org.jsoup.nodes.Attributes $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.String $r8, $r9;

        r0 := @this: org.jsoup.select.Evaluator$AttributeStarting;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r6 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();
        r3 = virtualinvoke $r6.<org.jsoup.nodes.Attributes: java.util.List asList()>();
        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.jsoup.nodes.Attribute) $r7;
        $r8 = virtualinvoke r5.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();
        $r9 = r0.<org.jsoup.select.Evaluator$AttributeStarting: java.lang.String keyPrefix>;
        $z1 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>($r9);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$AttributeStarting r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.select.Evaluator$AttributeStarting;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$AttributeStarting: java.lang.String keyPrefix>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[^%s]", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$AttributeWithValue extends org.jsoup.select.Evaluator$AttributeKeyPair
{

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Evaluator$AttributeWithValue r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValue;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$AttributeWithValue r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValue;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValue: java.lang.String key>;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r3);
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.select.Evaluator$AttributeWithValue: java.lang.String value>;
        $r5 = r0.<org.jsoup.select.Evaluator$AttributeWithValue: java.lang.String key>;
        $r6 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>($r5);
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$AttributeWithValue r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValue;
        $r1 = newarray (java.lang.Object)[2];
        $r2 = r0.<org.jsoup.select.Evaluator$AttributeWithValue: java.lang.String key>;
        $r1[0] = $r2;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValue: java.lang.String value>;
        $r1[1] = $r3;
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s=%s]", $r1);
        return $r4;
    }
}
public final class org.jsoup.select.Evaluator$AttributeWithValueContaining extends org.jsoup.select.Evaluator$AttributeKeyPair
{

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Evaluator$AttributeWithValueContaining r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueContaining;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$AttributeWithValueContaining r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueContaining;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueContaining: java.lang.String key>;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r3);
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.select.Evaluator$AttributeWithValueContaining: java.lang.String key>;
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        $r7 = r0.<org.jsoup.select.Evaluator$AttributeWithValueContaining: java.lang.String value>;
        $z1 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>($r7);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$AttributeWithValueContaining r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueContaining;
        $r1 = newarray (java.lang.Object)[2];
        $r2 = r0.<org.jsoup.select.Evaluator$AttributeWithValueContaining: java.lang.String key>;
        $r1[0] = $r2;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueContaining: java.lang.String value>;
        $r1[1] = $r3;
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s*=%s]", $r1);
        return $r4;
    }
}
public final class org.jsoup.select.Evaluator$AttributeWithValueEnding extends org.jsoup.select.Evaluator$AttributeKeyPair
{

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Evaluator$AttributeWithValueEnding r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueEnding;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$AttributeWithValueEnding r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueEnding;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueEnding: java.lang.String key>;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r3);
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.select.Evaluator$AttributeWithValueEnding: java.lang.String key>;
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        $r7 = r0.<org.jsoup.select.Evaluator$AttributeWithValueEnding: java.lang.String value>;
        $z1 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>($r7);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$AttributeWithValueEnding r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueEnding;
        $r1 = newarray (java.lang.Object)[2];
        $r2 = r0.<org.jsoup.select.Evaluator$AttributeWithValueEnding: java.lang.String key>;
        $r1[0] = $r2;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueEnding: java.lang.String value>;
        $r1[1] = $r3;
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s$=%s]", $r1);
        return $r4;
    }
}
public final class org.jsoup.select.Evaluator$AttributeWithValueMatching extends org.jsoup.select.Evaluator
{
    java.lang.String key;
    java.util.regex.Pattern pattern;

    public void <init>(java.lang.String, java.util.regex.Pattern)
    {
        org.jsoup.select.Evaluator$AttributeWithValueMatching r0;
        java.lang.String r1, $r3, $r4;
        java.util.regex.Pattern r2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueMatching;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.regex.Pattern;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.jsoup.select.Evaluator$AttributeWithValueMatching: java.lang.String key> = $r4;
        r0.<org.jsoup.select.Evaluator$AttributeWithValueMatching: java.util.regex.Pattern pattern> = r2;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$AttributeWithValueMatching r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r5, $r6;
        boolean $z0, $z1, $z2;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r7;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueMatching;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueMatching: java.lang.String key>;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r3);
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.select.Evaluator$AttributeWithValueMatching: java.util.regex.Pattern pattern>;
        $r5 = r0.<org.jsoup.select.Evaluator$AttributeWithValueMatching: java.lang.String key>;
        $r6 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>($r5);
        $r7 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r6);
        $z1 = virtualinvoke $r7.<java.util.regex.Matcher: boolean find()>();
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$AttributeWithValueMatching r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, $r5;
        java.util.regex.Pattern $r3;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueMatching;
        $r1 = newarray (java.lang.Object)[2];
        $r2 = r0.<org.jsoup.select.Evaluator$AttributeWithValueMatching: java.lang.String key>;
        $r1[0] = $r2;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueMatching: java.util.regex.Pattern pattern>;
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String toString()>();
        $r1[1] = $r4;
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s~=%s]", $r1);
        return $r5;
    }
}
public final class org.jsoup.select.Evaluator$AttributeWithValueNot extends org.jsoup.select.Evaluator$AttributeKeyPair
{

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Evaluator$AttributeWithValueNot r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueNot;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$AttributeWithValueNot r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueNot;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueNot: java.lang.String value>;
        $r4 = r0.<org.jsoup.select.Evaluator$AttributeWithValueNot: java.lang.String key>;
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>($r4);
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$AttributeWithValueNot r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueNot;
        $r1 = newarray (java.lang.Object)[2];
        $r2 = r0.<org.jsoup.select.Evaluator$AttributeWithValueNot: java.lang.String key>;
        $r1[0] = $r2;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueNot: java.lang.String value>;
        $r1[1] = $r3;
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s!=%s]", $r1);
        return $r4;
    }
}
public final class org.jsoup.select.Evaluator$AttributeWithValueStarting extends org.jsoup.select.Evaluator$AttributeKeyPair
{

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Evaluator$AttributeWithValueStarting r0;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueStarting;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$AttributeWithValueStarting r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueStarting;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueStarting: java.lang.String key>;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>($r3);
        if $z0 == 0 goto label0;

        $r4 = r0.<org.jsoup.select.Evaluator$AttributeWithValueStarting: java.lang.String key>;
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        $r7 = r0.<org.jsoup.select.Evaluator$AttributeWithValueStarting: java.lang.String value>;
        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r7);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$AttributeWithValueStarting r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.jsoup.select.Evaluator$AttributeWithValueStarting;
        $r1 = newarray (java.lang.Object)[2];
        $r2 = r0.<org.jsoup.select.Evaluator$AttributeWithValueStarting: java.lang.String key>;
        $r1[0] = $r2;
        $r3 = r0.<org.jsoup.select.Evaluator$AttributeWithValueStarting: java.lang.String value>;
        $r1[1] = $r3;
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s^=%s]", $r1);
        return $r4;
    }
}
public final class org.jsoup.select.Evaluator$Class extends org.jsoup.select.Evaluator
{
    private java.lang.String className;

    public void <init>(java.lang.String)
    {
        org.jsoup.select.Evaluator$Class r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.select.Evaluator$Class;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        r0.<org.jsoup.select.Evaluator$Class: java.lang.String className> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$Class r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$Class;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$Class: java.lang.String className>;
        $z0 = virtualinvoke r2.<org.jsoup.nodes.Element: boolean hasClass(java.lang.String)>($r3);
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$Class r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.select.Evaluator$Class;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$Class: java.lang.String className>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(".%s", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$ContainsOwnText extends org.jsoup.select.Evaluator
{
    private java.lang.String searchText;

    public void <init>(java.lang.String)
    {
        org.jsoup.select.Evaluator$ContainsOwnText r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.select.Evaluator$ContainsOwnText;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.jsoup.select.Evaluator$ContainsOwnText: java.lang.String searchText> = $r2;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$ContainsOwnText r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$ContainsOwnText;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String ownText()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        $r5 = r0.<org.jsoup.select.Evaluator$ContainsOwnText: java.lang.String searchText>;
        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$ContainsOwnText r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.select.Evaluator$ContainsOwnText;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$ContainsOwnText: java.lang.String searchText>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":containsOwn(%s", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$ContainsText extends org.jsoup.select.Evaluator
{
    private java.lang.String searchText;

    public void <init>(java.lang.String)
    {
        org.jsoup.select.Evaluator$ContainsText r0;
        java.lang.String r1, $r2;

        r0 := @this: org.jsoup.select.Evaluator$ContainsText;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.jsoup.select.Evaluator$ContainsText: java.lang.String searchText> = $r2;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$ContainsText r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$ContainsText;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String text()>();
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        $r5 = r0.<org.jsoup.select.Evaluator$ContainsText: java.lang.String searchText>;
        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$ContainsText r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.select.Evaluator$ContainsText;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$ContainsText: java.lang.String searchText>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":contains(%s", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$Id extends org.jsoup.select.Evaluator
{
    private java.lang.String id;

    public void <init>(java.lang.String)
    {
        org.jsoup.select.Evaluator$Id r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.select.Evaluator$Id;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        r0.<org.jsoup.select.Evaluator$Id: java.lang.String id> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$Id r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$Id;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.Evaluator$Id: java.lang.String id>;
        $r4 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String id()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$Id r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.select.Evaluator$Id;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$Id: java.lang.String id>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#%s", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$IndexEquals extends org.jsoup.select.Evaluator$IndexEvaluator
{

    public void <init>(int)
    {
        org.jsoup.select.Evaluator$IndexEquals r0;
        int i0;

        r0 := @this: org.jsoup.select.Evaluator$IndexEquals;
        i0 := @parameter0: int;
        specialinvoke r0.<org.jsoup.select.Evaluator$IndexEvaluator: void <init>(int)>(i0);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$IndexEquals r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.Integer $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$IndexEquals;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.Integer elementSiblingIndex()>();
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        $i1 = r0.<org.jsoup.select.Evaluator$IndexEquals: int index>;
        if $i0 != $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$IndexEquals r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.Evaluator$IndexEquals;
        $r1 = newarray (java.lang.Object)[1];
        $i0 = r0.<org.jsoup.select.Evaluator$IndexEquals: int index>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":eq(%d)", $r1);
        return $r3;
    }
}
public abstract class org.jsoup.select.Evaluator$IndexEvaluator extends org.jsoup.select.Evaluator
{
    int index;

    public void <init>(int)
    {
        org.jsoup.select.Evaluator$IndexEvaluator r0;
        int i0;

        r0 := @this: org.jsoup.select.Evaluator$IndexEvaluator;
        i0 := @parameter0: int;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        r0.<org.jsoup.select.Evaluator$IndexEvaluator: int index> = i0;
        return;
    }
}
public final class org.jsoup.select.Evaluator$IndexGreaterThan extends org.jsoup.select.Evaluator$IndexEvaluator
{

    public void <init>(int)
    {
        org.jsoup.select.Evaluator$IndexGreaterThan r0;
        int i0;

        r0 := @this: org.jsoup.select.Evaluator$IndexGreaterThan;
        i0 := @parameter0: int;
        specialinvoke r0.<org.jsoup.select.Evaluator$IndexEvaluator: void <init>(int)>(i0);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$IndexGreaterThan r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.Integer $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$IndexGreaterThan;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.Integer elementSiblingIndex()>();
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        $i1 = r0.<org.jsoup.select.Evaluator$IndexGreaterThan: int index>;
        if $i0 <= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$IndexGreaterThan r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.Evaluator$IndexGreaterThan;
        $r1 = newarray (java.lang.Object)[1];
        $i0 = r0.<org.jsoup.select.Evaluator$IndexGreaterThan: int index>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":gt(%d)", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$IndexLessThan extends org.jsoup.select.Evaluator$IndexEvaluator
{

    public void <init>(int)
    {
        org.jsoup.select.Evaluator$IndexLessThan r0;
        int i0;

        r0 := @this: org.jsoup.select.Evaluator$IndexLessThan;
        i0 := @parameter0: int;
        specialinvoke r0.<org.jsoup.select.Evaluator$IndexEvaluator: void <init>(int)>(i0);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$IndexLessThan r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.Integer $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$IndexLessThan;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.Integer elementSiblingIndex()>();
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        $i1 = r0.<org.jsoup.select.Evaluator$IndexLessThan: int index>;
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$IndexLessThan r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.Evaluator$IndexLessThan;
        $r1 = newarray (java.lang.Object)[1];
        $i0 = r0.<org.jsoup.select.Evaluator$IndexLessThan: int index>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":lt(%d)", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$Matches extends org.jsoup.select.Evaluator
{
    private java.util.regex.Pattern pattern;

    public void <init>(java.util.regex.Pattern)
    {
        org.jsoup.select.Evaluator$Matches r0;
        java.util.regex.Pattern r1;

        r0 := @this: org.jsoup.select.Evaluator$Matches;
        r1 := @parameter0: java.util.regex.Pattern;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        r0.<org.jsoup.select.Evaluator$Matches: java.util.regex.Pattern pattern> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$Matches r0;
        org.jsoup.nodes.Element r1, r2;
        java.util.regex.Matcher r3;
        java.util.regex.Pattern $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$Matches;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r4 = r0.<org.jsoup.select.Evaluator$Matches: java.util.regex.Pattern pattern>;
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String text()>();
        r3 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);
        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$Matches r0;
        java.lang.Object[] $r1;
        java.util.regex.Pattern $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.Evaluator$Matches;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$Matches: java.util.regex.Pattern pattern>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":matches(%s", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$MatchesOwn extends org.jsoup.select.Evaluator
{
    private java.util.regex.Pattern pattern;

    public void <init>(java.util.regex.Pattern)
    {
        org.jsoup.select.Evaluator$MatchesOwn r0;
        java.util.regex.Pattern r1;

        r0 := @this: org.jsoup.select.Evaluator$MatchesOwn;
        r1 := @parameter0: java.util.regex.Pattern;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        r0.<org.jsoup.select.Evaluator$MatchesOwn: java.util.regex.Pattern pattern> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$MatchesOwn r0;
        org.jsoup.nodes.Element r1, r2;
        java.util.regex.Matcher r3;
        java.util.regex.Pattern $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$MatchesOwn;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r4 = r0.<org.jsoup.select.Evaluator$MatchesOwn: java.util.regex.Pattern pattern>;
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String ownText()>();
        r3 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);
        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$MatchesOwn r0;
        java.lang.Object[] $r1;
        java.util.regex.Pattern $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.Evaluator$MatchesOwn;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$MatchesOwn: java.util.regex.Pattern pattern>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":matchesOwn(%s", $r1);
        return $r3;
    }
}
public final class org.jsoup.select.Evaluator$Tag extends org.jsoup.select.Evaluator
{
    private java.lang.String tagName;

    public void <init>(java.lang.String)
    {
        org.jsoup.select.Evaluator$Tag r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.select.Evaluator$Tag;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        r0.<org.jsoup.select.Evaluator$Tag: java.lang.String tagName> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Evaluator$Tag r0;
        org.jsoup.nodes.Element r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: org.jsoup.select.Evaluator$Tag;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String tagName()>();
        $r4 = r0.<org.jsoup.select.Evaluator$Tag: java.lang.String tagName>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        return $z0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Evaluator$Tag r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jsoup.select.Evaluator$Tag;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.Evaluator$Tag: java.lang.String tagName>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r1);
        return $r3;
    }
}
public abstract class org.jsoup.select.Evaluator extends java.lang.Object
{

    protected void <init>()
    {
        org.jsoup.select.Evaluator r0;

        r0 := @this: org.jsoup.select.Evaluator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public abstract boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element);
}
public class org.jsoup.select.NodeTraversor extends java.lang.Object
{
    private org.jsoup.select.NodeVisitor visitor;

    public void <init>(org.jsoup.select.NodeVisitor)
    {
        org.jsoup.select.NodeTraversor r0;
        org.jsoup.select.NodeVisitor r1;

        r0 := @this: org.jsoup.select.NodeTraversor;
        r1 := @parameter0: org.jsoup.select.NodeVisitor;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor> = r1;
        return;
    }

    public void traverse(org.jsoup.nodes.Node)
    {
        org.jsoup.select.NodeTraversor r0;
        org.jsoup.nodes.Node r1, r2, $r5;
        int i0, $i1;
        org.jsoup.select.NodeVisitor $r3, $r6, $r7;
        java.util.List $r4;

        r0 := @this: org.jsoup.select.NodeTraversor;
        r1 := @parameter0: org.jsoup.nodes.Node;
        r2 = r1;
        i0 = 0;

     label0:
        if r2 == null goto label4;

        $r3 = r0.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;
        interfaceinvoke $r3.<org.jsoup.select.NodeVisitor: void head(org.jsoup.nodes.Node,int)>(r2, i0);
        $r4 = virtualinvoke r2.<org.jsoup.nodes.Node: java.util.List childNodes()>();
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        if $i1 <= 0 goto label1;

        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node childNode(int)>(0);
        i0 = i0 + 1;
        goto label0;

     label1:
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();
        if $r5 != null goto label2;

        if i0 <= 0 goto label2;

        $r6 = r0.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;
        interfaceinvoke $r6.<org.jsoup.select.NodeVisitor: void tail(org.jsoup.nodes.Node,int)>(r2, i0);
        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parent()>();
        i0 = i0 + -1;
        goto label1;

     label2:
        $r7 = r0.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;
        interfaceinvoke $r7.<org.jsoup.select.NodeVisitor: void tail(org.jsoup.nodes.Node,int)>(r2, i0);
        if r2 != r1 goto label3;

        goto label4;

     label3:
        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();
        goto label0;

     label4:
        return;
    }
}
public interface  org.jsoup.select.NodeVisitor extends java.lang.Object
{

    public abstract void head(org.jsoup.nodes.Node, int);

    public abstract void tail(org.jsoup.nodes.Node, int);
}
class org.jsoup.select.QueryParser extends java.lang.Object
{
    private static final java.lang.String[] combinators;
    private org.jsoup.parser.TokenQueue tq;
    private java.lang.String query;
    private java.util.List evals;

    private void <init>(java.lang.String)
    {
        org.jsoup.select.QueryParser r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        org.jsoup.parser.TokenQueue $r3;

        r0 := @this: org.jsoup.select.QueryParser;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.jsoup.select.QueryParser: java.util.List evals> = $r2;
        r0.<org.jsoup.select.QueryParser: java.lang.String query> = r1;
        $r3 = new org.jsoup.parser.TokenQueue;
        specialinvoke $r3.<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>(r1);
        r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq> = $r3;
        return;
    }

    public static org.jsoup.select.Evaluator parse(java.lang.String)
    {
        java.lang.String r0;
        org.jsoup.select.QueryParser $r1, r2;
        org.jsoup.select.Evaluator $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = new org.jsoup.select.QueryParser;
        specialinvoke $r1.<org.jsoup.select.QueryParser: void <init>(java.lang.String)>(r0);
        r2 = $r1;
        $r3 = virtualinvoke r2.<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>();
        return $r3;
    }

    org.jsoup.select.Evaluator parse()
    {
        org.jsoup.select.QueryParser r0;
        java.lang.String[] $r1, $r10;
        boolean z0, $z2, $z4, $z5;
        org.jsoup.parser.TokenQueue $r2, $r3, $r6, $r7, $r8, $r9, $r11;
        java.util.List $r4, $r12, $r13, $r17;
        org.jsoup.select.StructuralEvaluator$Root $r5;
        char $c0, $c1;
        int $i2;
        java.lang.Object $r14;
        org.jsoup.select.Evaluator $r15;
        org.jsoup.select.CombiningEvaluator$And $r16;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        virtualinvoke $r2.<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>();
        $r3 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r1 = <org.jsoup.select.QueryParser: java.lang.String[] combinators>;
        $z2 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>($r1);
        if $z2 == 0 goto label0;

        $r4 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r5 = new org.jsoup.select.StructuralEvaluator$Root;
        specialinvoke $r5.<org.jsoup.select.StructuralEvaluator$Root: void <init>()>();
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);
        $r6 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $c0 = virtualinvoke $r6.<org.jsoup.parser.TokenQueue: char consume()>();
        specialinvoke r0.<org.jsoup.select.QueryParser: void combinator(char)>($c0);
        goto label1;

     label0:
        specialinvoke r0.<org.jsoup.select.QueryParser: void findElements()>();

     label1:
        $r7 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z4 = virtualinvoke $r7.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z4 != 0 goto label5;

        $r8 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        z0 = virtualinvoke $r8.<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>();
        $r9 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r10 = <org.jsoup.select.QueryParser: java.lang.String[] combinators>;
        $z5 = virtualinvoke $r9.<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>($r10);
        if $z5 == 0 goto label2;

        $r11 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $c1 = virtualinvoke $r11.<org.jsoup.parser.TokenQueue: char consume()>();
        specialinvoke r0.<org.jsoup.select.QueryParser: void combinator(char)>($c1);
        goto label4;

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<org.jsoup.select.QueryParser: void combinator(char)>(32);
        goto label4;

     label3:
        specialinvoke r0.<org.jsoup.select.QueryParser: void findElements()>();

     label4:
        goto label1;

     label5:
        $r12 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $i2 = interfaceinvoke $r12.<java.util.List: int size()>();
        if $i2 != 1 goto label6;

        $r13 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);
        $r15 = (org.jsoup.select.Evaluator) $r14;
        return $r15;

     label6:
        $r16 = new org.jsoup.select.CombiningEvaluator$And;
        $r17 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        specialinvoke $r16.<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>($r17);
        return $r16;
    }

    private void combinator(char)
    {
        org.jsoup.select.QueryParser r0;
        char c0;
        java.lang.String r1, $r33;
        org.jsoup.select.Evaluator r2, r3, r4, $r10;
        boolean z0, $z2, $z3;
        org.jsoup.select.CombiningEvaluator$Or r5, $r11, $r28, $r35;
        org.jsoup.parser.TokenQueue $r6;
        java.util.List $r7, $r8, $r13, $r14, $r36;
        int $i1;
        java.lang.Object $r9;
        org.jsoup.select.CombiningEvaluator$And $r12, $r15, $r19, $r22, $r25;
        org.jsoup.select.Evaluator[] $r16, $r20, $r23, $r26;
        org.jsoup.select.StructuralEvaluator$ImmediateParent $r17;
        org.jsoup.select.CombiningEvaluator r18;
        org.jsoup.select.StructuralEvaluator$Parent $r21;
        org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling $r24;
        org.jsoup.select.StructuralEvaluator$PreviousSibling $r27;
        org.jsoup.select.Selector$SelectorParseException $r29;
        java.lang.StringBuilder $r30, $r31, $r32;
        java.lang.Object[] $r34;

        r0 := @this: org.jsoup.select.QueryParser;
        c0 := @parameter0: char;
        $r6 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        virtualinvoke $r6.<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>();
        r1 = specialinvoke r0.<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>();
        r2 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>(r1);
        z0 = 0;
        $r7 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();
        if $i1 != 1 goto label0;

        $r8 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);
        $r10 = (org.jsoup.select.Evaluator) $r9;
        r3 = $r10;
        r4 = $r10;
        $z2 = r4 instanceof org.jsoup.select.CombiningEvaluator$Or;
        if $z2 == 0 goto label1;

        if c0 == 44 goto label1;

        $r11 = (org.jsoup.select.CombiningEvaluator$Or) r3;
        r3 = virtualinvoke $r11.<org.jsoup.select.CombiningEvaluator$Or: org.jsoup.select.Evaluator rightMostEvaluator()>();
        z0 = 1;
        goto label1;

     label0:
        $r12 = new org.jsoup.select.CombiningEvaluator$And;
        $r13 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        specialinvoke $r12.<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>($r13);
        r3 = $r12;
        r4 = $r12;

     label1:
        $r14 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        interfaceinvoke $r14.<java.util.List: void clear()>();
        if c0 != 62 goto label2;

        $r15 = new org.jsoup.select.CombiningEvaluator$And;
        $r16 = newarray (org.jsoup.select.Evaluator)[2];
        $r16[0] = r2;
        $r17 = new org.jsoup.select.StructuralEvaluator$ImmediateParent;
        specialinvoke $r17.<org.jsoup.select.StructuralEvaluator$ImmediateParent: void <init>(org.jsoup.select.Evaluator)>(r3);
        $r16[1] = $r17;
        specialinvoke $r15.<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>($r16);
        r18 = $r15;
        goto label9;

     label2:
        if c0 != 32 goto label3;

        $r19 = new org.jsoup.select.CombiningEvaluator$And;
        $r20 = newarray (org.jsoup.select.Evaluator)[2];
        $r20[0] = r2;
        $r21 = new org.jsoup.select.StructuralEvaluator$Parent;
        specialinvoke $r21.<org.jsoup.select.StructuralEvaluator$Parent: void <init>(org.jsoup.select.Evaluator)>(r3);
        $r20[1] = $r21;
        specialinvoke $r19.<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>($r20);
        r18 = $r19;
        goto label9;

     label3:
        if c0 != 43 goto label4;

        $r22 = new org.jsoup.select.CombiningEvaluator$And;
        $r23 = newarray (org.jsoup.select.Evaluator)[2];
        $r23[0] = r2;
        $r24 = new org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling;
        specialinvoke $r24.<org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling: void <init>(org.jsoup.select.Evaluator)>(r3);
        $r23[1] = $r24;
        specialinvoke $r22.<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>($r23);
        r18 = $r22;
        goto label9;

     label4:
        if c0 != 126 goto label5;

        $r25 = new org.jsoup.select.CombiningEvaluator$And;
        $r26 = newarray (org.jsoup.select.Evaluator)[2];
        $r26[0] = r2;
        $r27 = new org.jsoup.select.StructuralEvaluator$PreviousSibling;
        specialinvoke $r27.<org.jsoup.select.StructuralEvaluator$PreviousSibling: void <init>(org.jsoup.select.Evaluator)>(r3);
        $r26[1] = $r27;
        specialinvoke $r25.<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>($r26);
        r18 = $r25;
        goto label9;

     label5:
        if c0 != 44 goto label8;

        $z3 = r3 instanceof org.jsoup.select.CombiningEvaluator$Or;
        if $z3 == 0 goto label6;

        r5 = (org.jsoup.select.CombiningEvaluator$Or) r3;
        virtualinvoke r5.<org.jsoup.select.CombiningEvaluator$Or: void add(org.jsoup.select.Evaluator)>(r2);
        goto label7;

     label6:
        $r28 = new org.jsoup.select.CombiningEvaluator$Or;
        specialinvoke $r28.<org.jsoup.select.CombiningEvaluator$Or: void <init>()>();
        r5 = $r28;
        virtualinvoke r5.<org.jsoup.select.CombiningEvaluator$Or: void add(org.jsoup.select.Evaluator)>(r3);
        virtualinvoke r5.<org.jsoup.select.CombiningEvaluator$Or: void add(org.jsoup.select.Evaluator)>(r2);

     label7:
        r18 = r5;
        goto label9;

     label8:
        $r29 = new org.jsoup.select.Selector$SelectorParseException;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown combinator: ");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        $r34 = newarray (java.lang.Object)[0];
        specialinvoke $r29.<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>($r33, $r34);
        throw $r29;

     label9:
        if z0 == 0 goto label10;

        $r35 = (org.jsoup.select.CombiningEvaluator$Or) r4;
        virtualinvoke $r35.<org.jsoup.select.CombiningEvaluator$Or: void replaceRightMostEvaluator(org.jsoup.select.Evaluator)>(r18);
        goto label11;

     label10:
        r4 = r18;

     label11:
        $r36 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>(r4);
        return;
    }

    private java.lang.String consumeSubQuery()
    {
        org.jsoup.select.QueryParser r0;
        java.lang.StringBuilder $r1, r2, $r5, $r8, $r11, $r14;
        org.jsoup.parser.TokenQueue $r3, $r4, $r6, $r10, $r12, $r16, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r7, $r13, $r20;
        java.lang.String[] $r17;
        char $c0;

        r0 := @this: org.jsoup.select.QueryParser;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;

     label0:
        $r3 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z0 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z0 != 0 goto label4;

        $r4 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z1 = virtualinvoke $r4.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>("(");
        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
        $r6 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r7 = virtualinvoke $r6.<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>(40, 41);
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        goto label0;

     label1:
        $r10 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z2 = virtualinvoke $r10.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>("[");
        if $z2 == 0 goto label2;

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r12 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r13 = virtualinvoke $r12.<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>(91, 93);
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        goto label0;

     label2:
        $r16 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r17 = <org.jsoup.select.QueryParser: java.lang.String[] combinators>;
        $z3 = virtualinvoke $r16.<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>($r17);
        if $z3 == 0 goto label3;

        goto label4;

     label3:
        $r18 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $c0 = virtualinvoke $r18.<org.jsoup.parser.TokenQueue: char consume()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);
        goto label0;

     label4:
        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r20;
    }

    private void findElements()
    {
        org.jsoup.select.QueryParser r0;
        org.jsoup.parser.TokenQueue $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.jsoup.select.Selector$SelectorParseException $r15;
        java.lang.Object[] $r16;
        java.lang.String $r17, $r19;

        r0 := @this: org.jsoup.select.QueryParser;
        $r1 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z0 = virtualinvoke $r1.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>("#");
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.jsoup.select.QueryParser: void byId()>();
        goto label14;

     label0:
        $r2 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z1 = virtualinvoke $r2.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>(".");
        if $z1 == 0 goto label1;

        specialinvoke r0.<org.jsoup.select.QueryParser: void byClass()>();
        goto label14;

     label1:
        $r3 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z2 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: boolean matchesWord()>();
        if $z2 == 0 goto label2;

        specialinvoke r0.<org.jsoup.select.QueryParser: void byTag()>();
        goto label14;

     label2:
        $r4 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z3 = virtualinvoke $r4.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>("[");
        if $z3 == 0 goto label3;

        specialinvoke r0.<org.jsoup.select.QueryParser: void byAttribute()>();
        goto label14;

     label3:
        $r5 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z4 = virtualinvoke $r5.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>("*");
        if $z4 == 0 goto label4;

        specialinvoke r0.<org.jsoup.select.QueryParser: void allElements()>();
        goto label14;

     label4:
        $r6 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z5 = virtualinvoke $r6.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>(":lt(");
        if $z5 == 0 goto label5;

        specialinvoke r0.<org.jsoup.select.QueryParser: void indexLessThan()>();
        goto label14;

     label5:
        $r7 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z6 = virtualinvoke $r7.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>(":gt(");
        if $z6 == 0 goto label6;

        specialinvoke r0.<org.jsoup.select.QueryParser: void indexGreaterThan()>();
        goto label14;

     label6:
        $r8 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z7 = virtualinvoke $r8.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>(":eq(");
        if $z7 == 0 goto label7;

        specialinvoke r0.<org.jsoup.select.QueryParser: void indexEquals()>();
        goto label14;

     label7:
        $r9 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z8 = virtualinvoke $r9.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(":has(");
        if $z8 == 0 goto label8;

        specialinvoke r0.<org.jsoup.select.QueryParser: void has()>();
        goto label14;

     label8:
        $r10 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z9 = virtualinvoke $r10.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(":contains(");
        if $z9 == 0 goto label9;

        specialinvoke r0.<org.jsoup.select.QueryParser: void contains(boolean)>(0);
        goto label14;

     label9:
        $r11 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z10 = virtualinvoke $r11.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(":containsOwn(");
        if $z10 == 0 goto label10;

        specialinvoke r0.<org.jsoup.select.QueryParser: void contains(boolean)>(1);
        goto label14;

     label10:
        $r12 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z11 = virtualinvoke $r12.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(":matches(");
        if $z11 == 0 goto label11;

        specialinvoke r0.<org.jsoup.select.QueryParser: void matches(boolean)>(0);
        goto label14;

     label11:
        $r13 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z12 = virtualinvoke $r13.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(":matchesOwn(");
        if $z12 == 0 goto label12;

        specialinvoke r0.<org.jsoup.select.QueryParser: void matches(boolean)>(1);
        goto label14;

     label12:
        $r14 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $z13 = virtualinvoke $r14.<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>(":not(");
        if $z13 == 0 goto label13;

        specialinvoke r0.<org.jsoup.select.QueryParser: void not()>();
        goto label14;

     label13:
        $r15 = new org.jsoup.select.Selector$SelectorParseException;
        $r16 = newarray (java.lang.Object)[2];
        $r17 = r0.<org.jsoup.select.QueryParser: java.lang.String query>;
        $r16[0] = $r17;
        $r18 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r19 = virtualinvoke $r18.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        $r16[1] = $r19;
        specialinvoke $r15.<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>("Could not parse query \'%s\': unexpected token at \'%s\'", $r16);
        throw $r15;

     label14:
        return;
    }

    private void byId()
    {
        org.jsoup.select.QueryParser r0;
        java.lang.String r1;
        org.jsoup.select.Evaluator$Id $r2;
        org.jsoup.parser.TokenQueue $r3;
        java.util.List $r4;

        r0 := @this: org.jsoup.select.QueryParser;
        $r3 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        r1 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: java.lang.String consumeCssIdentifier()>();
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r4 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r2 = new org.jsoup.select.Evaluator$Id;
        specialinvoke $r2.<org.jsoup.select.Evaluator$Id: void <init>(java.lang.String)>(r1);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);
        return;
    }

    private void byClass()
    {
        org.jsoup.select.QueryParser r0;
        java.lang.String r1, $r5, $r6;
        org.jsoup.select.Evaluator$Class $r2;
        org.jsoup.parser.TokenQueue $r3;
        java.util.List $r4;

        r0 := @this: org.jsoup.select.QueryParser;
        $r3 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        r1 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: java.lang.String consumeCssIdentifier()>();
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $r4 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r2 = new org.jsoup.select.Evaluator$Class;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<org.jsoup.select.Evaluator$Class: void <init>(java.lang.String)>($r6);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);
        return;
    }

    private void byTag()
    {
        org.jsoup.select.QueryParser r0;
        java.lang.String r1, $r5, $r6;
        org.jsoup.parser.TokenQueue $r2;
        boolean $z0;
        java.util.List $r3;
        org.jsoup.select.Evaluator$Tag $r4;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        r1 = virtualinvoke $r2.<org.jsoup.parser.TokenQueue: java.lang.String consumeElementSelector()>();
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r1);
        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("|");
        if $z0 == 0 goto label0;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("|", ":");

     label0:
        $r3 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r4 = new org.jsoup.select.Evaluator$Tag;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r4.<org.jsoup.select.Evaluator$Tag: void <init>(java.lang.String)>($r6);
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);
        return;
    }

    private void byAttribute()
    {
        org.jsoup.select.QueryParser r0;
        org.jsoup.parser.TokenQueue $r1, r2, $r4;
        java.lang.String r3, $r5, $r9, $r14, $r17, $r20, $r23, $r26, $r29, $r33, $r34;
        java.lang.String[] $r6;
        boolean $z1, $z2, $z5, $z7, $z9, $z11, $z13, $z15;
        java.util.List $r7, $r10, $r12, $r15, $r18, $r21, $r24, $r27;
        org.jsoup.select.Evaluator$AttributeStarting $r8;
        org.jsoup.select.Evaluator$Attribute $r11;
        org.jsoup.select.Evaluator$AttributeWithValue $r13;
        org.jsoup.select.Evaluator$AttributeWithValueNot $r16;
        org.jsoup.select.Evaluator$AttributeWithValueStarting $r19;
        org.jsoup.select.Evaluator$AttributeWithValueEnding $r22;
        org.jsoup.select.Evaluator$AttributeWithValueContaining $r25;
        org.jsoup.select.Evaluator$AttributeWithValueMatching $r28;
        java.util.regex.Pattern $r30;
        org.jsoup.select.Selector$SelectorParseException $r31;
        java.lang.Object[] $r32;

        r0 := @this: org.jsoup.select.QueryParser;
        $r1 = new org.jsoup.parser.TokenQueue;
        $r4 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r5 = virtualinvoke $r4.<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>(91, 93);
        specialinvoke $r1.<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>($r5);
        r2 = $r1;
        $r6 = newarray (java.lang.String)[6];
        $r6[0] = "=";
        $r6[1] = "!=";
        $r6[2] = "^=";
        $r6[3] = "$=";
        $r6[4] = "*=";
        $r6[5] = "~=";
        r3 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String consumeToAny(java.lang.String[])>($r6);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r3);
        virtualinvoke r2.<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>();
        $z1 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: boolean isEmpty()>();
        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("^");
        if $z2 == 0 goto label0;

        $r7 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r8 = new org.jsoup.select.Evaluator$AttributeStarting;
        $r9 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(1);
        specialinvoke $r8.<org.jsoup.select.Evaluator$AttributeStarting: void <init>(java.lang.String)>($r9);
        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);
        goto label8;

     label0:
        $r10 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r11 = new org.jsoup.select.Evaluator$Attribute;
        specialinvoke $r11.<org.jsoup.select.Evaluator$Attribute: void <init>(java.lang.String)>(r3);
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);
        goto label8;

     label1:
        $z5 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>("=");
        if $z5 == 0 goto label2;

        $r12 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r13 = new org.jsoup.select.Evaluator$AttributeWithValue;
        $r14 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        specialinvoke $r13.<org.jsoup.select.Evaluator$AttributeWithValue: void <init>(java.lang.String,java.lang.String)>(r3, $r14);
        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);
        goto label8;

     label2:
        $z7 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>("!=");
        if $z7 == 0 goto label3;

        $r15 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r16 = new org.jsoup.select.Evaluator$AttributeWithValueNot;
        $r17 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        specialinvoke $r16.<org.jsoup.select.Evaluator$AttributeWithValueNot: void <init>(java.lang.String,java.lang.String)>(r3, $r17);
        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);
        goto label8;

     label3:
        $z9 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>("^=");
        if $z9 == 0 goto label4;

        $r18 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r19 = new org.jsoup.select.Evaluator$AttributeWithValueStarting;
        $r20 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        specialinvoke $r19.<org.jsoup.select.Evaluator$AttributeWithValueStarting: void <init>(java.lang.String,java.lang.String)>(r3, $r20);
        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);
        goto label8;

     label4:
        $z11 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>("$=");
        if $z11 == 0 goto label5;

        $r21 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r22 = new org.jsoup.select.Evaluator$AttributeWithValueEnding;
        $r23 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        specialinvoke $r22.<org.jsoup.select.Evaluator$AttributeWithValueEnding: void <init>(java.lang.String,java.lang.String)>(r3, $r23);
        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);
        goto label8;

     label5:
        $z13 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>("*=");
        if $z13 == 0 goto label6;

        $r24 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r25 = new org.jsoup.select.Evaluator$AttributeWithValueContaining;
        $r26 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        specialinvoke $r25.<org.jsoup.select.Evaluator$AttributeWithValueContaining: void <init>(java.lang.String,java.lang.String)>(r3, $r26);
        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r25);
        goto label8;

     label6:
        $z15 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>("~=");
        if $z15 == 0 goto label7;

        $r27 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r28 = new org.jsoup.select.Evaluator$AttributeWithValueMatching;
        $r29 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        $r30 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r29);
        specialinvoke $r28.<org.jsoup.select.Evaluator$AttributeWithValueMatching: void <init>(java.lang.String,java.util.regex.Pattern)>(r3, $r30);
        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r28);
        goto label8;

     label7:
        $r31 = new org.jsoup.select.Selector$SelectorParseException;
        $r32 = newarray (java.lang.Object)[2];
        $r33 = r0.<org.jsoup.select.QueryParser: java.lang.String query>;
        $r32[0] = $r33;
        $r34 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String remainder()>();
        $r32[1] = $r34;
        specialinvoke $r31.<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>("Could not parse attribute query \'%s\': unexpected token at \'%s\'", $r32);
        throw $r31;

     label8:
        return;
    }

    private void allElements()
    {
        org.jsoup.select.QueryParser r0;
        org.jsoup.select.Evaluator$AllElements $r1;
        java.util.List $r2;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r1 = new org.jsoup.select.Evaluator$AllElements;
        specialinvoke $r1.<org.jsoup.select.Evaluator$AllElements: void <init>()>();
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }

    private void indexLessThan()
    {
        org.jsoup.select.QueryParser r0;
        org.jsoup.select.Evaluator$IndexLessThan $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r1 = new org.jsoup.select.Evaluator$IndexLessThan;
        $i0 = specialinvoke r0.<org.jsoup.select.QueryParser: int consumeIndex()>();
        specialinvoke $r1.<org.jsoup.select.Evaluator$IndexLessThan: void <init>(int)>($i0);
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }

    private void indexGreaterThan()
    {
        org.jsoup.select.QueryParser r0;
        org.jsoup.select.Evaluator$IndexGreaterThan $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r1 = new org.jsoup.select.Evaluator$IndexGreaterThan;
        $i0 = specialinvoke r0.<org.jsoup.select.QueryParser: int consumeIndex()>();
        specialinvoke $r1.<org.jsoup.select.Evaluator$IndexGreaterThan: void <init>(int)>($i0);
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }

    private void indexEquals()
    {
        org.jsoup.select.QueryParser r0;
        org.jsoup.select.Evaluator$IndexEquals $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r1 = new org.jsoup.select.Evaluator$IndexEquals;
        $i0 = specialinvoke r0.<org.jsoup.select.QueryParser: int consumeIndex()>();
        specialinvoke $r1.<org.jsoup.select.Evaluator$IndexEquals: void <init>(int)>($i0);
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }

    private int consumeIndex()
    {
        org.jsoup.select.QueryParser r0;
        java.lang.String r1, $r3;
        org.jsoup.parser.TokenQueue $r2;
        boolean $z0;
        int $i0;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r3 = virtualinvoke $r2.<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>(")");
        r1 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();
        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean isNumeric(java.lang.String)>(r1);
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Index must be numeric");
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);
        return $i0;
    }

    private void has()
    {
        org.jsoup.select.QueryParser r0;
        java.lang.String r1;
        org.jsoup.parser.TokenQueue $r2, $r3;
        java.util.List $r4;
        org.jsoup.select.StructuralEvaluator$Has $r5;
        org.jsoup.select.Evaluator $r6;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        virtualinvoke $r2.<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>(":has");
        $r3 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        r1 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>(40, 41);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, ":has(el) subselect must not be empty");
        $r4 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r5 = new org.jsoup.select.StructuralEvaluator$Has;
        $r6 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>(r1);
        specialinvoke $r5.<org.jsoup.select.StructuralEvaluator$Has: void <init>(org.jsoup.select.Evaluator)>($r6);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);
        return;
    }

    private void contains(boolean)
    {
        org.jsoup.select.QueryParser r0;
        boolean z0;
        java.lang.String r1, $r3, $r5;
        org.jsoup.parser.TokenQueue $r2, $r4;
        java.util.List $r6, $r8;
        org.jsoup.select.Evaluator$ContainsOwnText $r7;
        org.jsoup.select.Evaluator$ContainsText $r9;

        r0 := @this: org.jsoup.select.QueryParser;
        z0 := @parameter0: boolean;
        $r2 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        if z0 == 0 goto label0;

        $r3 = ":containsOwn";
        goto label1;

     label0:
        $r3 = ":contains";

     label1:
        virtualinvoke $r2.<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>($r3);
        $r4 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        $r5 = virtualinvoke $r4.<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>(40, 41);
        r1 = staticinvoke <org.jsoup.parser.TokenQueue: java.lang.String unescape(java.lang.String)>($r5);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, ":contains(text) query must not be empty");
        if z0 == 0 goto label2;

        $r6 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r7 = new org.jsoup.select.Evaluator$ContainsOwnText;
        specialinvoke $r7.<org.jsoup.select.Evaluator$ContainsOwnText: void <init>(java.lang.String)>(r1);
        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);
        goto label3;

     label2:
        $r8 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r9 = new org.jsoup.select.Evaluator$ContainsText;
        specialinvoke $r9.<org.jsoup.select.Evaluator$ContainsText: void <init>(java.lang.String)>(r1);
        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label3:
        return;
    }

    private void matches(boolean)
    {
        org.jsoup.select.QueryParser r0;
        boolean z0;
        java.lang.String r1, $r3;
        org.jsoup.parser.TokenQueue $r2, $r4;
        java.util.List $r5, $r8;
        org.jsoup.select.Evaluator$MatchesOwn $r6;
        java.util.regex.Pattern $r7, $r10;
        org.jsoup.select.Evaluator$Matches $r9;

        r0 := @this: org.jsoup.select.QueryParser;
        z0 := @parameter0: boolean;
        $r2 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        if z0 == 0 goto label0;

        $r3 = ":matchesOwn";
        goto label1;

     label0:
        $r3 = ":matches";

     label1:
        virtualinvoke $r2.<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>($r3);
        $r4 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        r1 = virtualinvoke $r4.<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>(40, 41);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, ":matches(regex) query must not be empty");
        if z0 == 0 goto label2;

        $r5 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r6 = new org.jsoup.select.Evaluator$MatchesOwn;
        $r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        specialinvoke $r6.<org.jsoup.select.Evaluator$MatchesOwn: void <init>(java.util.regex.Pattern)>($r7);
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);
        goto label3;

     label2:
        $r8 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r9 = new org.jsoup.select.Evaluator$Matches;
        $r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);
        specialinvoke $r9.<org.jsoup.select.Evaluator$Matches: void <init>(java.util.regex.Pattern)>($r10);
        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label3:
        return;
    }

    private void not()
    {
        org.jsoup.select.QueryParser r0;
        java.lang.String r1;
        org.jsoup.parser.TokenQueue $r2, $r3;
        java.util.List $r4;
        org.jsoup.select.StructuralEvaluator$Not $r5;
        org.jsoup.select.Evaluator $r6;

        r0 := @this: org.jsoup.select.QueryParser;
        $r2 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        virtualinvoke $r2.<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>(":not");
        $r3 = r0.<org.jsoup.select.QueryParser: org.jsoup.parser.TokenQueue tq>;
        r1 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>(40, 41);
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r1, ":not(selector) subselect must not be empty");
        $r4 = r0.<org.jsoup.select.QueryParser: java.util.List evals>;
        $r5 = new org.jsoup.select.StructuralEvaluator$Not;
        $r6 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>(r1);
        specialinvoke $r5.<org.jsoup.select.StructuralEvaluator$Not: void <init>(org.jsoup.select.Evaluator)>($r6);
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[5];
        $r0[0] = ",";
        $r0[1] = ">";
        $r0[2] = "+";
        $r0[3] = "~";
        $r0[4] = " ";
        <org.jsoup.select.QueryParser: java.lang.String[] combinators> = $r0;
        return;
    }
}
public class org.jsoup.select.Selector$SelectorParseException extends java.lang.IllegalStateException
{

    public transient void <init>(java.lang.String, java.lang.Object[])
    {
        org.jsoup.select.Selector$SelectorParseException r0;
        java.lang.String r1, $r3;
        java.lang.Object[] r2;

        r0 := @this: org.jsoup.select.Selector$SelectorParseException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);
        specialinvoke r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        return;
    }
}
public class org.jsoup.select.Selector extends java.lang.Object
{
    private final org.jsoup.select.Evaluator evaluator;
    private final org.jsoup.nodes.Element root;

    private void <init>(java.lang.String, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Selector r0;
        java.lang.String r1, r3;
        org.jsoup.nodes.Element r2;
        org.jsoup.select.Evaluator $r4;

        r0 := @this: org.jsoup.select.Selector;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.jsoup.nodes.Element;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r3);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r2);
        $r4 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>(r3);
        r0.<org.jsoup.select.Selector: org.jsoup.select.Evaluator evaluator> = $r4;
        r0.<org.jsoup.select.Selector: org.jsoup.nodes.Element root> = r2;
        return;
    }

    public static org.jsoup.select.Elements select(java.lang.String, org.jsoup.nodes.Element)
    {
        java.lang.String r0;
        org.jsoup.nodes.Element r1;
        org.jsoup.select.Selector $r2;
        org.jsoup.select.Elements $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.jsoup.nodes.Element;
        $r2 = new org.jsoup.select.Selector;
        specialinvoke $r2.<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>(r0, r1);
        $r3 = specialinvoke $r2.<org.jsoup.select.Selector: org.jsoup.select.Elements select()>();
        return $r3;
    }

    public static org.jsoup.select.Elements select(java.lang.String, java.lang.Iterable)
    {
        java.lang.String r0;
        java.lang.Iterable r1;
        java.util.LinkedHashSet r2, $r5;
        java.util.Iterator r3;
        org.jsoup.nodes.Element r4;
        boolean $z0;
        java.lang.Object $r6;
        org.jsoup.select.Elements $r7, $r8;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.Iterable;
        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r0);
        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>(r1);
        $r5 = new java.util.LinkedHashSet;
        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();
        r2 = $r5;
        r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r6;
        $r7 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element)>(r0, r4);
        virtualinvoke r2.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r7);
        goto label0;

     label1:
        $r8 = new org.jsoup.select.Elements;
        specialinvoke $r8.<org.jsoup.select.Elements: void <init>(java.util.Collection)>(r2);
        return $r8;
    }

    private org.jsoup.select.Elements select()
    {
        org.jsoup.select.Selector r0;
        org.jsoup.select.Evaluator $r1;
        org.jsoup.nodes.Element $r2;
        org.jsoup.select.Elements $r3;

        r0 := @this: org.jsoup.select.Selector;
        $r1 = r0.<org.jsoup.select.Selector: org.jsoup.select.Evaluator evaluator>;
        $r2 = r0.<org.jsoup.select.Selector: org.jsoup.nodes.Element root>;
        $r3 = staticinvoke <org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>($r1, $r2);
        return $r3;
    }

    static org.jsoup.select.Elements filterOut(java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1;
        org.jsoup.select.Elements $r2, r3;
        java.util.Iterator r4, r6;
        org.jsoup.nodes.Element r5, r7;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object $r8, $r9;

        r0 := @parameter0: java.util.Collection;
        r1 := @parameter1: java.util.Collection;
        $r2 = new org.jsoup.select.Elements;
        specialinvoke $r2.<org.jsoup.select.Elements: void <init>()>();
        r3 = $r2;
        r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label5;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.jsoup.nodes.Element) $r8;
        z0 = 0;
        r6 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label3;

        $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (org.jsoup.nodes.Element) $r9;
        $z3 = virtualinvoke r5.<org.jsoup.nodes.Element: boolean equals(java.lang.Object)>(r7);
        if $z3 == 0 goto label2;

        z0 = 1;
        goto label3;

     label2:
        goto label1;

     label3:
        if z0 != 0 goto label4;

        virtualinvoke r3.<org.jsoup.select.Elements: boolean add(org.jsoup.nodes.Element)>(r5);

     label4:
        goto label0;

     label5:
        return r3;
    }
}
class org.jsoup.select.StructuralEvaluator$Has extends org.jsoup.select.StructuralEvaluator
{

    public void <init>(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.StructuralEvaluator$Has r0;
        org.jsoup.select.Evaluator r1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Has;
        r1 := @parameter0: org.jsoup.select.Evaluator;
        specialinvoke r0.<org.jsoup.select.StructuralEvaluator: void <init>()>();
        r0.<org.jsoup.select.StructuralEvaluator$Has: org.jsoup.select.Evaluator evaluator> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.StructuralEvaluator$Has r0;
        org.jsoup.nodes.Element r1, r2, r4;
        java.util.Iterator r3;
        org.jsoup.select.Elements $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.jsoup.select.Evaluator $r7;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Has;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r5 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.select.Elements getAllElements()>();
        r3 = virtualinvoke $r5.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.jsoup.nodes.Element) $r6;
        if r4 == r2 goto label1;

        $r7 = r0.<org.jsoup.select.StructuralEvaluator$Has: org.jsoup.select.Evaluator evaluator>;
        $z1 = virtualinvoke $r7.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r4);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.StructuralEvaluator$Has r0;
        java.lang.Object[] $r1;
        org.jsoup.select.Evaluator $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Has;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.StructuralEvaluator$Has: org.jsoup.select.Evaluator evaluator>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":has(%s)", $r1);
        return $r3;
    }
}
class org.jsoup.select.StructuralEvaluator$ImmediateParent extends org.jsoup.select.StructuralEvaluator
{

    public void <init>(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.StructuralEvaluator$ImmediateParent r0;
        org.jsoup.select.Evaluator r1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$ImmediateParent;
        r1 := @parameter0: org.jsoup.select.Evaluator;
        specialinvoke r0.<org.jsoup.select.StructuralEvaluator: void <init>()>();
        r0.<org.jsoup.select.StructuralEvaluator$ImmediateParent: org.jsoup.select.Evaluator evaluator> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.StructuralEvaluator$ImmediateParent r0;
        org.jsoup.nodes.Element r1, r2, r3;
        org.jsoup.select.Evaluator $r4;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$ImmediateParent;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        if r1 != r2 goto label0;

        return 0;

     label0:
        r3 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        if r3 == null goto label1;

        $r4 = r0.<org.jsoup.select.StructuralEvaluator$ImmediateParent: org.jsoup.select.Evaluator evaluator>;
        $z0 = virtualinvoke $r4.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r3);
        if $z0 == 0 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.StructuralEvaluator$ImmediateParent r0;
        java.lang.Object[] $r1;
        org.jsoup.select.Evaluator $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.StructuralEvaluator$ImmediateParent;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.StructuralEvaluator$ImmediateParent: org.jsoup.select.Evaluator evaluator>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":ImmediateParent%s", $r1);
        return $r3;
    }
}
class org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling extends org.jsoup.select.StructuralEvaluator
{

    public void <init>(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling r0;
        org.jsoup.select.Evaluator r1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling;
        r1 := @parameter0: org.jsoup.select.Evaluator;
        specialinvoke r0.<org.jsoup.select.StructuralEvaluator: void <init>()>();
        r0.<org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling: org.jsoup.select.Evaluator evaluator> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling r0;
        org.jsoup.nodes.Element r1, r2, r3;
        org.jsoup.select.Evaluator $r4;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        if r1 != r2 goto label0;

        return 0;

     label0:
        r3 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element previousElementSibling()>();
        if r3 == null goto label1;

        $r4 = r0.<org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling: org.jsoup.select.Evaluator evaluator>;
        $z0 = virtualinvoke $r4.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r3);
        if $z0 == 0 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling r0;
        java.lang.Object[] $r1;
        org.jsoup.select.Evaluator $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling: org.jsoup.select.Evaluator evaluator>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":prev%s", $r1);
        return $r3;
    }
}
class org.jsoup.select.StructuralEvaluator$Not extends org.jsoup.select.StructuralEvaluator
{

    public void <init>(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.StructuralEvaluator$Not r0;
        org.jsoup.select.Evaluator r1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Not;
        r1 := @parameter0: org.jsoup.select.Evaluator;
        specialinvoke r0.<org.jsoup.select.StructuralEvaluator: void <init>()>();
        r0.<org.jsoup.select.StructuralEvaluator$Not: org.jsoup.select.Evaluator evaluator> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.StructuralEvaluator$Not r0;
        org.jsoup.nodes.Element r1, r2;
        org.jsoup.select.Evaluator $r3;
        boolean $z0, $z1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Not;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        $r3 = r0.<org.jsoup.select.StructuralEvaluator$Not: org.jsoup.select.Evaluator evaluator>;
        $z0 = virtualinvoke $r3.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r2);
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.StructuralEvaluator$Not r0;
        java.lang.Object[] $r1;
        org.jsoup.select.Evaluator $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Not;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.StructuralEvaluator$Not: org.jsoup.select.Evaluator evaluator>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":not%s", $r1);
        return $r3;
    }
}
class org.jsoup.select.StructuralEvaluator$Parent extends org.jsoup.select.StructuralEvaluator
{

    public void <init>(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.StructuralEvaluator$Parent r0;
        org.jsoup.select.Evaluator r1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Parent;
        r1 := @parameter0: org.jsoup.select.Evaluator;
        specialinvoke r0.<org.jsoup.select.StructuralEvaluator: void <init>()>();
        r0.<org.jsoup.select.StructuralEvaluator$Parent: org.jsoup.select.Evaluator evaluator> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.StructuralEvaluator$Parent r0;
        org.jsoup.nodes.Element r1, r2, r3;
        org.jsoup.select.Evaluator $r4;
        boolean $z0;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Parent;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        if r1 != r2 goto label0;

        return 0;

     label0:
        r3 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();

     label1:
        if r3 == r1 goto label3;

        $r4 = r0.<org.jsoup.select.StructuralEvaluator$Parent: org.jsoup.select.Evaluator evaluator>;
        $z0 = virtualinvoke $r4.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r3);
        if $z0 == 0 goto label2;

        return 1;

     label2:
        r3 = virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();
        goto label1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.StructuralEvaluator$Parent r0;
        java.lang.Object[] $r1;
        org.jsoup.select.Evaluator $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Parent;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.StructuralEvaluator$Parent: org.jsoup.select.Evaluator evaluator>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":parent%s", $r1);
        return $r3;
    }
}
class org.jsoup.select.StructuralEvaluator$PreviousSibling extends org.jsoup.select.StructuralEvaluator
{

    public void <init>(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.StructuralEvaluator$PreviousSibling r0;
        org.jsoup.select.Evaluator r1;

        r0 := @this: org.jsoup.select.StructuralEvaluator$PreviousSibling;
        r1 := @parameter0: org.jsoup.select.Evaluator;
        specialinvoke r0.<org.jsoup.select.StructuralEvaluator: void <init>()>();
        r0.<org.jsoup.select.StructuralEvaluator$PreviousSibling: org.jsoup.select.Evaluator evaluator> = r1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.StructuralEvaluator$PreviousSibling r0;
        org.jsoup.nodes.Element r1, r2, r3;
        org.jsoup.select.Evaluator $r4;
        boolean $z0;

        r0 := @this: org.jsoup.select.StructuralEvaluator$PreviousSibling;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        if r1 != r2 goto label0;

        return 0;

     label0:
        r3 = virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element previousElementSibling()>();

     label1:
        if r3 == null goto label3;

        $r4 = r0.<org.jsoup.select.StructuralEvaluator$PreviousSibling: org.jsoup.select.Evaluator evaluator>;
        $z0 = virtualinvoke $r4.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(r1, r3);
        if $z0 == 0 goto label2;

        return 1;

     label2:
        r3 = virtualinvoke r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element previousElementSibling()>();
        goto label1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.StructuralEvaluator$PreviousSibling r0;
        java.lang.Object[] $r1;
        org.jsoup.select.Evaluator $r2;
        java.lang.String $r3;

        r0 := @this: org.jsoup.select.StructuralEvaluator$PreviousSibling;
        $r1 = newarray (java.lang.Object)[1];
        $r2 = r0.<org.jsoup.select.StructuralEvaluator$PreviousSibling: org.jsoup.select.Evaluator evaluator>;
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":prev*%s", $r1);
        return $r3;
    }
}
class org.jsoup.select.StructuralEvaluator$Root extends org.jsoup.select.Evaluator
{

    void <init>()
    {
        org.jsoup.select.StructuralEvaluator$Root r0;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Root;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.select.StructuralEvaluator$Root r0;
        org.jsoup.nodes.Element r1, r2;
        boolean $z0;

        r0 := @this: org.jsoup.select.StructuralEvaluator$Root;
        r1 := @parameter0: org.jsoup.nodes.Element;
        r2 := @parameter1: org.jsoup.nodes.Element;
        if r1 != r2 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }
}
abstract class org.jsoup.select.StructuralEvaluator extends org.jsoup.select.Evaluator
{
    org.jsoup.select.Evaluator evaluator;

    void <init>()
    {
        org.jsoup.select.StructuralEvaluator r0;

        r0 := @this: org.jsoup.select.StructuralEvaluator;
        specialinvoke r0.<org.jsoup.select.Evaluator: void <init>()>();
        return;
    }
}
