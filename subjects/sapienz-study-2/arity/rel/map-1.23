calculator.Calculator -> calculator.Calculator:
    org.javia.arity.Symbols symbols -> c
    android.widget.TextView result -> d
    android.widget.EditText input -> e
    android.widget.ListView historyView -> f
    calculator.GraphView graphView -> g
    calculator.Graph3dView graph3dView -> h
    calculator.History history -> i
    calculator.HistoryAdapter adapter -> j
    int nDigits -> k
    boolean isAlphaVisible -> l
    calculator.KeyboardView alpha -> m
    calculator.KeyboardView digits -> n
    java.util.ArrayList graphedFunction -> a
    calculator.Defs defs -> b
    java.util.ArrayList auxFuncs -> o
    char[][] ALPHA -> p
    char[][] DIGITS -> q
    char[][] DIGITS2 -> r
    java.lang.StringBuilder oneChar -> s
    android.view.KeyEvent KEY_DEL -> t
    93:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    98:136:void internalConfigChange(android.content.res.Configuration) -> a
    140:163:void onCreate(android.os.Bundle) -> onCreate
    166:171:void onPause() -> onPause
    174:176:void onResume() -> onResume
    179:181:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    185:189:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    193:219:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    224:227:void onClick(android.view.View) -> onClick
    231:233:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    239:249:void afterTextChanged(android.text.Editable) -> afterTextChanged
    252:252:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    255:255:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    260:287:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    305:307:void log(java.lang.String) -> a
    314:318:java.lang.String formatEval(org.javia.arity.Complex) -> a
    386:388:void updateAlpha() -> a
    392:404:void onKey(char) -> a
    407:445:void showGraph(org.javia.arity.Function) -> a
    452:480:void onEnter(java.lang.String) -> b
    483:497:void changeInput(java.lang.String) -> c
    529:530:void doEnter() -> b
calculator.CalculatorEditable -> calculator.i:
    boolean isRec -> a
    23:31:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    37:37:boolean isOperator(char) -> a
    8:8:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
calculator.CalculatorEditable$Factory -> calculator.o:
    11:11:android.text.Editable newEditable(java.lang.CharSequence) -> newEditable
calculator.Data -> calculator.r:
    float[] xs -> a
    float[] ys -> b
    int size -> c
    int allocSize -> d
    29:36:void push(float,float) -> a
    39:51:void makeSpace(int) -> a
    54:54:float topX() -> a
    58:58:float topY() -> b
    74:74:boolean empty() -> c
    120:135:void append(calculator.Data) -> a
    138:143:java.lang.String toString() -> toString
calculator.Defs -> calculator.b:
    java.util.ArrayList lines -> a
    org.javia.arity.Symbols symbols -> c
    30:40:void doRead(java.io.DataInputStream) -> a
    43:47:void doWrite(java.io.DataOutputStream) -> a
calculator.FileHandler -> calculator.k:
    java.lang.String fileName -> a
    android.content.Context context -> c
    int version -> d
    boolean fileNotFound -> b
    16:19:java.io.DataInputStream openInput() -> c
    35:45:void load() -> a
    51:56:void save() -> b
    void doRead(java.io.DataInputStream) -> a
    void doWrite(java.io.DataOutputStream) -> a
calculator.GLView -> calculator.j:
    boolean hasSurface -> a
    boolean paused -> b
    javax.microedition.khronos.egl.EGL10 egl -> c
    javax.microedition.khronos.egl.EGLDisplay display -> d
    javax.microedition.khronos.egl.EGLConfig config -> e
    javax.microedition.khronos.egl.EGLSurface surface -> f
    javax.microedition.khronos.egl.EGLContext eglContext -> g
    javax.microedition.khronos.opengles.GL11 gl -> h
    int width -> i
    int height -> j
    android.opengl.GLSurfaceView$Renderer renderer -> k
    boolean mIsLooping -> l
    android.os.Handler handler -> m
    43:45:java.lang.String captureScreenshot() -> c
    68:69:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> a
    82:85:void init() -> h
    88:93:void onResume() -> b
    96:98:void onPause() -> a
    101:118:void initGL() -> i
    121:135:void deinitGL() -> j
    139:153:void myDraw() -> d
    156:157:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    160:168:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    171:174:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    177:182:void startLooping() -> g
    185:189:void stopLooping() -> f
    196:197:void requestDraw() -> e
calculator.GLView$1 -> calculator.p:
    calculator.GLView this$0 -> a
    63:64:void handleMessage(android.os.Message) -> handleMessage
calculator.Graph3d -> calculator.l:
    calculator.Graph3d instance -> a
    int N -> b
    java.nio.ShortBuffer verticeIdx -> c
    java.nio.FloatBuffer vertexBuf -> d
    java.nio.FloatBuffer colorBuf -> e
    int vertexVbo -> f
    int colorVbo -> g
    int vertexElementVbo -> h
    boolean useVBO -> i
    45:50:java.nio.FloatBuffer buildBuffer(float[]) -> a
    63:75:void init(javax.microedition.khronos.opengles.GL10) -> a
    79:219:void update(javax.microedition.khronos.opengles.GL11,org.javia.arity.Function,float) -> a
    222:242:void draw(javax.microedition.khronos.opengles.GL11) -> a
calculator.Graph3dView -> calculator.Graph3dView:
    float lastTouchX -> a
    float lastTouchY -> b
    android.view.VelocityTracker velocityTracker -> c
    boolean isFullScreen -> d
    calculator.GraphRenderer renderer -> e
    android.widget.ZoomButtonsController zoomController -> f
    float zoomLevel -> g
    float targetZoom -> h
    float zoomStep -> i
    34:37:void init() -> h
    40:41:void setFunction(org.javia.arity.Function) -> a
    44:44:void onVisibilityChanged(boolean) -> onVisibilityChanged
    47:69:void onZoom(boolean) -> onZoom
    73:86:void myDraw() -> d
    89:89:boolean canZoomIn(float) -> a
    93:93:boolean canZoomOut(float) -> b
    98:100:void onDetachedFromWindow() -> onDetachedFromWindow
    104:158:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    13:13:void requestDraw() -> e
    13:13:void stopLooping() -> f
    13:13:void startLooping() -> g
    13:13:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    13:13:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    13:13:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    13:13:void onPause() -> a
    13:13:void onResume() -> b
    13:13:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> a
    13:13:java.lang.String captureScreenshot() -> c
calculator.GraphRenderer -> calculator.d:
    float[] matrix1 -> b
    float[] matrix2 -> c
    float[] matrix3 -> d
    float angleX -> e
    float angleY -> f
    int drawCnt -> g
    long lastTime -> h
    boolean isDirty -> a
    org.javia.arity.Function function -> i
    float zoomLevel -> j
    float width -> k
    float height -> l
    float currentZoom -> m
    29:31:void setRotation(float,float) -> a
    35:35:boolean shouldRotate() -> a
    39:42:void setFunction(org.javia.arity.Function) -> a
    45:46:void setZoom(float) -> a
    49:59:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    64:69:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    72:83:void initFrustum(javax.microedition.khronos.opengles.GL10,float) -> a
    86:127:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
calculator.GraphView -> calculator.GraphView:
    int width -> a
    int height -> b
    android.graphics.Matrix matrix -> c
    android.graphics.Paint paint -> d
    android.graphics.Paint textPaint -> e
    java.util.ArrayList funcs -> f
    calculator.Data next -> g
    calculator.Data endGraph -> h
    calculator.Data[] graphs -> i
    float gwidth -> j
    float currentX -> k
    float currentY -> l
    float lastMinX -> m
    boolean isFullScreen -> n
    android.view.VelocityTracker velocityTracker -> o
    android.widget.Scroller scroller -> p
    float lastTouchX -> q
    float lastTouchY -> r
    float boundMinY -> s
    float boundMaxY -> t
    boolean isAfterZoom -> u
    calculator.ZoomTracker zoomTracker -> v
    android.widget.ZoomButtonsController zoomController -> w
    int[] COL_GRAPH -> x
    android.graphics.Path path -> y
    java.lang.StringBuilder b -> z
    char[] buf -> A
    87:91:void init(android.content.Context) -> a
    94:94:java.lang.String captureScreenshot() -> c
    98:101:void clearAllGraph() -> d
    104:113:void setFunctions(java.util.ArrayList) -> a
    116:122:void setFunction(org.javia.arity.Function) -> a
    125:125:void onVisibilityChanged(boolean) -> onVisibilityChanged
    128:141:void onZoom(boolean) -> onZoom
    144:144:void onResume() -> b
    147:147:void onPause() -> a
    150:152:void onDetachedFromWindow() -> onDetachedFromWindow
    155:159:void onSizeChanged(int,int,int,int) -> onSizeChanged
    162:174:void onDraw(android.graphics.Canvas) -> onDraw
    177:185:float eval(org.javia.arity.Function,float) -> a
    356:385:java.lang.StringBuilder format(float) -> a
    482:482:boolean canZoomIn() -> e
    486:486:boolean canZoomOut() -> f
    490:493:void invalidateGraphs() -> g
    559:610:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
calculator.Grapher -> calculator.a:
    void setFunction(org.javia.arity.Function) -> a
    void onPause() -> a
    void onResume() -> b
    java.lang.String captureScreenshot() -> c
calculator.Help -> calculator.Help:
    11:15:void onCreate(android.os.Bundle) -> onCreate
calculator.History -> calculator.q:
    java.util.ArrayList entries -> a
    int pos -> c
    calculator.HistoryEntry aboveTop -> d
    31:37:void doRead(java.io.DataInputStream) -> a
    40:45:void doWrite(java.io.DataOutputStream) -> a
    48:51:calculator.HistoryEntry currentEntry() -> d
    60:79:boolean onEnter(java.lang.String,java.lang.String) -> a
    83:85:void moveToPos(int,java.lang.String) -> a
    88:89:void updateEdited(java.lang.String) -> a
    110:110:java.lang.String getText() -> c
calculator.HistoryAdapter -> calculator.m:
    android.view.LayoutInflater inflater -> a
    calculator.History history -> b
    31:31:int getCount() -> getCount
    35:35:java.lang.Object getItem(int) -> getItem
    39:39:long getItemId(int) -> getItemId
    43:58:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
calculator.HistoryAdapter$TagData -> calculator.n:
    android.widget.TextView input -> a
    android.widget.TextView result -> b
    android.widget.TextView separator -> c
calculator.HistoryEntry -> calculator.f:
    java.lang.String line -> a
    java.lang.String editLine -> b
    java.lang.String result -> c
    26:29:void save(java.io.DataOutputStream) -> a
calculator.KeyboardView -> calculator.KeyboardView:
    char[][] keys -> a
    int nLine -> b
    int nCol -> c
    android.graphics.Paint downPaint -> d
    int width -> e
    int height -> f
    android.graphics.Bitmap bitmap -> g
    boolean isDown -> h
    float downX -> i
    float downY -> j
    int downLine -> k
    int downCol -> l
    float downCW -> m
    float downCH -> n
    float cellw -> o
    float cellh -> p
    calculator.Calculator calculator -> q
    calculator.KeyboardView aboveView -> r
    boolean isLarge -> s
    boolean isBottom -> t
    52:57:void init(char[][],boolean,boolean) -> a
    60:61:void setAboveView(calculator.KeyboardView) -> a
    64:134:void onSizeChanged(int,int,int,int) -> onSizeChanged
    137:144:void drawDrawable(android.graphics.Canvas,int,float,float,float,float) -> a
    147:147:float getY(int) -> a
    151:151:float getX(int) -> b
    179:188:void onDraw(android.graphics.Canvas) -> onDraw
    192:227:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    231:237:void invalidateCell(int,int) -> a
calculator.ListDefs -> calculator.ListDefs:
    calculator.Defs defs -> a
    android.widget.ArrayAdapter adapter -> b
    19:23:void onCreate(android.os.Bundle) -> onCreate
    26:29:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    33:35:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    39:50:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
calculator.MotionEventWrap -> calculator.e:
    boolean IS_API_5 -> a
    11:11:int getPointerCount(android.view.MotionEvent) -> a
    15:15:float getX$2ba31ee9(android.view.MotionEvent) -> b
    19:19:float getY$2ba31ee9(android.view.MotionEvent) -> c
calculator.MotionEventWrapNew -> calculator.c:
    9:9:int getPointerCount(android.view.MotionEvent) -> a
    13:13:float getX(android.view.MotionEvent,int) -> a
    17:17:float getY(android.view.MotionEvent,int) -> b
calculator.ShowGraph -> calculator.ShowGraph:
    calculator.Grapher view -> a
    25:37:void onCreate(android.os.Bundle) -> onCreate
    40:42:void onPause() -> onPause
    45:47:void onResume() -> onResume
    50:52:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    56:71:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
calculator.Util -> calculator.g:
    int SDK_VERSION -> a
    17:20:int getSdkVersion() -> a
    26:54:java.lang.String saveBitmap(android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    58:69:void bitmapBGRtoRGB(android.graphics.Bitmap,int,int) -> a
calculator.ZoomTracker -> calculator.h:
    float sx1 -> b
    float sy1 -> c
    float sx2 -> d
    float sy2 -> e
    float initialDist -> f
    float initialValue -> g
    float value -> a
    14:20:void start(float,float,float,float,float) -> a
    24:36:boolean update(float,float,float,float) -> a
    40:43:float distance(float,float,float,float) -> b
    47:49:float common(float,float,float,float) -> c
org.javia.arity.ArityException -> a.g:
org.javia.arity.ByteStack -> a.p:
    byte[] data -> a
    int size -> b
    24:25:void clear() -> a
    28:34:void push(byte) -> a
    43:43:byte pop() -> b
    47:49:byte[] toArray() -> c
org.javia.arity.CompiledFunction -> a.a:
    org.javia.arity.IsComplexException IS_COMPLEX -> a
    java.util.Random random -> b
    double[] EMPTY_DOUBLE -> c
    org.javia.arity.Function[] EMPTY_FUN -> d
    double[] constsRe -> e
    double[] constsIm -> f
    org.javia.arity.Function[] funcs -> g
    byte[] code -> h
    int arity -> i
    57:72:org.javia.arity.Function makeOpFunction(int) -> a
    77:77:int arity() -> a
    81:109:java.lang.String toString() -> toString
    113:122:double eval(double[],org.javia.arity.EvalContext) -> a
    127:129:double evalComplexToReal(double[],org.javia.arity.EvalContext) -> c
    133:140:org.javia.arity.Complex eval(org.javia.arity.Complex[],org.javia.arity.EvalContext) -> a
    144:151:int execReal(org.javia.arity.EvalContext,int) -> a
    155:162:int execComplex(org.javia.arity.EvalContext,int) -> b
    166:321:int execWithoutCheck(org.javia.arity.EvalContext,int) -> c
    325:459:int execWithoutCheckComplex(org.javia.arity.EvalContext,int,int) -> a
org.javia.arity.CompiledFunction$1 -> a.i:
    64:64:int arity() -> a
    68:68:double eval(double) -> a
org.javia.arity.Compiler -> a.l:
    org.javia.arity.SyntaxException exception -> a
    org.javia.arity.Lexer lexer -> b
    org.javia.arity.RPN rpn -> c
    org.javia.arity.DeclarationParser declParser -> d
    org.javia.arity.OptCodeGen codeGen -> e
    org.javia.arity.SimpleCodeGen simpleCodeGen -> f
    org.javia.arity.Declaration decl -> g
    38:67:org.javia.arity.Function compile(org.javia.arity.Symbols,java.lang.String) -> a
    72:72:org.javia.arity.FunctionAndName compileWithName(org.javia.arity.Symbols,java.lang.String) -> b
org.javia.arity.Complex -> a.z:
    double re -> a
    double im -> b
    49:51:org.javia.arity.Complex set(double,double) -> a
    56:58:org.javia.arity.Complex set(org.javia.arity.Complex) -> a
    63:63:java.lang.String toString() -> toString
    69:69:double asReal() -> a
    82:82:org.javia.arity.Complex negate() -> b
    88:88:boolean isInfinite() -> c
    101:101:boolean isNaN() -> d
    118:125:double abs() -> e
    132:132:double abs2() -> f
    171:221:org.javia.arity.Complex mul(org.javia.arity.Complex) -> b
    227:251:org.javia.arity.Complex div(org.javia.arity.Complex) -> c
    258:272:org.javia.arity.Complex sqrt() -> g
    278:283:org.javia.arity.Complex mod(org.javia.arity.Complex) -> d
    316:320:org.javia.arity.Complex log() -> h
    326:330:org.javia.arity.Complex exp() -> i
    343:368:org.javia.arity.Complex pow(org.javia.arity.Complex) -> e
    374:399:org.javia.arity.Complex lgamma() -> j
    410:410:org.javia.arity.Complex sin() -> k
    417:417:org.javia.arity.Complex sinh() -> l
    422:422:org.javia.arity.Complex cos() -> m
    429:429:org.javia.arity.Complex cosh() -> n
    434:440:org.javia.arity.Complex tan() -> o
    445:445:org.javia.arity.Complex tanh() -> p
    450:455:org.javia.arity.Complex asin() -> q
    460:465:org.javia.arity.Complex acos() -> r
    551:551:org.javia.arity.Complex swap() -> s
    560:565:org.javia.arity.Complex normalizeInfinity() -> t
    570:570:org.javia.arity.Complex sqrt1z() -> u
org.javia.arity.Constant -> a.x:
    org.javia.arity.Complex value -> a
    32:32:org.javia.arity.Complex evalComplex() -> d
    40:40:double eval() -> c
    44:44:java.lang.String toString() -> toString
    48:48:int arity() -> a
org.javia.arity.ContextFunction -> a.v:
    org.javia.arity.EvalContext context -> a
    double[] NO_ARGS -> b
    org.javia.arity.Complex[] NO_ARGS_COMPLEX -> c
    double eval(double[],org.javia.arity.EvalContext) -> a
    org.javia.arity.Complex eval(org.javia.arity.Complex[],org.javia.arity.EvalContext) -> a
    13:32:org.javia.arity.Complex[] toComplex(double[],org.javia.arity.EvalContext) -> b
    37:37:double eval() -> c
    42:44:double eval(double) -> a
    49:51:double eval(double,double) -> a
    56:58:double eval(double[]) -> a
    76:76:org.javia.arity.Complex evalComplex() -> d
    81:83:org.javia.arity.Complex eval(org.javia.arity.Complex) -> a
    88:90:org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.Complex) -> a
    95:97:org.javia.arity.Complex eval(org.javia.arity.Complex[]) -> a
org.javia.arity.Declaration -> a.o:
    java.lang.String[] NO_ARGS -> e
    java.lang.String name -> a
    java.lang.String[] args -> b
    int arity -> c
    java.lang.String expression -> d
    27:49:void parse(java.lang.String,org.javia.arity.Lexer,org.javia.arity.DeclarationParser) -> a
org.javia.arity.DeclarationParser -> a.f:
    java.lang.String[] NO_ARGS -> c
    java.lang.String name -> a
    int arity -> b
    java.util.Vector args -> d
    org.javia.arity.SyntaxException exception -> e
    38:41:void start() -> a
    45:78:void push(org.javia.arity.Token) -> a
    81:86:java.lang.String[] argNames() -> b
org.javia.arity.Derivative -> a.y:
    org.javia.arity.Function f -> a
    org.javia.arity.Complex c -> b
    16:16:double eval(double) -> a
    20:20:int arity() -> a
org.javia.arity.DoubleStack -> a.c:
    double[] re -> a
    double[] im -> b
    int size -> c
    25:26:void clear() -> a
    29:41:void push(double,double) -> a
    51:52:void pop() -> b
    55:57:double[] getRe() -> c
    61:73:double[] getIm() -> d
org.javia.arity.EvalContext -> a.d:
    double[] stackRe -> a
    org.javia.arity.Complex[] stackComplex -> b
    int stackBase -> c
    double[] args1 -> d
    double[] args2 -> e
    org.javia.arity.Complex[] args1c -> f
    org.javia.arity.Complex[] args2c -> g
org.javia.arity.Function -> a.s:
    org.javia.arity.Function cachedDerivate -> a
    int arity() -> a
    41:44:org.javia.arity.Function getDerivative() -> b
    48:49:void setDerivative(org.javia.arity.Function) -> a
    56:56:double eval() -> c
    63:63:double eval(double) -> a
    70:70:double eval(double,double) -> a
    80:88:double eval(double[]) -> a
    97:98:org.javia.arity.Complex evalComplex() -> d
    105:106:org.javia.arity.Complex eval(org.javia.arity.Complex) -> a
    113:114:org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.Complex) -> a
    121:138:org.javia.arity.Complex eval(org.javia.arity.Complex[]) -> a
    143:146:void checkArity(int) -> b
org.javia.arity.FunctionAndName -> a.e:
    org.javia.arity.Function function -> a
    java.lang.String name -> b
    51:75:java.lang.String sizeTruncate(java.lang.String,int) -> a
    87:163:java.lang.String doubleToString(double,int) -> a
    172:172:java.lang.String doubleToString(double,int,int) -> a
    182:245:java.lang.String complexToString$4b7e7aaf(org.javia.arity.Complex,int) -> a
org.javia.arity.FunctionStack -> a.j:
    org.javia.arity.Function[] data -> a
    int size -> b
    24:25:void clear() -> a
    28:34:void push(org.javia.arity.Function) -> a
    43:43:org.javia.arity.Function pop() -> b
    47:49:org.javia.arity.Function[] toArray() -> c
org.javia.arity.IsComplexException -> a.h:
org.javia.arity.Lexer -> a.r:
    org.javia.arity.Token TOK_ADD -> e
    org.javia.arity.Token TOK_SUB -> f
    org.javia.arity.Token TOK_MUL -> a
    org.javia.arity.Token TOK_DIV -> g
    org.javia.arity.Token TOK_MOD -> h
    org.javia.arity.Token TOK_UMIN -> b
    org.javia.arity.Token TOK_POWER -> i
    org.javia.arity.Token TOK_FACT -> j
    org.javia.arity.Token TOK_PERCENT -> k
    org.javia.arity.Token TOK_SQRT -> l
    org.javia.arity.Token TOK_LPAREN -> c
    org.javia.arity.Token TOK_RPAREN -> d
    org.javia.arity.Token TOK_COMMA -> m
    org.javia.arity.Token TOK_END -> n
    org.javia.arity.Token TOK_NUMBER -> o
    org.javia.arity.Token TOK_CONST -> p
    char[] input -> q
    int pos -> r
    org.javia.arity.SyntaxException exception -> s
    81:94:void scan(java.lang.String,org.javia.arity.TokenConsumer) -> a
    107:208:org.javia.arity.Token nextToken() -> a
org.javia.arity.MoreMath -> a.t:
    double[] GAMMA -> a
    double[] FACT -> b
    24:24:double asinh(double) -> a
    28:28:double acosh(double) -> b
    32:32:double atanh(double) -> c
    40:51:double gcd(double,double) -> a
    72:78:double lgamma(double) -> h
    110:129:double factorial(double) -> d
    133:147:double combinations(double,double) -> b
    152:165:double permutations(double,double) -> c
    175:176:boolean isPiMultiple(double) -> i
    180:180:double sin(double) -> e
    184:184:double cos(double) -> f
    188:188:double tan(double) -> g
org.javia.arity.OptCodeGen -> a.m:
    org.javia.arity.EvalContext context -> f
    int sp -> g
    org.javia.arity.Complex[] stack -> h
    double[] traceConstsRe -> i
    double[] traceConstsIm -> j
    org.javia.arity.Function[] traceFuncs -> k
    byte[] traceCode -> l
    org.javia.arity.CompiledFunction tracer -> m
    int intrinsicArity -> a
    boolean isPercent -> n
    45:49:void start() -> a
    54:134:void push(org.javia.arity.Token) -> a
org.javia.arity.RPN -> a.k:
    java.util.Stack stack -> b
    int prevTokenId -> c
    org.javia.arity.TokenConsumer consumer -> a
    org.javia.arity.SyntaxException exception -> d
    44:47:void start() -> a
    50:50:org.javia.arity.Token top() -> b
    54:61:void popHigher(int) -> a
    64:64:boolean isOperand(int) -> b
    73:151:void push(org.javia.arity.Token) -> a
org.javia.arity.SimpleCodeGen -> a.w:
    org.javia.arity.SyntaxException HAS_ARGUMENTS -> b
    org.javia.arity.ByteStack code -> c
    org.javia.arity.DoubleStack consts -> d
    org.javia.arity.FunctionStack funcs -> e
    org.javia.arity.Symbols symbols -> a
    org.javia.arity.SyntaxException exception -> f
    42:43:org.javia.arity.SimpleCodeGen setSymbols(org.javia.arity.Symbols) -> a
    48:51:void start() -> a
    54:73:org.javia.arity.Symbol getSymbol(org.javia.arity.Token) -> b
    78:111:void push(org.javia.arity.Token) -> a
    114:114:org.javia.arity.CompiledFunction getFun() -> b
org.javia.arity.Symbol -> a.B:
    java.lang.String name -> f
    int arity -> g
    byte op -> a
    org.javia.arity.Function fun -> b
    double valueRe -> c
    double valueIm -> d
    boolean isConst -> e
    54:54:org.javia.arity.Symbol makeArg(java.lang.String,int) -> a
    58:58:org.javia.arity.Symbol makeVmOp(java.lang.String,int) -> b
    62:62:java.lang.String toString() -> toString
    80:80:org.javia.arity.Symbol newEmpty(org.javia.arity.Symbol) -> a
    88:90:org.javia.arity.Symbol setKey(java.lang.String,int) -> c
    94:95:boolean equals(java.lang.Object) -> equals
    99:99:int hashCode() -> hashCode
org.javia.arity.Symbols -> a.b:
    org.javia.arity.Symbol[] builtin -> a
    org.javia.arity.Symbol shell -> b
    org.javia.arity.Compiler compiler -> c
    java.util.Hashtable symbols -> d
    java.util.HashSet delta -> e
    java.util.Stack frames -> f
    java.lang.String[] defines -> g
    172:172:org.javia.arity.FunctionAndName compileWithName(java.lang.String) -> a
    176:176:org.javia.arity.Function compile(java.lang.String) -> b
    185:190:void define(java.lang.String,org.javia.arity.Function) -> a
    197:200:void define(org.javia.arity.FunctionAndName) -> a
    209:210:void define(java.lang.String,double) -> a
    213:214:void define(java.lang.String,org.javia.arity.Complex) -> a
    223:225:void pushFrame() -> a
    234:244:void popFrame() -> b
    251:251:org.javia.arity.Symbol[] getTopFrame() -> c
    307:310:void addArguments(java.lang.String[]) -> a
    313:324:void add(org.javia.arity.Symbol) -> a
    327:327:org.javia.arity.Symbol lookup(java.lang.String,int) -> a
org.javia.arity.SyntaxException -> a.u:
    java.lang.String expression -> a
    java.lang.String message -> c
    int position -> b
    40:40:java.lang.String toString() -> toString
    46:49:org.javia.arity.SyntaxException set(java.lang.String,int) -> a
org.javia.arity.Token -> a.n:
    int priority -> a
    int assoc -> b
    int id -> c
    byte vmop -> d
    double value -> e
    java.lang.String name -> f
    int arity -> g
    int position -> h
    62:62:boolean isDerivative() -> a
    66:74:java.lang.String toString() -> toString
org.javia.arity.TokenConsumer -> a.A:
    21:21:void start() -> a
    void push(org.javia.arity.Token) -> a
org.javia.arity.VM -> a.q:
    java.lang.String[] opcodeName -> a
    byte[] arity -> b
    byte[] builtins -> c
