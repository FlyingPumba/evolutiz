public final class com.gluegadget.hndroid.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;

    public void <init>()
    {
        com.gluegadget.hndroid.BuildConfig r0;

        r0 := @this: com.gluegadget.hndroid.BuildConfig;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class com.gluegadget.hndroid.Comment extends java.lang.Object
{
    private java.lang.String title;
    private java.lang.String author;
    private java.lang.String replyToUrl;
    private java.lang.String upVoteUrl;
    private java.lang.Integer padding;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String)
    {
        com.gluegadget.hndroid.Comment r0;
        java.lang.String r1, r2, r4, r5, $r10, $r12, $r15, $r17;
        java.lang.Integer r3;
        boolean[][] $r6;
        boolean[] r7;
        int $i0, $i1;
        java.lang.StringBuilder $r8, $r9, $r11, $r13, $r14, $r16;

        r0 := @this: com.gluegadget.hndroid.Comment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Integer;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        $r6 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        if $r6 != null goto label0;

        $r6 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();

     label0:
        r7 = $r6[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.gluegadget.hndroid.Comment: java.lang.String title> = r1;
        r0.<com.gluegadget.hndroid.Comment: java.lang.String author> = r2;
        r0.<com.gluegadget.hndroid.Comment: java.lang.Integer padding> = r3;
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        r7[0] = 1;
        if $i0 <= 1 goto label1;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/");
        $r10 = virtualinvoke r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&amp", "&");
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.gluegadget.hndroid.Comment: java.lang.String replyToUrl> = $r12;
        r7[1] = 1;
        goto label2;

     label1:
        r0.<com.gluegadget.hndroid.Comment: java.lang.String replyToUrl> = r4;
        r7[2] = 1;

     label2:
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();
        r7[3] = 1;
        if $i1 <= 1 goto label3;

        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/");
        $r15 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&amp", "&");
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.gluegadget.hndroid.Comment: java.lang.String upVoteUrl> = $r17;
        r7[4] = 1;
        goto label4;

     label3:
        r0.<com.gluegadget.hndroid.Comment: java.lang.String upVoteUrl> = r5;
        r7[5] = 1;

     label4:
        r7[6] = 1;
        return;
    }

    public void <init>(java.lang.String)
    {
        com.gluegadget.hndroid.Comment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Integer $r4;

        r0 := @this: com.gluegadget.hndroid.Comment;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        specialinvoke r0.<com.gluegadget.hndroid.Comment: void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)>(r1, "", $r4, "", "");
        r3[0] = 1;
        return;
    }

    public java.lang.Integer getPadding()
    {
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Integer $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.Integer padding>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getTitle()
    {
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.String title>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getAuthor()
    {
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.String author>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getReplyToUrl()
    {
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.String replyToUrl>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getUpVoteUrl()
    {
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.Comment;
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<com.gluegadget.hndroid.Comment: java.lang.String upVoteUrl>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String toString()
    {
        com.gluegadget.hndroid.Comment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.gluegadget.hndroid.Comment;
        $r1 = <com.gluegadget.hndroid.Comment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = r0.<com.gluegadget.hndroid.Comment: java.lang.String author>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r7 = r0.<com.gluegadget.hndroid.Comment: java.lang.String title>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r9;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comment: boolean[][] $VRi()>();
        r1 = $r0[8];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <com.gluegadget.hndroid.Comment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[7];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comment", -2043835178151971491L);
        return $r0;
    }
}
class com.gluegadget.hndroid.CommentDialog$1 extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.CommentDialog$1: boolean[][] $VRi()>();
        r1 = $r0[0];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1;

        $r0 = newmultiarray (boolean)[1][];
        <com.gluegadget.hndroid.CommentDialog$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentDialog$1", 33323L);
        return $r0;
    }
}
public interface  com.gluegadget.hndroid.CommentDialog$ReadyListener extends java.lang.Object
{

    public abstract void ready(java.lang.String);

    public abstract void ready(java.lang.String, java.lang.String);
}
class com.gluegadget.hndroid.CommentDialog$loginListener extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.gluegadget.hndroid.CommentDialog this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(com.gluegadget.hndroid.CommentDialog)
    {
        com.gluegadget.hndroid.CommentDialog$loginListener r0;
        com.gluegadget.hndroid.CommentDialog r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.CommentDialog$loginListener;
        r1 := @parameter0: com.gluegadget.hndroid.CommentDialog;
        $r2 = <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.gluegadget.hndroid.CommentDialog$loginListener r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.CommentDialog $r4, $r6, $r8, $r12, $r14, $r18, $r20;
        java.lang.String $r5, $r11, $r17, $r19;
        com.gluegadget.hndroid.CommentDialog$ReadyListener $r7, $r13;
        android.widget.EditText $r9, $r15;
        android.text.Editable $r10, $r16;

        r0 := @this: com.gluegadget.hndroid.CommentDialog$loginListener;
        r1 := @parameter0: android.view.View;
        $r2 = <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        $r5 = $r4.<com.gluegadget.hndroid.CommentDialog: java.lang.String replyUrl>;
        r3[0] = 1;
        if $r5 != null goto label1;

        $r6 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        $r7 = staticinvoke <com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener access$100(com.gluegadget.hndroid.CommentDialog)>($r6);
        $r8 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        $r9 = $r8.<com.gluegadget.hndroid.CommentDialog: android.widget.EditText text>;
        $r10 = virtualinvoke $r9.<android.widget.EditText: android.text.Editable getText()>();
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);
        interfaceinvoke $r7.<com.gluegadget.hndroid.CommentDialog$ReadyListener: void ready(java.lang.String)>($r11);
        r3[1] = 1;
        goto label2;

     label1:
        $r12 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        $r13 = staticinvoke <com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener access$100(com.gluegadget.hndroid.CommentDialog)>($r12);
        $r14 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        $r15 = $r14.<com.gluegadget.hndroid.CommentDialog: android.widget.EditText text>;
        $r16 = virtualinvoke $r15.<android.widget.EditText: android.text.Editable getText()>();
        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);
        $r18 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        $r19 = $r18.<com.gluegadget.hndroid.CommentDialog: java.lang.String replyUrl>;
        interfaceinvoke $r13.<com.gluegadget.hndroid.CommentDialog$ReadyListener: void ready(java.lang.String,java.lang.String)>($r17, $r19);
        r3[2] = 1;

     label2:
        $r20 = r0.<com.gluegadget.hndroid.CommentDialog$loginListener: com.gluegadget.hndroid.CommentDialog this$0>;
        virtualinvoke $r20.<com.gluegadget.hndroid.CommentDialog: void dismiss()>();
        r3[3] = 1;
        return;
    }

    void <init>(com.gluegadget.hndroid.CommentDialog, com.gluegadget.hndroid.CommentDialog$1)
    {
        com.gluegadget.hndroid.CommentDialog$loginListener r0;
        com.gluegadget.hndroid.CommentDialog r1;
        com.gluegadget.hndroid.CommentDialog$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.CommentDialog$loginListener;
        r1 := @parameter0: com.gluegadget.hndroid.CommentDialog;
        r2 := @parameter1: com.gluegadget.hndroid.CommentDialog$1;
        $r3 = <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        specialinvoke r0.<com.gluegadget.hndroid.CommentDialog$loginListener: void <init>(com.gluegadget.hndroid.CommentDialog)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <com.gluegadget.hndroid.CommentDialog$loginListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentDialog$loginListener", 7773141659917186463L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.CommentDialog extends android.app.Dialog
{
    android.widget.Button submitButton;
    java.lang.String name;
    java.lang.String replyUrl;
    private com.gluegadget.hndroid.CommentDialog$ReadyListener readyListener;
    android.widget.EditText text;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, java.lang.String, com.gluegadget.hndroid.CommentDialog$ReadyListener)
    {
        com.gluegadget.hndroid.CommentDialog r0;
        android.content.Context r1;
        java.lang.String r2;
        com.gluegadget.hndroid.CommentDialog$ReadyListener r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: com.gluegadget.hndroid.CommentDialog;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: com.gluegadget.hndroid.CommentDialog$ReadyListener;
        $r4 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);
        r0.<com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener readyListener> = r3;
        r0.<com.gluegadget.hndroid.CommentDialog: java.lang.String name> = r2;
        r5[0] = 1;
        return;
    }

    public void <init>(android.content.Context, java.lang.String, java.lang.String, com.gluegadget.hndroid.CommentDialog$ReadyListener)
    {
        com.gluegadget.hndroid.CommentDialog r0;
        android.content.Context r1;
        java.lang.String r2, r3;
        com.gluegadget.hndroid.CommentDialog$ReadyListener r4;
        boolean[][] $r5;
        boolean[] r6;

        r0 := @this: com.gluegadget.hndroid.CommentDialog;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: com.gluegadget.hndroid.CommentDialog$ReadyListener;
        $r5 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();

     label0:
        r6 = $r5[1];
        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);
        r0.<com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener readyListener> = r4;
        r0.<com.gluegadget.hndroid.CommentDialog: java.lang.String name> = r2;
        r0.<com.gluegadget.hndroid.CommentDialog: java.lang.String replyUrl> = r3;
        r6[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.gluegadget.hndroid.CommentDialog r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;
        android.view.View $r5, $r9;
        android.widget.Button $r6, $r7;
        com.gluegadget.hndroid.CommentDialog$loginListener $r8;
        android.widget.EditText $r10;

        r0 := @this: com.gluegadget.hndroid.CommentDialog;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<android.app.Dialog: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: void setContentView(int)>(2130903040);
        $r4 = r0.<com.gluegadget.hndroid.CommentDialog: java.lang.String name>;
        virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: void setTitle(java.lang.CharSequence)>($r4);
        $r5 = virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: android.view.View findViewById(int)>(2131230722);
        $r6 = (android.widget.Button) $r5;
        r0.<com.gluegadget.hndroid.CommentDialog: android.widget.Button submitButton> = $r6;
        $r7 = r0.<com.gluegadget.hndroid.CommentDialog: android.widget.Button submitButton>;
        $r8 = new com.gluegadget.hndroid.CommentDialog$loginListener;
        specialinvoke $r8.<com.gluegadget.hndroid.CommentDialog$loginListener: void <init>(com.gluegadget.hndroid.CommentDialog,com.gluegadget.hndroid.CommentDialog$1)>(r0, null);
        virtualinvoke $r7.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r8);
        $r9 = virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: android.view.View findViewById(int)>(2131230721);
        $r10 = (android.widget.EditText) $r9;
        r0.<com.gluegadget.hndroid.CommentDialog: android.widget.EditText text> = $r10;
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.gluegadget.hndroid.CommentDialog r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.Button $r4;

        r0 := @this: com.gluegadget.hndroid.CommentDialog;
        r1 := @parameter0: android.view.View;
        $r2 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = r0.<com.gluegadget.hndroid.CommentDialog: android.widget.Button submitButton>;
        r3[0] = 1;
        if r1 != $r4 goto label1;

        virtualinvoke r0.<com.gluegadget.hndroid.CommentDialog: void dismiss()>();
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    static com.gluegadget.hndroid.CommentDialog$ReadyListener access$100(com.gluegadget.hndroid.CommentDialog)
    {
        com.gluegadget.hndroid.CommentDialog r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.CommentDialog$ReadyListener $r3;

        r0 := @parameter0: com.gluegadget.hndroid.CommentDialog;
        $r1 = <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<com.gluegadget.hndroid.CommentDialog: com.gluegadget.hndroid.CommentDialog$ReadyListener readyListener>;
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <com.gluegadget.hndroid.CommentDialog: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentDialog", -3502395337789825507L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments)
    {
        com.gluegadget.hndroid.Comments$1 r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        $r2 = <com.gluegadget.hndroid.Comments$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Comments$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Comments $r3, $r4, $r6, $r8;
        java.lang.String $r5;
        android.app.ProgressDialog $r7;
        android.os.Handler $r9;

        r0 := @this: com.gluegadget.hndroid.Comments$1;
        $r1 = <com.gluegadget.hndroid.Comments$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0>;
        $r4 = r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0>;
        $r5 = $r4.<com.gluegadget.hndroid.Comments: java.lang.String extrasCommentsUrl>;
        staticinvoke <com.gluegadget.hndroid.Comments: void access$000(com.gluegadget.hndroid.Comments,java.lang.String)>($r3, $r5);
        $r6 = r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        virtualinvoke $r7.<android.app.ProgressDialog: void dismiss()>();
        $r8 = r0.<com.gluegadget.hndroid.Comments$1: com.gluegadget.hndroid.Comments this$0>;
        $r9 = $r8.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        virtualinvoke $r9.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$1", 4320153517004707556L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$2$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Comments$2 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments$2)
    {
        com.gluegadget.hndroid.Comments$2$1 r0;
        com.gluegadget.hndroid.Comments$2 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$2$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$2;
        $r2 = <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Comments$2$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Comments$2 $r3, $r5, $r8, $r11;
        com.gluegadget.hndroid.Comments $r4, $r6, $r9, $r12;
        java.lang.String $r7;
        android.app.ProgressDialog $r10;
        android.os.Handler $r13;

        r0 := @this: com.gluegadget.hndroid.Comments$2$1;
        $r1 = <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1>;
        $r4 = $r3.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        $r5 = r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1>;
        $r6 = $r5.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.Comments: java.lang.String extrasCommentsUrl>;
        staticinvoke <com.gluegadget.hndroid.Comments: void access$000(com.gluegadget.hndroid.Comments,java.lang.String)>($r4, $r7);
        $r8 = r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1>;
        $r9 = $r8.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        $r10 = $r9.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        virtualinvoke $r10.<android.app.ProgressDialog: void dismiss()>();
        $r11 = r0.<com.gluegadget.hndroid.Comments$2$1: com.gluegadget.hndroid.Comments$2 this$1>;
        $r12 = $r11.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        $r13 = $r12.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        virtualinvoke $r13.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$2$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$2$1", 4320153520335774608L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$2 extends android.os.Handler
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments)
    {
        com.gluegadget.hndroid.Comments$2 r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$2;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        $r2 = <com.gluegadget.hndroid.Comments$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0> = r1;
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.gluegadget.hndroid.Comments$2 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        com.gluegadget.hndroid.Comments $r4, $r6, $r7;
        com.gluegadget.hndroid.CommentsAdapter $r5;
        android.app.ProgressDialog $r8;
        java.lang.Thread $r9;
        com.gluegadget.hndroid.Comments$2$1 $r10;

        r0 := @this: com.gluegadget.hndroid.Comments$2;
        r1 := @parameter0: android.os.Message;
        $r2 = <com.gluegadget.hndroid.Comments$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $i0 = r1.<android.os.Message: int what>;
        r3[0] = 1;
        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = r0.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        $r5 = $r4.<com.gluegadget.hndroid.Comments: com.gluegadget.hndroid.CommentsAdapter aa>;
        virtualinvoke $r5.<com.gluegadget.hndroid.CommentsAdapter: void notifyDataSetChanged()>();
        r3[1] = 1;
        goto label3;

     label2:
        $r6 = r0.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        $r7 = r0.<com.gluegadget.hndroid.Comments$2: com.gluegadget.hndroid.Comments this$0>;
        $r8 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r7, "", "Reloading. Please wait...", 1);
        $r6.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r8;
        $r9 = new java.lang.Thread;
        $r10 = new com.gluegadget.hndroid.Comments$2$1;
        specialinvoke $r10.<com.gluegadget.hndroid.Comments$2$1: void <init>(com.gluegadget.hndroid.Comments$2)>(r0);
        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        r3[2] = 1;
        goto label3;

     label3:
        r3[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$2", -8063631999783227823L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$3$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Comments$3 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments$3)
    {
        com.gluegadget.hndroid.Comments$3$1 r0;
        com.gluegadget.hndroid.Comments$3 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$3$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$3;
        $r2 = <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Comments$3$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Comments$3 $r3, $r5, $r8, $r11;
        com.gluegadget.hndroid.Comments $r4, $r6, $r9, $r12;
        java.lang.String $r7;
        android.app.ProgressDialog $r10;
        android.os.Handler $r13;

        r0 := @this: com.gluegadget.hndroid.Comments$3$1;
        $r1 = <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1>;
        $r4 = $r3.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        $r5 = r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1>;
        $r6 = $r5.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.Comments: java.lang.String extrasCommentsUrl>;
        staticinvoke <com.gluegadget.hndroid.Comments: void access$000(com.gluegadget.hndroid.Comments,java.lang.String)>($r4, $r7);
        $r8 = r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1>;
        $r9 = $r8.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        $r10 = $r9.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        virtualinvoke $r10.<android.app.ProgressDialog: void dismiss()>();
        $r11 = r0.<com.gluegadget.hndroid.Comments$3$1: com.gluegadget.hndroid.Comments$3 this$1>;
        $r12 = $r11.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        $r13 = $r12.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        virtualinvoke $r13.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$3$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$3$1", 4320153520335774608L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$3 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments)
    {
        com.gluegadget.hndroid.Comments$3 r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$3;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        $r2 = <com.gluegadget.hndroid.Comments$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Comments$3 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r10;
        com.gluegadget.hndroid.Comments $r5, $r6;
        android.app.ProgressDialog $r7;
        java.lang.Thread $r8;
        com.gluegadget.hndroid.Comments$3$1 $r9;

        r0 := @this: com.gluegadget.hndroid.Comments$3;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Comments$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];

     label1:
        $r5 = r0.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        $r6 = r0.<com.gluegadget.hndroid.Comments$3: com.gluegadget.hndroid.Comments this$0>;
        $r7 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, "", "Reloading. Please wait...", 1);
        $r5.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r7;
        $r8 = new java.lang.Thread;
        $r9 = new com.gluegadget.hndroid.Comments$3$1;
        specialinvoke $r9.<com.gluegadget.hndroid.Comments$3$1: void <init>(com.gluegadget.hndroid.Comments$3)>(r0);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9);
        virtualinvoke $r8.<java.lang.Thread: void start()>();
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r4 = $r10;
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r3[1] = 1;

     label4:
        r3[2] = 1;
        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$3: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$3", -718148683936897661L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$4 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments)
    {
        com.gluegadget.hndroid.Comments$4 r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$4;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        $r2 = <com.gluegadget.hndroid.Comments$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$4: com.gluegadget.hndroid.Comments this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Comments$4 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Comments$OnCommentListener $r4;
        com.gluegadget.hndroid.CommentDialog r5, $r6;
        com.gluegadget.hndroid.Comments $r7, $r8;

        r0 := @this: com.gluegadget.hndroid.Comments$4;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Comments$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r6 = new com.gluegadget.hndroid.CommentDialog;
        $r7 = r0.<com.gluegadget.hndroid.Comments$4: com.gluegadget.hndroid.Comments this$0>;
        $r4 = new com.gluegadget.hndroid.Comments$OnCommentListener;
        $r8 = r0.<com.gluegadget.hndroid.Comments$4: com.gluegadget.hndroid.Comments this$0>;
        specialinvoke $r4.<com.gluegadget.hndroid.Comments$OnCommentListener: void <init>(com.gluegadget.hndroid.Comments,com.gluegadget.hndroid.Comments$1)>($r8, null);
        specialinvoke $r6.<com.gluegadget.hndroid.CommentDialog: void <init>(android.content.Context,java.lang.String,com.gluegadget.hndroid.CommentDialog$ReadyListener)>($r7, "Comment on submission", $r4);
        r5 = $r6;
        virtualinvoke r5.<com.gluegadget.hndroid.CommentDialog: void show()>();
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$4: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$4", 4320153515616762951L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$5 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Comment val$newsContexted;
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments, com.gluegadget.hndroid.Comment)
    {
        com.gluegadget.hndroid.Comments$5 r0;
        com.gluegadget.hndroid.Comments r1;
        com.gluegadget.hndroid.Comment r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$5;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        r2 := @parameter1: com.gluegadget.hndroid.Comment;
        $r3 = <com.gluegadget.hndroid.Comments$5: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$5: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comments this$0> = r1;
        r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comment val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Comments$5 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r9, $r12;
        com.gluegadget.hndroid.Comments$OnReplyListener $r5;
        com.gluegadget.hndroid.CommentDialog r6, $r7;
        com.gluegadget.hndroid.Comments $r8, $r16;
        com.gluegadget.hndroid.Comment $r10, $r14;
        java.lang.String $r11, $r13, $r15;

        r0 := @this: com.gluegadget.hndroid.Comments$5;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Comments$5: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$5: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r7 = new com.gluegadget.hndroid.CommentDialog;
        $r8 = r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comments this$0>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reply to ");
        $r10 = r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comment val$newsContexted>;
        $r11 = virtualinvoke $r10.<com.gluegadget.hndroid.Comment: java.lang.String getAuthor()>();
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comment val$newsContexted>;
        $r15 = virtualinvoke $r14.<com.gluegadget.hndroid.Comment: java.lang.String getReplyToUrl()>();
        $r5 = new com.gluegadget.hndroid.Comments$OnReplyListener;
        $r16 = r0.<com.gluegadget.hndroid.Comments$5: com.gluegadget.hndroid.Comments this$0>;
        specialinvoke $r5.<com.gluegadget.hndroid.Comments$OnReplyListener: void <init>(com.gluegadget.hndroid.Comments,com.gluegadget.hndroid.Comments$1)>($r16, null);
        specialinvoke $r7.<com.gluegadget.hndroid.CommentDialog: void <init>(android.content.Context,java.lang.String,java.lang.String,com.gluegadget.hndroid.CommentDialog$ReadyListener)>($r8, $r13, $r15, $r5);
        r6 = $r7;
        virtualinvoke r6.<com.gluegadget.hndroid.CommentDialog: void show()>();
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$5: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$5", 4705431569254151786L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$6$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Comments$6 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments$6)
    {
        com.gluegadget.hndroid.Comments$6$1 r0;
        com.gluegadget.hndroid.Comments$6 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$6$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$6;
        $r2 = <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Comments$6$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r15, $r19;
        org.apache.http.impl.client.DefaultHttpClient r5, $r11;
        org.apache.http.client.methods.HttpGet r6, $r12;
        org.apache.http.impl.client.BasicResponseHandler r7, $r20;
        org.apache.http.client.ClientProtocolException r8, $r22;
        com.gluegadget.hndroid.Comments$6 $r9, $r13, $r25, $r28;
        com.gluegadget.hndroid.Comments $r10, $r26, $r29;
        com.gluegadget.hndroid.Comment $r14;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.io.IOException $r23, r24;
        android.app.ProgressDialog $r27;
        android.os.Handler $r30;

        r0 := @this: com.gluegadget.hndroid.Comments$6$1;
        $r1 = <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r9 = r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1>;
        $r10 = $r9.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        r3 = virtualinvoke $r10.<com.gluegadget.hndroid.Comments: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r5 = $r11;
        $r12 = new org.apache.http.client.methods.HttpGet;
        $r13 = r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1>;
        $r14 = $r13.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comment val$newsContexted>;
        $r15 = virtualinvoke $r14.<com.gluegadget.hndroid.Comment: java.lang.String getUpVoteUrl()>();
        specialinvoke $r12.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r15);
        r6 = $r12;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r19);
        $r20 = new org.apache.http.impl.client.BasicResponseHandler;
        specialinvoke $r20.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r7 = $r20;

     label1:
        virtualinvoke r5.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r6, r7);
        r2[0] = 1;

     label2:
        goto label5;

     label3:
        $r22 := @caughtexception;
        r8 = $r22;
        virtualinvoke r8.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        r2[1] = 1;
        goto label5;

     label4:
        $r23 := @caughtexception;
        r24 = $r23;
        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();
        r2[2] = 1;

     label5:
        $r25 = r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1>;
        $r26 = $r25.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        $r27 = $r26.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        virtualinvoke $r27.<android.app.ProgressDialog: void dismiss()>();
        $r28 = r0.<com.gluegadget.hndroid.Comments$6$1: com.gluegadget.hndroid.Comments$6 this$1>;
        $r29 = $r28.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        $r30 = $r29.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        virtualinvoke $r30.<android.os.Handler: boolean sendEmptyMessage(int)>(2);
        r2[3] = 1;
        return;

        catch org.apache.http.client.ClientProtocolException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$6$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$6$1", -4124872408349886090L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$6 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Comment val$newsContexted;
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments, com.gluegadget.hndroid.Comment)
    {
        com.gluegadget.hndroid.Comments$6 r0;
        com.gluegadget.hndroid.Comments r1;
        com.gluegadget.hndroid.Comment r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$6;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        r2 := @parameter1: com.gluegadget.hndroid.Comment;
        $r3 = <com.gluegadget.hndroid.Comments$6: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$6: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0> = r1;
        r0.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comment val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Comments$6 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Comments $r4, $r5;
        android.app.ProgressDialog $r6;
        java.lang.Thread $r7;
        com.gluegadget.hndroid.Comments$6$1 $r8;

        r0 := @this: com.gluegadget.hndroid.Comments$6;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Comments$6: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$6: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        $r5 = r0.<com.gluegadget.hndroid.Comments$6: com.gluegadget.hndroid.Comments this$0>;
        $r6 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r5, "", "Voting. Please wait...", 1);
        $r4.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r6;
        $r7 = new java.lang.Thread;
        $r8 = new com.gluegadget.hndroid.Comments$6$1;
        specialinvoke $r8.<com.gluegadget.hndroid.Comments$6$1: void <init>(com.gluegadget.hndroid.Comments$6)>(r0);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);
        virtualinvoke $r7.<java.lang.Thread: void start()>();
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$6: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$6", 4705431562869606603L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$OnCommentListener$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$text;
    final com.gluegadget.hndroid.Comments$OnCommentListener this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments$OnCommentListener, java.lang.String)
    {
        com.gluegadget.hndroid.Comments$OnCommentListener$1 r0;
        com.gluegadget.hndroid.Comments$OnCommentListener r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$OnCommentListener;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1> = r1;
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: java.lang.String val$text> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Comments$OnCommentListener$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        org.apache.http.impl.client.DefaultHttpClient r3, $r8;
        org.apache.http.client.methods.HttpPost r4, $r9;
        java.util.ArrayList r5, $r10;
        android.content.SharedPreferences r6;
        java.lang.String r7, $r12, $r16, $r23;
        org.apache.http.message.BasicNameValuePair $r11, $r13;
        com.gluegadget.hndroid.Comments$OnCommentListener $r14, $r18, $r26, $r29, $r34, $r37;
        com.gluegadget.hndroid.Comments $r15, $r19, $r27, $r30, $r35, $r38;
        org.apache.http.client.entity.UrlEncodedFormEntity $r17;
        java.lang.StringBuilder $r20, $r21, $r22;
        org.apache.http.conn.ClientConnectionManager $r25;
        android.app.ProgressDialog $r28, $r36;
        android.os.Handler $r31, $r39;
        java.lang.Exception $r32, r33;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener$1;
        $r1 = <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];

     label1:
        $r8 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r8.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r3 = $r8;
        $r9 = new org.apache.http.client.methods.HttpPost;
        specialinvoke $r9.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://news.ycombinator.com/r");
        r4 = $r9;
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r5 = $r10;
        $r11 = new org.apache.http.message.BasicNameValuePair;
        $r12 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: java.lang.String val$text>;
        specialinvoke $r11.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("text", $r12);
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r11);
        $r13 = new org.apache.http.message.BasicNameValuePair;
        $r14 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        $r15 = $r14.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        $r16 = $r15.<com.gluegadget.hndroid.Comments: java.lang.String fnId>;
        specialinvoke $r13.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("fnid", $r16);
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13);
        $r17 = new org.apache.http.client.entity.UrlEncodedFormEntity;
        specialinvoke $r17.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r5, "UTF-8");
        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r17);
        $r18 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        $r19 = $r18.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        r6 = virtualinvoke $r19.<com.gluegadget.hndroid.Comments: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r7 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r23);
        virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r4);
        $r25 = virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();
        interfaceinvoke $r25.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();
        $r26 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        $r27 = $r26.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        $r28 = $r27.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        virtualinvoke $r28.<android.app.ProgressDialog: void dismiss()>();
        $r29 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        $r30 = $r29.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        $r31 = $r30.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        virtualinvoke $r31.<android.os.Handler: boolean sendEmptyMessage(int)>(2);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r32 := @caughtexception;
        r33 = $r32;
        $r34 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        $r35 = $r34.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        $r36 = $r35.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        virtualinvoke $r36.<android.app.ProgressDialog: void dismiss()>();
        $r37 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener$1: com.gluegadget.hndroid.Comments$OnCommentListener this$1>;
        $r38 = $r37.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        $r39 = $r38.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        virtualinvoke $r39.<android.os.Handler: boolean sendEmptyMessage(int)>(0);
        virtualinvoke r33.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$OnCommentListener$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$OnCommentListener$1", -508529184223415651L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$OnCommentListener extends java.lang.Object implements com.gluegadget.hndroid.CommentDialog$ReadyListener
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(com.gluegadget.hndroid.Comments)
    {
        com.gluegadget.hndroid.Comments$OnCommentListener r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        $r2 = <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void ready(java.lang.String)
    {
        com.gluegadget.hndroid.Comments$OnCommentListener r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r10;
        com.gluegadget.hndroid.Comments $r5, $r6;
        android.app.ProgressDialog $r7;
        java.lang.Thread $r8;
        com.gluegadget.hndroid.Comments$OnCommentListener$1 $r9;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];

     label1:
        $r5 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        $r6 = r0.<com.gluegadget.hndroid.Comments$OnCommentListener: com.gluegadget.hndroid.Comments this$0>;
        $r7 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, "", "Trying to comment. Please wait...", 1);
        $r5.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r7;
        $r8 = new java.lang.Thread;
        $r9 = new com.gluegadget.hndroid.Comments$OnCommentListener$1;
        specialinvoke $r9.<com.gluegadget.hndroid.Comments$OnCommentListener$1: void <init>(com.gluegadget.hndroid.Comments$OnCommentListener,java.lang.String)>(r0, r1);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9);
        virtualinvoke $r8.<java.lang.Thread: void start()>();
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r4 = $r10;
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r3[1] = 1;

     label4:
        r3[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void ready(java.lang.String, java.lang.String)
    {
        com.gluegadget.hndroid.Comments$OnCommentListener r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        r4[0] = 1;
        return;
    }

    void <init>(com.gluegadget.hndroid.Comments, com.gluegadget.hndroid.Comments$1)
    {
        com.gluegadget.hndroid.Comments$OnCommentListener r0;
        com.gluegadget.hndroid.Comments r1;
        com.gluegadget.hndroid.Comments$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$OnCommentListener;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        r2 := @parameter1: com.gluegadget.hndroid.Comments$1;
        $r3 = <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        specialinvoke r0.<com.gluegadget.hndroid.Comments$OnCommentListener: void <init>(com.gluegadget.hndroid.Comments)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.gluegadget.hndroid.Comments$OnCommentListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$OnCommentListener", 2946023665031100578L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$OnReplyListener$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$replyUrl;
    final java.lang.String val$text;
    final com.gluegadget.hndroid.Comments$OnReplyListener this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Comments$OnReplyListener, java.lang.String, java.lang.String)
    {
        com.gluegadget.hndroid.Comments$OnReplyListener$1 r0;
        com.gluegadget.hndroid.Comments$OnReplyListener r1;
        java.lang.String r2, r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener$1;
        r1 := @parameter0: com.gluegadget.hndroid.Comments$OnReplyListener;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1> = r1;
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: java.lang.String val$replyUrl> = r2;
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: java.lang.String val$text> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r5[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Comments$OnReplyListener$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        org.apache.http.impl.client.DefaultHttpClient r3, $r16;
        android.content.SharedPreferences r4;
        java.lang.String r5, r8, r13, $r20, $r24, $r29, $r30, $r34, $r40;
        org.apache.http.client.methods.HttpGet r6, $r19;
        org.apache.http.impl.client.BasicResponseHandler r7, $r25;
        org.htmlcleaner.HtmlCleaner r9, $r27;
        org.htmlcleaner.TagNode r10, r12;
        java.lang.Object[] r11;
        org.apache.http.client.methods.HttpPost r14, $r31;
        java.util.ArrayList r15, $r32;
        com.gluegadget.hndroid.Comments$OnReplyListener $r17, $r43, $r46, $r51, $r54;
        com.gluegadget.hndroid.Comments $r18, $r44, $r47, $r52, $r55;
        java.lang.StringBuilder $r21, $r22, $r23, $r37, $r38, $r39;
        java.lang.Object $r26, $r28;
        int $i0;
        org.apache.http.message.BasicNameValuePair $r33, $r35;
        org.apache.http.client.entity.UrlEncodedFormEntity $r36;
        org.apache.http.conn.ClientConnectionManager $r42;
        android.app.ProgressDialog $r45, $r53;
        android.os.Handler $r48, $r56;
        java.lang.Exception $r49, r50;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener$1;
        $r1 = <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];

     label1:
        $r16 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r16.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r3 = $r16;
        $r17 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        $r18 = $r17.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        r4 = virtualinvoke $r18.<com.gluegadget.hndroid.Comments: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r19 = new org.apache.http.client.methods.HttpGet;
        $r20 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: java.lang.String val$replyUrl>;
        specialinvoke $r19.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r20);
        r6 = $r19;
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r24);
        $r25 = new org.apache.http.impl.client.BasicResponseHandler;
        specialinvoke $r25.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r7 = $r25;
        $r26 = virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r6, r7);
        r8 = (java.lang.String) $r26;
        $r27 = new org.htmlcleaner.HtmlCleaner;
        specialinvoke $r27.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r9 = $r27;
        r10 = virtualinvoke r9.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r8);
        r11 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//form[@method=\'post\']/input[@name=\'fnid\']");
        $i0 = lengthof r11;
        r2[0] = 1;
        if $i0 != 1 goto label2;

        $r28 = r11[0];
        r12 = (org.htmlcleaner.TagNode) $r28;
        $r29 = virtualinvoke r12.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("value");
        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String toString()>();
        r13 = virtualinvoke $r30.<java.lang.String: java.lang.String trim()>();
        $r31 = new org.apache.http.client.methods.HttpPost;
        specialinvoke $r31.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://news.ycombinator.com/r");
        r14 = $r31;
        $r32 = new java.util.ArrayList;
        specialinvoke $r32.<java.util.ArrayList: void <init>()>();
        r15 = $r32;
        $r33 = new org.apache.http.message.BasicNameValuePair;
        $r34 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: java.lang.String val$text>;
        specialinvoke $r33.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("text", $r34);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r33);
        $r35 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r35.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("fnid", r13);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r35);
        $r36 = new org.apache.http.client.entity.UrlEncodedFormEntity;
        specialinvoke $r36.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r15, "UTF-8");
        virtualinvoke r14.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r36);
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r14.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r40);
        virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r14);
        $r42 = virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();
        interfaceinvoke $r42.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();
        r2[1] = 1;

     label2:
        $r43 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        $r44 = $r43.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        $r45 = $r44.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        virtualinvoke $r45.<android.app.ProgressDialog: void dismiss()>();
        $r46 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        $r47 = $r46.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        $r48 = $r47.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        virtualinvoke $r48.<android.os.Handler: boolean sendEmptyMessage(int)>(2);
        r2[2] = 1;

     label3:
        goto label5;

     label4:
        $r49 := @caughtexception;
        r50 = $r49;
        $r51 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        $r52 = $r51.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        $r53 = $r52.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog>;
        virtualinvoke $r53.<android.app.ProgressDialog: void dismiss()>();
        $r54 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener$1: com.gluegadget.hndroid.Comments$OnReplyListener this$1>;
        $r55 = $r54.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        $r56 = $r55.<com.gluegadget.hndroid.Comments: android.os.Handler handler>;
        virtualinvoke $r56.<android.os.Handler: boolean sendEmptyMessage(int)>(0);
        virtualinvoke r50.<java.lang.Exception: void printStackTrace()>();
        r2[3] = 1;

     label5:
        r2[4] = 1;
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Comments$OnReplyListener$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$OnReplyListener$1", 5195982784681923849L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Comments$OnReplyListener extends java.lang.Object implements com.gluegadget.hndroid.CommentDialog$ReadyListener
{
    final com.gluegadget.hndroid.Comments this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(com.gluegadget.hndroid.Comments)
    {
        com.gluegadget.hndroid.Comments$OnReplyListener r0;
        com.gluegadget.hndroid.Comments r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        $r2 = <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void ready(java.lang.String, java.lang.String)
    {
        com.gluegadget.hndroid.Comments$OnReplyListener r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Exception r5, $r11;
        com.gluegadget.hndroid.Comments $r6, $r7;
        android.app.ProgressDialog $r8;
        java.lang.Thread $r9;
        com.gluegadget.hndroid.Comments$OnReplyListener$1 $r10;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];

     label1:
        $r6 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        $r7 = r0.<com.gluegadget.hndroid.Comments$OnReplyListener: com.gluegadget.hndroid.Comments this$0>;
        $r8 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r7, "", "Trying to reply. Please wait...", 1);
        $r6.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r8;
        $r9 = new java.lang.Thread;
        $r10 = new com.gluegadget.hndroid.Comments$OnReplyListener$1;
        specialinvoke $r10.<com.gluegadget.hndroid.Comments$OnReplyListener$1: void <init>(com.gluegadget.hndroid.Comments$OnReplyListener,java.lang.String,java.lang.String)>(r0, r2, r1);
        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        r4[0] = 1;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;
        r5 = $r11;
        virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
        r4[1] = 1;

     label4:
        r4[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void ready(java.lang.String)
    {
        com.gluegadget.hndroid.Comments$OnReplyListener r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r3[0] = 1;
        return;
    }

    void <init>(com.gluegadget.hndroid.Comments, com.gluegadget.hndroid.Comments$1)
    {
        com.gluegadget.hndroid.Comments$OnReplyListener r0;
        com.gluegadget.hndroid.Comments r1;
        com.gluegadget.hndroid.Comments$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Comments$OnReplyListener;
        r1 := @parameter0: com.gluegadget.hndroid.Comments;
        r2 := @parameter1: com.gluegadget.hndroid.Comments$1;
        $r3 = <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        specialinvoke r0.<com.gluegadget.hndroid.Comments$OnReplyListener: void <init>(com.gluegadget.hndroid.Comments)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.gluegadget.hndroid.Comments$OnReplyListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments$OnReplyListener", -1035960688323099639L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.Comments extends android.app.Activity
{
    private static final int MENU_UPDATE;
    private static final int MENU_COMMENT;
    private static final int NOTIFY_DATASET_CHANGED;
    private static final int NOTIFY_COMMENT_ADDED;
    private static final int CONTEXT_REPLY;
    private static final int CONTEXT_UPVOTE;
    android.app.ProgressDialog dialog;
    android.widget.ListView newsListView;
    com.gluegadget.hndroid.CommentsAdapter aa;
    java.util.ArrayList commentsList;
    java.lang.String extrasCommentsUrl;
    java.lang.String fnId;
    java.lang.Boolean loggedIn;
    android.os.Handler handler;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.gluegadget.hndroid.Comments r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList $r3;
        java.lang.Boolean $r4;
        com.gluegadget.hndroid.Comments$2 $r5;

        r0 := @this: com.gluegadget.hndroid.Comments;
        $r1 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList> = $r3;
        r0.<com.gluegadget.hndroid.Comments: java.lang.String fnId> = "";
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn> = $r4;
        $r5 = new com.gluegadget.hndroid.Comments$2;
        specialinvoke $r5.<com.gluegadget.hndroid.Comments$2: void <init>(com.gluegadget.hndroid.Comments)>(r0);
        r0.<com.gluegadget.hndroid.Comments: android.os.Handler handler> = $r5;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.gluegadget.hndroid.Comments r0;
        android.os.Bundle r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        int i0;
        android.widget.TextView r5;
        android.view.View $r6, $r15;
        android.widget.ListView $r7, $r8, $r11;
        com.gluegadget.hndroid.CommentsAdapter $r9, $r12;
        java.util.ArrayList $r10;
        android.content.Intent $r13;
        java.lang.String $r14, $r16;
        android.app.ProgressDialog $r17;
        java.lang.Thread $r18;
        com.gluegadget.hndroid.Comments$1 $r19;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<com.gluegadget.hndroid.Comments: void setContentView(int)>(2130903045);
        $r6 = virtualinvoke r0.<com.gluegadget.hndroid.Comments: android.view.View findViewById(int)>(2131230732);
        $r7 = (android.widget.ListView) $r6;
        r0.<com.gluegadget.hndroid.Comments: android.widget.ListView newsListView> = $r7;
        $r8 = r0.<com.gluegadget.hndroid.Comments: android.widget.ListView newsListView>;
        virtualinvoke r0.<com.gluegadget.hndroid.Comments: void registerForContextMenu(android.view.View)>($r8);
        i0 = 2130903041;
        $r9 = new com.gluegadget.hndroid.CommentsAdapter;
        $r10 = r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList>;
        specialinvoke $r9.<com.gluegadget.hndroid.CommentsAdapter: void <init>(android.content.Context,int,java.util.List)>(r0, i0, $r10);
        r0.<com.gluegadget.hndroid.Comments: com.gluegadget.hndroid.CommentsAdapter aa> = $r9;
        $r11 = r0.<com.gluegadget.hndroid.Comments: android.widget.ListView newsListView>;
        $r12 = r0.<com.gluegadget.hndroid.Comments: com.gluegadget.hndroid.CommentsAdapter aa>;
        virtualinvoke $r11.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r12);
        $r13 = virtualinvoke r0.<com.gluegadget.hndroid.Comments: android.content.Intent getIntent()>();
        r4 = virtualinvoke $r13.<android.content.Intent: android.os.Bundle getExtras()>();
        $r14 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("url");
        r0.<com.gluegadget.hndroid.Comments: java.lang.String extrasCommentsUrl> = $r14;
        $r15 = virtualinvoke r0.<com.gluegadget.hndroid.Comments: android.view.View findViewById(int)>(2131230734);
        r5 = (android.widget.TextView) $r15;
        $r16 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("title");
        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r16);
        $r17 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", "Loading. Please wait...", 1);
        r0.<com.gluegadget.hndroid.Comments: android.app.ProgressDialog dialog> = $r17;
        $r18 = new java.lang.Thread;
        $r19 = new com.gluegadget.hndroid.Comments$1;
        specialinvoke $r19.<com.gluegadget.hndroid.Comments$1: void <init>(com.gluegadget.hndroid.Comments)>(r0);
        specialinvoke $r18.<java.lang.Thread: void <init>(java.lang.Runnable)>($r19);
        virtualinvoke $r18.<java.lang.Thread: void start()>();
        r3[0] = 1;
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.gluegadget.hndroid.Comments r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.MenuItem r4, r5;
        com.gluegadget.hndroid.Comments$3 $r7;
        com.gluegadget.hndroid.Comments$4 $r10;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: android.view.Menu;
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);
        r4 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 1, 0, 2131099650);
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837510);
        $r7 = new com.gluegadget.hndroid.Comments$3;
        specialinvoke $r7.<com.gluegadget.hndroid.Comments$3: void <init>(com.gluegadget.hndroid.Comments)>(r0);
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r7);
        r5 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 2, 0, 2131099653);
        interfaceinvoke r5.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837505);
        $r10 = new com.gluegadget.hndroid.Comments$4;
        specialinvoke $r10.<com.gluegadget.hndroid.Comments$4: void <init>(com.gluegadget.hndroid.Comments)>(r0);
        interfaceinvoke r5.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r10);
        r3[0] = 1;
        return 1;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        com.gluegadget.hndroid.Comments r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Boolean $r4;
        boolean $z0, $z1;
        java.lang.String $r5;
        android.view.MenuItem $r6, $r8;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: android.view.Menu;
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn>;
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r5 = r0.<com.gluegadget.hndroid.Comments: java.lang.String fnId>;
        r3[1] = 1;
        if $r5 != "" goto label2;

     label1:
        $r6 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);
        $r8 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        interfaceinvoke $r8.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(0);
        r3[2] = 1;

     label2:
        $z1 = specialinvoke r0.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r1);
        r3[3] = 1;
        return $z1;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        com.gluegadget.hndroid.Comments r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;
        boolean[][] $r4;
        boolean[] r5;
        android.widget.AdapterView$AdapterContextMenuInfo r6;
        com.gluegadget.hndroid.Comment r7;
        android.view.MenuItem r8, r21;
        android.widget.ListView $r9;
        android.widget.ListAdapter $r10;
        int $i0;
        java.lang.Object $r11;
        java.lang.String $r12, $r14, $r15, $r19;
        java.lang.Boolean $r16, $r20;
        boolean $z0, $z1;
        com.gluegadget.hndroid.Comments$5 $r17;
        com.gluegadget.hndroid.Comments$6 $r22;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: android.view.ContextMenu;
        r2 := @parameter1: android.view.View;
        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;
        $r4 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();

     label0:
        r5 = $r4[4];
        specialinvoke r0.<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(r1, r2, r3);
        r6 = (android.widget.AdapterView$AdapterContextMenuInfo) r3;
        $r9 = r0.<com.gluegadget.hndroid.Comments: android.widget.ListView newsListView>;
        $r10 = virtualinvoke $r9.<android.widget.ListView: android.widget.ListAdapter getAdapter()>();
        $i0 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        $r11 = interfaceinvoke $r10.<android.widget.ListAdapter: java.lang.Object getItem(int)>($i0);
        r7 = (com.gluegadget.hndroid.Comment) $r11;
        $r12 = virtualinvoke r7.<com.gluegadget.hndroid.Comment: java.lang.String getTitle()>();
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>($r12);
        $r14 = r0.<com.gluegadget.hndroid.Comments: java.lang.String fnId>;
        r5[0] = 1;
        if $r14 == "" goto label1;

        $r15 = virtualinvoke r7.<com.gluegadget.hndroid.Comment: java.lang.String getReplyToUrl()>();
        r5[1] = 1;
        if $r15 == "" goto label1;

        $r16 = r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn>;
        $z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();
        r5[2] = 1;
        if $z0 == 0 goto label1;

        r8 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 1, 0, 2131099658);
        $r17 = new com.gluegadget.hndroid.Comments$5;
        specialinvoke $r17.<com.gluegadget.hndroid.Comments$5: void <init>(com.gluegadget.hndroid.Comments,com.gluegadget.hndroid.Comment)>(r0, r7);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r17);
        r5[3] = 1;

     label1:
        $r19 = virtualinvoke r7.<com.gluegadget.hndroid.Comment: java.lang.String getUpVoteUrl()>();
        r5[4] = 1;
        if $r19 == "" goto label2;

        $r20 = r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn>;
        $z1 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();
        r5[5] = 1;
        if $z1 == 0 goto label2;

        r21 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 2, 0, 2131099659);
        $r22 = new com.gluegadget.hndroid.Comments$6;
        specialinvoke $r22.<com.gluegadget.hndroid.Comments$6: void <init>(com.gluegadget.hndroid.Comments,com.gluegadget.hndroid.Comment)>(r0, r7);
        interfaceinvoke r21.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r22);
        r5[6] = 1;

     label2:
        r5[7] = 1;
        return;
    }

    private void refreshComments(java.lang.String)
    {
        com.gluegadget.hndroid.Comments r0;
        java.lang.String r1, r5, r9, r17, r27, r28, r29, r31, $r43, $r48, $r49, $r50, $r53, $r54, $r55, $r58, $r59, $r62, $r68, $r70, $r71, $r74, $r75, $r82, $r84;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        org.apache.http.impl.client.DefaultHttpClient r6, $r38;
        org.apache.http.client.methods.HttpGet r7, $r39;
        org.apache.http.impl.client.BasicResponseHandler r8, $r44;
        org.htmlcleaner.HtmlCleaner r10, $r46;
        org.htmlcleaner.TagNode r11, r13, r15, r16, r19, r21, r26, r30, r34, $r60, $r63, r73, r76;
        java.lang.Object[] r12, r14, r20, r23, r24, r25, r56;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Integer r18;
        java.lang.StringBuffer r22, $r77, $r81;
        org.htmlcleaner.TagNode[] r32, r33;
        com.gluegadget.hndroid.Comment r35, $r86, $r87, $r89, r90;
        java.lang.Throwable r36, $r100;
        java.util.ArrayList $r37, $r88, $r91;
        java.lang.StringBuilder $r40, $r41, $r42, $r78, $r79, $r80, $r85;
        java.lang.Object $r45, $r47, $r52, $r57, $r61, $r64, $r67, $r69, $r72;
        boolean $z0, $z1;
        java.lang.Boolean $r51;
        java.util.List $r65;
        java.util.Iterator $r66;
        android.text.Spanned $r83;
        java.net.MalformedURLException $r92, r93;
        java.io.IOException $r94, r95;
        org.htmlcleaner.XPatherException $r96, r97;
        java.lang.IllegalStateException $r98, r99;

        r0 := @this: com.gluegadget.hndroid.Comments;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];

     label1:
        $r37 = r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList>;
        virtualinvoke $r37.<java.util.ArrayList: void clear()>();
        r4 = virtualinvoke r0.<com.gluegadget.hndroid.Comments: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r38 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r38.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r6 = $r38;
        $r39 = new org.apache.http.client.methods.HttpGet;
        specialinvoke $r39.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r1);
        r7 = $r39;
        r3[0] = 1;
        if r5 == "" goto label2;

        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r7.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r43);
        r3[1] = 1;

     label2:
        $r44 = new org.apache.http.impl.client.BasicResponseHandler;
        specialinvoke $r44.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r8 = $r44;
        $r45 = virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r7, r8);
        r9 = (java.lang.String) $r45;
        $r46 = new org.htmlcleaner.HtmlCleaner;
        specialinvoke $r46.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r10 = $r46;
        r11 = virtualinvoke r10.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r9);
        r12 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'pagetop\']/a");
        $r47 = r12[5];
        r13 = (org.htmlcleaner.TagNode) $r47;
        $r48 = virtualinvoke r13.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String toString()>();
        $r50 = virtualinvoke $r49.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r50.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("submit");
        r3[2] = 1;
        if $z0 == 0 goto label3;

        $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.gluegadget.hndroid.Comments: java.lang.Boolean loggedIn> = $r51;
        r3[3] = 1;

     label3:
        r14 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//form[@method=\'post\']/input[@name=\'fnid\']");
        $i3 = lengthof r14;
        r3[4] = 1;
        if $i3 != 1 goto label4;

        $r52 = r14[0];
        r15 = (org.htmlcleaner.TagNode) $r52;
        $r53 = virtualinvoke r15.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("value");
        $r54 = virtualinvoke $r53.<java.lang.String: java.lang.String toString()>();
        $r55 = virtualinvoke $r54.<java.lang.String: java.lang.String trim()>();
        r0.<com.gluegadget.hndroid.Comments: java.lang.String fnId> = $r55;
        r3[5] = 1;

     label4:
        r56 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//table[@border=\'0\']/tbody/tr/td/img[@src=\'http://ycombinator.com/images/s.gif\']");
        $i4 = lengthof r56;
        r3[6] = 1;
        if $i4 <= 1 goto label14;

        i0 = 0;
        r3[7] = 1;

     label5:
        $i5 = lengthof r56;
        r3[8] = 1;
        if i0 >= $i5 goto label13;

        $r57 = r56[i0];
        r16 = (org.htmlcleaner.TagNode) $r57;
        $r58 = virtualinvoke r16.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("width");
        $r59 = virtualinvoke $r58.<java.lang.String: java.lang.String toString()>();
        r17 = virtualinvoke $r59.<java.lang.String: java.lang.String trim()>();
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r17);
        $i7 = $i6 / 2;
        r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
        $r60 = virtualinvoke r16.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r19 = virtualinvoke $r60.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r20 = virtualinvoke r19.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'comment\']");
        $i8 = lengthof r20;
        r3[9] = 1;
        if $i8 <= 0 goto label12;

        $r61 = r20[0];
        r21 = (org.htmlcleaner.TagNode) $r61;
        r22 = virtualinvoke r21.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        $r62 = virtualinvoke r22.<java.lang.StringBuffer: java.lang.String toString()>();
        $z1 = virtualinvoke $r62.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("[deleted]");
        r3[10] = 1;
        if $z1 != 0 goto label10;

        r23 = virtualinvoke r19.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'comhead\']/a[1]");
        r24 = virtualinvoke r19.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//p/font[@size=\'1\']/u/a");
        $r63 = virtualinvoke r19.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r25 = virtualinvoke $r63.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@valign=\'top\']/center/a[1]");
        $r64 = r23[0];
        r26 = (org.htmlcleaner.TagNode) $r64;
        r27 = "";
        r28 = "";
        $r65 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r66 = interfaceinvoke $r65.<java.util.List: java.util.Iterator iterator()>();
        $r67 = interfaceinvoke $r66.<java.util.Iterator: java.lang.Object next()>();
        $r68 = virtualinvoke $r67.<java.lang.Object: java.lang.String toString()>();
        r29 = virtualinvoke $r68.<java.lang.String: java.lang.String trim()>();
        $i9 = lengthof r25;
        r3[11] = 1;
        if $i9 <= 0 goto label6;

        $r69 = r25[0];
        r30 = (org.htmlcleaner.TagNode) $r69;
        $r70 = virtualinvoke r30.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r71 = virtualinvoke $r70.<java.lang.String: java.lang.String toString()>();
        r27 = virtualinvoke $r71.<java.lang.String: java.lang.String trim()>();
        r3[12] = 1;

     label6:
        $i10 = lengthof r24;
        r3[13] = 1;
        if $i10 <= 0 goto label7;

        $r72 = r24[0];
        r73 = (org.htmlcleaner.TagNode) $r72;
        $r74 = virtualinvoke r73.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r75 = virtualinvoke $r74.<java.lang.String: java.lang.String toString()>();
        r28 = virtualinvoke $r75.<java.lang.String: java.lang.String trim()>();
        r3[14] = 1;

     label7:
        r76 = virtualinvoke r21.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElementByName(java.lang.String,boolean)>("font", 1);
        $r77 = virtualinvoke r76.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        r31 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.String toString()>();
        r32 = virtualinvoke r21.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElementsByName(java.lang.String,boolean)>("p", 1);
        r33 = r32;
        i1 = lengthof r33;
        i2 = 0;
        r3[15] = 1;

     label8:
        r3[16] = 1;
        if i2 >= i1 goto label9;

        r34 = r33[i2];
        $r78 = new java.lang.StringBuilder;
        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");
        $r81 = virtualinvoke r34.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();
        $r83 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>($r82);
        $r84 = virtualinvoke $r83.<java.lang.Object: java.lang.String toString()>();
        $r85 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);
        r31 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
        i2 = i2 + 1;
        r3[17] = 1;
        goto label8;

     label9:
        $r86 = new com.gluegadget.hndroid.Comment;
        specialinvoke $r86.<com.gluegadget.hndroid.Comment: void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)>(r31, r29, r18, r28, r27);
        r35 = $r86;
        r3[18] = 1;
        goto label11;

     label10:
        $r87 = new com.gluegadget.hndroid.Comment;
        specialinvoke $r87.<com.gluegadget.hndroid.Comment: void <init>(java.lang.String)>("[deleted]");
        r35 = $r87;
        r3[19] = 1;

     label11:
        $r88 = r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList>;
        virtualinvoke $r88.<java.util.ArrayList: boolean add(java.lang.Object)>(r35);
        r3[20] = 1;

     label12:
        i0 = i0 + 1;
        r3[21] = 1;
        goto label5;

     label13:
        r3[22] = 1;
        goto label15;

     label14:
        $r89 = new com.gluegadget.hndroid.Comment;
        specialinvoke $r89.<com.gluegadget.hndroid.Comment: void <init>(java.lang.String)>("No comments.");
        r90 = $r89;
        $r91 = r0.<com.gluegadget.hndroid.Comments: java.util.ArrayList commentsList>;
        virtualinvoke $r91.<java.util.ArrayList: boolean add(java.lang.Object)>(r90);
        r3[23] = 1;

     label15:
        r3[24] = 1;

     label16:
        goto label32;

     label17:
        $r92 := @caughtexception;

     label18:
        r93 = $r92;
        virtualinvoke r93.<java.net.MalformedURLException: void printStackTrace()>();
        r3[25] = 1;

     label19:
        goto label32;

     label20:
        $r94 := @caughtexception;

     label21:
        r95 = $r94;
        virtualinvoke r95.<java.io.IOException: void printStackTrace()>();
        r3[26] = 1;

     label22:
        goto label32;

     label23:
        $r96 := @caughtexception;

     label24:
        r97 = $r96;
        virtualinvoke r97.<org.htmlcleaner.XPatherException: void printStackTrace()>();
        r3[27] = 1;

     label25:
        goto label32;

     label26:
        $r98 := @caughtexception;

     label27:
        r99 = $r98;
        virtualinvoke r0.<com.gluegadget.hndroid.Comments: void finish()>();
        r3[28] = 1;

     label28:
        goto label32;

     label29:
        $r100 := @caughtexception;

     label30:
        r36 = $r100;

     label31:
        r3[29] = 1;
        throw r36;

     label32:
        r3[30] = 1;
        return;

        catch java.net.MalformedURLException from label1 to label16 with label17;
        catch java.io.IOException from label1 to label16 with label20;
        catch org.htmlcleaner.XPatherException from label1 to label16 with label23;
        catch java.lang.IllegalStateException from label1 to label16 with label26;
        catch java.lang.Throwable from label1 to label16 with label29;
        catch java.lang.Throwable from label18 to label19 with label29;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
    }

    static void access$000(com.gluegadget.hndroid.Comments, java.lang.String)
    {
        com.gluegadget.hndroid.Comments r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: com.gluegadget.hndroid.Comments;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Comments: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        specialinvoke r0.<com.gluegadget.hndroid.Comments: void refreshComments(java.lang.String)>(r1);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Comments: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <com.gluegadget.hndroid.Comments: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[31];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Comments", 7222688643866813712L);
        return $r0;
    }
}
class com.gluegadget.hndroid.CommentsAdapter$ViewHolder extends java.lang.Object
{
    android.widget.TextView title;
    android.widget.TextView author;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        com.gluegadget.hndroid.CommentsAdapter$ViewHolder r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.CommentsAdapter$ViewHolder;
        $r1 = <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.gluegadget.hndroid.CommentsAdapter$ViewHolder: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentsAdapter$ViewHolder", 9251206036812L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.CommentsAdapter extends android.widget.ArrayAdapter
{
    private android.view.LayoutInflater mInflater;
    int resource;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, int, java.util.List)
    {
        com.gluegadget.hndroid.CommentsAdapter r0;
        android.content.Context r1;
        int i0;
        java.util.List r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Object $r5;
        android.view.LayoutInflater $r6;

        r0 := @this: com.gluegadget.hndroid.CommentsAdapter;
        r1 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        r2 := @parameter2: java.util.List;
        $r3 = <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>(r1, i0, r2);
        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");
        $r6 = (android.view.LayoutInflater) $r5;
        r0.<com.gluegadget.hndroid.CommentsAdapter: android.view.LayoutInflater mInflater> = $r6;
        r0.<com.gluegadget.hndroid.CommentsAdapter: int resource> = i0;
        r4[0] = 1;
        return;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.gluegadget.hndroid.CommentsAdapter r0;
        int i0, $i1, $i2, $i3;
        android.view.View r1, $r10, $r12;
        android.view.ViewGroup r2;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.Comment r5;
        com.gluegadget.hndroid.CommentsAdapter$ViewHolder r6, $r9;
        java.lang.Object $r7, $r14;
        android.view.LayoutInflater $r8;
        android.widget.TextView $r11, $r13, $r15, $r17, $r20, $r22;
        java.lang.Integer $r16;
        java.lang.String $r18, $r19, $r21, $r25, $r27;
        java.lang.StringBuilder $r23, $r24, $r26;

        r0 := @this: com.gluegadget.hndroid.CommentsAdapter;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.View;
        r2 := @parameter2: android.view.ViewGroup;
        $r3 = <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r7 = virtualinvoke r0.<com.gluegadget.hndroid.CommentsAdapter: java.lang.Object getItem(int)>(i0);
        r5 = (com.gluegadget.hndroid.Comment) $r7;
        r4[0] = 1;
        if r1 != null goto label1;

        $r8 = r0.<com.gluegadget.hndroid.CommentsAdapter: android.view.LayoutInflater mInflater>;
        $i1 = r0.<com.gluegadget.hndroid.CommentsAdapter: int resource>;
        r1 = virtualinvoke $r8.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, r2, 0);
        $r9 = new com.gluegadget.hndroid.CommentsAdapter$ViewHolder;
        specialinvoke $r9.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: void <init>()>();
        r6 = $r9;
        $r10 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230724);
        $r11 = (android.widget.TextView) $r10;
        r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView title> = $r11;
        $r12 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230723);
        $r13 = (android.widget.TextView) $r12;
        r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView author> = $r13;
        virtualinvoke r1.<android.view.View: void setTag(java.lang.Object)>(r6);
        r4[1] = 1;
        goto label2;

     label1:
        $r14 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();
        r6 = (com.gluegadget.hndroid.CommentsAdapter$ViewHolder) $r14;
        r4[2] = 1;

     label2:
        $r15 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView title>;
        $r16 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.Integer getPadding()>();
        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();
        $i3 = $i2 + 1;
        virtualinvoke $r15.<android.widget.TextView: void setPadding(int,int,int,int)>($i3, 10, 10, 10);
        $r17 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView title>;
        $r18 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.String getTitle()>();
        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>($r18);
        $r19 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.String getAuthor()>();
        r4[3] = 1;
        if $r19 != "" goto label3;

        $r20 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView author>;
        $r21 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.String getAuthor()>();
        virtualinvoke $r20.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);
        r4[4] = 1;
        goto label4;

     label3:
        $r22 = r6.<com.gluegadget.hndroid.CommentsAdapter$ViewHolder: android.widget.TextView author>;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("by ");
        $r25 = virtualinvoke r5.<com.gluegadget.hndroid.Comment: java.lang.String getAuthor()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r27);
        r4[5] = 1;

     label4:
        r4[6] = 1;
        return r1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.CommentsAdapter: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/CommentsAdapter", -3503956966120550494L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements com.gluegadget.hndroid.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        r3[0] = 1;
        if r1 == null goto label1;

        $z0 = specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        r3[1] = 1;

     label1:
        $r11 = new android.content.Intent;
        $r12 = virtualinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "com/gluegadget/hndroid/EmmaInstrument/InstrumentedActivity");
        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        $r13 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        virtualinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void start()>();
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <android.os.Looper: void prepare()>();
        $r5 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        $r6 = virtualinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity) $r6;
        virtualinvoke r3.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: void setFinishListener(com.gluegadget.hndroid.EmmaInstrument.FinishListener)>(r0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        r4[0] = 1;
        if r5 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        r4[1] = 1;
        if $z0 == 0 goto label1;

        $z1 = 1;
        r4[2] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return $z1;
    }

    private void generateCoverageReport()
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r6 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        $r8 = specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label1:
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[2] = $r12;
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        $r13[0] = r3;
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r13[1] = $r14;
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $r13[2] = $r15;
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        r2[0] = 1;

     label2:
        goto label9;

     label3:
        $r17 := @caughtexception;
        r18 = $r17;
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        r2[1] = 1;
        goto label9;

     label4:
        $r19 := @caughtexception;
        r20 = $r19;
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        r2[2] = 1;
        goto label9;

     label5:
        $r21 := @caughtexception;
        r22 = $r21;
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        r2[3] = 1;
        goto label9;

     label6:
        $r23 := @caughtexception;
        r24 = $r23;
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        r2[4] = 1;
        goto label9;

     label7:
        $r25 := @caughtexception;
        r26 = $r25;
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        r2[5] = 1;
        goto label9;

     label8:
        $r27 := @caughtexception;
        r28 = $r27;
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        r2[6] = 1;

     label9:
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
    }

    private java.lang.String getCoverageFilePath()
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[0] = 1;
        if $r3 != null goto label1;

        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

     label1:
        $r4 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if $i0 <= 0 goto label1;

        r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        r3[2] = 1;
        return 1;

     label1:
        r3[3] = 1;
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        $r10 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        r2[1] = 1;

     label1:
        $r4 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        virtualinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r4 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0 = r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        r3[1] = 1;
        if $z1 != 0 goto label1;

        $r9 = <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        r3[2] = 1;

     label1:
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        specialinvoke r0.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1 = $r0[11];
        <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  com.gluegadget.hndroid.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity)
    {
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity $r10, $r18;
        com.gluegadget.hndroid.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        int $i0;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r10 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity this$0>;
        $r11 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener access$000(com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity)>($r10);
        r4[0] = 1;
        if $r11 == null goto label2;

        r4[1] = 1;
        if r5 == null goto label2;

        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0 = lengthof r6;
        r4[2] = 1;
        if $i0 <= 0 goto label2;

        $r14 = r6[0];
        $r15 = (byte[]) $r14;
        $r16 = (byte[]) $r15;
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        r4[3] = 1;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        r4[4] = 1;
        if $z1 == 0 goto label2;

     label1:
        $r18 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity this$0>;
        $r19 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener access$000(com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity)>($r18);
        interfaceinvoke $r19.<com.gluegadget.hndroid.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        r4[5] = 1;

     label2:
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity extends com.gluegadget.hndroid.Main
{
    public static java.lang.String TAG;
    private com.gluegadget.hndroid.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<com.gluegadget.hndroid.Main: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void setFinishListener(com.gluegadget.hndroid.EmmaInstrument.FinishListener)
    {
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r0;
        com.gluegadget.hndroid.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: com.gluegadget.hndroid.EmmaInstrument.FinishListener;
        $r2 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        com.gluegadget.hndroid.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        specialinvoke r0.<com.gluegadget.hndroid.Main: void finish()>();
        $r8 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        if $r8 == null goto label1;

        $r9 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener mListener>;
        interfaceinvoke $r9.<com.gluegadget.hndroid.EmmaInstrument.FinishListener: void onActivityFinished()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    static com.gluegadget.hndroid.EmmaInstrument.FinishListener access$000(com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity)
    {
        com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: com.gluegadget.hndroid.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1 = $r0[4];
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.gluegadget.hndroid.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver;
        $r1 = <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation;
        specialinvoke $r7.<com.gluegadget.hndroid.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        r4[0] = 1;
        if r6 == null goto label1;

        interfaceinvoke r6.<com.gluegadget.hndroid.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1 = $r0[2];
        <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.KarmaWidget$UpdateService extends android.app.Service implements java.lang.Runnable
{
    private static java.lang.Object sLock;
    private static java.util.Queue sAppWidgetIds;
    private static boolean sThreadRunning;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        $r1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Service: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onStart(android.content.Intent, int)
    {
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        android.content.Intent r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r8;
        boolean $z0;
        java.lang.Thread $r7;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        r1 := @parameter0: android.content.Intent;
        i0 := @parameter1: int;
        $r2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Service: void onStart(android.content.Intent,int)>(r1, i0);
        $r6 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock>;
        r4 = $r6;
        entermonitor $r6;

     label1:
        $z0 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean sThreadRunning>;
        r3[0] = 1;
        if $z0 != 0 goto label2;

        <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean sThreadRunning> = 1;
        $r7 = new java.lang.Thread;
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);
        virtualinvoke $r7.<java.lang.Thread: void start()>();
        r3[1] = 1;

     label2:
        exitmonitor r4;
        r3[2] = 1;

     label3:
        goto label7;

     label4:
        $r8 := @caughtexception;

     label5:
        r5 = $r8;
        exitmonitor r4;

     label6:
        r3[3] = 1;
        throw r5;

     label7:
        r3[4] = 1;
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void requestUpdate(int[])
    {
        int[] r0, r4;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Object r3, $r6;
        int i0, i1, i2;
        java.lang.Throwable r5, $r9;
        java.util.Queue $r7;
        java.lang.Integer $r8;

        r0 := @parameter0: int[];
        $r1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r6 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock>;
        r3 = $r6;
        entermonitor $r6;

     label1:
        r4 = r0;
        i0 = lengthof r4;
        i1 = 0;
        r2[0] = 1;

     label2:
        r2[1] = 1;
        if i1 >= i0 goto label3;

        i2 = r4[i1];
        $r7 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds>;
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>($r8);
        i1 = i1 + 1;
        r2[2] = 1;
        goto label2;

     label3:
        exitmonitor r3;
        r2[3] = 1;

     label4:
        goto label8;

     label5:
        $r9 := @caughtexception;

     label6:
        r5 = $r9;
        exitmonitor r3;

     label7:
        r2[4] = 1;
        throw r5;

     label8:
        r2[5] = 1;
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.widget.RemoteViews buildUpdate(android.content.Context)
    {
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        r1 := @parameter0: android.content.Context;
        $r2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r3[0] = 1;
        return null;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        r1 := @parameter0: android.content.Intent;
        $r2 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r3[0] = 1;
        return null;
    }

    public void run()
    {
        com.gluegadget.hndroid.KarmaWidget$UpdateService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.appwidget.AppWidgetManager r3;
        int i0;
        boolean $z0;
        android.content.Context $r4;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget$UpdateService;
        $r1 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r3 = staticinvoke <android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>(r0);
        r2[0] = 1;

     label1:
        $z0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean hasMoreUpdates()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        i0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: int getNextUpdate()>();
        $r4 = virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidget$UpdateService: android.content.Context getApplicationContext()>();
        staticinvoke <com.gluegadget.hndroid.KarmaWidget: void updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)>($r4, r3, i0);
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return;
    }

    private static boolean hasMoreUpdates()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Object r2, $r4;
        boolean z0, $z1, $z2;
        java.lang.Throwable r3, $r6;
        java.util.Queue $r5;

        $r0 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        $r4 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock>;
        r2 = $r4;
        entermonitor $r4;

     label1:
        $r5 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds>;
        $z1 = interfaceinvoke $r5.<java.util.Queue: boolean isEmpty()>();
        r1[0] = 1;
        if $z1 != 0 goto label2;

        $z2 = 1;
        r1[1] = 1;
        goto label3;

     label2:
        $z2 = 0;
        r1[2] = 1;

     label3:
        z0 = $z2;
        r1[3] = 1;
        if z0 != 0 goto label4;

        <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean sThreadRunning> = 0;
        r1[4] = 1;

     label4:
        exitmonitor r2;
        r1[5] = 1;

     label5:
        return z0;

     label6:
        $r6 := @caughtexception;

     label7:
        r3 = $r6;
        exitmonitor r2;

     label8:
        r1[6] = 1;
        throw r3;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private static int getNextUpdate()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Object r2, $r4, $r6, $r8;
        java.lang.Throwable r3, $r10;
        java.util.Queue $r5, $r7;
        byte $b0;
        java.lang.Integer $r9;
        int $i1;

        $r0 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];
        $r4 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock>;
        r2 = $r4;
        entermonitor $r4;

     label1:
        $r5 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds>;
        $r6 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object peek()>();
        r1[0] = 1;
        if $r6 != null goto label3;

        $b0 = 0;
        exitmonitor r2;
        r1[1] = 1;

     label2:
        return $b0;

     label3:
        $r7 = <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds>;
        $r8 = interfaceinvoke $r7.<java.util.Queue: java.lang.Object poll()>();
        $r9 = (java.lang.Integer) $r8;
        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();
        exitmonitor r2;
        r1[2] = 1;

     label4:
        return $i1;

     label5:
        $r10 := @caughtexception;

     label6:
        r3 = $r10;
        exitmonitor r2;

     label7:
        r1[3] = 1;
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Object $r2;
        java.util.LinkedList $r3;

        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRi()>();
        r1 = $r0[8];
        $r2 = new java.lang.Object;
        specialinvoke $r2.<java.lang.Object: void <init>()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.lang.Object sLock> = $r2;
        $r3 = new java.util.LinkedList;
        specialinvoke $r3.<java.util.LinkedList: void <init>()>();
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: java.util.Queue sAppWidgetIds> = $r3;
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean sThreadRunning> = 0;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <com.gluegadget.hndroid.KarmaWidget$UpdateService: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[7];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/KarmaWidget$UpdateService", 604957253039098302L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.KarmaWidget extends android.appwidget.AppWidgetProvider
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.gluegadget.hndroid.KarmaWidget r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget;
        $r1 = <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])
    {
        com.gluegadget.hndroid.KarmaWidget r0;
        android.content.Context r1;
        android.appwidget.AppWidgetManager r2;
        int[] r3;
        boolean[][] $r4;
        boolean[] r5;
        android.content.ComponentName $r6;
        android.content.Intent $r7;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.appwidget.AppWidgetManager;
        r3 := @parameter2: int[];
        $r4 = <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();

     label0:
        r5 = $r4[1];
        r5[0] = 1;
        if r3 != null goto label1;

        $r6 = new android.content.ComponentName;
        specialinvoke $r6.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r1, class "com/gluegadget/hndroid/KarmaWidget");
        r3 = virtualinvoke r2.<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>($r6);
        r5[1] = 1;

     label1:
        staticinvoke <com.gluegadget.hndroid.KarmaWidget$UpdateService: void requestUpdate(int[])>(r3);
        $r7 = new android.content.Intent;
        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "com/gluegadget/hndroid/KarmaWidget$UpdateService");
        virtualinvoke r1.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r7);
        r5[2] = 1;
        return;
    }

    public void onDeleted(android.content.Context, int[])
    {
        com.gluegadget.hndroid.KarmaWidget r0;
        android.content.Context r1;
        int[] r2;
        boolean[][] $r3;
        boolean[] r4;
        int i0, i1, $i2;

        r0 := @this: com.gluegadget.hndroid.KarmaWidget;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: int[];
        $r3 = <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        i0 = lengthof r2;
        i1 = 0;
        r4[0] = 1;

     label1:
        r4[1] = 1;
        if i1 >= i0 goto label2;

        $i2 = r2[i1];
        staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void deleteUsername(android.content.Context,int)>(r1, $i2);
        i1 = i1 + 1;
        r4[2] = 1;
        goto label1;

     label2:
        r4[3] = 1;
        return;
    }

    static void updateAppWidget(android.content.Context, android.appwidget.AppWidgetManager, int)
    {
        android.content.Context r0;
        android.appwidget.AppWidgetManager r1;
        int i0, $i1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r15, $r20, $r26, $r27;
        android.widget.RemoteViews r5, $r14;
        java.net.URL r6, $r16;
        java.net.URLConnection r7;
        java.io.InputStream r8;
        org.htmlcleaner.HtmlCleaner r9, $r21;
        org.htmlcleaner.TagNode r10, r12;
        java.lang.Object[] r11;
        java.lang.CharSequence $r13;
        java.lang.StringBuilder $r17, $r18, $r19;
        java.lang.Object $r22, $r25;
        java.util.List $r23;
        java.util.Iterator $r24;
        java.net.MalformedURLException $r28, r29;
        java.io.IOException $r30, r31;
        org.htmlcleaner.XPatherException $r32, r33;

        r0 := @parameter0: android.content.Context;
        r1 := @parameter1: android.appwidget.AppWidgetManager;
        i0 := @parameter2: int;
        $r2 = <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r13 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: java.lang.CharSequence loadUsername(android.content.Context,int)>(r0, i0);
        r4 = (java.lang.String) $r13;
        $r14 = new android.widget.RemoteViews;
        $r15 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();
        specialinvoke $r14.<android.widget.RemoteViews: void <init>(java.lang.String,int)>($r15, 2130903042);
        r5 = $r14;

     label1:
        $r16 = new java.net.URL;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/user?id=");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<java.net.URL: void <init>(java.lang.String)>($r20);
        r6 = $r16;
        r7 = virtualinvoke r6.<java.net.URL: java.net.URLConnection openConnection()>();
        r8 = virtualinvoke r7.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        $r21 = new org.htmlcleaner.HtmlCleaner;
        specialinvoke $r21.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r9 = $r21;
        r10 = virtualinvoke r9.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream)>(r8);
        r11 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//form[@method=\'post\']/table/tbody/tr/td[2]");
        $i1 = lengthof r11;
        r3[0] = 1;
        if $i1 <= 3 goto label2;

        $r22 = r11[2];
        r12 = (org.htmlcleaner.TagNode) $r22;
        virtualinvoke r5.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(2131230726, r4);
        $r23 = virtualinvoke r12.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r24 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();
        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();
        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();
        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String trim()>();
        virtualinvoke r5.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(2131230727, $r27);
        r3[1] = 1;
        goto label3;

     label2:
        virtualinvoke r5.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(2131230726, "unknown");
        virtualinvoke r5.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(2131230727, "0");
        r3[2] = 1;

     label3:
        virtualinvoke r1.<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>(i0, r5);
        r3[3] = 1;

     label4:
        goto label8;

     label5:
        $r28 := @caughtexception;
        r29 = $r28;
        virtualinvoke r29.<java.net.MalformedURLException: void printStackTrace()>();
        r3[4] = 1;
        goto label8;

     label6:
        $r30 := @caughtexception;
        r31 = $r30;
        virtualinvoke r31.<java.io.IOException: void printStackTrace()>();
        r3[5] = 1;
        goto label8;

     label7:
        $r32 := @caughtexception;
        r33 = $r32;
        virtualinvoke r33.<org.htmlcleaner.XPatherException: void printStackTrace()>();
        r3[6] = 1;

     label8:
        virtualinvoke r1.<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>(i0, r5);
        r3[7] = 1;
        return;

        catch java.net.MalformedURLException from label1 to label4 with label5;
        catch java.io.IOException from label1 to label4 with label6;
        catch org.htmlcleaner.XPatherException from label1 to label4 with label7;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.gluegadget.hndroid.KarmaWidget: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[8];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/KarmaWidget", 1244696357931847779L);
        return $r0;
    }
}
class com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.KarmaWidgetConfigurationActivity)
    {
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1 r0;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1;
        r1 := @parameter0: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity;
        $r2 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity r4, $r8, $r11, $r12, $r14, $r16, $r17;
        java.lang.String r5;
        android.appwidget.AppWidgetManager r6;
        android.content.Intent r7, $r13;
        android.widget.EditText $r9;
        android.text.Editable $r10;
        int $i0, $i1, $i2;

        r0 := @this: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1;
        r1 := @parameter0: android.view.View;
        $r2 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        $r8 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        $r9 = $r8.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.widget.EditText mAppWidgetUsername>;
        $r10 = virtualinvoke $r9.<android.widget.EditText: android.text.Editable getText()>();
        r5 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();
        $r11 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        $i0 = $r11.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId>;
        staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void saveTitlePref(android.content.Context,int,java.lang.String)>(r4, $i0, r5);
        r6 = staticinvoke <android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>(r4);
        $r12 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        $i1 = $r12.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId>;
        staticinvoke <com.gluegadget.hndroid.KarmaWidget: void updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)>(r4, r6, $i1);
        $r13 = new android.content.Intent;
        specialinvoke $r13.<android.content.Intent: void <init>()>();
        r7 = $r13;
        $r14 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        $i2 = $r14.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId>;
        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("appWidgetId", $i2);
        $r16 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        virtualinvoke $r16.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void setResult(int,android.content.Intent)>(-1, r7);
        $r17 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity this$0>;
        virtualinvoke $r17.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void finish()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/KarmaWidgetConfigurationActivity$1", 4320153532272098211L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.KarmaWidgetConfigurationActivity extends android.app.Activity
{
    private static final java.lang.String PREFS_NAME;
    private static final java.lang.String PREF_PREFIX_KEY;
    int mAppWidgetId;
    android.widget.EditText mAppWidgetUsername;
    android.view.View$OnClickListener mOnClickListener;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1 $r3;

        r0 := @this: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity;
        $r1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId> = 0;
        $r3 = new com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1;
        specialinvoke $r3.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity$1: void <init>(com.gluegadget.hndroid.KarmaWidgetConfigurationActivity)>(r0);
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.view.View$OnClickListener mOnClickListener> = $r3;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.gluegadget.hndroid.KarmaWidgetConfigurationActivity r0;
        android.os.Bundle r1, r5;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4;
        android.view.View $r6, $r8;
        android.widget.EditText $r7;
        android.view.View$OnClickListener $r9;
        int $i0, $i1;

        r0 := @this: com.gluegadget.hndroid.KarmaWidgetConfigurationActivity;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void setResult(int)>(0);
        virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void setContentView(int)>(2130903043);
        $r6 = virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.view.View findViewById(int)>(2131230726);
        $r7 = (android.widget.EditText) $r6;
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.widget.EditText mAppWidgetUsername> = $r7;
        $r8 = virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.view.View findViewById(int)>(2131230728);
        $r9 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.view.View$OnClickListener mOnClickListener>;
        virtualinvoke $r8.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r9);
        r4 = virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: android.content.Intent getIntent()>();
        r5 = virtualinvoke r4.<android.content.Intent: android.os.Bundle getExtras()>();
        r3[0] = 1;
        if r5 == null goto label1;

        $i0 = virtualinvoke r5.<android.os.Bundle: int getInt(java.lang.String,int)>("appWidgetId", 0);
        r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId> = $i0;
        r3[1] = 1;

     label1:
        $i1 = r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: int mAppWidgetId>;
        r3[2] = 1;
        if $i1 != 0 goto label2;

        virtualinvoke r0.<com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: void finish()>();
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return;
    }

    static java.lang.CharSequence loadUsername(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r8;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        $r1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r3 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.gluegadget.hndroid.KarmaWidget", 0);
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prefix_");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r8, null);
        r2[0] = 1;
        if r4 == null goto label1;

        r2[1] = 1;
        return r4;

     label1:
        r2[2] = 1;
        return "pg";
    }

    static void saveTitlePref(android.content.Context, int, java.lang.String)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1, $r9;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences$Editor r4;
        android.content.SharedPreferences $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        $r2 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r5 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.gluegadget.hndroid.KarmaWidget", 0);
        r4 = interfaceinvoke $r5.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prefix_");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r9, r1);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        r3[0] = 1;
        return;
    }

    static void deleteUsername(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        $r1 = <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <com.gluegadget.hndroid.KarmaWidgetConfigurationActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/KarmaWidgetConfigurationActivity", 4357141234190595550L);
        return $r0;
    }
}
class com.gluegadget.hndroid.LoginDialog$1 extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.LoginDialog$1: boolean[][] $VRi()>();
        r1 = $r0[0];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1;

        $r0 = newmultiarray (boolean)[1][];
        <com.gluegadget.hndroid.LoginDialog$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/LoginDialog$1", 33323L);
        return $r0;
    }
}
public interface  com.gluegadget.hndroid.LoginDialog$ReadyListener extends java.lang.Object
{

    public abstract void ready(java.lang.String, java.lang.String);
}
class com.gluegadget.hndroid.LoginDialog$loginListener extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.gluegadget.hndroid.LoginDialog this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(com.gluegadget.hndroid.LoginDialog)
    {
        com.gluegadget.hndroid.LoginDialog$loginListener r0;
        com.gluegadget.hndroid.LoginDialog r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.LoginDialog$loginListener;
        r1 := @parameter0: com.gluegadget.hndroid.LoginDialog;
        $r2 = <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.gluegadget.hndroid.LoginDialog$loginListener r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.LoginDialog $r4, $r6, $r10, $r14;
        com.gluegadget.hndroid.LoginDialog$ReadyListener $r5;
        android.widget.EditText $r7, $r11;
        android.text.Editable $r8, $r12;
        java.lang.String $r9, $r13;

        r0 := @this: com.gluegadget.hndroid.LoginDialog$loginListener;
        r1 := @parameter0: android.view.View;
        $r2 = <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0>;
        $r5 = staticinvoke <com.gluegadget.hndroid.LoginDialog: com.gluegadget.hndroid.LoginDialog$ReadyListener access$100(com.gluegadget.hndroid.LoginDialog)>($r4);
        $r6 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.LoginDialog: android.widget.EditText username>;
        $r8 = virtualinvoke $r7.<android.widget.EditText: android.text.Editable getText()>();
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);
        $r10 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0>;
        $r11 = $r10.<com.gluegadget.hndroid.LoginDialog: android.widget.EditText password>;
        $r12 = virtualinvoke $r11.<android.widget.EditText: android.text.Editable getText()>();
        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);
        interfaceinvoke $r5.<com.gluegadget.hndroid.LoginDialog$ReadyListener: void ready(java.lang.String,java.lang.String)>($r9, $r13);
        $r14 = r0.<com.gluegadget.hndroid.LoginDialog$loginListener: com.gluegadget.hndroid.LoginDialog this$0>;
        virtualinvoke $r14.<com.gluegadget.hndroid.LoginDialog: void dismiss()>();
        r3[0] = 1;
        return;
    }

    void <init>(com.gluegadget.hndroid.LoginDialog, com.gluegadget.hndroid.LoginDialog$1)
    {
        com.gluegadget.hndroid.LoginDialog$loginListener r0;
        com.gluegadget.hndroid.LoginDialog r1;
        com.gluegadget.hndroid.LoginDialog$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.LoginDialog$loginListener;
        r1 := @parameter0: com.gluegadget.hndroid.LoginDialog;
        r2 := @parameter1: com.gluegadget.hndroid.LoginDialog$1;
        $r3 = <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        specialinvoke r0.<com.gluegadget.hndroid.LoginDialog$loginListener: void <init>(com.gluegadget.hndroid.LoginDialog)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <com.gluegadget.hndroid.LoginDialog$loginListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/LoginDialog$loginListener", -7355153245354491069L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.LoginDialog extends android.app.Dialog
{
    android.widget.Button loginButton;
    java.lang.String name;
    private com.gluegadget.hndroid.LoginDialog$ReadyListener readyListener;
    android.widget.EditText username;
    android.widget.EditText password;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, java.lang.String, com.gluegadget.hndroid.LoginDialog$ReadyListener)
    {
        com.gluegadget.hndroid.LoginDialog r0;
        android.content.Context r1;
        java.lang.String r2;
        com.gluegadget.hndroid.LoginDialog$ReadyListener r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: com.gluegadget.hndroid.LoginDialog;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: com.gluegadget.hndroid.LoginDialog$ReadyListener;
        $r4 = <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);
        r0.<com.gluegadget.hndroid.LoginDialog: com.gluegadget.hndroid.LoginDialog$ReadyListener readyListener> = r3;
        r0.<com.gluegadget.hndroid.LoginDialog: java.lang.String name> = r2;
        r5[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.gluegadget.hndroid.LoginDialog r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.View $r4, $r8, $r10;
        android.widget.Button $r5, $r6;
        com.gluegadget.hndroid.LoginDialog$loginListener $r7;
        android.widget.EditText $r9, $r11;

        r0 := @this: com.gluegadget.hndroid.LoginDialog;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Dialog: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: void setContentView(int)>(2130903044);
        virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: void setTitle(java.lang.CharSequence)>("Sign In");
        $r4 = virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: android.view.View findViewById(int)>(2131230730);
        $r5 = (android.widget.Button) $r4;
        r0.<com.gluegadget.hndroid.LoginDialog: android.widget.Button loginButton> = $r5;
        $r6 = r0.<com.gluegadget.hndroid.LoginDialog: android.widget.Button loginButton>;
        $r7 = new com.gluegadget.hndroid.LoginDialog$loginListener;
        specialinvoke $r7.<com.gluegadget.hndroid.LoginDialog$loginListener: void <init>(com.gluegadget.hndroid.LoginDialog,com.gluegadget.hndroid.LoginDialog$1)>(r0, null);
        virtualinvoke $r6.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r7);
        $r8 = virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: android.view.View findViewById(int)>(2131230726);
        $r9 = (android.widget.EditText) $r8;
        r0.<com.gluegadget.hndroid.LoginDialog: android.widget.EditText username> = $r9;
        $r10 = virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: android.view.View findViewById(int)>(2131230729);
        $r11 = (android.widget.EditText) $r10;
        r0.<com.gluegadget.hndroid.LoginDialog: android.widget.EditText password> = $r11;
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.gluegadget.hndroid.LoginDialog r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.Button $r4;

        r0 := @this: com.gluegadget.hndroid.LoginDialog;
        r1 := @parameter0: android.view.View;
        $r2 = <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = r0.<com.gluegadget.hndroid.LoginDialog: android.widget.Button loginButton>;
        r3[0] = 1;
        if r1 != $r4 goto label1;

        virtualinvoke r0.<com.gluegadget.hndroid.LoginDialog: void dismiss()>();
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    static com.gluegadget.hndroid.LoginDialog$ReadyListener access$100(com.gluegadget.hndroid.LoginDialog)
    {
        com.gluegadget.hndroid.LoginDialog r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.LoginDialog$ReadyListener $r3;

        r0 := @parameter0: com.gluegadget.hndroid.LoginDialog;
        $r1 = <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<com.gluegadget.hndroid.LoginDialog: com.gluegadget.hndroid.LoginDialog$ReadyListener readyListener>;
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.gluegadget.hndroid.LoginDialog: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/LoginDialog", 4624087253961954012L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$1 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$1: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Main$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Main $r3, $r4, $r6;
        android.app.ProgressDialog $r5;
        android.os.Handler $r7;

        r0 := @this: com.gluegadget.hndroid.Main$1;
        $r1 = <com.gluegadget.hndroid.Main$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Main$1: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <com.gluegadget.hndroid.Main: void access$000(com.gluegadget.hndroid.Main)>($r3);
        $r4 = r0.<com.gluegadget.hndroid.Main$1: com.gluegadget.hndroid.Main this$0>;
        $r5 = $r4.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r5.<android.app.ProgressDialog: void dismiss()>();
        $r6 = r0.<com.gluegadget.hndroid.Main$1: com.gluegadget.hndroid.Main this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        virtualinvoke $r7.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$1", 4320153515061585109L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$10 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Main$10 r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$10;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Main$10: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$10: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Main$10: com.gluegadget.hndroid.Main this$0> = r1;
        r0.<com.gluegadget.hndroid.Main$10: com.gluegadget.hndroid.News val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$10 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r7, $r10;
        android.content.Intent r5, $r6;
        com.gluegadget.hndroid.News $r8;
        java.lang.String $r9, $r11;
        android.net.Uri $r12;
        com.gluegadget.hndroid.Main $r13;

        r0 := @this: com.gluegadget.hndroid.Main$10;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$10: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$10: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r6 = new android.content.Intent;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.google.com/gwt/x?u=");
        $r8 = r0.<com.gluegadget.hndroid.Main$10: com.gluegadget.hndroid.News val$newsContexted>;
        $r9 = virtualinvoke $r8.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);
        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r12);
        r5 = $r6;
        $r13 = r0.<com.gluegadget.hndroid.Main$10: com.gluegadget.hndroid.Main this$0>;
        virtualinvoke $r13.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r5);
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$10: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$10: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$10", 4705431565367906892L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$11 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Main$11 r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$11;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Main$11: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$11: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.Main this$0> = r1;
        r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.News val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$11 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        com.gluegadget.hndroid.Main $r6, $r13;
        com.gluegadget.hndroid.News $r7, $r10;
        java.lang.String $r8, $r11;

        r0 := @this: com.gluegadget.hndroid.Main$11;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$11: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$11: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        $r6 = r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.Main this$0>;
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/gluegadget/hndroid/Comments");
        r4 = $r5;
        $r7 = r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.News val$newsContexted>;
        $r8 = virtualinvoke $r7.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r8);
        $r10 = r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.News val$newsContexted>;
        $r11 = virtualinvoke $r10.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r11);
        $r13 = r0.<com.gluegadget.hndroid.Main$11: com.gluegadget.hndroid.Main this$0>;
        virtualinvoke $r13.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r4);
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$11: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$11: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$11", 4705431566755851497L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$12 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Main$12 r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$12;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Main$12: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$12: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.Main this$0> = r1;
        r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.News val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$12 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        com.gluegadget.hndroid.Main $r6, $r17;
        com.gluegadget.hndroid.News $r7, $r11;
        java.lang.String $r8, $r12, $r15;
        java.lang.StringBuilder $r10, $r13, $r14;

        r0 := @this: com.gluegadget.hndroid.Main$12;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$12: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$12: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        $r6 = r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.Main this$0>;
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/gluegadget/hndroid/Submissions");
        r4 = $r5;
        $r7 = r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.News val$newsContexted>;
        $r8 = virtualinvoke $r7.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("user", $r8);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.News val$newsContexted>;
        $r12 = virtualinvoke $r11.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" submissions");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r15);
        $r17 = r0.<com.gluegadget.hndroid.Main$12: com.gluegadget.hndroid.Main this$0>;
        virtualinvoke $r17.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r4);
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$12: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$12: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$12", 4705431571752452075L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$13$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main$13 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main$13)
    {
        com.gluegadget.hndroid.Main$13$1 r0;
        com.gluegadget.hndroid.Main$13 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$13$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$13;
        $r2 = <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Main$13$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r15, $r19;
        org.apache.http.impl.client.DefaultHttpClient r5, $r11;
        org.apache.http.client.methods.HttpGet r6, $r12;
        org.apache.http.impl.client.BasicResponseHandler r7, $r20;
        org.apache.http.client.ClientProtocolException r8, $r22;
        com.gluegadget.hndroid.Main$13 $r9, $r13, $r25, $r28;
        com.gluegadget.hndroid.Main $r10, $r26, $r29;
        com.gluegadget.hndroid.News $r14;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.io.IOException $r23, r24;
        android.app.ProgressDialog $r27;
        android.os.Handler $r30;

        r0 := @this: com.gluegadget.hndroid.Main$13$1;
        $r1 = <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r9 = r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1>;
        $r10 = $r9.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        r3 = virtualinvoke $r10.<com.gluegadget.hndroid.Main: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r5 = $r11;
        $r12 = new org.apache.http.client.methods.HttpGet;
        $r13 = r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1>;
        $r14 = $r13.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.News val$newsContexted>;
        $r15 = virtualinvoke $r14.<com.gluegadget.hndroid.News: java.lang.String getUpVoteUrl()>();
        specialinvoke $r12.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r15);
        r6 = $r12;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r19);
        $r20 = new org.apache.http.impl.client.BasicResponseHandler;
        specialinvoke $r20.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r7 = $r20;

     label1:
        virtualinvoke r5.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r6, r7);
        r2[0] = 1;

     label2:
        goto label5;

     label3:
        $r22 := @caughtexception;
        r8 = $r22;
        virtualinvoke r8.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        r2[1] = 1;
        goto label5;

     label4:
        $r23 := @caughtexception;
        r24 = $r23;
        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();
        r2[2] = 1;

     label5:
        $r25 = r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1>;
        $r26 = $r25.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        $r27 = $r26.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r27.<android.app.ProgressDialog: void dismiss()>();
        $r28 = r0.<com.gluegadget.hndroid.Main$13$1: com.gluegadget.hndroid.Main$13 this$1>;
        $r29 = $r28.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        $r30 = $r29.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        virtualinvoke $r30.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[3] = 1;
        return;

        catch org.apache.http.client.ClientProtocolException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$13$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$13$1", -4124872408349886090L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$13 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Main$13 r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$13;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Main$13: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$13: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0> = r1;
        r0.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.News val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$13 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Main $r4, $r5;
        android.app.ProgressDialog $r6;
        java.lang.Thread $r7;
        com.gluegadget.hndroid.Main$13$1 $r8;

        r0 := @this: com.gluegadget.hndroid.Main$13;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$13: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$13: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        $r5 = r0.<com.gluegadget.hndroid.Main$13: com.gluegadget.hndroid.Main this$0>;
        $r6 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r5, "", "Voting. Please wait...", 1);
        $r4.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r6;
        $r7 = new java.lang.Thread;
        $r8 = new com.gluegadget.hndroid.Main$13$1;
        specialinvoke $r8.<com.gluegadget.hndroid.Main$13$1: void <init>(com.gluegadget.hndroid.Main$13)>(r0);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);
        virtualinvoke $r7.<java.lang.Thread: void start()>();
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$13: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$13: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$13", 4705431562869606603L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$2$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main$2 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main$2)
    {
        com.gluegadget.hndroid.Main$2$1 r0;
        com.gluegadget.hndroid.Main$2 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$2$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$2;
        $r2 = <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$2$1: com.gluegadget.hndroid.Main$2 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Main$2$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Main$2 $r3, $r5, $r8;
        com.gluegadget.hndroid.Main $r4, $r6, $r9;
        android.app.ProgressDialog $r7;
        android.os.Handler $r10;

        r0 := @this: com.gluegadget.hndroid.Main$2$1;
        $r1 = <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Main$2$1: com.gluegadget.hndroid.Main$2 this$1>;
        $r4 = $r3.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <com.gluegadget.hndroid.Main: void access$000(com.gluegadget.hndroid.Main)>($r4);
        $r5 = r0.<com.gluegadget.hndroid.Main$2$1: com.gluegadget.hndroid.Main$2 this$1>;
        $r6 = $r5.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r7.<android.app.ProgressDialog: void dismiss()>();
        $r8 = r0.<com.gluegadget.hndroid.Main$2$1: com.gluegadget.hndroid.Main$2 this$1>;
        $r9 = $r8.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        $r10 = $r9.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        virtualinvoke $r10.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$2$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$2$1", 4320153517559885398L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$2 extends android.os.Handler
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$2 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$2;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.gluegadget.hndroid.Main$2 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        com.gluegadget.hndroid.Main $r4, $r6, $r8, $r10, $r12, $r13;
        com.gluegadget.hndroid.NewsAdapter $r5;
        android.widget.ListView $r7;
        android.widget.Toast $r9, $r11;
        android.app.ProgressDialog $r14;
        java.lang.Thread $r15;
        com.gluegadget.hndroid.Main$2$1 $r16;

        r0 := @this: com.gluegadget.hndroid.Main$2;
        r1 := @parameter0: android.os.Message;
        $r2 = <com.gluegadget.hndroid.Main$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $i0 = r1.<android.os.Message: int what>;
        r3[0] = 1;
        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r4 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        $r5 = $r4.<com.gluegadget.hndroid.Main: com.gluegadget.hndroid.NewsAdapter aa>;
        virtualinvoke $r5.<com.gluegadget.hndroid.NewsAdapter: void notifyDataSetChanged()>();
        $r6 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        virtualinvoke $r7.<android.widget.ListView: void setSelection(int)>(0);
        r3[1] = 1;
        goto label4;

     label2:
        $r8 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, "Login failed :(", 1);
        virtualinvoke $r9.<android.widget.Toast: void show()>();
        r3[2] = 1;
        goto label4;

     label3:
        $r10 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        $r11 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r10, "Successful login :)", 1);
        virtualinvoke $r11.<android.widget.Toast: void show()>();
        $r12 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        $r13 = r0.<com.gluegadget.hndroid.Main$2: com.gluegadget.hndroid.Main this$0>;
        $r14 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r13, "", "Reloading. Please wait...", 1);
        $r12.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r14;
        $r15 = new java.lang.Thread;
        $r16 = new com.gluegadget.hndroid.Main$2$1;
        specialinvoke $r16.<com.gluegadget.hndroid.Main$2$1: void <init>(com.gluegadget.hndroid.Main$2)>(r0);
        specialinvoke $r15.<java.lang.Thread: void <init>(java.lang.Runnable)>($r16);
        virtualinvoke $r15.<java.lang.Thread: void start()>();
        r3[3] = 1;
        goto label4;

     label4:
        r3[4] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$2", -5600922579908256874L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$3$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.News val$item;
    final com.gluegadget.hndroid.Main$3 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main$3, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Main$3$1 r0;
        com.gluegadget.hndroid.Main$3 r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$3$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$3;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.Main$3 this$1> = r1;
        r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.News val$item> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Main$3$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Main$3 $r3, $r7, $r10;
        com.gluegadget.hndroid.Main $r4, $r8, $r11;
        com.gluegadget.hndroid.News $r5;
        java.lang.String $r6;
        android.app.ProgressDialog $r9;
        android.os.Handler $r12;

        r0 := @this: com.gluegadget.hndroid.Main$3$1;
        $r1 = <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.Main$3 this$1>;
        $r4 = $r3.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        $r5 = r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.News val$item>;
        $r6 = virtualinvoke $r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <com.gluegadget.hndroid.Main: void access$100(com.gluegadget.hndroid.Main,java.lang.String)>($r4, $r6);
        $r7 = r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.Main$3 this$1>;
        $r8 = $r7.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        $r9 = $r8.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r9.<android.app.ProgressDialog: void dismiss()>();
        $r10 = r0.<com.gluegadget.hndroid.Main$3$1: com.gluegadget.hndroid.Main$3 this$1>;
        $r11 = $r10.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        $r12 = $r11.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        virtualinvoke $r12.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$3$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$3$1", 4705431564812729050L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$3 extends java.lang.Object implements android.widget.AdapterView$OnItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$3 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$3;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        com.gluegadget.hndroid.Main$3 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0, $i2, $i3;
        long l1;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.News r5;
        android.content.SharedPreferences r6;
        java.lang.String r7, $r15, $r21, $r23, $r29, $r31;
        android.content.Intent r8, $r14, $r18, r20, $r26, r33;
        android.widget.Adapter $r9, $r11;
        java.lang.Object $r10;
        com.gluegadget.hndroid.Main $r12, $r17, $r19, $r25, $r34, $r35, $r36;
        android.content.Context $r13;
        boolean $z0, $z1, $z2;
        android.net.Uri $r16, $r32;
        java.lang.StringBuilder $r27, $r28, $r30;
        android.app.ProgressDialog $r37;
        java.lang.Thread $r38;
        com.gluegadget.hndroid.Main$3$1 $r39;

        r0 := @this: com.gluegadget.hndroid.Main$3;
        r1 := @parameter0: android.widget.AdapterView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        $r3 = <com.gluegadget.hndroid.Main$3: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$3: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r9 = virtualinvoke r1.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();
        $r10 = interfaceinvoke $r9.<android.widget.Adapter: java.lang.Object getItem(int)>(i0);
        r5 = (com.gluegadget.hndroid.News) $r10;
        $r11 = virtualinvoke r1.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();
        $i2 = interfaceinvoke $r11.<android.widget.Adapter: int getCount()>();
        $i3 = $i2 - 1;
        r4[0] = 1;
        if i0 >= $i3 goto label4;

        $r12 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        $r13 = virtualinvoke $r12.<com.gluegadget.hndroid.Main: android.content.Context getBaseContext()>();
        r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r13);
        r7 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("PREF_DEFAULT_ACTION", "view-comments");
        $z0 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("open-in-browser");
        r4[1] = 1;
        if $z0 == 0 goto label1;

        $r14 = new android.content.Intent;
        $r15 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        $r16 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r15);
        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r16);
        r8 = $r14;
        $r17 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        virtualinvoke $r17.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r8);
        r4[2] = 1;
        goto label3;

     label1:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("view-comments");
        r4[3] = 1;
        if $z1 == 0 goto label2;

        $r18 = new android.content.Intent;
        $r19 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        specialinvoke $r18.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r19, class "com/gluegadget/hndroid/Comments");
        r20 = $r18;
        $r21 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        virtualinvoke r20.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r21);
        $r23 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        virtualinvoke r20.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r23);
        $r25 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        virtualinvoke $r25.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r20);
        r4[4] = 1;
        goto label3;

     label2:
        $z2 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mobile-adapted-view");
        r4[5] = 1;
        if $z2 == 0 goto label3;

        $r26 = new android.content.Intent;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.google.com/gwt/x?u=");
        $r29 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        $r32 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r31);
        specialinvoke $r26.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r32);
        r33 = $r26;
        $r34 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        virtualinvoke $r34.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r33);
        r4[6] = 1;

     label3:
        r4[7] = 1;
        goto label5;

     label4:
        $r35 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        $r36 = r0.<com.gluegadget.hndroid.Main$3: com.gluegadget.hndroid.Main this$0>;
        $r37 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r36, "", "Loading. Please wait...", 1);
        $r35.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r37;
        $r38 = new java.lang.Thread;
        $r39 = new com.gluegadget.hndroid.Main$3$1;
        specialinvoke $r39.<com.gluegadget.hndroid.Main$3$1: void <init>(com.gluegadget.hndroid.Main$3,com.gluegadget.hndroid.News)>(r0, r5);
        specialinvoke $r38.<java.lang.Thread: void <init>(java.lang.Runnable)>($r39);
        virtualinvoke $r38.<java.lang.Thread: void start()>();
        r4[8] = 1;

     label5:
        r4[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$3: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$3", 9143052549070454372L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$4$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main$4 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main$4)
    {
        com.gluegadget.hndroid.Main$4$1 r0;
        com.gluegadget.hndroid.Main$4 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$4$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$4;
        $r2 = <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$4$1: com.gluegadget.hndroid.Main$4 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Main$4$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Main$4 $r3, $r5, $r8;
        com.gluegadget.hndroid.Main $r4, $r6, $r9;
        android.app.ProgressDialog $r7;
        android.os.Handler $r10;

        r0 := @this: com.gluegadget.hndroid.Main$4$1;
        $r1 = <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Main$4$1: com.gluegadget.hndroid.Main$4 this$1>;
        $r4 = $r3.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <com.gluegadget.hndroid.Main: void access$000(com.gluegadget.hndroid.Main)>($r4);
        $r5 = r0.<com.gluegadget.hndroid.Main$4$1: com.gluegadget.hndroid.Main$4 this$1>;
        $r6 = $r5.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r7.<android.app.ProgressDialog: void dismiss()>();
        $r8 = r0.<com.gluegadget.hndroid.Main$4$1: com.gluegadget.hndroid.Main$4 this$1>;
        $r9 = $r8.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        $r10 = $r9.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        virtualinvoke $r10.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$4$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$4$1", 4320153517559885398L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$4 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$4 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$4;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$4 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r10;
        com.gluegadget.hndroid.Main $r5, $r6;
        android.app.ProgressDialog $r7;
        java.lang.Thread $r8;
        com.gluegadget.hndroid.Main$4$1 $r9;

        r0 := @this: com.gluegadget.hndroid.Main$4;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];

     label1:
        $r5 = r0.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        $r6 = r0.<com.gluegadget.hndroid.Main$4: com.gluegadget.hndroid.Main this$0>;
        $r7 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, "", "Reloading. Please wait...", 1);
        $r5.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r7;
        $r8 = new java.lang.Thread;
        $r9 = new com.gluegadget.hndroid.Main$4$1;
        specialinvoke $r9.<com.gluegadget.hndroid.Main$4$1: void <init>(com.gluegadget.hndroid.Main$4)>(r0);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9);
        virtualinvoke $r8.<java.lang.Thread: void start()>();
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r4 = $r10;
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r3[1] = 1;

     label4:
        r3[2] = 1;
        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$4: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$4", -718148683936897661L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$5$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Main$5 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main$5)
    {
        com.gluegadget.hndroid.Main$5$1 r0;
        com.gluegadget.hndroid.Main$5 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$5$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$5;
        $r2 = <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Main$5$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor r4;
        com.gluegadget.hndroid.Main$5 $r5, $r8, $r10, $r13;
        com.gluegadget.hndroid.Main $r6, $r9, $r11, $r14;
        android.app.ProgressDialog $r12;
        android.os.Handler $r15;

        r0 := @this: com.gluegadget.hndroid.Main$5$1;
        $r1 = <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r5 = r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1>;
        $r6 = $r5.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        r3 = virtualinvoke $r6.<com.gluegadget.hndroid.Main: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("cookie");
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r8 = r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1>;
        $r9 = $r8.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        staticinvoke <com.gluegadget.hndroid.Main: void access$000(com.gluegadget.hndroid.Main)>($r9);
        $r10 = r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1>;
        $r11 = $r10.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        $r12 = $r11.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r12.<android.app.ProgressDialog: void dismiss()>();
        $r13 = r0.<com.gluegadget.hndroid.Main$5$1: com.gluegadget.hndroid.Main$5 this$1>;
        $r14 = $r13.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        $r15 = $r14.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        virtualinvoke $r15.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$5$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$5$1", 4320153527830675475L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$5 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$5 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$5;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$5: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$5: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$5 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r10;
        com.gluegadget.hndroid.Main $r5, $r6;
        android.app.ProgressDialog $r7;
        java.lang.Thread $r8;
        com.gluegadget.hndroid.Main$5$1 $r9;

        r0 := @this: com.gluegadget.hndroid.Main$5;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$5: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$5: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];

     label1:
        $r5 = r0.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        $r6 = r0.<com.gluegadget.hndroid.Main$5: com.gluegadget.hndroid.Main this$0>;
        $r7 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, "", "Reloading. Please wait...", 1);
        $r5.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r7;
        $r8 = new java.lang.Thread;
        $r9 = new com.gluegadget.hndroid.Main$5$1;
        specialinvoke $r9.<com.gluegadget.hndroid.Main$5$1: void <init>(com.gluegadget.hndroid.Main$5)>(r0);
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>($r9);
        virtualinvoke $r8.<java.lang.Thread: void start()>();
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r4 = $r10;
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r3[1] = 1;

     label4:
        r3[2] = 1;
        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$5: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$5", -718148683936897661L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$6 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$6 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$6;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$6: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$6: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$6: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$6 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Main$OnLoginListener $r4;
        com.gluegadget.hndroid.LoginDialog r5, $r6;
        com.gluegadget.hndroid.Main $r7, $r8;

        r0 := @this: com.gluegadget.hndroid.Main$6;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$6: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$6: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r6 = new com.gluegadget.hndroid.LoginDialog;
        $r7 = r0.<com.gluegadget.hndroid.Main$6: com.gluegadget.hndroid.Main this$0>;
        $r4 = new com.gluegadget.hndroid.Main$OnLoginListener;
        $r8 = r0.<com.gluegadget.hndroid.Main$6: com.gluegadget.hndroid.Main this$0>;
        specialinvoke $r4.<com.gluegadget.hndroid.Main$OnLoginListener: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.Main$1)>($r8, null);
        specialinvoke $r6.<com.gluegadget.hndroid.LoginDialog: void <init>(android.content.Context,java.lang.String,com.gluegadget.hndroid.LoginDialog$ReadyListener)>($r7, "", $r4);
        r5 = $r6;
        virtualinvoke r5.<com.gluegadget.hndroid.LoginDialog: void show()>();
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$6: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$6", 4320153515616762951L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$7 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$7 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$7;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$7: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$7: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$7: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$7 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        com.gluegadget.hndroid.Main $r6, $r7;

        r0 := @this: com.gluegadget.hndroid.Main$7;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$7: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$7: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        $r6 = r0.<com.gluegadget.hndroid.Main$7: com.gluegadget.hndroid.Main this$0>;
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/gluegadget/hndroid/Preferences");
        r4 = $r5;
        $r7 = r0.<com.gluegadget.hndroid.Main$7: com.gluegadget.hndroid.Main this$0>;
        virtualinvoke $r7.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r4);
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$7: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$7: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$7", 4320153513673640504L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$8 extends java.lang.Object implements java.lang.Runnable
{
    final android.view.MenuItem val$item;
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main, android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$8 r0;
        com.gluegadget.hndroid.Main r1;
        android.view.MenuItem r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$8;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: android.view.MenuItem;
        $r3 = <com.gluegadget.hndroid.Main$8: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$8: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0> = r1;
        r0.<com.gluegadget.hndroid.Main$8: android.view.MenuItem val$item> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Main$8 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r9, $r11;
        com.gluegadget.hndroid.Main $r4, $r5, $r12, $r14;
        java.lang.StringBuilder $r6, $r7, $r10;
        android.view.MenuItem $r8;
        android.app.ProgressDialog $r13;
        android.os.Handler $r15;

        r0 := @this: com.gluegadget.hndroid.Main$8;
        $r1 = <com.gluegadget.hndroid.Main$8: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main$8: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r4 = r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0>;
        r3 = virtualinvoke $r4.<com.gluegadget.hndroid.Main: java.lang.String getString(int)>(2131099649);
        $r5 = r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r8 = r0.<com.gluegadget.hndroid.Main$8: android.view.MenuItem val$item>;
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <com.gluegadget.hndroid.Main: void access$100(com.gluegadget.hndroid.Main,java.lang.String)>($r5, $r11);
        $r12 = r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0>;
        $r13 = $r12.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r13.<android.app.ProgressDialog: void dismiss()>();
        $r14 = r0.<com.gluegadget.hndroid.Main$8: com.gluegadget.hndroid.Main this$0>;
        $r15 = $r14.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        virtualinvoke $r15.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$8: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$8: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$8", 4705431569809329628L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$9 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$9 r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$9;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$9: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$9: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$9: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main$9 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        java.lang.CharSequence $r6;
        java.lang.String $r7;
        android.net.Uri $r8;
        com.gluegadget.hndroid.Main $r9;

        r0 := @this: com.gluegadget.hndroid.Main$9;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main$9: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$9: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        $r6 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getTitle()>();
        $r7 = (java.lang.String) $r6;
        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r7);
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r8);
        r4 = $r5;
        $r9 = r0.<com.gluegadget.hndroid.Main$9: com.gluegadget.hndroid.Main this$0>;
        virtualinvoke $r9.<com.gluegadget.hndroid.Main: void startActivity(android.content.Intent)>(r4);
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$9: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$9: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$9", 4320153515616762951L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$OnLoginListener$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$username;
    final java.lang.String val$password;
    final com.gluegadget.hndroid.Main$OnLoginListener this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Main$OnLoginListener, java.lang.String, java.lang.String)
    {
        com.gluegadget.hndroid.Main$OnLoginListener$1 r0;
        com.gluegadget.hndroid.Main$OnLoginListener r1;
        java.lang.String r2, r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener$1;
        r1 := @parameter0: com.gluegadget.hndroid.Main$OnLoginListener;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1> = r1;
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: java.lang.String val$username> = r2;
        r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: java.lang.String val$password> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r5[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Main$OnLoginListener$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Integer r3;
        org.apache.http.impl.client.DefaultHttpClient r4, $r19;
        java.lang.StringBuilder $r5, $r21, $r25;
        org.apache.http.client.methods.HttpGet r6, $r20;
        org.htmlcleaner.HtmlCleaner r7, $r27;
        org.apache.http.HttpResponse r8, r40;
        org.apache.http.HttpEntity r9, r41;
        org.htmlcleaner.TagNode r10, r12;
        java.lang.Object[] r11;
        java.lang.String r13, $r24, $r26, $r30, $r31, $r35, $r37, $r47;
        org.apache.http.client.methods.HttpPost r14, $r32;
        java.util.ArrayList r15, $r33;
        java.util.List r16;
        android.content.SharedPreferences r17;
        android.content.SharedPreferences$Editor r18;
        com.gluegadget.hndroid.Main$OnLoginListener $r22, $r43, $r50, $r53, $r58, $r61;
        com.gluegadget.hndroid.Main $r23, $r44, $r51, $r54, $r59, $r62;
        java.io.InputStream $r28;
        java.lang.Object $r29, $r45;
        org.apache.http.message.BasicNameValuePair $r34, $r36, $r38;
        org.apache.http.client.entity.UrlEncodedFormEntity $r39;
        org.apache.http.client.CookieStore $r42;
        boolean $z3;
        org.apache.http.cookie.Cookie $r46;
        org.apache.http.conn.ClientConnectionManager $r49;
        android.app.ProgressDialog $r52, $r60;
        android.os.Handler $r55, $r63;
        int $i0, $i1;
        java.lang.Exception $r56, r57;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener$1;
        $r1 = <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label1:
        $r19 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r19.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r4 = $r19;
        $r20 = new org.apache.http.client.methods.HttpGet;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com");
        $r22 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        $r23 = $r22.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        $r24 = $r23.<com.gluegadget.hndroid.Main: java.lang.String loginUrl>;
        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r20.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r26);
        r6 = $r20;
        $r27 = new org.htmlcleaner.HtmlCleaner;
        specialinvoke $r27.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r7 = $r27;
        r8 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r6);
        r9 = interfaceinvoke r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();
        $r28 = interfaceinvoke r9.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();
        r10 = virtualinvoke r7.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream)>($r28);
        r11 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//form[@method=\'post\']/input");
        $r29 = r11[0];
        r12 = (org.htmlcleaner.TagNode) $r29;
        $r30 = virtualinvoke r12.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("value");
        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String toString()>();
        r13 = virtualinvoke $r31.<java.lang.String: java.lang.String trim()>();
        $r32 = new org.apache.http.client.methods.HttpPost;
        specialinvoke $r32.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://news.ycombinator.com/y");
        r14 = $r32;
        $r33 = new java.util.ArrayList;
        specialinvoke $r33.<java.util.ArrayList: void <init>()>();
        r15 = $r33;
        $r34 = new org.apache.http.message.BasicNameValuePair;
        $r35 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: java.lang.String val$username>;
        specialinvoke $r34.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("u", $r35);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r34);
        $r36 = new org.apache.http.message.BasicNameValuePair;
        $r37 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: java.lang.String val$password>;
        specialinvoke $r36.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("p", $r37);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r36);
        $r38 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r38.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("fnid", r13);
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r38);
        $r39 = new org.apache.http.client.entity.UrlEncodedFormEntity;
        specialinvoke $r39.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r15, "UTF-8");
        virtualinvoke r14.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r39);
        r40 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r14);
        r41 = interfaceinvoke r40.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();
        r2[0] = 1;
        if r41 == null goto label2;

        interfaceinvoke r41.<org.apache.http.HttpEntity: void consumeContent()>();
        r2[1] = 1;

     label2:
        $r42 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>();
        r16 = interfaceinvoke $r42.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $z3 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();
        r2[2] = 1;
        if $z3 == 0 goto label3;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        r2[3] = 1;
        goto label4;

     label3:
        $r43 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        $r44 = $r43.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        r17 = virtualinvoke $r44.<com.gluegadget.hndroid.Main: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r18 = interfaceinvoke r17.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $r45 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(0);
        $r46 = (org.apache.http.cookie.Cookie) $r45;
        $r47 = interfaceinvoke $r46.<org.apache.http.cookie.Cookie: java.lang.String getValue()>();
        interfaceinvoke r18.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("cookie", $r47);
        interfaceinvoke r18.<android.content.SharedPreferences$Editor: boolean commit()>();
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        r2[4] = 1;

     label4:
        $r49 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();
        interfaceinvoke $r49.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();
        $r50 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        $r51 = $r50.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        $r52 = $r51.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r52.<android.app.ProgressDialog: void dismiss()>();
        $r53 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        $r54 = $r53.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        $r55 = $r54.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        virtualinvoke $r55.<android.os.Handler: boolean sendEmptyMessage(int)>($i0);
        r2[5] = 1;

     label5:
        goto label7;

     label6:
        $r56 := @caughtexception;
        r57 = $r56;
        $r58 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        $r59 = $r58.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        $r60 = $r59.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog>;
        virtualinvoke $r60.<android.app.ProgressDialog: void dismiss()>();
        $r61 = r0.<com.gluegadget.hndroid.Main$OnLoginListener$1: com.gluegadget.hndroid.Main$OnLoginListener this$1>;
        $r62 = $r61.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        $r63 = $r62.<com.gluegadget.hndroid.Main: android.os.Handler handler>;
        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        virtualinvoke $r63.<android.os.Handler: boolean sendEmptyMessage(int)>($i1);
        virtualinvoke r57.<java.lang.Exception: void printStackTrace()>();
        r2[6] = 1;

     label7:
        r2[7] = 1;
        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Main$OnLoginListener$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$OnLoginListener$1", 7082022784488247232L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Main$OnLoginListener extends java.lang.Object implements com.gluegadget.hndroid.LoginDialog$ReadyListener
{
    final com.gluegadget.hndroid.Main this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main$OnLoginListener r0;
        com.gluegadget.hndroid.Main r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        $r2 = <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void ready(java.lang.String, java.lang.String)
    {
        com.gluegadget.hndroid.Main$OnLoginListener r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Exception r5, $r11;
        com.gluegadget.hndroid.Main $r6, $r7;
        android.app.ProgressDialog $r8;
        java.lang.Thread $r9;
        com.gluegadget.hndroid.Main$OnLoginListener$1 $r10;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];

     label1:
        $r6 = r0.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        $r7 = r0.<com.gluegadget.hndroid.Main$OnLoginListener: com.gluegadget.hndroid.Main this$0>;
        $r8 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r7, "", "Trying to login. Please wait...", 1);
        $r6.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r8;
        $r9 = new java.lang.Thread;
        $r10 = new com.gluegadget.hndroid.Main$OnLoginListener$1;
        specialinvoke $r10.<com.gluegadget.hndroid.Main$OnLoginListener$1: void <init>(com.gluegadget.hndroid.Main$OnLoginListener,java.lang.String,java.lang.String)>(r0, r1, r2);
        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        r4[0] = 1;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;
        r5 = $r11;
        virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
        r4[1] = 1;

     label4:
        r4[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void <init>(com.gluegadget.hndroid.Main, com.gluegadget.hndroid.Main$1)
    {
        com.gluegadget.hndroid.Main$OnLoginListener r0;
        com.gluegadget.hndroid.Main r1;
        com.gluegadget.hndroid.Main$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Main$OnLoginListener;
        r1 := @parameter0: com.gluegadget.hndroid.Main;
        r2 := @parameter1: com.gluegadget.hndroid.Main$1;
        $r3 = <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        specialinvoke r0.<com.gluegadget.hndroid.Main$OnLoginListener: void <init>(com.gluegadget.hndroid.Main)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <com.gluegadget.hndroid.Main$OnLoginListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main$OnLoginListener", -7557084075324926850L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.Main extends android.app.Activity
{
    static final java.lang.String PREFS_NAME;
    private static final int MENU_UPDATE;
    private static final int MENU_LOGIN;
    private static final int MENU_LOGOUT;
    private static final int MENU_PREFERENCES;
    private static final int LIST_MENU_GROUP;
    private static final int LIST_NEWS_ID;
    private static final int LIST_BEST_ID;
    private static final int LIST_ACTIVE_ID;
    private static final int LIST_NOOB_ID;
    private static final int CONTEXT_USER_SUBMISSIONS;
    private static final int CONTEXT_COMMENTS;
    private static final int CONTEXT_USER_LINK;
    private static final int CONTEXT_USER_UPVOTE;
    private static final int CONTEXT_GOOGLE_MOBILE;
    private static final int NOTIFY_DATASET_CHANGED;
    private static final int LOGIN_FAILED;
    private static final int LOGIN_SUCCESSFULL;
    static int DEFAULT_ACTION_PREFERENCES;
    java.lang.String loginUrl;
    android.app.ProgressDialog dialog;
    android.widget.ListView newsListView;
    com.gluegadget.hndroid.NewsAdapter aa;
    java.util.ArrayList news;
    android.os.Handler handler;
    android.widget.AdapterView$OnItemClickListener clickListener;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.gluegadget.hndroid.Main r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList $r3;
        com.gluegadget.hndroid.Main$2 $r4;
        com.gluegadget.hndroid.Main$3 $r5;

        r0 := @this: com.gluegadget.hndroid.Main;
        $r1 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r0.<com.gluegadget.hndroid.Main: java.lang.String loginUrl> = "";
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r0.<com.gluegadget.hndroid.Main: java.util.ArrayList news> = $r3;
        $r4 = new com.gluegadget.hndroid.Main$2;
        specialinvoke $r4.<com.gluegadget.hndroid.Main$2: void <init>(com.gluegadget.hndroid.Main)>(r0);
        r0.<com.gluegadget.hndroid.Main: android.os.Handler handler> = $r4;
        $r5 = new com.gluegadget.hndroid.Main$3;
        specialinvoke $r5.<com.gluegadget.hndroid.Main$3: void <init>(com.gluegadget.hndroid.Main)>(r0);
        r0.<com.gluegadget.hndroid.Main: android.widget.AdapterView$OnItemClickListener clickListener> = $r5;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.gluegadget.hndroid.Main r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0;
        android.view.View $r4;
        android.widget.ListView $r5, $r6, $r9, $r11;
        com.gluegadget.hndroid.NewsAdapter $r7, $r10;
        java.util.ArrayList $r8;
        android.widget.AdapterView$OnItemClickListener $r12;
        android.app.ProgressDialog $r13;
        java.lang.Thread $r14;
        com.gluegadget.hndroid.Main$1 $r15;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<com.gluegadget.hndroid.Main: void setContentView(int)>(2130903045);
        $r4 = virtualinvoke r0.<com.gluegadget.hndroid.Main: android.view.View findViewById(int)>(2131230732);
        $r5 = (android.widget.ListView) $r4;
        r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView> = $r5;
        $r6 = r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        virtualinvoke r0.<com.gluegadget.hndroid.Main: void registerForContextMenu(android.view.View)>($r6);
        i0 = 2130903046;
        $r7 = new com.gluegadget.hndroid.NewsAdapter;
        $r8 = r0.<com.gluegadget.hndroid.Main: java.util.ArrayList news>;
        specialinvoke $r7.<com.gluegadget.hndroid.NewsAdapter: void <init>(android.content.Context,int,java.util.List)>(r0, i0, $r8);
        r0.<com.gluegadget.hndroid.Main: com.gluegadget.hndroid.NewsAdapter aa> = $r7;
        $r9 = r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        $r10 = r0.<com.gluegadget.hndroid.Main: com.gluegadget.hndroid.NewsAdapter aa>;
        virtualinvoke $r9.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r10);
        $r11 = r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        $r12 = r0.<com.gluegadget.hndroid.Main: android.widget.AdapterView$OnItemClickListener clickListener>;
        virtualinvoke $r11.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r12);
        $r13 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", "Loading. Please wait...", 1);
        r0.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r13;
        $r14 = new java.lang.Thread;
        $r15 = new com.gluegadget.hndroid.Main$1;
        specialinvoke $r15.<com.gluegadget.hndroid.Main$1: void <init>(com.gluegadget.hndroid.Main)>(r0);
        specialinvoke $r14.<java.lang.Thread: void <init>(java.lang.Runnable)>($r15);
        virtualinvoke $r14.<java.lang.Thread: void start()>();
        r3[0] = 1;
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.gluegadget.hndroid.Main r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.MenuItem r4, r6, r7, r8;
        android.view.SubMenu r5;
        com.gluegadget.hndroid.Main$4 $r10;
        com.gluegadget.hndroid.Main$5 $r18;
        com.gluegadget.hndroid.Main$6 $r21;
        com.gluegadget.hndroid.Main$7 $r24;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.view.Menu;
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);
        r4 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 1, 0, 2131099650);
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837510);
        $r10 = new com.gluegadget.hndroid.Main$4;
        specialinvoke $r10.<com.gluegadget.hndroid.Main$4: void <init>(com.gluegadget.hndroid.Main)>(r0);
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r10);
        r5 = interfaceinvoke r1.<android.view.Menu: android.view.SubMenu addSubMenu(int)>(2131099651);
        interfaceinvoke r5.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(10, 11, 0, "news");
        interfaceinvoke r5.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(10, 12, 1, "best");
        interfaceinvoke r5.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(10, 13, 2, "active");
        interfaceinvoke r5.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(10, 14, 3, "noobstories");
        interfaceinvoke r5.<android.view.SubMenu: android.view.SubMenu setIcon(int)>(2130837506);
        interfaceinvoke r5.<android.view.SubMenu: void setGroupCheckable(int,boolean,boolean)>(10, 1, 1);
        r6 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 3, 0, 2131099656);
        interfaceinvoke r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837508);
        $r18 = new com.gluegadget.hndroid.Main$5;
        specialinvoke $r18.<com.gluegadget.hndroid.Main$5: void <init>(com.gluegadget.hndroid.Main)>(r0);
        interfaceinvoke r6.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r18);
        r7 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 2, 0, 2131099655);
        interfaceinvoke r7.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837507);
        $r21 = new com.gluegadget.hndroid.Main$6;
        specialinvoke $r21.<com.gluegadget.hndroid.Main$6: void <init>(com.gluegadget.hndroid.Main)>(r0);
        interfaceinvoke r7.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r21);
        r8 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 4, 0, 2131099657);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837509);
        $r24 = new com.gluegadget.hndroid.Main$7;
        specialinvoke $r24.<com.gluegadget.hndroid.Main$7: void <init>(com.gluegadget.hndroid.Main)>(r0);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r24);
        r3[0] = 1;
        return 1;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        com.gluegadget.hndroid.Main r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;
        boolean $z0, $z1;
        android.view.MenuItem $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.view.Menu;
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = r0.<com.gluegadget.hndroid.Main: java.lang.String loginUrl>;
        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("submit");
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        interfaceinvoke $r5.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);
        $r7 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        interfaceinvoke $r7.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(0);
        $r9 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(3);
        interfaceinvoke $r9.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);
        $r11 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(3);
        interfaceinvoke $r11.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(1);
        r3[1] = 1;
        goto label2;

     label1:
        $r13 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);
        $r15 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2);
        interfaceinvoke $r15.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(1);
        $r17 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(3);
        interfaceinvoke $r17.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);
        $r19 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(3);
        interfaceinvoke $r19.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(0);
        r3[2] = 1;

     label2:
        $z1 = specialinvoke r0.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r1);
        r3[3] = 1;
        return $z1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Main r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Exception r4, $r8;
        int $i0;
        android.app.ProgressDialog $r5;
        java.lang.Thread $r6;
        com.gluegadget.hndroid.Main$8 $r7;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();
        r3[0] = 1;
        tableswitch($i0)
        {
            case 11: goto label1;
            case 12: goto label1;
            case 13: goto label1;
            case 14: goto label1;
            default: goto label4;
        };

     label1:
        $r5 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", "Reloading. Please wait...", 1);
        r0.<com.gluegadget.hndroid.Main: android.app.ProgressDialog dialog> = $r5;
        $r6 = new java.lang.Thread;
        $r7 = new com.gluegadget.hndroid.Main$8;
        specialinvoke $r7.<com.gluegadget.hndroid.Main$8: void <init>(com.gluegadget.hndroid.Main,android.view.MenuItem)>(r0, r1);
        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>($r7);
        virtualinvoke $r6.<java.lang.Thread: void start()>();
        r3[1] = 1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;
        r4 = $r8;
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r3[2] = 1;

     label4:
        r3[3] = 1;
        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        com.gluegadget.hndroid.Main r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;
        boolean[][] $r4;
        boolean[] r5;
        android.widget.AdapterView$AdapterContextMenuInfo r6;
        com.gluegadget.hndroid.News r7;
        android.view.MenuItem r8, r9, r10, r11, r30;
        int $i0, $i1;
        android.widget.ListView $r12;
        android.widget.ListAdapter $r13;
        java.lang.Object $r14;
        java.lang.String $r15, $r17, $r22, $r26, $r29, $r33, $r34;
        com.gluegadget.hndroid.Main$9 $r18;
        com.gluegadget.hndroid.Main$10 $r20;
        com.gluegadget.hndroid.Main$11 $r23;
        java.lang.StringBuilder $r25, $r27, $r28;
        com.gluegadget.hndroid.Main$12 $r31;
        boolean $z0;
        com.gluegadget.hndroid.Main$13 $r35;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: android.view.ContextMenu;
        r2 := @parameter1: android.view.View;
        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;
        $r4 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r5 = $r4[5];
        specialinvoke r0.<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(r1, r2, r3);
        r6 = (android.widget.AdapterView$AdapterContextMenuInfo) r3;
        $i0 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        r5[0] = 1;
        if $i0 >= 30 goto label2;

        $r12 = r0.<com.gluegadget.hndroid.Main: android.widget.ListView newsListView>;
        $r13 = virtualinvoke $r12.<android.widget.ListView: android.widget.ListAdapter getAdapter()>();
        $i1 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        $r14 = interfaceinvoke $r13.<android.widget.ListAdapter: java.lang.Object getItem(int)>($i1);
        r7 = (com.gluegadget.hndroid.News) $r14;
        $r15 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>($r15);
        $r17 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        r8 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 4, 0, $r17);
        $r18 = new com.gluegadget.hndroid.Main$9;
        specialinvoke $r18.<com.gluegadget.hndroid.Main$9: void <init>(com.gluegadget.hndroid.Main)>(r0);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r18);
        r9 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 6, 0, 2131099660);
        $r20 = new com.gluegadget.hndroid.Main$10;
        specialinvoke $r20.<com.gluegadget.hndroid.Main$10: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.News)>(r0, r7);
        interfaceinvoke r9.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r20);
        $r22 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        r5[1] = 1;
        if $r22 == "" goto label1;

        r10 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 3, 0, 2131099652);
        $r23 = new com.gluegadget.hndroid.Main$11;
        specialinvoke $r23.<com.gluegadget.hndroid.Main$11: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.News)>(r0, r7);
        interfaceinvoke r10.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r23);
        r5[2] = 1;

     label1:
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" submissions");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        r30 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 2, 0, $r29);
        $r31 = new com.gluegadget.hndroid.Main$12;
        specialinvoke $r31.<com.gluegadget.hndroid.Main$12: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.News)>(r0, r7);
        interfaceinvoke r30.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r31);
        $r33 = r0.<com.gluegadget.hndroid.Main: java.lang.String loginUrl>;
        $z0 = virtualinvoke $r33.<java.lang.String: boolean contains(java.lang.CharSequence)>("submit");
        r5[3] = 1;
        if $z0 == 0 goto label2;

        $r34 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getUpVoteUrl()>();
        r5[4] = 1;
        if $r34 == "" goto label2;

        r11 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 5, 0, 2131099659);
        $r35 = new com.gluegadget.hndroid.Main$13;
        specialinvoke $r35.<com.gluegadget.hndroid.Main$13: void <init>(com.gluegadget.hndroid.Main,com.gluegadget.hndroid.News)>(r0, r7);
        interfaceinvoke r11.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r35);
        r5[5] = 1;

     label2:
        r5[6] = 1;
        return;
    }

    private void refreshNews()
    {
        com.gluegadget.hndroid.Main r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3;

        r0 := @this: com.gluegadget.hndroid.Main;
        $r1 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r3 = virtualinvoke r0.<com.gluegadget.hndroid.Main: java.lang.String getString(int)>(2131099649);
        specialinvoke r0.<com.gluegadget.hndroid.Main: void refreshNews(java.lang.String)>(r3);
        r2[0] = 1;
        return;
    }

    private void refreshNews(java.lang.String)
    {
        com.gluegadget.hndroid.Main r0;
        java.lang.String r1, r5, r9, r17, r18, r19, r20, r21, r22, r24, r25, $r42, $r47, $r48, $r49, $r54, $r55, $r56, $r63, $r68, $r72, $r73, $r76, $r77, $r81, $r86;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        org.apache.http.impl.client.DefaultHttpClient r6, $r37;
        org.apache.http.client.methods.HttpGet r7, $r38;
        org.apache.http.impl.client.BasicResponseHandler r8, $r43;
        org.htmlcleaner.HtmlCleaner r10, $r45;
        org.htmlcleaner.TagNode r11, r16, r23, r26, r28, r30, r31, r33, r34, $r69, r70, $r74;
        java.lang.Object[] r12, r13, r14, r15, r27, r29, r32, r75;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Throwable r35, $r96;
        java.util.ArrayList $r36, $r89;
        java.lang.StringBuilder $r39, $r40, $r41;
        java.lang.Object $r44, $r46, $r50, $r53, $r57, $r58, $r59, $r62, $r64, $r67, $r71, $r80, $r82, $r85;
        java.util.List $r51, $r60, $r65, $r78, $r83;
        java.util.Iterator $r52, $r61, $r66, $r79, $r84;
        boolean $z0;
        com.gluegadget.hndroid.News $r87, r88;
        java.net.MalformedURLException $r90, r91;
        java.io.IOException $r92, r93;
        org.htmlcleaner.XPatherException $r94, r95;

        r0 := @this: com.gluegadget.hndroid.Main;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];

     label1:
        $r36 = r0.<com.gluegadget.hndroid.Main: java.util.ArrayList news>;
        virtualinvoke $r36.<java.util.ArrayList: void clear()>();
        r4 = virtualinvoke r0.<com.gluegadget.hndroid.Main: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r37 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r37.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r6 = $r37;
        $r38 = new org.apache.http.client.methods.HttpGet;
        specialinvoke $r38.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r1);
        r7 = $r38;
        r3[0] = 1;
        if r5 == "" goto label2;

        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r7.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r42);
        r3[1] = 1;

     label2:
        $r43 = new org.apache.http.impl.client.BasicResponseHandler;
        specialinvoke $r43.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r8 = $r43;
        $r44 = virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r7, r8);
        r9 = (java.lang.String) $r44;
        $r45 = new org.htmlcleaner.HtmlCleaner;
        specialinvoke $r45.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r10 = $r45;
        r11 = virtualinvoke r10.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r9);
        r12 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@class=\'title\']/a[1]");
        r13 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@class=\'subtext\']");
        r14 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'comhead\']");
        r15 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'pagetop\']/a");
        $r46 = r15[5];
        r16 = (org.htmlcleaner.TagNode) $r46;
        $r47 = virtualinvoke r16.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r48 = virtualinvoke $r47.<java.lang.String: java.lang.String toString()>();
        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String trim()>();
        r0.<com.gluegadget.hndroid.Main: java.lang.String loginUrl> = $r49;
        $i3 = lengthof r12;
        r3[2] = 1;
        if $i3 <= 0 goto label10;

        i0 = 0;
        i1 = lengthof r12;
        i2 = 0;
        r3[3] = 1;

     label3:
        r3[4] = 1;
        if i2 >= i1 goto label10;

        r17 = "";
        r18 = "";
        r19 = "";
        r20 = "";
        r21 = "";
        r22 = "";
        $r50 = r12[i2];
        r23 = (org.htmlcleaner.TagNode) $r50;
        $r51 = virtualinvoke r23.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r52 = interfaceinvoke $r51.<java.util.List: java.util.Iterator iterator()>();
        $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();
        $r54 = virtualinvoke $r53.<java.lang.Object: java.lang.String toString()>();
        r24 = virtualinvoke $r54.<java.lang.String: java.lang.String trim()>();
        $r55 = virtualinvoke r23.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r56 = virtualinvoke $r55.<java.lang.String: java.lang.String toString()>();
        r25 = virtualinvoke $r56.<java.lang.String: java.lang.String trim()>();
        $i4 = lengthof r13;
        r3[5] = 1;
        if i2 >= $i4 goto label8;

        $r57 = r13[i2];
        r26 = (org.htmlcleaner.TagNode) $r57;
        r27 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/span");
        $i5 = lengthof r27;
        r3[6] = 1;
        if $i5 != 0 goto label4;

        r3[7] = 1;
        goto label9;

     label4:
        $r58 = r27[0];
        r28 = (org.htmlcleaner.TagNode) $r58;
        r29 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/a");
        $r59 = r29[0];
        r30 = (org.htmlcleaner.TagNode) $r59;
        $r60 = virtualinvoke r30.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r61 = interfaceinvoke $r60.<java.util.List: java.util.Iterator iterator()>();
        $r62 = interfaceinvoke $r61.<java.util.Iterator: java.lang.Object next()>();
        $r63 = virtualinvoke $r62.<java.lang.Object: java.lang.String toString()>();
        r18 = virtualinvoke $r63.<java.lang.String: java.lang.String trim()>();
        $i6 = lengthof r29;
        r3[8] = 1;
        if $i6 != 2 goto label5;

        $r64 = r29[1];
        r31 = (org.htmlcleaner.TagNode) $r64;
        $r65 = virtualinvoke r31.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r66 = interfaceinvoke $r65.<java.util.List: java.util.Iterator iterator()>();
        $r67 = interfaceinvoke $r66.<java.util.Iterator: java.lang.Object next()>();
        $r68 = virtualinvoke $r67.<java.lang.Object: java.lang.String toString()>();
        r19 = virtualinvoke $r68.<java.lang.String: java.lang.String trim()>();
        r3[9] = 1;

     label5:
        $r69 = virtualinvoke r23.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r70 = virtualinvoke $r69.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r32 = virtualinvoke r70.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td/center/a[1]");
        $i7 = lengthof r32;
        r3[10] = 1;
        if $i7 <= 0 goto label6;

        $r71 = r32[0];
        r33 = (org.htmlcleaner.TagNode) $r71;
        $r72 = virtualinvoke r33.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r73 = virtualinvoke $r72.<java.lang.String: java.lang.String toString()>();
        r22 = virtualinvoke $r73.<java.lang.String: java.lang.String trim()>();
        r3[11] = 1;

     label6:
        $r74 = virtualinvoke r30.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r75 = virtualinvoke $r74.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/a");
        $i8 = lengthof r75;
        r3[12] = 1;
        if $i8 != 2 goto label7;

        $r76 = virtualinvoke r28.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("id");
        $r77 = virtualinvoke $r76.<java.lang.String: java.lang.String toString()>();
        r21 = virtualinvoke $r77.<java.lang.String: java.lang.String trim()>();
        r3[13] = 1;

     label7:
        $r78 = virtualinvoke r28.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r79 = interfaceinvoke $r78.<java.util.List: java.util.Iterator iterator()>();
        $r80 = interfaceinvoke $r79.<java.util.Iterator: java.lang.Object next()>();
        $r81 = virtualinvoke $r80.<java.lang.Object: java.lang.String toString()>();
        r17 = virtualinvoke $r81.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>("http");
        r3[14] = 1;
        if $z0 == 0 goto label8;

        $r82 = r14[i0];
        r34 = (org.htmlcleaner.TagNode) $r82;
        $r83 = virtualinvoke r34.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r84 = interfaceinvoke $r83.<java.util.List: java.util.Iterator iterator()>();
        $r85 = interfaceinvoke $r84.<java.util.Iterator: java.lang.Object next()>();
        $r86 = virtualinvoke $r85.<java.lang.Object: java.lang.String toString()>();
        r20 = virtualinvoke $r86.<java.lang.String: java.lang.String trim()>();
        i0 = i0 + 1;
        r3[15] = 1;

     label8:
        $r87 = new com.gluegadget.hndroid.News;
        specialinvoke $r87.<com.gluegadget.hndroid.News: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r24, r17, r19, r18, r20, r25, r21, r22);
        r88 = $r87;
        $r89 = r0.<com.gluegadget.hndroid.Main: java.util.ArrayList news>;
        virtualinvoke $r89.<java.util.ArrayList: boolean add(java.lang.Object)>(r88);
        r3[16] = 1;

     label9:
        i2 = i2 + 1;
        r3[17] = 1;
        goto label3;

     label10:
        r3[18] = 1;

     label11:
        goto label24;

     label12:
        $r90 := @caughtexception;

     label13:
        r91 = $r90;
        virtualinvoke r91.<java.net.MalformedURLException: void printStackTrace()>();
        r3[19] = 1;

     label14:
        goto label24;

     label15:
        $r92 := @caughtexception;

     label16:
        r93 = $r92;
        virtualinvoke r93.<java.io.IOException: void printStackTrace()>();
        r3[20] = 1;

     label17:
        goto label24;

     label18:
        $r94 := @caughtexception;

     label19:
        r95 = $r94;
        virtualinvoke r95.<org.htmlcleaner.XPatherException: void printStackTrace()>();
        r3[21] = 1;

     label20:
        goto label24;

     label21:
        $r96 := @caughtexception;

     label22:
        r35 = $r96;

     label23:
        r3[22] = 1;
        throw r35;

     label24:
        r3[23] = 1;
        return;

        catch java.net.MalformedURLException from label1 to label11 with label12;
        catch java.io.IOException from label1 to label11 with label15;
        catch org.htmlcleaner.XPatherException from label1 to label11 with label18;
        catch java.lang.Throwable from label1 to label11 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    static void access$000(com.gluegadget.hndroid.Main)
    {
        com.gluegadget.hndroid.Main r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.gluegadget.hndroid.Main;
        $r1 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        specialinvoke r0.<com.gluegadget.hndroid.Main: void refreshNews()>();
        r2[0] = 1;
        return;
    }

    static void access$100(com.gluegadget.hndroid.Main, java.lang.String)
    {
        com.gluegadget.hndroid.Main r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: com.gluegadget.hndroid.Main;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Main: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        specialinvoke r0.<com.gluegadget.hndroid.Main: void refreshNews(java.lang.String)>(r1);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Main: boolean[][] $VRi()>();
        r1 = $r0[10];
        <com.gluegadget.hndroid.Main: int DEFAULT_ACTION_PREFERENCES> = 0;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = newmultiarray (boolean)[11][];
        <com.gluegadget.hndroid.Main: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[7];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[24];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Main", -7043197830386564122L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.News extends java.lang.Object
{
    private java.lang.String title;
    private java.lang.String author;
    private java.lang.String score;
    private java.lang.String comment;
    private java.lang.String url;
    private java.lang.String domain;
    private java.lang.String commentsUrl;
    private java.lang.String upVoteUrl;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.gluegadget.hndroid.News r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, $r13, $r15, $r16, $r19, $r21;
        boolean[][] $r9;
        boolean[] r10;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r11, $r12, $r14, $r17, $r18, $r20;

        r0 := @this: com.gluegadget.hndroid.News;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        r6 := @parameter5: java.lang.String;
        r7 := @parameter6: java.lang.String;
        r8 := @parameter7: java.lang.String;
        $r9 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r9 != null goto label0;

        $r9 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r10 = $r9[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.gluegadget.hndroid.News: java.lang.String title> = r1;
        r0.<com.gluegadget.hndroid.News: java.lang.String score> = r2;
        r0.<com.gluegadget.hndroid.News: java.lang.String comment> = r3;
        r0.<com.gluegadget.hndroid.News: java.lang.String author> = r4;
        r0.<com.gluegadget.hndroid.News: java.lang.String url> = r6;
        $i0 = virtualinvoke r7.<java.lang.String: int length()>();
        r10[0] = 1;
        if $i0 <= 7 goto label1;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/item?id=");
        $r13 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(6);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.gluegadget.hndroid.News: java.lang.String commentsUrl> = $r15;
        r10[1] = 1;
        goto label2;

     label1:
        r0.<com.gluegadget.hndroid.News: java.lang.String commentsUrl> = r7;
        r10[2] = 1;

     label2:
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();
        r10[3] = 1;
        if $i1 <= 2 goto label3;

        $i2 = virtualinvoke r5.<java.lang.String: int length()>();
        $i3 = $i2 - 1;
        $r16 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(1, $i3);
        r0.<com.gluegadget.hndroid.News: java.lang.String domain> = $r16;
        r10[4] = 1;
        goto label4;

     label3:
        r0.<com.gluegadget.hndroid.News: java.lang.String domain> = r5;
        r10[5] = 1;

     label4:
        $i4 = virtualinvoke r8.<java.lang.String: int length()>();
        r10[6] = 1;
        if $i4 <= 1 goto label5;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/");
        $r19 = virtualinvoke r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&amp", "&");
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.gluegadget.hndroid.News: java.lang.String upVoteUrl> = $r21;
        r10[7] = 1;
        goto label6;

     label5:
        r0.<com.gluegadget.hndroid.News: java.lang.String upVoteUrl> = r8;
        r10[8] = 1;

     label6:
        r10[9] = 1;
        return;
    }

    public void <init>(java.lang.String)
    {
        com.gluegadget.hndroid.News r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.News;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<com.gluegadget.hndroid.News: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, "", "", "", "", "", "", "");
        r3[0] = 1;
        return;
    }

    public java.lang.String getCommentsUrl()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String commentsUrl>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getTitle()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String title>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getScore()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String score>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getComment()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r5, r6, $r7;
        boolean $z0;
        int $i0;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r3 = "";
        $r5 = r0.<com.gluegadget.hndroid.News: java.lang.String comment>;
        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("discuss");
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r6 = "0";
        r2[1] = 1;
        goto label3;

     label1:
        $r7 = r0.<com.gluegadget.hndroid.News: java.lang.String comment>;
        r4 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("comments?", "");
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        r2[2] = 1;
        if $i0 != 0 goto label2;

        r6 = "?";
        r2[3] = 1;
        goto label3;

     label2:
        r6 = r4;
        r2[4] = 1;

     label3:
        r2[5] = 1;
        return r6;
    }

    public java.lang.String getAuthor()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String author>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getUrl()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4, $r7, $r9, $r12, $r14, $r15;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r11, $r13;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("http");
        r2[0] = 1;
        if $z0 != 0 goto label2;

        $r4 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        r2[1] = 1;
        if $z1 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com");
        $r7 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[2] = 1;
        return $r9;

     label1:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/");
        $r12 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;
        return $r14;

     label2:
        $r15 = r0.<com.gluegadget.hndroid.News: java.lang.String url>;
        r2[4] = 1;
        return $r15;
    }

    public java.lang.String getUpVoteUrl()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String upVoteUrl>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getDomain()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String domain>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String toString()
    {
        com.gluegadget.hndroid.News r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4, $r6, $r9, $r11;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;

        r0 := @this: com.gluegadget.hndroid.News;
        $r1 = <com.gluegadget.hndroid.News: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<com.gluegadget.hndroid.News: java.lang.String author>;
        r2[0] = 1;
        if $r3 != "" goto label1;

        $r4 = r0.<com.gluegadget.hndroid.News: java.lang.String title>;
        r2[1] = 1;
        return $r4;

     label1:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = r0.<com.gluegadget.hndroid.News: java.lang.String title>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ");
        $r9 = r0.<com.gluegadget.hndroid.News: java.lang.String author>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[2] = 1;
        return $r11;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.News: boolean[][] $VRi()>();
        r1 = $r0[11];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <com.gluegadget.hndroid.News: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[10];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[6];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[5];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[3];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/News", -5893545371135291423L);
        return $r0;
    }
}
class com.gluegadget.hndroid.NewsAdapter$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.gluegadget.hndroid.NewsAdapter this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.NewsAdapter)
    {
        com.gluegadget.hndroid.NewsAdapter$1 r0;
        com.gluegadget.hndroid.NewsAdapter r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter$1;
        r1 := @parameter0: com.gluegadget.hndroid.NewsAdapter;
        $r2 = <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.NewsAdapter$1: com.gluegadget.hndroid.NewsAdapter this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.gluegadget.hndroid.NewsAdapter$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4, $r7;
        android.content.Intent r5, $r8;
        java.lang.Object $r6;
        com.gluegadget.hndroid.NewsAdapter $r9, $r15;
        android.content.Context $r10, $r16;
        java.lang.String $r11, $r13;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter$1;
        r1 := @parameter0: android.view.View;
        $r2 = <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r6 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();
        $r7 = (java.lang.String[]) $r6;
        r4 = (java.lang.String[]) $r7;
        $r8 = new android.content.Intent;
        $r9 = r0.<com.gluegadget.hndroid.NewsAdapter$1: com.gluegadget.hndroid.NewsAdapter this$0>;
        $r10 = $r9.<com.gluegadget.hndroid.NewsAdapter: android.content.Context context>;
        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r10, class "com/gluegadget/hndroid/Comments");
        r5 = $r8;
        $r11 = r4[0];
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r11);
        $r13 = r4[1];
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r13);
        $r15 = r0.<com.gluegadget.hndroid.NewsAdapter$1: com.gluegadget.hndroid.NewsAdapter this$0>;
        $r16 = $r15.<com.gluegadget.hndroid.NewsAdapter: android.content.Context context>;
        virtualinvoke $r16.<android.content.Context: void startActivity(android.content.Intent)>(r5);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.NewsAdapter$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/NewsAdapter$1", 4320153523666841660L);
        return $r0;
    }
}
class com.gluegadget.hndroid.NewsAdapter$ViewHolder extends java.lang.Object
{
    android.widget.TextView title;
    android.widget.TextView score;
    android.widget.TextView comment;
    android.widget.TextView author;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        com.gluegadget.hndroid.NewsAdapter$ViewHolder r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter$ViewHolder;
        $r1 = <com.gluegadget.hndroid.NewsAdapter$ViewHolder: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$ViewHolder: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.NewsAdapter$ViewHolder: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.gluegadget.hndroid.NewsAdapter$ViewHolder: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/NewsAdapter$ViewHolder", 9251206036812L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.NewsAdapter extends android.widget.ArrayAdapter
{
    private android.view.LayoutInflater mInflater;
    android.content.Context context;
    int resource;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, int, java.util.List)
    {
        com.gluegadget.hndroid.NewsAdapter r0;
        android.content.Context r1;
        int i0;
        java.util.List r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Object $r5;
        android.view.LayoutInflater $r6;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter;
        r1 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        r2 := @parameter2: java.util.List;
        $r3 = <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>(r1, i0, r2);
        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");
        $r6 = (android.view.LayoutInflater) $r5;
        r0.<com.gluegadget.hndroid.NewsAdapter: android.view.LayoutInflater mInflater> = $r6;
        r0.<com.gluegadget.hndroid.NewsAdapter: int resource> = i0;
        r0.<com.gluegadget.hndroid.NewsAdapter: android.content.Context context> = r1;
        r4[0] = 1;
        return;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.gluegadget.hndroid.NewsAdapter r0;
        int i0, $i1;
        android.view.View r1, $r11, $r13, $r15, $r17;
        android.view.ViewGroup r2;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.News r5;
        com.gluegadget.hndroid.NewsAdapter$ViewHolder r6, $r10;
        java.lang.String[] r7, $r26;
        java.lang.Object $r8, $r19;
        android.view.LayoutInflater $r9;
        android.widget.TextView $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r29, $r30, $r33, $r36, $r42;
        java.lang.String $r21, $r23, $r25, $r27, $r28, $r32, $r34, $r35, $r39, $r41, $r45, $r48, $r50;
        com.gluegadget.hndroid.NewsAdapter$1 $r31;
        java.lang.StringBuilder $r37, $r38, $r40, $r43, $r44, $r46, $r47, $r49;

        r0 := @this: com.gluegadget.hndroid.NewsAdapter;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.View;
        r2 := @parameter2: android.view.ViewGroup;
        $r3 = <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r8 = virtualinvoke r0.<com.gluegadget.hndroid.NewsAdapter: java.lang.Object getItem(int)>(i0);
        r5 = (com.gluegadget.hndroid.News) $r8;
        r4[0] = 1;
        if r1 != null goto label1;

        $r9 = r0.<com.gluegadget.hndroid.NewsAdapter: android.view.LayoutInflater mInflater>;
        $i1 = r0.<com.gluegadget.hndroid.NewsAdapter: int resource>;
        r1 = virtualinvoke $r9.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i1, r2, 0);
        $r10 = new com.gluegadget.hndroid.NewsAdapter$ViewHolder;
        specialinvoke $r10.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: void <init>()>();
        r6 = $r10;
        $r11 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230724);
        $r12 = (android.widget.TextView) $r11;
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView title> = $r12;
        $r13 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230725);
        $r14 = (android.widget.TextView) $r13;
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView score> = $r14;
        $r15 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230735);
        $r16 = (android.widget.TextView) $r15;
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView comment> = $r16;
        $r17 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131230723);
        $r18 = (android.widget.TextView) $r17;
        r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView author> = $r18;
        virtualinvoke r1.<android.view.View: void setTag(java.lang.Object)>(r6);
        r4[1] = 1;
        goto label2;

     label1:
        $r19 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();
        r6 = (com.gluegadget.hndroid.NewsAdapter$ViewHolder) $r19;
        r4[2] = 1;

     label2:
        $r20 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView title>;
        $r21 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        virtualinvoke $r20.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);
        $r22 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView score>;
        $r23 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getScore()>();
        virtualinvoke $r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r23);
        $r24 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView comment>;
        $r25 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getComment()>();
        virtualinvoke $r24.<android.widget.TextView: void setText(java.lang.CharSequence)>($r25);
        $r26 = newarray (java.lang.String)[2];
        $r27 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        $r26[0] = $r27;
        $r28 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        $r26[1] = $r28;
        r7 = $r26;
        $r29 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView comment>;
        virtualinvoke $r29.<android.widget.TextView: void setTag(java.lang.Object)>(r7);
        $r30 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView comment>;
        $r31 = new com.gluegadget.hndroid.NewsAdapter$1;
        specialinvoke $r31.<com.gluegadget.hndroid.NewsAdapter$1: void <init>(com.gluegadget.hndroid.NewsAdapter)>(r0);
        virtualinvoke $r30.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r31);
        $r32 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        r4[3] = 1;
        if $r32 != "" goto label3;

        $r33 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView author>;
        $r34 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        virtualinvoke $r33.<android.widget.TextView: void setText(java.lang.CharSequence)>($r34);
        r4[4] = 1;
        goto label5;

     label3:
        $r35 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getDomain()>();
        r4[5] = 1;
        if $r35 != "" goto label4;

        $r36 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView author>;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("by ");
        $r39 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r36.<android.widget.TextView: void setText(java.lang.CharSequence)>($r41);
        r4[6] = 1;
        goto label5;

     label4:
        $r42 = r6.<com.gluegadget.hndroid.NewsAdapter$ViewHolder: android.widget.TextView author>;
        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("by ");
        $r45 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getAuthor()>();
        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");
        $r48 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getDomain()>();
        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r42.<android.widget.TextView: void setText(java.lang.CharSequence)>($r50);
        r4[7] = 1;

     label5:
        r4[8] = 1;
        return r1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.NewsAdapter: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[9];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/NewsAdapter", 4457176509824375L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.Preferences extends android.preference.PreferenceActivity
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.gluegadget.hndroid.Preferences r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.gluegadget.hndroid.Preferences;
        $r1 = <com.gluegadget.hndroid.Preferences: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Preferences: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.preference.PreferenceActivity: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.gluegadget.hndroid.Preferences r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Preferences;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.gluegadget.hndroid.Preferences: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Preferences: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<com.gluegadget.hndroid.Preferences: void addPreferencesFromResource(int)>(2130968577);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Preferences: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Preferences: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Preferences", 3934875464755263326L);
        return $r0;
    }
}
public final class com.gluegadget.hndroid.R$array extends java.lang.Object
{
    public static final int default_action_options;
    public static final int default_action_values;

    public void <init>()
    {
        com.gluegadget.hndroid.R$array r0;

        r0 := @this: com.gluegadget.hndroid.R$array;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$attr extends java.lang.Object
{

    public void <init>()
    {
        com.gluegadget.hndroid.R$attr r0;

        r0 := @this: com.gluegadget.hndroid.R$attr;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$drawable extends java.lang.Object
{
    public static final int comments;
    public static final int ic_menu_compose;
    public static final int ic_menu_friendslist;
    public static final int ic_menu_login;
    public static final int ic_menu_logout;
    public static final int ic_menu_preferences;
    public static final int ic_menu_refresh;
    public static final int icon;
    public static final int panel_background;
    public static final int widget_bg;
    public static final int widget_bg_normal;
    public static final int widget_bg_pressed;
    public static final int widget_bg_selected;

    public void <init>()
    {
        com.gluegadget.hndroid.R$drawable r0;

        r0 := @this: com.gluegadget.hndroid.R$drawable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$id extends java.lang.Object
{
    public static final int author;
    public static final int comments;
    public static final int hnListView;
    public static final int hnTop;
    public static final int hnTopDesc;
    public static final int hnTopTitle;
    public static final int karma;
    public static final int layout_root;
    public static final int login_button;
    public static final int password;
    public static final int save_button;
    public static final int score;
    public static final int submit_button;
    public static final int text;
    public static final int title;
    public static final int username;

    public void <init>()
    {
        com.gluegadget.hndroid.R$id r0;

        r0 := @this: com.gluegadget.hndroid.R$id;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$layout extends java.lang.Object
{
    public static final int comment;
    public static final int comments_list_item;
    public static final int karma_widget;
    public static final int karma_widget_configure;
    public static final int login;
    public static final int main;
    public static final int news_list_item;

    public void <init>()
    {
        com.gluegadget.hndroid.R$layout r0;

        r0 := @this: com.gluegadget.hndroid.R$layout;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$string extends java.lang.Object
{
    public static final int app_name;
    public static final int context_google_mobile;
    public static final int context_reply;
    public static final int context_upvote;
    public static final int hnfeed;
    public static final int menu_comment;
    public static final int menu_comments;
    public static final int menu_lists;
    public static final int menu_login;
    public static final int menu_logout;
    public static final int menu_preferences;
    public static final int menu_refresh;
    public static final int menu_submissions;

    public void <init>()
    {
        com.gluegadget.hndroid.R$string r0;

        r0 := @this: com.gluegadget.hndroid.R$string;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$style extends java.lang.Object
{
    public static final int WidgetBackground;

    public void <init>()
    {
        com.gluegadget.hndroid.R$style r0;

        r0 := @this: com.gluegadget.hndroid.R$style;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R$xml extends java.lang.Object
{
    public static final int karma_widget;
    public static final int preferences;

    public void <init>()
    {
        com.gluegadget.hndroid.R$xml r0;

        r0 := @this: com.gluegadget.hndroid.R$xml;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.gluegadget.hndroid.R extends java.lang.Object
{

    public void <init>()
    {
        com.gluegadget.hndroid.R r0;

        r0 := @this: com.gluegadget.hndroid.R;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
class com.gluegadget.hndroid.Submissions$1 extends java.lang.Object implements java.lang.Runnable
{
    final android.os.Bundle val$extras;
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions, android.os.Bundle)
    {
        com.gluegadget.hndroid.Submissions$1 r0;
        com.gluegadget.hndroid.Submissions r1;
        android.os.Bundle r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$1;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        r2 := @parameter1: android.os.Bundle;
        $r3 = <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Submissions$1: com.gluegadget.hndroid.Submissions this$0> = r1;
        r0.<com.gluegadget.hndroid.Submissions$1: android.os.Bundle val$extras> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Submissions$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Submissions $r3, $r10, $r12;
        java.lang.StringBuilder $r4, $r5, $r8;
        android.os.Bundle $r6;
        java.lang.String $r7, $r9;
        android.app.ProgressDialog $r11;
        android.os.Handler $r13;

        r0 := @this: com.gluegadget.hndroid.Submissions$1;
        $r1 = <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Submissions$1: com.gluegadget.hndroid.Submissions this$0>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://news.ycombinator.com/submitted?id=");
        $r6 = r0.<com.gluegadget.hndroid.Submissions$1: android.os.Bundle val$extras>;
        $r7 = virtualinvoke $r6.<android.os.Bundle: java.lang.String getString(java.lang.String)>("user");
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <com.gluegadget.hndroid.Submissions: void access$000(com.gluegadget.hndroid.Submissions,java.lang.String)>($r3, $r9);
        $r10 = r0.<com.gluegadget.hndroid.Submissions$1: com.gluegadget.hndroid.Submissions this$0>;
        $r11 = $r10.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog>;
        virtualinvoke $r11.<android.app.ProgressDialog: void dismiss()>();
        $r12 = r0.<com.gluegadget.hndroid.Submissions$1: com.gluegadget.hndroid.Submissions this$0>;
        $r13 = $r12.<com.gluegadget.hndroid.Submissions: android.os.Handler handler>;
        virtualinvoke $r13.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$1", 4705431567866207181L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$2 extends android.os.Handler
{
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions)
    {
        com.gluegadget.hndroid.Submissions$2 r0;
        com.gluegadget.hndroid.Submissions r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Submissions$2;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        $r2 = <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Submissions$2: com.gluegadget.hndroid.Submissions this$0> = r1;
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.gluegadget.hndroid.Submissions$2 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        com.gluegadget.hndroid.Submissions $r4, $r6;
        com.gluegadget.hndroid.NewsAdapter $r5;
        android.widget.ListView $r7;

        r0 := @this: com.gluegadget.hndroid.Submissions$2;
        r1 := @parameter0: android.os.Message;
        $r2 = <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $i0 = r1.<android.os.Message: int what>;
        r3[0] = 1;
        lookupswitch($i0)
        {
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        $r4 = r0.<com.gluegadget.hndroid.Submissions$2: com.gluegadget.hndroid.Submissions this$0>;
        $r5 = $r4.<com.gluegadget.hndroid.Submissions: com.gluegadget.hndroid.NewsAdapter aa>;
        virtualinvoke $r5.<com.gluegadget.hndroid.NewsAdapter: void notifyDataSetChanged()>();
        $r6 = r0.<com.gluegadget.hndroid.Submissions$2: com.gluegadget.hndroid.Submissions this$0>;
        $r7 = $r6.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        virtualinvoke $r7.<android.widget.ListView: void setSelection(int)>(0);
        r3[1] = 1;

     label2:
        r3[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$2", -1951038429205594438L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$3$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.News val$item;
    final com.gluegadget.hndroid.Submissions$3 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions$3, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Submissions$3$1 r0;
        com.gluegadget.hndroid.Submissions$3 r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$3$1;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions$3;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.Submissions$3 this$1> = r1;
        r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.News val$item> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Submissions$3$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.gluegadget.hndroid.Submissions$3 $r3, $r7, $r10;
        com.gluegadget.hndroid.Submissions $r4, $r8, $r11;
        com.gluegadget.hndroid.News $r5;
        java.lang.String $r6;
        android.app.ProgressDialog $r9;
        android.os.Handler $r12;

        r0 := @this: com.gluegadget.hndroid.Submissions$3$1;
        $r1 = <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.Submissions$3 this$1>;
        $r4 = $r3.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        $r5 = r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.News val$item>;
        $r6 = virtualinvoke $r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        staticinvoke <com.gluegadget.hndroid.Submissions: void access$000(com.gluegadget.hndroid.Submissions,java.lang.String)>($r4, $r6);
        $r7 = r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.Submissions$3 this$1>;
        $r8 = $r7.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        $r9 = $r8.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog>;
        virtualinvoke $r9.<android.app.ProgressDialog: void dismiss()>();
        $r10 = r0.<com.gluegadget.hndroid.Submissions$3$1: com.gluegadget.hndroid.Submissions$3 this$1>;
        $r11 = $r10.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        $r12 = $r11.<com.gluegadget.hndroid.Submissions: android.os.Handler handler>;
        virtualinvoke $r12.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$3$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$3$1", 4705431564812729050L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$3 extends java.lang.Object implements android.widget.AdapterView$OnItemClickListener
{
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions)
    {
        com.gluegadget.hndroid.Submissions$3 r0;
        com.gluegadget.hndroid.Submissions r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Submissions$3;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        $r2 = <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        com.gluegadget.hndroid.Submissions$3 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0;
        long l1;
        boolean[][] $r3;
        boolean[] r4;
        com.gluegadget.hndroid.News r5;
        android.content.SharedPreferences r6;
        java.lang.String r7, $r14, $r20, $r22, $r28, $r30;
        android.content.Intent r8, $r13, $r17, r19, $r25, r32;
        android.widget.Adapter $r9;
        java.lang.Object $r10;
        com.gluegadget.hndroid.Submissions $r11, $r16, $r18, $r24, $r33, $r34, $r35;
        android.content.Context $r12;
        boolean $z0, $z1, $z2;
        android.net.Uri $r15, $r31;
        java.lang.StringBuilder $r26, $r27, $r29;
        android.app.ProgressDialog $r36;
        java.lang.Thread $r37;
        com.gluegadget.hndroid.Submissions$3$1 $r38;

        r0 := @this: com.gluegadget.hndroid.Submissions$3;
        r1 := @parameter0: android.widget.AdapterView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        $r3 = <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r9 = virtualinvoke r1.<android.widget.AdapterView: android.widget.Adapter getAdapter()>();
        $r10 = interfaceinvoke $r9.<android.widget.Adapter: java.lang.Object getItem(int)>(i0);
        r5 = (com.gluegadget.hndroid.News) $r10;
        r4[0] = 1;
        if i0 >= 30 goto label4;

        $r11 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        $r12 = virtualinvoke $r11.<com.gluegadget.hndroid.Submissions: android.content.Context getBaseContext()>();
        r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r12);
        r7 = interfaceinvoke r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("PREF_DEFAULT_ACTION", "view-comments");
        $z0 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("open-in-browser");
        r4[1] = 1;
        if $z0 == 0 goto label1;

        $r13 = new android.content.Intent;
        $r14 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r14);
        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r15);
        r8 = $r13;
        $r16 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        virtualinvoke $r16.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r8);
        r4[2] = 1;
        goto label3;

     label1:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("view-comments");
        r4[3] = 1;
        if $z1 == 0 goto label2;

        $r17 = new android.content.Intent;
        $r18 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        specialinvoke $r17.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r18, class "com/gluegadget/hndroid/Comments");
        r19 = $r17;
        $r20 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r20);
        $r22 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        virtualinvoke r19.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r22);
        $r24 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        virtualinvoke $r24.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r19);
        r4[4] = 1;
        goto label3;

     label2:
        $z2 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mobile-adapted-view");
        r4[5] = 1;
        if $z2 == 0 goto label3;

        $r25 = new android.content.Intent;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.google.com/gwt/x?u=");
        $r28 = virtualinvoke r5.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        $r31 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r30);
        specialinvoke $r25.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r31);
        r32 = $r25;
        $r33 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        virtualinvoke $r33.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r32);
        r4[6] = 1;

     label3:
        r4[7] = 1;
        goto label5;

     label4:
        $r34 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        $r35 = r0.<com.gluegadget.hndroid.Submissions$3: com.gluegadget.hndroid.Submissions this$0>;
        $r36 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r35, "", "Loading. Please wait...", 1);
        $r34.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog> = $r36;
        $r37 = new java.lang.Thread;
        $r38 = new com.gluegadget.hndroid.Submissions$3$1;
        specialinvoke $r38.<com.gluegadget.hndroid.Submissions$3$1: void <init>(com.gluegadget.hndroid.Submissions$3,com.gluegadget.hndroid.News)>(r0, r5);
        specialinvoke $r37.<java.lang.Thread: void <init>(java.lang.Runnable)>($r38);
        virtualinvoke $r37.<java.lang.Thread: void start()>();
        r4[8] = 1;

     label5:
        r4[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$3", -2162702341999630634L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$4 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions)
    {
        com.gluegadget.hndroid.Submissions$4 r0;
        com.gluegadget.hndroid.Submissions r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Submissions$4;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        $r2 = <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Submissions$4: com.gluegadget.hndroid.Submissions this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Submissions$4 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        java.lang.CharSequence $r6;
        java.lang.String $r7;
        android.net.Uri $r8;
        com.gluegadget.hndroid.Submissions $r9;

        r0 := @this: com.gluegadget.hndroid.Submissions$4;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        $r6 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getTitle()>();
        $r7 = (java.lang.String) $r6;
        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r7);
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r8);
        r4 = $r5;
        $r9 = r0.<com.gluegadget.hndroid.Submissions$4: com.gluegadget.hndroid.Submissions this$0>;
        virtualinvoke $r9.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r4);
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$4", 4320153515616762951L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$5 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Submissions$5 r0;
        com.gluegadget.hndroid.Submissions r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$5;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Submissions$5: com.gluegadget.hndroid.Submissions this$0> = r1;
        r0.<com.gluegadget.hndroid.Submissions$5: com.gluegadget.hndroid.News val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Submissions$5 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r7, $r10;
        android.content.Intent r5, $r6;
        com.gluegadget.hndroid.News $r8;
        java.lang.String $r9, $r11;
        android.net.Uri $r12;
        com.gluegadget.hndroid.Submissions $r13;

        r0 := @this: com.gluegadget.hndroid.Submissions$5;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r6 = new android.content.Intent;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.google.com/gwt/x?u=");
        $r8 = r0.<com.gluegadget.hndroid.Submissions$5: com.gluegadget.hndroid.News val$newsContexted>;
        $r9 = virtualinvoke $r8.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);
        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r12);
        r5 = $r6;
        $r13 = r0.<com.gluegadget.hndroid.Submissions$5: com.gluegadget.hndroid.Submissions this$0>;
        virtualinvoke $r13.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r5);
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$5", 4705431565367906892L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$6 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Submissions$6 r0;
        com.gluegadget.hndroid.Submissions r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$6;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.Submissions this$0> = r1;
        r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.News val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Submissions$6 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, $r5;
        com.gluegadget.hndroid.Submissions $r6, $r13;
        com.gluegadget.hndroid.News $r7, $r10;
        java.lang.String $r8, $r11;

        r0 := @this: com.gluegadget.hndroid.Submissions$6;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = new android.content.Intent;
        $r6 = r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.Submissions this$0>;
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/gluegadget/hndroid/Comments");
        r4 = $r5;
        $r7 = r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.News val$newsContexted>;
        $r8 = virtualinvoke $r7.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r8);
        $r10 = r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.News val$newsContexted>;
        $r11 = virtualinvoke $r10.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r11);
        $r13 = r0.<com.gluegadget.hndroid.Submissions$6: com.gluegadget.hndroid.Submissions this$0>;
        virtualinvoke $r13.<com.gluegadget.hndroid.Submissions: void startActivity(android.content.Intent)>(r4);
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$6", 4705431566755851497L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$7$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.gluegadget.hndroid.Submissions$7 this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions$7)
    {
        com.gluegadget.hndroid.Submissions$7$1 r0;
        com.gluegadget.hndroid.Submissions$7 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.gluegadget.hndroid.Submissions$7$1;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions$7;
        $r2 = <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.gluegadget.hndroid.Submissions$7$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r15, $r19;
        org.apache.http.impl.client.DefaultHttpClient r5, $r11;
        org.apache.http.client.methods.HttpGet r6, $r12;
        org.apache.http.impl.client.BasicResponseHandler r7, $r20;
        org.apache.http.client.ClientProtocolException r8, $r22;
        com.gluegadget.hndroid.Submissions$7 $r9, $r13, $r25, $r28;
        com.gluegadget.hndroid.Submissions $r10, $r26, $r29;
        com.gluegadget.hndroid.News $r14;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.io.IOException $r23, r24;
        android.app.ProgressDialog $r27;
        android.os.Handler $r30;

        r0 := @this: com.gluegadget.hndroid.Submissions$7$1;
        $r1 = <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r9 = r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1>;
        $r10 = $r9.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        r3 = virtualinvoke $r10.<com.gluegadget.hndroid.Submissions: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r5 = $r11;
        $r12 = new org.apache.http.client.methods.HttpGet;
        $r13 = r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1>;
        $r14 = $r13.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.News val$newsContexted>;
        $r15 = virtualinvoke $r14.<com.gluegadget.hndroid.News: java.lang.String getUpVoteUrl()>();
        specialinvoke $r12.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r15);
        r6 = $r12;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r19);
        $r20 = new org.apache.http.impl.client.BasicResponseHandler;
        specialinvoke $r20.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r7 = $r20;

     label1:
        virtualinvoke r5.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r6, r7);
        r2[0] = 1;

     label2:
        goto label5;

     label3:
        $r22 := @caughtexception;
        r8 = $r22;
        virtualinvoke r8.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        r2[1] = 1;
        goto label5;

     label4:
        $r23 := @caughtexception;
        r24 = $r23;
        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();
        r2[2] = 1;

     label5:
        $r25 = r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1>;
        $r26 = $r25.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        $r27 = $r26.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog>;
        virtualinvoke $r27.<android.app.ProgressDialog: void dismiss()>();
        $r28 = r0.<com.gluegadget.hndroid.Submissions$7$1: com.gluegadget.hndroid.Submissions$7 this$1>;
        $r29 = $r28.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        $r30 = $r29.<com.gluegadget.hndroid.Submissions: android.os.Handler handler>;
        virtualinvoke $r30.<android.os.Handler: boolean sendEmptyMessage(int)>(1);
        r2[3] = 1;
        return;

        catch org.apache.http.client.ClientProtocolException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$7$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$7$1", -4124872408349886090L);
        return $r0;
    }
}
class com.gluegadget.hndroid.Submissions$7 extends java.lang.Object implements android.view.MenuItem$OnMenuItemClickListener
{
    final com.gluegadget.hndroid.News val$newsContexted;
    final com.gluegadget.hndroid.Submissions this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.gluegadget.hndroid.Submissions, com.gluegadget.hndroid.News)
    {
        com.gluegadget.hndroid.Submissions$7 r0;
        com.gluegadget.hndroid.Submissions r1;
        com.gluegadget.hndroid.News r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.gluegadget.hndroid.Submissions$7;
        r1 := @parameter0: com.gluegadget.hndroid.Submissions;
        r2 := @parameter1: com.gluegadget.hndroid.News;
        $r3 = <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0> = r1;
        r0.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.News val$newsContexted> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.gluegadget.hndroid.Submissions$7 r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        com.gluegadget.hndroid.Submissions $r4, $r5;
        android.app.ProgressDialog $r6;
        java.lang.Thread $r7;
        com.gluegadget.hndroid.Submissions$7$1 $r8;

        r0 := @this: com.gluegadget.hndroid.Submissions$7;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        $r5 = r0.<com.gluegadget.hndroid.Submissions$7: com.gluegadget.hndroid.Submissions this$0>;
        $r6 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r5, "", "Voting. Please wait...", 1);
        $r4.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog> = $r6;
        $r7 = new java.lang.Thread;
        $r8 = new com.gluegadget.hndroid.Submissions$7$1;
        specialinvoke $r8.<com.gluegadget.hndroid.Submissions$7$1: void <init>(com.gluegadget.hndroid.Submissions$7)>(r0);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);
        virtualinvoke $r7.<java.lang.Thread: void start()>();
        r3[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.gluegadget.hndroid.Submissions$7: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions$7", 4705431562869606603L);
        return $r0;
    }
}
public class com.gluegadget.hndroid.Submissions extends android.app.Activity
{
    private static final int CONTEXT_COMMENTS;
    private static final int CONTEXT_USER_LINK;
    private static final int CONTEXT_USER_UPVOTE;
    private static final int CONTEXT_GOOGLE_MOBILE;
    private static final int NOTIFY_DATASET_CHANGED;
    android.app.ProgressDialog dialog;
    android.widget.ListView newsListView;
    com.gluegadget.hndroid.NewsAdapter aa;
    java.util.ArrayList news;
    java.lang.String loginUrl;
    android.os.Handler handler;
    android.widget.AdapterView$OnItemClickListener clickListener;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.gluegadget.hndroid.Submissions r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList $r3;
        com.gluegadget.hndroid.Submissions$2 $r4;
        com.gluegadget.hndroid.Submissions$3 $r5;

        r0 := @this: com.gluegadget.hndroid.Submissions;
        $r1 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r0.<com.gluegadget.hndroid.Submissions: java.util.ArrayList news> = $r3;
        $r4 = new com.gluegadget.hndroid.Submissions$2;
        specialinvoke $r4.<com.gluegadget.hndroid.Submissions$2: void <init>(com.gluegadget.hndroid.Submissions)>(r0);
        r0.<com.gluegadget.hndroid.Submissions: android.os.Handler handler> = $r4;
        $r5 = new com.gluegadget.hndroid.Submissions$3;
        specialinvoke $r5.<com.gluegadget.hndroid.Submissions$3: void <init>(com.gluegadget.hndroid.Submissions)>(r0);
        r0.<com.gluegadget.hndroid.Submissions: android.widget.AdapterView$OnItemClickListener clickListener> = $r5;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.gluegadget.hndroid.Submissions r0;
        android.os.Bundle r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        int i0;
        android.widget.TextView r5;
        android.view.View $r6, $r16;
        android.widget.ListView $r7, $r8, $r11, $r13;
        com.gluegadget.hndroid.NewsAdapter $r9, $r12;
        java.util.ArrayList $r10;
        android.widget.AdapterView$OnItemClickListener $r14;
        android.content.Intent $r15;
        java.lang.String $r17;
        android.app.ProgressDialog $r18;
        java.lang.Thread $r19;
        com.gluegadget.hndroid.Submissions$1 $r20;

        r0 := @this: com.gluegadget.hndroid.Submissions;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<com.gluegadget.hndroid.Submissions: void setContentView(int)>(2130903045);
        $r6 = virtualinvoke r0.<com.gluegadget.hndroid.Submissions: android.view.View findViewById(int)>(2131230732);
        $r7 = (android.widget.ListView) $r6;
        r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView> = $r7;
        $r8 = r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        virtualinvoke r0.<com.gluegadget.hndroid.Submissions: void registerForContextMenu(android.view.View)>($r8);
        i0 = 2130903046;
        $r9 = new com.gluegadget.hndroid.NewsAdapter;
        $r10 = r0.<com.gluegadget.hndroid.Submissions: java.util.ArrayList news>;
        specialinvoke $r9.<com.gluegadget.hndroid.NewsAdapter: void <init>(android.content.Context,int,java.util.List)>(r0, i0, $r10);
        r0.<com.gluegadget.hndroid.Submissions: com.gluegadget.hndroid.NewsAdapter aa> = $r9;
        $r11 = r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        $r12 = r0.<com.gluegadget.hndroid.Submissions: com.gluegadget.hndroid.NewsAdapter aa>;
        virtualinvoke $r11.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r12);
        $r13 = r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        $r14 = r0.<com.gluegadget.hndroid.Submissions: android.widget.AdapterView$OnItemClickListener clickListener>;
        virtualinvoke $r13.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r14);
        $r15 = virtualinvoke r0.<com.gluegadget.hndroid.Submissions: android.content.Intent getIntent()>();
        r4 = virtualinvoke $r15.<android.content.Intent: android.os.Bundle getExtras()>();
        $r16 = virtualinvoke r0.<com.gluegadget.hndroid.Submissions: android.view.View findViewById(int)>(2131230734);
        r5 = (android.widget.TextView) $r16;
        $r17 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("title");
        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r17);
        $r18 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>(r0, "", "Loading. Please wait...", 1);
        r0.<com.gluegadget.hndroid.Submissions: android.app.ProgressDialog dialog> = $r18;
        $r19 = new java.lang.Thread;
        $r20 = new com.gluegadget.hndroid.Submissions$1;
        specialinvoke $r20.<com.gluegadget.hndroid.Submissions$1: void <init>(com.gluegadget.hndroid.Submissions,android.os.Bundle)>(r0, r4);
        specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20);
        virtualinvoke $r19.<java.lang.Thread: void start()>();
        r3[0] = 1;
        return;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        com.gluegadget.hndroid.Submissions r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;
        boolean[][] $r4;
        boolean[] r5;
        android.widget.AdapterView$AdapterContextMenuInfo r6;
        com.gluegadget.hndroid.News r7;
        android.view.MenuItem r8, r9, r10, r26;
        int $i0, $i1;
        android.widget.ListView $r11;
        android.widget.ListAdapter $r12;
        java.lang.Object $r13;
        java.lang.String $r14, $r16, $r21, $r24, $r25;
        com.gluegadget.hndroid.Submissions$4 $r17;
        com.gluegadget.hndroid.Submissions$5 $r19;
        com.gluegadget.hndroid.Submissions$6 $r22;
        boolean $z0;
        com.gluegadget.hndroid.Submissions$7 $r27;

        r0 := @this: com.gluegadget.hndroid.Submissions;
        r1 := @parameter0: android.view.ContextMenu;
        r2 := @parameter1: android.view.View;
        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;
        $r4 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();

     label0:
        r5 = $r4[2];
        specialinvoke r0.<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(r1, r2, r3);
        r6 = (android.widget.AdapterView$AdapterContextMenuInfo) r3;
        $i0 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        r5[0] = 1;
        if $i0 >= 30 goto label2;

        $r11 = r0.<com.gluegadget.hndroid.Submissions: android.widget.ListView newsListView>;
        $r12 = virtualinvoke $r11.<android.widget.ListView: android.widget.ListAdapter getAdapter()>();
        $i1 = r6.<android.widget.AdapterView$AdapterContextMenuInfo: int position>;
        $r13 = interfaceinvoke $r12.<android.widget.ListAdapter: java.lang.Object getItem(int)>($i1);
        r7 = (com.gluegadget.hndroid.News) $r13;
        $r14 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getTitle()>();
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>($r14);
        $r16 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getUrl()>();
        r8 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 4, 0, $r16);
        $r17 = new com.gluegadget.hndroid.Submissions$4;
        specialinvoke $r17.<com.gluegadget.hndroid.Submissions$4: void <init>(com.gluegadget.hndroid.Submissions)>(r0);
        interfaceinvoke r8.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r17);
        r9 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 6, 0, 2131099660);
        $r19 = new com.gluegadget.hndroid.Submissions$5;
        specialinvoke $r19.<com.gluegadget.hndroid.Submissions$5: void <init>(com.gluegadget.hndroid.Submissions,com.gluegadget.hndroid.News)>(r0, r7);
        interfaceinvoke r9.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r19);
        $r21 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getCommentsUrl()>();
        r5[1] = 1;
        if $r21 == "" goto label1;

        r10 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 3, 0, 2131099652);
        $r22 = new com.gluegadget.hndroid.Submissions$6;
        specialinvoke $r22.<com.gluegadget.hndroid.Submissions$6: void <init>(com.gluegadget.hndroid.Submissions,com.gluegadget.hndroid.News)>(r0, r7);
        interfaceinvoke r10.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r22);
        r5[2] = 1;

     label1:
        $r24 = r0.<com.gluegadget.hndroid.Submissions: java.lang.String loginUrl>;
        $z0 = virtualinvoke $r24.<java.lang.String: boolean contains(java.lang.CharSequence)>("submit");
        r5[3] = 1;
        if $z0 == 0 goto label2;

        $r25 = virtualinvoke r7.<com.gluegadget.hndroid.News: java.lang.String getUpVoteUrl()>();
        r5[4] = 1;
        if $r25 == "" goto label2;

        r26 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>(0, 5, 0, 2131099659);
        $r27 = new com.gluegadget.hndroid.Submissions$7;
        specialinvoke $r27.<com.gluegadget.hndroid.Submissions$7: void <init>(com.gluegadget.hndroid.Submissions,com.gluegadget.hndroid.News)>(r0, r7);
        interfaceinvoke r26.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r27);
        r5[5] = 1;

     label2:
        r5[6] = 1;
        return;
    }

    private void refreshNews(java.lang.String)
    {
        com.gluegadget.hndroid.Submissions r0;
        java.lang.String r1, r5, r9, r17, r18, r19, r20, r21, r22, r24, r25, $r42, $r47, $r48, $r49, $r54, $r55, $r56, $r63, $r69, $r73, $r74, $r77, $r78, $r82, $r86, $r91;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        org.apache.http.impl.client.DefaultHttpClient r6, $r37;
        org.apache.http.client.methods.HttpGet r7, $r38;
        org.apache.http.impl.client.BasicResponseHandler r8, $r43;
        org.htmlcleaner.HtmlCleaner r10, $r45;
        org.htmlcleaner.TagNode r11, r16, r23, r26, r28, r30, r31, r33, r34, $r70, r71, $r75;
        java.lang.Object[] r12, r13, r14, r15, r27, r29, r32, r76;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Throwable r35, $r101;
        java.util.ArrayList $r36, $r94;
        java.lang.StringBuilder $r39, $r40, $r41;
        java.lang.Object $r44, $r46, $r50, $r53, $r57, $r58, $r59, $r62, $r65, $r68, $r72, $r81, $r85, $r87, $r90;
        java.util.List $r51, $r60, $r66, $r79, $r83, $r88;
        java.util.Iterator $r52, $r61, $r67, $r80, $r84, $r89;
        boolean $z0;
        com.gluegadget.hndroid.News $r92, r93;
        java.net.MalformedURLException $r95, r96;
        java.io.IOException $r97, r98;
        org.htmlcleaner.XPatherException $r99, r100;

        r0 := @this: com.gluegadget.hndroid.Submissions;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];

     label1:
        $r36 = r0.<com.gluegadget.hndroid.Submissions: java.util.ArrayList news>;
        virtualinvoke $r36.<java.util.ArrayList: void clear()>();
        r4 = virtualinvoke r0.<com.gluegadget.hndroid.Submissions: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("user", 0);
        r5 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("cookie", "");
        $r37 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r37.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r6 = $r37;
        $r38 = new org.apache.http.client.methods.HttpGet;
        specialinvoke $r38.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r1);
        r7 = $r38;
        r3[0] = 1;
        if r5 == "" goto label2;

        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user=");
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r7.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r42);
        r3[1] = 1;

     label2:
        $r43 = new org.apache.http.impl.client.BasicResponseHandler;
        specialinvoke $r43.<org.apache.http.impl.client.BasicResponseHandler: void <init>()>();
        r8 = $r43;
        $r44 = virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>(r7, r8);
        r9 = (java.lang.String) $r44;
        $r45 = new org.htmlcleaner.HtmlCleaner;
        specialinvoke $r45.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r10 = $r45;
        r11 = virtualinvoke r10.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r9);
        r12 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@class=\'title\']/a");
        r13 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td[@class=\'subtext\']");
        r14 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'comhead\']");
        r15 = virtualinvoke r11.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//span[@class=\'pagetop\']/a");
        $r46 = r15[5];
        r16 = (org.htmlcleaner.TagNode) $r46;
        $r47 = virtualinvoke r16.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r48 = virtualinvoke $r47.<java.lang.String: java.lang.String toString()>();
        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String trim()>();
        r0.<com.gluegadget.hndroid.Submissions: java.lang.String loginUrl> = $r49;
        $i3 = lengthof r12;
        r3[2] = 1;
        if $i3 <= 0 goto label8;

        i0 = 0;
        i1 = lengthof r12;
        i2 = 0;
        r3[3] = 1;

     label3:
        r3[4] = 1;
        if i2 >= i1 goto label8;

        r17 = "";
        r18 = "";
        r19 = "";
        r20 = "";
        r21 = "";
        r22 = "";
        $r50 = r12[i2];
        r23 = (org.htmlcleaner.TagNode) $r50;
        $r51 = virtualinvoke r23.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r52 = interfaceinvoke $r51.<java.util.List: java.util.Iterator iterator()>();
        $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();
        $r54 = virtualinvoke $r53.<java.lang.Object: java.lang.String toString()>();
        r24 = virtualinvoke $r54.<java.lang.String: java.lang.String trim()>();
        $r55 = virtualinvoke r23.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r56 = virtualinvoke $r55.<java.lang.String: java.lang.String toString()>();
        r25 = virtualinvoke $r56.<java.lang.String: java.lang.String trim()>();
        $i4 = lengthof r13;
        r3[5] = 1;
        if i2 >= $i4 goto label7;

        $r57 = r13[i2];
        r26 = (org.htmlcleaner.TagNode) $r57;
        r27 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/span");
        $r58 = r27[0];
        r28 = (org.htmlcleaner.TagNode) $r58;
        r29 = virtualinvoke r26.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/a");
        $r59 = r29[0];
        r30 = (org.htmlcleaner.TagNode) $r59;
        $r60 = virtualinvoke r30.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r61 = interfaceinvoke $r60.<java.util.List: java.util.Iterator iterator()>();
        $r62 = interfaceinvoke $r61.<java.util.Iterator: java.lang.Object next()>();
        $r63 = virtualinvoke $r62.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r63.<java.lang.String: java.lang.String trim()>();
        $i5 = lengthof r29;
        r3[6] = 1;
        if $i5 != 2 goto label4;

        $r65 = r29[1];
        r31 = (org.htmlcleaner.TagNode) $r65;
        $r66 = virtualinvoke r31.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r67 = interfaceinvoke $r66.<java.util.List: java.util.Iterator iterator()>();
        $r68 = interfaceinvoke $r67.<java.util.Iterator: java.lang.Object next()>();
        $r69 = virtualinvoke $r68.<java.lang.Object: java.lang.String toString()>();
        r19 = virtualinvoke $r69.<java.lang.String: java.lang.String trim()>();
        r3[7] = 1;

     label4:
        $r70 = virtualinvoke r23.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r71 = virtualinvoke $r70.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r32 = virtualinvoke r71.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("//td/center/a[1]");
        $i6 = lengthof r32;
        r3[8] = 1;
        if $i6 <= 0 goto label5;

        $r72 = r32[0];
        r33 = (org.htmlcleaner.TagNode) $r72;
        $r73 = virtualinvoke r33.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r74 = virtualinvoke $r73.<java.lang.String: java.lang.String toString()>();
        r22 = virtualinvoke $r74.<java.lang.String: java.lang.String trim()>();
        r3[9] = 1;

     label5:
        $r75 = virtualinvoke r30.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        r76 = virtualinvoke $r75.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>("/a");
        $i7 = lengthof r76;
        r3[10] = 1;
        if $i7 != 2 goto label6;

        $r77 = virtualinvoke r28.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("id");
        $r78 = virtualinvoke $r77.<java.lang.String: java.lang.String toString()>();
        r21 = virtualinvoke $r78.<java.lang.String: java.lang.String trim()>();
        r3[11] = 1;

     label6:
        $r79 = virtualinvoke r28.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r80 = interfaceinvoke $r79.<java.util.List: java.util.Iterator iterator()>();
        $r81 = interfaceinvoke $r80.<java.util.Iterator: java.lang.Object next()>();
        $r82 = virtualinvoke $r81.<java.lang.Object: java.lang.String toString()>();
        r17 = virtualinvoke $r82.<java.lang.String: java.lang.String trim()>();
        $r83 = virtualinvoke r30.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r84 = interfaceinvoke $r83.<java.util.List: java.util.Iterator iterator()>();
        $r85 = interfaceinvoke $r84.<java.util.Iterator: java.lang.Object next()>();
        $r86 = virtualinvoke $r85.<java.lang.Object: java.lang.String toString()>();
        r18 = virtualinvoke $r86.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>("http");
        r3[12] = 1;
        if $z0 == 0 goto label7;

        $r87 = r14[i0];
        r34 = (org.htmlcleaner.TagNode) $r87;
        $r88 = virtualinvoke r34.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $r89 = interfaceinvoke $r88.<java.util.List: java.util.Iterator iterator()>();
        $r90 = interfaceinvoke $r89.<java.util.Iterator: java.lang.Object next()>();
        $r91 = virtualinvoke $r90.<java.lang.Object: java.lang.String toString()>();
        r20 = virtualinvoke $r91.<java.lang.String: java.lang.String trim()>();
        i0 = i0 + 1;
        r3[13] = 1;

     label7:
        $r92 = new com.gluegadget.hndroid.News;
        specialinvoke $r92.<com.gluegadget.hndroid.News: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r24, r17, r19, r18, r20, r25, r21, r22);
        r93 = $r92;
        $r94 = r0.<com.gluegadget.hndroid.Submissions: java.util.ArrayList news>;
        virtualinvoke $r94.<java.util.ArrayList: boolean add(java.lang.Object)>(r93);
        i2 = i2 + 1;
        r3[14] = 1;
        goto label3;

     label8:
        r3[15] = 1;

     label9:
        goto label22;

     label10:
        $r95 := @caughtexception;

     label11:
        r96 = $r95;
        virtualinvoke r96.<java.net.MalformedURLException: void printStackTrace()>();
        r3[16] = 1;

     label12:
        goto label22;

     label13:
        $r97 := @caughtexception;

     label14:
        r98 = $r97;
        virtualinvoke r98.<java.io.IOException: void printStackTrace()>();
        r3[17] = 1;

     label15:
        goto label22;

     label16:
        $r99 := @caughtexception;

     label17:
        r100 = $r99;
        virtualinvoke r100.<org.htmlcleaner.XPatherException: void printStackTrace()>();
        r3[18] = 1;

     label18:
        goto label22;

     label19:
        $r101 := @caughtexception;

     label20:
        r35 = $r101;

     label21:
        r3[19] = 1;
        throw r35;

     label22:
        r3[20] = 1;
        return;

        catch java.net.MalformedURLException from label1 to label9 with label10;
        catch java.io.IOException from label1 to label9 with label13;
        catch org.htmlcleaner.XPatherException from label1 to label9 with label16;
        catch java.lang.Throwable from label1 to label9 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    static void access$000(com.gluegadget.hndroid.Submissions, java.lang.String)
    {
        com.gluegadget.hndroid.Submissions r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: com.gluegadget.hndroid.Submissions;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.gluegadget.hndroid.Submissions: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        specialinvoke r0.<com.gluegadget.hndroid.Submissions: void refreshNews(java.lang.String)>(r1);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.gluegadget.hndroid.Submissions: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <com.gluegadget.hndroid.Submissions: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[21];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/gluegadget/hndroid/Submissions", -6259202371077174736L);
        return $r0;
    }
}
public interface  org.htmlcleaner.BaseToken extends java.lang.Object
{

    public abstract void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException;
}
public class org.htmlcleaner.BrowserCompactXmlSerializer extends org.htmlcleaner.XmlSerializer
{

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.BrowserCompactXmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.BrowserCompactXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.XmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.BrowserCompactXmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.util.List r3;
        java.util.ListIterator r4;
        java.lang.Object r5, $r11;
        java.lang.String r6, $r7, $r8, $r9, r10, $r14, r15;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        int $i0, $i2, $i3, $i4, $i6;
        char $c1, $c5;
        org.htmlcleaner.CommentNode $r13;
        org.htmlcleaner.BaseToken $r16;

        r0 := @this: org.htmlcleaner.BrowserCompactXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $z2 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        if $z2 != 0 goto label15;

        r4 = interfaceinvoke r3.<java.util.List: java.util.ListIterator listIterator()>();

     label0:
        $z3 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        if $z3 == 0 goto label14;

        r5 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        $z4 = r5 instanceof org.htmlcleaner.ContentNode;
        if $z4 == 0 goto label11;

        r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        $i0 = virtualinvoke r6.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        $c1 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);
        $z5 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);
        if $z5 == 0 goto label1;

        $z6 = 1;
        goto label2;

     label1:
        $z6 = 0;

     label2:
        z0 = $z6;
        $i2 = virtualinvoke r6.<java.lang.String: int length()>();
        if $i2 <= 1 goto label3;

        $i3 = virtualinvoke r6.<java.lang.String: int length()>();
        $i4 = $i3 - 1;
        $c5 = virtualinvoke r6.<java.lang.String: char charAt(int)>($i4);
        $z7 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5);
        if $z7 == 0 goto label3;

        $z8 = 1;
        goto label4;

     label3:
        $z8 = 0;

     label4:
        z1 = $z8;
        $z9 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        if $z9 == 0 goto label5;

        $r7 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("]]>", "]]&gt;");
        goto label6;

     label5:
        $r9 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();
        $r8 = virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: java.lang.String escapeXml(java.lang.String)>($r9);

     label6:
        r10 = $r8;
        if z0 == 0 goto label7;

        virtualinvoke r2.<java.io.Writer: void write(int)>(32);

     label7:
        $i6 = virtualinvoke r10.<java.lang.String: int length()>();
        if $i6 == 0 goto label8;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r10);
        if z1 == 0 goto label8;

        virtualinvoke r2.<java.io.Writer: void write(int)>(32);

     label8:
        $z10 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        if $z10 == 0 goto label10;

        $r11 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        $z11 = staticinvoke <org.htmlcleaner.Utils: boolean isWhitespaceString(java.lang.Object)>($r11);
        if $z11 != 0 goto label9;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");

     label9:
        interfaceinvoke r4.<java.util.ListIterator: java.lang.Object previous()>();

     label10:
        goto label13;

     label11:
        $z12 = r5 instanceof org.htmlcleaner.CommentNode;
        if $z12 == 0 goto label12;

        $r13 = (org.htmlcleaner.CommentNode) r5;
        $r14 = virtualinvoke $r13.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r15);
        goto label13;

     label12:
        $z13 = r5 instanceof org.htmlcleaner.BaseToken;
        if $z13 == 0 goto label13;

        $r16 = (org.htmlcleaner.BaseToken) r5;
        interfaceinvoke $r16.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);

     label13:
        goto label0;

     label14:
        virtualinvoke r0.<org.htmlcleaner.BrowserCompactXmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);

     label15:
        return;
    }
}
public class org.htmlcleaner.CleanerProperties extends java.lang.Object
{
    public static final java.lang.String BOOL_ATT_SELF;
    public static final java.lang.String BOOL_ATT_EMPTY;
    public static final java.lang.String BOOL_ATT_TRUE;
    org.htmlcleaner.ITagInfoProvider tagInfoProvider;
    boolean advancedXmlEscape;
    boolean transResCharsToNCR;
    boolean useCdataForScriptAndStyle;
    boolean translateSpecialEntities;
    boolean transSpecialEntitiesToNCR;
    boolean recognizeUnicodeChars;
    boolean omitUnknownTags;
    boolean treatUnknownTagsAsContent;
    boolean omitDeprecatedTags;
    boolean treatDeprecatedTagsAsContent;
    boolean omitComments;
    boolean omitXmlDeclaration;
    boolean omitDoctypeDeclaration;
    boolean omitHtmlEnvelope;
    boolean useEmptyElementTags;
    boolean allowMultiWordAttributes;
    boolean allowHtmlInsideAttributes;
    boolean ignoreQuestAndExclam;
    boolean namespacesAware;
    java.lang.String hyphenReplacementInComment;
    java.lang.String pruneTags;
    java.lang.String booleanAttributeValues;

    public void <init>()
    {
        org.htmlcleaner.CleanerProperties r0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider tagInfoProvider> = null;
        r0.<org.htmlcleaner.CleanerProperties: boolean advancedXmlEscape> = 1;
        r0.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean useCdataForScriptAndStyle> = 1;
        r0.<org.htmlcleaner.CleanerProperties: boolean translateSpecialEntities> = 1;
        r0.<org.htmlcleaner.CleanerProperties: boolean transSpecialEntitiesToNCR> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean recognizeUnicodeChars> = 1;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean treatUnknownTagsAsContent> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean treatDeprecatedTagsAsContent> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitComments> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitXmlDeclaration> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitDoctypeDeclaration> = 1;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitHtmlEnvelope> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean useEmptyElementTags> = 1;
        r0.<org.htmlcleaner.CleanerProperties: boolean allowMultiWordAttributes> = 1;
        r0.<org.htmlcleaner.CleanerProperties: boolean allowHtmlInsideAttributes> = 0;
        r0.<org.htmlcleaner.CleanerProperties: boolean ignoreQuestAndExclam> = 1;
        r0.<org.htmlcleaner.CleanerProperties: boolean namespacesAware> = 1;
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String hyphenReplacementInComment> = "=";
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String pruneTags> = null;
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues> = "self";
        return;
    }

    public org.htmlcleaner.ITagInfoProvider getTagInfoProvider()
    {
        org.htmlcleaner.CleanerProperties r0;
        org.htmlcleaner.ITagInfoProvider $r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $r1 = r0.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        return $r1;
    }

    public boolean isAdvancedXmlEscape()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean advancedXmlEscape>;
        return $z0;
    }

    public void setAdvancedXmlEscape(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean advancedXmlEscape> = z0;
        return;
    }

    public boolean isTransResCharsToNCR()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        return $z0;
    }

    public void setTransResCharsToNCR(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR> = z0;
        return;
    }

    public boolean isUseCdataForScriptAndStyle()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean useCdataForScriptAndStyle>;
        return $z0;
    }

    public void setUseCdataForScriptAndStyle(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean useCdataForScriptAndStyle> = z0;
        return;
    }

    public boolean isTranslateSpecialEntities()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean translateSpecialEntities>;
        return $z0;
    }

    public void setTranslateSpecialEntities(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean translateSpecialEntities> = z0;
        return;
    }

    public boolean isTransSpecialEntitiesToNCR()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean transSpecialEntitiesToNCR>;
        return $z0;
    }

    public void setTransSpecialEntitiesToNCR(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean transSpecialEntitiesToNCR> = z0;
        return;
    }

    public boolean isRecognizeUnicodeChars()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean recognizeUnicodeChars>;
        return $z0;
    }

    public void setRecognizeUnicodeChars(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean recognizeUnicodeChars> = z0;
        return;
    }

    public boolean isOmitUnknownTags()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags>;
        return $z0;
    }

    public void setOmitUnknownTags(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags> = z0;
        return;
    }

    public boolean isTreatUnknownTagsAsContent()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean treatUnknownTagsAsContent>;
        return $z0;
    }

    public void setTreatUnknownTagsAsContent(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean treatUnknownTagsAsContent> = z0;
        return;
    }

    public boolean isOmitDeprecatedTags()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags>;
        return $z0;
    }

    public void setOmitDeprecatedTags(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags> = z0;
        return;
    }

    public boolean isTreatDeprecatedTagsAsContent()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean treatDeprecatedTagsAsContent>;
        return $z0;
    }

    public void setTreatDeprecatedTagsAsContent(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean treatDeprecatedTagsAsContent> = z0;
        return;
    }

    public boolean isOmitComments()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitComments>;
        return $z0;
    }

    public void setOmitComments(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitComments> = z0;
        return;
    }

    public boolean isOmitXmlDeclaration()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitXmlDeclaration>;
        return $z0;
    }

    public void setOmitXmlDeclaration(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitXmlDeclaration> = z0;
        return;
    }

    public boolean isOmitDoctypeDeclaration()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitDoctypeDeclaration>;
        return $z0;
    }

    public void setOmitDoctypeDeclaration(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitDoctypeDeclaration> = z0;
        return;
    }

    public boolean isOmitHtmlEnvelope()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean omitHtmlEnvelope>;
        return $z0;
    }

    public void setOmitHtmlEnvelope(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean omitHtmlEnvelope> = z0;
        return;
    }

    public boolean isUseEmptyElementTags()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean useEmptyElementTags>;
        return $z0;
    }

    public void setUseEmptyElementTags(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean useEmptyElementTags> = z0;
        return;
    }

    public boolean isAllowMultiWordAttributes()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean allowMultiWordAttributes>;
        return $z0;
    }

    public void setAllowMultiWordAttributes(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean allowMultiWordAttributes> = z0;
        return;
    }

    public boolean isAllowHtmlInsideAttributes()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean allowHtmlInsideAttributes>;
        return $z0;
    }

    public void setAllowHtmlInsideAttributes(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean allowHtmlInsideAttributes> = z0;
        return;
    }

    public boolean isIgnoreQuestAndExclam()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean ignoreQuestAndExclam>;
        return $z0;
    }

    public void setIgnoreQuestAndExclam(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean ignoreQuestAndExclam> = z0;
        return;
    }

    public boolean isNamespacesAware()
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $z0 = r0.<org.htmlcleaner.CleanerProperties: boolean namespacesAware>;
        return $z0;
    }

    public void setNamespacesAware(boolean)
    {
        org.htmlcleaner.CleanerProperties r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.CleanerProperties: boolean namespacesAware> = z0;
        return;
    }

    public java.lang.String getHyphenReplacementInComment()
    {
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $r1 = r0.<org.htmlcleaner.CleanerProperties: java.lang.String hyphenReplacementInComment>;
        return $r1;
    }

    public void setHyphenReplacementInComment(java.lang.String)
    {
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        r1 := @parameter0: java.lang.String;
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String hyphenReplacementInComment> = r1;
        return;
    }

    public java.lang.String getPruneTags()
    {
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $r1 = r0.<org.htmlcleaner.CleanerProperties: java.lang.String pruneTags>;
        return $r1;
    }

    public void setPruneTags(java.lang.String)
    {
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        r1 := @parameter0: java.lang.String;
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String pruneTags> = r1;
        return;
    }

    public java.lang.String getBooleanAttributeValues()
    {
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        $r1 = r0.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues>;
        return $r1;
    }

    public void setBooleanAttributeValues(java.lang.String)
    {
        org.htmlcleaner.CleanerProperties r0;
        java.lang.String r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.CleanerProperties;
        r1 := @parameter0: java.lang.String;
        $r2 = "self";
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z0 != 0 goto label0;

        $r3 = "empty";
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z1 != 0 goto label0;

        $r4 = "true";
        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z2 == 0 goto label1;

     label0:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues> = $r5;
        goto label2;

     label1:
        r0.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues> = "self";

     label2:
        return;
    }
}
public class org.htmlcleaner.CleanerTransformations extends java.lang.Object
{
    private java.util.Map mappings;

    public void <init>()
    {
        org.htmlcleaner.CleanerTransformations r0;
        java.util.HashMap $r1;

        r0 := @this: org.htmlcleaner.CleanerTransformations;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.CleanerTransformations: java.util.Map mappings> = $r1;
        return;
    }

    public void addTransformation(org.htmlcleaner.TagTransformation)
    {
        org.htmlcleaner.CleanerTransformations r0;
        org.htmlcleaner.TagTransformation r1;
        java.util.Map $r2;
        java.lang.String $r3;

        r0 := @this: org.htmlcleaner.CleanerTransformations;
        r1 := @parameter0: org.htmlcleaner.TagTransformation;
        if r1 == null goto label0;

        $r2 = r0.<org.htmlcleaner.CleanerTransformations: java.util.Map mappings>;
        $r3 = virtualinvoke r1.<org.htmlcleaner.TagTransformation: java.lang.String getSourceTag()>();
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

     label0:
        return;
    }

    public boolean hasTransformationForTag(java.lang.String)
    {
        org.htmlcleaner.CleanerTransformations r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.CleanerTransformations;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $r2 = r0.<org.htmlcleaner.CleanerTransformations: java.util.Map mappings>;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public org.htmlcleaner.TagTransformation getTransformation(java.lang.String)
    {
        org.htmlcleaner.CleanerTransformations r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        java.lang.Object $r4;
        org.htmlcleaner.TagTransformation $r5;

        r0 := @this: org.htmlcleaner.CleanerTransformations;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $r2 = r0.<org.htmlcleaner.CleanerTransformations: java.util.Map mappings>;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);
        $r5 = (org.htmlcleaner.TagTransformation) $r4;
        goto label1;

     label0:
        $r5 = null;

     label1:
        return $r5;
    }
}
public class org.htmlcleaner.CommandLine extends java.lang.Object
{

    public void <init>()
    {
        org.htmlcleaner.CommandLine r0;

        r0 := @this: org.htmlcleaner.CommandLine;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static java.lang.String getArgValue(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.String r1, r2, r3, r4, $r5, $r6, $r7, $r8;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];
        r1 := @parameter1: java.lang.String;
        i0 = 0;

     label0:
        $i2 = lengthof r0;
        if i0 >= $i2 goto label2;

        r2 = r0[i0];
        i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(61);
        if i1 < 0 goto label1;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        r3 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();
        $i3 = i1 + 1;
        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);
        r4 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();
        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>($r8);
        if $z0 == 0 goto label1;

        return r4;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return "";
    }

    private static boolean toBoolean(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label1;

        $r1 = "on";
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        if $z0 != 0 goto label0;

        $r2 = "true";
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        if $z1 != 0 goto label0;

        $r3 = "yes";
        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);
        if $z2 == 0 goto label1;

     label0:
        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.htmlcleaner.XPatherException
    {
        java.lang.String[] r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r35, r36, r37, $r38, $r68, $r69, $r70, $r71, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, r97, $r98, $r99, r108, r110, r111, $r115, $r121, $r122, $r125, $r127, $r129, $r131, $r133, $r135, $r143;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58;
        org.htmlcleaner.ConfigFileTagProvider $r30;
        java.io.File $r31, $r114;
        org.htmlcleaner.HtmlCleaner r32, $r72, $r73;
        org.htmlcleaner.CleanerProperties r33;
        java.util.TreeMap r34, $r96;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8;
        java.io.PrintStream $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r119, $r120, $r138;
        org.htmlcleaner.CleanerTransformations $r101, r102;
        java.util.Set $r103;
        java.util.Iterator r104;
        java.lang.Object $r105, $r107, $r109, $r117, $r118;
        java.util.Map$Entry r106;
        long l6, $l9, $l10;
        java.net.URL $r112;
        org.htmlcleaner.TagNode r113;
        java.lang.Object[] r116;
        java.io.OutputStream r123;
        java.io.FileOutputStream $r124;
        org.htmlcleaner.CompactXmlSerializer $r126;
        org.htmlcleaner.BrowserCompactXmlSerializer $r128;
        org.htmlcleaner.PrettyXmlSerializer $r130;
        org.htmlcleaner.SimpleHtmlSerializer $r132;
        org.htmlcleaner.CompactHtmlSerializer $r134;
        org.htmlcleaner.PrettyHtmlSerializer $r136;
        org.htmlcleaner.SimpleXmlSerializer $r137;
        java.lang.StringBuilder $r139, $r140, $r141, $r142;

        r0 := @parameter0: java.lang.String[];
        r1 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "src");
        $r38 = "";
        $z1 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label0;

        $r39 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("Usage: java -jar htmlcleanerXX.jar src = <url | file> [incharset = <charset>] [dest = <file>] [outcharset = <charset>] [taginfofile=<file>] [options...]");
        $r40 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("");
        $r41 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("where options include:");
        $r42 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>("    outputtype=simple* | compact | browser-compact | pretty | htmlsimple | htmlcompact | htmlpretty");
        $r43 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("    advancedxmlescape=true* | false");
        $r44 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("    transrescharstoncr=true | false*");
        $r45 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>("    usecdata=true* | false");
        $r46 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("    specialentities=true* | false");
        $r47 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("    transspecialentitiestoncr=true | false*");
        $r48 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("    unicodechars=true* | false");
        $r49 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("    omitunknowntags=true | false*");
        $r50 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>("    treatunknowntagsascontent=true | false*");
        $r51 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("    omitdeprtags=true | false*");
        $r52 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("    treatdeprtagsascontent=true | false*");
        $r53 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>("    omitcomments=true | false*");
        $r54 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("    omitxmldecl=true | false*");
        $r55 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>("    omitdoctypedecl=true* | false");
        $r56 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("    useemptyelementtags=true* | false");
        $r57 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("    allowmultiwordattributes=true* | false");
        $r58 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>("    allowhtmlinsideattributes=true | false*");
        $r59 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>("    ignoreqe=true* | false");
        $r60 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>("    namespacesaware=true* | false");
        $r61 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>("    hyphenreplacement=<string value> [=]");
        $r62 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("    prunetags=<string value> []");
        $r63 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>("    booleanatts=self* | empty | true");
        $r64 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("    nodebyxpath=<xpath expression>");
        $r65 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>("    omitenvelope=true | false*");
        $r66 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>("    t:<sourcetagX>[=<desttag>[,<preserveatts>]]");
        $r67 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>("    t:<sourcetagX>.<destattrY>[=<template>]");
        staticinvoke <java.lang.System: void exit(int)>(1);

     label0:
        r2 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "incharset");
        $r68 = "";
        $z2 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z2 == 0 goto label1;

        r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;

     label1:
        r3 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "outcharset");
        $r69 = "";
        $z3 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z3 == 0 goto label2;

        r3 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;

     label2:
        r4 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "dest");
        r5 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "outputtype");
        r6 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "advancedxmlescape");
        r7 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "transrescharstoncr");
        r8 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "usecdata");
        r9 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "specialentities");
        r10 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "transspecialentitiestoncr");
        r11 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "unicodechars");
        r12 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitunknowntags");
        r13 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "treatunknowntagsascontent");
        r14 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitdeprtags");
        r15 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "treatdeprtagsascontent");
        r16 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitcomments");
        r17 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitxmldecl");
        r18 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitdoctypedecl");
        r19 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omithtmlenvelope");
        r20 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "useemptyelementtags");
        r21 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "allowmultiwordattributes");
        r22 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "allowhtmlinsideattributes");
        r23 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "ignoreqe");
        r24 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "namespacesaware");
        r25 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "hyphenreplacement");
        r26 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "prunetags");
        r27 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "booleanatts");
        r28 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "nodebyxpath");
        $r70 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "omitenvelope");
        z0 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>($r70);
        r29 = staticinvoke <org.htmlcleaner.CommandLine: java.lang.String getArgValue(java.lang.String[],java.lang.String)>(r0, "taginfofile");
        $r71 = "";
        $z4 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(r29);
        if $z4 != 0 goto label3;

        $r72 = new org.htmlcleaner.HtmlCleaner;
        $r30 = new org.htmlcleaner.ConfigFileTagProvider;
        $r31 = new java.io.File;
        specialinvoke $r31.<java.io.File: void <init>(java.lang.String)>(r29);
        specialinvoke $r30.<org.htmlcleaner.ConfigFileTagProvider: void <init>(java.io.File)>($r31);
        specialinvoke $r72.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.ITagInfoProvider)>($r30);
        r32 = $r72;
        goto label4;

     label3:
        $r73 = new org.htmlcleaner.HtmlCleaner;
        specialinvoke $r73.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r32 = $r73;

     label4:
        r33 = virtualinvoke r32.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties getProperties()>();
        $r74 = "";
        $z5 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>(r12);
        if $z5 != 0 goto label5;

        $z6 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r12);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitUnknownTags(boolean)>($z6);

     label5:
        $r75 = "";
        $z7 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>(r13);
        if $z7 != 0 goto label6;

        $z8 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r13);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTreatUnknownTagsAsContent(boolean)>($z8);

     label6:
        $r76 = "";
        $z9 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>(r14);
        if $z9 != 0 goto label7;

        $z10 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r14);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitDeprecatedTags(boolean)>($z10);

     label7:
        $r77 = "";
        $z11 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>(r15);
        if $z11 != 0 goto label8;

        $z12 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r15);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTreatDeprecatedTagsAsContent(boolean)>($z12);

     label8:
        $r78 = "";
        $z13 = virtualinvoke $r78.<java.lang.String: boolean equals(java.lang.Object)>(r6);
        if $z13 != 0 goto label9;

        $z14 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r6);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setAdvancedXmlEscape(boolean)>($z14);

     label9:
        $r79 = "";
        $z15 = virtualinvoke $r79.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        if $z15 != 0 goto label10;

        $z16 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r7);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTransResCharsToNCR(boolean)>($z16);

     label10:
        $r80 = "";
        $z17 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        if $z17 != 0 goto label11;

        $z18 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r8);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setUseCdataForScriptAndStyle(boolean)>($z18);

     label11:
        $r81 = "";
        $z19 = virtualinvoke $r81.<java.lang.String: boolean equals(java.lang.Object)>(r9);
        if $z19 != 0 goto label12;

        $z20 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r9);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTranslateSpecialEntities(boolean)>($z20);

     label12:
        $r82 = "";
        $z21 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        if $z21 != 0 goto label13;

        $z22 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r10);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setTransSpecialEntitiesToNCR(boolean)>($z22);

     label13:
        $r83 = "";
        $z23 = virtualinvoke $r83.<java.lang.String: boolean equals(java.lang.Object)>(r11);
        if $z23 != 0 goto label14;

        $z24 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r11);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setRecognizeUnicodeChars(boolean)>($z24);

     label14:
        $r84 = "";
        $z25 = virtualinvoke $r84.<java.lang.String: boolean equals(java.lang.Object)>(r16);
        if $z25 != 0 goto label15;

        $z26 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r16);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitComments(boolean)>($z26);

     label15:
        $r85 = "";
        $z27 = virtualinvoke $r85.<java.lang.String: boolean equals(java.lang.Object)>(r17);
        if $z27 != 0 goto label16;

        $z28 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r17);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitXmlDeclaration(boolean)>($z28);

     label16:
        $r86 = "";
        $z29 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>(r18);
        if $z29 != 0 goto label17;

        $z30 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r18);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitDoctypeDeclaration(boolean)>($z30);

     label17:
        $r87 = "";
        $z31 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>(r19);
        if $z31 != 0 goto label18;

        $z32 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r19);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setOmitHtmlEnvelope(boolean)>($z32);

     label18:
        $r88 = "";
        $z33 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>(r20);
        if $z33 != 0 goto label19;

        $z34 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r20);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setUseEmptyElementTags(boolean)>($z34);

     label19:
        $r89 = "";
        $z35 = virtualinvoke $r89.<java.lang.String: boolean equals(java.lang.Object)>(r21);
        if $z35 != 0 goto label20;

        $z36 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r21);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setAllowMultiWordAttributes(boolean)>($z36);

     label20:
        $r90 = "";
        $z37 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>(r22);
        if $z37 != 0 goto label21;

        $z38 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r22);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setAllowHtmlInsideAttributes(boolean)>($z38);

     label21:
        $r91 = "";
        $z39 = virtualinvoke $r91.<java.lang.String: boolean equals(java.lang.Object)>(r23);
        if $z39 != 0 goto label22;

        $z40 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r23);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setIgnoreQuestAndExclam(boolean)>($z40);

     label22:
        $r92 = "";
        $z41 = virtualinvoke $r92.<java.lang.String: boolean equals(java.lang.Object)>(r24);
        if $z41 != 0 goto label23;

        $z42 = staticinvoke <org.htmlcleaner.CommandLine: boolean toBoolean(java.lang.String)>(r24);
        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setNamespacesAware(boolean)>($z42);

     label23:
        $r93 = "";
        $z43 = virtualinvoke $r93.<java.lang.String: boolean equals(java.lang.Object)>(r25);
        if $z43 != 0 goto label24;

        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setHyphenReplacementInComment(java.lang.String)>(r25);

     label24:
        $r94 = "";
        $z44 = virtualinvoke $r94.<java.lang.String: boolean equals(java.lang.Object)>(r26);
        if $z44 != 0 goto label25;

        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setPruneTags(java.lang.String)>(r26);

     label25:
        $r95 = "";
        $z45 = virtualinvoke $r95.<java.lang.String: boolean equals(java.lang.Object)>(r27);
        if $z45 != 0 goto label26;

        virtualinvoke r33.<org.htmlcleaner.CleanerProperties: void setBooleanAttributeValues(java.lang.String)>(r27);

     label26:
        $r96 = new java.util.TreeMap;
        specialinvoke $r96.<java.util.TreeMap: void <init>()>();
        r34 = $r96;
        i0 = 0;

     label27:
        $i3 = lengthof r0;
        if i0 >= $i3 goto label33;

        r35 = r0[i0];
        $z46 = virtualinvoke r35.<java.lang.String: boolean startsWith(java.lang.String)>("t:");
        if $z46 == 0 goto label32;

        $i4 = virtualinvoke r35.<java.lang.String: int length()>();
        if $i4 <= 2 goto label32;

        r97 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int)>(2);
        i1 = virtualinvoke r97.<java.lang.String: int indexOf(int)>(61);
        if i1 > 0 goto label28;

        $r98 = r97;
        goto label29;

     label28:
        $r98 = virtualinvoke r97.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label29:
        r36 = $r98;
        if i1 > 0 goto label30;

        $r99 = null;
        goto label31;

     label30:
        $i5 = i1 + 1;
        $r99 = virtualinvoke r97.<java.lang.String: java.lang.String substring(int)>($i5);

     label31:
        r37 = $r99;
        interfaceinvoke r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r36, r37);

     label32:
        i0 = i0 + 1;
        goto label27;

     label33:
        if r34 == null goto label36;

        $r101 = new org.htmlcleaner.CleanerTransformations;
        specialinvoke $r101.<org.htmlcleaner.CleanerTransformations: void <init>()>();
        r102 = $r101;
        $r103 = interfaceinvoke r34.<java.util.Map: java.util.Set entrySet()>();
        r104 = interfaceinvoke $r103.<java.util.Set: java.util.Iterator iterator()>();

     label34:
        $z47 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();
        if $z47 == 0 goto label35;

        $r105 = interfaceinvoke r104.<java.util.Iterator: java.lang.Object next()>();
        r106 = (java.util.Map$Entry) $r105;
        $r107 = interfaceinvoke r106.<java.util.Map$Entry: java.lang.Object getKey()>();
        r108 = (java.lang.String) $r107;
        $r109 = interfaceinvoke r106.<java.util.Map$Entry: java.lang.Object getValue()>();
        r110 = (java.lang.String) $r109;
        staticinvoke <org.htmlcleaner.Utils: void updateTagTransformations(org.htmlcleaner.CleanerTransformations,java.lang.String,java.lang.String)>(r102, r108, r110);
        goto label34;

     label35:
        virtualinvoke r32.<org.htmlcleaner.HtmlCleaner: void setTransformations(org.htmlcleaner.CleanerTransformations)>(r102);

     label36:
        l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r111 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z48 = virtualinvoke r111.<java.lang.String: boolean startsWith(java.lang.String)>("http://");
        if $z48 != 0 goto label37;

        $z49 = virtualinvoke r111.<java.lang.String: boolean startsWith(java.lang.String)>("https://");
        if $z49 == 0 goto label38;

     label37:
        $r112 = new java.net.URL;
        specialinvoke $r112.<java.net.URL: void <init>(java.lang.String)>(r1);
        r113 = virtualinvoke r32.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.net.URL,java.lang.String)>($r112, r2);
        goto label39;

     label38:
        $r114 = new java.io.File;
        specialinvoke $r114.<java.io.File: void <init>(java.lang.String)>(r1);
        r113 = virtualinvoke r32.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.File,java.lang.String)>($r114, r2);

     label39:
        $r115 = "";
        $z50 = virtualinvoke $r115.<java.lang.String: boolean equals(java.lang.Object)>(r28);
        if $z50 != 0 goto label43;

        r116 = virtualinvoke r113.<org.htmlcleaner.TagNode: java.lang.Object[] evaluateXPath(java.lang.String)>(r28);
        i2 = 0;

     label40:
        $i7 = lengthof r116;
        if i2 >= $i7 goto label42;

        $r117 = r116[i2];
        $z51 = $r117 instanceof org.htmlcleaner.TagNode;
        if $z51 == 0 goto label41;

        $r118 = r116[i2];
        r113 = (org.htmlcleaner.TagNode) $r118;
        $r119 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r119.<java.io.PrintStream: void println(java.lang.String)>("Node successfully found by XPath.");
        goto label42;

     label41:
        i2 = i2 + 1;
        goto label40;

     label42:
        $i8 = lengthof r116;
        if i2 != $i8 goto label43;

        $r120 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r120.<java.io.PrintStream: void println(java.lang.String)>("Node not found by XPath expression - whole html tree is going to be serialized!");

     label43:
        if r4 == null goto label44;

        $r121 = "";
        $r122 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();
        $z52 = virtualinvoke $r121.<java.lang.String: boolean equals(java.lang.Object)>($r122);
        if $z52 == 0 goto label45;

     label44:
        r123 = <java.lang.System: java.io.PrintStream out>;
        goto label46;

     label45:
        $r124 = new java.io.FileOutputStream;
        specialinvoke $r124.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4);
        r123 = $r124;

     label46:
        $r125 = "compact";
        $z53 = virtualinvoke $r125.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z53 == 0 goto label47;

        $r126 = new org.htmlcleaner.CompactXmlSerializer;
        specialinvoke $r126.<org.htmlcleaner.CompactXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        virtualinvoke $r126.<org.htmlcleaner.CompactXmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label53;

     label47:
        $r127 = "browser-compact";
        $z54 = virtualinvoke $r127.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z54 == 0 goto label48;

        $r128 = new org.htmlcleaner.BrowserCompactXmlSerializer;
        specialinvoke $r128.<org.htmlcleaner.BrowserCompactXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        virtualinvoke $r128.<org.htmlcleaner.BrowserCompactXmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label53;

     label48:
        $r129 = "pretty";
        $z55 = virtualinvoke $r129.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z55 == 0 goto label49;

        $r130 = new org.htmlcleaner.PrettyXmlSerializer;
        specialinvoke $r130.<org.htmlcleaner.PrettyXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        virtualinvoke $r130.<org.htmlcleaner.PrettyXmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label53;

     label49:
        $r131 = "htmlsimple";
        $z56 = virtualinvoke $r131.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z56 == 0 goto label50;

        $r132 = new org.htmlcleaner.SimpleHtmlSerializer;
        specialinvoke $r132.<org.htmlcleaner.SimpleHtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        virtualinvoke $r132.<org.htmlcleaner.SimpleHtmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label53;

     label50:
        $r133 = "htmlcompact";
        $z57 = virtualinvoke $r133.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z57 == 0 goto label51;

        $r134 = new org.htmlcleaner.CompactHtmlSerializer;
        specialinvoke $r134.<org.htmlcleaner.CompactHtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        virtualinvoke $r134.<org.htmlcleaner.CompactHtmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label53;

     label51:
        $r135 = "htmlpretty";
        $z58 = virtualinvoke $r135.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z58 == 0 goto label52;

        $r136 = new org.htmlcleaner.PrettyHtmlSerializer;
        specialinvoke $r136.<org.htmlcleaner.PrettyHtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        virtualinvoke $r136.<org.htmlcleaner.PrettyHtmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);
        goto label53;

     label52:
        $r137 = new org.htmlcleaner.SimpleXmlSerializer;
        specialinvoke $r137.<org.htmlcleaner.SimpleXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r33);
        virtualinvoke $r137.<org.htmlcleaner.SimpleXmlSerializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r113, r123, r3, z0);

     label53:
        $r138 = <java.lang.System: java.io.PrintStream out>;
        $r139 = new java.lang.StringBuilder;
        specialinvoke $r139.<java.lang.StringBuilder: void <init>()>();
        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished successfully in ");
        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l10 = $l9 - l6;
        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);
        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.");
        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r138.<java.io.PrintStream: void println(java.lang.String)>($r143);
        return;
    }
}
public class org.htmlcleaner.CommentNode extends java.lang.Object implements org.htmlcleaner.BaseToken, org.htmlcleaner.HtmlNode
{
    private java.lang.StringBuilder content;

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.CommentNode r0;
        java.lang.String r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.htmlcleaner.CommentNode;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);
        r0.<org.htmlcleaner.CommentNode: java.lang.StringBuilder content> = $r2;
        return;
    }

    public java.lang.String getCommentedContent()
    {
        org.htmlcleaner.CommentNode r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.htmlcleaner.CommentNode;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!--");
        $r3 = r0.<org.htmlcleaner.CommentNode: java.lang.StringBuilder content>;
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    public java.lang.StringBuilder getContent()
    {
        org.htmlcleaner.CommentNode r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.htmlcleaner.CommentNode;
        $r1 = r0.<org.htmlcleaner.CommentNode: java.lang.StringBuilder content>;
        return $r1;
    }

    public java.lang.String toString()
    {
        org.htmlcleaner.CommentNode r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.CommentNode;
        $r1 = virtualinvoke r0.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        return $r1;
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.CommentNode r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;
        java.lang.String $r3;

        r0 := @this: org.htmlcleaner.CommentNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        $r3 = virtualinvoke r0.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r3);
        return;
    }
}
public class org.htmlcleaner.CompactHtmlSerializer extends org.htmlcleaner.HtmlSerializer
{
    private int openPreTags;

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.CompactHtmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.CompactHtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.HtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags> = 0;
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.CompactHtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.lang.String $r3, r7, $r8, $r10, $r11, r12, $r16, r17;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.List r4;
        java.util.ListIterator r5;
        java.lang.Object r6, $r13;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11;
        char $c4, $c8;
        org.htmlcleaner.CommentNode $r15;
        org.htmlcleaner.BaseToken $r18;

        r0 := @this: org.htmlcleaner.CompactHtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        $r3 = "pre";
        $r8 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);
        if z0 == 0 goto label0;

        $i0 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags>;
        $i1 = $i0 + 1;
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags> = $i1;

     label0:
        virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        r4 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $z3 = virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        if $z3 != 0 goto label17;

        r5 = interfaceinvoke r4.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z4 = interfaceinvoke r5.<java.util.ListIterator: boolean hasNext()>();
        if $z4 == 0 goto label16;

        r6 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object next()>();
        $z5 = r6 instanceof org.htmlcleaner.ContentNode;
        if $z5 == 0 goto label13;

        r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();
        $i2 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags>;
        if $i2 <= 0 goto label2;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r7);
        goto label12;

     label2:
        $i3 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i3 <= 0 goto label3;

        $c4 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);
        $z6 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);
        if $z6 == 0 goto label3;

        $z7 = 1;
        goto label4;

     label3:
        $z7 = 0;

     label4:
        z1 = $z7;
        $i5 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i5 <= 1 goto label5;

        $i6 = virtualinvoke r7.<java.lang.String: int length()>();
        $i7 = $i6 - 1;
        $c8 = virtualinvoke r7.<java.lang.String: char charAt(int)>($i7);
        $z8 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c8);
        if $z8 == 0 goto label5;

        $z9 = 1;
        goto label6;

     label5:
        $z9 = 0;

     label6:
        z2 = $z9;
        $z10 = virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        if $z10 == 0 goto label7;

        $r10 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();
        goto label8;

     label7:
        $r11 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();
        $r10 = virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: java.lang.String escapeText(java.lang.String)>($r11);

     label8:
        r12 = $r10;
        if z1 == 0 goto label9;

        virtualinvoke r2.<java.io.Writer: void write(int)>(32);

     label9:
        $i9 = virtualinvoke r12.<java.lang.String: int length()>();
        if $i9 == 0 goto label10;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r12);
        if z2 == 0 goto label10;

        virtualinvoke r2.<java.io.Writer: void write(int)>(32);

     label10:
        $z11 = interfaceinvoke r5.<java.util.ListIterator: boolean hasNext()>();
        if $z11 == 0 goto label12;

        $r13 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object next()>();
        $z12 = staticinvoke <org.htmlcleaner.Utils: boolean isWhitespaceString(java.lang.Object)>($r13);
        if $z12 != 0 goto label11;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");

     label11:
        interfaceinvoke r5.<java.util.ListIterator: java.lang.Object previous()>();

     label12:
        goto label15;

     label13:
        $z13 = r6 instanceof org.htmlcleaner.CommentNode;
        if $z13 == 0 goto label14;

        $r15 = (org.htmlcleaner.CommentNode) r6;
        $r16 = virtualinvoke $r15.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        r17 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r17);
        goto label15;

     label14:
        $z14 = r6 instanceof org.htmlcleaner.BaseToken;
        if $z14 == 0 goto label15;

        $r18 = (org.htmlcleaner.BaseToken) r6;
        interfaceinvoke $r18.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);

     label15:
        goto label1;

     label16:
        virtualinvoke r0.<org.htmlcleaner.CompactHtmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        if z0 == 0 goto label17;

        $i10 = r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags>;
        $i11 = $i10 - 1;
        r0.<org.htmlcleaner.CompactHtmlSerializer: int openPreTags> = $i11;

     label17:
        return;
    }
}
public class org.htmlcleaner.CompactXmlSerializer extends org.htmlcleaner.XmlSerializer
{

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.CompactXmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.CompactXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.XmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.CompactXmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.util.List r3;
        java.util.ListIterator r4;
        java.lang.Object r5, $r10;
        java.lang.String r6, $r7, $r9, $r13, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.htmlcleaner.CommentNode $r12;
        org.htmlcleaner.BaseToken $r15;

        r0 := @this: org.htmlcleaner.CompactXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $z0 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        if $z0 != 0 goto label9;

        r4 = interfaceinvoke r3.<java.util.List: java.util.ListIterator listIterator()>();

     label0:
        $z1 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        if $z1 == 0 goto label8;

        r5 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        $z2 = r5 instanceof org.htmlcleaner.ContentNode;
        if $z2 == 0 goto label5;

        $r7 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        r6 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();
        $z3 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        if $z3 == 0 goto label1;

        $r9 = virtualinvoke r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("]]>", "]]&gt;");
        goto label2;

     label1:
        $r9 = virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: java.lang.String escapeXml(java.lang.String)>(r6);

     label2:
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r9);
        $z4 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        if $z4 == 0 goto label4;

        $r10 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        $z5 = staticinvoke <org.htmlcleaner.Utils: boolean isWhitespaceString(java.lang.Object)>($r10);
        if $z5 != 0 goto label3;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");

     label3:
        interfaceinvoke r4.<java.util.ListIterator: java.lang.Object previous()>();

     label4:
        goto label7;

     label5:
        $z6 = r5 instanceof org.htmlcleaner.CommentNode;
        if $z6 == 0 goto label6;

        $r12 = (org.htmlcleaner.CommentNode) r5;
        $r13 = virtualinvoke $r12.<org.htmlcleaner.CommentNode: java.lang.String getCommentedContent()>();
        r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(r14);
        goto label7;

     label6:
        $z7 = r5 instanceof org.htmlcleaner.BaseToken;
        if $z7 == 0 goto label7;

        $r15 = (org.htmlcleaner.BaseToken) r5;
        interfaceinvoke $r15.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);

     label7:
        goto label0;

     label8:
        virtualinvoke r0.<org.htmlcleaner.CompactXmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);

     label9:
        return;
    }
}
class org.htmlcleaner.ConfigFileTagProvider$ConfigParser extends org.xml.sax.helpers.DefaultHandler
{
    private org.htmlcleaner.TagInfo tagInfo;
    private java.lang.String dependencyName;
    private java.util.Map tagInfoMap;
    final org.htmlcleaner.ConfigFileTagProvider this$0;

    void <init>(org.htmlcleaner.ConfigFileTagProvider, java.util.Map)
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        org.htmlcleaner.ConfigFileTagProvider r1;
        java.util.Map r2;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: org.htmlcleaner.ConfigFileTagProvider;
        r2 := @parameter1: java.util.Map;
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0> = r1;
        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = null;
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = null;
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.util.Map tagInfoMap> = r2;
        return;
    }

    public void parse(org.xml.sax.InputSource) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException, java.io.IOException
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        org.xml.sax.InputSource r1;
        javax.xml.parsers.SAXParserFactory $r2;
        javax.xml.parsers.SAXParser r3;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: org.xml.sax.InputSource;
        $r2 = <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory>;
        r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();
        virtualinvoke r3.<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>(r1, r0);
        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        char[] r1;
        int i0, i1;
        java.lang.String r2, $r4, $r5, $r6, $r14, $r15, $r16, $r24, $r25, $r26, $r34, $r35, $r36, $r44, $r45, $r46, $r54, $r55, $r56, $r64, $r65, $r66, $r74, $r75, $r76, $r84;
        org.htmlcleaner.TagInfo $r3, $r7, $r17, $r27, $r37, $r47, $r57, $r67, $r77;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.htmlcleaner.ConfigFileTagProvider $r8, $r18, $r28, $r38, $r48, $r58, $r68, $r78;
        java.io.PrintStream $r9, $r19, $r29, $r39, $r49, $r59, $r69, $r79;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r20, $r21, $r22, $r23, $r30, $r31, $r32, $r33, $r40, $r41, $r42, $r43, $r50, $r51, $r52, $r53, $r60, $r61, $r62, $r63, $r70, $r71, $r72, $r73, $r80, $r81, $r82, $r83;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r3 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        if $r3 == null goto label7;

        $r4 = new java.lang.String;
        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);
        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();
        $r5 = "fatal-tags";
        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z0 == 0 goto label0;

        $r7 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        virtualinvoke $r7.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>(r2);
        $r8 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z1 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r8);
        if $z1 == 0 goto label7;

        $r9 = <java.lang.System: java.io.PrintStream out>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineFatalTags(\"");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14);
        goto label7;

     label0:
        $r15 = "req-enclosing-tags";
        $r16 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);
        if $z2 == 0 goto label1;

        $r17 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        virtualinvoke $r17.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>(r2);
        $r18 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z3 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r18);
        if $z3 == 0 goto label7;

        $r19 = <java.lang.System: java.io.PrintStream out>;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineRequiredEnclosingTags(\"");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24);
        goto label7;

     label1:
        $r25 = "forbidden-tags";
        $r26 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        $z4 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26);
        if $z4 == 0 goto label2;

        $r27 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        virtualinvoke $r27.<org.htmlcleaner.TagInfo: void defineForbiddenTags(java.lang.String)>(r2);
        $r28 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z5 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r28);
        if $z5 == 0 goto label7;

        $r29 = <java.lang.System: java.io.PrintStream out>;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineForbiddenTags(\"");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r34);
        goto label7;

     label2:
        $r35 = "allowed-children-tags";
        $r36 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        $z6 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r36);
        if $z6 == 0 goto label3;

        $r37 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        virtualinvoke $r37.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>(r2);
        $r38 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z7 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r38);
        if $z7 == 0 goto label7;

        $r39 = <java.lang.System: java.io.PrintStream out>;
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineAllowedChildrenTags(\"");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r44);
        goto label7;

     label3:
        $r45 = "higher-level-tags";
        $r46 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        $z8 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46);
        if $z8 == 0 goto label4;

        $r47 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        virtualinvoke $r47.<org.htmlcleaner.TagInfo: void defineHigherLevelTags(java.lang.String)>(r2);
        $r48 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z9 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r48);
        if $z9 == 0 goto label7;

        $r49 = <java.lang.System: java.io.PrintStream out>;
        $r50 = new java.lang.StringBuilder;
        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineHigherLevelTags(\"");
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r54);
        goto label7;

     label4:
        $r55 = "close-before-copy-inside-tags";
        $r56 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        $z10 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>($r56);
        if $z10 == 0 goto label5;

        $r57 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        virtualinvoke $r57.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>(r2);
        $r58 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z11 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r58);
        if $z11 == 0 goto label7;

        $r59 = <java.lang.System: java.io.PrintStream out>;
        $r60 = new java.lang.StringBuilder;
        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseBeforeCopyInsideTags(\"");
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>($r64);
        goto label7;

     label5:
        $r65 = "close-inside-copy-after-tags";
        $r66 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        $z12 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>($r66);
        if $z12 == 0 goto label6;

        $r67 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        virtualinvoke $r67.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>(r2);
        $r68 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z13 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r68);
        if $z13 == 0 goto label7;

        $r69 = <java.lang.System: java.io.PrintStream out>;
        $r70 = new java.lang.StringBuilder;
        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseInsideCopyAfterTags(\"");
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r74);
        goto label7;

     label6:
        $r75 = "close-before-tags";
        $r76 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName>;
        $z14 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>($r76);
        if $z14 == 0 goto label7;

        $r77 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        virtualinvoke $r77.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>(r2);
        $r78 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z15 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r78);
        if $z15 == 0 goto label7;

        $r79 = <java.lang.System: java.io.PrintStream out>;
        $r80 = new java.lang.StringBuilder;
        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagInfo.defineCloseBeforeTags(\"");
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");");
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r84);

     label7:
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        java.lang.String r1, r2, r3, $r5, r6, r7, r8, r9, r10, r11, $r14, r15, $r18, $r19, $r20, $r21, $r22, $r23, r25, $r27, $r28, $r29, $r30, r31, $r33, $r34, $r35, $r36, r37, $r39, $r40, $r41, r42, $r44, $r45, $r46, r47, $r49, $r50, $r51, r52, $r54;
        org.xml.sax.Attributes r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        org.htmlcleaner.TagInfo $r17;
        byte $b0, $b1;
        org.htmlcleaner.ConfigFileTagProvider $r24;
        java.io.PrintStream $r53;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: org.xml.sax.Attributes;
        $r5 = "tag";
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z0 == 0 goto label25;

        r6 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");
        r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("content");
        r8 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("section");
        r9 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("deprecated");
        r10 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("unique");
        r11 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("ignore-permitted");
        $r17 = new org.htmlcleaner.TagInfo;
        $r14 = "all";
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        if $z1 == 0 goto label0;

        $b0 = 0;
        goto label2;

     label0:
        $r18 = "none";
        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        if $z2 == 0 goto label1;

        $b0 = 1;
        goto label2;

     label1:
        $b0 = 2;

     label2:
        $r19 = "all";
        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        if $z3 == 0 goto label3;

        $b1 = 0;
        goto label5;

     label3:
        $r20 = "head";
        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        if $z4 == 0 goto label4;

        $b1 = 1;
        goto label5;

     label4:
        $b1 = 2;

     label5:
        if r9 == null goto label6;

        $r21 = "true";
        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r9);
        if $z5 == 0 goto label6;

        $z6 = 1;
        goto label7;

     label6:
        $z6 = 0;

     label7:
        if r10 == null goto label8;

        $r22 = "true";
        $z7 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        if $z7 == 0 goto label8;

        $z8 = 1;
        goto label9;

     label8:
        $z8 = 0;

     label9:
        if r11 == null goto label10;

        $r23 = "true";
        $z9 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r11);
        if $z9 == 0 goto label10;

        $z10 = 1;
        goto label11;

     label10:
        $z10 = 0;

     label11:
        specialinvoke $r17.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>(r6, $b0, $b1, $z6, $z8, $z10);
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = $r17;
        $r24 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z11 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r24);
        if $z11 == 0 goto label24;

        r15 = "tagInfo = new TagInfo(\"#1\", #2, #3, #4, #5, #6);";
        r25 = virtualinvoke r15.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#1", r6);
        $r27 = "#2";
        $r28 = "all";
        $z12 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        if $z12 == 0 goto label12;

        $r29 = "TagInfo.CONTENT_ALL";
        goto label14;

     label12:
        $r30 = "none";
        $z13 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        if $z13 == 0 goto label13;

        $r29 = "TagInfo.CONTENT_NONE";
        goto label14;

     label13:
        $r29 = " TagInfo.CONTENT_TEXT";

     label14:
        r31 = virtualinvoke r25.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r27, $r29);
        $r33 = "#3";
        $r34 = "all";
        $z14 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        if $z14 == 0 goto label15;

        $r35 = "TagInfo.HEAD_AND_BODY";
        goto label17;

     label15:
        $r36 = "head";
        $z15 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r8);
        if $z15 == 0 goto label16;

        $r35 = "TagInfo.HEAD";
        goto label17;

     label16:
        $r35 = "TagInfo.BODY";

     label17:
        r37 = virtualinvoke r31.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r33, $r35);
        $r39 = "#4";
        if r9 == null goto label18;

        $r40 = "true";
        $z16 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r9);
        if $z16 == 0 goto label18;

        $z17 = 1;
        goto label19;

     label18:
        $z17 = 0;

     label19:
        $r41 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z17);
        r42 = virtualinvoke r37.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r39, $r41);
        $r44 = "#5";
        if r10 == null goto label20;

        $r45 = "true";
        $z18 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>(r10);
        if $z18 == 0 goto label20;

        $z19 = 1;
        goto label21;

     label20:
        $z19 = 0;

     label21:
        $r46 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z19);
        r47 = virtualinvoke r42.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r44, $r46);
        $r49 = "#6";
        if r11 == null goto label22;

        $r50 = "true";
        $z20 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r11);
        if $z20 == 0 goto label22;

        $z21 = 1;
        goto label23;

     label22:
        $z21 = 0;

     label23:
        $r51 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z21);
        r52 = virtualinvoke r47.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r49, $r51);
        $r53 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>(r52);

     label24:
        goto label26;

     label25:
        $r54 = "tags";
        $z22 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z22 != 0 goto label26;

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = r3;

     label26:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r0;
        java.lang.String r1, r2, r3, $r4, $r8, $r16, $r19, $r20;
        boolean $z0, $z1, $z2;
        org.htmlcleaner.TagInfo $r5, $r7, $r9, $r15;
        java.util.Map $r6;
        org.htmlcleaner.ConfigFileTagProvider $r11;
        java.io.PrintStream $r12;
        java.lang.StringBuilder $r13, $r14, $r17, $r18;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = "tag";
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z0 == 0 goto label1;

        $r5 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        if $r5 == null goto label0;

        $r6 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.util.Map tagInfoMap>;
        $r7 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        $r8 = virtualinvoke $r7.<org.htmlcleaner.TagInfo: java.lang.String getName()>();
        $r9 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);
        $r11 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.ConfigFileTagProvider this$0>;
        $z1 = staticinvoke <org.htmlcleaner.ConfigFileTagProvider: boolean access$000(org.htmlcleaner.ConfigFileTagProvider)>($r11);
        if $z1 == 0 goto label0;

        $r12 = <java.lang.System: java.io.PrintStream out>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this.put(\"");
        $r15 = r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo>;
        $r16 = virtualinvoke $r15.<org.htmlcleaner.TagInfo: java.lang.String getName()>();
        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", tagInfo);\n");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label0:
        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: org.htmlcleaner.TagInfo tagInfo> = null;
        goto label2;

     label1:
        $r20 = "tags";
        $z2 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z2 != 0 goto label2;

        r0.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: java.lang.String dependencyName> = null;

     label2:
        return;
    }
}
public class org.htmlcleaner.ConfigFileTagProvider extends java.util.HashMap implements org.htmlcleaner.ITagInfoProvider
{
    static javax.xml.parsers.SAXParserFactory parserFactory;
    private boolean generateCode;

    private void <init>()
    {
        org.htmlcleaner.ConfigFileTagProvider r0;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 0;
        return;
    }

    public void <init>(org.xml.sax.InputSource)
    {
        org.htmlcleaner.ConfigFileTagProvider r0;
        org.xml.sax.InputSource r1;
        java.lang.Exception r2, $r4;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser $r3;
        org.htmlcleaner.HtmlCleanerException $r5;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        r1 := @parameter0: org.xml.sax.InputSource;
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 0;

     label0:
        $r3 = new org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        specialinvoke $r3.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void <init>(org.htmlcleaner.ConfigFileTagProvider,java.util.Map)>(r0, r0);
        virtualinvoke $r3.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void parse(org.xml.sax.InputSource)>(r1);

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;
        $r5 = new org.htmlcleaner.HtmlCleanerException;
        specialinvoke $r5.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing tag configuration file!", r2);
        throw $r5;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void <init>(java.io.File)
    {
        org.htmlcleaner.ConfigFileTagProvider r0;
        java.io.File r1;
        java.lang.Exception r2, $r6;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser $r3;
        org.xml.sax.InputSource $r4;
        java.io.FileReader $r5;
        org.htmlcleaner.HtmlCleanerException $r7;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        r1 := @parameter0: java.io.File;
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 0;

     label0:
        $r3 = new org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        specialinvoke $r3.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void <init>(org.htmlcleaner.ConfigFileTagProvider,java.util.Map)>(r0, r0);
        $r4 = new org.xml.sax.InputSource;
        $r5 = new java.io.FileReader;
        specialinvoke $r5.<java.io.FileReader: void <init>(java.io.File)>(r1);
        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r5);
        virtualinvoke $r3.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void parse(org.xml.sax.InputSource)>($r4);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new org.htmlcleaner.HtmlCleanerException;
        specialinvoke $r7.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing tag configuration file!", r2);
        throw $r7;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void <init>(java.net.URL)
    {
        org.htmlcleaner.ConfigFileTagProvider r0;
        java.net.URL r1;
        java.lang.Object r2;
        java.io.InputStreamReader r3, $r4;
        boolean $z0;
        java.io.InputStream $r5;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser $r6;
        org.xml.sax.InputSource $r7;
        java.lang.Exception $r8, r9;
        org.htmlcleaner.HtmlCleanerException $r10;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        r1 := @parameter0: java.net.URL;
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 0;

     label0:
        r2 = virtualinvoke r1.<java.net.URL: java.lang.Object getContent()>();
        $z0 = r2 instanceof java.io.InputStream;
        if $z0 == 0 goto label1;

        $r4 = new java.io.InputStreamReader;
        $r5 = (java.io.InputStream) r2;
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);
        r3 = $r4;
        $r6 = new org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        specialinvoke $r6.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void <init>(org.htmlcleaner.ConfigFileTagProvider,java.util.Map)>(r0, r0);
        $r7 = new org.xml.sax.InputSource;
        specialinvoke $r7.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r3);
        virtualinvoke $r6.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void parse(org.xml.sax.InputSource)>($r7);

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new org.htmlcleaner.HtmlCleanerException;
        specialinvoke $r10.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing tag configuration file!", r9);
        throw $r10;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public org.htmlcleaner.TagInfo getTagInfo(java.lang.String)
    {
        org.htmlcleaner.ConfigFileTagProvider r0;
        java.lang.String r1;
        java.lang.Object $r2;
        org.htmlcleaner.TagInfo $r3;

        r0 := @this: org.htmlcleaner.ConfigFileTagProvider;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.htmlcleaner.ConfigFileTagProvider: java.lang.Object get(java.lang.Object)>(r1);
        $r3 = (org.htmlcleaner.TagInfo) $r2;
        return $r3;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        java.lang.String[] r0;
        org.htmlcleaner.ConfigFileTagProvider $r1, r2;
        java.io.File r3, $r7;
        java.lang.String r4, r5, $r16, $r23, $r29;
        org.htmlcleaner.ConfigFileTagProvider$ConfigParser r6, $r8;
        java.io.PrintStream $r11, $r17, $r18, $r24, $r30, $r33, $r34;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28;
        org.xml.sax.InputSource $r31;
        java.io.FileReader $r32;

        r0 := @parameter0: java.lang.String[];
        $r1 = new org.htmlcleaner.ConfigFileTagProvider;
        specialinvoke $r1.<org.htmlcleaner.ConfigFileTagProvider: void <init>()>();
        r2 = $r1;
        r2.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode> = 1;
        $r7 = new java.io.File;
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>("default.xml");
        r3 = $r7;
        r4 = "org.htmlcleaner";
        r5 = "DefaultTagProvider";
        $r8 = new org.htmlcleaner.ConfigFileTagProvider$ConfigParser;
        virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();
        specialinvoke $r8.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void <init>(org.htmlcleaner.ConfigFileTagProvider,java.util.Map)>(r2, r2);
        r6 = $r8;
        $r11 = <java.lang.System: java.io.PrintStream out>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);
        $r17 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("import java.util.HashMap;");
        $r18 = <java.lang.System: java.io.PrintStream out>;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public class ");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extends HashMap implements ITagInfoProvider {");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23);
        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() {");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
        $r30 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("TagInfo tagInfo;");
        $r31 = new org.xml.sax.InputSource;
        $r32 = new java.io.FileReader;
        specialinvoke $r32.<java.io.FileReader: void <init>(java.io.File)>(r3);
        specialinvoke $r31.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r32);
        virtualinvoke r6.<org.htmlcleaner.ConfigFileTagProvider$ConfigParser: void parse(org.xml.sax.InputSource)>($r31);
        $r33 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("}");
        $r34 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("}");
        return;
    }

    static boolean access$000(org.htmlcleaner.ConfigFileTagProvider)
    {
        org.htmlcleaner.ConfigFileTagProvider r0;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.ConfigFileTagProvider;
        $z0 = r0.<org.htmlcleaner.ConfigFileTagProvider: boolean generateCode>;
        return $z0;
    }

    static void <clinit>()
    {
        javax.xml.parsers.SAXParserFactory $r0, $r1, $r2;

        $r0 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();
        <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory> = $r0;
        $r1 = <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory>;
        virtualinvoke $r1.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(0);
        $r2 = <org.htmlcleaner.ConfigFileTagProvider: javax.xml.parsers.SAXParserFactory parserFactory>;
        virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(0);
        return;
    }
}
public class org.htmlcleaner.ContentNode extends java.lang.Object implements org.htmlcleaner.BaseToken, org.htmlcleaner.HtmlNode
{
    private java.lang.StringBuilder content;

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.ContentNode r0;
        java.lang.String r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.htmlcleaner.ContentNode;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);
        r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content> = $r2;
        return;
    }

    void <init>(char[], int)
    {
        org.htmlcleaner.ContentNode r0;
        char[] r1;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r3;

        r0 := @this: org.htmlcleaner.ContentNode;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.lang.StringBuilder;
        $i1 = i0 + 16;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);
        r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content> = $r2;
        $r3 = r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content>;
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, 0, i0);
        return;
    }

    public java.lang.String toString()
    {
        org.htmlcleaner.ContentNode r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.ContentNode;
        $r1 = r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content>;
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    public java.lang.StringBuilder getContent()
    {
        org.htmlcleaner.ContentNode r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.htmlcleaner.ContentNode;
        $r1 = r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content>;
        return $r1;
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.ContentNode r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: org.htmlcleaner.ContentNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        $r3 = r0.<org.htmlcleaner.ContentNode: java.lang.StringBuilder content>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r4);
        return;
    }
}
public class org.htmlcleaner.DefaultTagProvider extends java.util.HashMap implements org.htmlcleaner.ITagInfoProvider
{
    private static org.htmlcleaner.DefaultTagProvider _instance;

    public static synchronized org.htmlcleaner.DefaultTagProvider getInstance()
    {
        org.htmlcleaner.DefaultTagProvider $r0, $r1, $r2;

        $r0 = <org.htmlcleaner.DefaultTagProvider: org.htmlcleaner.DefaultTagProvider _instance>;
        if $r0 != null goto label0;

        $r1 = new org.htmlcleaner.DefaultTagProvider;
        specialinvoke $r1.<org.htmlcleaner.DefaultTagProvider: void <init>()>();
        <org.htmlcleaner.DefaultTagProvider: org.htmlcleaner.DefaultTagProvider _instance> = $r1;

     label0:
        $r2 = <org.htmlcleaner.DefaultTagProvider: org.htmlcleaner.DefaultTagProvider _instance>;
        return $r2;
    }

    public void <init>()
    {
        org.htmlcleaner.DefaultTagProvider r0;
        org.htmlcleaner.TagInfo r1, $r2, $r4, r5, $r7, r8, $r10, r11, $r13, r14, $r16, r17, $r19, r20, $r22, r23, $r25, r26, $r28, r29, $r31, r32, $r34, r35, $r37, r38, $r40, r41, $r43, r44, $r46, r47, $r49, r50, $r52, r53, $r55, r56, $r58, r59, $r61, r62, $r64, r65, $r67, r68, $r70, r71, $r73, r74, $r76, r77, $r79, r80, $r82, r83, $r85, r86, $r88, r89, $r91, r92, $r94, r95, $r97, r98, $r100, r101, $r103, r104, $r106, r107, $r109, r110, $r112, r113, $r115, r116, $r118, r119, $r121, r122, $r124, r125, $r127, r128, $r130, r131, $r133, r134, $r136, r137, $r139, r140, $r142, r143, $r145, r146, $r148, r149, $r151, r152, $r154, r155, $r157, r158, $r160, r161, $r163, r164, $r166, r167, $r169, r170, $r172, r173, $r175, r176, $r178, r179, $r181, r182, $r184, r185, $r187, r188, $r190, r191, $r193, r194, $r196, r197, $r199, r200, $r202, r203, $r205, r206, $r208, r209, $r211, r212, $r214, r215, $r217, r218, $r220, r221, $r223, r224, $r226, r227, $r229, r230, $r232, r233, $r235, r236, $r238, r239, $r241, r242, $r244, r245, $r247, r248, $r250, r251, $r253, r254, $r256, r257, $r259, r260, $r262, r263, $r265, r266, $r268, r269, $r271, r272, $r274, r275, $r277, r278, $r280, r281, $r283, r284, $r286, r287;

        r0 := @this: org.htmlcleaner.DefaultTagProvider;
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        $r2 = new org.htmlcleaner.TagInfo;
        specialinvoke $r2.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("div", 0, 2, 0, 0, 0);
        r1 = $r2;
        virtualinvoke r1.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r1.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("div", r1);
        $r4 = new org.htmlcleaner.TagInfo;
        specialinvoke $r4.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("span", 0, 2, 0, 0, 0);
        r5 = $r4;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("span", r5);
        $r7 = new org.htmlcleaner.TagInfo;
        specialinvoke $r7.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("meta", 1, 1, 0, 0, 0);
        r8 = $r7;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("meta", r8);
        $r10 = new org.htmlcleaner.TagInfo;
        specialinvoke $r10.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("link", 1, 1, 0, 0, 0);
        r11 = $r10;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("link", r11);
        $r13 = new org.htmlcleaner.TagInfo;
        specialinvoke $r13.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("title", 2, 1, 0, 1, 0);
        r14 = $r13;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("title", r14);
        $r16 = new org.htmlcleaner.TagInfo;
        specialinvoke $r16.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("style", 2, 1, 0, 0, 0);
        r17 = $r16;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("style", r17);
        $r19 = new org.htmlcleaner.TagInfo;
        specialinvoke $r19.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("bgsound", 1, 1, 0, 0, 0);
        r20 = $r19;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("bgsound", r20);
        $r22 = new org.htmlcleaner.TagInfo;
        specialinvoke $r22.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h1", 0, 2, 0, 0, 0);
        r23 = $r22;
        virtualinvoke r23.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r23.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h1", r23);
        $r25 = new org.htmlcleaner.TagInfo;
        specialinvoke $r25.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h2", 0, 2, 0, 0, 0);
        r26 = $r25;
        virtualinvoke r26.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r26.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h2", r26);
        $r28 = new org.htmlcleaner.TagInfo;
        specialinvoke $r28.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h3", 0, 2, 0, 0, 0);
        r29 = $r28;
        virtualinvoke r29.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r29.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h3", r29);
        $r31 = new org.htmlcleaner.TagInfo;
        specialinvoke $r31.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h4", 0, 2, 0, 0, 0);
        r32 = $r31;
        virtualinvoke r32.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r32.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h4", r32);
        $r34 = new org.htmlcleaner.TagInfo;
        specialinvoke $r34.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h5", 0, 2, 0, 0, 0);
        r35 = $r34;
        virtualinvoke r35.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r35.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h5", r35);
        $r37 = new org.htmlcleaner.TagInfo;
        specialinvoke $r37.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("h6", 0, 2, 0, 0, 0);
        r38 = $r37;
        virtualinvoke r38.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r38.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("h1,h2,h3,h4,h5,h6,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("h6", r38);
        $r40 = new org.htmlcleaner.TagInfo;
        specialinvoke $r40.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("p", 0, 2, 0, 0, 0);
        r41 = $r40;
        virtualinvoke r41.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r41.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("p", r41);
        $r43 = new org.htmlcleaner.TagInfo;
        specialinvoke $r43.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("strong", 0, 2, 0, 0, 0);
        r44 = $r43;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("strong", r44);
        $r46 = new org.htmlcleaner.TagInfo;
        specialinvoke $r46.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("em", 0, 2, 0, 0, 0);
        r47 = $r46;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("em", r47);
        $r49 = new org.htmlcleaner.TagInfo;
        specialinvoke $r49.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("abbr", 0, 2, 0, 0, 0);
        r50 = $r49;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("abbr", r50);
        $r52 = new org.htmlcleaner.TagInfo;
        specialinvoke $r52.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("acronym", 0, 2, 0, 0, 0);
        r53 = $r52;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("acronym", r53);
        $r55 = new org.htmlcleaner.TagInfo;
        specialinvoke $r55.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("address", 0, 2, 0, 0, 0);
        r56 = $r55;
        virtualinvoke r56.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r56.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("address", r56);
        $r58 = new org.htmlcleaner.TagInfo;
        specialinvoke $r58.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("bdo", 0, 2, 0, 0, 0);
        r59 = $r58;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("bdo", r59);
        $r61 = new org.htmlcleaner.TagInfo;
        specialinvoke $r61.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("blockquote", 0, 2, 0, 0, 0);
        r62 = $r61;
        virtualinvoke r62.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r62.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("blockquote", r62);
        $r64 = new org.htmlcleaner.TagInfo;
        specialinvoke $r64.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("cite", 0, 2, 0, 0, 0);
        r65 = $r64;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("cite", r65);
        $r67 = new org.htmlcleaner.TagInfo;
        specialinvoke $r67.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("q", 0, 2, 0, 0, 0);
        r68 = $r67;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("q", r68);
        $r70 = new org.htmlcleaner.TagInfo;
        specialinvoke $r70.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("code", 0, 2, 0, 0, 0);
        r71 = $r70;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("code", r71);
        $r73 = new org.htmlcleaner.TagInfo;
        specialinvoke $r73.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("ins", 0, 2, 0, 0, 0);
        r74 = $r73;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("ins", r74);
        $r76 = new org.htmlcleaner.TagInfo;
        specialinvoke $r76.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("del", 0, 2, 0, 0, 0);
        r77 = $r76;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("del", r77);
        $r79 = new org.htmlcleaner.TagInfo;
        specialinvoke $r79.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dfn", 0, 2, 0, 0, 0);
        r80 = $r79;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfn", r80);
        $r82 = new org.htmlcleaner.TagInfo;
        specialinvoke $r82.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("kbd", 0, 2, 0, 0, 0);
        r83 = $r82;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("kbd", r83);
        $r85 = new org.htmlcleaner.TagInfo;
        specialinvoke $r85.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("pre", 0, 2, 0, 0, 0);
        r86 = $r85;
        virtualinvoke r86.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r86.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("pre", r86);
        $r88 = new org.htmlcleaner.TagInfo;
        specialinvoke $r88.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("samp", 0, 2, 0, 0, 0);
        r89 = $r88;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("samp", r89);
        $r91 = new org.htmlcleaner.TagInfo;
        specialinvoke $r91.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("listing", 0, 2, 0, 0, 0);
        r92 = $r91;
        virtualinvoke r92.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r92.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("listing", r92);
        $r94 = new org.htmlcleaner.TagInfo;
        specialinvoke $r94.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("var", 0, 2, 0, 0, 0);
        r95 = $r94;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("var", r95);
        $r97 = new org.htmlcleaner.TagInfo;
        specialinvoke $r97.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("br", 1, 2, 0, 0, 0);
        r98 = $r97;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("br", r98);
        $r100 = new org.htmlcleaner.TagInfo;
        specialinvoke $r100.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("wbr", 1, 2, 0, 0, 0);
        r101 = $r100;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("wbr", r101);
        $r103 = new org.htmlcleaner.TagInfo;
        specialinvoke $r103.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("nobr", 0, 2, 0, 0, 0);
        r104 = $r103;
        virtualinvoke r104.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("nobr");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("nobr", r104);
        $r106 = new org.htmlcleaner.TagInfo;
        specialinvoke $r106.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("xmp", 2, 2, 0, 0, 0);
        r107 = $r106;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("xmp", r107);
        $r109 = new org.htmlcleaner.TagInfo;
        specialinvoke $r109.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("a", 0, 2, 0, 0, 0);
        r110 = $r109;
        virtualinvoke r110.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("a");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", r110);
        $r112 = new org.htmlcleaner.TagInfo;
        specialinvoke $r112.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("base", 1, 1, 0, 0, 0);
        r113 = $r112;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("base", r113);
        $r115 = new org.htmlcleaner.TagInfo;
        specialinvoke $r115.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("img", 1, 2, 0, 0, 0);
        r116 = $r115;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("img", r116);
        $r118 = new org.htmlcleaner.TagInfo;
        specialinvoke $r118.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("area", 1, 2, 0, 0, 0);
        r119 = $r118;
        virtualinvoke r119.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("map");
        virtualinvoke r119.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("area");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("area", r119);
        $r121 = new org.htmlcleaner.TagInfo;
        specialinvoke $r121.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("map", 0, 2, 0, 0, 0);
        r122 = $r121;
        virtualinvoke r122.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("map");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("map", r122);
        $r124 = new org.htmlcleaner.TagInfo;
        specialinvoke $r124.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("object", 0, 2, 0, 0, 0);
        r125 = $r124;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("object", r125);
        $r127 = new org.htmlcleaner.TagInfo;
        specialinvoke $r127.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("param", 1, 2, 0, 0, 0);
        r128 = $r127;
        virtualinvoke r128.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r128.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("param", r128);
        $r130 = new org.htmlcleaner.TagInfo;
        specialinvoke $r130.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("applet", 0, 2, 1, 0, 0);
        r131 = $r130;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("applet", r131);
        $r133 = new org.htmlcleaner.TagInfo;
        specialinvoke $r133.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("xml", 0, 2, 0, 0, 0);
        r134 = $r133;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("xml", r134);
        $r136 = new org.htmlcleaner.TagInfo;
        specialinvoke $r136.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("ul", 0, 2, 0, 0, 0);
        r137 = $r136;
        virtualinvoke r137.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r137.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("ul", r137);
        $r139 = new org.htmlcleaner.TagInfo;
        specialinvoke $r139.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("ol", 0, 2, 0, 0, 0);
        r140 = $r139;
        virtualinvoke r140.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r140.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("ol", r140);
        $r142 = new org.htmlcleaner.TagInfo;
        specialinvoke $r142.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("li", 0, 2, 0, 0, 0);
        r143 = $r142;
        virtualinvoke r143.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r143.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("li,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("li", r143);
        $r145 = new org.htmlcleaner.TagInfo;
        specialinvoke $r145.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dl", 0, 2, 0, 0, 0);
        r146 = $r145;
        virtualinvoke r146.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r146.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dl", r146);
        $r148 = new org.htmlcleaner.TagInfo;
        specialinvoke $r148.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dt", 0, 2, 0, 0, 0);
        r149 = $r148;
        virtualinvoke r149.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("dt,dd");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dt", r149);
        $r151 = new org.htmlcleaner.TagInfo;
        specialinvoke $r151.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dd", 0, 2, 0, 0, 0);
        r152 = $r151;
        virtualinvoke r152.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("dt,dd");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dd", r152);
        $r154 = new org.htmlcleaner.TagInfo;
        specialinvoke $r154.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("menu", 0, 2, 1, 0, 0);
        r155 = $r154;
        virtualinvoke r155.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r155.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu", r155);
        $r157 = new org.htmlcleaner.TagInfo;
        specialinvoke $r157.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("dir", 0, 2, 1, 0, 0);
        r158 = $r157;
        virtualinvoke r158.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r158.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("dir", r158);
        $r160 = new org.htmlcleaner.TagInfo;
        specialinvoke $r160.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("table", 0, 2, 0, 0, 0);
        r161 = $r160;
        virtualinvoke r161.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("tr,tbody,thead,tfoot,colgroup,col,form,caption,tr");
        virtualinvoke r161.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r161.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("tr,thead,tbody,tfoot,caption,colgroup,table,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("table", r161);
        $r163 = new org.htmlcleaner.TagInfo;
        specialinvoke $r163.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("tr", 0, 2, 0, 0, 0);
        r164 = $r163;
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>("tbody");
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("td,th");
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineHigherLevelTags(java.lang.String)>("thead,tfoot");
        virtualinvoke r164.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("tr,td,th,caption,colgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("tr", r164);
        $r166 = new org.htmlcleaner.TagInfo;
        specialinvoke $r166.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("td", 0, 2, 0, 0, 0);
        r167 = $r166;
        virtualinvoke r167.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r167.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>("tr");
        virtualinvoke r167.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,caption,colgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("td", r167);
        $r169 = new org.htmlcleaner.TagInfo;
        specialinvoke $r169.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("th", 0, 2, 0, 0, 0);
        r170 = $r169;
        virtualinvoke r170.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r170.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>("tr");
        virtualinvoke r170.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,caption,colgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("th", r170);
        $r172 = new org.htmlcleaner.TagInfo;
        specialinvoke $r172.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("tbody", 0, 2, 0, 0, 0);
        r173 = $r172;
        virtualinvoke r173.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r173.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("tr,form");
        virtualinvoke r173.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("tbody", r173);
        $r175 = new org.htmlcleaner.TagInfo;
        specialinvoke $r175.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("thead", 0, 2, 0, 0, 0);
        r176 = $r175;
        virtualinvoke r176.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r176.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("tr,form");
        virtualinvoke r176.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("thead", r176);
        $r178 = new org.htmlcleaner.TagInfo;
        specialinvoke $r178.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("tfoot", 0, 2, 0, 0, 0);
        r179 = $r178;
        virtualinvoke r179.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r179.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("tr,form");
        virtualinvoke r179.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("tfoot", r179);
        $r181 = new org.htmlcleaner.TagInfo;
        specialinvoke $r181.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("col", 1, 2, 0, 0, 0);
        r182 = $r181;
        virtualinvoke r182.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("col", r182);
        $r184 = new org.htmlcleaner.TagInfo;
        specialinvoke $r184.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("colgroup", 0, 2, 0, 0, 0);
        r185 = $r184;
        virtualinvoke r185.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r185.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("col");
        virtualinvoke r185.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("colgroup", r185);
        $r187 = new org.htmlcleaner.TagInfo;
        specialinvoke $r187.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("caption", 0, 2, 0, 0, 0);
        r188 = $r187;
        virtualinvoke r188.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("table");
        virtualinvoke r188.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("td,th,tr,tbody,thead,tfoot,caption,colgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("caption", r188);
        $r190 = new org.htmlcleaner.TagInfo;
        specialinvoke $r190.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("form", 0, 2, 0, 0, 1);
        r191 = $r190;
        virtualinvoke r191.<org.htmlcleaner.TagInfo: void defineForbiddenTags(java.lang.String)>("form");
        virtualinvoke r191.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r191.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("option,optgroup,textarea,select,fieldset,p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("form", r191);
        $r193 = new org.htmlcleaner.TagInfo;
        specialinvoke $r193.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("input", 1, 2, 0, 0, 0);
        r194 = $r193;
        virtualinvoke r194.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("select,optgroup,option");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("input", r194);
        $r196 = new org.htmlcleaner.TagInfo;
        specialinvoke $r196.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("textarea", 0, 2, 0, 0, 0);
        r197 = $r196;
        virtualinvoke r197.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("select,optgroup,option");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("textarea", r197);
        $r199 = new org.htmlcleaner.TagInfo;
        specialinvoke $r199.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("select", 0, 2, 0, 0, 1);
        r200 = $r199;
        virtualinvoke r200.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("option,optgroup");
        virtualinvoke r200.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("option,optgroup,select");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("select", r200);
        $r202 = new org.htmlcleaner.TagInfo;
        specialinvoke $r202.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("option", 2, 2, 0, 0, 1);
        r203 = $r202;
        virtualinvoke r203.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("select");
        virtualinvoke r203.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("option");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("option", r203);
        $r205 = new org.htmlcleaner.TagInfo;
        specialinvoke $r205.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("optgroup", 0, 2, 0, 0, 1);
        r206 = $r205;
        virtualinvoke r206.<org.htmlcleaner.TagInfo: void defineFatalTags(java.lang.String)>("select");
        virtualinvoke r206.<org.htmlcleaner.TagInfo: void defineAllowedChildrenTags(java.lang.String)>("option");
        virtualinvoke r206.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("optgroup");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("optgroup", r206);
        $r208 = new org.htmlcleaner.TagInfo;
        specialinvoke $r208.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("button", 0, 2, 0, 0, 0);
        r209 = $r208;
        virtualinvoke r209.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("select,optgroup,option");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("button", r209);
        $r211 = new org.htmlcleaner.TagInfo;
        specialinvoke $r211.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("label", 0, 2, 0, 0, 0);
        r212 = $r211;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("label", r212);
        $r214 = new org.htmlcleaner.TagInfo;
        specialinvoke $r214.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("fieldset", 0, 2, 0, 0, 0);
        r215 = $r214;
        virtualinvoke r215.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r215.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("fieldset", r215);
        $r217 = new org.htmlcleaner.TagInfo;
        specialinvoke $r217.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("legend", 2, 2, 0, 0, 0);
        r218 = $r217;
        virtualinvoke r218.<org.htmlcleaner.TagInfo: void defineRequiredEnclosingTags(java.lang.String)>("fieldset");
        virtualinvoke r218.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("legend");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("legend", r218);
        $r220 = new org.htmlcleaner.TagInfo;
        specialinvoke $r220.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("isindex", 1, 2, 1, 0, 0);
        r221 = $r220;
        virtualinvoke r221.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r221.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("isindex", r221);
        $r223 = new org.htmlcleaner.TagInfo;
        specialinvoke $r223.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("script", 0, 0, 0, 0, 0);
        r224 = $r223;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("script", r224);
        $r226 = new org.htmlcleaner.TagInfo;
        specialinvoke $r226.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("noscript", 0, 0, 0, 0, 0);
        r227 = $r226;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("noscript", r227);
        $r229 = new org.htmlcleaner.TagInfo;
        specialinvoke $r229.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("b", 0, 2, 0, 0, 0);
        r230 = $r229;
        virtualinvoke r230.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("u,i,tt,sub,sup,big,small,strike,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", r230);
        $r232 = new org.htmlcleaner.TagInfo;
        specialinvoke $r232.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("i", 0, 2, 0, 0, 0);
        r233 = $r232;
        virtualinvoke r233.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,tt,sub,sup,big,small,strike,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("i", r233);
        $r235 = new org.htmlcleaner.TagInfo;
        specialinvoke $r235.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("u", 0, 2, 1, 0, 0);
        r236 = $r235;
        virtualinvoke r236.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,i,tt,sub,sup,big,small,strike,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("u", r236);
        $r238 = new org.htmlcleaner.TagInfo;
        specialinvoke $r238.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("tt", 0, 2, 0, 0, 0);
        r239 = $r238;
        virtualinvoke r239.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,sub,sup,big,small,strike,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("tt", r239);
        $r241 = new org.htmlcleaner.TagInfo;
        specialinvoke $r241.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("sub", 0, 2, 0, 0, 0);
        r242 = $r241;
        virtualinvoke r242.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sup,big,small,strike,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("sub", r242);
        $r244 = new org.htmlcleaner.TagInfo;
        specialinvoke $r244.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("sup", 0, 2, 0, 0, 0);
        r245 = $r244;
        virtualinvoke r245.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,big,small,strike,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("sup", r245);
        $r247 = new org.htmlcleaner.TagInfo;
        specialinvoke $r247.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("big", 0, 2, 0, 0, 0);
        r248 = $r247;
        virtualinvoke r248.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,small,strike,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("big", r248);
        $r250 = new org.htmlcleaner.TagInfo;
        specialinvoke $r250.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("small", 0, 2, 0, 0, 0);
        r251 = $r250;
        virtualinvoke r251.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,big,strike,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("small", r251);
        $r253 = new org.htmlcleaner.TagInfo;
        specialinvoke $r253.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("strike", 0, 2, 1, 0, 0);
        r254 = $r253;
        virtualinvoke r254.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,big,small,blink,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("strike", r254);
        $r256 = new org.htmlcleaner.TagInfo;
        specialinvoke $r256.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("blink", 0, 2, 0, 0, 0);
        r257 = $r256;
        virtualinvoke r257.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,big,small,strike,s");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("blink", r257);
        $r259 = new org.htmlcleaner.TagInfo;
        specialinvoke $r259.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("marquee", 0, 2, 0, 0, 0);
        r260 = $r259;
        virtualinvoke r260.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r260.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("marquee", r260);
        $r262 = new org.htmlcleaner.TagInfo;
        specialinvoke $r262.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("s", 0, 2, 1, 0, 0);
        r263 = $r262;
        virtualinvoke r263.<org.htmlcleaner.TagInfo: void defineCloseInsideCopyAfterTags(java.lang.String)>("b,u,i,tt,sub,sup,big,small,strike,blink");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("s", r263);
        $r265 = new org.htmlcleaner.TagInfo;
        specialinvoke $r265.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("hr", 1, 2, 0, 0, 0);
        r266 = $r265;
        virtualinvoke r266.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r266.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("hr", r266);
        $r268 = new org.htmlcleaner.TagInfo;
        specialinvoke $r268.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("font", 0, 2, 1, 0, 0);
        r269 = $r268;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("font", r269);
        $r271 = new org.htmlcleaner.TagInfo;
        specialinvoke $r271.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("basefont", 1, 2, 1, 0, 0);
        r272 = $r271;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("basefont", r272);
        $r274 = new org.htmlcleaner.TagInfo;
        specialinvoke $r274.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("center", 0, 2, 1, 0, 0);
        r275 = $r274;
        virtualinvoke r275.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r275.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("center", r275);
        $r277 = new org.htmlcleaner.TagInfo;
        specialinvoke $r277.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("comment", 0, 2, 0, 0, 0);
        r278 = $r277;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("comment", r278);
        $r280 = new org.htmlcleaner.TagInfo;
        specialinvoke $r280.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("server", 0, 2, 0, 0, 0);
        r281 = $r280;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("server", r281);
        $r283 = new org.htmlcleaner.TagInfo;
        specialinvoke $r283.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("iframe", 0, 2, 0, 0, 0);
        r284 = $r283;
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("iframe", r284);
        $r286 = new org.htmlcleaner.TagInfo;
        specialinvoke $r286.<org.htmlcleaner.TagInfo: void <init>(java.lang.String,int,int,boolean,boolean,boolean)>("embed", 1, 2, 0, 0, 0);
        r287 = $r286;
        virtualinvoke r287.<org.htmlcleaner.TagInfo: void defineCloseBeforeCopyInsideTags(java.lang.String)>("a,bdo,strong,em,q,b,i,u,tt,sub,sup,big,small,strike,s,font");
        virtualinvoke r287.<org.htmlcleaner.TagInfo: void defineCloseBeforeTags(java.lang.String)>("p,address,label,abbr,acronym,dfn,kbd,samp,var,cite,code,param,xml");
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>("embed", r287);
        return;
    }

    public org.htmlcleaner.TagInfo getTagInfo(java.lang.String)
    {
        org.htmlcleaner.DefaultTagProvider r0;
        java.lang.String r1;
        java.lang.Object $r2;
        org.htmlcleaner.TagInfo $r3;

        r0 := @this: org.htmlcleaner.DefaultTagProvider;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object get(java.lang.Object)>(r1);
        $r3 = (org.htmlcleaner.TagInfo) $r2;
        return $r3;
    }

    public void removeTagInfo(java.lang.String)
    {
        org.htmlcleaner.DefaultTagProvider r0;
        java.lang.String r1, $r2;

        r0 := @this: org.htmlcleaner.DefaultTagProvider;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object remove(java.lang.Object)>($r2);

     label0:
        return;
    }

    public void addTagInfo(org.htmlcleaner.TagInfo)
    {
        org.htmlcleaner.DefaultTagProvider r0;
        org.htmlcleaner.TagInfo r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.htmlcleaner.DefaultTagProvider;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        if r1 == null goto label0;

        $r2 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getName()>();
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke r0.<org.htmlcleaner.DefaultTagProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

     label0:
        return;
    }
}
public class org.htmlcleaner.DoctypeToken extends java.lang.Object implements org.htmlcleaner.BaseToken
{
    private java.lang.String part1;
    private java.lang.String part2;
    private java.lang.String part3;
    private java.lang.String part4;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String r1, r2, r3, r4, $r6, $r8, $r9, $r10;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        if r1 == null goto label0;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();
        goto label1;

     label0:
        $r6 = r1;

     label1:
        r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1> = $r6;
        if r2 == null goto label2;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();
        goto label3;

     label2:
        $r8 = r2;

     label3:
        r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2> = $r8;
        $r9 = specialinvoke r0.<org.htmlcleaner.DoctypeToken: java.lang.String clean(java.lang.String)>(r3);
        r0.<org.htmlcleaner.DoctypeToken: java.lang.String part3> = $r9;
        $r10 = specialinvoke r0.<org.htmlcleaner.DoctypeToken: java.lang.String clean(java.lang.String)>(r4);
        r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4> = $r10;
        return;
    }

    private java.lang.String clean(java.lang.String)
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(62, 32);
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(60, 32);
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String replace(char,char)>(38, 32);
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String replace(char,char)>(39, 32);
        r1 = virtualinvoke r5.<java.lang.String: java.lang.String replace(char,char)>(34, 32);

     label0:
        return r1;
    }

    public boolean isValid()
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1>;
        if $r1 == null goto label0;

        $r2 = "";
        $r3 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label1;

     label0:
        return 0;

     label1:
        $r4 = "public";
        $r5 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);
        if $z1 != 0 goto label2;

        $r6 = "system";
        $r7 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);
        if $z2 != 0 goto label2;

        return 0;

     label2:
        $r8 = "system";
        $r9 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        $z3 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);
        if $z3 == 0 goto label3;

        $r10 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        if $r10 == null goto label3;

        $r11 = "";
        $r12 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);
        if $z4 != 0 goto label3;

        return 0;

     label3:
        $r13 = "public";
        $r14 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        $z5 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14);
        if $z5 == 0 goto label5;

        $r15 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        if $r15 == null goto label4;

        $r16 = "";
        $r17 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);
        if $z6 == 0 goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    public java.lang.String getContent()
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27;
        java.lang.String r2, $r4, $r9, $r12, r15, $r16, $r17, $r18, $r22, r28;
        boolean $z0;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!DOCTYPE ");
        $r4 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");
        $r12 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part3>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        $r16 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        if $r16 == null goto label0;

        $r17 = "";
        $r18 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);
        if $z0 != 0 goto label0;

        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");
        $r22 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        r15 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        return r28;
    }

    public java.lang.String toString()
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        $r1 = virtualinvoke r0.<org.htmlcleaner.DoctypeToken: java.lang.String getContent()>();
        return $r1;
    }

    public java.lang.String getName()
    {
        org.htmlcleaner.DoctypeToken r0;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        return "";
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.DoctypeToken r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke r0.<org.htmlcleaner.DoctypeToken: java.lang.String getContent()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r7);
        return;
    }

    public java.lang.String getPart1()
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part1>;
        return $r1;
    }

    public java.lang.String getPart2()
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part2>;
        return $r1;
    }

    public java.lang.String getPart3()
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part3>;
        return $r1;
    }

    public java.lang.String getPart4()
    {
        org.htmlcleaner.DoctypeToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.DoctypeToken;
        $r1 = r0.<org.htmlcleaner.DoctypeToken: java.lang.String part4>;
        return $r1;
    }
}
public class org.htmlcleaner.DomSerializer extends java.lang.Object
{
    protected org.htmlcleaner.CleanerProperties props;
    protected boolean escapeXml;

    public void <init>(org.htmlcleaner.CleanerProperties, boolean)
    {
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.CleanerProperties r1;
        boolean z0;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        z0 := @parameter1: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.DomSerializer: boolean escapeXml> = 1;
        r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props> = r1;
        r0.<org.htmlcleaner.DomSerializer: boolean escapeXml> = z0;
        return;
    }

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void <init>(org.htmlcleaner.CleanerProperties,boolean)>(r1, 1);
        return;
    }

    public org.w3c.dom.Document createDOM(org.htmlcleaner.TagNode) throws javax.xml.parsers.ParserConfigurationException
    {
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.TagNode r1;
        javax.xml.parsers.DocumentBuilderFactory r2;
        org.w3c.dom.Document r3;
        org.w3c.dom.Element r4;
        javax.xml.parsers.DocumentBuilder $r5;
        java.util.List $r7;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();
        $r5 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();
        r3 = virtualinvoke $r5.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();
        r4 = specialinvoke r0.<org.htmlcleaner.DomSerializer: org.w3c.dom.Element createElement(org.htmlcleaner.TagNode,org.w3c.dom.Document)>(r1, r3);
        interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r4);
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void setAttributes(org.htmlcleaner.TagNode,org.w3c.dom.Element)>(r1, r4);
        $r7 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void createSubnodes(org.w3c.dom.Document,org.w3c.dom.Element,java.util.List)>(r3, r4, $r7);
        return r3;
    }

    private org.w3c.dom.Element createElement(org.htmlcleaner.TagNode, org.w3c.dom.Document)
    {
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.w3c.dom.Document r2;
        java.lang.String r3, r4, r6;
        boolean z0;
        java.util.Map r5;
        org.htmlcleaner.CleanerProperties $r7;
        java.lang.Object $r8, $r9;
        org.w3c.dom.Element $r10, $r11;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: org.w3c.dom.Document;
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r7 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        z0 = virtualinvoke $r7.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        r4 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        r6 = null;
        if r4 == null goto label3;

        if z0 == 0 goto label2;

        if r5 == null goto label0;

        $r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r6 = (java.lang.String) $r8;

     label0:
        if r6 != null goto label1;

        r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getNamespaceURIOnPath(java.lang.String)>(r4);

     label1:
        if r6 != null goto label5;

        r6 = r4;
        goto label5;

     label2:
        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);
        goto label5;

     label3:
        if z0 == 0 goto label5;

        if r5 == null goto label4;

        $r9 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("");
        r6 = (java.lang.String) $r9;

     label4:
        if r6 != null goto label5;

        r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getNamespaceURIOnPath(java.lang.String)>(r4);

     label5:
        if z0 == 0 goto label6;

        if r6 == null goto label6;

        $r10 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r6, r3);
        return $r10;

     label6:
        $r11 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r3);
        return $r11;
    }

    private void setAttributes(org.htmlcleaner.TagNode, org.w3c.dom.Element)
    {
        org.htmlcleaner.DomSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.w3c.dom.Element r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, r6, r7, r8, $r16;
        java.util.Map $r9;
        java.util.Set $r10;
        boolean $z0, $z1, $z2;
        java.lang.Object $r11, $r12, $r13;
        org.htmlcleaner.CleanerProperties $r14, $r15;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: org.w3c.dom.Element;
        $r9 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r11;
        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        r5 = (java.lang.String) $r12;
        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r6 = (java.lang.String) $r13;
        $z1 = r0.<org.htmlcleaner.DomSerializer: boolean escapeXml>;
        if $z1 == 0 goto label1;

        $r14 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        r6 = staticinvoke <org.htmlcleaner.Utils: java.lang.String escapeXml(java.lang.String,org.htmlcleaner.CleanerProperties,boolean)>(r6, $r14, 1);

     label1:
        r7 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r5);
        if r7 == null goto label4;

        $r15 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        $z2 = virtualinvoke $r15.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        if $z2 == 0 goto label3;

        r8 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getNamespaceURIOnPath(java.lang.String)>(r7);
        if r8 != null goto label2;

        r8 = r7;

     label2:
        interfaceinvoke r2.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(r8, r5, r6);
        goto label5;

     label3:
        $r16 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r5);
        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r16, r6);
        goto label5;

     label4:
        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>(r5, r6);

     label5:
        goto label0;

     label6:
        return;
    }

    private void createSubnodes(org.w3c.dom.Document, org.w3c.dom.Element, java.util.List)
    {
        org.htmlcleaner.DomSerializer r0;
        org.w3c.dom.Document r1;
        org.w3c.dom.Element r2, r21;
        java.util.List r3, $r22, r24;
        java.util.Iterator r4;
        java.lang.Object r5;
        org.htmlcleaner.CommentNode r6;
        org.w3c.dom.Comment r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.StringBuilder $r8;
        java.lang.String $r9, r11, r12, $r14, $r15;
        org.htmlcleaner.CleanerProperties $r13, $r16;
        org.w3c.dom.Text $r18;
        org.htmlcleaner.TagNode r20;

        r0 := @this: org.htmlcleaner.DomSerializer;
        r1 := @parameter0: org.w3c.dom.Document;
        r2 := @parameter1: org.w3c.dom.Element;
        r3 := @parameter2: java.util.List;
        if r3 == null goto label11;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label11;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $z2 = r5 instanceof org.htmlcleaner.CommentNode;
        if $z2 == 0 goto label1;

        r6 = (org.htmlcleaner.CommentNode) r5;
        $r8 = virtualinvoke r6.<org.htmlcleaner.CommentNode: java.lang.StringBuilder getContent()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r7 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r9);
        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);
        goto label10;

     label1:
        $z3 = r5 instanceof org.htmlcleaner.ContentNode;
        if $z3 == 0 goto label8;

        r11 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNodeName()>();
        r12 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        $r13 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        $z4 = virtualinvoke $r13.<org.htmlcleaner.CleanerProperties: boolean isUseCdataForScriptAndStyle()>();
        if $z4 == 0 goto label3;

        $r14 = "script";
        $z5 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r11);
        if $z5 != 0 goto label2;

        $r15 = "style";
        $z6 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r11);
        if $z6 == 0 goto label3;

     label2:
        $z7 = 1;
        goto label4;

     label3:
        $z7 = 0;

     label4:
        z0 = $z7;
        $z8 = r0.<org.htmlcleaner.DomSerializer: boolean escapeXml>;
        if $z8 == 0 goto label5;

        if z0 != 0 goto label5;

        $r16 = r0.<org.htmlcleaner.DomSerializer: org.htmlcleaner.CleanerProperties props>;
        r12 = staticinvoke <org.htmlcleaner.Utils: java.lang.String escapeXml(java.lang.String,org.htmlcleaner.CleanerProperties,boolean)>(r12, $r16, 1);

     label5:
        if z0 == 0 goto label6;

        $r18 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>(r12);
        goto label7;

     label6:
        $r18 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r12);

     label7:
        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);
        goto label10;

     label8:
        $z9 = r5 instanceof org.htmlcleaner.TagNode;
        if $z9 == 0 goto label9;

        r20 = (org.htmlcleaner.TagNode) r5;
        r21 = specialinvoke r0.<org.htmlcleaner.DomSerializer: org.w3c.dom.Element createElement(org.htmlcleaner.TagNode,org.w3c.dom.Document)>(r20, r1);
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void setAttributes(org.htmlcleaner.TagNode,org.w3c.dom.Element)>(r20, r21);
        $r22 = virtualinvoke r20.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void createSubnodes(org.w3c.dom.Document,org.w3c.dom.Element,java.util.List)>(r1, r21, $r22);
        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r21);
        goto label10;

     label9:
        $z10 = r5 instanceof java.util.List;
        if $z10 == 0 goto label10;

        r24 = (java.util.List) r5;
        specialinvoke r0.<org.htmlcleaner.DomSerializer: void createSubnodes(org.w3c.dom.Document,org.w3c.dom.Element,java.util.List)>(r1, r2, r24);

     label10:
        goto label0;

     label11:
        return;
    }
}
public class org.htmlcleaner.EndTagToken extends org.htmlcleaner.TagToken
{

    public void <init>()
    {
        org.htmlcleaner.EndTagToken r0;

        r0 := @this: org.htmlcleaner.EndTagToken;
        specialinvoke r0.<org.htmlcleaner.TagToken: void <init>()>();
        return;
    }

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.EndTagToken r0;
        java.lang.String r1, $r3;

        r0 := @this: org.htmlcleaner.EndTagToken;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        specialinvoke r0.<org.htmlcleaner.TagToken: void <init>(java.lang.String)>($r3);
        return;
    }

    void setAttribute(java.lang.String, java.lang.String)
    {
        org.htmlcleaner.EndTagToken r0;
        java.lang.String r1, r2;

        r0 := @this: org.htmlcleaner.EndTagToken;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        return;
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer)
    {
        org.htmlcleaner.EndTagToken r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;

        r0 := @this: org.htmlcleaner.EndTagToken;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        return;
    }
}
final class org.htmlcleaner.HtmlCleaner$1 extends org.htmlcleaner.HtmlTokenizer
{
    final org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues;
    final org.htmlcleaner.HtmlCleaner this$0;

    void <init>(org.htmlcleaner.HtmlCleaner, java.io.Reader, org.htmlcleaner.CleanerProperties, org.htmlcleaner.CleanerTransformations, org.htmlcleaner.ITagInfoProvider, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$1 r0;
        org.htmlcleaner.HtmlCleaner r1;
        java.io.Reader r2;
        org.htmlcleaner.CleanerProperties r3;
        org.htmlcleaner.CleanerTransformations r4;
        org.htmlcleaner.ITagInfoProvider r5;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner$1;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r2 := @parameter1: java.io.Reader;
        r3 := @parameter2: org.htmlcleaner.CleanerProperties;
        r4 := @parameter3: org.htmlcleaner.CleanerTransformations;
        r5 := @parameter4: org.htmlcleaner.ITagInfoProvider;
        r6 := @parameter5: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner this$0> = r1;
        r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues> = r6;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void <init>(java.io.Reader,org.htmlcleaner.CleanerProperties,org.htmlcleaner.CleanerTransformations,org.htmlcleaner.ITagInfoProvider)>(r2, r3, r4, r5);
        return;
    }

    void makeTree(java.util.List)
    {
        org.htmlcleaner.HtmlCleaner$1 r0;
        java.util.List r1;
        org.htmlcleaner.HtmlCleaner $r2;
        int $i0, $i1;
        java.util.ListIterator $r3;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner$1;
        r1 := @parameter0: java.util.List;
        $r2 = r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner this$0>;
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        $i1 = $i0 - 1;
        $r3 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator(int)>($i1);
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues>;
        virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: void makeTree(java.util.List,java.util.ListIterator,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, $r3, $r4);
        return;
    }

    org.htmlcleaner.TagNode createTagNode(java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$1 r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues $r3;
        org.htmlcleaner.TagNode $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner$1;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner this$0>;
        $r3 = r0.<org.htmlcleaner.HtmlCleaner$1: org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues>;
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode access$1400(org.htmlcleaner.HtmlCleaner,java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>($r2, r1, $r3);
        return $r4;
    }
}
class org.htmlcleaner.HtmlCleaner$CleanTimeValues extends java.lang.Object
{
    private org.htmlcleaner.HtmlCleaner$OpenTags _openTags;
    private boolean _headOpened;
    private boolean _bodyOpened;
    private java.util.Set _headTags;
    private java.util.Set allTags;
    private org.htmlcleaner.TagNode htmlNode;
    private org.htmlcleaner.TagNode bodyNode;
    private org.htmlcleaner.TagNode headNode;
    private org.htmlcleaner.TagNode rootNode;
    private java.util.Set pruneTagSet;
    private java.util.Set pruneNodeSet;
    final org.htmlcleaner.HtmlCleaner this$0;

    private void <init>(org.htmlcleaner.HtmlCleaner)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.HtmlCleaner r1;
        java.util.LinkedHashSet $r2;
        java.util.TreeSet $r3;
        java.util.HashSet $r4, $r5;

        r0 := @this: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _headOpened> = 0;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _bodyOpened> = 0;
        $r2 = new java.util.LinkedHashSet;
        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set _headTags> = $r2;
        $r3 = new java.util.TreeSet;
        specialinvoke $r3.<java.util.TreeSet: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set allTags> = $r3;
        $r4 = new java.util.HashSet;
        specialinvoke $r4.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set pruneTagSet> = $r4;
        $r5 = new java.util.HashSet;
        specialinvoke $r5.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set pruneNodeSet> = $r5;
        return;
    }

    void <init>(org.htmlcleaner.HtmlCleaner, org.htmlcleaner.HtmlCleaner$1)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.HtmlCleaner r1;
        org.htmlcleaner.HtmlCleaner$1 r2;

        r0 := @this: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$1;
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: void <init>(org.htmlcleaner.HtmlCleaner)>(r1);
        return;
    }

    static org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.HtmlCleaner$OpenTags r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.HtmlCleaner$OpenTags;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags _openTags> = r1;
        return r1;
    }

    static boolean access$602(org.htmlcleaner.HtmlCleaner$CleanTimeValues, boolean)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        boolean z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        z0 := @parameter1: boolean;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _headOpened> = z0;
        return z0;
    }

    static boolean access$702(org.htmlcleaner.HtmlCleaner$CleanTimeValues, boolean)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        boolean z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        z0 := @parameter1: boolean;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _bodyOpened> = z0;
        return z0;
    }

    static java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        java.util.Set $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set _headTags>;
        return $r1;
    }

    static java.util.Set access$900(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        java.util.Set $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set allTags>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1002(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.TagNode;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode htmlNode> = r1;
        return r1;
    }

    static org.htmlcleaner.TagNode access$1102(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.TagNode;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode bodyNode> = r1;
        return r1;
    }

    static org.htmlcleaner.TagNode access$1202(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.TagNode;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode headNode> = r1;
        return r1;
    }

    static org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues, org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r1 := @parameter1: org.htmlcleaner.TagNode;
        r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode rootNode> = r1;
        return r1;
    }

    static org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode headNode>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode htmlNode>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode bodyNode>;
        return $r1;
    }

    static java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        java.util.Set $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set pruneNodeSet>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1300(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.TagNode $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode rootNode>;
        return $r1;
    }

    static java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        java.util.Set $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set pruneTagSet>;
        return $r1;
    }

    static org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        org.htmlcleaner.HtmlCleaner$OpenTags $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags _openTags>;
        return $r1;
    }

    static boolean access$600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $z0 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _headOpened>;
        return $z0;
    }

    static boolean access$700(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r0;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $z0 = r0.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean _bodyOpened>;
        return $z0;
    }
}
class org.htmlcleaner.HtmlCleaner$OpenTags extends java.lang.Object
{
    private java.util.List list;
    private org.htmlcleaner.HtmlCleaner$TagPos last;
    private java.util.Set set;
    final org.htmlcleaner.HtmlCleaner this$0;

    private void <init>(org.htmlcleaner.HtmlCleaner)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner r1;
        java.util.ArrayList $r2;
        java.util.HashSet $r3;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list> = $r2;
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last> = null;
        $r3 = new java.util.HashSet;
        specialinvoke $r3.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.Set set> = $r3;
        return;
    }

    private boolean isEmpty()
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();
        return $z0;
    }

    private void addTag(java.lang.String, int)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        int i0;
        org.htmlcleaner.HtmlCleaner$TagPos $r2, $r5;
        org.htmlcleaner.HtmlCleaner $r3;
        java.util.List $r4;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = new org.htmlcleaner.HtmlCleaner$TagPos;
        $r3 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner this$0>;
        specialinvoke $r2.<org.htmlcleaner.HtmlCleaner$TagPos: void <init>(org.htmlcleaner.HtmlCleaner,int,java.lang.String)>($r3, i0, r1);
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last> = $r2;
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $r5 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last>;
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);
        $r6 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.Set set>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r1);
        return;
    }

    private void removeTag(java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1, $r7;
        java.util.ListIterator r2;
        org.htmlcleaner.HtmlCleaner$TagPos r3, $r10;
        java.util.List $r4, $r5, $r9, $r11, $r12;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6, $r13;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $r5 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();
        r2 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label0:
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        r3 = (org.htmlcleaner.HtmlCleaner$TagPos) $r6;
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r3);
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        if $z1 == 0 goto label1;

        interfaceinvoke r2.<java.util.ListIterator: void remove()>();
        goto label2;

     label1:
        goto label0;

     label2:
        $r9 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $z2 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();
        if $z2 == 0 goto label3;

        $r10 = null;
        goto label4;

     label3:
        $r11 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $r12 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();
        $i2 = $i1 - 1;
        $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i2);
        $r10 = (org.htmlcleaner.HtmlCleaner$TagPos) $r13;

     label4:
        r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last> = $r10;
        return;
    }

    private org.htmlcleaner.HtmlCleaner$TagPos findFirstTagPos()
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.List $r1, $r3;
        boolean $z0;
        org.htmlcleaner.HtmlCleaner$TagPos $r2;
        java.lang.Object $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r2 = null;
        goto label1;

     label0:
        $r3 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);
        $r2 = (org.htmlcleaner.HtmlCleaner$TagPos) $r4;

     label1:
        return $r2;
    }

    private org.htmlcleaner.HtmlCleaner$TagPos getLastTagPos()
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos $r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos last>;
        return $r1;
    }

    private org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1, r3, $r11, $r12;
        java.util.ListIterator r2;
        org.htmlcleaner.TagInfo r4;
        org.htmlcleaner.HtmlCleaner$TagPos r5;
        java.util.List $r6, $r7;
        int $i0;
        org.htmlcleaner.HtmlCleaner $r8;
        org.htmlcleaner.ITagInfoProvider $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label3;

        $r6 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $r7 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();
        r2 = interfaceinvoke $r6.<java.util.List: java.util.ListIterator listIterator(int)>($i0);
        r3 = null;
        $r8 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner this$0>;
        $r9 = staticinvoke <org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider access$000(org.htmlcleaner.HtmlCleaner)>($r8);
        r4 = interfaceinvoke $r9.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r1);
        if r4 == null goto label0;

        r3 = virtualinvoke r4.<org.htmlcleaner.TagInfo: java.lang.String getFatalTag()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();
        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        r5 = (org.htmlcleaner.HtmlCleaner$TagPos) $r10;
        $r11 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r5);
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);
        if $z1 == 0 goto label1;

        return r5;

     label1:
        if r3 == null goto label2;

        $r12 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r5);
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r12);
        if $z2 == 0 goto label2;

        return null;

     label2:
        goto label0;

     label3:
        return null;
    }

    private boolean tagExists(java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner$TagPos r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        r2 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String)>(r1);
        if r2 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private org.htmlcleaner.HtmlCleaner$TagPos findTagToPlaceRubbish()
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos r1, r2;
        java.util.ListIterator r3;
        boolean $z0, $z1, $z2;
        java.util.List $r4, $r5;
        int $i0;
        java.lang.Object $r6;
        org.htmlcleaner.TagInfo $r7, $r8;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 = null;
        r2 = null;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean isEmpty()>();
        if $z0 != 0 goto label3;

        $r4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $r5 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();
        r3 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label0:
        $z1 = interfaceinvoke r3.<java.util.ListIterator: boolean hasPrevious()>();
        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();
        r1 = (org.htmlcleaner.HtmlCleaner$TagPos) $r6;
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r1);
        if $r7 == null goto label1;

        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r1);
        $z2 = virtualinvoke $r8.<org.htmlcleaner.TagInfo: boolean allowsAnything()>();
        if $z2 == 0 goto label2;

     label1:
        if r2 == null goto label2;

        return r2;

     label2:
        r2 = r1;
        goto label0;

     label3:
        return r1;
    }

    private boolean tagEncountered(java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.Set set>;
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    private boolean someAlreadyOpen(java.util.Set)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.Set r1;
        java.util.Iterator r2;
        org.htmlcleaner.HtmlCleaner$TagPos r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: java.util.Set;
        $r4 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.htmlcleaner.HtmlCleaner$TagPos) $r5;
        $r6 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r3);
        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r6);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    void <init>(org.htmlcleaner.HtmlCleaner, org.htmlcleaner.HtmlCleaner$1)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner r1;
        org.htmlcleaner.HtmlCleaner$1 r2;

        r0 := @this: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$1;
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: void <init>(org.htmlcleaner.HtmlCleaner)>(r1);
        return;
    }

    static boolean access$1700(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean tagExists(java.lang.String)>(r1);
        return $z0;
    }

    static org.htmlcleaner.HtmlCleaner$TagPos access$1800(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner$TagPos $r2;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        $r2 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String)>(r1);
        return $r2;
    }

    static java.util.List access$2000(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.List $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List list>;
        return $r1;
    }

    static org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        $r1 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos getLastTagPos()>();
        return $r1;
    }

    static org.htmlcleaner.HtmlCleaner$TagPos access$2200(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        $r1 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos findTagToPlaceRubbish()>();
        return $r1;
    }

    static boolean access$2300(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean isEmpty()>();
        return $z0;
    }

    static boolean access$2400(org.htmlcleaner.HtmlCleaner$OpenTags, java.util.Set)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.util.Set r1;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.util.Set;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean someAlreadyOpen(java.util.Set)>(r1);
        return $z0;
    }

    static boolean access$2500(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: boolean tagEncountered(java.lang.String)>(r1);
        return $z0;
    }

    static void access$2600(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String, int)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: void addTag(java.lang.String,int)>(r1, i0);
        return;
    }

    static void access$2700(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        java.lang.String r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: void removeTag(java.lang.String)>(r1);
        return;
    }

    static org.htmlcleaner.HtmlCleaner$TagPos access$2800(org.htmlcleaner.HtmlCleaner$OpenTags)
    {
        org.htmlcleaner.HtmlCleaner$OpenTags r0;
        org.htmlcleaner.HtmlCleaner$TagPos $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$OpenTags;
        $r1 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos findFirstTagPos()>();
        return $r1;
    }
}
class org.htmlcleaner.HtmlCleaner$TagPos extends java.lang.Object
{
    private int position;
    private java.lang.String name;
    private org.htmlcleaner.TagInfo info;
    final org.htmlcleaner.HtmlCleaner this$0;

    void <init>(org.htmlcleaner.HtmlCleaner, int, java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner$TagPos r0;
        org.htmlcleaner.HtmlCleaner r1;
        int i0;
        java.lang.String r2;
        org.htmlcleaner.ITagInfoProvider $r3;
        org.htmlcleaner.TagInfo $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner$TagPos;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.HtmlCleaner this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: int position> = i0;
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String name> = r2;
        $r3 = staticinvoke <org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider access$000(org.htmlcleaner.HtmlCleaner)>(r1);
        $r4 = interfaceinvoke $r3.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r2);
        r0.<org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo info> = $r4;
        return;
    }

    static java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)
    {
        org.htmlcleaner.HtmlCleaner$TagPos r0;
        java.lang.String $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$TagPos;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String name>;
        return $r1;
    }

    static org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)
    {
        org.htmlcleaner.HtmlCleaner$TagPos r0;
        org.htmlcleaner.TagInfo $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$TagPos;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo info>;
        return $r1;
    }

    static int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)
    {
        org.htmlcleaner.HtmlCleaner$TagPos r0;
        int $i0;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner$TagPos;
        $i0 = r0.<org.htmlcleaner.HtmlCleaner$TagPos: int position>;
        return $i0;
    }
}
public class org.htmlcleaner.HtmlCleaner extends java.lang.Object
{
    public static final java.lang.String DEFAULT_CHARSET;
    private org.htmlcleaner.CleanerProperties properties;
    private org.htmlcleaner.ITagInfoProvider tagInfoProvider;
    private org.htmlcleaner.CleanerTransformations transformations;

    public void <init>()
    {
        org.htmlcleaner.HtmlCleaner r0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.CleanerProperties)>(null, null);
        return;
    }

    public void <init>(org.htmlcleaner.ITagInfoProvider)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.ITagInfoProvider r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.ITagInfoProvider;
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.CleanerProperties)>(r1, null);
        return;
    }

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void <init>(org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.CleanerProperties)>(null, r1);
        return;
    }

    public void <init>(org.htmlcleaner.ITagInfoProvider, org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.ITagInfoProvider r1, $r4, $r8;
        org.htmlcleaner.CleanerProperties r2, $r6, $r7;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.ITagInfoProvider;
        r2 := @parameter1: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerTransformations transformations> = null;
        if r1 != null goto label0;

        $r4 = staticinvoke <org.htmlcleaner.DefaultTagProvider: org.htmlcleaner.DefaultTagProvider getInstance()>();
        goto label1;

     label0:
        $r4 = r1;

     label1:
        r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider> = $r4;
        if r2 != null goto label2;

        $r6 = new org.htmlcleaner.CleanerProperties;
        specialinvoke $r6.<org.htmlcleaner.CleanerProperties: void <init>()>();
        goto label3;

     label2:
        $r6 = r2;

     label3:
        r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties> = $r6;
        $r7 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $r8 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        $r7.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider tagInfoProvider> = $r8;
        return;
    }

    public org.htmlcleaner.TagNode clean(java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.String r1;
        java.io.StringReader $r2;
        java.io.IOException r3, $r5;
        org.htmlcleaner.TagNode $r4;
        org.htmlcleaner.HtmlCleanerException $r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.lang.String;

     label0:
        $r2 = new java.io.StringReader;
        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>(r1);
        $r4 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader)>($r2);

     label1:
        return $r4;

     label2:
        $r5 := @caughtexception;
        r3 = $r5;
        $r6 = new org.htmlcleaner.HtmlCleanerException;
        specialinvoke $r6.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.Throwable)>(r3);
        throw $r6;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public org.htmlcleaner.TagNode clean(java.io.File, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.io.File r1;
        java.lang.String r2;
        java.io.FileInputStream $r3, r4;
        java.io.InputStreamReader r5, $r6;
        org.htmlcleaner.TagNode $r7;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.lang.String;
        $r3 = new java.io.FileInputStream;
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(r1);
        r4 = $r3;
        $r6 = new java.io.InputStreamReader;
        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r4, r2);
        r5 = $r6;
        $r7 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader)>(r5);
        return $r7;
    }

    public org.htmlcleaner.TagNode clean(java.io.File) throws java.io.IOException
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.io.File r1;
        java.lang.String $r2;
        org.htmlcleaner.TagNode $r3;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.File;
        $r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        $r3 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.File,java.lang.String)>(r1, $r2);
        return $r3;
    }

    public org.htmlcleaner.TagNode clean(java.net.URL, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.net.URL r1;
        java.lang.String r2, $r4;
        java.net.URLConnection r3;
        java.io.InputStream $r5;
        org.htmlcleaner.TagNode $r6;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.net.URL;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();
        if r2 != null goto label0;

        $r4 = virtualinvoke r3.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Type");
        r2 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getCharsetFromContentTypeString(java.lang.String)>($r4);

     label0:
        if r2 != null goto label1;

        r2 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getCharsetFromContent(java.net.URL)>(r1);

     label1:
        if r2 != null goto label2;

        r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;

     label2:
        $r5 = virtualinvoke r1.<java.net.URL: java.io.InputStream openStream()>();
        $r6 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream,java.lang.String)>($r5, r2);
        return $r6;
    }

    public org.htmlcleaner.TagNode clean(java.net.URL) throws java.io.IOException
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.net.URL r1;
        org.htmlcleaner.TagNode $r2;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.net.URL;
        $r2 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.net.URL,java.lang.String)>(r1, null);
        return $r2;
    }

    public org.htmlcleaner.TagNode clean(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.io.InputStream r1;
        java.lang.String r2;
        java.io.InputStreamReader $r3;
        org.htmlcleaner.TagNode $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.lang.String;
        $r3 = new java.io.InputStreamReader;
        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, r2);
        $r4 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader)>($r3);
        return $r4;
    }

    public org.htmlcleaner.TagNode clean(java.io.InputStream) throws java.io.IOException
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.io.InputStream r1;
        java.lang.String $r2;
        org.htmlcleaner.TagNode $r3;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        $r3 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream,java.lang.String)>(r1, $r2);
        return $r3;
    }

    public org.htmlcleaner.TagNode clean(java.io.Reader) throws java.io.IOException
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.io.Reader r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues $r2;
        org.htmlcleaner.TagNode $r3;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.Reader;
        $r2 = new org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        specialinvoke $r2.<org.htmlcleaner.HtmlCleaner$CleanTimeValues: void <init>(org.htmlcleaner.HtmlCleaner,org.htmlcleaner.HtmlCleaner$1)>(r0, null);
        $r3 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, $r2);
        return $r3;
    }

    public org.htmlcleaner.TagNode clean(java.io.Reader, org.htmlcleaner.HtmlCleaner$CleanTimeValues) throws java.io.IOException
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.io.Reader r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.HtmlCleaner$OpenTags $r3;
        org.htmlcleaner.HtmlCleaner$1 r4, $r25;
        java.util.List r5;
        java.util.Iterator r6;
        org.htmlcleaner.TagNode r7, r8, $r14, $r16, $r18, $r21, $r22, $r23, $r24, $r33, $r35;
        java.util.Set $r10, $r11, $r29, $r30, $r31;
        org.htmlcleaner.CleanerProperties $r12, $r26;
        java.lang.String $r13;
        org.htmlcleaner.CleanerTransformations $r27;
        org.htmlcleaner.ITagInfoProvider $r28;
        boolean $z2, $z3;
        java.lang.Object $r32;
        org.htmlcleaner.DoctypeToken $r34;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.io.Reader;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r3 = new org.htmlcleaner.HtmlCleaner$OpenTags;
        specialinvoke $r3.<org.htmlcleaner.HtmlCleaner$OpenTags: void <init>(org.htmlcleaner.HtmlCleaner,org.htmlcleaner.HtmlCleaner$1)>(r0, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.HtmlCleaner$OpenTags)>(r2, $r3);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$602(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean)>(r2, 0);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$702(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean)>(r2, 0);
        $r10 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        interfaceinvoke $r10.<java.util.Set: void clear()>();
        $r11 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$900(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        interfaceinvoke $r11.<java.util.Set: void clear()>();
        $r12 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $r13 = $r12.<org.htmlcleaner.CleanerProperties: java.lang.String pruneTags>;
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void setPruneTags(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>($r13, r2);
        $r14 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>("html", r2);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1002(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r2, $r14);
        $r16 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>("body", r2);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1102(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r2, $r16);
        $r18 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>("head", r2);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1202(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r2, $r18);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r2, null);
        $r21 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r22 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        virtualinvoke $r21.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>($r22);
        $r23 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r24 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        virtualinvoke $r23.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>($r24);
        $r25 = new org.htmlcleaner.HtmlCleaner$1;
        $r26 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $r27 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerTransformations transformations>;
        $r28 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        specialinvoke $r25.<org.htmlcleaner.HtmlCleaner$1: void <init>(org.htmlcleaner.HtmlCleaner,java.io.Reader,org.htmlcleaner.CleanerProperties,org.htmlcleaner.CleanerTransformations,org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r0, r1, $r26, $r27, $r28, r2);
        r4 = $r25;
        virtualinvoke r4.<org.htmlcleaner.HtmlTokenizer: void start()>();
        r5 = virtualinvoke r4.<org.htmlcleaner.HtmlTokenizer: java.util.List getTokenList()>();
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void closeAll(java.util.List,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r5, r2);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void createDocumentNodes(java.util.List,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r5, r2);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void calculateRootNode(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r29 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        if $r29 == null goto label2;

        $r30 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $z2 = interfaceinvoke $r30.<java.util.Set: boolean isEmpty()>();
        if $z2 != 0 goto label2;

        $r31 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        r6 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label2;

        $r32 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (org.htmlcleaner.TagNode) $r32;
        r8 = virtualinvoke r7.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        if r8 == null goto label1;

        virtualinvoke r8.<org.htmlcleaner.TagNode: boolean removeChild(java.lang.Object)>(r7);

     label1:
        goto label0;

     label2:
        $r33 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1300(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r34 = virtualinvoke r4.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.DoctypeToken getDocType()>();
        virtualinvoke $r33.<org.htmlcleaner.TagNode: void setDocType(org.htmlcleaner.DoctypeToken)>($r34);
        $r35 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1300(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        return $r35;
    }

    private org.htmlcleaner.TagNode createTagNode(java.lang.String, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.String r1, $r7;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.TagNode $r3, r4;
        java.util.Set $r5, $r6, $r8;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r3 = new org.htmlcleaner.TagNode;
        specialinvoke $r3.<org.htmlcleaner.TagNode: void <init>(java.lang.String)>(r1);
        r4 = $r3;
        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        if $r5 == null goto label0;

        if r1 == null goto label0;

        $r6 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);
        if $z0 == 0 goto label0;

        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r4);

     label0:
        return r4;
    }

    private org.htmlcleaner.TagNode makeTagNodeCopy(org.htmlcleaner.TagNode, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1, r3;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.util.Set $r4, $r5, $r7;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode makeCopy()>();
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        if $r4 == null goto label0;

        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);
        if $z0 == 0 goto label0;

        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label0:
        return r3;
    }

    private void calculateRootNode(org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r1;
        java.util.List r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        org.htmlcleaner.TagNode $r5, $r8, $r9;
        org.htmlcleaner.CleanerProperties $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r1, $r5);
        $r7 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z0 = $r7.<org.htmlcleaner.CleanerProperties: boolean omitHtmlEnvelope>;
        if $z0 == 0 goto label2;

        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1);
        r2 = virtualinvoke $r8.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        if r2 == null goto label2;

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $z2 = r4 instanceof org.htmlcleaner.TagNode;
        if $z2 == 0 goto label1;

        $r9 = (org.htmlcleaner.TagNode) r4;
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode)>(r1, $r9);
        goto label2;

     label1:
        goto label0;

     label2:
        return;
    }

    private void addAttributesToTag(org.htmlcleaner.TagNode, java.util.Map)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1;
        java.util.Map r2, r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.String r6, r7;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10, $r11;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.util.Map;
        if r2 == null goto label2;

        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r9;
        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        r6 = (java.lang.String) $r10;
        $z1 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);
        if $z1 != 0 goto label1;

        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        r7 = (java.lang.String) $r11;
        virtualinvoke r1.<org.htmlcleaner.TagNode: void setAttribute(java.lang.String,java.lang.String)>(r6, r7);

     label1:
        goto label0;

     label2:
        return;
    }

    private boolean isFatalTagSatisfied(org.htmlcleaner.TagInfo, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagInfo r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.lang.String r3;
        boolean $z0;
        org.htmlcleaner.HtmlCleaner$OpenTags $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        if r1 == null goto label2;

        r3 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getFatalTag()>();
        if r3 != null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $z0 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: boolean access$1700(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r4, r3);

     label1:
        return $z0;

     label2:
        return 1;
    }

    private boolean mustAddRequiredParent(org.htmlcleaner.TagInfo, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagInfo r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.lang.String r3, r4, $r14;
        int i0, $i1, $i2;
        org.htmlcleaner.HtmlCleaner$TagPos r5, r6;
        org.htmlcleaner.HtmlCleaner$OpenTags $r7, $r8, $r10;
        java.util.List $r9, $r11;
        java.util.ListIterator r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r13;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        if r1 == null goto label6;

        r3 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getRequiredParent()>();
        if r3 == null goto label6;

        r4 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getFatalTag()>();
        i0 = -1;
        if r4 == null goto label0;

        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$1800(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r7, r4);
        if r5 == null goto label0;

        i0 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)>(r5);

     label0:
        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r9 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List access$2000(org.htmlcleaner.HtmlCleaner$OpenTags)>($r8);
        $r10 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r11 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: java.util.List access$2000(org.htmlcleaner.HtmlCleaner$OpenTags)>($r10);
        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();
        r12 = interfaceinvoke $r9.<java.util.List: java.util.ListIterator listIterator(int)>($i1);

     label1:
        $z0 = interfaceinvoke r12.<java.util.ListIterator: boolean hasPrevious()>();
        if $z0 == 0 goto label5;

        $r13 = interfaceinvoke r12.<java.util.ListIterator: java.lang.Object previous()>();
        r6 = (org.htmlcleaner.HtmlCleaner$TagPos) $r13;
        $r14 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r6);
        $z1 = virtualinvoke r1.<org.htmlcleaner.TagInfo: boolean isHigher(java.lang.String)>($r14);
        if $z1 == 0 goto label4;

        $i2 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)>(r6);
        if $i2 > i0 goto label2;

        $z2 = 1;
        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        goto label1;

     label5:
        return 1;

     label6:
        return 0;
    }

    private org.htmlcleaner.TagNode createTagNode(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        virtualinvoke r1.<org.htmlcleaner.TagNode: void setFormed()>();
        return r1;
    }

    private boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.BaseToken r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.HtmlCleaner$TagPos r3;
        org.htmlcleaner.HtmlCleaner$OpenTags $r4;
        org.htmlcleaner.TagInfo $r5, $r6;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.BaseToken;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        r3 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags)>($r4);
        if r3 == null goto label0;

        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r3);
        if $r5 == null goto label0;

        $r6 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r3);
        $z0 = virtualinvoke $r6.<org.htmlcleaner.TagInfo: boolean allowsItem(org.htmlcleaner.BaseToken)>(r1);
        return $z0;

     label0:
        return 1;
    }

    private void saveToLastOpenTag(java.util.List, org.htmlcleaner.BaseToken, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1;
        org.htmlcleaner.BaseToken r2;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r3;
        org.htmlcleaner.HtmlCleaner$TagPos r4, r5;
        org.htmlcleaner.TagNode r6;
        org.htmlcleaner.HtmlCleaner$OpenTags $r7, $r10;
        org.htmlcleaner.TagInfo $r8, $r9;
        boolean $z0;
        int $i0;
        java.lang.Object $r11;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: org.htmlcleaner.BaseToken;
        r3 := @parameter2: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags)>($r7);
        if r4 == null goto label0;

        $r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r4);
        if $r8 == null goto label0;

        $r9 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos)>(r4);
        $z0 = virtualinvoke $r9.<org.htmlcleaner.TagInfo: boolean isIgnorePermitted()>();
        if $z0 == 0 goto label0;

        return;

     label0:
        $r10 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2200(org.htmlcleaner.HtmlCleaner$OpenTags)>($r10);
        if r5 == null goto label1;

        $i0 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)>(r5);
        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);
        r6 = (org.htmlcleaner.TagNode) $r11;
        virtualinvoke r6.<org.htmlcleaner.TagNode: void addItemForMoving(org.htmlcleaner.BaseToken)>(r2);

     label1:
        return;
    }

    private boolean isStartToken(java.lang.Object)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.htmlcleaner.TagNode $r2;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.lang.Object;
        $z0 = r1 instanceof org.htmlcleaner.TagNode;
        if $z0 == 0 goto label0;

        $r2 = (org.htmlcleaner.TagNode) r1;
        $z1 = virtualinvoke $r2.<org.htmlcleaner.TagNode: boolean isFormed()>();
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    void makeTree(java.util.List, java.util.ListIterator, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1, r9, r55;
        java.util.ListIterator r2, r11;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r3;
        org.htmlcleaner.BaseToken r4;
        org.htmlcleaner.EndTagToken r5;
        java.lang.String r6, $r21, r25, $r34, $r37, $r40, $r43, r51, $r58;
        org.htmlcleaner.TagInfo r7, r27, $r32, r35;
        org.htmlcleaner.HtmlCleaner$TagPos r8, $r29, r31;
        int i0, $i1, i2, $i3, i4, $i5, $i6;
        org.htmlcleaner.TagNode r10, r13, r14, $r22, r24, $r38, $r41, $r44, r52, $r61, r64;
        java.util.ArrayList r12, $r56;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z14, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33;
        java.lang.Object $r15, $r20, $r57, $r60;
        org.htmlcleaner.ITagInfoProvider $r16, $r26, $r33;
        org.htmlcleaner.CleanerProperties $r17, $r18, $r46, $r47;
        org.htmlcleaner.HtmlCleaner$OpenTags $r19, $r28, $r30, $r48, $r50, $r65;
        java.util.Set $r36, $r49;
        java.util.Map $r39, $r42, $r45;
        java.util.Iterator r59;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: java.util.ListIterator;
        r3 := @parameter2: org.htmlcleaner.HtmlCleaner$CleanTimeValues;

     label0:
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label38;

        $r15 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();
        r4 = (org.htmlcleaner.BaseToken) $r15;
        $z1 = r4 instanceof org.htmlcleaner.EndTagToken;
        if $z1 == 0 goto label10;

        r5 = (org.htmlcleaner.EndTagToken) r4;
        r6 = virtualinvoke r5.<org.htmlcleaner.EndTagToken: java.lang.String getName()>();
        $r16 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        r7 = interfaceinvoke $r16.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r6);
        if r7 != null goto label1;

        $r17 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z2 = $r17.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags>;
        if $z2 != 0 goto label2;

     label1:
        if r7 == null goto label3;

        $z3 = virtualinvoke r7.<org.htmlcleaner.TagInfo: boolean isDeprecated()>();
        if $z3 == 0 goto label3;

        $r18 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z4 = $r18.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags>;
        if $z4 == 0 goto label3;

     label2:
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label9;

     label3:
        if r7 == null goto label4;

        $z5 = virtualinvoke r7.<org.htmlcleaner.TagInfo: boolean allowsBody()>();
        if $z5 != 0 goto label4;

        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label9;

     label4:
        $r19 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        r8 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$1800(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r19, r6);
        if r8 == null goto label8;

        r9 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: java.util.List closeSnippet(java.util.List,org.htmlcleaner.HtmlCleaner$TagPos,java.lang.Object,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r8, r5, r3);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        $i1 = interfaceinvoke r9.<java.util.List: int size()>();
        i0 = $i1 - 1;

     label5:
        if i0 < 1 goto label7;

        $r20 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i0);
        r10 = (org.htmlcleaner.TagNode) $r20;
        if r7 == null goto label6;

        $r21 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z6 = virtualinvoke r7.<org.htmlcleaner.TagInfo: boolean isContinueAfter(java.lang.String)>($r21);
        if $z6 == 0 goto label6;

        $r22 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode makeTagNodeCopy(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r10, r3);
        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>($r22);
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

     label6:
        i0 = i0 + -1;
        goto label5;

     label7:
        goto label9;

     label8:
        $z7 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4, r3);
        if $z7 != 0 goto label9;

        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r4, r3);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);

     label9:
        goto label37;

     label10:
        $z8 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isStartToken(java.lang.Object)>(r4);
        if $z8 == 0 goto label36;

        r24 = (org.htmlcleaner.TagNode) r4;
        r25 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r26 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        r27 = interfaceinvoke $r26.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r25);
        $r28 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $z9 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: boolean access$2300(org.htmlcleaner.HtmlCleaner$OpenTags)>($r28);
        if $z9 == 0 goto label11;

        $r29 = null;
        goto label12;

     label11:
        $r30 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $r29 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags)>($r30);

     label12:
        r31 = $r29;
        if r31 != null goto label13;

        $r32 = null;
        goto label14;

     label13:
        $r33 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        $r34 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos)>(r31);
        $r32 = interfaceinvoke $r33.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r34);

     label14:
        r35 = $r32;
        $r36 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$900(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        interfaceinvoke $r36.<java.util.Set: boolean add(java.lang.Object)>(r25);
        $r37 = "html";
        $z11 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r25);
        if $z11 == 0 goto label15;

        $r38 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $r39 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addAttributesToTag(org.htmlcleaner.TagNode,java.util.Map)>($r38, $r39);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label15:
        $r40 = "body";
        $z12 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r25);
        if $z12 == 0 goto label16;

        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$702(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean)>(r3, 1);
        $r41 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $r42 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addAttributesToTag(org.htmlcleaner.TagNode,java.util.Map)>($r41, $r42);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label16:
        $r43 = "head";
        $z14 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r25);
        if $z14 == 0 goto label17;

        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$602(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean)>(r3, 1);
        $r44 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $r45 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addAttributesToTag(org.htmlcleaner.TagNode,java.util.Map)>($r44, $r45);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label17:
        if r27 != null goto label18;

        $r46 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z16 = $r46.<org.htmlcleaner.CleanerProperties: boolean omitUnknownTags>;
        if $z16 != 0 goto label19;

     label18:
        if r27 == null goto label20;

        $z17 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean isDeprecated()>();
        if $z17 == 0 goto label20;

        $r47 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        $z18 = $r47.<org.htmlcleaner.CleanerProperties: boolean omitDeprecatedTags>;
        if $z18 == 0 goto label20;

     label19:
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label20:
        if r27 != null goto label21;

        if r35 == null goto label21;

        $z19 = virtualinvoke r35.<org.htmlcleaner.TagInfo: boolean allowsAnything()>();
        if $z19 != 0 goto label21;

        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r4, r3);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label21:
        if r27 == null goto label22;

        $z20 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean hasPermittedTags()>();
        if $z20 == 0 goto label22;

        $r48 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $r49 = virtualinvoke r27.<org.htmlcleaner.TagInfo: java.util.Set getPermittedTags()>();
        $z21 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: boolean access$2400(org.htmlcleaner.HtmlCleaner$OpenTags,java.util.Set)>($r48, $r49);
        if $z21 == 0 goto label22;

        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label22:
        if r27 == null goto label23;

        $z22 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean isUnique()>();
        if $z22 == 0 goto label23;

        $r50 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $z23 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: boolean access$2500(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r50, r25);
        if $z23 == 0 goto label23;

        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label23:
        $z24 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isFatalTagSatisfied(org.htmlcleaner.TagInfo,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r27, r3);
        if $z24 != 0 goto label24;

        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label24:
        $z25 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean mustAddRequiredParent(org.htmlcleaner.TagInfo,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r27, r3);
        if $z25 == 0 goto label25;

        r51 = virtualinvoke r27.<org.htmlcleaner.TagInfo: java.lang.String getRequiredParent()>();
        r52 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r51, r3);
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>(r52);
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        goto label35;

     label25:
        if r27 == null goto label32;

        if r31 == null goto label32;

        $z26 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean isMustCloseTag(org.htmlcleaner.TagInfo)>(r35);
        if $z26 == 0 goto label32;

        r55 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: java.util.List closeSnippet(java.util.List,org.htmlcleaner.HtmlCleaner$TagPos,java.lang.Object,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r31, r24, r3);
        i2 = interfaceinvoke r55.<java.util.List: int size()>();
        $z27 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean hasCopyTags()>();
        if $z27 == 0 goto label31;

        if i2 <= 0 goto label31;

        r11 = interfaceinvoke r55.<java.util.List: java.util.ListIterator listIterator(int)>(i2);
        $r56 = new java.util.ArrayList;
        specialinvoke $r56.<java.util.ArrayList: void <init>()>();
        r12 = $r56;

     label26:
        $z28 = interfaceinvoke r11.<java.util.ListIterator: boolean hasPrevious()>();
        if $z28 == 0 goto label27;

        $r57 = interfaceinvoke r11.<java.util.ListIterator: java.lang.Object previous()>();
        r13 = (org.htmlcleaner.TagNode) $r57;
        $r58 = virtualinvoke r13.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z29 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean isCopy(java.lang.String)>($r58);
        if $z29 == 0 goto label27;

        interfaceinvoke r12.<java.util.List: void add(int,java.lang.Object)>(0, r13);
        goto label26;

     label27:
        $i3 = interfaceinvoke r12.<java.util.List: int size()>();
        if $i3 <= 0 goto label31;

        r59 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z30 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();
        if $z30 == 0 goto label29;

        $r60 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();
        r14 = (org.htmlcleaner.TagNode) $r60;
        $r61 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode makeTagNodeCopy(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r14, r3);
        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>($r61);
        goto label28;

     label29:
        i4 = 0;

     label30:
        $i5 = interfaceinvoke r12.<java.util.List: int size()>();
        if i4 >= $i5 goto label31;

        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        i4 = i4 + 1;
        goto label30;

     label31:
        interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();
        goto label35;

     label32:
        $z31 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4, r3);
        if $z31 != 0 goto label33;

        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r4, r3);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label35;

     label33:
        if r27 == null goto label34;

        $z32 = virtualinvoke r27.<org.htmlcleaner.TagInfo: boolean allowsBody()>();
        if $z32 != 0 goto label34;

        r64 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(org.htmlcleaner.TagNode)>(r24);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addPossibleHeadCandidate(org.htmlcleaner.TagInfo,org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r27, r64, r3);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(r64);
        goto label35;

     label34:
        $r65 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        $i6 = interfaceinvoke r2.<java.util.ListIterator: int previousIndex()>();
        staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: void access$2600(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String,int)>($r65, r25, $i6);

     label35:
        goto label37;

     label36:
        $z33 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4, r3);
        if $z33 != 0 goto label37;

        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r4, r3);
        interfaceinvoke r2.<java.util.ListIterator: void set(java.lang.Object)>(null);

     label37:
        goto label0;

     label38:
        return;
    }

    private void createDocumentNodes(java.util.List, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.util.Iterator r3, r13;
        java.lang.Object r4, $r14;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        org.htmlcleaner.TagNode r5, $r11, r15, r16, $r18;
        org.htmlcleaner.TagInfo r6;
        org.htmlcleaner.ITagInfoProvider $r7;
        java.lang.String $r8, $r9, $r10;
        java.util.Set $r12, $r17;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label7;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        if r4 != null goto label1;

        goto label0;

     label1:
        z0 = 1;
        $z2 = r4 instanceof org.htmlcleaner.TagNode;
        if $z2 == 0 goto label2;

        r5 = (org.htmlcleaner.TagNode) r4;
        $r7 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        $r8 = virtualinvoke r5.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        r6 = interfaceinvoke $r7.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r8);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addPossibleHeadCandidate(org.htmlcleaner.TagInfo,org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r6, r5, r2);
        goto label5;

     label2:
        $z3 = r4 instanceof org.htmlcleaner.ContentNode;
        if $z3 == 0 goto label5;

        $r9 = "";
        $r10 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z4 != 0 goto label3;

        $z5 = 1;
        goto label4;

     label3:
        $z5 = 0;

     label4:
        z0 = $z5;

     label5:
        if z0 == 0 goto label6;

        $r11 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        virtualinvoke $r11.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r4);

     label6:
        goto label0;

     label7:
        $r12 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label8:
        $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
        if $z6 == 0 goto label13;

        $r14 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
        r15 = (org.htmlcleaner.TagNode) $r14;
        r16 = virtualinvoke r15.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        z7 = 1;

     label9:
        if r16 == null goto label11;

        $r17 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $z8 = interfaceinvoke $r17.<java.util.Set: boolean contains(java.lang.Object)>(r16);
        if $z8 == 0 goto label10;

        z7 = 0;
        goto label11;

     label10:
        r16 = virtualinvoke r16.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        goto label9;

     label11:
        if z7 == 0 goto label12;

        virtualinvoke r15.<org.htmlcleaner.TagNode: boolean removeFromTree()>();
        $r18 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        virtualinvoke $r18.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r15);

     label12:
        goto label8;

     label13:
        return;
    }

    private java.util.List closeSnippet(java.util.List, org.htmlcleaner.HtmlCleaner$TagPos, java.lang.Object, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1, r11;
        org.htmlcleaner.HtmlCleaner$TagPos r2;
        java.lang.Object r3, r9;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r4;
        java.util.ArrayList $r5, r6;
        java.util.ListIterator r7, $r16;
        org.htmlcleaner.TagNode r8, r10, r18;
        boolean z0, $z1, $z4;
        org.htmlcleaner.HtmlCleaner$OpenTags r12, $r14, $r21;
        org.htmlcleaner.TagInfo r13;
        int $i0;
        org.htmlcleaner.ITagInfoProvider $r19;
        java.lang.String $r20, $r22;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$TagPos;
        r3 := @parameter2: java.lang.Object;
        r4 := @parameter3: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r6 = $r5;
        $i0 = staticinvoke <org.htmlcleaner.HtmlCleaner$TagPos: int access$1900(org.htmlcleaner.HtmlCleaner$TagPos)>(r2);
        r7 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator(int)>($i0);
        r8 = null;
        r9 = interfaceinvoke r7.<java.util.ListIterator: java.lang.Object next()>();
        z0 = 0;

     label0:
        if r3 != null goto label1;

        if z0 == 0 goto label2;

     label1:
        if r3 == null goto label10;

        if r9 == r3 goto label10;

     label2:
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: boolean isStartToken(java.lang.Object)>(r9);
        if $z1 == 0 goto label7;

        r10 = (org.htmlcleaner.TagNode) r9;
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r10);
        r11 = virtualinvoke r10.<org.htmlcleaner.TagNode: java.util.List getItemsToMove()>();
        if r11 == null goto label3;

        r12 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4);
        $r14 = new org.htmlcleaner.HtmlCleaner$OpenTags;
        specialinvoke $r14.<org.htmlcleaner.HtmlCleaner$OpenTags: void <init>(org.htmlcleaner.HtmlCleaner,org.htmlcleaner.HtmlCleaner$1)>(r0, null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.HtmlCleaner$OpenTags)>(r4, $r14);
        $r16 = interfaceinvoke r11.<java.util.List: java.util.ListIterator listIterator(int)>(0);
        virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: void makeTree(java.util.List,java.util.ListIterator,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r11, $r16, r4);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void closeAll(java.util.List,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r11, r4);
        virtualinvoke r10.<org.htmlcleaner.TagNode: void setItemsToMove(java.util.List)>(null);
        staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.HtmlCleaner$OpenTags)>(r4, r12);

     label3:
        r18 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(org.htmlcleaner.TagNode)>(r10);
        $r19 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        $r20 = virtualinvoke r18.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        r13 = interfaceinvoke $r19.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r20);
        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: void addPossibleHeadCandidate(org.htmlcleaner.TagInfo,org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r13, r18, r4);
        if r8 == null goto label4;

        virtualinvoke r8.<org.htmlcleaner.TagNode: void addChildren(java.util.List)>(r11);
        virtualinvoke r8.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r18);
        interfaceinvoke r7.<java.util.ListIterator: void set(java.lang.Object)>(null);
        goto label6;

     label4:
        if r11 == null goto label5;

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r18);
        interfaceinvoke r7.<java.util.ListIterator: void set(java.lang.Object)>(r11);
        goto label6;

     label5:
        interfaceinvoke r7.<java.util.ListIterator: void set(java.lang.Object)>(r18);

     label6:
        $r21 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r4);
        $r22 = virtualinvoke r18.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: void access$2700(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String)>($r21, $r22);
        r8 = r18;
        goto label8;

     label7:
        if r8 == null goto label8;

        interfaceinvoke r7.<java.util.ListIterator: void set(java.lang.Object)>(null);
        if r9 == null goto label8;

        virtualinvoke r8.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r9);

     label8:
        $z4 = interfaceinvoke r7.<java.util.ListIterator: boolean hasNext()>();
        if $z4 == 0 goto label9;

        r9 = interfaceinvoke r7.<java.util.ListIterator: java.lang.Object next()>();
        goto label0;

     label9:
        z0 = 1;
        goto label0;

     label10:
        return r6;
    }

    private void closeAll(java.util.List, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.util.List r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.HtmlCleaner$TagPos r3;
        org.htmlcleaner.HtmlCleaner$OpenTags $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        r3 = staticinvoke <org.htmlcleaner.HtmlCleaner$OpenTags: org.htmlcleaner.HtmlCleaner$TagPos access$2800(org.htmlcleaner.HtmlCleaner$OpenTags)>($r4);
        if r3 == null goto label0;

        specialinvoke r0.<org.htmlcleaner.HtmlCleaner: java.util.List closeSnippet(java.util.List,org.htmlcleaner.HtmlCleaner$TagPos,java.lang.Object,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r3, null, r2);

     label0:
        return;
    }

    private void addPossibleHeadCandidate(org.htmlcleaner.TagInfo, org.htmlcleaner.TagNode, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagInfo r1;
        org.htmlcleaner.TagNode r2;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r3;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r4;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        r2 := @parameter1: org.htmlcleaner.TagNode;
        r3 := @parameter2: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        if r1 == null goto label1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r1.<org.htmlcleaner.TagInfo: boolean isHeadTag()>();
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r1.<org.htmlcleaner.TagInfo: boolean isHeadAndBodyTag()>();
        if $z1 == 0 goto label1;

        $z2 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        if $z2 == 0 goto label1;

        $z3 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: boolean access$700(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        if $z3 != 0 goto label1;

     label0:
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r3);
        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label1:
        return;
    }

    public org.htmlcleaner.CleanerProperties getProperties()
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.CleanerProperties $r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        return $r1;
    }

    private void setPruneTags(java.lang.String, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.String r1, $r8, $r9, $r10;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        java.util.StringTokenizer r3, $r6;
        java.util.Set $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r4 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        interfaceinvoke $r4.<java.util.Set: void clear()>();
        $r5 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        interfaceinvoke $r5.<java.util.Set: void clear()>();
        if r1 == null goto label1;

        $r6 = new java.util.StringTokenizer;
        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");
        r3 = $r6;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        $r7 = staticinvoke <org.htmlcleaner.HtmlCleaner$CleanTimeValues: java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r2);
        $r8 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r10);
        goto label0;

     label1:
        return;
    }

    public org.htmlcleaner.ITagInfoProvider getTagInfoProvider()
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.ITagInfoProvider $r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        return $r1;
    }

    public org.htmlcleaner.CleanerTransformations getTransformations()
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.CleanerTransformations $r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerTransformations transformations>;
        return $r1;
    }

    public void setTransformations(org.htmlcleaner.CleanerTransformations)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.CleanerTransformations r1;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.CleanerTransformations;
        r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerTransformations transformations> = r1;
        return;
    }

    public java.lang.String getInnerHtml(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r7, $r9, $r10;
        int i0, i1, $i2, i3, $i4;
        org.htmlcleaner.SimpleXmlSerializer $r3;
        org.htmlcleaner.CleanerProperties $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.io.IOException $r11, r12;
        org.htmlcleaner.HtmlCleanerException $r13, $r14;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        if r1 == null goto label4;

     label0:
        $r3 = new org.htmlcleaner.SimpleXmlSerializer;
        $r4 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties properties>;
        specialinvoke $r3.<org.htmlcleaner.SimpleXmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>($r4);
        r2 = virtualinvoke $r3.<org.htmlcleaner.SimpleXmlSerializer: java.lang.String getAsString(org.htmlcleaner.TagNode)>(r1);
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $r7 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>($r9);
        $i2 = i0 + 1;
        i3 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(62, $i2);
        i1 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(60);
        if i3 < 0 goto label1;

        if i3 > i1 goto label1;

        $i4 = i3 + 1;
        $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i4, i1);
        goto label2;

     label1:
        $r10 = null;

     label2:
        return $r10;

     label3:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = new org.htmlcleaner.HtmlCleanerException;
        specialinvoke $r13.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.Throwable)>(r12);
        throw $r13;

     label4:
        $r14 = new org.htmlcleaner.HtmlCleanerException;
        specialinvoke $r14.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String)>("Cannot return inner html of the null node!");
        throw $r14;

        catch java.io.IOException from label0 to label2 with label3;
    }

    public void setInnerHtml(org.htmlcleaner.TagNode, java.lang.String)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.TagNode r1, r5, r7, r35;
        java.lang.String r2, r3, r6, $r13, $r20, $r26, $r32, $r34;
        java.lang.StringBuilder r4, $r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r31;
        java.util.List $r36;

        r0 := @this: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        if r1 == null goto label2;

        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        r4 = $r8;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" marker=\'\'>");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();

     label0:
        if r5 == null goto label1;

        r6 = virtualinvoke r5.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r26);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        r5 = virtualinvoke r5.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        goto label0;

     label1:
        $r34 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r35 = virtualinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>($r34);
        r7 = virtualinvoke r35.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElementHavingAttribute(java.lang.String,boolean)>("marker", 1);
        if r7 == null goto label2;

        $r36 = virtualinvoke r7.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        virtualinvoke r1.<org.htmlcleaner.TagNode: void setChildren(java.util.List)>($r36);

     label2:
        return;
    }

    static org.htmlcleaner.ITagInfoProvider access$000(org.htmlcleaner.HtmlCleaner)
    {
        org.htmlcleaner.HtmlCleaner r0;
        org.htmlcleaner.ITagInfoProvider $r1;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner;
        $r1 = r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        return $r1;
    }

    static org.htmlcleaner.TagNode access$1400(org.htmlcleaner.HtmlCleaner, java.lang.String, org.htmlcleaner.HtmlCleaner$CleanTimeValues)
    {
        org.htmlcleaner.HtmlCleaner r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner$CleanTimeValues r2;
        org.htmlcleaner.TagNode $r3;

        r0 := @parameter0: org.htmlcleaner.HtmlCleaner;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: org.htmlcleaner.HtmlCleaner$CleanTimeValues;
        $r3 = specialinvoke r0.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues)>(r1, r2);
        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");
        <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET> = $r0;
        return;
    }
}
public class org.htmlcleaner.HtmlCleanerException extends java.lang.RuntimeException
{

    public void <init>()
    {
        org.htmlcleaner.HtmlCleanerException r0;

        r0 := @this: org.htmlcleaner.HtmlCleanerException;
        specialinvoke r0.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String)>("HtmlCleaner expression occureed!");
        return;
    }

    public void <init>(java.lang.Throwable)
    {
        org.htmlcleaner.HtmlCleanerException r0;
        java.lang.Throwable r1;

        r0 := @this: org.htmlcleaner.HtmlCleanerException;
        r1 := @parameter0: java.lang.Throwable;
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);
        return;
    }

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.HtmlCleanerException r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.HtmlCleanerException;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.htmlcleaner.HtmlCleanerException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: org.htmlcleaner.HtmlCleanerException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);
        return;
    }
}
public abstract class org.htmlcleaner.HtmlSerializer extends org.htmlcleaner.Serializer
{

    protected void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.Serializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.htmlcleaner.TagInfo r2;
        org.htmlcleaner.CleanerProperties $r3;
        org.htmlcleaner.ITagInfoProvider $r4;
        java.lang.String $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r3 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $r4 = virtualinvoke $r3.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider getTagInfoProvider()>();
        $r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        r2 = interfaceinvoke $r4.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r5);
        if r2 == null goto label0;

        $z0 = virtualinvoke r1.<org.htmlcleaner.TagNode: boolean hasChildren()>();
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r2.<org.htmlcleaner.TagInfo: boolean isEmptyTag()>();
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    protected boolean dontEscape(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $z0 = virtualinvoke r0.<org.htmlcleaner.HtmlSerializer: boolean isScriptOrStyle(org.htmlcleaner.TagNode)>(r1);
        return $z0;
    }

    protected java.lang.String escapeText(java.lang.String)
    {
        org.htmlcleaner.HtmlSerializer r0;
        java.lang.String r1, r3, $r11, $r16, $r26, $r30, r32, r33, $r39, r41, r47, $r56, $r60, $r71;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z13, $z14, $z15, $z16;
        int i0, i1, i3, $i6, $i7, $i8, $i10, $i13, $i16, $i18, $i19, $i20, $i21, i22, $i24, $i25, $i27, $i28;
        java.lang.StringBuilder r2, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r50, $r51, $r54, $r55, $r64, $r65, $r66, $r67;
        char c2, c5, $c9, $c11, $c12, c17, $c23, $c26;
        byte b4, $b14, $b15;
        java.util.Map$Entry r4;
        org.htmlcleaner.CleanerProperties $r5, $r6, $r29, $r36, $r49, $r59, $r63;
        org.htmlcleaner.SpecialEntity r34;
        java.io.Serializable $r37, $r68;
        java.util.Map $r42;
        java.util.Set $r43;
        java.util.Iterator r44;
        java.lang.Object $r45, $r46, $r52;
        java.lang.Character $r53;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        z0 = virtualinvoke $r5.<org.htmlcleaner.CleanerProperties: boolean isRecognizeUnicodeChars()>();
        $r6 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        z1 = virtualinvoke $r6.<org.htmlcleaner.CleanerProperties: boolean isTranslateSpecialEntities()>();
        if r1 == null goto label41;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(i0);
        r2 = $r7;
        i1 = 0;

     label0:
        if i1 >= i0 goto label40;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        if c2 != 38 goto label35;

        $i7 = i0 - 2;
        if i1 >= $i7 goto label21;

        $i8 = i1 + 1;
        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);
        if $c9 != 35 goto label21;

        $i10 = i1 + 2;
        $c11 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i10);
        $c12 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);
        if $c12 != 120 goto label1;

        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        z2 = $z3;
        $i13 = i1;
        if z2 == 0 goto label3;

        $b14 = 3;
        goto label4;

     label3:
        $b14 = 2;

     label4:
        i3 = $i13 + $b14;
        if z2 == 0 goto label5;

        $b15 = 16;
        goto label6;

     label5:
        $b15 = 10;

     label6:
        b4 = $b15;
        r3 = "";

     label7:
        if i3 >= i0 goto label11;

        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);
        if c5 != 59 goto label8;

        goto label11;

     label8:
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $z4 = staticinvoke <org.htmlcleaner.Utils: boolean isValidInt(java.lang.String,int)>($r11, b4);
        if $z4 == 0 goto label9;

        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);
        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        i3 = i3 + 1;
        goto label10;

     label9:
        i3 = i3 + -1;
        goto label11;

     label10:
        goto label7;

     label11:
        $z5 = staticinvoke <org.htmlcleaner.Utils: boolean isValidInt(java.lang.String,int)>(r3, b4);
        if $z5 == 0 goto label17;

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, b4);
        c17 = (char) $i16;
        $z6 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlChar(char)>(c17);
        if $z6 != 0 goto label12;

        i1 = i3;
        goto label16;

     label12:
        $z7 = staticinvoke <org.htmlcleaner.Utils: boolean isReservedXmlChar(char)>(c17);
        if $z7 != 0 goto label15;

        if z0 == 0 goto label13;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c17);
        goto label14;

     label13:
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r16 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        i1 = i3;
        goto label16;

     label15:
        i1 = i3;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

     label16:
        goto label20;

     label17:
        $r29 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z8 = $r29.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        if $z8 == 0 goto label18;

        $r30 = "&#38;";
        goto label19;

     label18:
        $r30 = "&";

     label19:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

     label20:
        goto label39;

     label21:
        $i6 = staticinvoke <org.htmlcleaner.SpecialEntity: int getMaxEntityLength()>();
        $i18 = $i6 + 2;
        $i19 = i0 - i1;
        $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i19);
        $i21 = i1 + $i20;
        r32 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i1, $i21);
        i22 = virtualinvoke r32.<java.lang.String: int indexOf(int)>(59);
        if i22 <= 0 goto label26;

        r33 = virtualinvoke r32.<java.lang.String: java.lang.String substring(int,int)>(1, i22);
        r34 = staticinvoke <org.htmlcleaner.SpecialEntity: org.htmlcleaner.SpecialEntity getEntity(java.lang.String)>(r33);
        if r34 == null goto label26;

        if z1 == 0 goto label24;

        $r36 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z9 = virtualinvoke $r36.<org.htmlcleaner.CleanerProperties: boolean isTransSpecialEntitiesToNCR()>();
        if $z9 == 0 goto label22;

        $r37 = virtualinvoke r34.<org.htmlcleaner.SpecialEntity: java.lang.String getDecimalNCR()>();
        goto label23;

     label22:
        $c23 = virtualinvoke r34.<org.htmlcleaner.SpecialEntity: char getCharacter()>();
        $r37 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c23);

     label23:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);
        goto label25;

     label24:
        $r39 = virtualinvoke r34.<org.htmlcleaner.SpecialEntity: java.lang.String getEscapedValue()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

     label25:
        $i24 = virtualinvoke r33.<java.lang.String: int length()>();
        $i25 = $i24 + 1;
        i1 = i1 + $i25;
        goto label39;

     label26:
        r41 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i1);
        z10 = 0;
        $r42 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r43 = interfaceinvoke $r42.<java.util.Map: java.util.Set entrySet()>();
        r44 = interfaceinvoke $r43.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $z11 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();
        if $z11 == 0 goto label31;

        $r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r45;
        $r46 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r47 = (java.lang.String) $r46;
        $z12 = virtualinvoke r41.<java.lang.String: boolean startsWith(java.lang.String)>(r47);
        if $z12 == 0 goto label30;

        $r49 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z13 = $r49.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        if $z13 == 0 goto label28;

        $r50 = new java.lang.StringBuilder;
        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r52 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r53 = (java.lang.Character) $r52;
        $c26 = virtualinvoke $r53.<java.lang.Character: char charValue()>();
        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($c26);
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label29;

     label28:
        $r56 = r47;

     label29:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
        $i27 = virtualinvoke r47.<java.lang.String: int length()>();
        $i28 = $i27 - 1;
        i1 = i1 + $i28;
        z10 = 1;
        goto label31;

     label30:
        goto label27;

     label31:
        if z10 != 0 goto label34;

        $r59 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z14 = $r59.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        if $z14 == 0 goto label32;

        $r60 = "&#38;";
        goto label33;

     label32:
        $r60 = "&";

     label33:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

     label34:
        goto label39;

     label35:
        $z15 = staticinvoke <org.htmlcleaner.Utils: boolean isReservedXmlChar(char)>(c2);
        if $z15 == 0 goto label38;

        $r63 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z16 = $r63.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        if $z16 == 0 goto label36;

        $r64 = new java.lang.StringBuilder;
        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c2);
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label37;

     label36:
        $r68 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c2);

     label37:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68);
        goto label39;

     label38:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label39:
        i1 = i1 + 1;
        goto label0;

     label40:
        $r71 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r71;

     label41:
        return null;
    }

    protected void serializeOpenTag(org.htmlcleaner.TagNode, java.io.Writer, boolean) throws java.io.IOException
    {
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.String r3, r7, r8, r9, $r11, $r14, $r19, $r25, $r26, $r29, $r45, $r46, $r49;
        java.lang.StringBuilder $r4, $r12, $r13, $r20, $r21, $r22, $r23, $r27, $r28, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r48;
        java.util.Iterator r5, r32;
        java.util.Map$Entry r6, r34;
        org.htmlcleaner.CleanerProperties $r10;
        java.util.Map $r15, r30;
        java.util.Set $r16, $r31;
        java.lang.Object $r17, $r18, $r24, $r33, $r35, $r44;
        int $i0;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        z0 := @parameter2: boolean;
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z2 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>(r3);
        if $z2 == 0 goto label0;

        return;

     label0:
        $r10 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        z1 = virtualinvoke $r10.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        if z1 != 0 goto label1;

        $r11 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        if $r11 == null goto label1;

        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);

     label1:
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r14);
        $r15 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>();
        r5 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label4;

        $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.util.Map$Entry) $r17;
        $r18 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        r7 = (java.lang.String) $r18;
        if z1 != 0 goto label3;

        $r19 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r7);
        if $r19 == null goto label3;

        r7 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r7);

     label3:
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r24 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r25 = (java.lang.String) $r24;
        $r26 = virtualinvoke r0.<org.htmlcleaner.HtmlSerializer: java.lang.String escapeText(java.lang.String)>($r25);
        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r29);
        goto label2;

     label4:
        if z1 == 0 goto label7;

        r30 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        if r30 == null goto label7;

        $r31 = interfaceinvoke r30.<java.util.Map: java.util.Set entrySet()>();
        r32 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label7;

        $r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();
        r34 = (java.util.Map$Entry) $r33;
        $r35 = interfaceinvoke r34.<java.util.Map$Entry: java.lang.Object getKey()>();
        r8 = (java.lang.String) $r35;
        r9 = "xmlns";
        $i0 = virtualinvoke r8.<java.lang.String: int length()>();
        if $i0 <= 0 goto label6;

        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        r9 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r44 = interfaceinvoke r34.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r45 = (java.lang.String) $r44;
        $r46 = virtualinvoke r0.<org.htmlcleaner.HtmlSerializer: java.lang.String escapeText(java.lang.String)>($r45);
        $r47 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r49);
        goto label5;

     label7:
        $z5 = virtualinvoke r0.<org.htmlcleaner.HtmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        if $z5 == 0 goto label8;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(" />");
        if z0 == 0 goto label9;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label9;

     label8:
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(">");

     label9:
        return;
    }

    protected void serializeEndTag(org.htmlcleaner.TagNode, java.io.Writer, boolean) throws java.io.IOException
    {
        org.htmlcleaner.HtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        boolean z0, $z1, $z2;
        java.lang.String r3, $r5, $r10;
        java.lang.StringBuilder $r4, $r7, $r8, $r9;
        org.htmlcleaner.CleanerProperties $r6;

        r0 := @this: org.htmlcleaner.HtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        z0 := @parameter2: boolean;
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z1 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>(r3);
        if $z1 == 0 goto label0;

        return;

     label0:
        $r5 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        if $r5 == null goto label1;

        $r6 = r0.<org.htmlcleaner.HtmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z2 = virtualinvoke $r6.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        if $z2 != 0 goto label1;

        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);

     label1:
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r10);
        if z0 == 0 goto label2;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");

     label2:
        return;
    }
}
public abstract class org.htmlcleaner.HtmlTokenizer extends java.lang.Object
{
    private static final int WORKING_BUFFER_SIZE;
    private java.io.BufferedReader _reader;
    private char[] _working;
    private transient int _pos;
    private transient int _len;
    private transient char[] _saved;
    private transient int _savedLen;
    private transient org.htmlcleaner.DoctypeToken _docType;
    private transient org.htmlcleaner.TagToken _currentTagToken;
    private transient java.util.List _tokenList;
    private boolean _asExpected;
    private boolean _isScriptContext;
    private org.htmlcleaner.CleanerProperties props;
    private boolean isOmitUnknownTags;
    private boolean isTreatUnknownTagsAsContent;
    private boolean isOmitDeprecatedTags;
    private boolean isTreatDeprecatedTagsAsContent;
    private boolean isNamespacesAware;
    private boolean isOmitComments;
    private boolean isAllowMultiWordAttributes;
    private boolean isAllowHtmlInsideAttributes;
    private org.htmlcleaner.CleanerTransformations transformations;
    private org.htmlcleaner.ITagInfoProvider tagInfoProvider;
    private java.lang.StringBuilder commonStr;

    public void <init>(java.io.Reader, org.htmlcleaner.CleanerProperties, org.htmlcleaner.CleanerTransformations, org.htmlcleaner.ITagInfoProvider) throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.io.Reader r1;
        org.htmlcleaner.CleanerProperties r2;
        org.htmlcleaner.CleanerTransformations r3;
        org.htmlcleaner.ITagInfoProvider r4;
        char[] $r5, $r6;
        java.util.ArrayList $r7;
        java.lang.StringBuilder $r8;
        java.io.BufferedReader $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: java.io.Reader;
        r2 := @parameter1: org.htmlcleaner.CleanerProperties;
        r3 := @parameter2: org.htmlcleaner.CleanerTransformations;
        r4 := @parameter3: org.htmlcleaner.ITagInfoProvider;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r5 = newarray (char)[1024];
        r0.<org.htmlcleaner.HtmlTokenizer: char[] _working> = $r5;
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = 0;
        r0.<org.htmlcleaner.HtmlTokenizer: int _len> = -1;
        $r6 = newarray (char)[512];
        r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved> = $r6;
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = 0;
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.DoctypeToken _docType> = null;
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList> = $r7;
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext> = 0;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr> = $r8;
        $r9 = new java.io.BufferedReader;
        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);
        r0.<org.htmlcleaner.HtmlTokenizer: java.io.BufferedReader _reader> = $r9;
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props> = r2;
        $z0 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isOmitUnknownTags()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitUnknownTags> = $z0;
        $z1 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isTreatUnknownTagsAsContent()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatUnknownTagsAsContent> = $z1;
        $z2 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isOmitDeprecatedTags()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitDeprecatedTags> = $z2;
        $z3 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isTreatDeprecatedTagsAsContent()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatDeprecatedTagsAsContent> = $z3;
        $z4 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isNamespacesAware> = $z4;
        $z5 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isOmitComments()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitComments> = $z5;
        $z6 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isAllowMultiWordAttributes()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllowMultiWordAttributes> = $z6;
        $z7 = virtualinvoke r2.<org.htmlcleaner.CleanerProperties: boolean isAllowHtmlInsideAttributes()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllowHtmlInsideAttributes> = $z7;
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations> = r3;
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.ITagInfoProvider tagInfoProvider> = r4;
        return;
    }

    private void addToken(org.htmlcleaner.BaseToken)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        org.htmlcleaner.BaseToken r1;
        java.util.List $r2, $r3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: org.htmlcleaner.BaseToken;
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        virtualinvoke r0.<org.htmlcleaner.HtmlTokenizer: void makeTree(java.util.List)>($r3);
        return;
    }

    abstract void makeTree(java.util.List);

    abstract org.htmlcleaner.TagNode createTagNode(java.lang.String);

    private void readIfNeeded(int) throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        char c7;
        char[] $r1, $r2, $r4, $r5, $r6;
        java.io.BufferedReader $r3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        $i8 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i8 != -1 goto label8;

        $i9 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i10 = $i9 + i0;
        if $i10 < 1024 goto label8;

        $i11 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        i1 = 1024 - $i11;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i12 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i12, $r2, 0, i1);
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = 0;
        i2 = 1024 - i1;
        i3 = 0;
        i4 = i1;

     label0:
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: java.io.BufferedReader _reader>;
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        i5 = virtualinvoke $r3.<java.io.BufferedReader: int read(char[],int,int)>($r4, i4, i2);
        if i5 < 0 goto label1;

        i3 = i3 + i5;
        i4 = i4 + i5;
        i2 = i2 - i5;

     label1:
        if i5 < 0 goto label2;

        if i2 > 0 goto label0;

     label2:
        if i2 <= 0 goto label3;

        $i13 = i3 + i1;
        r0.<org.htmlcleaner.HtmlTokenizer: int _len> = $i13;

     label3:
        i6 = 0;

     label4:
        $i14 = i6;
        $i15 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i15 < 0 goto label5;

        $i16 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        goto label6;

     label5:
        $i16 = 1024;

     label6:
        if $i14 >= $i16 goto label8;

        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        c7 = $r5[i6];
        if c7 < 1 goto label7;

        if c7 > 32 goto label7;

        if c7 == 10 goto label7;

        if c7 == 13 goto label7;

        $r6 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $r6[i6] = 32;

     label7:
        i6 = i6 + 1;
        goto label4;

     label8:
        return;
    }

    java.util.List getTokenList()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.util.List $r1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        return $r1;
    }

    private void go() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int $i0, $i1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i1 = $i0 + 1;
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = $i1;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(0);
        return;
    }

    private void go(int) throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i2 = $i1 + i0;
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = $i2;
        $i3 = i0 - 1;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>($i3);
        return;
    }

    private boolean startsWith(java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1;
        int i0, i1, $i4, $i5, $i6, $i7, $i9, $i10;
        char c2, c3, $c8, $c11;
        char[] $r2;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(i0);
        $i4 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i4 < 0 goto label0;

        $i5 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i6 = $i5 + i0;
        $i7 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i6 <= $i7 goto label0;

        return 0;

     label0:
        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c8);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i9 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i10 = $i9 + i1;
        $c11 = $r2[$i10];
        c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);
        if c2 == c3 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        return 1;
    }

    private boolean startsWithSimple(java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8;
        char $c6, $c9;
        char[] $r2;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(i0);
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i2 < 0 goto label0;

        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i4 = $i3 + i0;
        $i5 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i4 <= $i5 goto label0;

        return 0;

     label0:
        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i7 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i8 = $i7 + i1;
        $c9 = $r2[$i8];
        if $c6 == $c9 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        return 1;
    }

    private boolean isWhitespace(int)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int i0, $i1, $i2;
        char[] $r1;
        char $c3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i1 < 0 goto label0;

        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if i0 < $i2 goto label0;

        return 0;

     label0:
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $c3 = $r1[i0];
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);
        return $z0;
    }

    private boolean isWhitespace()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespace(int)>($i0);
        return $z0;
    }

    private boolean isWhitespaceSafe()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        int $i0;
        char $c1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1 = $r1[$i0];
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);
        return $z0;
    }

    private boolean isChar(int, char)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int i0, $i2, $i3;
        char c1, $c4, $c5, $c6;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        c1 := @parameter1: char;
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i2 < 0 goto label0;

        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if i0 < $i3 goto label0;

        return 0;

     label0:
        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c1);
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $c5 = $r1[i0];
        $c6 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c5);
        if $c4 != $c6 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isChar(char)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char c0;
        int $i1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isChar(int,char)>($i1, c0);
        return $z0;
    }

    private boolean isCharSimple(char)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char c0, $c5;
        int $i1, $i2, $i3, $i4;
        char[] $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i1 < 0 goto label0;

        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i2 >= $i3 goto label1;

     label0:
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i4 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c5 = $r1[$i4];
        if c0 != $c5 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private char getCurrentChar()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        int $i0;
        char $c1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1 = $r1[$i0];
        return $c1;
    }

    private boolean isCharEquals(char)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char c0, $c2;
        char[] $r1;
        int $i1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c2 = $r1[$i1];
        if $c2 != c0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private boolean isIdentifierStartChar(int)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int i0, $i2, $i3;
        char c1;
        char[] $r1;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i2 < 0 goto label0;

        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if i0 < $i3 goto label0;

        return 0;

     label0:
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        c1 = $r1[i0];
        $z0 = staticinvoke <java.lang.Character: boolean isUnicodeIdentifierStart(char)>(c1);
        if $z0 != 0 goto label1;

        if c1 != 95 goto label2;

     label1:
        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isIdentifierStartChar()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierStartChar(int)>($i0);
        return $z0;
    }

    private boolean isIdentifierChar()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char c0;
        int $i1, $i2, $i3, $i4;
        char[] $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i1 < 0 goto label0;

        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i2 < $i3 goto label0;

        return 0;

     label0:
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i4 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        c0 = $r1[$i4];
        $z0 = staticinvoke <java.lang.Character: boolean isUnicodeIdentifierStart(char)>(c0);
        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
        if $z1 != 0 goto label1;

        $z2 = staticinvoke <org.htmlcleaner.Utils: boolean isIdentifierHelperChar(char)>(c0);
        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    private boolean isValidXmlChar()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0, $z1, $z2;
        char[] $r1;
        int $i0;
        char $c1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 != 0 goto label0;

        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1 = $r1[$i0];
        $z1 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlChar(char)>($c1);
        if $z1 == 0 goto label1;

     label0:
        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private boolean isValidXmlCharSafe()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        int $i0;
        char $c1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1 = $r1[$i0];
        $z0 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlChar(char)>($c1);
        return $z0;
    }

    private boolean isAllRead()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i0 < 0 goto label0;

        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _len>;
        if $i1 < $i2 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private void save(char)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char c0;
        char[] r1, $r2, $r3, $r4, $r5, $r6;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i2 = lengthof $r2;
        if $i1 < $i2 goto label0;

        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i3 = lengthof $r3;
        $i4 = $i3 + 512;
        r1 = newarray (char)[$i4];
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i5 = lengthof $r5;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i5);
        r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved> = r1;

     label0:
        $r6 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i6 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        $i7 = $i6 + 1;
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = $i7;
        $r6[$i6] = c0;
        return;
    }

    private void saveCurrent()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0;
        char[] $r1;
        int $i0;
        char $c1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 != 0 goto label0;

        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1 = $r1[$i0];
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void save(char)>($c1);

     label0:
        return;
    }

    private void saveCurrentSafe()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char[] $r1;
        int $i0;
        char $c1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c1 = $r1[$i0];
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void save(char)>($c1);
        return;
    }

    private void saveCurrent(int) throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        int i0, i1;
        boolean $z0;
        char[] $r1;
        char $c2;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        i0 := @parameter0: int;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(i0);
        i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;

     label0:
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 != 0 goto label1;

        if i0 <= 0 goto label1;

        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $c2 = $r1[i1];
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void save(char)>($c2);
        i1 = i1 + 1;
        i0 = i0 + -1;
        goto label0;

     label1:
        return;
    }

    private void skipWhitespaces() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;

     label0:
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespaceSafe()>();
        if $z1 == 0 goto label1;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label0;

     label1:
        return;
    }

    private boolean addSavedAsContent()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        org.htmlcleaner.ContentNode $r1;
        int $i0, $i1;
        char[] $r2;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        if $i0 <= 0 goto label0;

        $r1 = new org.htmlcleaner.ContentNode;
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        specialinvoke $r1.<org.htmlcleaner.ContentNode: void <init>(char[],int)>($r2, $i1);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r1);
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = 0;
        return 1;

     label0:
        return 0;
    }

    void start() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        org.htmlcleaner.BaseToken r1;
        java.lang.String r2, $r7;
        java.util.List $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object $r6;
        org.htmlcleaner.CleanerProperties $r8;
        java.io.BufferedReader $r9;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        interfaceinvoke $r3.<java.util.List: void clear()>();
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext> = 0;
        z0 = 0;
        r0.<org.htmlcleaner.HtmlTokenizer: int _pos> = 1024;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(0);
        z1 = 1;

     label0:
        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z3 != 0 goto label13;

        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = 0;
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void readIfNeeded(int)>(10);
        $z4 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext>;
        if $z4 == 0 goto label5;

        $z5 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWith(java.lang.String)>("</script");
        if $z5 == 0 goto label2;

        $i0 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i1 = $i0 + 8;
        $z6 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespace(int)>($i1);
        if $z6 != 0 goto label1;

        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i3 = $i2 + 8;
        $z7 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isChar(int,char)>($i3, 62);
        if $z7 == 0 goto label2;

     label1:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagEnd()>();
        goto label4;

     label2:
        if z1 == 0 goto label3;

        $z8 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<!--");
        if $z8 == 0 goto label3;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void comment()>();
        goto label4;

     label3:
        z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean content()>();
        if z1 == 0 goto label4;

        if z2 == 0 goto label4;

        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: java.util.List _tokenList>;
        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i5 = $i4 - 1;
        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i5);
        r1 = (org.htmlcleaner.BaseToken) $r6;
        if r1 == null goto label4;

        r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        if r2 == null goto label4;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();
        $i6 = virtualinvoke $r7.<java.lang.String: int length()>();
        if $i6 <= 0 goto label4;

        z1 = 0;

     label4:
        $z9 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext>;
        if $z9 != 0 goto label0;

        z1 = 1;
        goto label0;

     label5:
        $z10 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWith(java.lang.String)>("<!doctype");
        if $z10 == 0 goto label7;

        if z0 != 0 goto label6;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void doctype()>();
        z0 = 1;
        goto label0;

     label6:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void ignoreUntil(char)>(60);
        goto label0;

     label7:
        $z11 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("</");
        if $z11 == 0 goto label8;

        $i7 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i8 = $i7 + 2;
        $z12 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierStartChar(int)>($i8);
        if $z12 == 0 goto label8;

        z0 = 1;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagEnd()>();
        goto label0;

     label8:
        $z13 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<!--");
        if $z13 == 0 goto label9;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void comment()>();
        goto label0;

     label9:
        $z14 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<");
        if $z14 == 0 goto label10;

        $i9 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $i10 = $i9 + 1;
        $z15 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierStartChar(int)>($i10);
        if $z15 == 0 goto label10;

        z0 = 1;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagStart()>();
        goto label0;

     label10:
        $r8 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props>;
        $z16 = virtualinvoke $r8.<org.htmlcleaner.CleanerProperties: boolean isIgnoreQuestAndExclam()>();
        if $z16 == 0 goto label12;

        $z17 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<!");
        if $z17 != 0 goto label11;

        $z18 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("<?");
        if $z18 == 0 goto label12;

     label11:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void ignoreUntil(char)>(62);
        $z19 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        if $z19 == 0 goto label0;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label0;

     label12:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean content()>();
        goto label0;

     label13:
        $r9 = r0.<org.htmlcleaner.HtmlTokenizer: java.io.BufferedReader _reader>;
        virtualinvoke $r9.<java.io.BufferedReader: void close()>();
        return;
    }

    private boolean isReservedTag(java.lang.String)
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r3 = "html";
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z0 != 0 goto label0;

        $r4 = "head";
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 != 0 goto label0;

        $r5 = "body";
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z2 == 0 goto label1;

     label0:
        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    private void tagStart() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, $r10, $r11;
        org.htmlcleaner.TagTransformation r2;
        org.htmlcleaner.TagInfo r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z13;
        org.htmlcleaner.CleanerTransformations $r4, $r5, $r6;
        org.htmlcleaner.ITagInfoProvider $r7;
        org.htmlcleaner.TagNode r8;
        org.htmlcleaner.TagToken $r9;
        org.htmlcleaner.EndTagToken $r12;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrent()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 == 0 goto label0;

        return;

     label0:
        r1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        r2 = null;
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        if $r4 == null goto label1;

        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        $z1 = virtualinvoke $r5.<org.htmlcleaner.CleanerTransformations: boolean hasTransformationForTag(java.lang.String)>(r1);
        if $z1 == 0 goto label1;

        $r6 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        r2 = virtualinvoke $r6.<org.htmlcleaner.CleanerTransformations: org.htmlcleaner.TagTransformation getTransformation(java.lang.String)>(r1);
        if r2 == null goto label1;

        r1 = virtualinvoke r2.<org.htmlcleaner.TagTransformation: java.lang.String getDestTag()>();

     label1:
        if r1 == null goto label4;

        $r7 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        r3 = interfaceinvoke $r7.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r1);
        if r3 != null goto label2;

        $z2 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitUnknownTags>;
        if $z2 != 0 goto label2;

        $z3 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatUnknownTagsAsContent>;
        if $z3 == 0 goto label2;

        $z4 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isReservedTag(java.lang.String)>(r1);
        if $z4 == 0 goto label3;

     label2:
        if r3 == null goto label4;

        $z5 = virtualinvoke r3.<org.htmlcleaner.TagInfo: boolean isDeprecated()>();
        if $z5 == 0 goto label4;

        $z6 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitDeprecatedTags>;
        if $z6 != 0 goto label4;

        $z7 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatDeprecatedTagsAsContent>;
        if $z7 == 0 goto label4;

     label3:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean content()>();
        return;

     label4:
        r8 = virtualinvoke r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagNode createTagNode(java.lang.String)>(r1);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = r8;
        $z9 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        if $z9 == 0 goto label9;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagAttributes()>();
        if r1 == null goto label6;

        if r2 == null goto label5;

        virtualinvoke r8.<org.htmlcleaner.TagNode: void transformAttributes(org.htmlcleaner.TagTransformation)>(r2);

     label5:
        $r9 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken>;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r9);

     label6:
        $z10 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        if $z10 == 0 goto label7;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        $r10 = "script";
        $z11 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z11 == 0 goto label8;

        r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext> = 1;
        goto label8;

     label7:
        $z12 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("/>");
        if $z12 == 0 goto label8;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(2);
        $r11 = "script";
        $z13 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z13 == 0 goto label8;

        $r12 = new org.htmlcleaner.EndTagToken;
        specialinvoke $r12.<org.htmlcleaner.EndTagToken: void <init>(java.lang.String)>(r1);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r12);

     label8:
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        goto label10;

     label9:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean addSavedAsContent()>();

     label10:
        return;
    }

    private void tagEnd() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, $r10;
        org.htmlcleaner.TagTransformation r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11;
        org.htmlcleaner.CleanerTransformations $r3, $r4, $r5;
        org.htmlcleaner.ITagInfoProvider $r6;
        org.htmlcleaner.TagInfo r7;
        org.htmlcleaner.EndTagToken $r8;
        org.htmlcleaner.TagToken $r9;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrent(int)>(2);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(2);
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 == 0 goto label0;

        return;

     label0:
        r1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        if $r3 == null goto label1;

        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        $z1 = virtualinvoke $r4.<org.htmlcleaner.CleanerTransformations: boolean hasTransformationForTag(java.lang.String)>(r1);
        if $z1 == 0 goto label1;

        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerTransformations transformations>;
        r2 = virtualinvoke $r5.<org.htmlcleaner.CleanerTransformations: org.htmlcleaner.TagTransformation getTransformation(java.lang.String)>(r1);
        if r2 == null goto label1;

        r1 = virtualinvoke r2.<org.htmlcleaner.TagTransformation: java.lang.String getDestTag()>();

     label1:
        if r1 == null goto label4;

        $r6 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.ITagInfoProvider tagInfoProvider>;
        r7 = interfaceinvoke $r6.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>(r1);
        if r7 != null goto label2;

        $z2 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitUnknownTags>;
        if $z2 != 0 goto label2;

        $z3 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatUnknownTagsAsContent>;
        if $z3 == 0 goto label2;

        $z4 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isReservedTag(java.lang.String)>(r1);
        if $z4 == 0 goto label3;

     label2:
        if r7 == null goto label4;

        $z5 = virtualinvoke r7.<org.htmlcleaner.TagInfo: boolean isDeprecated()>();
        if $z5 == 0 goto label4;

        $z6 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitDeprecatedTags>;
        if $z6 != 0 goto label4;

        $z7 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isTreatDeprecatedTagsAsContent>;
        if $z7 == 0 goto label4;

     label3:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean content()>();
        return;

     label4:
        $r8 = new org.htmlcleaner.EndTagToken;
        specialinvoke $r8.<org.htmlcleaner.EndTagToken: void <init>(java.lang.String)>(r1);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = $r8;
        $z9 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        if $z9 == 0 goto label8;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void tagAttributes()>();
        if r1 == null goto label5;

        $r9 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken>;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r9);

     label5:
        $z10 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        if $z10 == 0 goto label6;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();

     label6:
        $r10 = "script";
        $z11 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        if $z11 == 0 goto label7;

        r0.<org.htmlcleaner.HtmlTokenizer: boolean _isScriptContext> = 0;

     label7:
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken> = null;
        goto label9;

     label8:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean addSavedAsContent()>();

     label9:
        return;
    }

    private java.lang.String identifier() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, r3, $r22;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r4, $r5, $r7, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21;
        char[] $r8;
        char $c4, $c8;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierStartChar()>();
        if $z0 != 0 goto label0;

        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 0;
        return null;

     label0:
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $i2 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i2);

     label1:
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isIdentifierChar()>();
        if $z2 == 0 goto label2;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        $r7 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r8 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i3 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c4 = $r8[$i3];
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label1;

     label2:
        $r10 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $i5 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>();
        if $i5 <= 0 goto label3;

        $r11 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r12 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $i6 = virtualinvoke $r12.<java.lang.StringBuilder: int length()>();
        $i7 = $i6 - 1;
        $c8 = virtualinvoke $r11.<java.lang.StringBuilder: char charAt(int)>($i7);
        $z3 = staticinvoke <org.htmlcleaner.Utils: boolean isIdentifierHelperChar(char)>($c8);
        if $z3 == 0 goto label3;

        $r13 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r14 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $i9 = virtualinvoke $r14.<java.lang.StringBuilder: int length()>();
        $i10 = $i9 - 1;
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i10);
        goto label2;

     label3:
        $r16 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $i11 = virtualinvoke $r16.<java.lang.StringBuilder: int length()>();
        if $i11 != 0 goto label4;

        return null;

     label4:
        $r17 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        r1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);
        if i0 < 0 goto label8;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $i12 = i0 + 1;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i12);
        i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(58);
        if i1 < 0 goto label5;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label5:
        $z4 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isNamespacesAware>;
        if $z4 == 0 goto label6;

        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label7;

     label6:
        $r22 = r3;

     label7:
        r1 = $r22;

     label8:
        return r1;
    }

    private void tagAttributes() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, $r3, $r5, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.htmlcleaner.CleanerProperties $r4, $r7;
        org.htmlcleaner.TagToken $r9;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;

     label0:
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 != 0 goto label9;

        $z1 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        if $z1 == 0 goto label9;

        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        if $z2 != 0 goto label9;

        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("/>");
        if $z3 != 0 goto label9;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        r1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        $z4 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        if $z4 != 0 goto label3;

        $z5 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(60);
        if $z5 != 0 goto label2;

        $z6 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        if $z6 != 0 goto label2;

        $z7 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("/>");
        if $z7 != 0 goto label2;

        $z8 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isValidXmlChar()>();
        if $z8 == 0 goto label1;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrent()>();

     label1:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();

     label2:
        $z9 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(60);
        if $z9 != 0 goto label0;

        r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected> = 1;
        goto label0;

     label3:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        $z10 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(61);
        if $z10 == 0 goto label4;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        r2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String attributeValue()>();
        goto label7;

     label4:
        $r3 = "empty";
        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props>;
        $r5 = $r4.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues>;
        $z11 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z11 == 0 goto label5;

        r2 = "";
        goto label7;

     label5:
        $r6 = "true";
        $r7 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props>;
        $r8 = $r7.<org.htmlcleaner.CleanerProperties: java.lang.String booleanAttributeValues>;
        $z12 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z12 == 0 goto label6;

        r2 = "true";
        goto label7;

     label6:
        r2 = r1;

     label7:
        $z13 = r0.<org.htmlcleaner.HtmlTokenizer: boolean _asExpected>;
        if $z13 == 0 goto label8;

        $r9 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.TagToken _currentTagToken>;
        virtualinvoke $r9.<org.htmlcleaner.TagToken: void setAttribute(java.lang.String,java.lang.String)>(r1, r2);

     label8:
        goto label0;

     label9:
        return;
    }

    private java.lang.String attributeValue() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.lang.StringBuilder $r1, $r2, $r4, $r7;
        int $i0, $i1;
        char[] $r5;
        char $c2;
        java.lang.String $r8;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(60);
        if $z2 != 0 goto label0;

        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(62);
        if $z3 != 0 goto label0;

        $z4 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("/>");
        if $z4 == 0 goto label1;

     label0:
        return "";

     label1:
        z0 = 0;
        z1 = 0;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r2 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i0);
        $z5 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(39);
        if $z5 == 0 goto label2;

        z1 = 1;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label3;

     label2:
        $z6 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(34);
        if $z6 == 0 goto label3;

        z0 = 1;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();

     label3:
        $z7 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z7 != 0 goto label10;

        if z1 == 0 goto label4;

        $z8 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(39);
        if $z8 == 0 goto label5;

     label4:
        if z0 == 0 goto label7;

        $z9 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(34);
        if $z9 != 0 goto label7;

     label5:
        $z10 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllowHtmlInsideAttributes>;
        if $z10 != 0 goto label6;

        $z11 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(62);
        if $z11 != 0 goto label7;

        $z12 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(60);
        if $z12 != 0 goto label7;

     label6:
        $z13 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllowMultiWordAttributes>;
        if $z13 != 0 goto label8;

        $z14 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespaceSafe()>();
        if $z14 == 0 goto label8;

     label7:
        if z1 != 0 goto label10;

        if z0 != 0 goto label10;

        $z15 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isWhitespaceSafe()>();
        if $z15 != 0 goto label10;

        $z16 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(62);
        if $z16 != 0 goto label10;

        $z17 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharEquals(char)>(60);
        if $z17 != 0 goto label10;

     label8:
        $z18 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isValidXmlCharSafe()>();
        if $z18 == 0 goto label9;

        $r4 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _working>;
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _pos>;
        $c2 = $r5[$i1];
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();

     label9:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label3;

     label10:
        $z19 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(39);
        if $z19 == 0 goto label11;

        if z1 == 0 goto label11;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label12;

     label11:
        $z20 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(34);
        if $z20 == 0 goto label12;

        if z0 == 0 goto label12;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();

     label12:
        $r7 = r0.<org.htmlcleaner.HtmlTokenizer: java.lang.StringBuilder commonStr>;
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }

    private boolean content() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;

     label0:
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isValidXmlCharSafe()>();
        if $z1 == 0 goto label1;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();

     label1:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isCharSimple(char)>(60);
        if $z2 == 0 goto label0;

        goto label2;

     label2:
        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean addSavedAsContent()>();
        return $z3;
    }

    private void ignoreUntil(char) throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        char c0;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        c0 := @parameter0: char;

     label0:
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 != 0 goto label1;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isChar(char)>(c0);
        if $z1 == 0 goto label0;

        goto label1;

     label1:
        return;
    }

    private void comment() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, $r4, $r9, $r12, $r15;
        int i0, $i1, $i2, $i3, $i5, $i7;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.htmlcleaner.CleanerProperties $r3;
        char[] $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17;
        char $c4, $c6;
        org.htmlcleaner.CommentNode $r18;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(4);

     label0:
        $z0 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isAllRead()>();
        if $z0 != 0 goto label2;

        $z1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("-->");
        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean isValidXmlCharSafe()>();
        if $z2 == 0 goto label1;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void saveCurrentSafe()>();

     label1:
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go()>();
        goto label0;

     label2:
        $z3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: boolean startsWithSimple(java.lang.String)>("-->");
        if $z3 == 0 goto label3;

        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(3);

     label3:
        $i1 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        if $i1 <= 0 goto label7;

        $z4 = r0.<org.htmlcleaner.HtmlTokenizer: boolean isOmitComments>;
        if $z4 != 0 goto label6;

        $r3 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.CleanerProperties props>;
        r1 = virtualinvoke $r3.<org.htmlcleaner.CleanerProperties: java.lang.String getHyphenReplacementInComment()>();
        $r4 = new java.lang.String;
        $r5 = r0.<org.htmlcleaner.HtmlTokenizer: char[] _saved>;
        $i2 = r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen>;
        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i2);
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("--", $r9);
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i3 <= 0 goto label4;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);
        if $c4 != 45 goto label4;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        i0 = virtualinvoke r2.<java.lang.String: int length()>();
        if i0 <= 0 goto label5;

        $i5 = i0 - 1;
        $c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i5);
        if $c6 != 45 goto label5;

        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $i7 = i0 - 1;
        $r15 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r18 = new org.htmlcleaner.CommentNode;
        specialinvoke $r18.<org.htmlcleaner.CommentNode: void <init>(java.lang.String)>(r2);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void addToken(org.htmlcleaner.BaseToken)>($r18);

     label6:
        r0.<org.htmlcleaner.HtmlTokenizer: int _savedLen> = 0;

     label7:
        return;
    }

    private void doctype() throws java.io.IOException
    {
        org.htmlcleaner.HtmlTokenizer r0;
        java.lang.String r1, r2, r3, r4;
        org.htmlcleaner.DoctypeToken $r5;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void go(int)>(9);
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        r1 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        r2 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String identifier()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        r3 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String attributeValue()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void skipWhitespaces()>();
        r4 = specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: java.lang.String attributeValue()>();
        specialinvoke r0.<org.htmlcleaner.HtmlTokenizer: void ignoreUntil(char)>(60);
        $r5 = new org.htmlcleaner.DoctypeToken;
        specialinvoke $r5.<org.htmlcleaner.DoctypeToken: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);
        r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.DoctypeToken _docType> = $r5;
        return;
    }

    public org.htmlcleaner.DoctypeToken getDocType()
    {
        org.htmlcleaner.HtmlTokenizer r0;
        org.htmlcleaner.DoctypeToken $r1;

        r0 := @this: org.htmlcleaner.HtmlTokenizer;
        $r1 = r0.<org.htmlcleaner.HtmlTokenizer: org.htmlcleaner.DoctypeToken _docType>;
        return $r1;
    }
}
public interface  org.htmlcleaner.ITagInfoProvider extends java.lang.Object
{

    public abstract org.htmlcleaner.TagInfo getTagInfo(java.lang.String);
}
class org.htmlcleaner.Serializer$1 extends java.lang.Object
{
}
class org.htmlcleaner.Serializer$HeadlessTagNode extends org.htmlcleaner.TagNode
{
    final org.htmlcleaner.Serializer this$0;

    private void <init>(org.htmlcleaner.Serializer, org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.Serializer$HeadlessTagNode r0;
        org.htmlcleaner.Serializer r1;
        org.htmlcleaner.TagNode r2;
        java.util.Map r3, r4, $r5, $r6;
        java.util.List $r7, $r8;
        org.htmlcleaner.DoctypeToken $r9;

        r0 := @this: org.htmlcleaner.Serializer$HeadlessTagNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: org.htmlcleaner.TagNode;
        r0.<org.htmlcleaner.Serializer$HeadlessTagNode: org.htmlcleaner.Serializer this$0> = r1;
        specialinvoke r0.<org.htmlcleaner.TagNode: void <init>(java.lang.String)>("");
        $r5 = virtualinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: java.util.Map getAttributes()>();
        $r6 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r6);
        $r7 = virtualinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: java.util.List getChildren()>();
        $r8 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r8);
        $r9 = virtualinvoke r2.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken getDocType()>();
        virtualinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: void setDocType(org.htmlcleaner.DoctypeToken)>($r9);
        r3 = virtualinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: java.util.Map getNamespaceDeclarations()>();
        if r3 == null goto label0;

        r4 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        if r4 == null goto label0;

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>(r4);

     label0:
        return;
    }

    void <init>(org.htmlcleaner.Serializer, org.htmlcleaner.TagNode, org.htmlcleaner.Serializer$1)
    {
        org.htmlcleaner.Serializer$HeadlessTagNode r0;
        org.htmlcleaner.Serializer r1;
        org.htmlcleaner.TagNode r2;
        org.htmlcleaner.Serializer$1 r3;

        r0 := @this: org.htmlcleaner.Serializer$HeadlessTagNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: org.htmlcleaner.TagNode;
        r3 := @parameter2: org.htmlcleaner.Serializer$1;
        specialinvoke r0.<org.htmlcleaner.Serializer$HeadlessTagNode: void <init>(org.htmlcleaner.Serializer,org.htmlcleaner.TagNode)>(r1, r2);
        return;
    }
}
public abstract class org.htmlcleaner.Serializer extends java.lang.Object
{
    protected org.htmlcleaner.CleanerProperties props;

    protected void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.Serializer: org.htmlcleaner.CleanerProperties props> = r1;
        return;
    }

    public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, java.lang.String, boolean) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;
        java.lang.String r3;
        boolean z0;
        java.io.OutputStreamWriter $r4;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        $r4 = new java.io.OutputStreamWriter;
        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, r3);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String,boolean)>(r1, $r4, r3, z0);
        return;
    }

    public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;
        java.lang.String r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        r3 := @parameter2: java.lang.String;
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r1, r2, r3, 0);
        return;
    }

    public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, boolean) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;
        boolean z0;
        java.lang.String $r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        z0 := @parameter2: boolean;
        $r3 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r1, r2, $r3, z0);
        return;
    }

    public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,boolean)>(r1, r2, 0);
        return;
    }

    public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, r3;
        boolean z0;
        java.io.FileOutputStream $r4;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        $r4 = new java.io.FileOutputStream;
        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String,boolean)>(r1, $r4, r3, z0);
        return;
    }

    public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);
        return;
    }

    public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, boolean) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r3;
        boolean z0;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r3 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r1, r2, $r3, z0);
        return;
    }

    public void writeToFile(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        virtualinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String,boolean)>(r1, r2, 0);
        return;
    }

    public java.lang.String getAsString(org.htmlcleaner.TagNode, java.lang.String, boolean) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r6;
        boolean z0;
        java.io.StringWriter $r3, r4;
        java.lang.StringBuffer $r5;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r3 = new java.io.StringWriter;
        specialinvoke $r3.<java.io.StringWriter: void <init>()>();
        r4 = $r3;
        virtualinvoke r0.<org.htmlcleaner.Serializer: void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String,boolean)>(r1, r4, r2, z0);
        $r5 = virtualinvoke r4.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r6;
    }

    public java.lang.String getAsString(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        $r3 = virtualinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String,boolean)>(r1, r2, 0);
        return $r3;
    }

    public java.lang.String getAsString(org.htmlcleaner.TagNode, boolean) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        boolean z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        z0 := @parameter1: boolean;
        $r2 = <org.htmlcleaner.HtmlCleaner: java.lang.String DEFAULT_CHARSET>;
        $r3 = virtualinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String,boolean)>(r1, $r2, z0);
        return $r3;
    }

    public java.lang.String getAsString(org.htmlcleaner.TagNode) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r2 = virtualinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode,boolean)>(r1, 0);
        return $r2;
    }

    public void write(org.htmlcleaner.TagNode, java.io.Writer, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.lang.String r3;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        r3 := @parameter2: java.lang.String;
        virtualinvoke r0.<org.htmlcleaner.Serializer: void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String,boolean)>(r1, r2, r3, 0);
        return;
    }

    public void write(org.htmlcleaner.TagNode, java.io.Writer, java.lang.String, boolean) throws java.io.IOException
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.lang.String r3, r4, r17, $r21;
        boolean z0, $z1, $z2;
        org.htmlcleaner.Serializer$HeadlessTagNode $r5;
        java.io.BufferedWriter $r6, r7;
        org.htmlcleaner.CleanerProperties $r8, $r22;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20;
        org.htmlcleaner.DoctypeToken r23;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        if z0 == 0 goto label0;

        $r5 = new org.htmlcleaner.Serializer$HeadlessTagNode;
        specialinvoke $r5.<org.htmlcleaner.Serializer$HeadlessTagNode: void <init>(org.htmlcleaner.Serializer,org.htmlcleaner.TagNode,org.htmlcleaner.Serializer$1)>(r0, r1, null);
        r1 = $r5;

     label0:
        $r6 = new java.io.BufferedWriter;
        specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r2);
        r7 = $r6;
        $r8 = r0.<org.htmlcleaner.Serializer: org.htmlcleaner.CleanerProperties props>;
        $z1 = virtualinvoke $r8.<org.htmlcleaner.CleanerProperties: boolean isOmitXmlDeclaration()>();
        if $z1 != 0 goto label2;

        r4 = "<?xml version=\"1.0\"";
        if r3 == null goto label1;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encoding=\"");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?>");
        r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>($r21);

     label2:
        $r22 = r0.<org.htmlcleaner.Serializer: org.htmlcleaner.CleanerProperties props>;
        $z2 = virtualinvoke $r22.<org.htmlcleaner.CleanerProperties: boolean isOmitDoctypeDeclaration()>();
        if $z2 != 0 goto label3;

        r23 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken getDocType()>();
        if r23 == null goto label3;

        virtualinvoke r23.<org.htmlcleaner.DoctypeToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r7);

     label3:
        virtualinvoke r0.<org.htmlcleaner.Serializer: void serialize(org.htmlcleaner.TagNode,java.io.Writer)>(r1, r7);
        virtualinvoke r7.<java.io.Writer: void flush()>();
        virtualinvoke r7.<java.io.Writer: void close()>();
        return;
    }

    protected boolean isScriptOrStyle(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.Serializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.Serializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r3 = "script";
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z0 != 0 goto label0;

        $r4 = "style";
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);
        if $z1 == 0 goto label1;

     label0:
        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected abstract void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException;
}
public class org.htmlcleaner.SimpleHtmlSerializer extends org.htmlcleaner.HtmlSerializer
{

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.SimpleHtmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.SimpleHtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.HtmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.SimpleHtmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.lang.String r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r6;
        org.htmlcleaner.BaseToken $r9;

        r0 := @this: org.htmlcleaner.SimpleHtmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        $z0 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        if $z0 != 0 goto label6;

        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label5;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $z2 = r4 instanceof org.htmlcleaner.ContentNode;
        if $z2 == 0 goto label3;

        r5 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        $z3 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        if $z3 == 0 goto label1;

        $r8 = r5;
        goto label2;

     label1:
        $r8 = virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: java.lang.String escapeText(java.lang.String)>(r5);

     label2:
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r8);
        goto label4;

     label3:
        $z4 = r4 instanceof org.htmlcleaner.BaseToken;
        if $z4 == 0 goto label4;

        $r9 = (org.htmlcleaner.BaseToken) r4;
        interfaceinvoke $r9.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);

     label4:
        goto label0;

     label5:
        virtualinvoke r0.<org.htmlcleaner.SimpleHtmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);

     label6:
        return;
    }
}
public class org.htmlcleaner.SimpleXmlSerializer extends org.htmlcleaner.XmlSerializer
{

    public void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.SimpleXmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.SimpleXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.XmlSerializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    protected void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.SimpleXmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.lang.String r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r6;
        org.htmlcleaner.BaseToken $r9;

        r0 := @this: org.htmlcleaner.SimpleXmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);
        $z0 = virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        if $z0 != 0 goto label6;

        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label5;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $z2 = r4 instanceof org.htmlcleaner.ContentNode;
        if $z2 == 0 goto label3;

        r5 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        $z3 = virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        if $z3 == 0 goto label1;

        $r8 = virtualinvoke r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("]]>", "]]&gt;");
        goto label2;

     label1:
        $r8 = virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: java.lang.String escapeXml(java.lang.String)>(r5);

     label2:
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r8);
        goto label4;

     label3:
        $z4 = r4 instanceof org.htmlcleaner.BaseToken;
        if $z4 == 0 goto label4;

        $r9 = (org.htmlcleaner.BaseToken) r4;
        interfaceinvoke $r9.<org.htmlcleaner.BaseToken: void serialize(org.htmlcleaner.Serializer,java.io.Writer)>(r0, r2);

     label4:
        goto label0;

     label5:
        virtualinvoke r0.<org.htmlcleaner.SimpleXmlSerializer: void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean)>(r1, r2, 0);

     label6:
        return;
    }
}
public class org.htmlcleaner.SpecialEntity extends java.lang.Object
{
    private static java.util.Map entities;
    private static int maxEntityLength;
    private java.lang.String key;
    private int intCode;

    public static void addEntity(java.lang.String, int) throws org.htmlcleaner.HtmlCleanerException
    {
        java.lang.String r0, $r7;
        int i0, i1, $i2;
        java.util.Map $r1, $r8;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;
        boolean $z0;
        org.htmlcleaner.HtmlCleanerException $r3;
        org.htmlcleaner.SpecialEntity $r9;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = <org.htmlcleaner.SpecialEntity: java.util.Map entities>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);
        if $z0 == 0 goto label0;

        $r3 = new org.htmlcleaner.HtmlCleanerException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entity \"");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is already defined!");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<org.htmlcleaner.HtmlCleanerException: void <init>(java.lang.String)>($r7);
        throw $r3;

     label0:
        $r8 = <org.htmlcleaner.SpecialEntity: java.util.Map entities>;
        $r9 = new org.htmlcleaner.SpecialEntity;
        specialinvoke $r9.<org.htmlcleaner.SpecialEntity: void <init>(java.lang.String,int)>(r0, i0);
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r9);
        i1 = virtualinvoke r0.<java.lang.String: int length()>();
        $i2 = <org.htmlcleaner.SpecialEntity: int maxEntityLength>;
        if i1 <= $i2 goto label1;

        <org.htmlcleaner.SpecialEntity: int maxEntityLength> = i1;

     label1:
        return;
    }

    public static org.htmlcleaner.SpecialEntity getEntity(java.lang.String)
    {
        java.lang.String r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.htmlcleaner.SpecialEntity $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = <org.htmlcleaner.SpecialEntity: java.util.Map entities>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        $r3 = (org.htmlcleaner.SpecialEntity) $r2;
        return $r3;
    }

    static int getMaxEntityLength()
    {
        int $i0;

        $i0 = <org.htmlcleaner.SpecialEntity: int maxEntityLength>;
        return $i0;
    }

    private void <init>(java.lang.String, int)
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.SpecialEntity: java.lang.String key> = r1;
        r0.<org.htmlcleaner.SpecialEntity: int intCode> = i0;
        return;
    }

    public java.lang.String getKey()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        $r1 = r0.<org.htmlcleaner.SpecialEntity: java.lang.String key>;
        return $r1;
    }

    public int getIntCode()
    {
        org.htmlcleaner.SpecialEntity r0;
        int $i0;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;
        return $i0;
    }

    public char getCharacter()
    {
        org.htmlcleaner.SpecialEntity r0;
        int $i0;
        char $c1;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;
        $c1 = (char) $i0;
        return $c1;
    }

    public java.lang.String getDecimalNCR()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }

    public java.lang.String getHexNCR()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        int $i0;
        java.lang.String $r3, $r6;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#x");
        $i0 = r0.<org.htmlcleaner.SpecialEntity: int intCode>;
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    public java.lang.String getEscapedValue()
    {
        org.htmlcleaner.SpecialEntity r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.htmlcleaner.SpecialEntity;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");
        $r3 = r0.<org.htmlcleaner.SpecialEntity: java.lang.String key>;
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <org.htmlcleaner.SpecialEntity: java.util.Map entities> = $r0;
        <org.htmlcleaner.SpecialEntity: int maxEntityLength> = 0;
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("nbsp", 160);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iexcl", 161);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cent", 162);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("pound", 163);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("curren", 164);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("yen", 165);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("brvbar", 166);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sect", 167);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uml", 168);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("copy", 169);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ordf", 170);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("laquo", 171);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("not", 172);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("shy", 173);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("reg", 174);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("macr", 175);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("deg", 176);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("plusmn", 177);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sup2", 178);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sup3", 179);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("acute", 180);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("micro", 181);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("para", 182);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("middot", 183);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cedil", 184);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sup1", 185);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ordm", 186);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("raquo", 187);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("frac14", 188);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("frac12", 189);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("frac34", 190);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iquest", 191);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Agrave", 192);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Aacute", 193);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Acirc", 194);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Atilde", 195);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Auml", 196);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Aring", 197);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("AElig", 198);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ccedil", 199);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Egrave", 200);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Eacute", 201);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ecirc", 202);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Euml", 203);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Igrave", 204);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Iacute", 205);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Icirc", 206);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Iuml", 207);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ETH", 208);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ntilde", 209);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ograve", 210);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Oacute", 211);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ocirc", 212);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Otilde", 213);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ouml", 214);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("times", 215);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Oslash", 216);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ugrave", 217);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Uacute", 218);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Ucirc", 219);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Uuml", 220);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Yacute", 221);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("THORN", 222);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("szlig", 223);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("agrave", 224);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("aacute", 225);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("acirc", 226);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("atilde", 227);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("auml", 228);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("aring", 229);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("aelig", 230);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ccedil", 231);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("egrave", 232);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("eacute", 233);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ecirc", 234);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("euml", 235);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("igrave", 236);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iacute", 237);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("icirc", 238);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iuml", 239);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("eth", 240);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ntilde", 241);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ograve", 242);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oacute", 243);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ocirc", 244);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("otilde", 245);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ouml", 246);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("divide", 247);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oslash", 248);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ugrave", 249);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uacute", 250);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ucirc", 251);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uuml", 252);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("yacute", 253);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("thorn", 254);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("yuml", 255);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("OElig", 338);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oelig", 339);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Scaron", 352);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("scaron", 353);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Yuml", 376);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("fnof", 402);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("circ", 710);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("tilde", 732);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Alpha", 913);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Beta", 914);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Gamma", 915);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Delta", 916);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Epsilon", 917);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Zeta", 918);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Eta", 919);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Theta", 920);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Iota", 921);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Kappa", 922);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Lambda", 923);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Mu", 924);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Nu", 925);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Xi", 926);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Omicron", 927);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Pi", 928);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Rho", 929);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Sigma", 931);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Tau", 932);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Upsilon", 933);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Phi", 934);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Chi", 935);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Psi", 936);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Omega", 937);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("alpha", 945);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("beta", 946);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("gamma", 947);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("delta", 948);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("epsilon", 949);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("zeta", 950);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("eta", 951);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("theta", 952);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("iota", 953);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("kappa", 954);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lambda", 955);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("mu", 956);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("nu", 957);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("xi", 958);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("omicron", 959);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("pi", 960);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rho", 961);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sigmaf", 962);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sigma", 963);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("tau", 964);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("upsilon", 965);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("phi", 966);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("chi", 967);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("psi", 968);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("omega", 969);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("thetasym", 977);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("upsih", 978);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("piv", 982);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ensp", 8194);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("emsp", 8195);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("thinsp", 8201);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("zwnj", 8204);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("zwj", 8205);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lrm", 8206);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rlm", 8207);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ndash", 8211);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("mdash", 8212);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lsquo", 8216);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rsquo", 8217);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sbquo", 8218);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ldquo", 8220);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rdquo", 8221);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("bdquo", 8222);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("dagger", 8224);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Dagger", 8225);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("bull", 8226);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("hellip", 8230);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("permil", 8240);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("prime", 8242);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("Prime", 8243);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lsaquo", 8249);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rsaquo", 8250);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oline", 8254);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("frasl", 8260);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("euro", 8364);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("image", 8465);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("weierp", 8472);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("real", 8476);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("trade", 8482);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("alefsym", 8501);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("larr", 8592);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uarr", 8593);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rarr", 8594);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("darr", 8595);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("harr", 8596);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("crarr", 8629);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lArr", 8656);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("uArr", 8657);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rArr", 8658);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("dArr", 8659);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("hArr", 8660);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("forall", 8704);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("part", 8706);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("exist", 8707);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("empty", 8709);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("nabla", 8711);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("isin", 8712);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("notin", 8713);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ni", 8715);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("prod", 8719);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sum", 8721);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("minus", 8722);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lowast", 8727);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("radic", 8730);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("prop", 8733);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("infin", 8734);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ang", 8736);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("and", 8743);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("or", 8744);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cap", 8745);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cup", 8746);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("int", 8747);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("there4", 8756);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sim", 8764);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("cong", 8773);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("asymp", 8776);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ne", 8800);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("equiv", 8801);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("le", 8804);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("ge", 8805);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sub", 8834);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sup", 8835);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("nsub", 8836);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sube", 8838);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("supe", 8839);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("oplus", 8853);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("otimes", 8855);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("perp", 8869);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("sdot", 8901);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lceil", 8968);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rceil", 8969);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lfloor", 8970);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rfloor", 8971);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("lang", 9001);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("rang", 9002);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("loz", 9674);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("spades", 9824);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("clubs", 9827);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("hearts", 9829);
        staticinvoke <org.htmlcleaner.SpecialEntity: void addEntity(java.lang.String,int)>("diams", 9830);
        return;
    }
}
public class org.htmlcleaner.TagInfo extends java.lang.Object
{
    protected static final int HEAD_AND_BODY;
    protected static final int HEAD;
    protected static final int BODY;
    protected static final int CONTENT_ALL;
    protected static final int CONTENT_NONE;
    protected static final int CONTENT_TEXT;
    private java.lang.String name;
    private int contentType;
    private java.util.Set mustCloseTags;
    private java.util.Set higherTags;
    private java.util.Set childTags;
    private java.util.Set permittedTags;
    private java.util.Set copyTags;
    private java.util.Set continueAfterTags;
    private int belongsTo;
    private java.lang.String requiredParent;
    private java.lang.String fatalTag;
    private boolean deprecated;
    private boolean unique;
    private boolean ignorePermitted;

    public void <init>(java.lang.String, int, int, boolean, boolean, boolean)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0, z1, z2;
        java.util.HashSet $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        z2 := @parameter5: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.HashSet;
        specialinvoke $r2.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags> = $r2;
        $r3 = new java.util.HashSet;
        specialinvoke $r3.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags> = $r3;
        $r4 = new java.util.HashSet;
        specialinvoke $r4.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.TagInfo: java.util.Set childTags> = $r4;
        $r5 = new java.util.HashSet;
        specialinvoke $r5.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags> = $r5;
        $r6 = new java.util.HashSet;
        specialinvoke $r6.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags> = $r6;
        $r7 = new java.util.HashSet;
        specialinvoke $r7.<java.util.HashSet: void <init>()>();
        r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags> = $r7;
        r0.<org.htmlcleaner.TagInfo: int belongsTo> = 2;
        r0.<org.htmlcleaner.TagInfo: java.lang.String requiredParent> = null;
        r0.<org.htmlcleaner.TagInfo: java.lang.String fatalTag> = null;
        r0.<org.htmlcleaner.TagInfo: boolean deprecated> = 0;
        r0.<org.htmlcleaner.TagInfo: boolean unique> = 0;
        r0.<org.htmlcleaner.TagInfo: boolean ignorePermitted> = 0;
        r0.<org.htmlcleaner.TagInfo: java.lang.String name> = r1;
        r0.<org.htmlcleaner.TagInfo: int contentType> = i0;
        r0.<org.htmlcleaner.TagInfo: int belongsTo> = i1;
        r0.<org.htmlcleaner.TagInfo: boolean deprecated> = z0;
        r0.<org.htmlcleaner.TagInfo: boolean unique> = z1;
        r0.<org.htmlcleaner.TagInfo: boolean ignorePermitted> = z2;
        return;
    }

    public void defineFatalTags(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r0.<org.htmlcleaner.TagInfo: java.lang.String fatalTag> = r4;
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        return;
    }

    public void defineRequiredEnclosingTags(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r0.<org.htmlcleaner.TagInfo: java.lang.String requiredParent> = r4;
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        return;
    }

    public void defineForbiddenTags(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        return;
    }

    public void defineAllowedChildrenTags(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        return;
    }

    public void defineHigherLevelTags(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        return;
    }

    public void defineCloseBeforeCopyInsideTags(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6, $r7;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        $r7 = r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags>;
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        return;
    }

    public void defineCloseInsideCopyAfterTags(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        return;
    }

    public void defineCloseBeforeTags(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1, r4, $r5;
        java.util.StringTokenizer $r2, r3;
        boolean $z0;
        java.util.Set $r6;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.util.StringTokenizer;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, ",");
        r3 = $r2;

     label0:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        r4 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags>;
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        return;
    }

    public java.lang.String getName()
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.lang.String name>;
        return $r1;
    }

    public void setName(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        r0.<org.htmlcleaner.TagInfo: java.lang.String name> = r1;
        return;
    }

    public int getContentType()
    {
        org.htmlcleaner.TagInfo r0;
        int $i0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        return $i0;
    }

    public java.util.Set getMustCloseTags()
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags>;
        return $r1;
    }

    public void setMustCloseTags(java.util.Set)
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags> = r1;
        return;
    }

    public java.util.Set getHigherTags()
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        return $r1;
    }

    public void setHigherTags(java.util.Set)
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags> = r1;
        return;
    }

    public java.util.Set getChildTags()
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        return $r1;
    }

    public void setChildTags(java.util.Set)
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        r0.<org.htmlcleaner.TagInfo: java.util.Set childTags> = r1;
        return;
    }

    public java.util.Set getPermittedTags()
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        return $r1;
    }

    public void setPermittedTags(java.util.Set)
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags> = r1;
        return;
    }

    public java.util.Set getCopyTags()
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags>;
        return $r1;
    }

    public void setCopyTags(java.util.Set)
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags> = r1;
        return;
    }

    public java.util.Set getContinueAfterTags()
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags>;
        return $r1;
    }

    public void setContinueAfterTags(java.util.Set)
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.util.Set;
        r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags> = r1;
        return;
    }

    public java.lang.String getRequiredParent()
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.lang.String requiredParent>;
        return $r1;
    }

    public void setRequiredParent(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        r0.<org.htmlcleaner.TagInfo: java.lang.String requiredParent> = r1;
        return;
    }

    public int getBelongsTo()
    {
        org.htmlcleaner.TagInfo r0;
        int $i0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $i0 = r0.<org.htmlcleaner.TagInfo: int belongsTo>;
        return $i0;
    }

    public void setBelongsTo(int)
    {
        org.htmlcleaner.TagInfo r0;
        int i0;

        r0 := @this: org.htmlcleaner.TagInfo;
        i0 := @parameter0: int;
        r0.<org.htmlcleaner.TagInfo: int belongsTo> = i0;
        return;
    }

    public java.lang.String getFatalTag()
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.lang.String fatalTag>;
        return $r1;
    }

    public void setFatalTag(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        r0.<org.htmlcleaner.TagInfo: java.lang.String fatalTag> = r1;
        return;
    }

    public boolean isDeprecated()
    {
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $z0 = r0.<org.htmlcleaner.TagInfo: boolean deprecated>;
        return $z0;
    }

    public void setDeprecated(boolean)
    {
        org.htmlcleaner.TagInfo r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.TagInfo: boolean deprecated> = z0;
        return;
    }

    public boolean isUnique()
    {
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $z0 = r0.<org.htmlcleaner.TagInfo: boolean unique>;
        return $z0;
    }

    public void setUnique(boolean)
    {
        org.htmlcleaner.TagInfo r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.TagInfo: boolean unique> = z0;
        return;
    }

    public boolean isIgnorePermitted()
    {
        org.htmlcleaner.TagInfo r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $z0 = r0.<org.htmlcleaner.TagInfo: boolean ignorePermitted>;
        return $z0;
    }

    public boolean isEmptyTag()
    {
        org.htmlcleaner.TagInfo r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        if 1 != $i0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void setIgnorePermitted(boolean)
    {
        org.htmlcleaner.TagInfo r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.TagInfo: boolean ignorePermitted> = z0;
        return;
    }

    boolean allowsBody()
    {
        org.htmlcleaner.TagInfo r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        if 1 == $i0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    boolean isHigher(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.htmlcleaner.TagInfo: java.util.Set higherTags>;
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    boolean isCopy(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags>;
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    boolean hasCopyTags()
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set copyTags>;
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    boolean isContinueAfter(java.lang.String)
    {
        org.htmlcleaner.TagInfo r0;
        java.lang.String r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.htmlcleaner.TagInfo: java.util.Set continueAfterTags>;
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    boolean hasPermittedTags()
    {
        org.htmlcleaner.TagInfo r0;
        java.util.Set $r1;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.TagInfo;
        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    boolean isHeadTag()
    {
        org.htmlcleaner.TagInfo r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $i0 = r0.<org.htmlcleaner.TagInfo: int belongsTo>;
        if $i0 != 1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    boolean isHeadAndBodyTag()
    {
        org.htmlcleaner.TagInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $i0 = r0.<org.htmlcleaner.TagInfo: int belongsTo>;
        if $i0 == 1 goto label0;

        $i1 = r0.<org.htmlcleaner.TagInfo: int belongsTo>;
        if $i1 != 0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isMustCloseTag(org.htmlcleaner.TagInfo)
    {
        org.htmlcleaner.TagInfo r0, r1;
        java.util.Set $r2;
        java.lang.String $r3;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: org.htmlcleaner.TagInfo;
        if r1 == null goto label3;

        $r2 = r0.<org.htmlcleaner.TagInfo: java.util.Set mustCloseTags>;
        $r3 = virtualinvoke r1.<org.htmlcleaner.TagInfo: java.lang.String getName()>();
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);
        if $z0 != 0 goto label0;

        $i0 = r1.<org.htmlcleaner.TagInfo: int contentType>;
        if $i0 != 2 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    boolean allowsItem(org.htmlcleaner.BaseToken)
    {
        org.htmlcleaner.TagInfo r0;
        org.htmlcleaner.BaseToken r1;
        org.htmlcleaner.TagToken r2, $r7, $r11;
        java.lang.String r3, $r4, $r8, $r12;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Set $r5, $r6, $r9, $r10;

        r0 := @this: org.htmlcleaner.TagInfo;
        r1 := @parameter0: org.htmlcleaner.BaseToken;
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        if $i0 == 1 goto label0;

        $z0 = r1 instanceof org.htmlcleaner.TagToken;
        if $z0 == 0 goto label0;

        r2 = (org.htmlcleaner.TagToken) r1;
        r3 = virtualinvoke r2.<org.htmlcleaner.TagToken: java.lang.String getName()>();
        $r4 = "script";
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z1 == 0 goto label0;

        return 1;

     label0:
        $i1 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        if 0 != $i1 goto label8;

        $r5 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        $z2 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();
        if $z2 != 0 goto label3;

        $z3 = r1 instanceof org.htmlcleaner.TagToken;
        if $z3 == 0 goto label1;

        $r6 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        $r7 = (org.htmlcleaner.TagToken) r1;
        $r8 = virtualinvoke $r7.<org.htmlcleaner.TagToken: java.lang.String getName()>();
        $z4 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r8);
        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        $r9 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        $z5 = interfaceinvoke $r9.<java.util.Set: boolean isEmpty()>();
        if $z5 != 0 goto label7;

        $z6 = r1 instanceof org.htmlcleaner.TagToken;
        if $z6 == 0 goto label5;

        $r10 = r0.<org.htmlcleaner.TagInfo: java.util.Set permittedTags>;
        $r11 = (org.htmlcleaner.TagToken) r1;
        $r12 = virtualinvoke $r11.<org.htmlcleaner.TagToken: java.lang.String getName()>();
        $z7 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r12);
        if $z7 != 0 goto label4;

        $z8 = 1;
        goto label6;

     label4:
        $z8 = 0;
        goto label6;

     label5:
        $z8 = 1;

     label6:
        return $z8;

     label7:
        return 1;

     label8:
        $i2 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        if 2 != $i2 goto label11;

        $z9 = r1 instanceof org.htmlcleaner.TagToken;
        if $z9 != 0 goto label9;

        $z10 = 1;
        goto label10;

     label9:
        $z10 = 0;

     label10:
        return $z10;

     label11:
        return 0;
    }

    boolean allowsAnything()
    {
        org.htmlcleaner.TagInfo r0;
        int $i0, $i1;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagInfo;
        $i0 = r0.<org.htmlcleaner.TagInfo: int contentType>;
        if 0 != $i0 goto label0;

        $r1 = r0.<org.htmlcleaner.TagInfo: java.util.Set childTags>;
        $i1 = interfaceinvoke $r1.<java.util.Set: int size()>();
        if $i1 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }
}
public interface  org.htmlcleaner.TagNode$ITagNodeCondition extends java.lang.Object
{

    public abstract boolean satisfy(org.htmlcleaner.TagNode);
}
public class org.htmlcleaner.TagNode$TagAllCondition extends java.lang.Object implements org.htmlcleaner.TagNode$ITagNodeCondition
{
    final org.htmlcleaner.TagNode this$0;

    public void <init>(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.TagNode$TagAllCondition r0;
        org.htmlcleaner.TagNode r1;

        r0 := @this: org.htmlcleaner.TagNode$TagAllCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r0.<org.htmlcleaner.TagNode$TagAllCondition: org.htmlcleaner.TagNode this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.TagNode$TagAllCondition r0;
        org.htmlcleaner.TagNode r1;

        r0 := @this: org.htmlcleaner.TagNode$TagAllCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        return 1;
    }
}
public class org.htmlcleaner.TagNode$TagNodeAttExistsCondition extends java.lang.Object implements org.htmlcleaner.TagNode$ITagNodeCondition
{
    private java.lang.String attName;
    final org.htmlcleaner.TagNode this$0;

    public void <init>(org.htmlcleaner.TagNode, java.lang.String)
    {
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: org.htmlcleaner.TagNode this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: java.lang.String attName> = r2;
        return;
    }

    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition r0;
        org.htmlcleaner.TagNode r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        if r1 != null goto label0;

        $z0 = 0;
        goto label1;

     label0:
        $r2 = staticinvoke <org.htmlcleaner.TagNode: java.util.Map access$000(org.htmlcleaner.TagNode)>(r1);
        $r3 = r0.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: java.lang.String attName>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

     label1:
        return $z0;
    }
}
public class org.htmlcleaner.TagNode$TagNodeAttValueCondition extends java.lang.Object implements org.htmlcleaner.TagNode$ITagNodeCondition
{
    private java.lang.String attName;
    private java.lang.String attValue;
    private boolean isCaseSensitive;
    final org.htmlcleaner.TagNode this$0;

    public void <init>(org.htmlcleaner.TagNode, java.lang.String, java.lang.String, boolean)
    {
        org.htmlcleaner.TagNode$TagNodeAttValueCondition r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, r3;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: org.htmlcleaner.TagNode this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attName> = r2;
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attValue> = r3;
        r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: boolean isCaseSensitive> = z0;
        return;
    }

    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.TagNode$TagNodeAttValueCondition r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        if r1 == null goto label0;

        $r2 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attName>;
        if $r2 == null goto label0;

        $r3 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attValue>;
        if $r3 != null goto label1;

     label0:
        return 0;

     label1:
        $z0 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: boolean isCaseSensitive>;
        if $z0 == 0 goto label2;

        $r4 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attValue>;
        $r5 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attName>;
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>($r5);
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        goto label3;

     label2:
        $r7 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attValue>;
        $r8 = r0.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: java.lang.String attName>;
        $r9 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>($r8);
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

     label3:
        return $z1;
    }
}
public class org.htmlcleaner.TagNode$TagNodeNameCondition extends java.lang.Object implements org.htmlcleaner.TagNode$ITagNodeCondition
{
    private java.lang.String name;
    final org.htmlcleaner.TagNode this$0;

    public void <init>(org.htmlcleaner.TagNode, java.lang.String)
    {
        org.htmlcleaner.TagNode$TagNodeNameCondition r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeNameCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: org.htmlcleaner.TagNode this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: java.lang.String name> = r2;
        return;
    }

    public boolean satisfy(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.TagNode$TagNodeNameCondition r0;
        org.htmlcleaner.TagNode r1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.htmlcleaner.TagNode$TagNodeNameCondition;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        if r1 != null goto label0;

        $z0 = 0;
        goto label1;

     label0:
        $r2 = r1.<org.htmlcleaner.TagNode: java.lang.String name>;
        $r3 = r0.<org.htmlcleaner.TagNode$TagNodeNameCondition: java.lang.String name>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

     label1:
        return $z0;
    }
}
public class org.htmlcleaner.TagNode extends org.htmlcleaner.TagToken implements org.htmlcleaner.HtmlNode
{
    private org.htmlcleaner.TagNode parent;
    private java.util.Map attributes;
    private java.util.List children;
    private org.htmlcleaner.DoctypeToken docType;
    private java.util.Map nsDeclarations;
    private java.util.List itemsToMove;
    private transient boolean isFormed;

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, $r3;
        java.util.LinkedHashMap $r4;
        java.util.ArrayList $r5;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        specialinvoke r0.<org.htmlcleaner.TagToken: void <init>(java.lang.String)>($r3);
        r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent> = null;
        $r4 = new java.util.LinkedHashMap;
        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();
        r0.<org.htmlcleaner.TagNode: java.util.Map attributes> = $r4;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r0.<org.htmlcleaner.TagNode: java.util.List children> = $r5;
        r0.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken docType> = null;
        r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations> = null;
        r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove> = null;
        r0.<org.htmlcleaner.TagNode: boolean isFormed> = 0;
        return;
    }

    public boolean setName(java.lang.String)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        $z0 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlIdentifier(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        r0.<org.htmlcleaner.TagNode: java.lang.String name> = r1;
        return 1;

     label0:
        return 0;
    }

    public java.lang.String getAttributeByName(java.lang.String)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, $r3, $r5;
        java.util.Map $r2;
        java.lang.Object $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $r2 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);
        $r5 = (java.lang.String) $r4;
        goto label1;

     label0:
        $r5 = null;

     label1:
        return $r5;
    }

    public java.util.Map getAttributes()
    {
        org.htmlcleaner.TagNode r0;
        java.util.Map $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        return $r1;
    }

    public boolean hasAttribute(java.lang.String)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $r2 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void addAttribute(java.lang.String, java.lang.String)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        virtualinvoke r0.<org.htmlcleaner.TagNode: void setAttribute(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2, $r3, $r4, r5, $r6, $r7, $r10;
        boolean $z0, $z1, $z2;
        java.util.Map $r8;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r1 == null goto label4;

        $r3 = "";
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z0 != 0 goto label4;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r6 = "xmlns";
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z1 == 0 goto label0;

        virtualinvoke r0.<org.htmlcleaner.TagNode: void addNamespaceDeclaration(java.lang.String,java.lang.String)>("", r2);
        goto label4;

     label0:
        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");
        if $z2 == 0 goto label1;

        $r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(6);
        virtualinvoke r0.<org.htmlcleaner.TagNode: void addNamespaceDeclaration(java.lang.String,java.lang.String)>($r7, r2);
        goto label4;

     label1:
        $r8 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        if r2 != null goto label2;

        $r10 = "";
        goto label3;

     label2:
        $r10 = r2;

     label3:
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r10);

     label4:
        return;
    }

    public void addNamespaceDeclaration(java.lang.String, java.lang.String)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2;
        java.util.TreeMap $r3;
        java.util.Map $r4, $r5;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        if $r4 != null goto label0;

        $r3 = new java.util.TreeMap;
        specialinvoke $r3.<java.util.TreeMap: void <init>()>();
        r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations> = $r3;

     label0:
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        return;
    }

    public java.util.Map getNamespaceDeclarations()
    {
        org.htmlcleaner.TagNode r0;
        java.util.Map $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        return $r1;
    }

    public void removeAttribute(java.lang.String)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, $r2, $r3, $r5;
        boolean $z0;
        java.util.Map $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $r2 = "";
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 != 0 goto label0;

        $r4 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

     label0:
        return;
    }

    public java.util.List getChildren()
    {
        org.htmlcleaner.TagNode r0;
        java.util.List $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        return $r1;
    }

    public boolean hasChildren()
    {
        org.htmlcleaner.TagNode r0;
        java.util.List $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i0 <= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    void setChildren(java.util.List)
    {
        org.htmlcleaner.TagNode r0;
        java.util.List r1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.util.List;
        r0.<org.htmlcleaner.TagNode: java.util.List children> = r1;
        return;
    }

    public java.util.List getChildTagList()
    {
        org.htmlcleaner.TagNode r0;
        java.util.ArrayList $r1, r2;
        int i0, $i1;
        java.lang.Object r3;
        java.util.List $r4, $r5;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        i0 = 0;

     label0:
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        if i0 >= $i1 goto label2;

        $r5 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        r3 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);
        $z0 = r3 instanceof org.htmlcleaner.TagNode;
        if $z0 == 0 goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return r2;
    }

    public org.htmlcleaner.TagNode[] getChildTags()
    {
        org.htmlcleaner.TagNode r0, $r4;
        java.util.List r1;
        org.htmlcleaner.TagNode[] r2;
        int i0, $i1, $i2;
        java.lang.Object $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 = virtualinvoke r0.<org.htmlcleaner.TagNode: java.util.List getChildTagList()>();
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();
        r2 = newarray (org.htmlcleaner.TagNode)[$i1];
        i0 = 0;

     label0:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();
        if i0 >= $i2 goto label1;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);
        $r4 = (org.htmlcleaner.TagNode) $r3;
        r2[i0] = $r4;
        i0 = i0 + 1;
        goto label0;

     label1:
        return r2;
    }

    public java.lang.StringBuffer getText()
    {
        org.htmlcleaner.TagNode r0, $r9;
        java.lang.StringBuffer $r1, r2, r4;
        int i0, $i1;
        java.lang.Object r3;
        java.util.List $r5, $r6;
        boolean $z0, $z1;
        java.lang.String $r7;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        i0 = 0;

     label0:
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        if i0 >= $i1 goto label3;

        $r6 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        r3 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);
        $z0 = r3 instanceof org.htmlcleaner.ContentNode;
        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        goto label2;

     label1:
        $z1 = r3 instanceof org.htmlcleaner.TagNode;
        if $z1 == 0 goto label2;

        $r9 = (org.htmlcleaner.TagNode) r3;
        r4 = virtualinvoke $r9.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r4);

     label2:
        i0 = i0 + 1;
        goto label0;

     label3:
        return r2;
    }

    public org.htmlcleaner.TagNode getParent()
    {
        org.htmlcleaner.TagNode r0, $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        return $r1;
    }

    public org.htmlcleaner.DoctypeToken getDocType()
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.DoctypeToken $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken docType>;
        return $r1;
    }

    public void setDocType(org.htmlcleaner.DoctypeToken)
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.DoctypeToken r1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.DoctypeToken;
        r0.<org.htmlcleaner.TagNode: org.htmlcleaner.DoctypeToken docType> = r1;
        return;
    }

    public void addChild(java.lang.Object)
    {
        org.htmlcleaner.TagNode r0, r2;
        java.lang.Object r1;
        boolean $z0, $z2;
        java.util.List $r3, $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return;

     label0:
        $z0 = r1 instanceof java.util.List;
        if $z0 == 0 goto label1;

        $r3 = (java.util.List) r1;
        virtualinvoke r0.<org.htmlcleaner.TagNode: void addChildren(java.util.List)>($r3);
        goto label2;

     label1:
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);
        $z2 = r1 instanceof org.htmlcleaner.TagNode;
        if $z2 == 0 goto label2;

        r2 = (org.htmlcleaner.TagNode) r1;
        r2.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent> = r0;

     label2:
        return;
    }

    public void addChildren(java.util.List)
    {
        org.htmlcleaner.TagNode r0;
        java.util.List r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.util.List;
        if r1 == null goto label1;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke r0.<org.htmlcleaner.TagNode: void addChild(java.lang.Object)>(r3);
        goto label0;

     label1:
        return;
    }

    private org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition, boolean)
    {
        org.htmlcleaner.TagNode r0, r3, r4;
        org.htmlcleaner.TagNode$ITagNodeCondition r1;
        boolean z0, $z1, $z2;
        int i0, $i1;
        java.lang.Object r2;
        java.util.List $r5, $r6;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNode$ITagNodeCondition;
        z0 := @parameter1: boolean;
        if r1 != null goto label0;

        return null;

     label0:
        i0 = 0;

     label1:
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        if i0 >= $i1 goto label4;

        $r6 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        r2 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);
        $z1 = r2 instanceof org.htmlcleaner.TagNode;
        if $z1 == 0 goto label3;

        r3 = (org.htmlcleaner.TagNode) r2;
        $z2 = interfaceinvoke r1.<org.htmlcleaner.TagNode$ITagNodeCondition: boolean satisfy(org.htmlcleaner.TagNode)>(r3);
        if $z2 == 0 goto label2;

        return r3;

     label2:
        if z0 == 0 goto label3;

        r4 = specialinvoke r3.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>(r1, z0);
        if r4 == null goto label3;

        return r4;

     label3:
        i0 = i0 + 1;
        goto label1;

     label4:
        return null;
    }

    private java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition, boolean)
    {
        org.htmlcleaner.TagNode r0, r5;
        org.htmlcleaner.TagNode$ITagNodeCondition r1;
        boolean z0, $z1, $z2;
        java.util.LinkedList $r2, r3;
        int i0, $i1, $i2;
        java.lang.Object r4;
        java.util.List r6, $r7, $r8;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNode$ITagNodeCondition;
        z0 := @parameter1: boolean;
        $r2 = new java.util.LinkedList;
        specialinvoke $r2.<java.util.LinkedList: void <init>()>();
        r3 = $r2;
        if r1 != null goto label0;

        return r3;

     label0:
        i0 = 0;

     label1:
        $r7 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();
        if i0 >= $i1 goto label4;

        $r8 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        r4 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);
        $z1 = r4 instanceof org.htmlcleaner.TagNode;
        if $z1 == 0 goto label3;

        r5 = (org.htmlcleaner.TagNode) r4;
        $z2 = interfaceinvoke r1.<org.htmlcleaner.TagNode$ITagNodeCondition: boolean satisfy(org.htmlcleaner.TagNode)>(r5);
        if $z2 == 0 goto label2;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        if z0 == 0 goto label3;

        r6 = specialinvoke r5.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>(r1, z0);
        if r6 == null goto label3;

        $i2 = interfaceinvoke r6.<java.util.List: int size()>();
        if $i2 <= 0 goto label3;

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r6);

     label3:
        i0 = i0 + 1;
        goto label1;

     label4:
        return r3;
    }

    private org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition, boolean)
    {
        org.htmlcleaner.TagNode r0, $r5;
        org.htmlcleaner.TagNode$ITagNodeCondition r1;
        boolean z0;
        java.util.List r2;
        org.htmlcleaner.TagNode[] r3;
        int i0, $i1, $i2;
        java.lang.Object $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNode$ITagNodeCondition;
        z0 := @parameter1: boolean;
        r2 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>(r1, z0);
        if r2 != null goto label0;

        $i1 = 0;
        goto label1;

     label0:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label1:
        r3 = newarray (org.htmlcleaner.TagNode)[$i1];
        i0 = 0;

     label2:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();
        if i0 >= $i2 goto label3;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);
        $r5 = (org.htmlcleaner.TagNode) $r4;
        r3[i0] = $r5;
        i0 = i0 + 1;
        goto label2;

     label3:
        return r3;
    }

    public java.util.List getAllElementsList(boolean)
    {
        org.htmlcleaner.TagNode r0;
        boolean z0;
        org.htmlcleaner.TagNode$TagAllCondition $r1;
        java.util.List $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        z0 := @parameter0: boolean;
        $r1 = new org.htmlcleaner.TagNode$TagAllCondition;
        specialinvoke $r1.<org.htmlcleaner.TagNode$TagAllCondition: void <init>(org.htmlcleaner.TagNode)>(r0);
        $r2 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r1, z0);
        return $r2;
    }

    public org.htmlcleaner.TagNode[] getAllElements(boolean)
    {
        org.htmlcleaner.TagNode r0;
        boolean z0;
        org.htmlcleaner.TagNode$TagAllCondition $r1;
        org.htmlcleaner.TagNode[] $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        z0 := @parameter0: boolean;
        $r1 = new org.htmlcleaner.TagNode$TagAllCondition;
        specialinvoke $r1.<org.htmlcleaner.TagNode$TagAllCondition: void <init>(org.htmlcleaner.TagNode)>(r0);
        $r2 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r1, z0);
        return $r2;
    }

    public org.htmlcleaner.TagNode findElementByName(java.lang.String, boolean)
    {
        org.htmlcleaner.TagNode r0, $r3;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeNameCondition $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = new org.htmlcleaner.TagNode$TagNodeNameCondition;
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeNameCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public java.util.List getElementListByName(java.lang.String, boolean)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeNameCondition $r2;
        java.util.List $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = new org.htmlcleaner.TagNode$TagNodeNameCondition;
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeNameCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public org.htmlcleaner.TagNode[] getElementsByName(java.lang.String, boolean)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeNameCondition $r2;
        org.htmlcleaner.TagNode[] $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = new org.htmlcleaner.TagNode$TagNodeNameCondition;
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeNameCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public org.htmlcleaner.TagNode findElementHavingAttribute(java.lang.String, boolean)
    {
        org.htmlcleaner.TagNode r0, $r3;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = new org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public java.util.List getElementListHavingAttribute(java.lang.String, boolean)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition $r2;
        java.util.List $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = new org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public org.htmlcleaner.TagNode[] getElementsHavingAttribute(java.lang.String, boolean)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        boolean z0;
        org.htmlcleaner.TagNode$TagNodeAttExistsCondition $r2;
        org.htmlcleaner.TagNode[] $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = new org.htmlcleaner.TagNode$TagNodeAttExistsCondition;
        specialinvoke $r2.<org.htmlcleaner.TagNode$TagNodeAttExistsCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String)>(r0, r1);
        $r3 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r2, z0);
        return $r3;
    }

    public org.htmlcleaner.TagNode findElementByAttValue(java.lang.String, java.lang.String, boolean, boolean)
    {
        org.htmlcleaner.TagNode r0, $r4;
        java.lang.String r1, r2;
        boolean z0, z1;
        org.htmlcleaner.TagNode$TagNodeAttValueCondition $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        $r3 = new org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        specialinvoke $r3.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, z1);
        $r4 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode findElement(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r3, z0);
        return $r4;
    }

    public java.util.List getElementListByAttValue(java.lang.String, java.lang.String, boolean, boolean)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2;
        boolean z0, z1;
        org.htmlcleaner.TagNode$TagNodeAttValueCondition $r3;
        java.util.List $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        $r3 = new org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        specialinvoke $r3.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, z1);
        $r4 = specialinvoke r0.<org.htmlcleaner.TagNode: java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r3, z0);
        return $r4;
    }

    public org.htmlcleaner.TagNode[] getElementsByAttValue(java.lang.String, java.lang.String, boolean, boolean)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1, r2;
        boolean z0, z1;
        org.htmlcleaner.TagNode$TagNodeAttValueCondition $r3;
        org.htmlcleaner.TagNode[] $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        $r3 = new org.htmlcleaner.TagNode$TagNodeAttValueCondition;
        specialinvoke $r3.<org.htmlcleaner.TagNode$TagNodeAttValueCondition: void <init>(org.htmlcleaner.TagNode,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, z1);
        $r4 = specialinvoke r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode[] getElements(org.htmlcleaner.TagNode$ITagNodeCondition,boolean)>($r3, z0);
        return $r4;
    }

    public java.lang.Object[] evaluateXPath(java.lang.String) throws org.htmlcleaner.XPatherException
    {
        org.htmlcleaner.TagNode r0;
        java.lang.String r1;
        org.htmlcleaner.XPather $r2;
        java.lang.Object[] $r3;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.htmlcleaner.XPather;
        specialinvoke $r2.<org.htmlcleaner.XPather: void <init>(java.lang.String)>(r1);
        $r3 = virtualinvoke $r2.<org.htmlcleaner.XPather: java.lang.Object[] evaluateAgainstNode(org.htmlcleaner.TagNode)>(r0);
        return $r3;
    }

    public boolean removeFromTree()
    {
        org.htmlcleaner.TagNode r0, $r1, $r2;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        if $r1 == null goto label0;

        $r2 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        z0 = virtualinvoke $r2.<org.htmlcleaner.TagNode: boolean removeChild(java.lang.Object)>(r0);
        r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent> = null;
        return z0;

     label0:
        return 0;
    }

    public boolean removeChild(java.lang.Object)
    {
        org.htmlcleaner.TagNode r0;
        java.lang.Object r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);
        return $z0;
    }

    public void removeAllChildren()
    {
        org.htmlcleaner.TagNode r0;
        java.util.List $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        interfaceinvoke $r1.<java.util.List: void clear()>();
        return;
    }

    public void replaceChild(org.htmlcleaner.HtmlNode, org.htmlcleaner.HtmlNode)
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1, r2;
        java.util.ListIterator r3;
        java.lang.Object r4;
        java.util.List $r5;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.HtmlNode;
        r2 := @parameter1: org.htmlcleaner.HtmlNode;
        if r2 != null goto label0;

        return;

     label0:
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        r3 = interfaceinvoke $r5.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();
        if r4 != r1 goto label2;

        interfaceinvoke r3.<java.util.ListIterator: void set(java.lang.Object)>(r2);
        goto label3;

     label2:
        goto label1;

     label3:
        return;
    }

    public int getChildIndex(org.htmlcleaner.HtmlNode)
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1;
        int i0;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.util.List $r4;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.HtmlNode;
        i0 = 0;
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        if r3 != r1 goto label1;

        return i0;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        return -1;
    }

    public void insertChild(int, org.htmlcleaner.HtmlNode)
    {
        org.htmlcleaner.TagNode r0;
        int i0;
        org.htmlcleaner.HtmlNode r1;
        java.util.List $r2;

        r0 := @this: org.htmlcleaner.TagNode;
        i0 := @parameter0: int;
        r1 := @parameter1: org.htmlcleaner.HtmlNode;
        $r2 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);
        return;
    }

    public void insertChildBefore(org.htmlcleaner.HtmlNode, org.htmlcleaner.HtmlNode)
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1, r2;
        int i0;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.HtmlNode;
        r2 := @parameter1: org.htmlcleaner.HtmlNode;
        i0 = virtualinvoke r0.<org.htmlcleaner.TagNode: int getChildIndex(org.htmlcleaner.HtmlNode)>(r1);
        if i0 < 0 goto label0;

        virtualinvoke r0.<org.htmlcleaner.TagNode: void insertChild(int,org.htmlcleaner.HtmlNode)>(i0, r2);

     label0:
        return;
    }

    public void insertChildAfter(org.htmlcleaner.HtmlNode, org.htmlcleaner.HtmlNode)
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.HtmlNode r1, r2;
        int i0, $i1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.HtmlNode;
        r2 := @parameter1: org.htmlcleaner.HtmlNode;
        i0 = virtualinvoke r0.<org.htmlcleaner.TagNode: int getChildIndex(org.htmlcleaner.HtmlNode)>(r1);
        if i0 < 0 goto label0;

        $i1 = i0 + 1;
        virtualinvoke r0.<org.htmlcleaner.TagNode: void insertChild(int,org.htmlcleaner.HtmlNode)>($i1, r2);

     label0:
        return;
    }

    void addItemForMoving(org.htmlcleaner.BaseToken)
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.BaseToken r1;
        java.util.ArrayList $r2;
        java.util.List $r3, $r4;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.BaseToken;
        $r3 = r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove>;
        if $r3 != null goto label0;

        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove> = $r2;

     label0:
        $r4 = r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove>;
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    java.util.List getItemsToMove()
    {
        org.htmlcleaner.TagNode r0;
        java.util.List $r1;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove>;
        return $r1;
    }

    void setItemsToMove(java.util.List)
    {
        org.htmlcleaner.TagNode r0;
        java.util.List r1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.util.List;
        r0.<org.htmlcleaner.TagNode: java.util.List itemsToMove> = r1;
        return;
    }

    boolean isFormed()
    {
        org.htmlcleaner.TagNode r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagNode;
        $z0 = r0.<org.htmlcleaner.TagNode: boolean isFormed>;
        return $z0;
    }

    void setFormed(boolean)
    {
        org.htmlcleaner.TagNode r0;
        boolean z0;

        r0 := @this: org.htmlcleaner.TagNode;
        z0 := @parameter0: boolean;
        r0.<org.htmlcleaner.TagNode: boolean isFormed> = z0;
        return;
    }

    void setFormed()
    {
        org.htmlcleaner.TagNode r0;

        r0 := @this: org.htmlcleaner.TagNode;
        virtualinvoke r0.<org.htmlcleaner.TagNode: void setFormed(boolean)>(1);
        return;
    }

    void transformAttributes(org.htmlcleaner.TagTransformation)
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.TagTransformation r1;
        boolean z0, z1, $z2;
        java.util.LinkedHashMap r2, $r9;
        java.util.Map r3, $r10, $r16;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.String r6, r7, r8;
        java.util.Set $r11;
        java.lang.Object $r12, $r13, $r14;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagTransformation;
        z0 = virtualinvoke r1.<org.htmlcleaner.TagTransformation: boolean isPreserveSourceAttributes()>();
        z1 = virtualinvoke r1.<org.htmlcleaner.TagTransformation: boolean hasAttributeTransformations()>();
        if z1 != 0 goto label0;

        if z0 != 0 goto label7;

     label0:
        if z0 == 0 goto label1;

        $r9 = new java.util.LinkedHashMap;
        $r10 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        specialinvoke $r9.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r10);
        goto label2;

     label1:
        $r9 = new java.util.LinkedHashMap;
        specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>();

     label2:
        r2 = $r9;
        if z1 == 0 goto label6;

        r3 = virtualinvoke r1.<org.htmlcleaner.TagTransformation: java.util.Map getAttributeTransformations()>();
        $r11 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label6;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r12;
        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        r6 = (java.lang.String) $r13;
        $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        r7 = (java.lang.String) $r14;
        if r7 != null goto label4;

        interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6);
        goto label5;

     label4:
        $r16 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        r8 = staticinvoke <org.htmlcleaner.Utils: java.lang.String evaluateTemplate(java.lang.String,java.util.Map)>(r7, $r16);
        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8);

     label5:
        goto label3;

     label6:
        r0.<org.htmlcleaner.TagNode: java.util.Map attributes> = r2;

     label7:
        return;
    }

    public void traverse(org.htmlcleaner.TagNodeVisitor)
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.TagNodeVisitor r1;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNodeVisitor;
        specialinvoke r0.<org.htmlcleaner.TagNode: boolean traverseInternally(org.htmlcleaner.TagNodeVisitor)>(r1);
        return;
    }

    private boolean traverseInternally(org.htmlcleaner.TagNodeVisitor)
    {
        org.htmlcleaner.TagNode r0, $r4, $r5, $r6, $r8;
        org.htmlcleaner.TagNodeVisitor r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] r2;
        int i0, i1;
        java.lang.Object r3;
        java.util.List $r7;
        org.htmlcleaner.ContentNode $r9;
        org.htmlcleaner.CommentNode $r10;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.TagNodeVisitor;
        if r1 == null goto label9;

        $r4 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        if $r4 == null goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        z0 = $z2;
        $r5 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        z1 = interfaceinvoke r1.<org.htmlcleaner.TagNodeVisitor: boolean visit(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlNode)>($r5, r0);
        if z1 != 0 goto label2;

        return 0;

     label2:
        if z0 == 0 goto label3;

        $r6 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        if $r6 != null goto label3;

        return 1;

     label3:
        $r7 = r0.<org.htmlcleaner.TagNode: java.util.List children>;
        r2 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray()>();
        i0 = lengthof r2;
        i1 = 0;

     label4:
        if i1 >= i0 goto label9;

        r3 = r2[i1];
        $z3 = r3 instanceof org.htmlcleaner.TagNode;
        if $z3 == 0 goto label5;

        $r8 = (org.htmlcleaner.TagNode) r3;
        z1 = specialinvoke $r8.<org.htmlcleaner.TagNode: boolean traverseInternally(org.htmlcleaner.TagNodeVisitor)>(r1);
        goto label7;

     label5:
        $z4 = r3 instanceof org.htmlcleaner.ContentNode;
        if $z4 == 0 goto label6;

        $r9 = (org.htmlcleaner.ContentNode) r3;
        z1 = interfaceinvoke r1.<org.htmlcleaner.TagNodeVisitor: boolean visit(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlNode)>(r0, $r9);
        goto label7;

     label6:
        $z5 = r3 instanceof org.htmlcleaner.CommentNode;
        if $z5 == 0 goto label7;

        $r10 = (org.htmlcleaner.CommentNode) r3;
        z1 = interfaceinvoke r1.<org.htmlcleaner.TagNodeVisitor: boolean visit(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlNode)>(r0, $r10);

     label7:
        if z1 != 0 goto label8;

        return 0;

     label8:
        i1 = i1 + 1;
        goto label4;

     label9:
        return 1;
    }

    void collectNamespacePrefixesOnPath(java.util.Set)
    {
        org.htmlcleaner.TagNode r0, $r7, $r8;
        java.util.Set r1, $r5;
        java.util.Map r2;
        java.util.Iterator r3;
        java.lang.String r4;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.util.Set;
        r2 = virtualinvoke r0.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        if r2 == null goto label1;

        $r5 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();
        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.String) $r6;
        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r4);
        goto label0;

     label1:
        $r7 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        if $r7 == null goto label2;

        $r8 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        virtualinvoke $r8.<org.htmlcleaner.TagNode: void collectNamespacePrefixesOnPath(java.util.Set)>(r1);

     label2:
        return;
    }

    java.lang.String getNamespaceURIOnPath(java.lang.String)
    {
        org.htmlcleaner.TagNode r0, $r13, $r14;
        java.lang.String r1, r4, $r10, $r12, $r15;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r5, $r6;
        java.util.Set $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r9, $r11;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: java.lang.String;
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        if $r5 == null goto label3;

        $r6 = r0.<org.htmlcleaner.TagNode: java.util.Map nsDeclarations>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r8;
        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        r4 = (java.lang.String) $r9;
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 != 0 goto label1;

        $r10 = "";
        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z2 == 0 goto label2;

        if r1 != null goto label2;

     label1:
        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r12 = (java.lang.String) $r11;
        return $r12;

     label2:
        goto label0;

     label3:
        $r13 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        if $r13 == null goto label4;

        $r14 = r0.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode parent>;
        $r15 = virtualinvoke $r14.<org.htmlcleaner.TagNode: java.lang.String getNamespaceURIOnPath(java.lang.String)>(r1);
        return $r15;

     label4:
        return null;
    }

    public void serialize(org.htmlcleaner.Serializer, java.io.Writer) throws java.io.IOException
    {
        org.htmlcleaner.TagNode r0;
        org.htmlcleaner.Serializer r1;
        java.io.Writer r2;

        r0 := @this: org.htmlcleaner.TagNode;
        r1 := @parameter0: org.htmlcleaner.Serializer;
        r2 := @parameter1: java.io.Writer;
        virtualinvoke r1.<org.htmlcleaner.Serializer: void serialize(org.htmlcleaner.TagNode,java.io.Writer)>(r0, r2);
        return;
    }

    org.htmlcleaner.TagNode makeCopy()
    {
        org.htmlcleaner.TagNode r0, $r1, r2;
        java.lang.String $r3;
        java.util.Map $r4, $r5;

        r0 := @this: org.htmlcleaner.TagNode;
        $r1 = new org.htmlcleaner.TagNode;
        $r3 = r0.<org.htmlcleaner.TagNode: java.lang.String name>;
        specialinvoke $r1.<org.htmlcleaner.TagNode: void <init>(java.lang.String)>($r3);
        r2 = $r1;
        $r4 = r2.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        $r5 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r5);
        return r2;
    }

    static java.util.Map access$000(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.TagNode r0;
        java.util.Map $r1;

        r0 := @parameter0: org.htmlcleaner.TagNode;
        $r1 = r0.<org.htmlcleaner.TagNode: java.util.Map attributes>;
        return $r1;
    }
}
public interface  org.htmlcleaner.TagNodeVisitor extends java.lang.Object
{

    public abstract boolean visit(org.htmlcleaner.TagNode, org.htmlcleaner.HtmlNode);
}
public abstract class org.htmlcleaner.TagToken extends java.lang.Object implements org.htmlcleaner.BaseToken
{
    protected java.lang.String name;

    public void <init>()
    {
        org.htmlcleaner.TagToken r0;

        r0 := @this: org.htmlcleaner.TagToken;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.TagToken r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagToken;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.htmlcleaner.TagToken: java.lang.String name> = r1;
        return;
    }

    public java.lang.String getName()
    {
        org.htmlcleaner.TagToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagToken;
        $r1 = r0.<org.htmlcleaner.TagToken: java.lang.String name>;
        return $r1;
    }

    public java.lang.String toString()
    {
        org.htmlcleaner.TagToken r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagToken;
        $r1 = r0.<org.htmlcleaner.TagToken: java.lang.String name>;
        return $r1;
    }

    abstract void setAttribute(java.lang.String, java.lang.String);
}
public class org.htmlcleaner.TagTransformation extends java.lang.Object
{
    private java.lang.String sourceTag;
    private java.lang.String destTag;
    private boolean preserveSourceAttributes;
    private java.util.Map attributeTransformations;

    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1, r2, $r3, $r5;
        boolean z0, $z1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r0.<org.htmlcleaner.TagTransformation: java.lang.String sourceTag> = $r3;
        if r2 != null goto label0;

        r0.<org.htmlcleaner.TagTransformation: java.lang.String destTag> = null;
        goto label3;

     label0:
        $z1 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlIdentifier(java.lang.String)>(r2);
        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        goto label2;

     label1:
        $r5 = r1;

     label2:
        r0.<org.htmlcleaner.TagTransformation: java.lang.String destTag> = $r5;

     label3:
        r0.<org.htmlcleaner.TagTransformation: boolean preserveSourceAttributes> = z0;
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1, r2;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.htmlcleaner.TagTransformation: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r2, 1);
        return;
    }

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.htmlcleaner.TagTransformation: void <init>(java.lang.String,java.lang.String)>(r1, null);
        return;
    }

    public void addAttributeTransformation(java.lang.String, java.lang.String)
    {
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1, r2, $r6;
        java.util.LinkedHashMap $r3;
        java.util.Map $r4, $r5;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r4 = r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations>;
        if $r4 != null goto label0;

        $r3 = new java.util.LinkedHashMap;
        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();
        r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations> = $r3;

     label0:
        $r5 = r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations>;
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r2);
        return;
    }

    public void addAttributeTransformation(java.lang.String)
    {
        org.htmlcleaner.TagTransformation r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        r1 := @parameter0: java.lang.String;
        virtualinvoke r0.<org.htmlcleaner.TagTransformation: void addAttributeTransformation(java.lang.String,java.lang.String)>(r1, null);
        return;
    }

    boolean hasAttributeTransformations()
    {
        org.htmlcleaner.TagTransformation r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagTransformation;
        $r1 = r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations>;
        if $r1 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    java.lang.String getSourceTag()
    {
        org.htmlcleaner.TagTransformation r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        $r1 = r0.<org.htmlcleaner.TagTransformation: java.lang.String sourceTag>;
        return $r1;
    }

    java.lang.String getDestTag()
    {
        org.htmlcleaner.TagTransformation r0;
        java.lang.String $r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        $r1 = r0.<org.htmlcleaner.TagTransformation: java.lang.String destTag>;
        return $r1;
    }

    boolean isPreserveSourceAttributes()
    {
        org.htmlcleaner.TagTransformation r0;
        boolean $z0;

        r0 := @this: org.htmlcleaner.TagTransformation;
        $z0 = r0.<org.htmlcleaner.TagTransformation: boolean preserveSourceAttributes>;
        return $z0;
    }

    java.util.Map getAttributeTransformations()
    {
        org.htmlcleaner.TagTransformation r0;
        java.util.Map $r1;

        r0 := @this: org.htmlcleaner.TagTransformation;
        $r1 = r0.<org.htmlcleaner.TagTransformation: java.util.Map attributeTransformations>;
        return $r1;
    }
}
public class org.htmlcleaner.Utils extends java.lang.Object
{
    public static java.lang.String VAR_START;
    public static java.lang.String VAR_END;
    public static final java.util.Map RESERVED_XML_CHARS;

    public void <init>()
    {
        org.htmlcleaner.Utils r0;

        r0 := @this: org.htmlcleaner.Utils;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String ltrim(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, i1;
        char $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        i0 = 0;
        i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i0 >= i1 goto label2;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);
        if $z0 == 0 goto label2;

        i0 = i0 + 1;
        goto label1;

     label2:
        if i0 < i1 goto label3;

        $r1 = "";
        goto label4;

     label3:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

     label4:
        return $r1;
    }

    public static java.lang.String rtrim(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, i1, $i2;
        char $c3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = i0;

     label1:
        if i1 <= 0 goto label2;

        $i2 = i1 - 1;
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);
        if $z0 == 0 goto label2;

        i1 = i1 + -1;
        goto label1;

     label2:
        if i1 > 0 goto label3;

        $r1 = "";
        goto label4;

     label3:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label4:
        return $r1;
    }

    public static java.lang.String getCharsetFromContentTypeString(java.lang.String)
    {
        java.lang.String r0, r1, r3;
        java.util.regex.Matcher r2;
        java.util.regex.Pattern $r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label0;

        r1 = "charset=([a-z\\d\\-]*)";
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(r1, 2);
        r2 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $z1 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>(r3);
        if $z1 == 0 goto label0;

        return r3;

     label0:
        return null;
    }

    public static java.lang.String getCharsetFromContent(java.net.URL) throws java.io.IOException
    {
        java.net.URL r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0;
        java.lang.String r3, r4, r6, $r7;
        java.util.regex.Matcher r5;
        java.util.regex.Pattern $r8;
        boolean $z0, $z1;

        r0 := @parameter0: java.net.URL;
        r1 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();
        r2 = newarray (byte)[2048];
        i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2);
        if i0 <= 0 goto label0;

        $r7 = new java.lang.String;
        specialinvoke $r7.<java.lang.String: void <init>(byte[])>(r2);
        r3 = $r7;
        r4 = "\\<meta\\s*http-equiv=[\\\"\\\']content-type[\\\"\\\']\\s*content\\s*=\\s*[\"\']text/html\\s*;\\s*charset=([a-z\\d\\-]*)[\\\"\\\'\\>]";
        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(r4, 2);
        r5 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);
        $z0 = virtualinvoke r5.<java.util.regex.Matcher: boolean find()>();
        if $z0 == 0 goto label0;

        r6 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $z1 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>(r6);
        if $z1 == 0 goto label0;

        return r6;

     label0:
        return null;
    }

    public static boolean isHexadecimalDigit(char)
    {
        char c0;
        boolean $z0, $z1;

        c0 := @parameter0: char;
        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
        if $z0 != 0 goto label0;

        if c0 == 65 goto label0;

        if c0 == 97 goto label0;

        if c0 == 66 goto label0;

        if c0 == 98 goto label0;

        if c0 == 67 goto label0;

        if c0 == 99 goto label0;

        if c0 == 68 goto label0;

        if c0 == 100 goto label0;

        if c0 == 69 goto label0;

        if c0 == 101 goto label0;

        if c0 == 70 goto label0;

        if c0 != 102 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isValidXmlChar(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;
        if c0 < 32 goto label0;

        if c0 <= 55295 goto label2;

     label0:
        if c0 == 9 goto label2;

        if c0 == 10 goto label2;

        if c0 == 13 goto label2;

        if c0 < 57344 goto label1;

        if c0 <= 65533 goto label2;

     label1:
        if c0 < 65536 goto label3;

        if c0 > 1114111 goto label3;

     label2:
        $z0 = 1;
        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isReservedXmlChar(char)
    {
        char c0;
        java.util.Map $r0;
        java.lang.Character $r1;
        boolean $z0;

        c0 := @parameter0: char;
        $r0 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);
        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);
        return $z0;
    }

    public static boolean isValidInt(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        java.lang.NumberFormatException r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;

     label0:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r0, i0);
        $z0 = 1;

     label1:
        return $z0;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;
        return 0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public static java.lang.String escapeXml(java.lang.String, org.htmlcleaner.CleanerProperties, boolean)
    {
        java.lang.String r0, r3, $r8, $r13, $r23, r26, r27, r32, r39, $r51, $r68;
        org.htmlcleaner.CleanerProperties r1;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12, $z13, $z14, $z15, $z16, $z17;
        int i0, i1, i3, $i6, $i7, $i8, $i10, $i13, $i16, $i18, $i19, $i20, $i21, i22, $i24, $i25, $i27, $i28;
        java.lang.StringBuilder r2, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r43, $r44, $r47, $r48, $r58, $r59, $r60, $r61;
        char c2, c5, $c9, $c11, $c12, c17, $c23, $c26;
        byte b4, $b14, $b15;
        org.htmlcleaner.SpecialEntity r28;
        java.io.Serializable $r30, $r42, $r62;
        java.util.Map $r33, $r52, $r63;
        java.util.Set $r34;
        java.util.Iterator r35;
        java.lang.Object $r36, $r38, $r41, $r45, $r54, $r65;
        java.util.Map$Entry r37;
        java.lang.Character $r46, $r53, $r64;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.htmlcleaner.CleanerProperties;
        z0 := @parameter2: boolean;
        z1 = virtualinvoke r1.<org.htmlcleaner.CleanerProperties: boolean isAdvancedXmlEscape()>();
        z2 = virtualinvoke r1.<org.htmlcleaner.CleanerProperties: boolean isRecognizeUnicodeChars()>();
        z3 = virtualinvoke r1.<org.htmlcleaner.CleanerProperties: boolean isTranslateSpecialEntities()>();
        if r0 == null goto label41;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(i0);
        r2 = $r4;
        i1 = 0;

     label0:
        if i1 >= i0 goto label40;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        if c2 != 38 goto label34;

        if z1 != 0 goto label1;

        if z2 == 0 goto label20;

     label1:
        $i7 = i0 - 2;
        if i1 >= $i7 goto label20;

        $i8 = i1 + 1;
        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);
        if $c9 != 35 goto label20;

        $i10 = i1 + 2;
        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);
        $c12 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);
        if $c12 != 120 goto label2;

        $z5 = 1;
        goto label3;

     label2:
        $z5 = 0;

     label3:
        z4 = $z5;
        $i13 = i1;
        if z4 == 0 goto label4;

        $b14 = 3;
        goto label5;

     label4:
        $b14 = 2;

     label5:
        i3 = $i13 + $b14;
        if z4 == 0 goto label6;

        $b15 = 16;
        goto label7;

     label6:
        $b15 = 10;

     label7:
        b4 = $b15;
        r3 = "";

     label8:
        if i3 >= i0 goto label12;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);
        if c5 != 59 goto label9;

        goto label12;

     label9:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $z6 = staticinvoke <org.htmlcleaner.Utils: boolean isValidInt(java.lang.String,int)>($r8, b4);
        if $z6 == 0 goto label10;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);
        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        i3 = i3 + 1;
        goto label11;

     label10:
        i3 = i3 + -1;
        goto label12;

     label11:
        goto label8;

     label12:
        $z7 = staticinvoke <org.htmlcleaner.Utils: boolean isValidInt(java.lang.String,int)>(r3, b4);
        if $z7 == 0 goto label18;

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, b4);
        c17 = (char) $i16;
        $z8 = staticinvoke <org.htmlcleaner.Utils: boolean isValidXmlChar(char)>(c17);
        if $z8 != 0 goto label13;

        i1 = i3;
        goto label17;

     label13:
        $z9 = staticinvoke <org.htmlcleaner.Utils: boolean isReservedXmlChar(char)>(c17);
        if $z9 != 0 goto label16;

        if z2 == 0 goto label14;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c17);
        goto label15;

     label14:
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r13 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        i1 = i3;
        goto label17;

     label16:
        i1 = i3;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label17:
        goto label19;

     label18:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");

     label19:
        goto label39;

     label20:
        if z3 == 0 goto label23;

        $i6 = staticinvoke <org.htmlcleaner.SpecialEntity: int getMaxEntityLength()>();
        $i18 = $i6 + 2;
        $i19 = i0 - i1;
        $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i19);
        $i21 = i1 + $i20;
        r26 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i21);
        i22 = virtualinvoke r26.<java.lang.String: int indexOf(int)>(59);
        if i22 <= 0 goto label23;

        r27 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int,int)>(1, i22);
        r28 = staticinvoke <org.htmlcleaner.SpecialEntity: org.htmlcleaner.SpecialEntity getEntity(java.lang.String)>(r27);
        if r28 == null goto label23;

        $z10 = virtualinvoke r1.<org.htmlcleaner.CleanerProperties: boolean isTransSpecialEntitiesToNCR()>();
        if $z10 == 0 goto label21;

        $r30 = virtualinvoke r28.<org.htmlcleaner.SpecialEntity: java.lang.String getDecimalNCR()>();
        goto label22;

     label21:
        $c23 = virtualinvoke r28.<org.htmlcleaner.SpecialEntity: char getCharacter()>();
        $r30 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c23);

     label22:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);
        $i24 = virtualinvoke r27.<java.lang.String: int length()>();
        $i25 = $i24 + 1;
        i1 = i1 + $i25;
        goto label39;

     label23:
        if z1 == 0 goto label33;

        r32 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i1);
        z11 = 0;
        $r33 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r34 = interfaceinvoke $r33.<java.util.Map: java.util.Set entrySet()>();
        r35 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z12 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();
        if $z12 == 0 goto label29;

        $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();
        r37 = (java.util.Map$Entry) $r36;
        $r38 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();
        r39 = (java.lang.String) $r38;
        $z13 = virtualinvoke r32.<java.lang.String: boolean startsWith(java.lang.String)>(r39);
        if $z13 == 0 goto label28;

        if z0 == 0 goto label25;

        $r41 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r42 = (java.io.Serializable) $r41;
        goto label27;

     label25:
        $z14 = r1.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        if $z14 == 0 goto label26;

        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r45 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r46 = (java.lang.Character) $r45;
        $c26 = virtualinvoke $r46.<java.lang.Character: char charValue()>();
        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($c26);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r42 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label27;

     label26:
        $r42 = r39;

     label27:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);
        $i27 = virtualinvoke r39.<java.lang.String: int length()>();
        $i28 = $i27 - 1;
        i1 = i1 + $i28;
        z11 = 1;
        goto label29;

     label28:
        goto label24;

     label29:
        if z11 != 0 goto label39;

        if z0 == 0 goto label30;

        $r51 = "&";
        goto label32;

     label30:
        $z15 = r1.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        if $z15 == 0 goto label31;

        $r51 = "&#38;";
        goto label32;

     label31:
        $r52 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r53 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(38);
        $r54 = interfaceinvoke $r52.<java.util.Map: java.lang.Object get(java.lang.Object)>($r53);
        $r51 = (java.lang.String) $r54;

     label32:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
        goto label39;

     label33:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");
        goto label39;

     label34:
        $z16 = staticinvoke <org.htmlcleaner.Utils: boolean isReservedXmlChar(char)>(c2);
        if $z16 == 0 goto label38;

        $z17 = r1.<org.htmlcleaner.CleanerProperties: boolean transResCharsToNCR>;
        if $z17 == 0 goto label35;

        $r58 = new java.lang.StringBuilder;
        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c2);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label37;

     label35:
        if z0 == 0 goto label36;

        $r62 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c2);
        goto label37;

     label36:
        $r63 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r64 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c2);
        $r65 = interfaceinvoke $r63.<java.util.Map: java.lang.Object get(java.lang.Object)>($r64);
        $r62 = (java.io.Serializable) $r65;

     label37:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);
        goto label39;

     label38:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label39:
        i1 = i1 + 1;
        goto label0;

     label40:
        $r68 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r68;

     label41:
        return null;
    }

    public static boolean isWhitespaceString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;
        if r0 == null goto label2;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
        if r1 == null goto label0;

        $r2 = "";
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;

     label2:
        return 0;
    }

    public static boolean isIdentifierHelperChar(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;
        if 58 == c0 goto label0;

        if 46 == c0 goto label0;

        if 45 == c0 goto label0;

        if 95 != c0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValidXmlIdentifier(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1;
        char c2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;
        if r0 == null goto label6;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 != 0 goto label0;

        return 0;

     label0:
        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        if i1 != 0 goto label2;

        $z0 = staticinvoke <java.lang.Character: boolean isUnicodeIdentifierStart(char)>(c2);
        if $z0 != 0 goto label2;

        if c2 != 95 goto label3;

     label2:
        $z1 = staticinvoke <java.lang.Character: boolean isUnicodeIdentifierStart(char)>(c2);
        if $z1 != 0 goto label4;

        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c2);
        if $z2 != 0 goto label4;

        $z3 = staticinvoke <org.htmlcleaner.Utils: boolean isIdentifierHelperChar(char)>(c2);
        if $z3 != 0 goto label4;

     label3:
        return 0;

     label4:
        i1 = i1 + 1;
        goto label1;

     label5:
        return 1;

     label6:
        return 0;
    }

    public static boolean isEmptyString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;
        if r0 == null goto label0;

        $r1 = "";
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static java.lang.String evaluateTemplate(java.lang.String, java.util.Map)
    {
        java.lang.String r0, r3, $r6, $r7, $r9, $r10, $r11, $r14, $r16, $r17, $r18, $r20;
        java.util.Map r1;
        java.lang.StringBuilder r2, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object r4, $r12;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Map;
        if r0 != null goto label0;

        return r0;

     label0:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r2 = $r5;
        $r6 = <org.htmlcleaner.Utils: java.lang.String VAR_START>;
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>($r6);
        i1 = -1;

     label1:
        if i0 < 0 goto label7;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 >= $i2 goto label7;

        $i3 = i1 + 1;
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, i0);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = <org.htmlcleaner.Utils: java.lang.String VAR_END>;
        i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>($r9, i0);
        if i1 <= i0 goto label6;

        $r10 = <org.htmlcleaner.Utils: java.lang.String VAR_START>;
        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();
        $i5 = i0 + $i4;
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i5, i1);
        if r1 == null goto label2;

        $r11 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);
        goto label3;

     label2:
        $r12 = "";

     label3:
        r4 = $r12;
        if r4 != null goto label4;

        $r14 = "";
        goto label5;

     label4:
        $r14 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label6:
        $r16 = <org.htmlcleaner.Utils: java.lang.String VAR_START>;
        $r17 = <org.htmlcleaner.Utils: java.lang.String VAR_END>;
        $i6 = virtualinvoke $r17.<java.lang.String: int length()>();
        $i7 = i1 + $i6;
        $i8 = i0 + 1;
        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>($r16, $i9);
        goto label1;

     label7:
        $i10 = i1 + 1;
        $r18 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i10);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r20;
    }

    public static java.lang.String[] tokenize(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6;
        java.util.StringTokenizer r2, $r5;
        java.lang.String[] r3, $r4;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        if r0 != null goto label0;

        $r4 = newarray (java.lang.String)[0];
        return $r4;

     label0:
        $r5 = new java.util.StringTokenizer;
        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, r1);
        r2 = $r5;
        $i1 = virtualinvoke r2.<java.util.StringTokenizer: int countTokens()>();
        r3 = newarray (java.lang.String)[$i1];
        i0 = 0;

     label1:
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label2;

        $i2 = i0;
        i0 = i0 + 1;
        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r3[$i2] = $r6;
        goto label1;

     label2:
        return r3;
    }

    public static void updateTagTransformations(org.htmlcleaner.CleanerTransformations, java.lang.String, java.lang.String)
    {
        org.htmlcleaner.CleanerTransformations r0;
        java.lang.String r1, r2, r3, $r5, $r6, $r7, $r8, $r9, $r10, r14, $r16;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String[] r4, r13;
        org.htmlcleaner.TagTransformation $r11, r12, r15;

        r0 := @parameter0: org.htmlcleaner.CleanerTransformations;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);
        if i0 > 0 goto label5;

        r3 = null;
        z0 = 1;
        if r2 == null goto label4;

        r4 = staticinvoke <org.htmlcleaner.Utils: java.lang.String[] tokenize(java.lang.String,java.lang.String)>(r2, ",;");
        $i1 = lengthof r4;
        if $i1 <= 0 goto label0;

        r3 = r4[0];

     label0:
        $i2 = lengthof r4;
        if $i2 <= 1 goto label4;

        $r5 = "true";
        $r6 = r4[1];
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);
        if $z1 != 0 goto label1;

        $r7 = "yes";
        $r8 = r4[1];
        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);
        if $z2 != 0 goto label1;

        $r9 = "1";
        $r10 = r4[1];
        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;
        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

     label4:
        $r11 = new org.htmlcleaner.TagTransformation;
        specialinvoke $r11.<org.htmlcleaner.TagTransformation: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r3, z0);
        r12 = $r11;
        virtualinvoke r0.<org.htmlcleaner.CleanerTransformations: void addTransformation(org.htmlcleaner.TagTransformation)>(r12);
        goto label6;

     label5:
        r13 = staticinvoke <org.htmlcleaner.Utils: java.lang.String[] tokenize(java.lang.String,java.lang.String)>(r1, ".");
        r14 = r13[0];
        r15 = virtualinvoke r0.<org.htmlcleaner.CleanerTransformations: org.htmlcleaner.TagTransformation getTransformation(java.lang.String)>(r14);
        if r15 == null goto label6;

        $r16 = r13[1];
        virtualinvoke r15.<org.htmlcleaner.TagTransformation: void addAttributeTransformation(java.lang.String,java.lang.String)>($r16, r2);

     label6:
        return;
    }

    public static boolean isFullUrl(java.lang.String)
    {
        java.lang.String r0, $r1, r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return 0;

     label0:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();
        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("http://");
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("https://");
        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("file://");
        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static java.lang.String fullUrl(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r5, $r7, $r10, $r14, $r16, r23, $r26, $r28;
        int i0, i1, $i2, $i3, $i4, i5, $i6;
        boolean $z0, $z1, z2, $z3;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r8, $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r27, $r29, $r30, $r31;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $z0 = staticinvoke <org.htmlcleaner.Utils: boolean isFullUrl(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        return r1;

     label0:
        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("?");
        if $z1 == 0 goto label3;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);
        i1 = virtualinvoke r0.<java.lang.String: int length()>();
        if i0 >= 0 goto label1;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;

     label1:
        $i2 = i1 - 1;
        if i0 != $i2 goto label2;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $i3 = i1 - 1;
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r10;

     label2:
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");
        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r16;

     label3:
        z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        $z3 = staticinvoke <org.htmlcleaner.Utils: boolean isFullUrl(java.lang.String)>(r0);
        if $z3 != 0 goto label4;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        r0 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        if z2 == 0 goto label5;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("/", 8);
        goto label6;

     label5:
        $i4 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

     label6:
        i5 = $i4;
        if i5 > 8 goto label7;

        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label8;

     label7:
        $i6 = i5 + 1;
        r23 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label8:
        if z2 == 0 goto label9;

        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);
        $r26 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label10;

     label9:
        $r29 = new java.lang.StringBuilder;
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        return $r28;
    }

    public static java.lang.String getXmlNSPrefix(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);
        if i0 <= 0 goto label0;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        return $r1;

     label0:
        return null;
    }

    public static java.lang.String getXmlName(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);
        if i0 <= 0 goto label0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        $i2 = $i1 - 1;
        if i0 >= $i2 goto label0;

        $i3 = i0 + 1;
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);
        return $r1;

     label0:
        return r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1, $r4, $r7, $r10, $r13;
        java.lang.Character $r2, $r5, $r8, $r11, $r14;

        <org.htmlcleaner.Utils: java.lang.String VAR_START> = "${";
        <org.htmlcleaner.Utils: java.lang.String VAR_END> = "}";
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS> = $r0;
        $r1 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(38);
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "&amp;");
        $r4 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(60);
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "&lt;");
        $r7 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(62);
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, "&gt;");
        $r10 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r11 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(34);
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, "&quot;");
        $r13 = <org.htmlcleaner.Utils: java.util.Map RESERVED_XML_CHARS>;
        $r14 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(39);
        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, "&apos;");
        return;
    }
}
public abstract class org.htmlcleaner.XmlSerializer extends org.htmlcleaner.Serializer
{

    protected void <init>(org.htmlcleaner.CleanerProperties)
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.CleanerProperties r1;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.CleanerProperties;
        specialinvoke r0.<org.htmlcleaner.Serializer: void <init>(org.htmlcleaner.CleanerProperties)>(r1);
        return;
    }

    public void writeXmlToStream(org.htmlcleaner.TagNode, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;
        java.lang.String r3;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream,java.lang.String)>(r1, r2, r3);
        return;
    }

    public void writeXmlToStream(org.htmlcleaner.TagNode, java.io.OutputStream) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.OutputStream r2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.OutputStream;
        specialinvoke r0.<org.htmlcleaner.Serializer: void writeToStream(org.htmlcleaner.TagNode,java.io.OutputStream)>(r1, r2);
        return;
    }

    public void writeXmlToFile(org.htmlcleaner.TagNode, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, r3;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String,java.lang.String)>(r1, r2, r3);
        return;
    }

    public void writeXmlToFile(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        specialinvoke r0.<org.htmlcleaner.Serializer: void writeToFile(org.htmlcleaner.TagNode,java.lang.String)>(r1, r2);
        return;
    }

    public java.lang.String getXmlAsString(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String r2, $r3;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.lang.String;
        $r3 = specialinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String)>(r1, r2);
        return $r3;
    }

    public java.lang.String getXmlAsString(org.htmlcleaner.TagNode) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.lang.String $r2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r2 = specialinvoke r0.<org.htmlcleaner.Serializer: java.lang.String getAsString(org.htmlcleaner.TagNode)>(r1);
        return $r2;
    }

    public void writeXml(org.htmlcleaner.TagNode, java.io.Writer, java.lang.String) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        java.lang.String r3;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        r3 := @parameter2: java.lang.String;
        specialinvoke r0.<org.htmlcleaner.Serializer: void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String)>(r1, r2, r3);
        return;
    }

    protected java.lang.String escapeXml(java.lang.String)
    {
        org.htmlcleaner.XmlSerializer r0;
        java.lang.String r1, $r3;
        org.htmlcleaner.CleanerProperties $r2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String escapeXml(java.lang.String,org.htmlcleaner.CleanerProperties,boolean)>(r1, $r2, 0);
        return $r3;
    }

    protected boolean dontEscape(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.htmlcleaner.CleanerProperties $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r2 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z0 = virtualinvoke $r2.<org.htmlcleaner.CleanerProperties: boolean isUseCdataForScriptAndStyle()>();
        if $z0 == 0 goto label0;

        $z1 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: boolean isScriptOrStyle(org.htmlcleaner.TagNode)>(r1);
        if $z1 == 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    protected boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        org.htmlcleaner.TagInfo r2;
        org.htmlcleaner.CleanerProperties $r3, $r7;
        org.htmlcleaner.ITagInfoProvider $r4;
        java.lang.String $r5;
        java.util.List $r6;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r3 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $r4 = virtualinvoke $r3.<org.htmlcleaner.CleanerProperties: org.htmlcleaner.ITagInfoProvider getTagInfoProvider()>();
        $r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        r2 = interfaceinvoke $r4.<org.htmlcleaner.ITagInfoProvider: org.htmlcleaner.TagInfo getTagInfo(java.lang.String)>($r5);
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();
        if $i0 != 0 goto label1;

        $r7 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z0 = virtualinvoke $r7.<org.htmlcleaner.CleanerProperties: boolean isUseEmptyElementTags()>();
        if $z0 != 0 goto label0;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<org.htmlcleaner.TagInfo: boolean isEmptyTag()>();
        if $z1 == 0 goto label1;

     label0:
        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected void serializeOpenTag(org.htmlcleaner.TagNode, java.io.Writer, boolean) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        boolean z0, z1, $z2, $z3, $z5, $z6, $z8, $z9, $z10, $z11;
        java.lang.String r3, r6, r9, r10, r11, $r18, $r30, $r31, $r34, r41, $r51, $r52, $r55, r58, $r65;
        java.util.HashSet r4, $r13, $r23;
        java.util.TreeSet r5, $r14, $r24;
        java.util.Iterator r7, r37, r56;
        java.util.Map$Entry r8, r39;
        org.htmlcleaner.CleanerProperties $r12;
        java.lang.StringBuilder $r15, $r16, $r17, $r25, $r26, $r27, $r28, $r32, $r33, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r53, $r54, $r59, $r60, $r61, $r62, $r63, $r64;
        java.util.Map $r19, r35;
        java.util.Set $r20, $r36;
        java.lang.Object $r21, $r22, $r29, $r38, $r40, $r50, $r57;
        int $i0;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        z0 := @parameter2: boolean;
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z2 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>(r3);
        if $z2 == 0 goto label0;

        return;

     label0:
        $r12 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        z1 = virtualinvoke $r12.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        r4 = null;
        r5 = null;
        r6 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        if r6 == null goto label2;

        if z1 == 0 goto label1;

        $r13 = new java.util.HashSet;
        specialinvoke $r13.<java.util.HashSet: void <init>()>();
        r4 = $r13;
        virtualinvoke r1.<org.htmlcleaner.TagNode: void collectNamespacePrefixesOnPath(java.util.Set)>(r4);
        $z3 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r6);
        if $z3 != 0 goto label2;

        $r14 = new java.util.TreeSet;
        specialinvoke $r14.<java.util.TreeSet: void <init>()>();
        r5 = $r14;
        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r6);
        goto label2;

     label1:
        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);

     label2:
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r18);
        $r19 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>();
        r7 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z5 == 0 goto label8;

        $r21 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (java.util.Map$Entry) $r21;
        $r22 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();
        r9 = (java.lang.String) $r22;
        r10 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r9);
        if r10 == null goto label7;

        if z1 == 0 goto label6;

        if r4 != null goto label4;

        $r23 = new java.util.HashSet;
        specialinvoke $r23.<java.util.HashSet: void <init>()>();
        r4 = $r23;
        virtualinvoke r1.<org.htmlcleaner.TagNode: void collectNamespacePrefixesOnPath(java.util.Set)>(r4);

     label4:
        $z6 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r10);
        if $z6 != 0 goto label7;

        if r5 != null goto label5;

        $r24 = new java.util.TreeSet;
        specialinvoke $r24.<java.util.TreeSet: void <init>()>();
        r5 = $r24;

     label5:
        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r10);
        goto label7;

     label6:
        r9 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r9);

     label7:
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r29 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r30 = (java.lang.String) $r29;
        $r31 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: java.lang.String escapeXml(java.lang.String)>($r30);
        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r34);
        goto label3;

     label8:
        if z1 == 0 goto label11;

        r35 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.util.Map getNamespaceDeclarations()>();
        if r35 == null goto label11;

        $r36 = interfaceinvoke r35.<java.util.Map: java.util.Set entrySet()>();
        r37 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>();

     label9:
        $z8 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();
        if $z8 == 0 goto label11;

        $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();
        r39 = (java.util.Map$Entry) $r38;
        $r40 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>();
        r41 = (java.lang.String) $r40;
        r11 = "xmlns";
        $i0 = virtualinvoke r41.<java.lang.String: int length()>();
        if $i0 <= 0 goto label10;

        $r42 = new java.lang.StringBuilder;
        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);
        r11 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r50 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r51 = (java.lang.String) $r50;
        $r52 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: java.lang.String escapeXml(java.lang.String)>($r51);
        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r55);
        goto label9;

     label11:
        if r5 == null goto label13;

        r56 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z9 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();
        if $z9 == 0 goto label13;

        $r57 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();
        r58 = (java.lang.String) $r57;
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" xmlns:");
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r65);
        goto label12;

     label13:
        $z10 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode)>(r1);
        if $z10 == 0 goto label14;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(" />");
        if z0 == 0 goto label16;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");
        goto label16;

     label14:
        $z11 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        if $z11 == 0 goto label15;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("><![CDATA[");
        goto label16;

     label15:
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>(">");

     label16:
        return;
    }

    protected void serializeEndTag(org.htmlcleaner.TagNode, java.io.Writer, boolean) throws java.io.IOException
    {
        org.htmlcleaner.XmlSerializer r0;
        org.htmlcleaner.TagNode r1;
        java.io.Writer r2;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r3, $r4, $r10;
        org.htmlcleaner.CleanerProperties $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: org.htmlcleaner.XmlSerializer;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: java.io.Writer;
        z0 := @parameter2: boolean;
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z1 = staticinvoke <org.htmlcleaner.Utils: boolean isEmptyString(java.lang.Object)>(r3);
        if $z1 == 0 goto label0;

        return;

     label0:
        $z2 = virtualinvoke r0.<org.htmlcleaner.XmlSerializer: boolean dontEscape(org.htmlcleaner.TagNode)>(r1);
        if $z2 == 0 goto label1;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("]]>");

     label1:
        $r4 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlNSPrefix(java.lang.String)>(r3);
        if $r4 == null goto label2;

        $r5 = r0.<org.htmlcleaner.XmlSerializer: org.htmlcleaner.CleanerProperties props>;
        $z3 = virtualinvoke $r5.<org.htmlcleaner.CleanerProperties: boolean isNamespacesAware()>();
        if $z3 != 0 goto label2;

        r3 = staticinvoke <org.htmlcleaner.Utils: java.lang.String getXmlName(java.lang.String)>(r3);

     label2:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r10);
        if z0 == 0 goto label3;

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>("\n");

     label3:
        return;
    }
}
public class org.htmlcleaner.XPather extends java.lang.Object
{
    private java.lang.String[] tokenArray;

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.XPather r0;
        java.lang.String r1, $r6;
        java.util.StringTokenizer r2, $r3;
        int i0, i1, $i2;
        java.lang.String[] $r4, $r5;
        boolean $z0;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.StringTokenizer;
        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r1, "/()[]\"\'=<>", 1);
        r2 = $r3;
        i0 = virtualinvoke r2.<java.util.StringTokenizer: int countTokens()>();
        $r4 = newarray (java.lang.String)[i0];
        r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray> = $r4;
        i1 = 0;

     label0:
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        $r5 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $i2 = i1;
        i1 = i1 + 1;
        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r5[$i2] = $r6;
        goto label0;

     label1:
        return;
    }

    public java.lang.Object[] evaluateAgainstNode(org.htmlcleaner.TagNode) throws org.htmlcleaner.XPatherException
    {
        org.htmlcleaner.XPather r0;
        org.htmlcleaner.TagNode r1;
        java.util.Collection r2, $r6;
        java.lang.Object[] r3;
        java.util.Iterator r4;
        int i0, $i1, $i2, $i3, $i4;
        org.htmlcleaner.XPatherException $r5;
        java.lang.String[] $r7;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        if r1 != null goto label0;

        $r5 = new org.htmlcleaner.XPatherException;
        specialinvoke $r5.<org.htmlcleaner.XPatherException: void <init>(java.lang.String)>("Cannot evaluate XPath expression against null value!");
        throw $r5;

     label0:
        $r6 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r1);
        $r7 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $i1 = lengthof $r7;
        $i2 = $i1 - 1;
        r2 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>($r6, 0, $i2, 0, 1, 0, 0, null);
        $i3 = interfaceinvoke r2.<java.util.Collection: int size()>();
        r3 = newarray (java.lang.Object)[$i3];
        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();
        i0 = 0;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $i4 = i0;
        i0 = i0 + 1;
        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r3[$i4] = $r8;
        goto label1;

     label2:
        return r3;
    }

    private void throwStandardException() throws org.htmlcleaner.XPatherException
    {
        org.htmlcleaner.XPather r0;
        org.htmlcleaner.XPatherException $r1;

        r0 := @this: org.htmlcleaner.XPather;
        $r1 = new org.htmlcleaner.XPatherException;
        specialinvoke $r1.<org.htmlcleaner.XPatherException: void <init>()>();
        throw $r1;
    }

    private java.util.Collection evaluateAgainst(java.util.Collection, int, int, boolean, int, int, boolean, java.util.Collection) throws org.htmlcleaner.XPatherException
    {
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, r2, r3, r4, $r10, $r11, r12, $r13, r15, $r16, r17, r26, $r30, $r31, r32, $r33, r39, $r40, r46, $r47, $r48;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i26, $i27, i28, $i29, $i30, $i31;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15, z16, $z17, $z18, $z19;
        java.lang.String[] $r5, $r7, $r19, $r22, $r27, $r34, $r37, $r41, $r44;
        java.lang.String $r6, $r8, $r9, $r14, $r20, $r23, $r25, $r28, $r35, $r38, $r42, $r45;
        java.lang.StringBuilder $r18, $r21, $r24;
        java.lang.Boolean $r29;
        java.lang.Integer $r36;
        java.lang.Double $r43;
        org.htmlcleaner.XPatherException $r49;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        i2 := @parameter4: int;
        i3 := @parameter5: int;
        z1 := @parameter6: boolean;
        r2 := @parameter7: java.util.Collection;
        if i0 < 0 goto label20;

        $r5 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $i5 = lengthof $r5;
        if i1 >= $i5 goto label20;

        if i0 > i1 goto label20;

        $r6 = "";
        $r7 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r8 = $r7[i0];
        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z2 == 0 goto label0;

        $i6 = i0 + 1;
        $r10 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i6, i1, z0, i2, i3, z1, r2);
        return $r10;

     label0:
        $z3 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("(", i0);
        if $z3 == 0 goto label2;

        i4 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>(i0, i1);
        if i4 <= 0 goto label1;

        $i7 = i0 + 1;
        $i8 = i4 - 1;
        r3 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i7, $i8, 0, i2, i3, z1, r2);
        $i9 = i4 + 1;
        $r11 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r3, $i9, i1, 0, i2, i3, z1, r2);
        return $r11;

     label1:
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();
        goto label21;

     label2:
        $z4 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("[", i0);
        if $z4 == 0 goto label4;

        i10 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>(i0, i1);
        if i10 <= 0 goto label3;

        $z5 = r1 instanceof java.util.Collection;
        if $z5 == 0 goto label3;

        $i11 = i0 + 1;
        $i12 = i10 - 1;
        r12 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection filterByCondition(java.util.Collection,int,int)>(r1, $i11, $i12);
        $i13 = i10 + 1;
        $r13 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r12, $i13, i1, 0, i2, i3, z1, r2);
        return $r13;

     label3:
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();
        goto label21;

     label4:
        $z6 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("\"", i0);
        if $z6 != 0 goto label5;

        $z7 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("\'", i0);
        if $z7 == 0 goto label7;

     label5:
        i14 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>(i0, i1);
        if i14 <= i0 goto label6;

        $i15 = i0 + 1;
        $i16 = i14 - 1;
        $r14 = specialinvoke r0.<org.htmlcleaner.XPather: java.lang.String flatten(int,int)>($i15, $i16);
        r15 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>($r14);
        $i17 = i14 + 1;
        $r16 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r15, $i17, i1, 0, i2, i3, z1, r2);
        return $r16;

     label6:
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();
        goto label21;

     label7:
        $z8 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("=", i0);
        if $z8 != 0 goto label8;

        $z9 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("<", i0);
        if $z9 != 0 goto label8;

        $z10 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>(">", i0);
        if $z10 == 0 goto label12;

     label8:
        if z1 == 0 goto label12;

        $i18 = i0 + 1;
        $z11 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("=", $i18);
        if $z11 == 0 goto label10;

        $z12 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("<", i0);
        if $z12 != 0 goto label9;

        $z13 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>(">", i0);
        if $z13 == 0 goto label10;

     label9:
        $i19 = i0 + 2;
        r17 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r2, $i19, i1, 0, i2, i3, z1, r2);
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r20 = $r19[i0];
        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $i20 = i0 + 1;
        $r23 = $r22[$i20];
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        z14 = specialinvoke r0.<org.htmlcleaner.XPather: boolean evaluateLogic(java.util.Collection,java.util.Collection,java.lang.String)>(r1, r17, $r25);
        goto label11;

     label10:
        $i21 = i0 + 1;
        r26 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r2, $i21, i1, 0, i2, i3, z1, r2);
        $r27 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r28 = $r27[i0];
        z14 = specialinvoke r0.<org.htmlcleaner.XPather: boolean evaluateLogic(java.util.Collection,java.util.Collection,java.lang.String)>(r1, r26, $r28);

     label11:
        $r29 = new java.lang.Boolean;
        specialinvoke $r29.<java.lang.Boolean: void <init>(boolean)>(z14);
        $r30 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>($r29);
        return $r30;

     label12:
        $z15 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("/", i0);
        if $z15 == 0 goto label16;

        $i22 = i0 + 1;
        z16 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("/", $i22);
        if z16 == 0 goto label13;

        i0 = i0 + 1;

     label13:
        if i0 >= i1 goto label15;

        $i23 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>(i0, i1);
        i24 = $i23 - 1;
        if i24 > i0 goto label14;

        i24 = i1;

     label14:
        $i25 = i0 + 1;
        r4 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i25, i24, z16, 1, i3, z1, r2);
        $i26 = i24 + 1;
        $r31 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r4, $i26, i1, 0, 1, i3, z1, r2);
        return $r31;

     label15:
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();
        goto label21;

     label16:
        $z17 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isFunctionCall(int,int)>(i0, i1);
        if $z17 == 0 goto label17;

        $i27 = i0 + 1;
        i28 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>($i27, i1);
        r32 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateFunction(java.util.Collection,int,int,int,int,boolean)>(r1, i0, i1, i2, i3, z1);
        $i29 = i28 + 1;
        $r33 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r32, $i29, i1, 0, 1, i3, z1, r2);
        return $r33;

     label17:
        $r34 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r35 = $r34[i0];
        $z18 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isValidInteger(java.lang.String)>($r35);
        if $z18 == 0 goto label18;

        $r36 = new java.lang.Integer;
        $r37 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r38 = $r37[i0];
        specialinvoke $r36.<java.lang.Integer: void <init>(java.lang.String)>($r38);
        r39 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>($r36);
        $i30 = i0 + 1;
        $r40 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r39, $i30, i1, 0, i2, i3, z1, r2);
        return $r40;

     label18:
        $r41 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r42 = $r41[i0];
        $z19 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isValidDouble(java.lang.String)>($r42);
        if $z19 == 0 goto label19;

        $r43 = new java.lang.Double;
        $r44 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r45 = $r44[i0];
        specialinvoke $r43.<java.lang.Double: void <init>(java.lang.String)>($r45);
        r46 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>($r43);
        $i31 = i0 + 1;
        $r47 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r46, $i31, i1, 0, i2, i3, z1, r2);
        return $r47;

     label19:
        $r48 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection getElementsByName(java.util.Collection,int,int,boolean,boolean)>(r1, i0, i1, z0, z1);
        return $r48;

     label20:
        return r1;

     label21:
        $r49 = new org.htmlcleaner.XPatherException;
        specialinvoke $r49.<org.htmlcleaner.XPatherException: void <init>()>();
        throw $r49;
    }

    private java.lang.String flatten(int, int)
    {
        org.htmlcleaner.XPather r0;
        int i0, i1, i2;
        java.lang.StringBuffer r1, $r2;
        java.lang.String[] $r3;
        java.lang.String $r4, $r6;

        r0 := @this: org.htmlcleaner.XPather;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 > i1 goto label2;

        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        r1 = $r2;
        i2 = i0;

     label0:
        if i2 > i1 goto label1;

        $r3 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r4 = $r3[i2];
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        i2 = i2 + 1;
        goto label0;

     label1:
        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r6;

     label2:
        return "";
    }

    private boolean isValidInteger(java.lang.String)
    {
        org.htmlcleaner.XPather r0;
        java.lang.String r1;
        java.lang.NumberFormatException r2, $r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;

     label0:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);
        $z0 = 1;

     label1:
        return $z0;

     label2:
        $r3 := @caughtexception;
        r2 = $r3;
        return 0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    private boolean isValidDouble(java.lang.String)
    {
        org.htmlcleaner.XPather r0;
        java.lang.String r1;
        java.lang.NumberFormatException r2, $r3;
        boolean $z0;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;

     label0:
        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r1);
        $z0 = 1;

     label1:
        return $z0;

     label2:
        $r3 := @caughtexception;
        r2 = $r3;
        return 0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    private boolean isIdentifier(java.lang.String)
    {
        org.htmlcleaner.XPather r0;
        java.lang.String r1, r2;
        int i0, $i2, $i4;
        char c1, $c3;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return 0;

     label0:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $i2 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i2 <= 0 goto label4;

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);
        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c3);
        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = 1;

     label2:
        $i4 = virtualinvoke r2.<java.lang.String: int length()>();
        if i0 >= $i4 goto label4;

        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);
        if c1 == 95 goto label3;

        if c1 == 45 goto label3;

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c1);
        if $z1 != 0 goto label3;

        return 0;

     label3:
        i0 = i0 + 1;
        goto label2;

     label4:
        return 0;
    }

    private boolean isFunctionCall(int, int)
    {
        org.htmlcleaner.XPather r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String[] $r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.htmlcleaner.XPather;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r2 = $r1[i0];
        $z0 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isIdentifier(java.lang.String)>($r2);
        if $z0 != 0 goto label0;

        $i2 = i0 + 1;
        $z1 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isToken(java.lang.String,int)>("(", $i2);
        if $z1 != 0 goto label0;

        return 0;

     label0:
        $i3 = i0 + 1;
        $i4 = specialinvoke r0.<org.htmlcleaner.XPather: int findClosingIndex(int,int)>($i3, i1);
        $i5 = i0 + 1;
        if $i4 <= $i5 goto label1;

        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private java.util.Collection evaluateFunction(java.util.Collection, int, int, int, int, boolean) throws org.htmlcleaner.XPatherException
    {
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, r7, r27;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1, $z2, $z4, $z6, $z7, $z9, $z11, $z13, $z14, $z15, $z17;
        java.lang.String r2, $r11, $r13, $r16, $r20, $r23, $r24, $r26, $r30, $r36;
        java.util.ArrayList r3, $r12;
        java.util.Iterator r4, r8;
        java.lang.Object r5, r9;
        java.lang.String[] $r10;
        java.lang.Integer $r15, $r18, $r25;
        org.htmlcleaner.TagNode $r21, $r28;
        java.lang.StringBuffer $r22, $r29;
        org.htmlcleaner.XPatherException $r31;
        java.lang.StringBuilder $r32, $r33, $r34, $r35;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        i3 := @parameter4: int;
        z0 := @parameter5: boolean;
        $r10 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r11 = $r10[i0];
        r2 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();
        $r12 = new java.util.ArrayList;
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();
        r3 = $r12;
        i4 = interfaceinvoke r1.<java.util.Collection: int size()>();
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        i5 = 0;

     label0:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label16;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        i5 = i5 + 1;
        $r13 = "last";
        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z2 == 0 goto label3;

        $r15 = new java.lang.Integer;
        if z0 == 0 goto label1;

        $i6 = i3;
        goto label2;

     label1:
        $i6 = i4;

     label2:
        specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i6);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);
        goto label15;

     label3:
        $r16 = "position";
        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z4 == 0 goto label6;

        $r18 = new java.lang.Integer;
        if z0 == 0 goto label4;

        $i7 = i2;
        goto label5;

     label4:
        $i7 = i5;

     label5:
        specialinvoke $r18.<java.lang.Integer: void <init>(int)>($i7);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);
        goto label15;

     label6:
        $r20 = "text";
        $z6 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z6 == 0 goto label8;

        $z7 = r5 instanceof org.htmlcleaner.TagNode;
        if $z7 == 0 goto label7;

        $r21 = (org.htmlcleaner.TagNode) r5;
        $r22 = virtualinvoke $r21.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);
        goto label15;

     label7:
        $z9 = r5 instanceof java.lang.String;
        if $z9 == 0 goto label15;

        $r23 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);
        goto label15;

     label8:
        $r24 = "count";
        $z11 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z11 == 0 goto label9;

        $i8 = i0 + 2;
        $i9 = i1 - 1;
        r7 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i8, $i9, 0, i2, 0, z0, null);
        $r25 = new java.lang.Integer;
        $i10 = interfaceinvoke r7.<java.util.Collection: int size()>();
        specialinvoke $r25.<java.lang.Integer: void <init>(int)>($i10);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);
        goto label15;

     label9:
        $r26 = "data";
        $z13 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z13 == 0 goto label14;

        $i11 = i0 + 2;
        $i12 = i1 - 1;
        r27 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r1, $i11, $i12, 0, i2, 0, z0, null);
        r8 = interfaceinvoke r27.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z14 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z14 == 0 goto label13;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        $z15 = r9 instanceof org.htmlcleaner.TagNode;
        if $z15 == 0 goto label11;

        $r28 = (org.htmlcleaner.TagNode) r9;
        $r29 = virtualinvoke $r28.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);
        goto label12;

     label11:
        $z17 = r9 instanceof java.lang.String;
        if $z17 == 0 goto label12;

        $r30 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);

     label12:
        goto label10;

     label13:
        goto label15;

     label14:
        $r31 = new org.htmlcleaner.XPatherException;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown function ");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r31.<org.htmlcleaner.XPatherException: void <init>(java.lang.String)>($r36);
        throw $r31;

     label15:
        goto label0;

     label16:
        return r3;
    }

    private java.util.Collection filterByCondition(java.util.Collection, int, int) throws org.htmlcleaner.XPatherException
    {
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, $r9, $r10, $r11;
        int i0, i1, i2, i3, $i4, $i5;
        java.util.ArrayList $r2, r3, r6, $r8;
        java.util.Iterator r4;
        java.lang.Object r5, r7;
        boolean $z0, $z1, $z2, $z4;
        java.lang.Boolean $r12;
        java.lang.Integer $r13;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        i2 = 0;
        i3 = interfaceinvoke r1.<java.util.Collection: int size()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        i2 = i2 + 1;
        $r8 = new java.util.ArrayList;
        $r9 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r5);
        $r10 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r5);
        $r11 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>($r9, i0, i1, 0, i2, i3, 1, $r10);
        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);
        r6 = $r8;
        $i4 = virtualinvoke r6.<java.util.ArrayList: int size()>();
        if $i4 < 1 goto label3;

        r7 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $z1 = r7 instanceof java.lang.Boolean;
        if $z1 == 0 goto label1;

        $r12 = (java.lang.Boolean) r7;
        $z2 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();
        if $z2 == 0 goto label3;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        goto label3;

     label1:
        $z4 = r7 instanceof java.lang.Integer;
        if $z4 == 0 goto label2;

        $r13 = (java.lang.Integer) r7;
        $i5 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
        if $i5 != i2 goto label3;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        goto label3;

     label2:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label3:
        goto label0;

     label4:
        return r3;
    }

    private boolean isToken(java.lang.String, int)
    {
        org.htmlcleaner.XPather r0;
        java.lang.String r1, $r4, $r5, $r6;
        int i0, i1;
        java.lang.String[] $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        i1 = lengthof $r2;
        if i0 < 0 goto label0;

        if i0 >= i1 goto label0;

        $r3 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r4 = $r3[i0];
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    private int findClosingIndex(int, int)
    {
        org.htmlcleaner.XPather r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.String r1, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r37;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.lang.String[] $r2, $r5, $r9, $r18, $r21, $r24, $r27, $r30, $r33, $r36;
        byte $b8, $b9, $b10;

        r0 := @this: org.htmlcleaner.XPather;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 >= i1 goto label28;

        $r2 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        r1 = $r2[i0];
        $r3 = "\"";
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label3;

        i2 = i0 + 1;

     label0:
        if i2 > i1 goto label2;

        $r4 = "\"";
        $r5 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r6 = $r5[i2];
        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z2 == 0 goto label1;

        return i2;

     label1:
        i2 = i2 + 1;
        goto label0;

     label2:
        goto label28;

     label3:
        $r7 = "\'";
        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z3 == 0 goto label7;

        i7 = i0 + 1;

     label4:
        if i7 > i1 goto label6;

        $r8 = "\'";
        $r9 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r10 = $r9[i7];
        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z4 == 0 goto label5;

        return i7;

     label5:
        i7 = i7 + 1;
        goto label4;

     label6:
        goto label28;

     label7:
        $r11 = "(";
        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z5 != 0 goto label8;

        $r12 = "[";
        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z6 != 0 goto label8;

        $r13 = "/";
        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z7 == 0 goto label28;

     label8:
        z8 = 1;
        z0 = 1;
        $r14 = "(";
        $z9 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z9 == 0 goto label9;

        $b8 = 1;
        goto label10;

     label9:
        $b8 = 0;

     label10:
        i3 = $b8;
        $r15 = "[";
        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z10 == 0 goto label11;

        $b9 = 1;
        goto label12;

     label11:
        $b9 = 0;

     label12:
        i4 = $b9;
        $r16 = "/";
        $z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z11 == 0 goto label13;

        $b10 = 1;
        goto label14;

     label13:
        $b10 = 0;

     label14:
        i5 = $b10;
        i6 = i0 + 1;

     label15:
        if i6 > i1 goto label28;

        $r17 = "\"";
        $r18 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r19 = $r18[i6];
        $z12 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r19);
        if $z12 == 0 goto label18;

        if z8 != 0 goto label16;

        $z13 = 1;
        goto label17;

     label16:
        $z13 = 0;

     label17:
        z8 = $z13;
        goto label26;

     label18:
        $r20 = "\'";
        $r21 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r22 = $r21[i6];
        $z14 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r22);
        if $z14 == 0 goto label21;

        if z0 != 0 goto label19;

        $z15 = 1;
        goto label20;

     label19:
        $z15 = 0;

     label20:
        z0 = $z15;
        goto label26;

     label21:
        $r23 = "(";
        $r24 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r25 = $r24[i6];
        $z16 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r25);
        if $z16 == 0 goto label22;

        if z8 == 0 goto label22;

        if z0 == 0 goto label22;

        i3 = i3 + 1;
        goto label26;

     label22:
        $r26 = ")";
        $r27 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r28 = $r27[i6];
        $z17 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r28);
        if $z17 == 0 goto label23;

        if z8 == 0 goto label23;

        if z0 == 0 goto label23;

        i3 = i3 + -1;
        goto label26;

     label23:
        $r29 = "[";
        $r30 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r31 = $r30[i6];
        $z18 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r31);
        if $z18 == 0 goto label24;

        if z8 == 0 goto label24;

        if z0 == 0 goto label24;

        i4 = i4 + 1;
        goto label26;

     label24:
        $r32 = "]";
        $r33 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r34 = $r33[i6];
        $z19 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r34);
        if $z19 == 0 goto label25;

        if z8 == 0 goto label25;

        if z0 == 0 goto label25;

        i4 = i4 + -1;
        goto label26;

     label25:
        $r35 = "/";
        $r36 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r37 = $r36[i6];
        $z20 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r37);
        if $z20 == 0 goto label26;

        if z8 == 0 goto label26;

        if z0 == 0 goto label26;

        if i3 != 0 goto label26;

        if i4 != 0 goto label26;

        i5 = i5 + -1;

     label26:
        if z8 == 0 goto label27;

        if z0 == 0 goto label27;

        if i3 != 0 goto label27;

        if i4 != 0 goto label27;

        if i5 != 0 goto label27;

        return i6;

     label27:
        i6 = i6 + 1;
        goto label15;

     label28:
        return -1;
    }

    private boolean isAtt(java.lang.String)
    {
        org.htmlcleaner.XPather r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 1 goto label0;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("@");
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    private java.util.Collection singleton(java.lang.Object)
    {
        org.htmlcleaner.XPather r0;
        java.lang.Object r1;
        java.util.ArrayList $r2, r3;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.Object;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);
        return r3;
    }

    private java.util.Collection getElementsByName(java.util.Collection, int, int, boolean, boolean) throws org.htmlcleaner.XPatherException
    {
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, r4, r9, r11, r15, $r27, $r28, $r29, $r30, $r39, $r44;
        int i0, i1, $i2, $i3, i4, $i5, $i6;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z8, $z9, $z10, $z13, $z14, z15, $z17, $z18;
        java.lang.String r2, r8, $r17, r18, $r25, $r36, $r37, $r38;
        java.util.ArrayList r3, r45, r48;
        java.util.Iterator r5, r13, r22, r33;
        java.lang.Object r6, r23, r34, $r43;
        org.htmlcleaner.TagNode r7, r10, r14, r24, r35;
        java.util.List r12, $r21, $r40;
        java.lang.String[] $r16;
        java.util.Map $r26;
        java.util.LinkedHashSet r32, r42, r46, r47, r49;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        $r16 = r0.<org.htmlcleaner.XPather: java.lang.String[] tokenArray>;
        $r17 = $r16[i0];
        r2 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();
        $z4 = specialinvoke r0.<org.htmlcleaner.XPather: boolean isAtt(java.lang.String)>(r2);
        if $z4 == 0 goto label11;

        r18 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);
        r45 = new java.util.ArrayList;
        specialinvoke r45.<java.util.ArrayList: void <init>()>();
        r3 = r45;
        if z0 == 0 goto label3;

        r46 = new java.util.LinkedHashSet;
        specialinvoke r46.<java.util.LinkedHashSet: void <init>()>();
        r4 = r46;
        r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        $z5 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z5 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        $z6 = r6 instanceof org.htmlcleaner.TagNode;
        if $z6 == 0 goto label1;

        r7 = (org.htmlcleaner.TagNode) r6;
        $r21 = virtualinvoke r7.<org.htmlcleaner.TagNode: java.util.List getAllElementsList(boolean)>(1);
        interfaceinvoke r4.<java.util.Collection: boolean addAll(java.util.Collection)>($r21);

     label1:
        goto label0;

     label2:
        goto label4;

     label3:
        r4 = r1;

     label4:
        r22 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z8 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();
        if $z8 == 0 goto label10;

        r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();
        $z9 = r23 instanceof org.htmlcleaner.TagNode;
        if $z9 == 0 goto label8;

        r24 = (org.htmlcleaner.TagNode) r23;
        $r25 = "*";
        $z10 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r18);
        if $z10 == 0 goto label6;

        $r26 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.util.Map getAttributes()>();
        $r27 = interfaceinvoke $r26.<java.util.Map: java.util.Collection values()>();
        $i2 = i0 + 1;
        $r28 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>($r27, $i2, i1, 0, 1, 1, z1, null);
        interfaceinvoke r3.<java.util.Collection: boolean addAll(java.util.Collection)>($r28);
        goto label7;

     label6:
        r8 = virtualinvoke r24.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>(r18);
        if r8 == null goto label7;

        $r29 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r8);
        $i3 = i0 + 1;
        $r30 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>($r29, $i3, i1, 0, 1, 1, z1, null);
        interfaceinvoke r3.<java.util.Collection: boolean addAll(java.util.Collection)>($r30);

     label7:
        goto label9;

     label8:
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();

     label9:
        goto label5;

     label10:
        return r3;

     label11:
        r47 = new java.util.LinkedHashSet;
        specialinvoke r47.<java.util.LinkedHashSet: void <init>()>();
        r32 = r47;
        r33 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        i4 = 0;

     label12:
        $z13 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();
        if $z13 == 0 goto label29;

        r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();
        $z14 = r34 instanceof org.htmlcleaner.TagNode;
        if $z14 == 0 goto label27;

        r35 = (org.htmlcleaner.TagNode) r34;
        i4 = i4 + 1;
        $r36 = ".";
        z15 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $r37 = "..";
        z2 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        $r38 = "*";
        z3 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if z15 == 0 goto label13;

        r9 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r35);
        goto label19;

     label13:
        if z2 == 0 goto label16;

        r10 = virtualinvoke r35.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        if r10 == null goto label14;

        $r39 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r10);
        goto label15;

     label14:
        r48 = new java.util.ArrayList;
        $r39 = r48;
        specialinvoke r48.<java.util.ArrayList: void <init>()>();

     label15:
        r9 = $r39;
        goto label19;

     label16:
        if z3 == 0 goto label17;

        $r40 = virtualinvoke r35.<org.htmlcleaner.TagNode: java.util.List getChildTagList()>();
        goto label18;

     label17:
        $r40 = virtualinvoke r35.<org.htmlcleaner.TagNode: java.util.List getElementListByName(java.lang.String,boolean)>(r2, 0);

     label18:
        r9 = $r40;

     label19:
        r49 = new java.util.LinkedHashSet;
        specialinvoke r49.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r9);
        r42 = r49;
        $i5 = i0 + 1;
        $i6 = virtualinvoke r42.<java.util.LinkedHashSet: int size()>();
        r11 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection)>(r42, $i5, i1, 0, i4, $i6, z1, null);
        if z0 == 0 goto label25;

        r12 = virtualinvoke r35.<org.htmlcleaner.TagNode: java.util.List getChildTagList()>();
        if z15 != 0 goto label20;

        if z2 != 0 goto label20;

        if z3 == 0 goto label21;

     label20:
        interfaceinvoke r32.<java.util.Collection: boolean addAll(java.util.Collection)>(r11);

     label21:
        r13 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z17 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
        if $z17 == 0 goto label24;

        $r43 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
        r14 = (org.htmlcleaner.TagNode) $r43;
        $r44 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection singleton(java.lang.Object)>(r14);
        r15 = specialinvoke r0.<org.htmlcleaner.XPather: java.util.Collection getElementsByName(java.util.Collection,int,int,boolean,boolean)>($r44, i0, i1, z0, z1);
        if z15 != 0 goto label23;

        if z2 != 0 goto label23;

        if z3 != 0 goto label23;

        $z18 = interfaceinvoke r11.<java.util.Collection: boolean contains(java.lang.Object)>(r14);
        if $z18 == 0 goto label23;

        interfaceinvoke r32.<java.util.Collection: boolean add(java.lang.Object)>(r14);

     label23:
        interfaceinvoke r32.<java.util.Collection: boolean addAll(java.util.Collection)>(r15);
        goto label22;

     label24:
        goto label26;

     label25:
        interfaceinvoke r32.<java.util.Collection: boolean addAll(java.util.Collection)>(r11);

     label26:
        goto label28;

     label27:
        specialinvoke r0.<org.htmlcleaner.XPather: void throwStandardException()>();

     label28:
        goto label12;

     label29:
        return r32;
    }

    private boolean evaluateLogic(java.util.Collection, java.util.Collection, java.lang.String)
    {
        org.htmlcleaner.XPather r0;
        java.util.Collection r1, r2;
        java.lang.String r3, r6, $r11, $r12, $r13, $r14, $r15, r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.Object r4, r5;
        double d0, d1;
        int $i0, $i1, i7;
        java.util.Iterator $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        java.lang.Number $r9, $r10;
        byte $b2, $b3, $b4, $b5, $b6;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.util.Collection;
        r2 := @parameter1: java.util.Collection;
        r3 := @parameter2: java.lang.String;
        if r1 == null goto label0;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();
        if $i0 == 0 goto label0;

        if r2 == null goto label0;

        $i1 = interfaceinvoke r2.<java.util.Collection: int size()>();
        if $i1 != 0 goto label1;

     label0:
        return 0;

     label1:
        $r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();
        $r8 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();
        r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();
        $z0 = r4 instanceof java.lang.Number;
        if $z0 == 0 goto label17;

        $z1 = r5 instanceof java.lang.Number;
        if $z1 == 0 goto label17;

        $r9 = (java.lang.Number) r4;
        d0 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>();
        $r10 = (java.lang.Number) r5;
        d1 = virtualinvoke $r10.<java.lang.Number: double doubleValue()>();
        $r11 = "=";
        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z2 == 0 goto label4;

        $b2 = d0 cmpl d1;
        if $b2 != 0 goto label2;

        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        $r12 = "<";
        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z4 == 0 goto label7;

        $b3 = d0 cmpg d1;
        if $b3 >= 0 goto label5;

        $z5 = 1;
        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;

     label7:
        $r13 = ">";
        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z6 == 0 goto label10;

        $b4 = d0 cmpl d1;
        if $b4 <= 0 goto label8;

        $z7 = 1;
        goto label9;

     label8:
        $z7 = 0;

     label9:
        return $z7;

     label10:
        $r14 = "<=";
        $z8 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z8 == 0 goto label13;

        $b5 = d0 cmpg d1;
        if $b5 > 0 goto label11;

        $z9 = 1;
        goto label12;

     label11:
        $z9 = 0;

     label12:
        return $z9;

     label13:
        $r15 = ">=";
        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z10 == 0 goto label16;

        $b6 = d0 cmpl d1;
        if $b6 < 0 goto label14;

        $z11 = 1;
        goto label15;

     label14:
        $z11 = 0;

     label15:
        return $z11;

     label16:
        goto label32;

     label17:
        r16 = specialinvoke r0.<org.htmlcleaner.XPather: java.lang.String toText(java.lang.Object)>(r4);
        r6 = specialinvoke r0.<org.htmlcleaner.XPather: java.lang.String toText(java.lang.Object)>(r5);
        i7 = virtualinvoke r16.<java.lang.String: int compareTo(java.lang.String)>(r6);
        $r17 = "=";
        $z12 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z12 == 0 goto label20;

        if i7 != 0 goto label18;

        $z13 = 1;
        goto label19;

     label18:
        $z13 = 0;

     label19:
        return $z13;

     label20:
        $r18 = "<";
        $z14 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z14 == 0 goto label23;

        if i7 >= 0 goto label21;

        $z15 = 1;
        goto label22;

     label21:
        $z15 = 0;

     label22:
        return $z15;

     label23:
        $r19 = ">";
        $z16 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z16 == 0 goto label26;

        if i7 <= 0 goto label24;

        $z17 = 1;
        goto label25;

     label24:
        $z17 = 0;

     label25:
        return $z17;

     label26:
        $r20 = "<=";
        $z18 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z18 == 0 goto label29;

        if i7 > 0 goto label27;

        $z19 = 1;
        goto label28;

     label27:
        $z19 = 0;

     label28:
        return $z19;

     label29:
        $r21 = ">=";
        $z20 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        if $z20 == 0 goto label32;

        if i7 < 0 goto label30;

        $z21 = 1;
        goto label31;

     label30:
        $z21 = 0;

     label31:
        return $z21;

     label32:
        return 0;
    }

    private java.lang.String toText(java.lang.Object)
    {
        org.htmlcleaner.XPather r0;
        java.lang.Object r1;
        boolean $z0;
        org.htmlcleaner.TagNode $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.htmlcleaner.XPather;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label0;

        return "";

     label0:
        $z0 = r1 instanceof org.htmlcleaner.TagNode;
        if $z0 == 0 goto label1;

        $r2 = (org.htmlcleaner.TagNode) r1;
        $r3 = virtualinvoke $r2.<org.htmlcleaner.TagNode: java.lang.StringBuffer getText()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;

     label1:
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();
        return $r5;
    }
}
public class org.htmlcleaner.XPatherException extends java.lang.Exception
{

    public void <init>()
    {
        org.htmlcleaner.XPatherException r0;

        r0 := @this: org.htmlcleaner.XPatherException;
        specialinvoke r0.<org.htmlcleaner.XPatherException: void <init>(java.lang.String)>("Error in evaluating XPath expression!");
        return;
    }

    public void <init>(java.lang.Throwable)
    {
        org.htmlcleaner.XPatherException r0;
        java.lang.Throwable r1;

        r0 := @this: org.htmlcleaner.XPatherException;
        r1 := @parameter0: java.lang.Throwable;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);
        return;
    }

    public void <init>(java.lang.String)
    {
        org.htmlcleaner.XPatherException r0;
        java.lang.String r1;

        r0 := @this: org.htmlcleaner.XPatherException;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.htmlcleaner.XPatherException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: org.htmlcleaner.XPatherException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);
        return;
    }
}
public class net.nightwhistler.htmlspanner.spans.FontFamilySpan extends android.text.style.TypefaceSpan
{
    private final net.nightwhistler.htmlspanner.FontFamily family;
    private boolean bold;
    private boolean italic;

    public void <init>(net.nightwhistler.htmlspanner.FontFamily)
    {
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        net.nightwhistler.htmlspanner.FontFamily r1;
        java.lang.String $r2;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        r1 := @parameter0: net.nightwhistler.htmlspanner.FontFamily;
        $r2 = virtualinvoke r1.<net.nightwhistler.htmlspanner.FontFamily: java.lang.String getName()>();
        specialinvoke r0.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>($r2);
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: net.nightwhistler.htmlspanner.FontFamily family> = r1;
        return;
    }

    public void setBold(boolean)
    {
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        boolean z0;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        z0 := @parameter0: boolean;
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean bold> = z0;
        return;
    }

    public void setItalic(boolean)
    {
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        boolean z0;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        z0 := @parameter0: boolean;
        r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean italic> = z0;
        return;
    }

    public void updateDrawState(android.text.TextPaint)
    {
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        android.text.TextPaint r1;
        net.nightwhistler.htmlspanner.FontFamily $r2;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        r1 := @parameter0: android.text.TextPaint;
        $r2 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: net.nightwhistler.htmlspanner.FontFamily family>;
        specialinvoke r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void applyCustomTypeFace(android.graphics.Paint,net.nightwhistler.htmlspanner.FontFamily)>(r1, $r2);
        return;
    }

    public void updateMeasureState(android.text.TextPaint)
    {
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        android.text.TextPaint r1;
        net.nightwhistler.htmlspanner.FontFamily $r2;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        r1 := @parameter0: android.text.TextPaint;
        $r2 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: net.nightwhistler.htmlspanner.FontFamily family>;
        specialinvoke r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void applyCustomTypeFace(android.graphics.Paint,net.nightwhistler.htmlspanner.FontFamily)>(r1, $r2);
        return;
    }

    private void applyCustomTypeFace(android.graphics.Paint, net.nightwhistler.htmlspanner.FontFamily)
    {
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r0;
        android.graphics.Paint r1;
        net.nightwhistler.htmlspanner.FontFamily r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.Typeface $r3, $r5, $r7, $r8;

        r0 := @this: net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        r1 := @parameter0: android.graphics.Paint;
        r2 := @parameter1: net.nightwhistler.htmlspanner.FontFamily;
        virtualinvoke r1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $z0 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean bold>;
        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: boolean isFakeBold()>();
        if $z1 == 0 goto label0;

        virtualinvoke r1.<android.graphics.Paint: void setFakeBoldText(boolean)>(1);
        goto label1;

     label0:
        $r3 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface getBoldTypeface()>();
        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r3);

     label1:
        $z2 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean italic>;
        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: boolean isFakeItalic()>();
        if $z3 == 0 goto label2;

        virtualinvoke r1.<android.graphics.Paint: void setTextSkewX(float)>(-0.25F);
        goto label3;

     label2:
        $r5 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface getItalicTypeface()>();
        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r5);

     label3:
        $z4 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean bold>;
        if $z4 == 0 goto label4;

        $z5 = r0.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: boolean italic>;
        if $z5 == 0 goto label4;

        $r7 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface getBoldItalicTypeface()>();
        if $r7 == null goto label4;

        $r8 = virtualinvoke r2.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface getBoldItalicTypeface()>();
        virtualinvoke r1.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r8);

     label4:
        return;
    }
}
public class net.nightwhistler.htmlspanner.spans.CenterSpan extends java.lang.Object implements android.text.style.AlignmentSpan
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.spans.CenterSpan r0;

        r0 := @this: net.nightwhistler.htmlspanner.spans.CenterSpan;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public android.text.Layout$Alignment getAlignment()
    {
        net.nightwhistler.htmlspanner.spans.CenterSpan r0;
        android.text.Layout$Alignment $r1;

        r0 := @this: net.nightwhistler.htmlspanner.spans.CenterSpan;
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;
        return $r1;
    }
}
public class net.nightwhistler.htmlspanner.HtmlSpanner extends java.lang.Object
{
    private java.util.Map handlers;
    private boolean stripExtraWhiteSpace;
    private static java.util.regex.Pattern SPECIAL_CHAR;
    private static java.util.Map REPLACEMENTS;
    private org.htmlcleaner.HtmlCleaner htmlCleaner;
    private net.nightwhistler.htmlspanner.FontFamily fontFamily;

    public void <init>()
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        org.htmlcleaner.HtmlCleaner $r1;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        $r1 = staticinvoke <net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner createHtmlCleaner()>();
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void <init>(org.htmlcleaner.HtmlCleaner)>($r1);
        return;
    }

    public void <init>(org.htmlcleaner.HtmlCleaner)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        org.htmlcleaner.HtmlCleaner r1;
        android.graphics.Typeface $r2;
        java.util.HashMap $r3;
        net.nightwhistler.htmlspanner.FontFamily $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: org.htmlcleaner.HtmlCleaner;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: boolean stripExtraWhiteSpace> = 0;
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner htmlCleaner> = r1;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map handlers> = $r3;
        $r4 = new net.nightwhistler.htmlspanner.FontFamily;
        $r2 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT>;
        specialinvoke $r4.<net.nightwhistler.htmlspanner.FontFamily: void <init>(java.lang.String,android.graphics.Typeface)>("default", $r2);
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily fontFamily> = $r4;
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerBuiltInHandlers()>();
        return;
    }

    public net.nightwhistler.htmlspanner.FontFamily getFontFamily()
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        net.nightwhistler.htmlspanner.FontFamily $r1;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        $r1 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily fontFamily>;
        return $r1;
    }

    public void setFontFamily(net.nightwhistler.htmlspanner.FontFamily)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        net.nightwhistler.htmlspanner.FontFamily r1;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: net.nightwhistler.htmlspanner.FontFamily;
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily fontFamily> = r1;
        return;
    }

    public void setStripExtraWhiteSpace(boolean)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        boolean z0;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        z0 := @parameter0: boolean;
        r0.<net.nightwhistler.htmlspanner.HtmlSpanner: boolean stripExtraWhiteSpace> = z0;
        return;
    }

    public boolean isStripExtraWhiteSpace()
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        boolean $z0;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        $z0 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: boolean stripExtraWhiteSpace>;
        return $z0;
    }

    public void registerHandler(java.lang.String, net.nightwhistler.htmlspanner.TagNodeHandler)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.lang.String r1;
        net.nightwhistler.htmlspanner.TagNodeHandler r2;
        java.util.Map $r3;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: net.nightwhistler.htmlspanner.TagNodeHandler;
        $r3 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map handlers>;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        virtualinvoke r2.<net.nightwhistler.htmlspanner.TagNodeHandler: void setSpanner(net.nightwhistler.htmlspanner.HtmlSpanner)>(r0);
        return;
    }

    public android.text.Spanned fromHtml(java.lang.String)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.lang.String r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.TagNode $r3;
        android.text.Spanned $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner htmlCleaner>;
        $r3 = virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.lang.String)>(r1);
        $r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)>($r3);
        return $r4;
    }

    public android.text.Spanned fromHtml(java.io.Reader) throws java.io.IOException
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.io.Reader r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.TagNode $r3;
        android.text.Spanned $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.io.Reader;
        $r2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner htmlCleaner>;
        $r3 = virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.Reader)>(r1);
        $r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)>($r3);
        return $r4;
    }

    public android.text.Spanned fromHtml(java.io.InputStream) throws java.io.IOException
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.io.InputStream r1;
        org.htmlcleaner.HtmlCleaner $r2;
        org.htmlcleaner.TagNode $r3;
        android.text.Spanned $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.io.InputStream;
        $r2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: org.htmlcleaner.HtmlCleaner htmlCleaner>;
        $r3 = virtualinvoke $r2.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.TagNode clean(java.io.InputStream)>(r1);
        $r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)>($r3);
        return $r4;
    }

    public net.nightwhistler.htmlspanner.TagNodeHandler getHandlerFor(java.lang.String)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.nightwhistler.htmlspanner.TagNodeHandler $r4;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map handlers>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (net.nightwhistler.htmlspanner.TagNodeHandler) $r3;
        return $r4;
    }

    public android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder $r2, r3;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r2 = new android.text.SpannableStringBuilder;
        specialinvoke $r2.<android.text.SpannableStringBuilder: void <init>()>();
        r3 = $r2;
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void handleContent(android.text.SpannableStringBuilder,java.lang.Object,org.htmlcleaner.TagNode)>(r3, r1, null);
        return r3;
    }

    private static org.htmlcleaner.HtmlCleaner createHtmlCleaner()
    {
        org.htmlcleaner.HtmlCleaner $r0, r1;
        org.htmlcleaner.CleanerProperties r2;

        $r0 = new org.htmlcleaner.HtmlCleaner;
        specialinvoke $r0.<org.htmlcleaner.HtmlCleaner: void <init>()>();
        r1 = $r0;
        r2 = virtualinvoke r1.<org.htmlcleaner.HtmlCleaner: org.htmlcleaner.CleanerProperties getProperties()>();
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setAdvancedXmlEscape(boolean)>(1);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setOmitXmlDeclaration(boolean)>(1);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setOmitDoctypeDeclaration(boolean)>(0);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setTranslateSpecialEntities(boolean)>(1);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setTransResCharsToNCR(boolean)>(1);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setRecognizeUnicodeChars(boolean)>(1);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setIgnoreQuestAndExclam(boolean)>(1);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setUseEmptyElementTags(boolean)>(0);
        virtualinvoke r2.<org.htmlcleaner.CleanerProperties: void setPruneTags(java.lang.String)>("script,style,title");
        return r1;
    }

    private static java.lang.String getEditedText(java.lang.String)
    {
        java.lang.String r0, $r5, $r8;
        java.lang.StringBuffer $r1, r2;
        java.util.regex.Matcher r3;
        java.util.regex.Pattern $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        r2 = $r1;
        $r4 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.regex.Pattern SPECIAL_CHAR>;
        r3 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label0:
        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();
        if $z0 == 0 goto label1;

        $r5 = staticinvoke <net.nightwhistler.htmlspanner.HtmlSpanner: java.lang.String getReplacement(java.util.regex.Matcher)>(r3);
        virtualinvoke r3.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r2, $r5);
        goto label0;

     label1:
        virtualinvoke r3.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r2);
        $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r8;
    }

    private static java.lang.String getReplacement(java.util.regex.Matcher)
    {
        java.util.regex.Matcher r0;
        java.lang.String r1, r2, $r4, $r7, $r11;
        java.lang.Integer r3;
        java.util.Map $r5;
        java.lang.Object $r6;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r8, $r9, $r10;
        char $c4;
        java.lang.NumberFormatException $r12, r13;

        r0 := @parameter0: java.util.regex.Matcher;
        $r4 = virtualinvoke r0.<java.util.regex.Matcher: java.lang.String group(int)>(0);
        r1 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();
        $r5 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (java.lang.String) $r6;
        if r2 == null goto label0;

        return r2;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("&#");
        if $z0 == 0 goto label4;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = $i0 - 1;
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(2, $i1);
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        $c4 = (char) $i3;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r11;

     label3:
        $r12 := @caughtexception;
        r13 = $r12;
        return "";

     label4:
        return "";

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void handleContent(android.text.SpannableStringBuilder, java.lang.Object, org.htmlcleaner.TagNode)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        android.text.SpannableStringBuilder r1;
        java.lang.Object r2;
        org.htmlcleaner.TagNode r3, $r11;
        org.htmlcleaner.ContentNode r4;
        char c0;
        boolean $z0, $z1;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r8, r9;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: android.text.SpannableStringBuilder;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: org.htmlcleaner.TagNode;
        $z0 = r2 instanceof org.htmlcleaner.ContentNode;
        if $z0 == 0 goto label1;

        r4 = (org.htmlcleaner.ContentNode) r2;
        $i1 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        if $i1 <= 0 goto label0;

        $i2 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        $i3 = $i2 - 1;
        c0 = virtualinvoke r1.<android.text.SpannableStringBuilder: char charAt(int)>($i3);
        if c0 == 32 goto label0;

        if c0 == 10 goto label0;

        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(32);

     label0:
        $r6 = virtualinvoke r4.<org.htmlcleaner.ContentNode: java.lang.StringBuilder getContent()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r8 = staticinvoke <net.nightwhistler.htmlspanner.HtmlSpanner: java.lang.String getEditedText(java.lang.String)>($r7);
        r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r9);
        goto label2;

     label1:
        $z1 = r2 instanceof org.htmlcleaner.TagNode;
        if $z1 == 0 goto label2;

        $r11 = (org.htmlcleaner.TagNode) r2;
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void applySpan(android.text.SpannableStringBuilder,org.htmlcleaner.TagNode)>(r1, $r11);

     label2:
        return;
    }

    private void applySpan(android.text.SpannableStringBuilder, org.htmlcleaner.TagNode)
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        android.text.SpannableStringBuilder r1;
        org.htmlcleaner.TagNode r2;
        net.nightwhistler.htmlspanner.TagNodeHandler r3;
        int i0, i1;
        java.util.Iterator r4;
        java.lang.Object r5, $r8;
        java.util.Map $r6;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.util.List $r9;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        r1 := @parameter0: android.text.SpannableStringBuilder;
        r2 := @parameter1: org.htmlcleaner.TagNode;
        $r6 = r0.<net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map handlers>;
        $r7 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);
        r3 = (net.nightwhistler.htmlspanner.TagNodeHandler) $r8;
        i0 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        if r3 == null goto label0;

        virtualinvoke r3.<net.nightwhistler.htmlspanner.TagNodeHandler: void beforeChildren(org.htmlcleaner.TagNode,android.text.SpannableStringBuilder)>(r2, r1);

     label0:
        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<net.nightwhistler.htmlspanner.TagNodeHandler: boolean rendersContent()>();
        if $z0 != 0 goto label3;

     label1:
        $r9 = virtualinvoke r2.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        specialinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void handleContent(android.text.SpannableStringBuilder,java.lang.Object,org.htmlcleaner.TagNode)>(r1, r5, r2);
        goto label2;

     label3:
        i1 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        if r3 == null goto label4;

        virtualinvoke r3.<net.nightwhistler.htmlspanner.TagNodeHandler: void handleTagNode(org.htmlcleaner.TagNode,android.text.SpannableStringBuilder,int,int)>(r2, r1, i0, i1);

     label4:
        return;
    }

    private void registerBuiltInHandlers()
    {
        net.nightwhistler.htmlspanner.HtmlSpanner r0;
        net.nightwhistler.htmlspanner.handlers.ItalicHandler $r1, r2;
        net.nightwhistler.htmlspanner.handlers.BoldHandler r3, $r14;
        net.nightwhistler.htmlspanner.handlers.MarginHandler r4, $r15;
        net.nightwhistler.htmlspanner.handlers.NewLineHandler r5, r6, $r16, $r17;
        net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler r7, $r24;
        net.nightwhistler.htmlspanner.handlers.PreHandler r8, $r25;
        net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler r9, r10, $r26, $r27;
        net.nightwhistler.htmlspanner.handlers.SubScriptHandler r11, $r28;
        net.nightwhistler.htmlspanner.handlers.SuperScriptHandler r12, $r29;
        net.nightwhistler.htmlspanner.handlers.CenterHandler r13, $r30;
        net.nightwhistler.htmlspanner.handlers.HeaderHandler $r18, $r19, $r20, $r21, $r22, $r23;
        net.nightwhistler.htmlspanner.handlers.ListItemHandler $r31;
        net.nightwhistler.htmlspanner.handlers.LinkHandler $r32;
        net.nightwhistler.htmlspanner.handlers.ImageHandler $r33;

        r0 := @this: net.nightwhistler.htmlspanner.HtmlSpanner;
        $r1 = new net.nightwhistler.htmlspanner.handlers.ItalicHandler;
        specialinvoke $r1.<net.nightwhistler.htmlspanner.handlers.ItalicHandler: void <init>()>();
        r2 = $r1;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("i", r2);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("strong", r2);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("cite", r2);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("dfn", r2);
        $r14 = new net.nightwhistler.htmlspanner.handlers.BoldHandler;
        specialinvoke $r14.<net.nightwhistler.htmlspanner.handlers.BoldHandler: void <init>()>();
        r3 = $r14;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("b", r3);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("em", r3);
        $r15 = new net.nightwhistler.htmlspanner.handlers.MarginHandler;
        specialinvoke $r15.<net.nightwhistler.htmlspanner.handlers.MarginHandler: void <init>()>();
        r4 = $r15;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("blockquote", r4);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("ul", r4);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("ol", r4);
        $r16 = new net.nightwhistler.htmlspanner.handlers.NewLineHandler;
        specialinvoke $r16.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: void <init>(int)>(1);
        r5 = $r16;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("br", r5);
        $r17 = new net.nightwhistler.htmlspanner.handlers.NewLineHandler;
        specialinvoke $r17.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: void <init>(int)>(2);
        r6 = $r17;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("p", r6);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("div", r6);
        $r18 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        specialinvoke $r18.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.5F);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h1", $r18);
        $r19 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        specialinvoke $r19.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.4F);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h2", $r19);
        $r20 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        specialinvoke $r20.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.3F);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h3", $r20);
        $r21 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        specialinvoke $r21.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.2F);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h4", $r21);
        $r22 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        specialinvoke $r22.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.1F);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h5", $r22);
        $r23 = new net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        specialinvoke $r23.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void <init>(float)>(1.0F);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("h6", $r23);
        $r24 = new net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler;
        specialinvoke $r24.<net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler: void <init>()>();
        r7 = $r24;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("tt", r7);
        $r25 = new net.nightwhistler.htmlspanner.handlers.PreHandler;
        specialinvoke $r25.<net.nightwhistler.htmlspanner.handlers.PreHandler: void <init>()>();
        r8 = $r25;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("pre", r8);
        $r26 = new net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler;
        specialinvoke $r26.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: void <init>(float)>(1.25F);
        r9 = $r26;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("big", r9);
        $r27 = new net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler;
        specialinvoke $r27.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: void <init>(float)>(0.8F);
        r10 = $r27;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("small", r10);
        $r28 = new net.nightwhistler.htmlspanner.handlers.SubScriptHandler;
        specialinvoke $r28.<net.nightwhistler.htmlspanner.handlers.SubScriptHandler: void <init>()>();
        r11 = $r28;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("sub", r11);
        $r29 = new net.nightwhistler.htmlspanner.handlers.SuperScriptHandler;
        specialinvoke $r29.<net.nightwhistler.htmlspanner.handlers.SuperScriptHandler: void <init>()>();
        r12 = $r29;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("sup", r12);
        $r30 = new net.nightwhistler.htmlspanner.handlers.CenterHandler;
        specialinvoke $r30.<net.nightwhistler.htmlspanner.handlers.CenterHandler: void <init>()>();
        r13 = $r30;
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("center", r13);
        $r31 = new net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        specialinvoke $r31.<net.nightwhistler.htmlspanner.handlers.ListItemHandler: void <init>()>();
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("li", $r31);
        $r32 = new net.nightwhistler.htmlspanner.handlers.LinkHandler;
        specialinvoke $r32.<net.nightwhistler.htmlspanner.handlers.LinkHandler: void <init>()>();
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("a", $r32);
        $r33 = new net.nightwhistler.htmlspanner.handlers.ImageHandler;
        specialinvoke $r33.<net.nightwhistler.htmlspanner.handlers.ImageHandler: void <init>()>();
        virtualinvoke r0.<net.nightwhistler.htmlspanner.HtmlSpanner: void registerHandler(java.lang.String,net.nightwhistler.htmlspanner.TagNodeHandler)>("img", $r33);
        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.util.HashMap $r1;
        java.util.Map $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\t| +|&[a-z]*;|&#[0-9]*;|\n)");
        <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.regex.Pattern SPECIAL_CHAR> = $r0;
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS> = $r1;
        $r2 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", " ");
        $r4 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\n", " ");
        $r6 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&nbsp;", " ");
        $r8 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&amp;", "&");
        $r10 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&quot;", "\"");
        $r12 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&cent;", "\u00a2");
        $r14 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lt;", "<");
        $r16 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&gt;", ">");
        $r18 = <net.nightwhistler.htmlspanner.HtmlSpanner: java.util.Map REPLACEMENTS>;
        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sect;", "\u00a7");
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.TypefaceSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MonoSpaceHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new android.text.style.TypefaceSpan;
        specialinvoke $r3.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>("monospace");
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.SubScriptHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.SubScriptHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.SubScriptHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.SubScriptHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.SubscriptSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.SubScriptHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new android.text.style.SubscriptSpan;
        specialinvoke $r3.<android.text.style.SubscriptSpan: void <init>()>();
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.ItalicHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.ItalicHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ItalicHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.ItalicHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.StyleSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ItalicHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new android.text.style.StyleSpan;
        specialinvoke $r3.<android.text.style.StyleSpan: void <init>(int)>(2);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.NewLineHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    int numberOfNewLines;

    public void <init>(int)
    {
        net.nightwhistler.htmlspanner.handlers.NewLineHandler r0;
        int i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.NewLineHandler;
        i0 := @parameter0: int;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: int numberOfNewLines> = i0;
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.NewLineHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, i2, $i3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.NewLineHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        i2 = 0;

     label0:
        $i3 = r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: int numberOfNewLines>;
        if i2 >= $i3 goto label1;

        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.NewLineHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        i2 = i2 + 1;
        goto label0;

     label1:
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.ListItemHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    private int getMyIndex(org.htmlcleaner.TagNode)
    {
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;
        org.htmlcleaner.TagNode r1, r4, $r5, $r6;
        int i0;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.util.List $r7;
        boolean $z0, $z1, $z2;
        java.lang.String $r8, $r9;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r5 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        if $r5 != null goto label0;

        return -1;

     label0:
        i0 = 1;
        $r6 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        $r7 = virtualinvoke $r6.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        if r3 != r1 goto label2;

        return i0;

     label2:
        $z1 = r3 instanceof org.htmlcleaner.TagNode;
        if $z1 == 0 goto label3;

        r4 = (org.htmlcleaner.TagNode) r3;
        $r8 = "li";
        $r9 = virtualinvoke r4.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z2 == 0 goto label3;

        i0 = i0 + 1;

     label3:
        goto label1;

     label4:
        return -1;
    }

    private java.lang.String getParentName(org.htmlcleaner.TagNode)
    {
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;
        org.htmlcleaner.TagNode r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r2 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        if $r2 != null goto label0;

        return null;

     label0:
        $r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: org.htmlcleaner.TagNode getParent()>();
        $r4 = virtualinvoke $r3.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        return $r4;
    }

    public void beforeChildren(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder)
    {
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        java.lang.String $r3, $r4, $r9, $r11, $r12;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        int $i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        $r3 = "ol";
        $r4 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.ListItemHandler: java.lang.String getParentName(org.htmlcleaner.TagNode)>(r1);
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z0 == 0 goto label0;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $i0 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.ListItemHandler: int getMyIndex(org.htmlcleaner.TagNode)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r9);
        goto label1;

     label0:
        $r11 = "ul";
        $r12 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.ListItemHandler: java.lang.String getParentName(org.htmlcleaner.TagNode)>(r1);
        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);
        if $z1 == 0 goto label1;

        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\u2022  ");

     label1:
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.ListItemHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, $i2, $i3, $i4;
        char $c5;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ListItemHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $i2 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        if $i2 <= 0 goto label0;

        $i3 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i4 = $i3 - 1;
        $c5 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>($i4);
        if $c5 == 10 goto label0;

        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");

     label0:
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.MarginHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    private static int MARGIN_INDENT;

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.MarginHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MarginHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void beforeChildren(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder)
    {
        net.nightwhistler.htmlspanner.handlers.MarginHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MarginHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        $i0 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        if $i0 <= 0 goto label0;

        $i1 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i2 = $i1 - 1;
        $c3 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>($i2);
        if $c3 == 10 goto label0;

        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.MarginHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);

     label0:
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.MarginHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, $i2;
        android.text.style.LeadingMarginSpan$Standard $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.MarginHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new android.text.style.LeadingMarginSpan$Standard;
        $i2 = <net.nightwhistler.htmlspanner.handlers.MarginHandler: int MARGIN_INDENT>;
        specialinvoke $r3.<android.text.style.LeadingMarginSpan$Standard: void <init>(int)>($i2);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.MarginHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.MarginHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        return;
    }

    static void <clinit>()
    {
        <net.nightwhistler.htmlspanner.handlers.MarginHandler: int MARGIN_INDENT> = 30;
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    private float size;

    public void <init>(float)
    {
        net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler r0;
        float f0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler;
        f0 := @parameter0: float;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: float size> = f0;
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.RelativeSizeSpan $r3;
        float $f0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new android.text.style.RelativeSizeSpan;
        $f0 = r0.<net.nightwhistler.htmlspanner.handlers.RelativeSizeHandler: float size>;
        specialinvoke $r3.<android.text.style.RelativeSizeSpan: void <init>(float)>($f0);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
class net.nightwhistler.htmlspanner.handlers.TableHandler$1 extends java.lang.Object implements android.text.style.AlignmentSpan
{
    final net.nightwhistler.htmlspanner.handlers.TableHandler this$0;

    void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$1 r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$1;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$1: net.nightwhistler.htmlspanner.handlers.TableHandler this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public android.text.Layout$Alignment getAlignment()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$1 r0;
        android.text.Layout$Alignment $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$1;
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;
        return $r1;
    }
}
public class net.nightwhistler.htmlspanner.handlers.PreHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.PreHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.PreHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    private void getPlainText(java.lang.StringBuffer, java.lang.Object)
    {
        net.nightwhistler.htmlspanner.handlers.PreHandler r0;
        java.lang.StringBuffer r1;
        java.lang.Object r2, r5;
        org.htmlcleaner.ContentNode r3;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6;
        org.htmlcleaner.TagNode r8;
        java.util.List $r9;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.PreHandler;
        r1 := @parameter0: java.lang.StringBuffer;
        r2 := @parameter1: java.lang.Object;
        $z0 = r2 instanceof org.htmlcleaner.ContentNode;
        if $z0 == 0 goto label0;

        r3 = (org.htmlcleaner.ContentNode) r2;
        $r6 = virtualinvoke r3.<org.htmlcleaner.ContentNode: java.lang.StringBuilder getContent()>();
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r6);
        goto label2;

     label0:
        $z1 = r2 instanceof org.htmlcleaner.TagNode;
        if $z1 == 0 goto label2;

        r8 = (org.htmlcleaner.TagNode) r2;
        $r9 = virtualinvoke r8.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label2;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.PreHandler: void getPlainText(java.lang.StringBuffer,java.lang.Object)>(r1, r5);
        goto label1;

     label2:
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.PreHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, $i2;
        java.lang.StringBuffer $r3, r4;
        java.lang.String $r5;
        android.text.style.TypefaceSpan $r7;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.PreHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        r4 = $r3;
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.PreHandler: void getPlainText(java.lang.StringBuffer,java.lang.Object)>(r4, r1);
        $r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r5);
        $r7 = new android.text.style.TypefaceSpan;
        specialinvoke $r7.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>("monospace");
        $i2 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r7, i0, $i2, 33);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.PreHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.PreHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        return;
    }

    public boolean rendersContent()
    {
        net.nightwhistler.htmlspanner.handlers.PreHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.PreHandler;
        return 1;
    }
}
public class net.nightwhistler.htmlspanner.handlers.BoldHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.BoldHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.BoldHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.BoldHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan $r3, r4;
        net.nightwhistler.htmlspanner.HtmlSpanner $r5;
        net.nightwhistler.htmlspanner.FontFamily $r6;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.BoldHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        $r5 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.BoldHandler: net.nightwhistler.htmlspanner.HtmlSpanner getSpanner()>();
        $r6 = virtualinvoke $r5.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily getFontFamily()>();
        specialinvoke $r3.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void <init>(net.nightwhistler.htmlspanner.FontFamily)>($r6);
        r4 = $r3;
        virtualinvoke r4.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void setBold(boolean)>(1);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r4, i0, i1, 33);
        return;
    }
}
class net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable extends android.graphics.drawable.Drawable
{
    private java.util.List tableRow;
    final net.nightwhistler.htmlspanner.handlers.TableHandler this$0;

    public void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler, java.util.List)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler r1;
        java.util.List r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r2 := @parameter1: java.util.List;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0> = r1;
        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow> = r2;
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Paint $r2, r3;
        int i0, i1, i2, i3, $i4, $i5, i6, $i7, $i8, $i9;
        boolean z0;
        android.text.StaticLayout r4, $r11;
        net.nightwhistler.htmlspanner.handlers.TableHandler $r5, $r8, $r9, $r15;
        android.graphics.Paint$Style $r6;
        java.util.List $r7, $r10, $r12;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r13;
        java.lang.CharSequence $r14;
        android.text.TextPaint $r16;
        android.text.Layout$Alignment $r17;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        r1 := @parameter0: android.graphics.Canvas;
        $r2 = new android.graphics.Paint;
        specialinvoke $r2.<android.graphics.Paint: void <init>()>();
        r3 = $r2;
        $r5 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        $i4 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$100(net.nightwhistler.htmlspanner.handlers.TableHandler)>($r5);
        virtualinvoke r3.<android.graphics.Paint: void setColor(int)>($i4);
        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);
        $r7 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow>;
        i0 = interfaceinvoke $r7.<java.util.List: int size()>();
        if i0 != 0 goto label0;

        return;

     label0:
        $r8 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        $i5 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$200(net.nightwhistler.htmlspanner.handlers.TableHandler)>($r8);
        i1 = $i5 / i0;
        $r9 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        $r10 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow>;
        i2 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$300(net.nightwhistler.htmlspanner.handlers.TableHandler,java.util.List)>($r9, $r10);
        z0 = 0;
        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        i6 = i3 * i1;
        $f0 = (float) i6;
        $i7 = i6 + i1;
        $f1 = (float) $i7;
        $f2 = (float) i2;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, 0.0F, $f1, $f2, r3);
        $r11 = new android.text.StaticLayout;
        $r12 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow>;
        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i3);
        $r14 = (java.lang.CharSequence) $r13;
        $r15 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        $r16 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: android.text.TextPaint access$400(net.nightwhistler.htmlspanner.handlers.TableHandler)>($r15);
        $i8 = i1 - 10;
        $r17 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;
        specialinvoke $r11.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r14, $r16, $i8, $r17, 1.0F, 0.0F, 1);
        r4 = $r11;
        $i9 = i6 + 5;
        $f3 = (float) $i9;
        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f3, 0.0F);
        virtualinvoke r4.<android.text.StaticLayout: void draw(android.graphics.Canvas)>(r1);
        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(-5.0F, 0.0F);
        i3 = i3 + 1;
        goto label1;

     label2:
        return;
    }

    public int getIntrinsicHeight()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        $r1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        $r2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: java.util.List tableRow>;
        $i0 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$300(net.nightwhistler.htmlspanner.handlers.TableHandler,java.util.List)>($r1, $r2);
        return $i0;
    }

    public int getIntrinsicWidth()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler $r1;
        int $i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        $r1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: net.nightwhistler.htmlspanner.handlers.TableHandler this$0>;
        $i0 = staticinvoke <net.nightwhistler.htmlspanner.handlers.TableHandler: int access$200(net.nightwhistler.htmlspanner.handlers.TableHandler)>($r1);
        return $i0;
    }

    public int getOpacity()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        return -1;
    }

    public void setAlpha(int)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        int i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        i0 := @parameter0: int;
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r0;
        android.graphics.ColorFilter r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        r1 := @parameter0: android.graphics.ColorFilter;
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.SuperScriptHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.SuperScriptHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.SuperScriptHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.SuperScriptHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.SuperscriptSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.SuperScriptHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new android.text.style.SuperscriptSpan;
        specialinvoke $r3.<android.text.style.SuperscriptSpan: void <init>()>();
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.LinkHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.LinkHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.LinkHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.LinkHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        java.lang.String r3;
        android.text.style.URLSpan $r4;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.LinkHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("href");
        $r4 = new android.text.style.URLSpan;
        specialinvoke $r4.<android.text.style.URLSpan: void <init>(java.lang.String)>(r3);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r4, i0, i1, 33);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.ImageHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.ImageHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ImageHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.ImageHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r3;
        android.graphics.Bitmap r4;
        android.graphics.drawable.BitmapDrawable r5, $r7;
        android.text.style.ImageSpan $r8;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ImageHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        r3 = virtualinvoke r1.<org.htmlcleaner.TagNode: java.lang.String getAttributeByName(java.lang.String)>("src");
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\ufffc");
        r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.ImageHandler: android.graphics.Bitmap loadBitmap(java.lang.String)>(r3);
        if r4 == null goto label0;

        $r7 = new android.graphics.drawable.BitmapDrawable;
        specialinvoke $r7.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r4);
        r5 = $r7;
        $i2 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();
        $i3 = $i2 - 1;
        $i4 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();
        $i5 = $i4 - 1;
        virtualinvoke r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i3, $i5);
        $r8 = new android.text.style.ImageSpan;
        specialinvoke $r8.<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>(r5);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r8, i0, i1, 33);

     label0:
        return;
    }

    protected android.graphics.Bitmap loadBitmap(java.lang.String)
    {
        net.nightwhistler.htmlspanner.handlers.ImageHandler r0;
        java.lang.String r1;
        java.net.URL $r2;
        java.io.IOException r3, $r6;
        java.io.InputStream $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.ImageHandler;
        r1 := @parameter0: java.lang.String;

     label0:
        $r2 = new java.net.URL;
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r1);
        $r4 = virtualinvoke $r2.<java.net.URL: java.io.InputStream openStream()>();
        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r4);

     label1:
        return $r5;

     label2:
        $r6 := @caughtexception;
        r3 = $r6;
        return null;

        catch java.io.IOException from label0 to label1 with label2;
    }
}
public class net.nightwhistler.htmlspanner.handlers.TableHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    private int tableWidth;
    private android.graphics.Typeface typeFace;
    private float textSize;
    private int textColor;
    private static final int PADDING;

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth> = 400;
        $r1 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT>;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.graphics.Typeface typeFace> = $r1;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: float textSize> = 16.0F;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor> = -16777216;
        return;
    }

    public void setTableWidth(int)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        int i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        i0 := @parameter0: int;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth> = i0;
        return;
    }

    public void setTextColor(int)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        int i0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        i0 := @parameter0: int;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor> = i0;
        return;
    }

    public void setTextSize(float)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        float f0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        f0 := @parameter0: float;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: float textSize> = f0;
        return;
    }

    public void setTypeFace(android.graphics.Typeface)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: android.graphics.Typeface;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.graphics.Typeface typeFace> = r1;
        return;
    }

    public boolean rendersContent()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        return 1;
    }

    private void readNode(java.lang.Object, net.nightwhistler.htmlspanner.handlers.TableHandler$Table)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        java.lang.Object r1, r5;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r2;
        org.htmlcleaner.TagNode r3;
        android.text.Spanned r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r6, $r8;
        net.nightwhistler.htmlspanner.HtmlSpanner $r7;
        java.util.List $r9;
        java.util.Iterator r10;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        $z0 = r1 instanceof org.htmlcleaner.ContentNode;
        if $z0 == 0 goto label0;

        return;

     label0:
        r3 = (org.htmlcleaner.TagNode) r1;
        $r6 = virtualinvoke r3.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("td");
        if $z1 == 0 goto label1;

        $r7 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: net.nightwhistler.htmlspanner.HtmlSpanner getSpanner()>();
        r4 = virtualinvoke $r7.<net.nightwhistler.htmlspanner.HtmlSpanner: android.text.Spanned fromTagNode(org.htmlcleaner.TagNode)>(r3);
        virtualinvoke r2.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: void addCell(android.text.Spanned)>(r4);
        return;

     label1:
        $r8 = virtualinvoke r3.<org.htmlcleaner.TagNode: java.lang.String getName()>();
        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("tr");
        if $z2 == 0 goto label2;

        virtualinvoke r2.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: void addRow()>();

     label2:
        $r9 = virtualinvoke r3.<org.htmlcleaner.TagNode: java.util.List getChildren()>();
        r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label4;

        r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: void readNode(java.lang.Object,net.nightwhistler.htmlspanner.handlers.TableHandler$Table)>(r5, r2);
        goto label3;

     label4:
        return;
    }

    private net.nightwhistler.htmlspanner.handlers.TableHandler$Table getTable(org.htmlcleaner.TagNode)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        org.htmlcleaner.TagNode r1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table $r2, r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        $r2 = new net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        specialinvoke $r2.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler,net.nightwhistler.htmlspanner.handlers.TableHandler$1)>(r0, null);
        r3 = $r2;
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: void readNode(java.lang.Object,net.nightwhistler.htmlspanner.handlers.TableHandler$Table)>(r1, r3);
        return r3;
    }

    private android.text.TextPaint getTextPaint()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        android.text.TextPaint $r1, r2;
        int $i0;
        float $f0;
        android.graphics.Typeface $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        $r1 = new android.text.TextPaint;
        specialinvoke $r1.<android.text.TextPaint: void <init>()>();
        r2 = $r1;
        $i0 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor>;
        virtualinvoke r2.<android.text.TextPaint: void setColor(int)>($i0);
        virtualinvoke r2.<android.text.TextPaint: void setAntiAlias(boolean)>(1);
        $f0 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: float textSize>;
        virtualinvoke r2.<android.text.TextPaint: void setTextSize(float)>($f0);
        $r3 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.graphics.Typeface typeFace>;
        virtualinvoke r2.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r3);
        return r2;
    }

    private int calculateRowHeight(java.util.List)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        java.util.List r1;
        android.text.TextPaint r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Iterator r3;
        android.text.Spanned r4;
        android.text.StaticLayout r5, $r7;
        boolean $z0;
        java.lang.Object $r6;
        android.text.Layout$Alignment $r8;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: java.util.List;
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();
        if $i2 != 0 goto label0;

        return 0;

     label0:
        r2 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.text.TextPaint getTextPaint()>();
        $i3 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth>;
        $i4 = interfaceinvoke r1.<java.util.List: int size()>();
        i0 = $i3 / $i4;
        i1 = 0;
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (android.text.Spanned) $r6;
        $r7 = new android.text.StaticLayout;
        $i5 = i0 - 10;
        $r8 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;
        specialinvoke $r7.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r4, r2, $i5, $r8, 1.0F, 0.0F, 1);
        r5 = $r7;
        $i6 = virtualinvoke r5.<android.text.StaticLayout: int getHeight()>();
        if $i6 <= i1 goto label2;

        i1 = virtualinvoke r5.<android.text.StaticLayout: int getHeight()>();

     label2:
        goto label1;

     label3:
        return i1;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r3;
        java.util.List r4, $r6, $r7;
        net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable r5, $r10;
        java.lang.Object $r8;
        android.text.style.ImageSpan $r11;
        net.nightwhistler.htmlspanner.handlers.TableHandler$1 $r12;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        r3 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: net.nightwhistler.htmlspanner.handlers.TableHandler$Table getTable(org.htmlcleaner.TagNode)>(r1);
        i2 = 0;

     label0:
        $r6 = virtualinvoke r3.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List getRows()>();
        $i3 = interfaceinvoke $r6.<java.util.List: int size()>();
        if i2 >= $i3 goto label1;

        $r7 = virtualinvoke r3.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List getRows()>();
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);
        r4 = (java.util.List) $r8;
        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\ufffc");
        $r10 = new net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable;
        specialinvoke $r10.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler,java.util.List)>(r0, r4);
        r5 = $r10;
        $i4 = virtualinvoke r5.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int getIntrinsicWidth()>();
        $i5 = virtualinvoke r5.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: int getIntrinsicHeight()>();
        virtualinvoke r5.<net.nightwhistler.htmlspanner.handlers.TableHandler$TableRowDrawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);
        $r11 = new android.text.style.ImageSpan;
        specialinvoke $r11.<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>(r5);
        $i6 = i0 + 1;
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r11, i0, $i6, 33);
        $r12 = new net.nightwhistler.htmlspanner.handlers.TableHandler$1;
        specialinvoke $r12.<net.nightwhistler.htmlspanner.handlers.TableHandler$1: void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler)>(r0);
        $i7 = i0 + 1;
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r12, i0, $i7, 33);
        i0 = i0 + 1;
        i2 = i2 + 1;
        goto label0;

     label1:
        return;
    }

    static int access$100(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        int $i0;

        r0 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        $i0 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int textColor>;
        return $i0;
    }

    static int access$200(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        int $i0;

        r0 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        $i0 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int tableWidth>;
        return $i0;
    }

    static int access$300(net.nightwhistler.htmlspanner.handlers.TableHandler, java.util.List)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        java.util.List r1;
        int $i0;

        r0 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r1 := @parameter1: java.util.List;
        $i0 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: int calculateRowHeight(java.util.List)>(r1);
        return $i0;
    }

    static android.text.TextPaint access$400(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler r0;
        android.text.TextPaint $r1;

        r0 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        $r1 = specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler: android.text.TextPaint getTextPaint()>();
        return $r1;
    }
}
class net.nightwhistler.htmlspanner.handlers.TableHandler$Table extends java.lang.Object
{
    private java.util.List content;
    final net.nightwhistler.htmlspanner.handlers.TableHandler this$0;

    private void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler r1;
        java.util.ArrayList $r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: net.nightwhistler.htmlspanner.handlers.TableHandler this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content> = $r2;
        return;
    }

    public void addRow()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        $r2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }

    public java.util.List getBottomRow()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        java.util.List $r1, $r2, $r4;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        $r1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        $r2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();
        $i1 = $i0 - 1;
        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);
        $r4 = (java.util.List) $r3;
        return $r4;
    }

    public java.util.List getRows()
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        java.util.List $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        $r1 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        return $r1;
    }

    public void addCell(android.text.Spanned)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        android.text.Spanned r1;
        java.util.List $r2, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        r1 := @parameter0: android.text.Spanned;
        $r2 = r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List content>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No rows added yet");
        throw $r3;

     label0:
        $r4 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: java.util.List getBottomRow()>();
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler, net.nightwhistler.htmlspanner.handlers.TableHandler$1)
    {
        net.nightwhistler.htmlspanner.handlers.TableHandler$Table r0;
        net.nightwhistler.htmlspanner.handlers.TableHandler r1;
        net.nightwhistler.htmlspanner.handlers.TableHandler$1 r2;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.TableHandler$Table;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.TableHandler;
        r2 := @parameter1: net.nightwhistler.htmlspanner.handlers.TableHandler$1;
        specialinvoke r0.<net.nightwhistler.htmlspanner.handlers.TableHandler$Table: void <init>(net.nightwhistler.htmlspanner.handlers.TableHandler)>(r1);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.HeaderHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{
    private float size;

    public void <init>(float)
    {
        net.nightwhistler.htmlspanner.handlers.HeaderHandler r0;
        float f0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        f0 := @parameter0: float;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: float size> = f0;
        return;
    }

    public void beforeChildren(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder)
    {
        net.nightwhistler.htmlspanner.handlers.HeaderHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        $i0 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        if $i0 <= 0 goto label0;

        $i1 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();
        $i2 = $i1 - 1;
        $c3 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>($i2);
        if $c3 == 10 goto label0;

        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");

     label0:
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.HeaderHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        android.text.style.RelativeSizeSpan $r3;
        net.nightwhistler.htmlspanner.spans.FontFamilySpan r4, $r5;
        float $f0;
        net.nightwhistler.htmlspanner.HtmlSpanner $r6;
        net.nightwhistler.htmlspanner.FontFamily $r7;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.HeaderHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new android.text.style.RelativeSizeSpan;
        $f0 = r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: float size>;
        specialinvoke $r3.<android.text.style.RelativeSizeSpan: void <init>(float)>($f0);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        $r5 = new net.nightwhistler.htmlspanner.spans.FontFamilySpan;
        $r6 = virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: net.nightwhistler.htmlspanner.HtmlSpanner getSpanner()>();
        $r7 = virtualinvoke $r6.<net.nightwhistler.htmlspanner.HtmlSpanner: net.nightwhistler.htmlspanner.FontFamily getFontFamily()>();
        specialinvoke $r5.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void <init>(net.nightwhistler.htmlspanner.FontFamily)>($r7);
        r4 = $r5;
        virtualinvoke r4.<net.nightwhistler.htmlspanner.spans.FontFamilySpan: void setBold(boolean)>(1);
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r4, i0, i1, 33);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        virtualinvoke r0.<net.nightwhistler.htmlspanner.handlers.HeaderHandler: void appendNewLine(android.text.SpannableStringBuilder)>(r2);
        return;
    }
}
public class net.nightwhistler.htmlspanner.handlers.CenterHandler extends net.nightwhistler.htmlspanner.TagNodeHandler
{

    public void <init>()
    {
        net.nightwhistler.htmlspanner.handlers.CenterHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.CenterHandler;
        specialinvoke r0.<net.nightwhistler.htmlspanner.TagNodeHandler: void <init>()>();
        return;
    }

    public void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int)
    {
        net.nightwhistler.htmlspanner.handlers.CenterHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;
        int i0, i1;
        net.nightwhistler.htmlspanner.spans.CenterSpan $r3;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.CenterHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r3 = new net.nightwhistler.htmlspanner.spans.CenterSpan;
        specialinvoke $r3.<net.nightwhistler.htmlspanner.spans.CenterSpan: void <init>()>();
        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 33);
        return;
    }
}
class net.nightwhistler.htmlspanner.handlers.CenterHandler$1 extends java.lang.Object implements android.text.style.AlignmentSpan
{
    final net.nightwhistler.htmlspanner.handlers.CenterHandler this$0;

    void <init>(net.nightwhistler.htmlspanner.handlers.CenterHandler)
    {
        net.nightwhistler.htmlspanner.handlers.CenterHandler$1 r0;
        net.nightwhistler.htmlspanner.handlers.CenterHandler r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.CenterHandler$1;
        r1 := @parameter0: net.nightwhistler.htmlspanner.handlers.CenterHandler;
        r0.<net.nightwhistler.htmlspanner.handlers.CenterHandler$1: net.nightwhistler.htmlspanner.handlers.CenterHandler this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public android.text.Layout$Alignment getAlignment()
    {
        net.nightwhistler.htmlspanner.handlers.CenterHandler$1 r0;
        android.text.Layout$Alignment $r1;

        r0 := @this: net.nightwhistler.htmlspanner.handlers.CenterHandler$1;
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;
        return $r1;
    }
}
public class net.nightwhistler.htmlspanner.FontFamily extends java.lang.Object
{
    private android.graphics.Typeface defaultTypeface;
    private android.graphics.Typeface boldTypeface;
    private android.graphics.Typeface italicTypeface;
    private android.graphics.Typeface boldItalicTypeface;
    private java.lang.String name;

    public void <init>(java.lang.String, android.graphics.Typeface)
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        java.lang.String r1;
        android.graphics.Typeface r2;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: android.graphics.Typeface;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.nightwhistler.htmlspanner.FontFamily: java.lang.String name> = r1;
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface defaultTypeface> = r2;
        return;
    }

    public java.lang.String getName()
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        java.lang.String $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: java.lang.String name>;
        return $r1;
    }

    public void setBoldItalicTypeface(android.graphics.Typeface)
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: android.graphics.Typeface;
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldItalicTypeface> = r1;
        return;
    }

    public void setBoldTypeface(android.graphics.Typeface)
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: android.graphics.Typeface;
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldTypeface> = r1;
        return;
    }

    public void setDefaultTypeface(android.graphics.Typeface)
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: android.graphics.Typeface;
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface defaultTypeface> = r1;
        return;
    }

    public void setItalicTypeface(android.graphics.Typeface)
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        r1 := @parameter0: android.graphics.Typeface;
        r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface italicTypeface> = r1;
        return;
    }

    public android.graphics.Typeface getBoldItalicTypeface()
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldItalicTypeface>;
        return $r1;
    }

    public android.graphics.Typeface getBoldTypeface()
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldTypeface>;
        return $r1;
    }

    public android.graphics.Typeface getDefaultTypeface()
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface defaultTypeface>;
        return $r1;
    }

    public android.graphics.Typeface getItalicTypeface()
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface italicTypeface>;
        return $r1;
    }

    public boolean isFakeBold()
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;
        boolean $z0;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface boldTypeface>;
        if $r1 != null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isFakeItalic()
    {
        net.nightwhistler.htmlspanner.FontFamily r0;
        android.graphics.Typeface $r1;
        boolean $z0;

        r0 := @this: net.nightwhistler.htmlspanner.FontFamily;
        $r1 = r0.<net.nightwhistler.htmlspanner.FontFamily: android.graphics.Typeface italicTypeface>;
        if $r1 != null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }
}
public abstract class net.nightwhistler.htmlspanner.TagNodeHandler extends java.lang.Object
{
    private net.nightwhistler.htmlspanner.HtmlSpanner spanner;

    public void <init>()
    {
        net.nightwhistler.htmlspanner.TagNodeHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void setSpanner(net.nightwhistler.htmlspanner.HtmlSpanner)
    {
        net.nightwhistler.htmlspanner.TagNodeHandler r0;
        net.nightwhistler.htmlspanner.HtmlSpanner r1;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        r1 := @parameter0: net.nightwhistler.htmlspanner.HtmlSpanner;
        r0.<net.nightwhistler.htmlspanner.TagNodeHandler: net.nightwhistler.htmlspanner.HtmlSpanner spanner> = r1;
        return;
    }

    protected net.nightwhistler.htmlspanner.HtmlSpanner getSpanner()
    {
        net.nightwhistler.htmlspanner.TagNodeHandler r0;
        net.nightwhistler.htmlspanner.HtmlSpanner $r1;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        $r1 = r0.<net.nightwhistler.htmlspanner.TagNodeHandler: net.nightwhistler.htmlspanner.HtmlSpanner spanner>;
        return $r1;
    }

    public void beforeChildren(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder)
    {
        net.nightwhistler.htmlspanner.TagNodeHandler r0;
        org.htmlcleaner.TagNode r1;
        android.text.SpannableStringBuilder r2;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        r1 := @parameter0: org.htmlcleaner.TagNode;
        r2 := @parameter1: android.text.SpannableStringBuilder;
        return;
    }

    public boolean rendersContent()
    {
        net.nightwhistler.htmlspanner.TagNodeHandler r0;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        return 0;
    }

    public abstract void handleTagNode(org.htmlcleaner.TagNode, android.text.SpannableStringBuilder, int, int);

    protected void appendNewLine(android.text.SpannableStringBuilder)
    {
        net.nightwhistler.htmlspanner.TagNodeHandler r0;
        android.text.SpannableStringBuilder r1;
        int i0, $i1, $i3;
        net.nightwhistler.htmlspanner.HtmlSpanner $r2;
        boolean $z0;
        char $c2, $c4;

        r0 := @this: net.nightwhistler.htmlspanner.TagNodeHandler;
        r1 := @parameter0: android.text.SpannableStringBuilder;
        i0 = virtualinvoke r1.<android.text.SpannableStringBuilder: int length()>();
        $r2 = r0.<net.nightwhistler.htmlspanner.TagNodeHandler: net.nightwhistler.htmlspanner.HtmlSpanner spanner>;
        $z0 = virtualinvoke $r2.<net.nightwhistler.htmlspanner.HtmlSpanner: boolean isStripExtraWhiteSpace()>();
        if $z0 == 0 goto label0;

        if i0 <= 2 goto label0;

        $i1 = i0 - 1;
        $c2 = virtualinvoke r1.<android.text.SpannableStringBuilder: char charAt(int)>($i1);
        if $c2 != 10 goto label0;

        $i3 = i0 - 2;
        $c4 = virtualinvoke r1.<android.text.SpannableStringBuilder: char charAt(int)>($i3);
        if $c4 != 10 goto label0;

        return;

     label0:
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("\n");
        return;
    }
}
