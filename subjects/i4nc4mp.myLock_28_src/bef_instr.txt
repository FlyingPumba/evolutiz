class com.android.internal.telephony.ITelephony$Stub$Proxy extends java.lang.Object implements com.android.internal.telephony.ITelephony
{
    private android.os.IBinder mRemote;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(android.os.IBinder)
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        android.os.IBinder r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;
        r1 := @parameter0: android.os.IBinder;
        $r2 = <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote> = r1;
        r3[0] = 1;
        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;
        $r1 = <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;
        $r1 = <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r2[0] = 1;
        return "com.android.internal.telephony.ITelephony";
    }

    public boolean endCall() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Parcel r3, r4;
        boolean z0, $z2;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;
        int $i0;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;
        $r1 = <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");
        $r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, r4, 0);
        virtualinvoke r4.<android.os.Parcel: void readException()>();
        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();
        r2[0] = 1;
        if 0 == $i0 goto label2;

        $z2 = 1;
        r2[1] = 1;
        goto label3;

     label2:
        $z2 = 0;
        r2[2] = 1;

     label3:
        z0 = $z2;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();
        virtualinvoke r3.<android.os.Parcel: void recycle()>();
        r2[3] = 1;
        goto label8;

     label5:
        $r7 := @caughtexception;

     label6:
        r5 = $r7;

     label7:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();
        virtualinvoke r3.<android.os.Parcel: void recycle()>();
        r2[4] = 1;
        throw r5;

     label8:
        r2[5] = 1;
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void answerRingingCall() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;
        $r1 = <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");
        $r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, r4, 0);
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();
        virtualinvoke r3.<android.os.Parcel: void recycle()>();
        r2[0] = 1;
        goto label6;

     label3:
        $r7 := @caughtexception;

     label4:
        r5 = $r7;

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();
        virtualinvoke r3.<android.os.Parcel: void recycle()>();
        r2[1] = 1;
        throw r5;

     label6:
        r2[2] = 1;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void silenceRinger() throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub$Proxy r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub$Proxy;
        $r1 = <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.telephony.ITelephony");
        $r6 = r0.<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);
        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();
        virtualinvoke r3.<android.os.Parcel: void recycle()>();
        r2[0] = 1;
        goto label6;

     label3:
        $r7 := @caughtexception;

     label4:
        r5 = $r7;

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();
        virtualinvoke r3.<android.os.Parcel: void recycle()>();
        r2[1] = 1;
        throw r5;

     label6:
        r2[2] = 1;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRi()>();
        r1 = $r0[6];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[7][];
        <com.android.internal.telephony.ITelephony$Stub$Proxy: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/android/internal/telephony/ITelephony$Stub$Proxy", 8907083599439462977L);
        return $r0;
    }
}
public abstract class com.android.internal.telephony.ITelephony$Stub extends android.os.Binder implements com.android.internal.telephony.ITelephony
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_endCall;
    static final int TRANSACTION_answerRingingCall;
    static final int TRANSACTION_silenceRinger;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;
        $r1 = <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.os.Binder: void <init>()>();
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "com.android.internal.telephony.ITelephony");
        r2[0] = 1;
        return;
    }

    public static com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.IInterface r3;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r4;
        com.android.internal.telephony.ITelephony$Stub$Proxy $r5;

        r0 := @parameter0: android.os.IBinder;
        $r1 = <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        r3 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");
        r2[2] = 1;
        if r3 == null goto label2;

        $z0 = r3 instanceof com.android.internal.telephony.ITelephony;
        r2[3] = 1;
        if $z0 == 0 goto label2;

        $r4 = (com.android.internal.telephony.ITelephony) r3;
        r2[4] = 1;
        return $r4;

     label2:
        $r5 = new com.android.internal.telephony.ITelephony$Stub$Proxy;
        specialinvoke $r5.<com.android.internal.telephony.ITelephony$Stub$Proxy: void <init>(android.os.IBinder)>(r0);
        r2[5] = 1;
        return $r5;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;
        $r1 = <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r2[0] = 1;
        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.internal.telephony.ITelephony$Stub r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean z0, $z1;
        byte $b2;

        r0 := @this: com.android.internal.telephony.ITelephony$Stub;
        i0 := @parameter0: int;
        r1 := @parameter1: android.os.Parcel;
        r2 := @parameter2: android.os.Parcel;
        i1 := @parameter3: int;
        $r3 = <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        r4[0] = 1;
        lookupswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label6;
            case 1598968902: goto label1;
            default: goto label7;
        };

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("com.android.internal.telephony.ITelephony");
        r4[1] = 1;
        return 1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");
        z0 = virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: boolean endCall()>();
        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();
        r4[2] = 1;
        if z0 == 0 goto label3;

        $b2 = 1;
        r4[3] = 1;
        goto label4;

     label3:
        $b2 = 0;
        r4[4] = 1;

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b2);
        r4[5] = 1;
        return 1;

     label5:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void answerRingingCall()>();
        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();
        r4[6] = 1;
        return 1;

     label6:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("com.android.internal.telephony.ITelephony");
        virtualinvoke r0.<com.android.internal.telephony.ITelephony$Stub: void silenceRinger()>();
        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();
        r4[7] = 1;
        return 1;

     label7:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);
        r4[8] = 1;
        return $z1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.android.internal.telephony.ITelephony$Stub: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[9];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/android/internal/telephony/ITelephony$Stub", -6985616436006929114L);
        return $r0;
    }
}
public interface  com.android.internal.telephony.ITelephony extends java.lang.Object implements android.os.IInterface
{

    public abstract boolean endCall() throws android.os.RemoteException;

    public abstract void answerRingingCall() throws android.os.RemoteException;

    public abstract void silenceRinger() throws android.os.RemoteException;
}
class i4nc4mp.myLock.AutoDismiss$1 extends java.lang.Object implements android.content.SharedPreferences$OnSharedPreferenceChangeListener
{
    final i4nc4mp.myLock.AutoDismiss this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.AutoDismiss)
    {
        i4nc4mp.myLock.AutoDismiss$1 r0;
        i4nc4mp.myLock.AutoDismiss r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$1;
        r1 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        $r2 = <i4nc4mp.myLock.AutoDismiss$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.AutoDismiss$1: i4nc4mp.myLock.AutoDismiss this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)
    {
        i4nc4mp.myLock.AutoDismiss$1 r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, $r8, $r9, $r15, $r17;
        boolean[][] $r3;
        boolean[] r4;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z8, $z9;
        java.lang.StringBuilder $r5, $r6, $r7;
        i4nc4mp.myLock.AutoDismiss $r10, $r11, $r12, $r13, $r14, $r16, $r18;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$1;
        r1 := @parameter0: android.content.SharedPreferences;
        r2 := @parameter1: java.lang.String;
        $r3 = <i4nc4mp.myLock.AutoDismiss$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.AutoDismiss$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the changed key is ");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("pref change", $r8);
        $r9 = "FG";
        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        r4[0] = 1;
        if $z1 == 0 goto label2;

        z0 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>(r2, 0);
        r4[1] = 1;
        if z0 != 0 goto label1;

        $r10 = r0.<i4nc4mp.myLock.AutoDismiss$1: i4nc4mp.myLock.AutoDismiss this$0>;
        $z2 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$000(i4nc4mp.myLock.AutoDismiss)>($r10);
        r4[2] = 1;
        if $z2 == 0 goto label1;

        $r11 = r0.<i4nc4mp.myLock.AutoDismiss$1: i4nc4mp.myLock.AutoDismiss this$0>;
        virtualinvoke $r11.<i4nc4mp.myLock.AutoDismiss: void stopForeground(boolean)>(1);
        $r12 = r0.<i4nc4mp.myLock.AutoDismiss$1: i4nc4mp.myLock.AutoDismiss this$0>;
        staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$002(i4nc4mp.myLock.AutoDismiss,boolean)>($r12, 0);
        r4[3] = 1;
        goto label2;

     label1:
        r4[4] = 1;
        if z0 == 0 goto label2;

        $r13 = r0.<i4nc4mp.myLock.AutoDismiss$1: i4nc4mp.myLock.AutoDismiss this$0>;
        $z4 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$000(i4nc4mp.myLock.AutoDismiss)>($r13);
        r4[5] = 1;
        if $z4 != 0 goto label2;

        $r14 = r0.<i4nc4mp.myLock.AutoDismiss$1: i4nc4mp.myLock.AutoDismiss this$0>;
        virtualinvoke $r14.<i4nc4mp.myLock.AutoDismiss: void doFGstart()>();
        r4[6] = 1;

     label2:
        $r15 = "slideGuard";
        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        r4[7] = 1;
        if $z5 == 0 goto label3;

        $r16 = r0.<i4nc4mp.myLock.AutoDismiss$1: i4nc4mp.myLock.AutoDismiss this$0>;
        $z6 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>(r2, 0);
        staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$102(i4nc4mp.myLock.AutoDismiss,boolean)>($r16, $z6);
        r4[8] = 1;

     label3:
        $r17 = "oldmode";
        $z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        r4[9] = 1;
        if $z8 == 0 goto label4;

        $r18 = r0.<i4nc4mp.myLock.AutoDismiss$1: i4nc4mp.myLock.AutoDismiss this$0>;
        $z9 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>(r2, 0);
        staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$202(i4nc4mp.myLock.AutoDismiss,boolean)>($r18, $z9);
        r4[10] = 1;

     label4:
        r4[11] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.AutoDismiss$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.AutoDismiss$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[12];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/AutoDismiss$1", 1394748456561205913L);
        return $r0;
    }
}
class i4nc4mp.myLock.AutoDismiss$2 extends android.content.BroadcastReceiver
{
    final i4nc4mp.myLock.AutoDismiss this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.AutoDismiss)
    {
        i4nc4mp.myLock.AutoDismiss$2 r0;
        i4nc4mp.myLock.AutoDismiss r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$2;
        r1 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        $r2 = <i4nc4mp.myLock.AutoDismiss$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.AutoDismiss$2: i4nc4mp.myLock.AutoDismiss this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.AutoDismiss$2 r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r5;
        boolean $z0, $z1;
        i4nc4mp.myLock.AutoDismiss $r6, $r7;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$2;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.AutoDismiss$2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.AutoDismiss$2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("i4nc4mp.myLock.lifecycle.LOCKSCREEN_EXITED");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        $r6 = r0.<i4nc4mp.myLock.AutoDismiss$2: i4nc4mp.myLock.AutoDismiss this$0>;
        $z1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$300(i4nc4mp.myLock.AutoDismiss)>($r6);
        r4[2] = 1;
        if $z1 != 0 goto label2;

        $r7 = r0.<i4nc4mp.myLock.AutoDismiss$2: i4nc4mp.myLock.AutoDismiss this$0>;
        staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$402(i4nc4mp.myLock.AutoDismiss,boolean)>($r7, 1);
        staticinvoke <i4nc4mp.myLock.ManageWakeLock: void releaseFull()>();
        r4[3] = 1;
        goto label3;

     label2:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dismiss callback", "waiting for 5 sec to finalize due to slide wake");
        r4[4] = 1;

     label3:
        r4[5] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.AutoDismiss$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.AutoDismiss$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/AutoDismiss$2", 4042075736575642888L);
        return $r0;
    }
}
class i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1 extends android.content.BroadcastReceiver
{
    public static final java.lang.String present;
    final i4nc4mp.myLock.AutoDismiss$AutoDismissActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.AutoDismiss$AutoDismissActivity)
    {
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1 r0;
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1;
        r1 := @parameter0: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity;
        $r2 = <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1 r0;
        android.content.Context r1, $r11;
        android.content.Intent r2, r5, $r9;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r6;
        boolean $z0, $z1;
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity $r7, $r8, $r10, $r12, $r13, $r14;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.USER_PRESENT");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        $r7 = r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity this$0>;
        $z1 = $r7.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean done>;
        r4[2] = 1;
        if $z1 != 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dismiss user present", "sending to back");
        $r8 = r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity this$0>;
        $r8.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean done> = 1;
        $r9 = new android.content.Intent;
        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("i4nc4mp.myLock.lifecycle.LOCKSCREEN_EXITED");
        r5 = $r9;
        $r10 = r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity this$0>;
        $r11 = virtualinvoke $r10.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: android.content.Context getApplicationContext()>();
        virtualinvoke $r11.<android.content.Context: void sendBroadcast(android.content.Intent)>(r5);
        $r12 = r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity this$0>;
        virtualinvoke $r12.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean moveTaskToBack(boolean)>(1);
        $r13 = r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity this$0>;
        virtualinvoke $r13.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: void finish()>();
        $r14 = r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity this$0>;
        virtualinvoke $r14.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: void overridePendingTransition(int,int)>(0, 0);
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/AutoDismiss$AutoDismissActivity$1", 4589297870668258362L);
        return $r0;
    }
}
public class i4nc4mp.myLock.AutoDismiss$AutoDismissActivity extends android.app.Activity
{
    public boolean done;
    android.content.BroadcastReceiver unlockdone;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1 $r3;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity;
        $r1 = <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean done> = 0;
        $r3 = new i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1;
        specialinvoke $r3.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity$1: void <init>(i4nc4mp.myLock.AutoDismiss$AutoDismissActivity)>(r0);
        r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: android.content.BroadcastReceiver unlockdone> = $r3;
        r2[0] = 1;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.IntentFilter r4, $r6;
        android.view.Window $r5;
        android.content.BroadcastReceiver $r7;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean requestWindowFeature(int)>(1);
        $r5 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: android.view.Window getWindow()>();
        virtualinvoke $r5.<android.view.Window: void addFlags(int)>(6291584);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dismiss", "creating dismiss window");
        specialinvoke r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: void updateLayout()>();
        $r6 = new android.content.IntentFilter;
        specialinvoke $r6.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_PRESENT");
        r4 = $r6;
        $r7 = r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: android.content.BroadcastReceiver unlockdone>;
        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r7, r4);
        r3[0] = 1;
        return;
    }

    protected android.view.View inflateView(android.view.LayoutInflater)
    {
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity r0;
        android.view.LayoutInflater r1;
        boolean[][] $r2;
        boolean[] r3;
        android.view.View $r4;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity;
        r1 := @parameter0: android.view.LayoutInflater;
        $r2 = <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130903043, null);
        r3[0] = 1;
        return $r4;
    }

    private void updateLayout()
    {
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.view.LayoutInflater r3;
        android.view.View $r4;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity;
        $r1 = <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r0);
        $r4 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: android.view.View inflateView(android.view.LayoutInflater)>(r3);
        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: void setContentView(android.view.View)>($r4);
        r2[0] = 1;
        return;
    }

    public void onDestroy()
    {
        i4nc4mp.myLock.AutoDismiss$AutoDismissActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.BroadcastReceiver $r3;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$AutoDismissActivity;
        $r1 = <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        specialinvoke r0.<android.app.Activity: void onDestroy()>();
        $r3 = r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: android.content.BroadcastReceiver unlockdone>;
        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("destroy_dismiss", "Destroying");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <i4nc4mp.myLock.AutoDismiss$AutoDismissActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/AutoDismiss$AutoDismissActivity", -2187181317243806574L);
        return $r0;
    }
}
class i4nc4mp.myLock.AutoDismiss$Task$1 extends java.lang.Object implements i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit
{
    final i4nc4mp.myLock.AutoDismiss$Task this$1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.AutoDismiss$Task)
    {
        i4nc4mp.myLock.AutoDismiss$Task$1 r0;
        i4nc4mp.myLock.AutoDismiss$Task r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$Task$1;
        r1 := @parameter0: i4nc4mp.myLock.AutoDismiss$Task;
        $r2 = <i4nc4mp.myLock.AutoDismiss$Task$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss$Task$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.AutoDismiss$Task$1: i4nc4mp.myLock.AutoDismiss$Task this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void LaunchOnKeyguardExitSuccess()
    {
        i4nc4mp.myLock.AutoDismiss$Task$1 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$Task$1;
        $r1 = <i4nc4mp.myLock.AutoDismiss$Task$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss$Task$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("start", "This is the exit callback");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.AutoDismiss$Task$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.AutoDismiss$Task$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/AutoDismiss$Task$1", 4320153509232217768L);
        return $r0;
    }
}
class i4nc4mp.myLock.AutoDismiss$Task extends java.lang.Object implements java.lang.Runnable
{
    final i4nc4mp.myLock.AutoDismiss this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.AutoDismiss)
    {
        i4nc4mp.myLock.AutoDismiss$Task r0;
        i4nc4mp.myLock.AutoDismiss r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$Task;
        r1 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        $r2 = <i4nc4mp.myLock.AutoDismiss$Task: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss$Task: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.AutoDismiss$Task: i4nc4mp.myLock.AutoDismiss this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        i4nc4mp.myLock.AutoDismiss$Task r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.AutoDismiss $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z3;
        i4nc4mp.myLock.AutoDismiss$Task$1 $r7;

        r0 := @this: i4nc4mp.myLock.AutoDismiss$Task;
        $r1 = <i4nc4mp.myLock.AutoDismiss$Task: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss$Task: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<i4nc4mp.myLock.AutoDismiss$Task: i4nc4mp.myLock.AutoDismiss this$0>;
        $z0 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$200(i4nc4mp.myLock.AutoDismiss)>($r3);
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r4 = r0.<i4nc4mp.myLock.AutoDismiss$Task: i4nc4mp.myLock.AutoDismiss this$0>;
        $z1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$400(i4nc4mp.myLock.AutoDismiss)>($r4);
        r2[1] = 1;
        if $z1 != 0 goto label1;

        staticinvoke <i4nc4mp.myLock.ManageWakeLock: void releaseFull()>();
        $r5 = r0.<i4nc4mp.myLock.AutoDismiss$Task: i4nc4mp.myLock.AutoDismiss this$0>;
        staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$402(i4nc4mp.myLock.AutoDismiss,boolean)>($r5, 1);
        r2[2] = 1;

     label1:
        $r6 = r0.<i4nc4mp.myLock.AutoDismiss$Task: i4nc4mp.myLock.AutoDismiss this$0>;
        $z3 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean access$200(i4nc4mp.myLock.AutoDismiss)>($r6);
        r2[3] = 1;
        if $z3 == 0 goto label2;

        $r7 = new i4nc4mp.myLock.AutoDismiss$Task$1;
        specialinvoke $r7.<i4nc4mp.myLock.AutoDismiss$Task$1: void <init>(i4nc4mp.myLock.AutoDismiss$Task)>(r0);
        staticinvoke <i4nc4mp.myLock.ManageKeyguard: void exitKeyguardSecurely(i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit)>($r7);
        r2[4] = 1;

     label2:
        r2[5] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.AutoDismiss$Task: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.AutoDismiss$Task: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/AutoDismiss$Task", -4752125001323505176L);
        return $r0;
    }
}
public class i4nc4mp.myLock.AutoDismiss extends i4nc4mp.myLock.MediatorService
{
    private boolean persistent;
    private boolean oldmode;
    private boolean slideGuarded;
    private boolean slideWakeup;
    private boolean dismissed;
    private boolean callmissed;
    android.os.Handler serviceHandler;
    i4nc4mp.myLock.AutoDismiss$Task myTask;
    android.content.SharedPreferences$OnSharedPreferenceChangeListener prefslisten;
    android.content.BroadcastReceiver lockStopped;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.AutoDismiss$Task $r3;
        i4nc4mp.myLock.AutoDismiss$1 $r4;
        i4nc4mp.myLock.AutoDismiss$2 $r5;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<i4nc4mp.myLock.MediatorService: void <init>()>();
        r0.<i4nc4mp.myLock.AutoDismiss: boolean persistent> = 0;
        r0.<i4nc4mp.myLock.AutoDismiss: boolean oldmode> = 0;
        r0.<i4nc4mp.myLock.AutoDismiss: boolean slideGuarded> = 0;
        r0.<i4nc4mp.myLock.AutoDismiss: boolean slideWakeup> = 0;
        r0.<i4nc4mp.myLock.AutoDismiss: boolean dismissed> = 0;
        r0.<i4nc4mp.myLock.AutoDismiss: boolean callmissed> = 0;
        $r3 = new i4nc4mp.myLock.AutoDismiss$Task;
        specialinvoke $r3.<i4nc4mp.myLock.AutoDismiss$Task: void <init>(i4nc4mp.myLock.AutoDismiss)>(r0);
        r0.<i4nc4mp.myLock.AutoDismiss: i4nc4mp.myLock.AutoDismiss$Task myTask> = $r3;
        $r4 = new i4nc4mp.myLock.AutoDismiss$1;
        specialinvoke $r4.<i4nc4mp.myLock.AutoDismiss$1: void <init>(i4nc4mp.myLock.AutoDismiss)>(r0);
        r0.<i4nc4mp.myLock.AutoDismiss: android.content.SharedPreferences$OnSharedPreferenceChangeListener prefslisten> = $r4;
        $r5 = new i4nc4mp.myLock.AutoDismiss$2;
        specialinvoke $r5.<i4nc4mp.myLock.AutoDismiss$2: void <init>(i4nc4mp.myLock.AutoDismiss)>(r0);
        r0.<i4nc4mp.myLock.AutoDismiss: android.content.BroadcastReceiver lockStopped> = $r5;
        r2[0] = 1;
        return;
    }

    public void onDestroy()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.BroadcastReceiver $r4;
        android.content.SharedPreferences$OnSharedPreferenceChangeListener $r5;
        android.os.Handler $r6;
        i4nc4mp.myLock.AutoDismiss$Task $r7;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<i4nc4mp.myLock.MediatorService: void onDestroy()>();
        r3 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        $r4 = r0.<i4nc4mp.myLock.AutoDismiss: android.content.BroadcastReceiver lockStopped>;
        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: void unregisterReceiver(android.content.BroadcastReceiver)>($r4);
        $r5 = r0.<i4nc4mp.myLock.AutoDismiss: android.content.SharedPreferences$OnSharedPreferenceChangeListener prefslisten>;
        interfaceinvoke r3.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>($r5);
        $r6 = r0.<i4nc4mp.myLock.AutoDismiss: android.os.Handler serviceHandler>;
        $r7 = r0.<i4nc4mp.myLock.AutoDismiss: i4nc4mp.myLock.AutoDismiss$Task myTask>;
        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r7);
        r0.<i4nc4mp.myLock.AutoDismiss: android.os.Handler serviceHandler> = null;
        r2[0] = 1;
        return;
    }

    public void onCreate()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences $r3;
        boolean $z0;
        android.content.Context $r4, $r5;
        android.widget.Toast $r6;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<i4nc4mp.myLock.MediatorService: void onCreate()>();
        $r3 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("startingUp", 0);
        r2[0] = 1;
        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("system restart", "apparent low mem system restart, toggling back on");
        $r4 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageMediator: void updateEnablePref(boolean,android.content.Context)>(1, $r4);
        $r5 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageMediator: void startService(android.content.Context)>($r5);
        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, "myLock restarted after system low mem shutdown", 0);
        virtualinvoke $r6.<android.widget.Toast: void show()>();
        r2[1] = 1;
        goto label2;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("normal oncreate", "commencing first start call");
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return;
    }

    public void onFirstStart()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor r4;
        android.content.IntentFilter r5, $r8;
        boolean $z0, $z1, $z2, $z3;
        android.content.SharedPreferences$OnSharedPreferenceChangeListener $r6;
        android.os.Handler $r7;
        android.content.BroadcastReceiver $r9;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $z0 = interfaceinvoke r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("FG", 0);
        r0.<i4nc4mp.myLock.AutoDismiss: boolean persistent> = $z0;
        $z1 = interfaceinvoke r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("slideGuard", 0);
        r0.<i4nc4mp.myLock.AutoDismiss: boolean slideGuarded> = $z1;
        $z2 = interfaceinvoke r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("oldmode", 0);
        r0.<i4nc4mp.myLock.AutoDismiss: boolean oldmode> = $z2;
        $z3 = r0.<i4nc4mp.myLock.AutoDismiss: boolean persistent>;
        r2[0] = 1;
        if $z3 == 0 goto label1;

        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: void doFGstart()>();
        r2[1] = 1;

     label1:
        $r6 = r0.<i4nc4mp.myLock.AutoDismiss: android.content.SharedPreferences$OnSharedPreferenceChangeListener prefslisten>;
        interfaceinvoke r3.<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>($r6);
        $r7 = new android.os.Handler;
        specialinvoke $r7.<android.os.Handler: void <init>()>();
        r0.<i4nc4mp.myLock.AutoDismiss: android.os.Handler serviceHandler> = $r7;
        $r8 = new android.content.IntentFilter;
        specialinvoke $r8.<android.content.IntentFilter: void <init>(java.lang.String)>("i4nc4mp.myLock.lifecycle.LOCKSCREEN_EXITED");
        r5 = $r8;
        $r9 = r0.<i4nc4mp.myLock.AutoDismiss: android.content.BroadcastReceiver lockStopped>;
        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, r5);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("startingUp", 0);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        r2[2] = 1;
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        android.content.res.Configuration r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        r1 := @parameter0: android.content.res.Configuration;
        $r2 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        specialinvoke r0.<i4nc4mp.myLock.MediatorService: void onConfigurationChanged(android.content.res.Configuration)>(r1);
        $i0 = r1.<android.content.res.Configuration: int hardKeyboardHidden>;
        r3[0] = 1;
        if $i0 != 1 goto label2;

        $z0 = r0.<i4nc4mp.myLock.AutoDismiss: boolean dismissed>;
        r3[1] = 1;
        if $z0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting state flag, screen state is ");
        $z1 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: boolean isScreenOn()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("slider wake event", $r7);
        r0.<i4nc4mp.myLock.AutoDismiss: boolean slideWakeup> = 1;
        r3[2] = 1;
        goto label3;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("slider event", "Ignoring since already dismissed");
        r3[3] = 1;
        goto label3;

     label2:
        $i3 = r1.<android.content.res.Configuration: int hardKeyboardHidden>;
        r3[4] = 1;
        if $i3 != 2 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("slide closed", "mediator got the config change from background");
        r3[5] = 1;

     label3:
        r3[6] = 1;
        return;
    }

    public boolean isScreenOn()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.PowerManager r3;
        java.lang.String $r4;
        int $i0;
        boolean $z0, $z1;
        android.content.Context $r5;
        java.lang.Object $r6;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r4 = <android.os.Build$VERSION: java.lang.String SDK>;
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
        r2[0] = 1;
        if $i0 >= 7 goto label1;

        $z0 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: boolean IsAwake()>();
        r2[1] = 1;
        return $z0;

     label1:
        $r5 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");
        r3 = (android.os.PowerManager) $r6;
        $z1 = virtualinvoke r3.<android.os.PowerManager: boolean isScreenOn()>();
        r2[2] = 1;
        return $z1;
    }

    public void onScreenWakeup()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.content.Context $r3, $r4, $r5;
        android.os.Handler $r6;
        i4nc4mp.myLock.AutoDismiss$Task $r7;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $z1 = r0.<i4nc4mp.myLock.AutoDismiss: boolean receivingcall>;
        r2[0] = 1;
        if $z1 != 0 goto label1;

        $z2 = r0.<i4nc4mp.myLock.AutoDismiss: boolean placingcall>;
        r2[1] = 1;
        if $z2 != 0 goto label1;

        $z3 = r0.<i4nc4mp.myLock.AutoDismiss: boolean callmissed>;
        r2[2] = 1;
        if $z3 == 0 goto label3;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("auto dismiss service", "aborting screen wake handling due to call state");
        $z4 = r0.<i4nc4mp.myLock.AutoDismiss: boolean callmissed>;
        r2[3] = 1;
        if $z4 == 0 goto label2;

        r0.<i4nc4mp.myLock.AutoDismiss: boolean callmissed> = 0;
        r2[4] = 1;

     label2:
        r2[5] = 1;
        return;

     label3:
        $z5 = r0.<i4nc4mp.myLock.AutoDismiss: boolean slideGuarded>;
        r2[6] = 1;
        if $z5 == 0 goto label4;

        $z6 = r0.<i4nc4mp.myLock.AutoDismiss: boolean slideWakeup>;
        r2[7] = 1;
        if $z6 == 0 goto label4;

        r2[8] = 1;
        return;

     label4:
        $r3 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageKeyguard: void initialize(android.content.Context)>($r3);
        z0 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean inKeyguardRestrictedInputMode()>();
        r2[9] = 1;
        if z0 == 0 goto label6;

        $z7 = r0.<i4nc4mp.myLock.AutoDismiss: boolean oldmode>;
        r2[10] = 1;
        if $z7 != 0 goto label5;

        $r4 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: void StartDismiss(android.content.Context)>($r4);
        r2[11] = 1;
        goto label6;

     label5:
        $r5 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageKeyguard: void disableKeyguard(android.content.Context)>($r5);
        $r6 = r0.<i4nc4mp.myLock.AutoDismiss: android.os.Handler serviceHandler>;
        $r7 = r0.<i4nc4mp.myLock.AutoDismiss: i4nc4mp.myLock.AutoDismiss$Task myTask>;
        virtualinvoke $r6.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, 50L);
        r2[12] = 1;

     label6:
        r2[13] = 1;
        return;
    }

    public void onScreenSleep()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r0.<i4nc4mp.myLock.AutoDismiss: boolean dismissed> = 0;
        r0.<i4nc4mp.myLock.AutoDismiss: boolean callmissed> = 0;
        $z0 = r0.<i4nc4mp.myLock.AutoDismiss: boolean slideWakeup>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("back to sleep", "turning off slideWakeup");
        r0.<i4nc4mp.myLock.AutoDismiss: boolean slideWakeup> = 0;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public void StartDismiss(android.content.Context)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        android.content.Context r1, $r6;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Class r4;
        android.content.Intent r5, $r9;
        boolean $z0;
        android.os.Handler $r7;
        i4nc4mp.myLock.AutoDismiss$Task $r8;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        r1 := @parameter0: android.content.Context;
        $r2 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        $r6 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageWakeLock: void acquireFull(android.content.Context)>($r6);
        $z0 = r0.<i4nc4mp.myLock.AutoDismiss: boolean slideWakeup>;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r7 = r0.<i4nc4mp.myLock.AutoDismiss: android.os.Handler serviceHandler>;
        $r8 = r0.<i4nc4mp.myLock.AutoDismiss: i4nc4mp.myLock.AutoDismiss$Task myTask>;
        virtualinvoke $r7.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r8, 5000L);
        r3[1] = 1;

     label1:
        r4 = class "i4nc4mp/myLock/AutoDismiss$AutoDismissActivity";
        $r9 = new android.content.Intent;
        specialinvoke $r9.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, r4);
        r5 = $r9;
        virtualinvoke r5.<android.content.Intent: android.content.Intent setFlags(int)>(1342504960);
        virtualinvoke r1.<android.content.Context: void startActivity(android.content.Intent)>(r5);
        r3[2] = 1;
        return;
    }

    public void onCallEnd()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Context r3;
        boolean z0;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r3 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("call end", "checking if we need to exit KG");
        staticinvoke <i4nc4mp.myLock.ManageKeyguard: void initialize(android.content.Context)>(r3);
        z0 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean inKeyguardRestrictedInputMode()>();
        r2[0] = 1;
        if z0 == 0 goto label1;

        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: void StartDismiss(android.content.Context)>(r3);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public void onCallMiss()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        r0.<i4nc4mp.myLock.AutoDismiss: boolean callmissed> = 1;
        r2[0] = 1;
        return;
    }

    void doFGstart()
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0;
        java.lang.String r3, r6, r7;
        long l1;
        android.app.Notification r4, $r10;
        android.content.Context r5;
        android.content.Intent r8, $r11;
        android.app.PendingIntent r9;
        boolean z0;

        r0 := @this: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        i0 = 2130837504;
        r3 = "myLock is starting up";
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r10 = new android.app.Notification;
        specialinvoke $r10.<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>(i0, r3, l1);
        r4 = $r10;
        r5 = virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: android.content.Context getApplicationContext()>();
        r6 = "quick unlock mode active";
        r7 = "click to open settings";
        $r11 = new android.content.Intent;
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "i4nc4mp/myLock/MainPreferenceActivity");
        r8 = $r11;
        r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, r8, 0);
        virtualinvoke r4.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>(r5, r6, r7, r9);
        z0 = 1;
        r0.<i4nc4mp.myLock.AutoDismiss: boolean persistent> = 1;
        virtualinvoke r0.<i4nc4mp.myLock.AutoDismiss: void startForeground(int,android.app.Notification)>(1, r4);
        r2[0] = 1;
        return;
    }

    static boolean access$000(i4nc4mp.myLock.AutoDismiss)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $z0 = r0.<i4nc4mp.myLock.AutoDismiss: boolean persistent>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$002(i4nc4mp.myLock.AutoDismiss, boolean)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        r0.<i4nc4mp.myLock.AutoDismiss: boolean persistent> = z0;
        r2[0] = 1;
        return z0;
    }

    static boolean access$102(i4nc4mp.myLock.AutoDismiss, boolean)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        r0.<i4nc4mp.myLock.AutoDismiss: boolean slideGuarded> = z0;
        r2[0] = 1;
        return z0;
    }

    static boolean access$202(i4nc4mp.myLock.AutoDismiss, boolean)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        r0.<i4nc4mp.myLock.AutoDismiss: boolean oldmode> = z0;
        r2[0] = 1;
        return z0;
    }

    static boolean access$300(i4nc4mp.myLock.AutoDismiss)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $z0 = r0.<i4nc4mp.myLock.AutoDismiss: boolean slideWakeup>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$402(i4nc4mp.myLock.AutoDismiss, boolean)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        r0.<i4nc4mp.myLock.AutoDismiss: boolean dismissed> = z0;
        r2[0] = 1;
        return z0;
    }

    static boolean access$200(i4nc4mp.myLock.AutoDismiss)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $z0 = r0.<i4nc4mp.myLock.AutoDismiss: boolean oldmode>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$400(i4nc4mp.myLock.AutoDismiss)
    {
        i4nc4mp.myLock.AutoDismiss r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: i4nc4mp.myLock.AutoDismiss;
        $r1 = <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $z0 = r0.<i4nc4mp.myLock.AutoDismiss: boolean dismissed>;
        r2[0] = 1;
        return $z0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRi()>();
        r1 = $r0[20];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        $r0 = newmultiarray (boolean)[21][];
        <i4nc4mp.myLock.AutoDismiss: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[7];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[14];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[3];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/AutoDismiss", -8460593815259057967L);
        return $r0;
    }
}
public class i4nc4mp.myLock.BootHandler extends android.app.Service
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.BootHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.BootHandler;
        $r1 = <i4nc4mp.myLock.BootHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.BootHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Service: void <init>()>();
        r2[0] = 1;
        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        i4nc4mp.myLock.BootHandler r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.BootHandler;
        r1 := @parameter0: android.content.Intent;
        $r2 = <i4nc4mp.myLock.BootHandler: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.BootHandler: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return null;
    }

    public void onCreate()
    {
        i4nc4mp.myLock.BootHandler r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0;
        java.lang.String r3, r6, r7, $r11;
        long l1;
        android.app.Notification r4, $r12;
        android.content.Context r5;
        android.content.Intent r8, $r13;
        android.app.PendingIntent r9;
        boolean z0;
        java.lang.Class $r10;

        r0 := @this: i4nc4mp.myLock.BootHandler;
        $r1 = <i4nc4mp.myLock.BootHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.BootHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<android.app.Service: void onCreate()>();
        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, "BootHandler - setting foreground");
        i0 = 2130837504;
        r3 = "myLock";
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r12 = new android.app.Notification;
        specialinvoke $r12.<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>(i0, r3, l1);
        r4 = $r12;
        r5 = virtualinvoke r0.<i4nc4mp.myLock.BootHandler: android.content.Context getApplicationContext()>();
        r6 = "myLock";
        r7 = "initializing";
        $r13 = new android.content.Intent;
        specialinvoke $r13.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "i4nc4mp/myLock/MainPreferenceActivity");
        r8 = $r13;
        r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, r8, 0);
        virtualinvoke r4.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>(r5, r6, r7, r9);
        z0 = 1;
        virtualinvoke r0.<i4nc4mp.myLock.BootHandler: void startForeground(int,android.app.Notification)>(1, r4);
        r2[0] = 1;
        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        i4nc4mp.myLock.BootHandler r0;
        android.content.Intent r1, r5, $r6;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        boolean z0;

        r0 := @this: i4nc4mp.myLock.BootHandler;
        r1 := @parameter0: android.content.Intent;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <i4nc4mp.myLock.BootHandler: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.BootHandler: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r4 = virtualinvoke r0.<i4nc4mp.myLock.BootHandler: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        z0 = interfaceinvoke r4.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("enabled", 0);
        $r6 = new android.content.Intent;
        specialinvoke $r6.<android.content.Intent: void <init>()>();
        r5 = $r6;
        virtualinvoke r5.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("i4nc4mp.myLock", "i4nc4mp.myLock.Toggler");
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("i4nc4mp.myLock.TargetState", 1);
        r3[0] = 1;
        if z0 == 0 goto label1;

        virtualinvoke r0.<i4nc4mp.myLock.BootHandler: android.content.ComponentName startService(android.content.Intent)>(r5);
        r3[1] = 1;

     label1:
        virtualinvoke r0.<i4nc4mp.myLock.BootHandler: void stopForeground(boolean)>(1);
        virtualinvoke r0.<i4nc4mp.myLock.BootHandler: void stopSelf()>();
        r3[2] = 1;
        return 2;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.BootHandler: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <i4nc4mp.myLock.BootHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/BootHandler", -6729018453128807399L);
        return $r0;
    }
}
public final class i4nc4mp.myLock.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;

    public void <init>()
    {
        i4nc4mp.myLock.BuildConfig r0;

        r0 := @this: i4nc4mp.myLock.BuildConfig;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
class i4nc4mp.myLock.CallPrompt$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final i4nc4mp.myLock.CallPrompt this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.CallPrompt)
    {
        i4nc4mp.myLock.CallPrompt$1 r0;
        i4nc4mp.myLock.CallPrompt r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.CallPrompt$1;
        r1 := @parameter0: i4nc4mp.myLock.CallPrompt;
        $r2 = <i4nc4mp.myLock.CallPrompt$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.CallPrompt$1: i4nc4mp.myLock.CallPrompt this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        i4nc4mp.myLock.CallPrompt$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        i4nc4mp.myLock.CallPrompt $r4;

        r0 := @this: i4nc4mp.myLock.CallPrompt$1;
        r1 := @parameter0: android.view.View;
        $r2 = <i4nc4mp.myLock.CallPrompt$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<i4nc4mp.myLock.CallPrompt$1: i4nc4mp.myLock.CallPrompt this$0>;
        virtualinvoke $r4.<i4nc4mp.myLock.CallPrompt: void answer()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.CallPrompt$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.CallPrompt$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/CallPrompt$1", 4320153508954628847L);
        return $r0;
    }
}
class i4nc4mp.myLock.CallPrompt$2 extends java.lang.Object implements android.view.View$OnClickListener
{
    final i4nc4mp.myLock.CallPrompt this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.CallPrompt)
    {
        i4nc4mp.myLock.CallPrompt$2 r0;
        i4nc4mp.myLock.CallPrompt r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.CallPrompt$2;
        r1 := @parameter0: i4nc4mp.myLock.CallPrompt;
        $r2 = <i4nc4mp.myLock.CallPrompt$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.CallPrompt$2: i4nc4mp.myLock.CallPrompt this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        i4nc4mp.myLock.CallPrompt$2 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        i4nc4mp.myLock.CallPrompt $r4;

        r0 := @this: i4nc4mp.myLock.CallPrompt$2;
        r1 := @parameter0: android.view.View;
        $r2 = <i4nc4mp.myLock.CallPrompt$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<i4nc4mp.myLock.CallPrompt$2: i4nc4mp.myLock.CallPrompt this$0>;
        virtualinvoke $r4.<i4nc4mp.myLock.CallPrompt: void answer()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.CallPrompt$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.CallPrompt$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/CallPrompt$2", 4320153508954628847L);
        return $r0;
    }
}
class i4nc4mp.myLock.CallPrompt$3 extends java.lang.Object implements android.view.View$OnClickListener
{
    final i4nc4mp.myLock.CallPrompt this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.CallPrompt)
    {
        i4nc4mp.myLock.CallPrompt$3 r0;
        i4nc4mp.myLock.CallPrompt r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.CallPrompt$3;
        r1 := @parameter0: i4nc4mp.myLock.CallPrompt;
        $r2 = <i4nc4mp.myLock.CallPrompt$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.CallPrompt$3: i4nc4mp.myLock.CallPrompt this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        i4nc4mp.myLock.CallPrompt$3 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        i4nc4mp.myLock.CallPrompt $r4;

        r0 := @this: i4nc4mp.myLock.CallPrompt$3;
        r1 := @parameter0: android.view.View;
        $r2 = <i4nc4mp.myLock.CallPrompt$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<i4nc4mp.myLock.CallPrompt$3: i4nc4mp.myLock.CallPrompt this$0>;
        virtualinvoke $r4.<i4nc4mp.myLock.CallPrompt: void reject()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.CallPrompt$3: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.CallPrompt$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/CallPrompt$3", 4320153508954628847L);
        return $r0;
    }
}
class i4nc4mp.myLock.CallPrompt$4 extends android.content.BroadcastReceiver
{
    final i4nc4mp.myLock.CallPrompt this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.CallPrompt)
    {
        i4nc4mp.myLock.CallPrompt$4 r0;
        i4nc4mp.myLock.CallPrompt r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.CallPrompt$4;
        r1 := @parameter0: i4nc4mp.myLock.CallPrompt;
        $r2 = <i4nc4mp.myLock.CallPrompt$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.CallPrompt$4: i4nc4mp.myLock.CallPrompt this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.CallPrompt$4 r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        i4nc4mp.myLock.CallPrompt $r9, $r10, $r11, $r12;

        r0 := @this: i4nc4mp.myLock.CallPrompt$4;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.CallPrompt$4: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.CallPrompt$4: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PHONE_STATE");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("state");
        $r7 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_OFFHOOK>;
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        r4[2] = 1;
        if $z1 != 0 goto label2;

        $r8 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_IDLE>;
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        r4[3] = 1;
        if $z2 == 0 goto label3;

     label2:
        $r9 = r0.<i4nc4mp.myLock.CallPrompt$4: i4nc4mp.myLock.CallPrompt this$0>;
        $z3 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean access$000(i4nc4mp.myLock.CallPrompt)>($r9);
        r4[4] = 1;
        if $z3 != 0 goto label3;

        $r10 = r0.<i4nc4mp.myLock.CallPrompt$4: i4nc4mp.myLock.CallPrompt this$0>;
        $z4 = virtualinvoke $r10.<i4nc4mp.myLock.CallPrompt: boolean isFinishing()>();
        r4[5] = 1;
        if $z4 != 0 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("call start or return to idle", "no user input success - closing the prompt");
        $r11 = r0.<i4nc4mp.myLock.CallPrompt$4: i4nc4mp.myLock.CallPrompt this$0>;
        staticinvoke <i4nc4mp.myLock.CallPrompt: boolean access$002(i4nc4mp.myLock.CallPrompt,boolean)>($r11, 1);
        $r12 = r0.<i4nc4mp.myLock.CallPrompt$4: i4nc4mp.myLock.CallPrompt this$0>;
        virtualinvoke $r12.<i4nc4mp.myLock.CallPrompt: void finish()>();
        r4[6] = 1;

     label3:
        r4[7] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.CallPrompt$4: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.CallPrompt$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/CallPrompt$4", -4811291166302629949L);
        return $r0;
    }
}
public class i4nc4mp.myLock.CallPrompt extends android.app.Activity
{
    private boolean success;
    private android.telephony.TelephonyManager tm;
    private com.android.internal.telephony.ITelephony telephonyService;
    android.content.BroadcastReceiver PhoneState;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.CallPrompt$4 $r3;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r0.<i4nc4mp.myLock.CallPrompt: boolean success> = 0;
        $r3 = new i4nc4mp.myLock.CallPrompt$4;
        specialinvoke $r3.<i4nc4mp.myLock.CallPrompt$4: void <init>(i4nc4mp.myLock.CallPrompt)>(r0);
        r0.<i4nc4mp.myLock.CallPrompt: android.content.BroadcastReceiver PhoneState> = $r3;
        r2[0] = 1;
        return;
    }

    public static void launch(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Intent r3, $r4;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r4 = new android.content.Intent;
        specialinvoke $r4.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "i4nc4mp/myLock/CallPrompt");
        r3 = $r4;
        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(268697600);
        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r3);
        r2[0] = 1;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        i4nc4mp.myLock.CallPrompt r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.Button r4, r5, r13;
        java.lang.Object $r6;
        android.telephony.TelephonyManager $r7;
        android.content.SharedPreferences $r8, $r9;
        boolean $z0, $z1;
        android.view.View $r10, $r12, $r15;
        i4nc4mp.myLock.CallPrompt$1 $r11;
        i4nc4mp.myLock.CallPrompt$2 $r14;
        i4nc4mp.myLock.CallPrompt$3 $r16;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        $r6 = virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: java.lang.Object getSystemService(java.lang.String)>("phone");
        $r7 = (android.telephony.TelephonyManager) $r6;
        r0.<i4nc4mp.myLock.CallPrompt: android.telephony.TelephonyManager tm> = $r7;
        specialinvoke r0.<i4nc4mp.myLock.CallPrompt: void connectToTelephonyService()>();
        $r8 = virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        $z0 = interfaceinvoke $r8.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("callPrompt", 1);
        r3[0] = 1;
        if $z0 != 0 goto label1;

        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: void setContentView(int)>(2130903042);
        r3[1] = 1;
        goto label3;

     label1:
        $r9 = virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        $z1 = interfaceinvoke $r9.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("rejectEnabled", 0);
        r3[2] = 1;
        if $z1 != 0 goto label2;

        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: void setContentView(int)>(2130903040);
        $r10 = virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: android.view.View findViewById(int)>(2131230721);
        r4 = (android.widget.Button) $r10;
        $r11 = new i4nc4mp.myLock.CallPrompt$1;
        specialinvoke $r11.<i4nc4mp.myLock.CallPrompt$1: void <init>(i4nc4mp.myLock.CallPrompt)>(r0);
        virtualinvoke r4.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r11);
        r3[3] = 1;
        goto label3;

     label2:
        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: void setContentView(int)>(2130903045);
        $r12 = virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: android.view.View findViewById(int)>(2131230731);
        r13 = (android.widget.Button) $r12;
        $r14 = new i4nc4mp.myLock.CallPrompt$2;
        specialinvoke $r14.<i4nc4mp.myLock.CallPrompt$2: void <init>(i4nc4mp.myLock.CallPrompt)>(r0);
        virtualinvoke r13.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r14);
        $r15 = virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: android.view.View findViewById(int)>(2131230732);
        r5 = (android.widget.Button) $r15;
        $r16 = new i4nc4mp.myLock.CallPrompt$3;
        specialinvoke $r16.<i4nc4mp.myLock.CallPrompt$3: void <init>(i4nc4mp.myLock.CallPrompt)>(r0);
        virtualinvoke r5.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r16);
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        i4nc4mp.myLock.CallPrompt r0;
        android.view.MotionEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        r3[0] = 1;
        if $i0 != 2 goto label1;

        r3[1] = 1;
        return 1;

     label1:
        $z0 = specialinvoke r0.<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);
        r3[2] = 1;
        return $z0;
    }

    private void connectToTelephonyService()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Class r3, $r6;
        java.lang.reflect.Method r4;
        android.telephony.TelephonyManager $r5, $r9;
        java.lang.String $r7, $r18;
        java.lang.Class[] $r8;
        java.lang.Object[] $r10;
        java.lang.Object $r11;
        com.android.internal.telephony.ITelephony $r12;
        java.lang.Exception $r13, r14;
        java.lang.StringBuilder $r15, $r16, $r17;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];

     label1:
        $r5 = r0.<i4nc4mp.myLock.CallPrompt: android.telephony.TelephonyManager tm>;
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();
        r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r7);
        $r8 = newarray (java.lang.Class)[0];
        r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getITelephony", $r8);
        virtualinvoke r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
        $r9 = r0.<i4nc4mp.myLock.CallPrompt: android.telephony.TelephonyManager tm>;
        $r10 = newarray (java.lang.Object)[0];
        $r11 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, $r10);
        $r12 = (com.android.internal.telephony.ITelephony) $r11;
        r0.<i4nc4mp.myLock.CallPrompt: com.android.internal.telephony.ITelephony telephonyService> = $r12;
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;
        r14 = $r13;
        virtualinvoke r14.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("call prompt", "FATAL ERROR: could not connect to telephony subsystem");
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception object: ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("call prompt", $r18);
        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: void finish()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void answerCallAidl()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.RemoteException r3, $r6;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];

     label1:
        $r4 = r0.<i4nc4mp.myLock.CallPrompt: com.android.internal.telephony.ITelephony telephonyService>;
        interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: void silenceRinger()>();
        $r5 = r0.<i4nc4mp.myLock.CallPrompt: com.android.internal.telephony.ITelephony telephonyService>;
        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: void answerRingingCall()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        virtualinvoke r3.<android.os.RemoteException: void printStackTrace()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("call prompt", "FATAL ERROR: call to service method answerRiningCall failed.");
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception object: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("call prompt", $r10);
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void ignoreCallAidl()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.RemoteException r3, $r6;
        com.android.internal.telephony.ITelephony $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];

     label1:
        $r4 = r0.<i4nc4mp.myLock.CallPrompt: com.android.internal.telephony.ITelephony telephonyService>;
        interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: void silenceRinger()>();
        $r5 = r0.<i4nc4mp.myLock.CallPrompt: com.android.internal.telephony.ITelephony telephonyService>;
        interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: boolean endCall()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        virtualinvoke r3.<android.os.RemoteException: void printStackTrace()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("call prompt", "FATAL ERROR: call to service method endCall failed.");
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception object: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("call prompt", $r10);
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected void onDestroy()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.BroadcastReceiver $r3;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        specialinvoke r0.<android.app.Activity: void onDestroy()>();
        $r3 = r0.<i4nc4mp.myLock.CallPrompt: android.content.BroadcastReceiver PhoneState>;
        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);
        r2[0] = 1;
        return;
    }

    protected void onStart()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.IntentFilter r3, $r4;
        android.content.BroadcastReceiver $r5;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        specialinvoke r0.<android.app.Activity: void onStart()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("call prompt", "starting");
        $r4 = new android.content.IntentFilter;
        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.PHONE_STATE");
        r3 = $r4;
        $r5 = r0.<i4nc4mp.myLock.CallPrompt: android.content.BroadcastReceiver PhoneState>;
        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r5, r3);
        r2[0] = 1;
        return;
    }

    protected void onStop()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        android.content.Context $r3;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        specialinvoke r0.<android.app.Activity: void onStop()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("prompt onStop", "verifying success");
        $z0 = r0.<i4nc4mp.myLock.CallPrompt: boolean success>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.CallPrompt: void launch(android.content.Context)>($r3);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    void answer()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        r0.<i4nc4mp.myLock.CallPrompt: boolean success> = 1;
        specialinvoke r0.<i4nc4mp.myLock.CallPrompt: void answerCallAidl()>();
        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: boolean moveTaskToBack(boolean)>(1);
        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: void finish()>();
        r2[0] = 1;
        return;
    }

    void reject()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r0.<i4nc4mp.myLock.CallPrompt: boolean success> = 1;
        specialinvoke r0.<i4nc4mp.myLock.CallPrompt: void ignoreCallAidl()>();
        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: boolean moveTaskToBack(boolean)>(1);
        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: void finish()>();
        r2[0] = 1;
        return;
    }

    public void onBackPressed()
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        specialinvoke r0.<android.app.Activity: void onBackPressed()>();
        r0.<i4nc4mp.myLock.CallPrompt: boolean success> = 1;
        r2[0] = 1;
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        i4nc4mp.myLock.CallPrompt r0;
        android.view.KeyEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        android.content.SharedPreferences $r4;
        boolean $z0, $z1;

        r0 := @this: i4nc4mp.myLock.CallPrompt;
        r1 := @parameter0: android.view.KeyEvent;
        $r2 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();
        r3[0] = 1;
        lookupswitch($i0)
        {
            case 23: goto label2;
            case 27: goto label2;
            case 80: goto label1;
            default: goto label4;
        };

     label1:
        r3[1] = 1;
        return 1;

     label2:
        $r4 = virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        $z0 = interfaceinvoke $r4.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("cameraAccept", 0);
        r3[2] = 1;
        if $z0 == 0 goto label3;

        virtualinvoke r0.<i4nc4mp.myLock.CallPrompt: void answer()>();
        r3[3] = 1;

     label3:
        r3[4] = 1;
        return 1;

     label4:
        $z1 = specialinvoke r0.<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);
        r3[5] = 1;
        return $z1;
    }

    static boolean access$000(i4nc4mp.myLock.CallPrompt)
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: i4nc4mp.myLock.CallPrompt;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $z0 = r0.<i4nc4mp.myLock.CallPrompt: boolean success>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$002(i4nc4mp.myLock.CallPrompt, boolean)
    {
        i4nc4mp.myLock.CallPrompt r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: i4nc4mp.myLock.CallPrompt;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        r0.<i4nc4mp.myLock.CallPrompt: boolean success> = z0;
        r2[0] = 1;
        return z0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.CallPrompt: boolean[][] $VRi()>();
        r1 = $r0[16];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        $r0 = newmultiarray (boolean)[17][];
        <i4nc4mp.myLock.CallPrompt: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[6];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/CallPrompt", 1478364345717144312L);
        return $r0;
    }
}
public class i4nc4mp.myLock.DummyPrompt extends android.app.Activity
{
    private boolean done;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.DummyPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        $r1 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r0.<i4nc4mp.myLock.DummyPrompt: boolean done> = 0;
        r2[0] = 1;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        i4nc4mp.myLock.DummyPrompt r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dummy prompt", "on create");
        r3[0] = 1;
        return;
    }

    protected void onStart()
    {
        i4nc4mp.myLock.DummyPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        $r1 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<android.app.Activity: void onStart()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dummy prompt", "start");
        r2[0] = 1;
        return;
    }

    public void iAmDone()
    {
        i4nc4mp.myLock.DummyPrompt r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        android.content.Context $r3;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        $r1 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $z0 = r0.<i4nc4mp.myLock.DummyPrompt: boolean done>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        r0.<i4nc4mp.myLock.DummyPrompt: boolean done> = 1;
        $r3 = virtualinvoke r0.<i4nc4mp.myLock.DummyPrompt: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.CallPrompt: void launch(android.content.Context)>($r3);
        virtualinvoke r0.<i4nc4mp.myLock.DummyPrompt: boolean moveTaskToBack(boolean)>(1);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    protected void onPause()
    {
        i4nc4mp.myLock.DummyPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        $r1 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        specialinvoke r0.<android.app.Activity: void onPause()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dummy prompt", "pause");
        r2[0] = 1;
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        i4nc4mp.myLock.DummyPrompt r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        z0 := @parameter0: boolean;
        $r1 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        specialinvoke r0.<android.app.Activity: void onWindowFocusChanged(boolean)>(z0);
        r2[0] = 1;
        if z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dummy prompt", "gained focus");
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    protected void onResume()
    {
        i4nc4mp.myLock.DummyPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        $r1 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        specialinvoke r0.<android.app.Activity: void onResume()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dummy prompt", "resume");
        r2[0] = 1;
        return;
    }

    protected void onStop()
    {
        i4nc4mp.myLock.DummyPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        $r1 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        specialinvoke r0.<android.app.Activity: void onStop()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dummy prompt", "stop - launching real Prompt");
        virtualinvoke r0.<i4nc4mp.myLock.DummyPrompt: void iAmDone()>();
        r2[0] = 1;
        return;
    }

    protected void onDestroy()
    {
        i4nc4mp.myLock.DummyPrompt r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.DummyPrompt;
        $r1 = <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        specialinvoke r0.<android.app.Activity: void onDestroy()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("dummy prompt", "on destroy");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <i4nc4mp.myLock.DummyPrompt: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/DummyPrompt", -1620023608100179794L);
        return $r0;
    }
}
public class i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements i4nc4mp.myLock.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        r3[0] = 1;
        if r1 == null goto label1;

        $z0 = specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        r3[1] = 1;

     label1:
        $r11 = new android.content.Intent;
        $r12 = virtualinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "i4nc4mp/myLock/EmmaInstrument/InstrumentedActivity");
        r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        $r13 = r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        virtualinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void start()>();
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <android.os.Looper: void prepare()>();
        $r5 = r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        $r6 = virtualinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity) $r6;
        virtualinvoke r3.<i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: void setFinishListener(i4nc4mp.myLock.EmmaInstrument.FinishListener)>(r0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        $r3 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        r4[0] = 1;
        if r5 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        r4[1] = 1;
        if $z0 == 0 goto label1;

        $z1 = 1;
        r4[2] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return $z1;
    }

    private void generateCoverageReport()
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r6 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        $r8 = specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label1:
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[2] = $r12;
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        $r13[0] = r3;
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r13[1] = $r14;
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $r13[2] = $r15;
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        r2[0] = 1;

     label2:
        goto label9;

     label3:
        $r17 := @caughtexception;
        r18 = $r17;
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        r2[1] = 1;
        goto label9;

     label4:
        $r19 := @caughtexception;
        r20 = $r19;
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        r2[2] = 1;
        goto label9;

     label5:
        $r21 := @caughtexception;
        r22 = $r21;
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        r2[3] = 1;
        goto label9;

     label6:
        $r23 := @caughtexception;
        r24 = $r23;
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        r2[4] = 1;
        goto label9;

     label7:
        $r25 := @caughtexception;
        r26 = $r25;
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        r2[5] = 1;
        goto label9;

     label8:
        $r27 := @caughtexception;
        r28 = $r27;
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        r2[6] = 1;

     label9:
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
    }

    private java.lang.String getCoverageFilePath()
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[0] = 1;
        if $r3 != null goto label1;

        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

     label1:
        $r4 = r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if $i0 <= 0 goto label1;

        r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        r3[2] = 1;
        return 1;

     label1:
        r3[3] = 1;
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        $r2 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        $r3 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        $r10 = r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0 = r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        r2[1] = 1;

     label1:
        $r4 = r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        virtualinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r4 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0 = r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        r3[1] = 1;
        if $z1 != 0 goto label1;

        $r9 = <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        r3[2] = 1;

     label1:
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        specialinvoke r0.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1 = $r0[11];
        <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  i4nc4mp.myLock.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity)
    {
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity;
        $r2 = <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity $r10, $r18;
        i4nc4mp.myLock.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        int $i0;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r10 = r0.<i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity this$0>;
        $r11 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: i4nc4mp.myLock.EmmaInstrument.FinishListener access$000(i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity)>($r10);
        r4[0] = 1;
        if $r11 == null goto label2;

        r4[1] = 1;
        if r5 == null goto label2;

        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0 = lengthof r6;
        r4[2] = 1;
        if $i0 <= 0 goto label2;

        $r14 = r6[0];
        $r15 = (byte[]) $r14;
        $r16 = (byte[]) $r15;
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        r4[3] = 1;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        r4[4] = 1;
        if $z1 == 0 goto label2;

     label1:
        $r18 = r0.<i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity this$0>;
        $r19 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: i4nc4mp.myLock.EmmaInstrument.FinishListener access$000(i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity)>($r18);
        interfaceinvoke $r19.<i4nc4mp.myLock.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        r4[5] = 1;

     label2:
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity extends i4nc4mp.myLock.MainPreferenceActivity
{
    public static java.lang.String TAG;
    private i4nc4mp.myLock.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void setFinishListener(i4nc4mp.myLock.EmmaInstrument.FinishListener)
    {
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity r0;
        i4nc4mp.myLock.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: i4nc4mp.myLock.EmmaInstrument.FinishListener;
        $r2 = <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        i4nc4mp.myLock.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        specialinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: void finish()>();
        $r8 = r0.<i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: i4nc4mp.myLock.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        if $r8 == null goto label1;

        $r9 = r0.<i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: i4nc4mp.myLock.EmmaInstrument.FinishListener mListener>;
        interfaceinvoke $r9.<i4nc4mp.myLock.EmmaInstrument.FinishListener: void onActivityFinished()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    static i4nc4mp.myLock.EmmaInstrument.FinishListener access$000(i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity)
    {
        i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: i4nc4mp.myLock.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1 = $r0[4];
        <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <i4nc4mp.myLock.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver;
        $r1 = <i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation;
        specialinvoke $r7.<i4nc4mp.myLock.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        r4[0] = 1;
        if r6 == null goto label1;

        interfaceinvoke r6.<i4nc4mp.myLock.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1 = $r0[2];
        <i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
class i4nc4mp.myLock.IsActive$Stub$Proxy extends java.lang.Object implements i4nc4mp.myLock.IsActive
{
    private android.os.IBinder mRemote;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(android.os.IBinder)
    {
        i4nc4mp.myLock.IsActive$Stub$Proxy r0;
        android.os.IBinder r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.IsActive$Stub$Proxy;
        r1 := @parameter0: android.os.IBinder;
        $r2 = <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<i4nc4mp.myLock.IsActive$Stub$Proxy: android.os.IBinder mRemote> = r1;
        r3[0] = 1;
        return;
    }

    public android.os.IBinder asBinder()
    {
        i4nc4mp.myLock.IsActive$Stub$Proxy r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.IBinder $r3;

        r0 := @this: i4nc4mp.myLock.IsActive$Stub$Proxy;
        $r1 = <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<i4nc4mp.myLock.IsActive$Stub$Proxy: android.os.IBinder mRemote>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        i4nc4mp.myLock.IsActive$Stub$Proxy r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.IsActive$Stub$Proxy;
        $r1 = <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r2[0] = 1;
        return "i4nc4mp.myLock.IsActive";
    }

    public boolean Exists() throws android.os.RemoteException
    {
        i4nc4mp.myLock.IsActive$Stub$Proxy r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Parcel r3, r4;
        boolean z0, $z2;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;
        int $i0;

        r0 := @this: i4nc4mp.myLock.IsActive$Stub$Proxy;
        $r1 = <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("i4nc4mp.myLock.IsActive");
        $r6 = r0.<i4nc4mp.myLock.IsActive$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, r4, 0);
        virtualinvoke r4.<android.os.Parcel: void readException()>();
        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();
        r2[0] = 1;
        if 0 == $i0 goto label2;

        $z2 = 1;
        r2[1] = 1;
        goto label3;

     label2:
        $z2 = 0;
        r2[2] = 1;

     label3:
        z0 = $z2;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();
        virtualinvoke r3.<android.os.Parcel: void recycle()>();
        r2[3] = 1;
        goto label8;

     label5:
        $r7 := @caughtexception;

     label6:
        r5 = $r7;

     label7:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();
        virtualinvoke r3.<android.os.Parcel: void recycle()>();
        r2[4] = 1;
        throw r5;

     label8:
        r2[5] = 1;
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <i4nc4mp.myLock.IsActive$Stub$Proxy: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/IsActive$Stub$Proxy", 7736957591762653345L);
        return $r0;
    }
}
public abstract class i4nc4mp.myLock.IsActive$Stub extends android.os.Binder implements i4nc4mp.myLock.IsActive
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_Exists;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.IsActive$Stub r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.IsActive$Stub;
        $r1 = <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.os.Binder: void <init>()>();
        virtualinvoke r0.<i4nc4mp.myLock.IsActive$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "i4nc4mp.myLock.IsActive");
        r2[0] = 1;
        return;
    }

    public static i4nc4mp.myLock.IsActive asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.IInterface r3;
        boolean $z0;
        i4nc4mp.myLock.IsActive $r4;
        i4nc4mp.myLock.IsActive$Stub$Proxy $r5;

        r0 := @parameter0: android.os.IBinder;
        $r1 = <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        r3 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("i4nc4mp.myLock.IsActive");
        r2[2] = 1;
        if r3 == null goto label2;

        $z0 = r3 instanceof i4nc4mp.myLock.IsActive;
        r2[3] = 1;
        if $z0 == 0 goto label2;

        $r4 = (i4nc4mp.myLock.IsActive) r3;
        r2[4] = 1;
        return $r4;

     label2:
        $r5 = new i4nc4mp.myLock.IsActive$Stub$Proxy;
        specialinvoke $r5.<i4nc4mp.myLock.IsActive$Stub$Proxy: void <init>(android.os.IBinder)>(r0);
        r2[5] = 1;
        return $r5;
    }

    public android.os.IBinder asBinder()
    {
        i4nc4mp.myLock.IsActive$Stub r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.IsActive$Stub;
        $r1 = <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r2[0] = 1;
        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        i4nc4mp.myLock.IsActive$Stub r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean z0, $z1;
        byte $b2;

        r0 := @this: i4nc4mp.myLock.IsActive$Stub;
        i0 := @parameter0: int;
        r1 := @parameter1: android.os.Parcel;
        r2 := @parameter2: android.os.Parcel;
        i1 := @parameter3: int;
        $r3 = <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        r4[0] = 1;
        lookupswitch(i0)
        {
            case 1: goto label2;
            case 1598968902: goto label1;
            default: goto label5;
        };

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("i4nc4mp.myLock.IsActive");
        r4[1] = 1;
        return 1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("i4nc4mp.myLock.IsActive");
        z0 = virtualinvoke r0.<i4nc4mp.myLock.IsActive$Stub: boolean Exists()>();
        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();
        r4[2] = 1;
        if z0 == 0 goto label3;

        $b2 = 1;
        r4[3] = 1;
        goto label4;

     label3:
        $b2 = 0;
        r4[4] = 1;

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b2);
        r4[5] = 1;
        return 1;

     label5:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);
        r4[6] = 1;
        return $z1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <i4nc4mp.myLock.IsActive$Stub: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[7];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/IsActive$Stub", -6061702103528111346L);
        return $r0;
    }
}
public interface  i4nc4mp.myLock.IsActive extends java.lang.Object implements android.os.IInterface
{

    public abstract boolean Exists() throws android.os.RemoteException;
}
public class i4nc4mp.myLock.MainDialogPreference extends android.preference.DialogPreference
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        i4nc4mp.myLock.MainDialogPreference r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: i4nc4mp.myLock.MainDialogPreference;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        $r3 = <i4nc4mp.myLock.MainDialogPreference: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.MainDialogPreference: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        r4[0] = 1;
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        i4nc4mp.myLock.MainDialogPreference r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: i4nc4mp.myLock.MainDialogPreference;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        i0 := @parameter2: int;
        $r3 = <i4nc4mp.myLock.MainDialogPreference: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.MainDialogPreference: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        specialinvoke r0.<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.MainDialogPreference: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.MainDialogPreference: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MainDialogPreference", 4088986681768796124L);
        return $r0;
    }
}
class i4nc4mp.myLock.MainPreferenceActivity$1 extends java.lang.Object implements android.preference.Preference$OnPreferenceClickListener
{
    final android.preference.CheckBoxPreference val$toggle;
    final i4nc4mp.myLock.MainPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.MainPreferenceActivity, android.preference.CheckBoxPreference)
    {
        i4nc4mp.myLock.MainPreferenceActivity$1 r0;
        i4nc4mp.myLock.MainPreferenceActivity r1;
        android.preference.CheckBoxPreference r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity$1;
        r1 := @parameter0: i4nc4mp.myLock.MainPreferenceActivity;
        r2 := @parameter1: android.preference.CheckBoxPreference;
        $r3 = <i4nc4mp.myLock.MainPreferenceActivity$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<i4nc4mp.myLock.MainPreferenceActivity$1: i4nc4mp.myLock.MainPreferenceActivity this$0> = r1;
        r0.<i4nc4mp.myLock.MainPreferenceActivity$1: android.preference.CheckBoxPreference val$toggle> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        return;
    }

    public boolean onPreferenceClick(android.preference.Preference)
    {
        i4nc4mp.myLock.MainPreferenceActivity$1 r0;
        android.preference.Preference r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Context r4;
        java.lang.String $r5;
        boolean $z0, $z1;
        i4nc4mp.myLock.MainPreferenceActivity $r6;
        android.preference.CheckBoxPreference $r7;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity$1;
        r1 := @parameter0: android.preference.Preference;
        $r2 = <i4nc4mp.myLock.MainPreferenceActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = virtualinvoke r1.<android.preference.Preference: java.lang.String getKey()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("enabled");
        r3[0] = 1;
        if $z0 == 0 goto label3;

        $r6 = r0.<i4nc4mp.myLock.MainPreferenceActivity$1: i4nc4mp.myLock.MainPreferenceActivity this$0>;
        r4 = virtualinvoke $r6.<i4nc4mp.myLock.MainPreferenceActivity: android.content.Context getApplicationContext()>();
        $r7 = r0.<i4nc4mp.myLock.MainPreferenceActivity$1: android.preference.CheckBoxPreference val$toggle>;
        $z1 = virtualinvoke $r7.<android.preference.CheckBoxPreference: boolean isChecked()>();
        r3[1] = 1;
        if $z1 == 0 goto label1;

        staticinvoke <i4nc4mp.myLock.ManageMediator: void startService(android.content.Context)>(r4);
        r3[2] = 1;
        goto label2;

     label1:
        staticinvoke <i4nc4mp.myLock.ManageMediator: void stopService(android.content.Context)>(r4);
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return 1;

     label3:
        r3[5] = 1;
        return 0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.MainPreferenceActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MainPreferenceActivity$1", -5716809545446010966L);
        return $r0;
    }
}
class i4nc4mp.myLock.MainPreferenceActivity$Task extends java.lang.Object implements java.lang.Runnable
{
    final i4nc4mp.myLock.MainPreferenceActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.MainPreferenceActivity)
    {
        i4nc4mp.myLock.MainPreferenceActivity$Task r0;
        i4nc4mp.myLock.MainPreferenceActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity$Task;
        r1 := @parameter0: i4nc4mp.myLock.MainPreferenceActivity;
        $r2 = <i4nc4mp.myLock.MainPreferenceActivity$Task: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity$Task: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.MainPreferenceActivity$Task: i4nc4mp.myLock.MainPreferenceActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        i4nc4mp.myLock.MainPreferenceActivity$Task r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.MainPreferenceActivity $r3, $r4;
        android.content.Context $r5;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity$Task;
        $r1 = <i4nc4mp.myLock.MainPreferenceActivity$Task: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity$Task: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<i4nc4mp.myLock.MainPreferenceActivity$Task: i4nc4mp.myLock.MainPreferenceActivity this$0>;
        $r4 = r0.<i4nc4mp.myLock.MainPreferenceActivity$Task: i4nc4mp.myLock.MainPreferenceActivity this$0>;
        $r5 = virtualinvoke $r4.<i4nc4mp.myLock.MainPreferenceActivity: android.content.Context getApplicationContext()>();
        $z0 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean serviceActive(android.content.Context)>($r5);
        staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: void access$000(i4nc4mp.myLock.MainPreferenceActivity,boolean)>($r3, $z0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity$Task: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.MainPreferenceActivity$Task: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MainPreferenceActivity$Task", 4320153511730518057L);
        return $r0;
    }
}
public class i4nc4mp.myLock.MainPreferenceActivity extends android.preference.PreferenceActivity
{
    private android.content.SharedPreferences myprefs;
    private boolean security;
    private boolean enabled;
    private boolean active;
    android.os.Handler serviceHandler;
    i4nc4mp.myLock.MainPreferenceActivity$Task verifyBindTask;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.MainPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.MainPreferenceActivity$Task $r3;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity;
        $r1 = <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.preference.PreferenceActivity: void <init>()>();
        r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean security> = 0;
        r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean enabled> = 0;
        r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean active> = 0;
        $r3 = new i4nc4mp.myLock.MainPreferenceActivity$Task;
        specialinvoke $r3.<i4nc4mp.myLock.MainPreferenceActivity$Task: void <init>(i4nc4mp.myLock.MainPreferenceActivity)>(r0);
        r0.<i4nc4mp.myLock.MainPreferenceActivity: i4nc4mp.myLock.MainPreferenceActivity$Task verifyBindTask> = $r3;
        r2[0] = 1;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        i4nc4mp.myLock.MainPreferenceActivity r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.preference.CheckBoxPreference r4;
        android.preference.PreferenceManager $r5;
        android.os.Handler $r6;
        android.preference.Preference $r7, $r10;
        i4nc4mp.myLock.MainPreferenceActivity$1 $r8;
        java.lang.String $r9;
        int $i1;
        android.preference.PreferenceGroup $r11;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: void addPreferencesFromResource(int)>(2130968576);
        $r5 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>();
        virtualinvoke $r5.<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>("myLock");
        $r6 = new android.os.Handler;
        specialinvoke $r6.<android.os.Handler: void <init>()>();
        r0.<i4nc4mp.myLock.MainPreferenceActivity: android.os.Handler serviceHandler> = $r6;
        $r7 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("enabled");
        r4 = (android.preference.CheckBoxPreference) $r7;
        r3[0] = 1;
        if r4 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("pref activity", "didn\'t find toggle item");
        r3[1] = 1;
        goto label2;

     label1:
        $r8 = new i4nc4mp.myLock.MainPreferenceActivity$1;
        specialinvoke $r8.<i4nc4mp.myLock.MainPreferenceActivity$1: void <init>(i4nc4mp.myLock.MainPreferenceActivity,android.preference.CheckBoxPreference)>(r0, r4);
        virtualinvoke r4.<android.preference.CheckBoxPreference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r8);
        r3[2] = 1;

     label2:
        $r9 = <android.os.Build$VERSION: java.lang.String SDK>;
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);
        r3[3] = 1;
        if $i1 <= 8 goto label3;

        $r10 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("incomingoptions");
        $r11 = (android.preference.PreferenceGroup) $r10;
        virtualinvoke $r11.<android.preference.PreferenceGroup: void removeAll()>();
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return;
    }

    protected void onStart()
    {
        i4nc4mp.myLock.MainPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity;
        $r1 = <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<android.preference.PreferenceActivity: void onStart()>();
        specialinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: void getPrefs()>();
        r2[0] = 1;
        return;
    }

    private void getPrefs()
    {
        i4nc4mp.myLock.MainPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences $r3, $r6, $r9, $r12, $r13, $r20, $r23, $r26, $r29, $r32;
        android.preference.Preference $r4, $r7, $r10, $r18, $r21, $r24, $r27, $r30;
        android.preference.CheckBoxPreference $r5, $r8, $r11, $r19, $r22, $r25, $r28, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12;
        android.content.Context $r14;
        android.os.Handler $r15;
        i4nc4mp.myLock.MainPreferenceActivity$Task $r16;
        java.lang.String $r17;
        int $i0;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity;
        $r1 = <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs> = $r3;
        $r4 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("FG");
        $r5 = (android.preference.CheckBoxPreference) $r4;
        $r6 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z0 = interfaceinvoke $r6.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("FG", 0);
        virtualinvoke $r5.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);
        $r7 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("slideGuard");
        $r8 = (android.preference.CheckBoxPreference) $r7;
        $r9 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z1 = interfaceinvoke $r9.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("slideGuard", 0);
        virtualinvoke $r8.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z1);
        $r10 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("oldmode");
        $r11 = (android.preference.CheckBoxPreference) $r10;
        $r12 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z2 = interfaceinvoke $r12.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("oldmode", 0);
        virtualinvoke $r11.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z2);
        $r13 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z3 = interfaceinvoke $r13.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("enabled", 0);
        r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean enabled> = $z3;
        $z4 = r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean enabled>;
        r2[0] = 1;
        if $z4 == 0 goto label2;

        $r14 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.Context getApplicationContext()>();
        $z5 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean bind(android.content.Context)>($r14);
        r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean active> = $z5;
        $z6 = r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean active>;
        r2[1] = 1;
        if $z6 == 0 goto label1;

        specialinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: void updateStatus(boolean)>(1);
        r2[2] = 1;
        goto label3;

     label1:
        $r15 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.os.Handler serviceHandler>;
        $r16 = r0.<i4nc4mp.myLock.MainPreferenceActivity: i4nc4mp.myLock.MainPreferenceActivity$Task verifyBindTask>;
        virtualinvoke $r15.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r16, 100L);
        r2[3] = 1;
        goto label3;

     label2:
        specialinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: void updateStatus(boolean)>(0);
        r2[4] = 1;

     label3:
        $r17 = <android.os.Build$VERSION: java.lang.String SDK>;
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);
        r2[5] = 1;
        if $i0 >= 9 goto label4;

        $r18 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("callPrompt");
        $r19 = (android.preference.CheckBoxPreference) $r18;
        $r20 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z8 = interfaceinvoke $r20.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("callPrompt", 0);
        virtualinvoke $r19.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z8);
        $r21 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("rejectEnabled");
        $r22 = (android.preference.CheckBoxPreference) $r21;
        $r23 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z9 = interfaceinvoke $r23.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("rejectEnabled", 0);
        virtualinvoke $r22.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z9);
        $r24 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("cameraAccept");
        $r25 = (android.preference.CheckBoxPreference) $r24;
        $r26 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z10 = interfaceinvoke $r26.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("cameraAccept", 0);
        virtualinvoke $r25.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z10);
        r2[6] = 1;

     label4:
        $r27 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("touchLock");
        $r28 = (android.preference.CheckBoxPreference) $r27;
        $r29 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z11 = interfaceinvoke $r29.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("touchLock", 0);
        virtualinvoke $r28.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z11);
        $r30 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("backUnlock");
        $r31 = (android.preference.CheckBoxPreference) $r30;
        $r32 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.content.SharedPreferences myprefs>;
        $z12 = interfaceinvoke $r32.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("backUnlock", 0);
        virtualinvoke $r31.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z12);
        r2[7] = 1;
        return;
    }

    private void updateStatus(boolean)
    {
        i4nc4mp.myLock.MainPreferenceActivity r0;
        boolean z0, $z1;
        boolean[][] $r1;
        boolean[] r2;
        android.preference.Preference $r3;
        android.preference.CheckBoxPreference $r4;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity;
        z0 := @parameter0: boolean;
        $r1 = <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r2[0] = 1;
        if z0 == 0 goto label1;

        r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean enabled> = 1;
        r2[1] = 1;
        goto label2;

     label1:
        r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean enabled> = 0;
        r2[2] = 1;

     label2:
        $r3 = virtualinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>("enabled");
        $r4 = (android.preference.CheckBoxPreference) $r3;
        $z1 = r0.<i4nc4mp.myLock.MainPreferenceActivity: boolean enabled>;
        virtualinvoke $r4.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z1);
        r2[3] = 1;
        return;
    }

    protected void onDestroy()
    {
        i4nc4mp.myLock.MainPreferenceActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Handler $r3;
        i4nc4mp.myLock.MainPreferenceActivity$Task $r4;

        r0 := @this: i4nc4mp.myLock.MainPreferenceActivity;
        $r1 = <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        specialinvoke r0.<android.preference.PreferenceActivity: void onDestroy()>();
        $r3 = r0.<i4nc4mp.myLock.MainPreferenceActivity: android.os.Handler serviceHandler>;
        $r4 = r0.<i4nc4mp.myLock.MainPreferenceActivity: i4nc4mp.myLock.MainPreferenceActivity$Task verifyBindTask>;
        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);
        r0.<i4nc4mp.myLock.MainPreferenceActivity: android.os.Handler serviceHandler> = null;
        r2[0] = 1;
        return;
    }

    static void access$000(i4nc4mp.myLock.MainPreferenceActivity, boolean)
    {
        i4nc4mp.myLock.MainPreferenceActivity r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: i4nc4mp.myLock.MainPreferenceActivity;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        specialinvoke r0.<i4nc4mp.myLock.MainPreferenceActivity: void updateStatus(boolean)>(z0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <i4nc4mp.myLock.MainPreferenceActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[8];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MainPreferenceActivity", -6658371195781624546L);
        return $r0;
    }
}
final class i4nc4mp.myLock.ManageKeyguard$1 extends java.lang.Object implements android.app.KeyguardManager$OnKeyguardExitResult
{
    final i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit val$callback;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit)
    {
        i4nc4mp.myLock.ManageKeyguard$1 r0;
        i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.ManageKeyguard$1;
        r1 := @parameter0: i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit;
        $r2 = <i4nc4mp.myLock.ManageKeyguard$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.ManageKeyguard$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.ManageKeyguard$1: i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit val$callback> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onKeyguardExitResult(boolean)
    {
        i4nc4mp.myLock.ManageKeyguard$1 r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit $r3;

        r0 := @this: i4nc4mp.myLock.ManageKeyguard$1;
        z0 := @parameter0: boolean;
        $r1 = <i4nc4mp.myLock.ManageKeyguard$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageKeyguard$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        staticinvoke <i4nc4mp.myLock.ManageKeyguard: void reenableKeyguard()>();
        r2[0] = 1;
        if z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("kg", "--Keyguard exited securely");
        $r3 = r0.<i4nc4mp.myLock.ManageKeyguard$1: i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit val$callback>;
        interfaceinvoke $r3.<i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit: void LaunchOnKeyguardExitSuccess()>();
        r2[1] = 1;
        goto label2;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("kg", "--Keyguard exit failed");
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageKeyguard$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.ManageKeyguard$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ManageKeyguard$1", -7703740493933479946L);
        return $r0;
    }
}
public interface  i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit extends java.lang.Object
{

    public abstract void LaunchOnKeyguardExitSuccess();
}
public class i4nc4mp.myLock.ManageKeyguard extends java.lang.Object
{
    private static android.app.KeyguardManager myKM;
    private static android.app.KeyguardManager$KeyguardLock myKL;
    public static final java.lang.String TAG;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        i4nc4mp.myLock.ManageKeyguard r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.ManageKeyguard;
        $r1 = <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static synchronized void initialize(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.app.KeyguardManager $r3, $r5;
        java.lang.Object $r4;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("keyguard");
        $r5 = (android.app.KeyguardManager) $r4;
        <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM> = $r5;
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MKinit", "we had to get the KM.");
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public static synchronized void disableKeyguard(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.app.KeyguardManager $r3, $r4;
        boolean $z0;
        android.app.KeyguardManager$KeyguardLock $r5, $r6;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        staticinvoke <i4nc4mp.myLock.ManageKeyguard: void initialize(android.content.Context)>(r0);
        $r3 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM>;
        $z0 = virtualinvoke $r3.<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM>;
        $r5 = virtualinvoke $r4.<android.app.KeyguardManager: android.app.KeyguardManager$KeyguardLock newKeyguardLock(java.lang.String)>("kg");
        <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager$KeyguardLock myKL> = $r5;
        $r6 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager$KeyguardLock myKL>;
        virtualinvoke $r6.<android.app.KeyguardManager$KeyguardLock: void disableKeyguard()>();
        r2[1] = 1;
        goto label2;

     label1:
        <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager$KeyguardLock myKL> = null;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return;
    }

    public static synchronized boolean inKeyguardRestrictedInputMode()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.app.KeyguardManager $r2, $r3;
        boolean $z0;

        $r0 = <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $r2 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM>;
        r1[0] = 1;
        if $r2 == null goto label1;

        $r3 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM>;
        $z0 = virtualinvoke $r3.<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>();
        r1[1] = 1;
        return $z0;

     label1:
        r1[2] = 1;
        return 0;
    }

    public static synchronized void reenableKeyguard()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.app.KeyguardManager $r2;
        android.app.KeyguardManager$KeyguardLock $r3, $r4;

        $r0 = <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        $r2 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM>;
        r1[0] = 1;
        if $r2 == null goto label1;

        $r3 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager$KeyguardLock myKL>;
        r1[1] = 1;
        if $r3 == null goto label1;

        $r4 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager$KeyguardLock myKL>;
        virtualinvoke $r4.<android.app.KeyguardManager$KeyguardLock: void reenableKeyguard()>();
        <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager$KeyguardLock myKL> = null;
        r1[2] = 1;

     label1:
        r1[3] = 1;
        return;
    }

    public static synchronized void exitKeyguardSecurely(i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit)
    {
        i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        android.app.KeyguardManager $r3;
        i4nc4mp.myLock.ManageKeyguard$1 $r4;

        r0 := @parameter0: i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit;
        $r1 = <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $z0 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean inKeyguardRestrictedInputMode()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("kg", "--Trying to exit keyguard securely");
        $r3 = <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM>;
        $r4 = new i4nc4mp.myLock.ManageKeyguard$1;
        specialinvoke $r4.<i4nc4mp.myLock.ManageKeyguard$1: void <init>(i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit)>(r0);
        virtualinvoke $r3.<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)>($r4);
        r2[1] = 1;
        goto label2;

     label1:
        interfaceinvoke r0.<i4nc4mp.myLock.ManageKeyguard$LaunchOnKeyguardExit: void LaunchOnKeyguardExitSuccess()>();
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRi()>();
        r1 = $r0[6];
        <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager myKM> = null;
        <i4nc4mp.myLock.ManageKeyguard: android.app.KeyguardManager$KeyguardLock myKL> = null;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[7][];
        <i4nc4mp.myLock.ManageKeyguard: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ManageKeyguard", -1103484828378408575L);
        return $r0;
    }
}
class i4nc4mp.myLock.ManageMediator$RemoteServiceConnection extends java.lang.Object implements android.content.ServiceConnection
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        i4nc4mp.myLock.ManageMediator$RemoteServiceConnection r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection;
        $r1 = <i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        i4nc4mp.myLock.ManageMediator$RemoteServiceConnection r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        boolean[][] $r3;
        boolean[] r4;
        i4nc4mp.myLock.IsActive $r5;

        r0 := @this: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection;
        r1 := @parameter0: android.content.ComponentName;
        r2 := @parameter1: android.os.IBinder;
        $r3 = <i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = staticinvoke <i4nc4mp.myLock.IsActive$Stub: i4nc4mp.myLock.IsActive asInterface(android.os.IBinder)>(r2);
        staticinvoke <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.IsActive access$002(i4nc4mp.myLock.IsActive)>($r5);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("service connected", "bind to existent service");
        r4[0] = 1;
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        i4nc4mp.myLock.ManageMediator$RemoteServiceConnection r0;
        android.content.ComponentName r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Context $r5, $r6, $r8;
        android.widget.Toast $r7;

        r0 := @this: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection;
        r1 := @parameter0: android.content.ComponentName;
        $r2 = <i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        staticinvoke <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.IsActive access$002(i4nc4mp.myLock.IsActive)>(null);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("service disconnected", "service death");
        $r5 = staticinvoke <i4nc4mp.myLock.ManageMediator: android.content.Context access$100()>();
        r3[0] = 1;
        if $r5 != null goto label1;

        r3[1] = 1;
        return;

     label1:
        $r6 = staticinvoke <i4nc4mp.myLock.ManageMediator: android.content.Context access$100()>();
        $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r6, "unexpected myLock stop", 1);
        virtualinvoke $r7.<android.widget.Toast: void show()>();
        $r8 = staticinvoke <i4nc4mp.myLock.ManageMediator: android.content.Context access$100()>();
        staticinvoke <i4nc4mp.myLock.ToggleWidget: void makeView(android.content.Context,boolean)>($r8, 0);
        r3[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ManageMediator$RemoteServiceConnection", 3431103389765262896L);
        return $r0;
    }
}
public class i4nc4mp.myLock.ManageMediator extends java.lang.Object
{
    private static i4nc4mp.myLock.ManageMediator$RemoteServiceConnection conn;
    private static i4nc4mp.myLock.IsActive mediator;
    private static android.content.Context c;
    public static final int MODE_BASIC;
    public static final int MODE_HIDDEN;
    public static final int MODE_ADVANCED;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        i4nc4mp.myLock.ManageMediator r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.ManageMediator;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static android.content.Intent getMode(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0;
        android.content.Intent r3, $r5;
        java.lang.Class r4;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        n0 = null;
        r4 = class "i4nc4mp/myLock/AutoDismiss";
        $r5 = new android.content.Intent;
        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, r4);
        r3 = $r5;
        r2[0] = 1;
        return r3;
    }

    public static synchronized boolean bind(android.content.Context)
    {
        android.content.Context r0, $r3;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.ManageMediator$RemoteServiceConnection $r4, $r5, $r8;
        i4nc4mp.myLock.IsActive $r6;
        android.content.Intent $r7;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = <i4nc4mp.myLock.ManageMediator: android.content.Context c>;
        r2[0] = 1;
        if $r3 != null goto label1;

        <i4nc4mp.myLock.ManageMediator: android.content.Context c> = r0;
        r2[1] = 1;

     label1:
        $r4 = <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection conn>;
        r2[2] = 1;
        if $r4 != null goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("bind attempt", "initializing connection object");
        $r5 = new i4nc4mp.myLock.ManageMediator$RemoteServiceConnection;
        specialinvoke $r5.<i4nc4mp.myLock.ManageMediator$RemoteServiceConnection: void <init>()>();
        <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection conn> = $r5;
        r2[3] = 1;

     label2:
        $r6 = <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.IsActive mediator>;
        r2[4] = 1;
        if $r6 == null goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("bind result", "binding already held, returning true");
        r2[5] = 1;
        return 1;

     label3:
        $r7 = staticinvoke <i4nc4mp.myLock.ManageMediator: android.content.Intent getMode(android.content.Context)>(r0);
        $r8 = <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection conn>;
        virtualinvoke r0.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r7, $r8, 0);
        r2[6] = 1;
        return 0;
    }

    public static synchronized void release(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.ManageMediator$RemoteServiceConnection $r3, $r4;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection conn>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection conn>;
        virtualinvoke r0.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);
        <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection conn> = null;
        <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.IsActive mediator> = null;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public static synchronized boolean serviceActive(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0;
        android.os.RemoteException r3, $r6;
        i4nc4mp.myLock.IsActive $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        z0 = 0;
        $r4 = <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.IsActive mediator>;
        r2[0] = 1;
        if $r4 == null goto label4;

     label1:
        $r5 = <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.IsActive mediator>;
        z0 = interfaceinvoke $r5.<i4nc4mp.myLock.IsActive: boolean Exists()>();
        r2[1] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("unknown failure", "had mediator stub but couldn\'t check active");
        r2[2] = 1;

     label4:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("result is ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("verify bind", $r10);
        r2[3] = 1;
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static synchronized void startService(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor r4;
        android.content.Intent r5;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r3 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("startingUp", 1);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        r5 = staticinvoke <i4nc4mp.myLock.ManageMediator: android.content.Intent getMode(android.content.Context)>(r0);
        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r5);
        staticinvoke <i4nc4mp.myLock.ToggleWidget: void makeView(android.content.Context,boolean)>(r0, 1);
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start call ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("manage mediator", $r11);
        r2[0] = 1;
        return;
    }

    public static synchronized void stopService(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Intent r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        staticinvoke <i4nc4mp.myLock.ManageMediator: void release(android.content.Context)>(r0);
        r3 = staticinvoke <i4nc4mp.myLock.ManageMediator: android.content.Intent getMode(android.content.Context)>(r0);
        virtualinvoke r0.<android.content.Context: boolean stopService(android.content.Intent)>(r3);
        staticinvoke <i4nc4mp.myLock.ToggleWidget: void makeView(android.content.Context,boolean)>(r0, 0);
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stop call ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("manage mediator", $r7);
        r2[0] = 1;
        return;
    }

    public static synchronized void invokeToggler(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Intent r3, $r4;

        r0 := @parameter0: android.content.Context;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r4 = new android.content.Intent;
        specialinvoke $r4.<android.content.Intent: void <init>()>();
        r3 = $r4;
        virtualinvoke r3.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("i4nc4mp.myLock", "i4nc4mp.myLock.Toggler");
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("i4nc4mp.myLock.TargetState", z0);
        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r3);
        r2[0] = 1;
        return;
    }

    public static synchronized void updateEnablePref(boolean, android.content.Context)
    {
        boolean z0;
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor r4;

        z0 := @parameter0: boolean;
        r0 := @parameter1: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r3 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("enabled", z0);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        r2[0] = 1;
        return;
    }

    static i4nc4mp.myLock.IsActive access$002(i4nc4mp.myLock.IsActive)
    {
        i4nc4mp.myLock.IsActive r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: i4nc4mp.myLock.IsActive;
        $r1 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.IsActive mediator> = r0;
        r2[0] = 1;
        return r0;
    }

    static android.content.Context access$100()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.content.Context $r2;

        $r0 = <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();

     label0:
        r1 = $r0[10];
        $r2 = <i4nc4mp.myLock.ManageMediator: android.content.Context c>;
        r1[0] = 1;
        return $r2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean[][] $VRi()>();
        r1 = $r0[11];
        <i4nc4mp.myLock.ManageMediator: i4nc4mp.myLock.ManageMediator$RemoteServiceConnection conn> = null;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <i4nc4mp.myLock.ManageMediator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ManageMediator", 2721678452122045095L);
        return $r0;
    }
}
public class i4nc4mp.myLock.ManageWakeLock extends java.lang.Object
{
    private static android.os.PowerManager$WakeLock myWakeLock;
    private static android.os.PowerManager$WakeLock myPartialWakeLock;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        i4nc4mp.myLock.ManageWakeLock r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.ManageWakeLock;
        $r1 = <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static synchronized void acquireFull(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.PowerManager r3;
        byte b0;
        java.lang.Object $r4;
        android.os.PowerManager$WakeLock $r5, $r6, $r7, $r8;
        int i2;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");
        r3 = (android.os.PowerManager) $r4;
        $r5 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myWakeLock>;
        r2[0] = 1;
        if $r5 == null goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("acquire", "**Wakelock already held");
        r2[1] = 1;
        return;

     label1:
        b0 = 6;
        i2 = b0 | 536870912;
        $r6 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(i2, "acquire");
        <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myWakeLock> = $r6;
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("acquire", "**Wakelock acquired");
        $r7 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myWakeLock>;
        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);
        $r8 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myWakeLock>;
        virtualinvoke $r8.<android.os.PowerManager$WakeLock: void acquire()>();
        r2[2] = 1;
        return;
    }

    public static synchronized void DoCancel(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        staticinvoke <i4nc4mp.myLock.ManageWakeLock: void releaseFull()>();
        r2[0] = 1;
        return;
    }

    public static synchronized void acquirePartial(android.content.Context)
    {
        android.content.Context r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.PowerManager r3;
        java.lang.Object $r4;
        android.os.PowerManager$WakeLock $r5, $r6, $r7;

        r0 := @parameter0: android.content.Context;
        $r1 = <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");
        r3 = (android.os.PowerManager) $r4;
        $r5 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myPartialWakeLock>;
        r2[0] = 1;
        if $r5 == null goto label1;

        r2[1] = 1;
        return;

     label1:
        $r6 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "myLock");
        <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myPartialWakeLock> = $r6;
        $r7 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myPartialWakeLock>;
        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void acquire()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("acquire", "**Wakelock acquired");
        r2[2] = 1;
        return;
    }

    public static synchronized void releaseFull()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.os.PowerManager$WakeLock $r2, $r3;

        $r0 = <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        $r2 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myWakeLock>;
        r1[0] = 1;
        if $r2 == null goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("release", "**Wakelock released");
        $r3 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myWakeLock>;
        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();
        <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myWakeLock> = null;
        r1[1] = 1;

     label1:
        r1[2] = 1;
        return;
    }

    public static synchronized void releasePartial()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.os.PowerManager$WakeLock $r2, $r3;

        $r0 = <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        $r2 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myPartialWakeLock>;
        r1[0] = 1;
        if $r2 == null goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("relpart", "**Wakelock (partial) released");
        $r3 = <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myPartialWakeLock>;
        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();
        <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myPartialWakeLock> = null;
        r1[1] = 1;

     label1:
        r1[2] = 1;
        return;
    }

    public static synchronized void releaseAll()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        staticinvoke <i4nc4mp.myLock.ManageWakeLock: void releaseFull()>();
        staticinvoke <i4nc4mp.myLock.ManageWakeLock: void releasePartial()>();
        r1[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRi()>();
        r1 = $r0[7];
        <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myWakeLock> = null;
        <i4nc4mp.myLock.ManageWakeLock: android.os.PowerManager$WakeLock myPartialWakeLock> = null;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <i4nc4mp.myLock.ManageWakeLock: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ManageWakeLock", -624327993985622314L);
        return $r0;
    }
}
class i4nc4mp.myLock.MediatorService$1 extends android.telephony.PhoneStateListener
{
    final i4nc4mp.myLock.MediatorService this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.MediatorService)
    {
        i4nc4mp.myLock.MediatorService$1 r0;
        i4nc4mp.myLock.MediatorService r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.MediatorService$1;
        r1 := @parameter0: i4nc4mp.myLock.MediatorService;
        $r2 = <i4nc4mp.myLock.MediatorService$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MediatorService$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0> = r1;
        specialinvoke r0.<android.telephony.PhoneStateListener: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onCallStateChanged(int, java.lang.String)
    {
        i4nc4mp.myLock.MediatorService$1 r0;
        int i0, $i1, $i2, $i4;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        i4nc4mp.myLock.MediatorService $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: i4nc4mp.myLock.MediatorService$1;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <i4nc4mp.myLock.MediatorService$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MediatorService$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        if i0 != 2 goto label2;

        $r4 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $i1 = $r4.<i4nc4mp.myLock.MediatorService: int lastphonestate>;
        r3[1] = 1;
        if $i1 != 0 goto label1;

        $r5 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $r5.<i4nc4mp.myLock.MediatorService: boolean placingcall> = 1;
        r3[2] = 1;

     label1:
        $r6 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        virtualinvoke $r6.<i4nc4mp.myLock.MediatorService: void onCallStart()>();
        r3[3] = 1;
        goto label6;

     label2:
        r3[4] = 1;
        if i0 != 1 goto label3;

        $r7 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $r7.<i4nc4mp.myLock.MediatorService: boolean receivingcall> = 1;
        $r8 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        virtualinvoke $r8.<i4nc4mp.myLock.MediatorService: void onCallRing()>();
        r3[5] = 1;
        goto label6;

     label3:
        $r9 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $i2 = $r9.<i4nc4mp.myLock.MediatorService: int lastphonestate>;
        r3[6] = 1;
        if $i2 != 42 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ListenInit", "first phone listener init");
        r3[7] = 1;
        goto label6;

     label4:
        $r10 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $i4 = $r10.<i4nc4mp.myLock.MediatorService: int lastphonestate>;
        r3[8] = 1;
        if $i4 != 1 goto label5;

        $r11 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $r11.<i4nc4mp.myLock.MediatorService: boolean receivingcall> = 0;
        $r12 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        virtualinvoke $r12.<i4nc4mp.myLock.MediatorService: void onCallMiss()>();
        r3[9] = 1;
        goto label6;

     label5:
        $r13 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        virtualinvoke $r13.<i4nc4mp.myLock.MediatorService: void onCallEnd()>();
        $r14 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $r14.<i4nc4mp.myLock.MediatorService: boolean receivingcall> = 0;
        $r15 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $r15.<i4nc4mp.myLock.MediatorService: boolean placingcall> = 0;
        r3[10] = 1;

     label6:
        $r16 = r0.<i4nc4mp.myLock.MediatorService$1: i4nc4mp.myLock.MediatorService this$0>;
        $r16.<i4nc4mp.myLock.MediatorService: int lastphonestate> = i0;
        r3[11] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.MediatorService$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.MediatorService$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[12];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MediatorService$1", -2777854895547899269L);
        return $r0;
    }
}
class i4nc4mp.myLock.MediatorService$2 extends android.content.BroadcastReceiver
{
    public static final java.lang.String TAG;
    public static final java.lang.String Screen;
    final i4nc4mp.myLock.MediatorService this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.MediatorService)
    {
        i4nc4mp.myLock.MediatorService$2 r0;
        i4nc4mp.myLock.MediatorService r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.MediatorService$2;
        r1 := @parameter0: i4nc4mp.myLock.MediatorService;
        $r2 = <i4nc4mp.myLock.MediatorService$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MediatorService$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.MediatorService$2: i4nc4mp.myLock.MediatorService this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.MediatorService$2 r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r5;
        boolean $z0;
        i4nc4mp.myLock.MediatorService $r6, $r7;

        r0 := @this: i4nc4mp.myLock.MediatorService$2;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.MediatorService$2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.MediatorService$2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_ON");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("screenon", "Screen just went ON!");
        $r6 = r0.<i4nc4mp.myLock.MediatorService$2: i4nc4mp.myLock.MediatorService this$0>;
        staticinvoke <i4nc4mp.myLock.MediatorService: boolean access$002(i4nc4mp.myLock.MediatorService,boolean)>($r6, 1);
        $r7 = r0.<i4nc4mp.myLock.MediatorService$2: i4nc4mp.myLock.MediatorService this$0>;
        virtualinvoke $r7.<i4nc4mp.myLock.MediatorService: void onScreenWakeup()>();
        r4[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.MediatorService$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.MediatorService$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MediatorService$2", -2875853737258045690L);
        return $r0;
    }
}
class i4nc4mp.myLock.MediatorService$3 extends android.content.BroadcastReceiver
{
    public static final java.lang.String TAG;
    public static final java.lang.String Screenoff;
    final i4nc4mp.myLock.MediatorService this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.MediatorService)
    {
        i4nc4mp.myLock.MediatorService$3 r0;
        i4nc4mp.myLock.MediatorService r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.MediatorService$3;
        r1 := @parameter0: i4nc4mp.myLock.MediatorService;
        $r2 = <i4nc4mp.myLock.MediatorService$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MediatorService$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.MediatorService$3: i4nc4mp.myLock.MediatorService this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.MediatorService$3 r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r5;
        boolean $z0;
        i4nc4mp.myLock.MediatorService $r6, $r7;

        r0 := @this: i4nc4mp.myLock.MediatorService$3;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.MediatorService$3: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.MediatorService$3: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_OFF");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("screenoff", "Screen just went OFF");
        $r6 = r0.<i4nc4mp.myLock.MediatorService$3: i4nc4mp.myLock.MediatorService this$0>;
        staticinvoke <i4nc4mp.myLock.MediatorService: boolean access$002(i4nc4mp.myLock.MediatorService,boolean)>($r6, 0);
        $r7 = r0.<i4nc4mp.myLock.MediatorService$3: i4nc4mp.myLock.MediatorService this$0>;
        virtualinvoke $r7.<i4nc4mp.myLock.MediatorService: void onScreenSleep()>();
        r4[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.MediatorService$3: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.MediatorService$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MediatorService$3", -2875853737258045690L);
        return $r0;
    }
}
class i4nc4mp.myLock.MediatorService$4 extends i4nc4mp.myLock.IsActive$Stub
{
    final i4nc4mp.myLock.MediatorService this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.MediatorService)
    {
        i4nc4mp.myLock.MediatorService$4 r0;
        i4nc4mp.myLock.MediatorService r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.MediatorService$4;
        r1 := @parameter0: i4nc4mp.myLock.MediatorService;
        $r2 = <i4nc4mp.myLock.MediatorService$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MediatorService$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.MediatorService$4: i4nc4mp.myLock.MediatorService this$0> = r1;
        specialinvoke r0.<i4nc4mp.myLock.IsActive$Stub: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean Exists() throws android.os.RemoteException
    {
        i4nc4mp.myLock.MediatorService$4 r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.MediatorService $r3;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.MediatorService$4;
        $r1 = <i4nc4mp.myLock.MediatorService$4: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService$4: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<i4nc4mp.myLock.MediatorService$4: i4nc4mp.myLock.MediatorService this$0>;
        $z0 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean access$100(i4nc4mp.myLock.MediatorService)>($r3);
        r2[0] = 1;
        return $z0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.MediatorService$4: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.MediatorService$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MediatorService$4", 4320153508954628847L);
        return $r0;
    }
}
public class i4nc4mp.myLock.MediatorService extends android.app.Service
{
    private boolean active;
    private boolean awake;
    private boolean exists;
    public int lastphonestate;
    public boolean receivingcall;
    public boolean placingcall;
    private android.telephony.TelephonyManager tm;
    android.telephony.PhoneStateListener Detector;
    android.content.BroadcastReceiver screenon;
    android.content.BroadcastReceiver screenoff;
    private i4nc4mp.myLock.IsActive$Stub ExistStub;
    static final boolean $assertionsDisabled;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.MediatorService$1 $r3;
        i4nc4mp.myLock.MediatorService$2 $r4;
        i4nc4mp.myLock.MediatorService$3 $r5;
        i4nc4mp.myLock.MediatorService$4 $r6;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Service: void <init>()>();
        r0.<i4nc4mp.myLock.MediatorService: boolean active> = 0;
        r0.<i4nc4mp.myLock.MediatorService: boolean awake> = 0;
        r0.<i4nc4mp.myLock.MediatorService: boolean exists> = 0;
        r0.<i4nc4mp.myLock.MediatorService: int lastphonestate> = 42;
        r0.<i4nc4mp.myLock.MediatorService: boolean receivingcall> = 0;
        r0.<i4nc4mp.myLock.MediatorService: boolean placingcall> = 0;
        r0.<i4nc4mp.myLock.MediatorService: android.telephony.TelephonyManager tm> = null;
        $r3 = new i4nc4mp.myLock.MediatorService$1;
        specialinvoke $r3.<i4nc4mp.myLock.MediatorService$1: void <init>(i4nc4mp.myLock.MediatorService)>(r0);
        r0.<i4nc4mp.myLock.MediatorService: android.telephony.PhoneStateListener Detector> = $r3;
        $r4 = new i4nc4mp.myLock.MediatorService$2;
        specialinvoke $r4.<i4nc4mp.myLock.MediatorService$2: void <init>(i4nc4mp.myLock.MediatorService)>(r0);
        r0.<i4nc4mp.myLock.MediatorService: android.content.BroadcastReceiver screenon> = $r4;
        $r5 = new i4nc4mp.myLock.MediatorService$3;
        specialinvoke $r5.<i4nc4mp.myLock.MediatorService$3: void <init>(i4nc4mp.myLock.MediatorService)>(r0);
        r0.<i4nc4mp.myLock.MediatorService: android.content.BroadcastReceiver screenoff> = $r5;
        $r6 = new i4nc4mp.myLock.MediatorService$4;
        specialinvoke $r6.<i4nc4mp.myLock.MediatorService$4: void <init>(i4nc4mp.myLock.MediatorService)>(r0);
        r0.<i4nc4mp.myLock.MediatorService: i4nc4mp.myLock.IsActive$Stub ExistStub> = $r6;
        r2[0] = 1;
        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        i4nc4mp.myLock.MediatorService r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        i4nc4mp.myLock.IsActive$Stub $r6;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        r1 := @parameter0: android.content.Intent;
        $r2 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, "onBind()");
        $r6 = r0.<i4nc4mp.myLock.MediatorService: i4nc4mp.myLock.IsActive$Stub ExistStub>;
        r3[0] = 1;
        return $r6;
    }

    public void onDestroy()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Class $r3;
        java.lang.String $r4;
        android.telephony.TelephonyManager $r5;
        android.telephony.PhoneStateListener $r6;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<android.app.Service: void onDestroy()>();
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onDestroy()");
        virtualinvoke r0.<i4nc4mp.myLock.MediatorService: void pause()>();
        $r5 = r0.<i4nc4mp.myLock.MediatorService: android.telephony.TelephonyManager tm>;
        $r6 = r0.<i4nc4mp.myLock.MediatorService: android.telephony.PhoneStateListener Detector>;
        virtualinvoke $r5.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r6, 0);
        r2[0] = 1;
        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        i4nc4mp.myLock.MediatorService r0;
        android.content.Intent r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r5, $r6, $r8;
        java.lang.AssertionError $r7;
        android.telephony.PhoneStateListener $r9;
        android.content.Context $r10;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        r1 := @parameter0: android.content.Intent;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        specialinvoke r0.<android.app.Service: int onStartCommand(android.content.Intent,int,int)>(r1, i0, i1);
        $z0 = r0.<i4nc4mp.myLock.MediatorService: boolean exists>;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r0.<i4nc4mp.myLock.MediatorService: void onRestartCommand()>();
        r3[1] = 1;
        return 1;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("first-start", "boot handler & rcvrs");
        virtualinvoke r0.<i4nc4mp.myLock.MediatorService: void activate()>();
        $r4 = virtualinvoke r0.<i4nc4mp.myLock.MediatorService: java.lang.Object getSystemService(java.lang.String)>("phone");
        $r5 = (android.telephony.TelephonyManager) $r4;
        r0.<i4nc4mp.myLock.MediatorService: android.telephony.TelephonyManager tm> = $r5;
        $z1 = <i4nc4mp.myLock.MediatorService: boolean $assertionsDisabled>;
        r3[2] = 1;
        if $z1 != 0 goto label2;

        $r6 = r0.<i4nc4mp.myLock.MediatorService: android.telephony.TelephonyManager tm>;
        r3[3] = 1;
        if $r6 != null goto label2;

        $r7 = new java.lang.AssertionError;
        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();
        r3[4] = 1;
        throw $r7;

     label2:
        $r8 = r0.<i4nc4mp.myLock.MediatorService: android.telephony.TelephonyManager tm>;
        $r9 = r0.<i4nc4mp.myLock.MediatorService: android.telephony.PhoneStateListener Detector>;
        virtualinvoke $r8.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r9, 32);
        $r10 = virtualinvoke r0.<i4nc4mp.myLock.MediatorService: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageMediator: boolean bind(android.content.Context)>($r10);
        virtualinvoke r0.<i4nc4mp.myLock.MediatorService: void onFirstStart()>();
        r0.<i4nc4mp.myLock.MediatorService: boolean exists> = 1;
        r3[5] = 1;
        return 1;
    }

    void activate()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.IntentFilter r3, r4, $r5, $r6;
        boolean $z0;
        android.content.BroadcastReceiver $r7, $r9;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $z0 = r0.<i4nc4mp.myLock.MediatorService: boolean active>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r2[1] = 1;
        return;

     label1:
        $r5 = new android.content.IntentFilter;
        specialinvoke $r5.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.SCREEN_ON");
        r3 = $r5;
        $r6 = new android.content.IntentFilter;
        specialinvoke $r6.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.SCREEN_OFF");
        r4 = $r6;
        $r7 = r0.<i4nc4mp.myLock.MediatorService: android.content.BroadcastReceiver screenon>;
        virtualinvoke r0.<i4nc4mp.myLock.MediatorService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r7, r3);
        $r9 = r0.<i4nc4mp.myLock.MediatorService: android.content.BroadcastReceiver screenoff>;
        virtualinvoke r0.<i4nc4mp.myLock.MediatorService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, r4);
        r0.<i4nc4mp.myLock.MediatorService: boolean active> = 1;
        r2[2] = 1;
        return;
    }

    void pause()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        android.content.BroadcastReceiver $r3, $r4;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $z0 = r0.<i4nc4mp.myLock.MediatorService: boolean active>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        r2[1] = 1;
        return;

     label1:
        $r3 = r0.<i4nc4mp.myLock.MediatorService: android.content.BroadcastReceiver screenon>;
        virtualinvoke r0.<i4nc4mp.myLock.MediatorService: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);
        $r4 = r0.<i4nc4mp.myLock.MediatorService: android.content.BroadcastReceiver screenoff>;
        virtualinvoke r0.<i4nc4mp.myLock.MediatorService: void unregisterReceiver(android.content.BroadcastReceiver)>($r4);
        r0.<i4nc4mp.myLock.MediatorService: boolean active> = 0;
        r2[2] = 1;
        return;
    }

    public void onFirstStart()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        return;
    }

    public void onRestartCommand()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r2[0] = 1;
        return;
    }

    public void onCallStart()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r2[0] = 1;
        return;
    }

    public void onCallEnd()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r2[0] = 1;
        return;
    }

    public void onCallRing()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        r2[0] = 1;
        return;
    }

    public void onCallMiss()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r2[0] = 1;
        return;
    }

    public void onScreenWakeup()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        r2[0] = 1;
        return;
    }

    public void onScreenSleep()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        r2[0] = 1;
        return;
    }

    public boolean IsAwake()
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $z0 = r0.<i4nc4mp.myLock.MediatorService: boolean awake>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$002(i4nc4mp.myLock.MediatorService, boolean)
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: i4nc4mp.myLock.MediatorService;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        r0.<i4nc4mp.myLock.MediatorService: boolean awake> = z0;
        r2[0] = 1;
        return z0;
    }

    static boolean access$100(i4nc4mp.myLock.MediatorService)
    {
        i4nc4mp.myLock.MediatorService r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: i4nc4mp.myLock.MediatorService;
        $r1 = <i4nc4mp.myLock.MediatorService: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $z0 = r0.<i4nc4mp.myLock.MediatorService: boolean exists>;
        r2[0] = 1;
        return $z0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        boolean $z0, $z1;

        $r0 = staticinvoke <i4nc4mp.myLock.MediatorService: boolean[][] $VRi()>();
        r1 = $r0[17];
        $r2 = class "i4nc4mp/myLock/MediatorService";
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();
        r1[0] = 1;
        if $z0 != 0 goto label0;

        $z1 = 1;
        r1[1] = 1;
        goto label1;

     label0:
        $z1 = 0;
        r1[2] = 1;

     label1:
        <i4nc4mp.myLock.MediatorService: boolean $assertionsDisabled> = $z1;
        r1[3] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        $r0 = newmultiarray (boolean)[18][];
        <i4nc4mp.myLock.MediatorService: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[4];
        $r0[17] = $r18;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/MediatorService", 3528060114430122033L);
        return $r0;
    }
}
public class i4nc4mp.myLock.PhoneReceiver extends android.content.BroadcastReceiver
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.PhoneReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.PhoneReceiver;
        $r1 = <i4nc4mp.myLock.PhoneReceiver: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.PhoneReceiver: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.PhoneReceiver r0;
        android.content.Context r1;
        android.content.Intent r2, r7, $r10, $r13, r14;
        boolean[][] $r3;
        boolean[] r4;
        android.content.SharedPreferences r5;
        boolean z0, z1, z2, $z3, $z4, $z5;
        java.lang.String r6, $r8, $r9, $r12;

        r0 := @this: i4nc4mp.myLock.PhoneReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.PhoneReceiver: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.PhoneReceiver: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = virtualinvoke r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        z0 = interfaceinvoke r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("callPrompt", 0);
        z1 = interfaceinvoke r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("cameraAccept", 0);
        z2 = interfaceinvoke r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("touchLock", 0);
        r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("state");
        $r8 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_RINGING>;
        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        r4[0] = 1;
        if $z3 == 0 goto label2;

        r4[1] = 1;
        if z0 != 0 goto label1;

        r4[2] = 1;
        if z1 == 0 goto label2;

     label1:
        staticinvoke <i4nc4mp.myLock.CallPrompt: void launch(android.content.Context)>(r1);
        r4[3] = 1;

     label2:
        r4[4] = 1;
        if z2 == 0 goto label4;

        $r9 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_OFFHOOK>;
        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        r4[5] = 1;
        if $z4 == 0 goto label3;

        $r10 = new android.content.Intent;
        specialinvoke $r10.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "i4nc4mp/myLock/ScreenMediator");
        r7 = $r10;
        virtualinvoke r1.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r7);
        r4[6] = 1;
        goto label4;

     label3:
        $r12 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_IDLE>;
        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r12);
        r4[7] = 1;
        if $z5 == 0 goto label4;

        $r13 = new android.content.Intent;
        specialinvoke $r13.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "i4nc4mp/myLock/ScreenMediator");
        r14 = $r13;
        virtualinvoke r1.<android.content.Context: boolean stopService(android.content.Intent)>(r14);
        r4[8] = 1;

     label4:
        r4[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.PhoneReceiver: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.PhoneReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/PhoneReceiver", -8444220259056963244L);
        return $r0;
    }
}
public final class i4nc4mp.myLock.R$attr extends java.lang.Object
{

    public void <init>()
    {
        i4nc4mp.myLock.R$attr r0;

        r0 := @this: i4nc4mp.myLock.R$attr;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class i4nc4mp.myLock.R$color extends java.lang.Object
{
    public static final int black;
    public static final int droid;
    public static final int red;
    public static final int translucent_droid;
    public static final int translucent_white;
    public static final int transparent;
    public static final int white;

    public void <init>()
    {
        i4nc4mp.myLock.R$color r0;

        r0 := @this: i4nc4mp.myLock.R$color;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class i4nc4mp.myLock.R$drawable extends java.lang.Object
{
    public static final int icon;
    public static final int widg_off_icon;
    public static final int widg_on_icon;

    public void <init>()
    {
        i4nc4mp.myLock.R$drawable r0;

        r0 := @this: i4nc4mp.myLock.R$drawable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class i4nc4mp.myLock.R$id extends java.lang.Object
{
    public static final int TextView01;
    public static final int TextView02;
    public static final int TextView03;
    public static final int answer;
    public static final int answerbutton;
    public static final int callprompt;
    public static final int hidetabs;
    public static final int hint;
    public static final int hinttext1;
    public static final int hinttext2;
    public static final int mid;
    public static final int rejectbutton;
    public static final int toggleButton;
    public static final int togglelayout;
    public static final int unlockhint;

    public void <init>()
    {
        i4nc4mp.myLock.R$id r0;

        r0 := @this: i4nc4mp.myLock.R$id;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class i4nc4mp.myLock.R$layout extends java.lang.Object
{
    public static final int answerprompt;
    public static final int callguard;
    public static final int cancelhint;
    public static final int dismisslayout;
    public static final int dummy;
    public static final int main;
    public static final int togglelayout;

    public void <init>()
    {
        i4nc4mp.myLock.R$layout r0;

        r0 := @this: i4nc4mp.myLock.R$layout;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class i4nc4mp.myLock.R$string extends java.lang.Object
{
    public static final int HowToFull;
    public static final int Troubleshooting;
    public static final int app_name;
    public static final int auto_off;
    public static final int auto_on;
    public static final int disabled;
    public static final int enabled;
    public static final int fg_off;
    public static final int fg_on;
    public static final int guard_off;
    public static final int guard_on;
    public static final int howto_title;
    public static final int ts_title;

    public void <init>()
    {
        i4nc4mp.myLock.R$string r0;

        r0 := @this: i4nc4mp.myLock.R$string;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class i4nc4mp.myLock.R$style extends java.lang.Object
{
    public static final int MyDefault;

    public void <init>()
    {
        i4nc4mp.myLock.R$style r0;

        r0 := @this: i4nc4mp.myLock.R$style;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class i4nc4mp.myLock.R$xml extends java.lang.Object
{
    public static final int mainpref;
    public static final int toggle_widget;

    public void <init>()
    {
        i4nc4mp.myLock.R$xml r0;

        r0 := @this: i4nc4mp.myLock.R$xml;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class i4nc4mp.myLock.R extends java.lang.Object
{

    public void <init>()
    {
        i4nc4mp.myLock.R r0;

        r0 := @this: i4nc4mp.myLock.R;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
class i4nc4mp.myLock.ScreenMediator$1 extends android.content.BroadcastReceiver
{
    public static final java.lang.String TAG;
    public static final java.lang.String Screen;
    final i4nc4mp.myLock.ScreenMediator this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.ScreenMediator)
    {
        i4nc4mp.myLock.ScreenMediator$1 r0;
        i4nc4mp.myLock.ScreenMediator r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.ScreenMediator$1;
        r1 := @parameter0: i4nc4mp.myLock.ScreenMediator;
        $r2 = <i4nc4mp.myLock.ScreenMediator$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.ScreenMediator$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.ScreenMediator$1: i4nc4mp.myLock.ScreenMediator this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.ScreenMediator$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.ScreenMediator$1;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.ScreenMediator$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.ScreenMediator$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_ON");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("screenon", "Screen just went ON!");
        r4[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ScreenMediator$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.ScreenMediator$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ScreenMediator$1", -2875853741699468426L);
        return $r0;
    }
}
class i4nc4mp.myLock.ScreenMediator$2 extends android.content.BroadcastReceiver
{
    public static final java.lang.String TAG;
    public static final java.lang.String Screenoff;
    final i4nc4mp.myLock.ScreenMediator this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.ScreenMediator)
    {
        i4nc4mp.myLock.ScreenMediator$2 r0;
        i4nc4mp.myLock.ScreenMediator r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.ScreenMediator$2;
        r1 := @parameter0: i4nc4mp.myLock.ScreenMediator;
        $r2 = <i4nc4mp.myLock.ScreenMediator$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.ScreenMediator$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.ScreenMediator$2: i4nc4mp.myLock.ScreenMediator this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.ScreenMediator$2 r0;
        android.content.Context r1;
        android.content.Intent r2, r6, $r8;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Class r5;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.ScreenMediator$2;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.ScreenMediator$2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.ScreenMediator$2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r7 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.SCREEN_OFF");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("screenoff", "Screen just went OFF");
        r5 = class "i4nc4mp/myLock/TouchGuard";
        $r8 = new android.content.Intent;
        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, r5);
        r6 = $r8;
        virtualinvoke r6.<android.content.Intent: android.content.Intent addFlags(int)>(268697600);
        virtualinvoke r1.<android.content.Context: void startActivity(android.content.Intent)>(r6);
        r4[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ScreenMediator$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.ScreenMediator$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ScreenMediator$2", -2875853733649389717L);
        return $r0;
    }
}
public class i4nc4mp.myLock.ScreenMediator extends android.app.Service
{
    android.content.BroadcastReceiver screenon;
    android.content.BroadcastReceiver screenoff;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.ScreenMediator r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.ScreenMediator$1 $r3;
        i4nc4mp.myLock.ScreenMediator$2 $r4;

        r0 := @this: i4nc4mp.myLock.ScreenMediator;
        $r1 = <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Service: void <init>()>();
        $r3 = new i4nc4mp.myLock.ScreenMediator$1;
        specialinvoke $r3.<i4nc4mp.myLock.ScreenMediator$1: void <init>(i4nc4mp.myLock.ScreenMediator)>(r0);
        r0.<i4nc4mp.myLock.ScreenMediator: android.content.BroadcastReceiver screenon> = $r3;
        $r4 = new i4nc4mp.myLock.ScreenMediator$2;
        specialinvoke $r4.<i4nc4mp.myLock.ScreenMediator$2: void <init>(i4nc4mp.myLock.ScreenMediator)>(r0);
        r0.<i4nc4mp.myLock.ScreenMediator: android.content.BroadcastReceiver screenoff> = $r4;
        r2[0] = 1;
        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        i4nc4mp.myLock.ScreenMediator r0;
        android.content.Intent r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.IntentFilter r4, r5, $r6, $r7;
        android.content.BroadcastReceiver $r8, $r10;

        r0 := @this: i4nc4mp.myLock.ScreenMediator;
        r1 := @parameter0: android.content.Intent;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Service: int onStartCommand(android.content.Intent,int,int)>(r1, i0, i1);
        $r6 = new android.content.IntentFilter;
        specialinvoke $r6.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.SCREEN_ON");
        r4 = $r6;
        $r7 = new android.content.IntentFilter;
        specialinvoke $r7.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.SCREEN_OFF");
        r5 = $r7;
        $r8 = r0.<i4nc4mp.myLock.ScreenMediator: android.content.BroadcastReceiver screenon>;
        virtualinvoke r0.<i4nc4mp.myLock.ScreenMediator: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r8, r4);
        $r10 = r0.<i4nc4mp.myLock.ScreenMediator: android.content.BroadcastReceiver screenoff>;
        virtualinvoke r0.<i4nc4mp.myLock.ScreenMediator: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r10, r5);
        r3[0] = 1;
        return 1;
    }

    public void onDestroy()
    {
        i4nc4mp.myLock.ScreenMediator r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.BroadcastReceiver $r3, $r4;

        r0 := @this: i4nc4mp.myLock.ScreenMediator;
        $r1 = <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<android.app.Service: void onDestroy()>();
        $r3 = r0.<i4nc4mp.myLock.ScreenMediator: android.content.BroadcastReceiver screenon>;
        virtualinvoke r0.<i4nc4mp.myLock.ScreenMediator: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);
        $r4 = r0.<i4nc4mp.myLock.ScreenMediator: android.content.BroadcastReceiver screenoff>;
        virtualinvoke r0.<i4nc4mp.myLock.ScreenMediator: void unregisterReceiver(android.content.BroadcastReceiver)>($r4);
        r2[0] = 1;
        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        i4nc4mp.myLock.ScreenMediator r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.ScreenMediator;
        r1 := @parameter0: android.content.Intent;
        $r2 = <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r3[0] = 1;
        return null;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <i4nc4mp.myLock.ScreenMediator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ScreenMediator", 434960079342807249L);
        return $r0;
    }
}
public class i4nc4mp.myLock.ToggleWidget extends android.appwidget.AppWidgetProvider
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.ToggleWidget r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.ToggleWidget;
        $r1 = <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.appwidget.AppWidgetProvider: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onEnabled(android.content.Context)
    {
        i4nc4mp.myLock.ToggleWidget r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences r4;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.ToggleWidget;
        r1 := @parameter0: android.content.Context;
        $r2 = <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = virtualinvoke r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        $z0 = interfaceinvoke r4.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("enabled", 0);
        staticinvoke <i4nc4mp.myLock.ToggleWidget: void makeView(android.content.Context,boolean)>(r1, $z0);
        r3[0] = 1;
        return;
    }

    public void onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])
    {
        i4nc4mp.myLock.ToggleWidget r0;
        android.content.Context r1;
        android.appwidget.AppWidgetManager r2;
        int[] r3;
        boolean[][] $r4;
        boolean[] r5;
        android.content.SharedPreferences r6;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.ToggleWidget;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.appwidget.AppWidgetManager;
        r3 := @parameter2: int[];
        $r4 = <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRi()>();

     label0:
        r5 = $r4[2];
        r6 = virtualinvoke r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        $z0 = interfaceinvoke r6.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("enabled", 0);
        staticinvoke <i4nc4mp.myLock.ToggleWidget: void makeView(android.content.Context,boolean)>(r1, $z0);
        r5[0] = 1;
        return;
    }

    public static void makeView(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        android.appwidget.AppWidgetManager r3;
        android.content.Intent r4, $r8;
        android.app.PendingIntent r5;
        android.widget.RemoteViews r6, $r10;
        int i0;
        android.content.ComponentName r7, $r12;
        java.lang.String $r11, $r13, $r15;
        java.lang.Class $r14;

        r0 := @parameter0: android.content.Context;
        z0 := @parameter1: boolean;
        $r1 = <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = staticinvoke <android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>(r0);
        $r8 = new android.content.Intent;
        specialinvoke $r8.<android.content.Intent: void <init>()>();
        r4 = $r8;
        virtualinvoke r4.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("i4nc4mp.myLock", "i4nc4mp.myLock.Toggler");
        r5 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>(r0, 0, r4, 0);
        $r10 = new android.widget.RemoteViews;
        $r11 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();
        specialinvoke $r10.<android.widget.RemoteViews: void <init>(java.lang.String,int)>($r11, 2130903046);
        r6 = $r10;
        virtualinvoke r6.<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>(2131230734, r5);
        r2[0] = 1;
        if z0 == 0 goto label1;

        i0 = 2130837506;
        r2[1] = 1;
        goto label2;

     label1:
        i0 = 2130837505;
        r2[2] = 1;

     label2:
        virtualinvoke r6.<android.widget.RemoteViews: void setImageViewResource(int,int)>(2131230734, i0);
        $r12 = new android.content.ComponentName;
        $r13 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();
        $r14 = class "i4nc4mp/myLock/ToggleWidget";
        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r12.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r13, $r15);
        r7 = $r12;
        virtualinvoke r3.<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>(r7, r6);
        r2[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <i4nc4mp.myLock.ToggleWidget: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/ToggleWidget", -5835576762853653308L);
        return $r0;
    }
}
public class i4nc4mp.myLock.Toggler extends android.app.Service
{
    private boolean target;
    private boolean active;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.Toggler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.Toggler;
        $r1 = <i4nc4mp.myLock.Toggler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.Toggler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Service: void <init>()>();
        r2[0] = 1;
        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        i4nc4mp.myLock.Toggler r0;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.Toggler;
        r1 := @parameter0: android.content.Intent;
        $r2 = <i4nc4mp.myLock.Toggler: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.Toggler: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return null;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        i4nc4mp.myLock.Toggler r0;
        android.content.Intent r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r13;
        android.content.Context $r5, $r14, $r15, $r17, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        android.widget.Toast $r16, $r18;

        r0 := @this: i4nc4mp.myLock.Toggler;
        r1 := @parameter0: android.content.Intent;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <i4nc4mp.myLock.Toggler: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.Toggler: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Toggler", "Starting");
        $r5 = virtualinvoke r0.<i4nc4mp.myLock.Toggler: android.content.Context getApplicationContext()>();
        $z0 = staticinvoke <i4nc4mp.myLock.ManageMediator: boolean bind(android.content.Context)>($r5);
        r0.<i4nc4mp.myLock.Toggler: boolean active> = $z0;
        $r4 = "i4nc4mp.myLock.TargetState";
        $z1 = r0.<i4nc4mp.myLock.Toggler: boolean active>;
        r3[0] = 1;
        if $z1 != 0 goto label1;

        $z2 = 1;
        r3[1] = 1;
        goto label2;

     label1:
        $z2 = 0;
        r3[2] = 1;

     label2:
        $z3 = virtualinvoke r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>($r4, $z2);
        r0.<i4nc4mp.myLock.Toggler: boolean target> = $z3;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target is ");
        $z4 = r0.<i4nc4mp.myLock.Toggler: boolean target>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and current state is ");
        $z5 = r0.<i4nc4mp.myLock.Toggler: boolean active>;
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("toggling", $r13);
        $z6 = r0.<i4nc4mp.myLock.Toggler: boolean target>;
        r3[3] = 1;
        if $z6 == 0 goto label3;

        $z7 = r0.<i4nc4mp.myLock.Toggler: boolean active>;
        r3[4] = 1;
        if $z7 != 0 goto label3;

        $r14 = virtualinvoke r0.<i4nc4mp.myLock.Toggler: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageMediator: void updateEnablePref(boolean,android.content.Context)>(1, $r14);
        $r15 = virtualinvoke r0.<i4nc4mp.myLock.Toggler: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageMediator: void startService(android.content.Context)>($r15);
        $r16 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, "myLock is now enabled", 0);
        virtualinvoke $r16.<android.widget.Toast: void show()>();
        r3[5] = 1;
        goto label5;

     label3:
        $z8 = r0.<i4nc4mp.myLock.Toggler: boolean active>;
        r3[6] = 1;
        if $z8 == 0 goto label4;

        $z9 = r0.<i4nc4mp.myLock.Toggler: boolean target>;
        r3[7] = 1;
        if $z9 != 0 goto label4;

        $r17 = virtualinvoke r0.<i4nc4mp.myLock.Toggler: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageMediator: void stopService(android.content.Context)>($r17);
        $r18 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, "myLock is now disabled", 0);
        virtualinvoke $r18.<android.widget.Toast: void show()>();
        $r19 = virtualinvoke r0.<i4nc4mp.myLock.Toggler: android.content.Context getApplicationContext()>();
        staticinvoke <i4nc4mp.myLock.ManageMediator: void updateEnablePref(boolean,android.content.Context)>(0, $r19);
        r3[8] = 1;
        goto label5;

     label4:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("toggler", "unhandled outcome - target was not a change");
        r3[9] = 1;

     label5:
        virtualinvoke r0.<i4nc4mp.myLock.Toggler: void stopSelf()>();
        r3[10] = 1;
        return 2;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.Toggler: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <i4nc4mp.myLock.Toggler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[11];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/Toggler", -6418705122310811533L);
        return $r0;
    }
}
class i4nc4mp.myLock.TouchGuard$1 extends android.content.BroadcastReceiver
{
    final i4nc4mp.myLock.TouchGuard this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(i4nc4mp.myLock.TouchGuard)
    {
        i4nc4mp.myLock.TouchGuard$1 r0;
        i4nc4mp.myLock.TouchGuard r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: i4nc4mp.myLock.TouchGuard$1;
        r1 := @parameter0: i4nc4mp.myLock.TouchGuard;
        $r2 = <i4nc4mp.myLock.TouchGuard$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.TouchGuard$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<i4nc4mp.myLock.TouchGuard$1: i4nc4mp.myLock.TouchGuard this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.TouchGuard$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5, $r6, $r7;
        boolean $z0, $z1, $z2;
        i4nc4mp.myLock.TouchGuard $r8, $r9;

        r0 := @this: i4nc4mp.myLock.TouchGuard$1;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.TouchGuard$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.TouchGuard$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PHONE_STATE");
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("state");
        $r7 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_IDLE>;
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        r4[2] = 1;
        if $z1 == 0 goto label2;

        $r8 = r0.<i4nc4mp.myLock.TouchGuard$1: i4nc4mp.myLock.TouchGuard this$0>;
        $z2 = virtualinvoke $r8.<i4nc4mp.myLock.TouchGuard: boolean isFinishing()>();
        r4[3] = 1;
        if $z2 != 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("call return to idle", "closing the touch lock");
        $r9 = r0.<i4nc4mp.myLock.TouchGuard$1: i4nc4mp.myLock.TouchGuard this$0>;
        virtualinvoke $r9.<i4nc4mp.myLock.TouchGuard: void finish()>();
        r4[4] = 1;

     label2:
        r4[5] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.TouchGuard$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.TouchGuard$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/TouchGuard$1", 7396382752198304803L);
        return $r0;
    }
}
public class i4nc4mp.myLock.TouchGuard extends android.app.Activity
{
    android.content.BroadcastReceiver PhoneState;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.TouchGuard r0;
        boolean[][] $r1;
        boolean[] r2;
        i4nc4mp.myLock.TouchGuard$1 $r3;

        r0 := @this: i4nc4mp.myLock.TouchGuard;
        $r1 = <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        $r3 = new i4nc4mp.myLock.TouchGuard$1;
        specialinvoke $r3.<i4nc4mp.myLock.TouchGuard$1: void <init>(i4nc4mp.myLock.TouchGuard)>(r0);
        r0.<i4nc4mp.myLock.TouchGuard: android.content.BroadcastReceiver PhoneState> = $r3;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        i4nc4mp.myLock.TouchGuard r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.IntentFilter r4, $r7;
        java.lang.String $r5;
        int $i0;
        android.view.Window $r6;
        android.content.BroadcastReceiver $r8;

        r0 := @this: i4nc4mp.myLock.TouchGuard;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        $r5 = <android.os.Build$VERSION: java.lang.String SDK>;
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
        r3[0] = 1;
        if $i0 <= 8 goto label1;

        $r6 = virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: android.view.Window getWindow()>();
        virtualinvoke $r6.<android.view.Window: void addFlags(int)>(4194304);
        r3[1] = 1;

     label1:
        virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: void setContentView(int)>(2130903041);
        $r7 = new android.content.IntentFilter;
        specialinvoke $r7.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.PHONE_STATE");
        r4 = $r7;
        $r8 = r0.<i4nc4mp.myLock.TouchGuard: android.content.BroadcastReceiver PhoneState>;
        virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r8, r4);
        r3[2] = 1;
        return;
    }

    protected void onDestroy()
    {
        i4nc4mp.myLock.TouchGuard r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.BroadcastReceiver $r3;

        r0 := @this: i4nc4mp.myLock.TouchGuard;
        $r1 = <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<android.app.Activity: void onDestroy()>();
        $r3 = r0.<i4nc4mp.myLock.TouchGuard: android.content.BroadcastReceiver PhoneState>;
        virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);
        r2[0] = 1;
        return;
    }

    public void onBackPressed()
    {
        i4nc4mp.myLock.TouchGuard r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.TouchGuard;
        $r1 = <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r2[0] = 1;
        return;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        i4nc4mp.myLock.TouchGuard r0;
        android.view.MotionEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.TouchGuard;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        r3[0] = 1;
        if $i0 != 2 goto label1;

        r3[1] = 1;
        return 1;

     label1:
        $z0 = specialinvoke r0.<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);
        r3[2] = 1;
        return $z0;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        i4nc4mp.myLock.TouchGuard r0;
        android.view.KeyEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        boolean $z1;

        r0 := @this: i4nc4mp.myLock.TouchGuard;
        r1 := @parameter0: android.view.KeyEvent;
        $r2 = <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();
        r3[0] = 1;
        lookupswitch($i0)
        {
            case 23: goto label2;
            case 27: goto label2;
            case 67: goto label2;
            case 80: goto label1;
            default: goto label3;
        };

     label1:
        r3[1] = 1;
        return 1;

     label2:
        virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: boolean moveTaskToBack(boolean)>(1);
        virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: void finish()>();
        r3[2] = 1;
        return 1;

     label3:
        $z1 = specialinvoke r0.<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);
        r3[3] = 1;
        return $z1;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        i4nc4mp.myLock.TouchGuard r0;
        int i0;
        android.view.KeyEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.TouchGuard;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.KeyEvent;
        $r2 = <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if i0 != 4 goto label1;

        virtualinvoke r1.<android.view.KeyEvent: void startTracking()>();
        r3[1] = 1;
        return 1;

     label1:
        $z0 = specialinvoke r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);
        r3[2] = 1;
        return $z0;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        i4nc4mp.myLock.TouchGuard r0;
        int i0;
        android.view.KeyEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.SharedPreferences $r4;
        boolean $z0;

        r0 := @this: i4nc4mp.myLock.TouchGuard;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.KeyEvent;
        $r2 = <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r3[0] = 1;
        if i0 != 4 goto label1;

        $r4 = virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("myLock", 0);
        $z0 = interfaceinvoke $r4.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("backUnlock", 0);
        r3[1] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: boolean moveTaskToBack(boolean)>(1);
        virtualinvoke r0.<i4nc4mp.myLock.TouchGuard: void finish()>();
        r3[2] = 1;
        return 1;

     label1:
        r3[3] = 1;
        return 0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.TouchGuard: boolean[][] $VRi()>();
        r1 = $r0[8];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <i4nc4mp.myLock.TouchGuard: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/TouchGuard", -5192340275251597775L);
        return $r0;
    }
}
public class i4nc4mp.myLock.myLockBootReceiver extends android.content.BroadcastReceiver
{
    public static final java.lang.String TAG;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        i4nc4mp.myLock.myLockBootReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: i4nc4mp.myLock.myLockBootReceiver;
        $r1 = <i4nc4mp.myLock.myLockBootReceiver: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <i4nc4mp.myLock.myLockBootReceiver: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        i4nc4mp.myLock.myLockBootReceiver r0;
        android.content.Context r1;
        android.content.Intent r2, $r13, $r14;
        boolean[][] $r3;
        boolean[] r4;
        android.content.ComponentName r5, r6, $r9;
        java.lang.String $r7, $r8, $r10, $r12, $r17, $r19, $r22, $r24;
        boolean $z0;
        java.lang.Class $r11;
        java.lang.StringBuilder $r15, $r16, $r18, $r20, $r21, $r23;

        r0 := @this: i4nc4mp.myLock.myLockBootReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <i4nc4mp.myLock.myLockBootReceiver: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <i4nc4mp.myLock.myLockBootReceiver: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r7 = "android.intent.action.BOOT_COMPLETED";
        $r8 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        r4[0] = 1;
        if $z0 == 0 goto label2;

        $r9 = new android.content.ComponentName;
        $r10 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();
        $r11 = class "i4nc4mp/myLock/BootHandler";
        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r9.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, $r12);
        r5 = $r9;
        $r13 = new android.content.Intent;
        specialinvoke $r13.<android.content.Intent: void <init>()>();
        $r14 = virtualinvoke $r13.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r5);
        r6 = virtualinvoke r1.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r14);
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("boot_complete", "The service loaded at boot!");
        r4[1] = 1;
        if null != r6 goto label1;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not start service ");
        $r17 = virtualinvoke r5.<android.content.ComponentName: java.lang.String toString()>();
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("myLockServiceManager", $r19);
        r4[2] = 1;

     label1:
        r4[3] = 1;
        goto label3;

     label2:
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received unexpected intent ");
        $r22 = virtualinvoke r2.<android.content.Intent: java.lang.String toString()>();
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("myLockServiceManager", $r24);
        r4[4] = 1;

     label3:
        r4[5] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <i4nc4mp.myLock.myLockBootReceiver: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <i4nc4mp.myLock.myLockBootReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "i4nc4mp/myLock/myLockBootReceiver", -1807082962701461493L);
        return $r0;
    }
}
