public class bpi.sdbm.illuminance.SolarPosition$SunCoordinates extends java.lang.Object
{
    public double zenithAngle;
    public double azimuth;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        bpi.sdbm.illuminance.SolarPosition$SunCoordinates r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: bpi.sdbm.illuminance.SolarPosition$SunCoordinates;
        $r1 = <bpi.sdbm.illuminance.SolarPosition$SunCoordinates: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <bpi.sdbm.illuminance.SolarPosition$SunCoordinates: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <bpi.sdbm.illuminance.SolarPosition$SunCoordinates: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <bpi.sdbm.illuminance.SolarPosition$SunCoordinates: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "bpi/sdbm/illuminance/SolarPosition$SunCoordinates", 9251206036812L);
        return $r0;
    }
}
public class bpi.sdbm.illuminance.SolarPosition extends java.lang.Object
{
    private static final double dEarthMeanRadius;
    private static final double dAstronomicalUnit;
    private static final double pi;
    private static final double twopi;
    private static final double rad;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        bpi.sdbm.illuminance.SolarPosition r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: bpi.sdbm.illuminance.SolarPosition;
        $r1 = <bpi.sdbm.illuminance.SolarPosition: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <bpi.sdbm.illuminance.SolarPosition: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static bpi.sdbm.illuminance.SolarPosition$SunCoordinates getSunPosition(java.util.Date, double, double)
    {
        java.util.Date r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, $d27, d28, $d29, d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, d45, $d46, $d47, $d48, $d49, $d50, d51, $d52, $d53, d54, d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, d64, $d65, $d66, $d67, d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79;
        boolean[][] $r1;
        boolean[] r2;
        bpi.sdbm.illuminance.SolarPosition$SunCoordinates r3, $r5;
        java.util.GregorianCalendar r4, $r6;
        long l0, l1, $l2, $l12, $l13, $l14, $l15, $l19, $l20, $l21, $l22, $l23, $l24, $l27, $l28, $l29, $l30, $l31, $l32, $l34, $l35;
        java.util.TimeZone $r7;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i16, $i17, $i18, $i25, $i26, $i33;
        byte $b36, $b37;

        r0 := @parameter0: java.util.Date;
        d0 := @parameter1: double;
        d1 := @parameter2: double;
        $r1 = <bpi.sdbm.illuminance.SolarPosition: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <bpi.sdbm.illuminance.SolarPosition: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r5 = new bpi.sdbm.illuminance.SolarPosition$SunCoordinates;
        specialinvoke $r5.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: void <init>()>();
        r3 = $r5;
        $r6 = new java.util.GregorianCalendar;
        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
        specialinvoke $r6.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r7);
        r4 = $r6;
        $l2 = virtualinvoke r0.<java.util.Date: long getTime()>();
        virtualinvoke r4.<java.util.Calendar: void setTimeInMillis(long)>($l2);
        $i3 = virtualinvoke r4.<java.util.Calendar: int get(int)>(11);
        $d16 = (double) $i3;
        $i4 = virtualinvoke r4.<java.util.Calendar: int get(int)>(12);
        $d17 = (double) $i4;
        $i5 = virtualinvoke r4.<java.util.Calendar: int get(int)>(13);
        $d18 = (double) $i5;
        $d19 = $d18 / 60.0;
        $d20 = $d17 + $d19;
        $d21 = $d20 / 60.0;
        d2 = $d16 + $d21;
        $i6 = virtualinvoke r4.<java.util.Calendar: int get(int)>(2);
        $i7 = $i6 + 1;
        $i8 = $i7 - 14;
        $i9 = $i8 / 12;
        l0 = (long) $i9;
        $i10 = virtualinvoke r4.<java.util.Calendar: int get(int)>(1);
        $i11 = $i10 + 4800;
        $l12 = (long) $i11;
        $l13 = $l12 + l0;
        $l14 = 1461L * $l13;
        $l15 = $l14 / 4L;
        $i16 = virtualinvoke r4.<java.util.Calendar: int get(int)>(2);
        $i17 = $i16 + 1;
        $i18 = $i17 - 2;
        $l19 = (long) $i18;
        $l20 = 12L * l0;
        $l21 = $l19 - $l20;
        $l22 = 367L * $l21;
        $l23 = $l22 / 12L;
        $l24 = $l15 + $l23;
        $i25 = virtualinvoke r4.<java.util.Calendar: int get(int)>(1);
        $i26 = $i25 + 4900;
        $l27 = (long) $i26;
        $l28 = $l27 + l0;
        $l29 = $l28 / 100L;
        $l30 = 3L * $l29;
        $l31 = $l30 / 4L;
        $l32 = $l24 - $l31;
        $i33 = virtualinvoke r4.<java.util.Calendar: int get(int)>(5);
        $l34 = (long) $i33;
        $l35 = $l32 + $l34;
        l1 = $l35 - 32075L;
        $d22 = (double) l1;
        $d23 = $d22 - 0.5;
        $d24 = d2 / 24.0;
        d3 = $d23 + $d24;
        d4 = d3 - 2451545.0;
        $d25 = 0.0010394594 * d4;
        d26 = 2.1429 - $d25;
        $d27 = 0.017202791698 * d4;
        d28 = 4.895063 + $d27;
        $d29 = 0.0172019699 * d4;
        d30 = 6.24006 + $d29;
        $d31 = staticinvoke <java.lang.Math: double sin(double)>(d30);
        $d32 = 0.03341607 * $d31;
        $d33 = d28 + $d32;
        $d34 = 2.0 * d30;
        $d35 = staticinvoke <java.lang.Math: double sin(double)>($d34);
        $d36 = 3.4894E-4 * $d35;
        $d37 = $d33 + $d36;
        $d38 = $d37 - 1.134E-4;
        $d39 = staticinvoke <java.lang.Math: double sin(double)>(d26);
        $d40 = 2.03E-5 * $d39;
        d5 = $d38 - $d40;
        $d41 = 6.214E-9 * d4;
        $d42 = 0.4090928 - $d41;
        $d43 = staticinvoke <java.lang.Math: double cos(double)>(d26);
        $d44 = 3.96E-5 * $d43;
        d6 = $d42 + $d44;
        d45 = staticinvoke <java.lang.Math: double sin(double)>(d5);
        $d46 = staticinvoke <java.lang.Math: double cos(double)>(d6);
        d7 = $d46 * d45;
        d8 = staticinvoke <java.lang.Math: double cos(double)>(d5);
        d9 = staticinvoke <java.lang.Math: double atan2(double,double)>(d7, d8);
        $b36 = d9 cmpg 0.0;
        r2[0] = 1;
        if $b36 >= 0 goto label1;

        d9 = d9 + 6.283185307179586;
        r2[1] = 1;

     label1:
        $d47 = staticinvoke <java.lang.Math: double sin(double)>(d6);
        $d48 = $d47 * d45;
        d10 = staticinvoke <java.lang.Math: double asin(double)>($d48);
        $d49 = 0.0657098283 * d4;
        $d50 = 6.6974243242 + $d49;
        d51 = $d50 + d2;
        $d52 = d51 * 15.0;
        $d53 = $d52 + d1;
        d54 = $d53 * 0.017453292519943295;
        d11 = d54 - d9;
        d55 = d0 * 0.017453292519943295;
        d12 = staticinvoke <java.lang.Math: double cos(double)>(d55);
        d13 = staticinvoke <java.lang.Math: double sin(double)>(d55);
        d14 = staticinvoke <java.lang.Math: double cos(double)>(d11);
        $d56 = d12 * d14;
        $d57 = staticinvoke <java.lang.Math: double cos(double)>(d10);
        $d58 = $d56 * $d57;
        $d59 = staticinvoke <java.lang.Math: double sin(double)>(d10);
        $d60 = $d59 * d13;
        $d61 = $d58 + $d60;
        $d62 = staticinvoke <java.lang.Math: double acos(double)>($d61);
        r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double zenithAngle> = $d62;
        $d63 = staticinvoke <java.lang.Math: double sin(double)>(d11);
        d64 = neg $d63;
        $d65 = staticinvoke <java.lang.Math: double tan(double)>(d10);
        $d66 = $d65 * d12;
        $d67 = d13 * d14;
        d68 = $d66 - $d67;
        $d69 = staticinvoke <java.lang.Math: double atan2(double,double)>(d64, d68);
        r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double azimuth> = $d69;
        $d70 = r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double azimuth>;
        $b37 = $d70 cmpg 0.0;
        r2[2] = 1;
        if $b37 >= 0 goto label2;

        $d71 = r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double azimuth>;
        $d72 = $d71 + 6.283185307179586;
        r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double azimuth> = $d72;
        r2[3] = 1;

     label2:
        $d73 = r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double azimuth>;
        $d74 = $d73 / 0.017453292519943295;
        r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double azimuth> = $d74;
        $d75 = r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double zenithAngle>;
        $d76 = staticinvoke <java.lang.Math: double sin(double)>($d75);
        d15 = 4.2587565907513806E-5 * $d76;
        $d77 = r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double zenithAngle>;
        $d78 = $d77 + d15;
        $d79 = $d78 / 0.017453292519943295;
        r3.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double zenithAngle> = $d79;
        r2[4] = 1;
        return r3;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Date $r4;

        r0 := @parameter0: java.lang.String[];
        $r1 = <bpi.sdbm.illuminance.SolarPosition: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <bpi.sdbm.illuminance.SolarPosition: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = new java.util.Date;
        specialinvoke $r4.<java.util.Date: void <init>()>();
        staticinvoke <bpi.sdbm.illuminance.SolarPosition: bpi.sdbm.illuminance.SolarPosition$SunCoordinates getSunPosition(java.util.Date,double,double)>($r4, 48.2, 16.4);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <bpi.sdbm.illuminance.SolarPosition: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <bpi.sdbm.illuminance.SolarPosition: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "bpi/sdbm/illuminance/SolarPosition", -394715862707877120L);
        return $r0;
    }
}
public class com.byarger.exchangeit.EasySSLSocketFactory extends java.lang.Object implements org.apache.http.conn.scheme.LayeredSocketFactory
{
    private javax.net.ssl.SSLContext sslcontext;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.byarger.exchangeit.EasySSLSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.byarger.exchangeit.EasySSLSocketFactory;
        $r1 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.byarger.exchangeit.EasySSLSocketFactory: javax.net.ssl.SSLContext sslcontext> = null;
        r2[0] = 1;
        return;
    }

    private static javax.net.ssl.SSLContext createEasySSLContext() throws java.io.IOException
    {
        boolean[][] $r0;
        boolean[] r1;
        javax.net.ssl.SSLContext r2;
        com.byarger.exchangeit.EasyX509TrustManager $r3;
        javax.net.ssl.TrustManager[] $r4;
        java.lang.Exception $r6, r7;
        java.io.IOException $r8;
        java.lang.String $r9;

        $r0 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];

     label1:
        r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");
        $r4 = newarray (javax.net.ssl.TrustManager)[1];
        $r3 = new com.byarger.exchangeit.EasyX509TrustManager;
        specialinvoke $r3.<com.byarger.exchangeit.EasyX509TrustManager: void <init>(java.security.KeyStore)>(null);
        $r4[0] = $r3;
        virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, $r4, null);
        r1[0] = 1;

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;
        r7 = $r6;
        $r8 = new java.io.IOException;
        $r9 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r9);
        r1[1] = 1;
        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private javax.net.ssl.SSLContext getSSLContext() throws java.io.IOException
    {
        com.byarger.exchangeit.EasySSLSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        javax.net.ssl.SSLContext $r3, $r4, $r5;

        r0 := @this: com.byarger.exchangeit.EasySSLSocketFactory;
        $r1 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<com.byarger.exchangeit.EasySSLSocketFactory: javax.net.ssl.SSLContext sslcontext>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: javax.net.ssl.SSLContext createEasySSLContext()>();
        r0.<com.byarger.exchangeit.EasySSLSocketFactory: javax.net.ssl.SSLContext sslcontext> = $r4;
        r2[1] = 1;

     label1:
        $r5 = r0.<com.byarger.exchangeit.EasySSLSocketFactory: javax.net.ssl.SSLContext sslcontext>;
        r2[2] = 1;
        return $r5;
    }

    public java.net.Socket connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams) throws java.io.IOException, java.net.UnknownHostException, org.apache.http.conn.ConnectTimeoutException
    {
        com.byarger.exchangeit.EasySSLSocketFactory r0;
        java.net.Socket r1, $r11;
        java.lang.String r2;
        int i0, i1, i2, i3;
        java.net.InetAddress r3;
        org.apache.http.params.HttpParams r4;
        boolean[][] $r5;
        boolean[] r6;
        java.net.InetSocketAddress r7, r9, $r10, $r13;
        javax.net.ssl.SSLSocket r8, $r12;

        r0 := @this: com.byarger.exchangeit.EasySSLSocketFactory;
        r1 := @parameter0: java.net.Socket;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r3 := @parameter3: java.net.InetAddress;
        i1 := @parameter4: int;
        r4 := @parameter5: org.apache.http.params.HttpParams;
        $r5 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r6 = $r5[3];
        i2 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4);
        i3 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4);
        $r10 = new java.net.InetSocketAddress;
        specialinvoke $r10.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r2, i0);
        r7 = $r10;
        r6[0] = 1;
        if r1 == null goto label1;

        $r11 = r1;
        r6[1] = 1;
        goto label2;

     label1:
        $r11 = virtualinvoke r0.<com.byarger.exchangeit.EasySSLSocketFactory: java.net.Socket createSocket()>();
        r6[2] = 1;

     label2:
        $r12 = (javax.net.ssl.SSLSocket) $r11;
        r8 = (javax.net.ssl.SSLSocket) $r12;
        r6[3] = 1;
        if r3 != null goto label3;

        r6[4] = 1;
        if i1 <= 0 goto label5;

     label3:
        r6[5] = 1;
        if i1 >= 0 goto label4;

        i1 = 0;
        r6[6] = 1;

     label4:
        $r13 = new java.net.InetSocketAddress;
        specialinvoke $r13.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r3, i1);
        r9 = $r13;
        virtualinvoke r8.<javax.net.ssl.SSLSocket: void bind(java.net.SocketAddress)>(r9);
        r6[7] = 1;

     label5:
        virtualinvoke r8.<javax.net.ssl.SSLSocket: void connect(java.net.SocketAddress,int)>(r7, i2);
        virtualinvoke r8.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>(i3);
        r6[8] = 1;
        return r8;
    }

    public java.net.Socket createSocket() throws java.io.IOException
    {
        com.byarger.exchangeit.EasySSLSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        java.net.Socket $r5;

        r0 := @this: com.byarger.exchangeit.EasySSLSocketFactory;
        $r1 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = specialinvoke r0.<com.byarger.exchangeit.EasySSLSocketFactory: javax.net.ssl.SSLContext getSSLContext()>();
        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();
        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();
        r2[0] = 1;
        return $r5;
    }

    public boolean isSecure(java.net.Socket) throws java.lang.IllegalArgumentException
    {
        com.byarger.exchangeit.EasySSLSocketFactory r0;
        java.net.Socket r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.byarger.exchangeit.EasySSLSocketFactory;
        r1 := @parameter0: java.net.Socket;
        $r2 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r3[0] = 1;
        return 1;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException, java.net.UnknownHostException
    {
        com.byarger.exchangeit.EasySSLSocketFactory r0;
        java.net.Socket r1, $r7;
        java.lang.String r2;
        int i0;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        javax.net.ssl.SSLContext $r5;
        javax.net.ssl.SSLSocketFactory $r6;

        r0 := @this: com.byarger.exchangeit.EasySSLSocketFactory;
        r1 := @parameter0: java.net.Socket;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        $r3 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r4 = $r3[6];
        $r5 = specialinvoke r0.<com.byarger.exchangeit.EasySSLSocketFactory: javax.net.ssl.SSLContext getSSLContext()>();
        $r6 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();
        $r7 = virtualinvoke $r6.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r1, r2, i0, z0);
        r4[0] = 1;
        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        com.byarger.exchangeit.EasySSLSocketFactory r0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Class $r4;
        boolean $z0, $z1;

        r0 := @this: com.byarger.exchangeit.EasySSLSocketFactory;
        r1 := @parameter0: java.lang.Object;
        $r2 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r3[0] = 1;
        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "com/byarger/exchangeit/EasySSLSocketFactory");
        r3[1] = 1;
        if $z0 == 0 goto label1;

        $z1 = 1;
        r3[2] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return $z1;
    }

    public int hashCode()
    {
        com.byarger.exchangeit.EasySSLSocketFactory r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Class $r3;
        int $i0;

        r0 := @this: com.byarger.exchangeit.EasySSLSocketFactory;
        $r1 = <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = class "com/byarger/exchangeit/EasySSLSocketFactory";
        $i0 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();
        r2[0] = 1;
        return $i0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <com.byarger.exchangeit.EasySSLSocketFactory: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[2];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[9];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[5];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/byarger/exchangeit/EasySSLSocketFactory", -5290596773637393213L);
        return $r0;
    }
}
public class com.byarger.exchangeit.EasyX509TrustManager extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
    private javax.net.ssl.X509TrustManager standardTrustManager;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException
    {
        com.byarger.exchangeit.EasyX509TrustManager r0;
        java.security.KeyStore r1;
        boolean[][] $r2;
        boolean[] r3;
        javax.net.ssl.TrustManagerFactory r4;
        javax.net.ssl.TrustManager[] r5;
        java.lang.String $r6;
        int $i0;
        java.security.NoSuchAlgorithmException $r7;
        javax.net.ssl.TrustManager $r8;
        javax.net.ssl.X509TrustManager $r9;

        r0 := @this: com.byarger.exchangeit.EasyX509TrustManager;
        r1 := @parameter0: java.security.KeyStore;
        $r2 = <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.byarger.exchangeit.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager> = null;
        $r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();
        r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6);
        virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1);
        r5 = virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();
        $i0 = lengthof r5;
        r3[0] = 1;
        if $i0 != 0 goto label1;

        $r7 = new java.security.NoSuchAlgorithmException;
        specialinvoke $r7.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>("no trust manager found");
        r3[1] = 1;
        throw $r7;

     label1:
        $r8 = r5[0];
        $r9 = (javax.net.ssl.X509TrustManager) $r8;
        r0.<com.byarger.exchangeit.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager> = $r9;
        r3[2] = 1;
        return;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.byarger.exchangeit.EasyX509TrustManager r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        javax.net.ssl.X509TrustManager $r5;

        r0 := @this: com.byarger.exchangeit.EasyX509TrustManager;
        r1 := @parameter0: java.security.cert.X509Certificate[];
        r2 := @parameter1: java.lang.String;
        $r3 = <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = r0.<com.byarger.exchangeit.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager>;
        interfaceinvoke $r5.<javax.net.ssl.X509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>(r1, r2);
        r4[0] = 1;
        return;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.byarger.exchangeit.EasyX509TrustManager r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        int $i0;
        java.security.cert.X509Certificate $r5;
        javax.net.ssl.X509TrustManager $r6;

        r0 := @this: com.byarger.exchangeit.EasyX509TrustManager;
        r1 := @parameter0: java.security.cert.X509Certificate[];
        r2 := @parameter1: java.lang.String;
        $r3 = <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        r4[0] = 1;
        if r1 == null goto label1;

        $i0 = lengthof r1;
        r4[1] = 1;
        if $i0 != 1 goto label1;

        $r5 = r1[0];
        virtualinvoke $r5.<java.security.cert.X509Certificate: void checkValidity()>();
        r4[2] = 1;
        goto label2;

     label1:
        $r6 = r0.<com.byarger.exchangeit.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager>;
        interfaceinvoke $r6.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>(r1, r2);
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return;
    }

    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        com.byarger.exchangeit.EasyX509TrustManager r0;
        boolean[][] $r1;
        boolean[] r2;
        javax.net.ssl.X509TrustManager $r3;
        java.security.cert.X509Certificate[] $r4;

        r0 := @this: com.byarger.exchangeit.EasyX509TrustManager;
        $r1 = <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<com.byarger.exchangeit.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager>;
        $r4 = interfaceinvoke $r3.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();
        r2[0] = 1;
        return $r4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.byarger.exchangeit.EasyX509TrustManager: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[3];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/byarger/exchangeit/EasyX509TrustManager", -8481454540147733903L);
        return $r0;
    }
}
final class com.example.widget.NumberPicker$1 extends java.lang.Object implements com.example.widget.NumberPicker$Formatter
{
    final java.lang.StringBuilder mBuilder;
    final java.util.Formatter mFmt;
    final java.lang.Object[] mArgs;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        com.example.widget.NumberPicker$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5;
        java.util.Formatter $r4;
        java.lang.Object[] $r6;

        r0 := @this: com.example.widget.NumberPicker$1;
        $r1 = <com.example.widget.NumberPicker$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r0.<com.example.widget.NumberPicker$1: java.lang.StringBuilder mBuilder> = $r3;
        $r4 = new java.util.Formatter;
        $r5 = r0.<com.example.widget.NumberPicker$1: java.lang.StringBuilder mBuilder>;
        specialinvoke $r4.<java.util.Formatter: void <init>(java.lang.Appendable)>($r5);
        r0.<com.example.widget.NumberPicker$1: java.util.Formatter mFmt> = $r4;
        $r6 = newarray (java.lang.Object)[1];
        r0.<com.example.widget.NumberPicker$1: java.lang.Object[] mArgs> = $r6;
        r2[0] = 1;
        return;
    }

    public java.lang.String toString(int)
    {
        com.example.widget.NumberPicker$1 r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Object[] $r3, $r9;
        java.lang.Integer $r4;
        java.lang.StringBuilder $r5, $r6;
        java.util.Formatter $r8, $r11;
        java.lang.String $r12;

        r0 := @this: com.example.widget.NumberPicker$1;
        i0 := @parameter0: int;
        $r1 = <com.example.widget.NumberPicker$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.example.widget.NumberPicker$1: java.lang.Object[] mArgs>;
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r3[0] = $r4;
        $r5 = r0.<com.example.widget.NumberPicker$1: java.lang.StringBuilder mBuilder>;
        $r6 = r0.<com.example.widget.NumberPicker$1: java.lang.StringBuilder mBuilder>;
        $i1 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i1);
        $r8 = r0.<com.example.widget.NumberPicker$1: java.util.Formatter mFmt>;
        $r9 = r0.<com.example.widget.NumberPicker$1: java.lang.Object[] mArgs>;
        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%02d", $r9);
        $r11 = r0.<com.example.widget.NumberPicker$1: java.util.Formatter mFmt>;
        $r12 = virtualinvoke $r11.<java.util.Formatter: java.lang.String toString()>();
        r2[0] = 1;
        return $r12;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.example.widget.NumberPicker$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.example.widget.NumberPicker$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/widget/NumberPicker$1", 6554766182854568676L);
        return $r0;
    }
}
final class com.example.widget.NumberPicker$2 extends java.lang.Object implements com.example.widget.NumberPicker$Formatter
{
    final java.lang.StringBuilder mBuilder;
    final java.util.Formatter mFmt;
    final java.lang.Object[] mArgs;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        com.example.widget.NumberPicker$2 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5;
        java.util.Formatter $r4;
        java.lang.Object[] $r6;

        r0 := @this: com.example.widget.NumberPicker$2;
        $r1 = <com.example.widget.NumberPicker$2: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker$2: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r0.<com.example.widget.NumberPicker$2: java.lang.StringBuilder mBuilder> = $r3;
        $r4 = new java.util.Formatter;
        $r5 = r0.<com.example.widget.NumberPicker$2: java.lang.StringBuilder mBuilder>;
        specialinvoke $r4.<java.util.Formatter: void <init>(java.lang.Appendable)>($r5);
        r0.<com.example.widget.NumberPicker$2: java.util.Formatter mFmt> = $r4;
        $r6 = newarray (java.lang.Object)[1];
        r0.<com.example.widget.NumberPicker$2: java.lang.Object[] mArgs> = $r6;
        r2[0] = 1;
        return;
    }

    public java.lang.String toString(int)
    {
        com.example.widget.NumberPicker$2 r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Object[] $r3, $r9;
        java.lang.Integer $r4;
        java.lang.StringBuilder $r5, $r6;
        java.util.Formatter $r8, $r11;
        java.lang.String $r12;

        r0 := @this: com.example.widget.NumberPicker$2;
        i0 := @parameter0: int;
        $r1 = <com.example.widget.NumberPicker$2: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker$2: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.example.widget.NumberPicker$2: java.lang.Object[] mArgs>;
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r3[0] = $r4;
        $r5 = r0.<com.example.widget.NumberPicker$2: java.lang.StringBuilder mBuilder>;
        $r6 = r0.<com.example.widget.NumberPicker$2: java.lang.StringBuilder mBuilder>;
        $i1 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i1);
        $r8 = r0.<com.example.widget.NumberPicker$2: java.util.Formatter mFmt>;
        $r9 = r0.<com.example.widget.NumberPicker$2: java.lang.Object[] mArgs>;
        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%03d", $r9);
        $r11 = r0.<com.example.widget.NumberPicker$2: java.util.Formatter mFmt>;
        $r12 = virtualinvoke $r11.<java.util.Formatter: java.lang.String toString()>();
        r2[0] = 1;
        return $r12;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.example.widget.NumberPicker$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.example.widget.NumberPicker$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/widget/NumberPicker$2", 6554766182854568676L);
        return $r0;
    }
}
class com.example.widget.NumberPicker$3 extends java.lang.Object implements java.lang.Runnable
{
    final com.example.widget.NumberPicker this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker$3 r0;
        com.example.widget.NumberPicker r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPicker$3;
        r1 := @parameter0: com.example.widget.NumberPicker;
        $r2 = <com.example.widget.NumberPicker$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void run()
    {
        com.example.widget.NumberPicker$3 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.widget.NumberPicker $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r14;
        boolean $z0, $z2;
        int $i0, $i1, $i3, $i4;
        android.os.Handler $r7, $r13;
        long $l2, $l5;

        r0 := @this: com.example.widget.NumberPicker$3;
        $r1 = <com.example.widget.NumberPicker$3: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker$3: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $z0 = staticinvoke <com.example.widget.NumberPicker: boolean access$000(com.example.widget.NumberPicker)>($r3);
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $r5 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $i0 = $r5.<com.example.widget.NumberPicker: int mCurrent>;
        $i1 = $i0 + 1;
        virtualinvoke $r4.<com.example.widget.NumberPicker: void changeCurrent(int)>($i1);
        $r6 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $r7 = staticinvoke <com.example.widget.NumberPicker: android.os.Handler access$200(com.example.widget.NumberPicker)>($r6);
        $r8 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $l2 = staticinvoke <com.example.widget.NumberPicker: long access$100(com.example.widget.NumberPicker)>($r8);
        virtualinvoke $r7.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, $l2);
        r2[1] = 1;
        goto label2;

     label1:
        $r9 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $z2 = staticinvoke <com.example.widget.NumberPicker: boolean access$300(com.example.widget.NumberPicker)>($r9);
        r2[2] = 1;
        if $z2 == 0 goto label2;

        $r10 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $r11 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $i3 = $r11.<com.example.widget.NumberPicker: int mCurrent>;
        $i4 = $i3 - 1;
        virtualinvoke $r10.<com.example.widget.NumberPicker: void changeCurrent(int)>($i4);
        $r12 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $r13 = staticinvoke <com.example.widget.NumberPicker: android.os.Handler access$200(com.example.widget.NumberPicker)>($r12);
        $r14 = r0.<com.example.widget.NumberPicker$3: com.example.widget.NumberPicker this$0>;
        $l5 = staticinvoke <com.example.widget.NumberPicker: long access$100(com.example.widget.NumberPicker)>($r14);
        virtualinvoke $r13.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, $l5);
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.example.widget.NumberPicker$3: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.example.widget.NumberPicker$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/widget/NumberPicker$3", 5567480837183042810L);
        return $r0;
    }
}
public interface  com.example.widget.NumberPicker$Formatter extends java.lang.Object
{

    public abstract java.lang.String toString(int);
}
class com.example.widget.NumberPicker$NumberPickerInputFilter extends java.lang.Object implements android.text.InputFilter
{
    final com.example.widget.NumberPicker this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker$NumberPickerInputFilter r0;
        com.example.widget.NumberPicker r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPicker$NumberPickerInputFilter;
        r1 := @parameter0: com.example.widget.NumberPicker;
        $r2 = <com.example.widget.NumberPicker$NumberPickerInputFilter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker$NumberPickerInputFilter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.example.widget.NumberPicker$NumberPickerInputFilter: com.example.widget.NumberPicker this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int)
    {
        com.example.widget.NumberPicker$NumberPickerInputFilter r0;
        java.lang.CharSequence r1, $r14, $r15, $r17, $r21;
        int i0, i1, i2, i3, i4, i5, $i6;
        android.text.Spanned r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5, r6, r7, r9, $r18, $r23, r25;
        java.lang.String[] r8, $r11;
        com.example.widget.NumberPicker $r10, $r12, $r24;
        android.text.InputFilter $r13;
        java.lang.StringBuilder $r16, $r19, $r20, $r22;
        boolean $z0;

        r0 := @this: com.example.widget.NumberPicker$NumberPickerInputFilter;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: android.text.Spanned;
        i2 := @parameter4: int;
        i3 := @parameter5: int;
        $r3 = <com.example.widget.NumberPicker$NumberPickerInputFilter: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.example.widget.NumberPicker$NumberPickerInputFilter: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r10 = r0.<com.example.widget.NumberPicker$NumberPickerInputFilter: com.example.widget.NumberPicker this$0>;
        $r11 = staticinvoke <com.example.widget.NumberPicker: java.lang.String[] access$600(com.example.widget.NumberPicker)>($r10);
        r4[0] = 1;
        if $r11 != null goto label1;

        $r12 = r0.<com.example.widget.NumberPicker$NumberPickerInputFilter: com.example.widget.NumberPicker this$0>;
        $r13 = staticinvoke <com.example.widget.NumberPicker: android.text.InputFilter access$700(com.example.widget.NumberPicker)>($r12);
        $r14 = interfaceinvoke $r13.<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>(r1, i0, i1, r2, i2, i3);
        r4[1] = 1;
        return $r14;

     label1:
        $r15 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);
        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = interfaceinvoke r2.<android.text.Spanned: java.lang.CharSequence subSequence(int,int)>(0, i2);
        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);
        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
        $i6 = interfaceinvoke r2.<android.text.Spanned: int length()>();
        $r21 = interfaceinvoke r2.<android.text.Spanned: java.lang.CharSequence subSequence(int,int)>(i3, $i6);
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);
        r6 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);
        r7 = virtualinvoke $r23.<java.lang.String: java.lang.String toLowerCase()>();
        $r24 = r0.<com.example.widget.NumberPicker$NumberPickerInputFilter: com.example.widget.NumberPicker this$0>;
        r8 = staticinvoke <com.example.widget.NumberPicker: java.lang.String[] access$600(com.example.widget.NumberPicker)>($r24);
        i4 = lengthof r8;
        i5 = 0;
        r4[2] = 1;

     label2:
        r4[3] = 1;
        if i5 >= i4 goto label4;

        r9 = r8[i5];
        r25 = virtualinvoke r9.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>(r7);
        r4[4] = 1;
        if $z0 == 0 goto label3;

        r4[5] = 1;
        return r5;

     label3:
        i5 = i5 + 1;
        r4[6] = 1;
        goto label2;

     label4:
        r4[7] = 1;
        return "";
    }

    void <init>(com.example.widget.NumberPicker, com.example.widget.NumberPicker$1)
    {
        com.example.widget.NumberPicker$NumberPickerInputFilter r0;
        com.example.widget.NumberPicker r1;
        com.example.widget.NumberPicker$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.example.widget.NumberPicker$NumberPickerInputFilter;
        r1 := @parameter0: com.example.widget.NumberPicker;
        r2 := @parameter1: com.example.widget.NumberPicker$1;
        $r3 = <com.example.widget.NumberPicker$NumberPickerInputFilter: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.example.widget.NumberPicker$NumberPickerInputFilter: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        specialinvoke r0.<com.example.widget.NumberPicker$NumberPickerInputFilter: void <init>(com.example.widget.NumberPicker)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.example.widget.NumberPicker$NumberPickerInputFilter: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <com.example.widget.NumberPicker$NumberPickerInputFilter: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/widget/NumberPicker$NumberPickerInputFilter", -6835087301444364868L);
        return $r0;
    }
}
class com.example.widget.NumberPicker$NumberRangeKeyListener extends android.text.method.NumberKeyListener
{
    final com.example.widget.NumberPicker this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker$NumberRangeKeyListener r0;
        com.example.widget.NumberPicker r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPicker$NumberRangeKeyListener;
        r1 := @parameter0: com.example.widget.NumberPicker;
        $r2 = <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.example.widget.NumberPicker$NumberRangeKeyListener: com.example.widget.NumberPicker this$0> = r1;
        specialinvoke r0.<android.text.method.NumberKeyListener: void <init>()>();
        r3[0] = 1;
        return;
    }

    public int getInputType()
    {
        com.example.widget.NumberPicker$NumberRangeKeyListener r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.widget.NumberPicker$NumberRangeKeyListener;
        $r1 = <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r2[0] = 1;
        return 2;
    }

    protected char[] getAcceptedChars()
    {
        com.example.widget.NumberPicker$NumberRangeKeyListener r0;
        boolean[][] $r1;
        boolean[] r2;
        char[] $r3;

        r0 := @this: com.example.widget.NumberPicker$NumberRangeKeyListener;
        $r1 = <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = staticinvoke <com.example.widget.NumberPicker: char[] access$800()>();
        r2[0] = 1;
        return $r3;
    }

    public java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int)
    {
        com.example.widget.NumberPicker$NumberRangeKeyListener r0;
        java.lang.CharSequence r1, r5, $r8, $r12;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.text.Spanned r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r6, $r9, $r14;
        java.lang.StringBuilder $r7, $r10, $r11, $r13;
        boolean $z0;
        com.example.widget.NumberPicker $r15, $r16;

        r0 := @this: com.example.widget.NumberPicker$NumberRangeKeyListener;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: android.text.Spanned;
        i2 := @parameter4: int;
        i3 := @parameter5: int;
        $r3 = <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        r5 = specialinvoke r0.<android.text.method.NumberKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>(r1, i0, i1, r2, i2, i3);
        r4[0] = 1;
        if r5 != null goto label1;

        r5 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);
        r4[1] = 1;

     label1:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = interfaceinvoke r2.<android.text.Spanned: java.lang.CharSequence subSequence(int,int)>(0, i2);
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
        $i5 = interfaceinvoke r2.<android.text.Spanned: int length()>();
        $r12 = interfaceinvoke r2.<android.text.Spanned: java.lang.CharSequence subSequence(int,int)>(i3, $i5);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);
        r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = "";
        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r6);
        r4[2] = 1;
        if $z0 == 0 goto label2;

        r4[3] = 1;
        return r6;

     label2:
        $r15 = r0.<com.example.widget.NumberPicker$NumberRangeKeyListener: com.example.widget.NumberPicker this$0>;
        i4 = staticinvoke <com.example.widget.NumberPicker: int access$900(com.example.widget.NumberPicker,java.lang.String)>($r15, r6);
        $r16 = r0.<com.example.widget.NumberPicker$NumberRangeKeyListener: com.example.widget.NumberPicker this$0>;
        $i6 = $r16.<com.example.widget.NumberPicker: int mEnd>;
        r4[4] = 1;
        if i4 <= $i6 goto label3;

        r4[5] = 1;
        return "";

     label3:
        r4[6] = 1;
        return r5;
    }

    void <init>(com.example.widget.NumberPicker, com.example.widget.NumberPicker$1)
    {
        com.example.widget.NumberPicker$NumberRangeKeyListener r0;
        com.example.widget.NumberPicker r1;
        com.example.widget.NumberPicker$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.example.widget.NumberPicker$NumberRangeKeyListener;
        r1 := @parameter0: com.example.widget.NumberPicker;
        r2 := @parameter1: com.example.widget.NumberPicker$1;
        $r3 = <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRi()>();

     label0:
        r4 = $r3[4];
        specialinvoke r0.<com.example.widget.NumberPicker$NumberRangeKeyListener: void <init>(com.example.widget.NumberPicker)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <com.example.widget.NumberPicker$NumberRangeKeyListener: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[7];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/widget/NumberPicker$NumberRangeKeyListener", -2210854548499626407L);
        return $r0;
    }
}
public interface  com.example.widget.NumberPicker$OnChangedListener extends java.lang.Object
{

    public abstract void onChanged(com.example.widget.NumberPicker, int, int);
}
public class com.example.widget.NumberPicker extends android.widget.LinearLayout implements android.view.View$OnClickListener, android.view.View$OnFocusChangeListener, android.view.View$OnLongClickListener
{
    private static final java.lang.String TAG;
    private static final int DEFAULT_MAX;
    private static final int DEFAULT_MIN;
    public static final com.example.widget.NumberPicker$Formatter TWO_DIGIT_FORMATTER;
    public static final com.example.widget.NumberPicker$Formatter THREE_DIGIT_FORMATTER;
    private final android.os.Handler mHandler;
    private final java.lang.Runnable mRunnable;
    private final android.widget.EditText mText;
    private final android.text.InputFilter mNumberInputFilter;
    private java.lang.String[] mDisplayedValues;
    protected int mStart;
    protected int mEnd;
    protected int mCurrent;
    protected int mPrevious;
    private com.example.widget.NumberPicker$OnChangedListener mListener;
    private com.example.widget.NumberPicker$Formatter mFormatter;
    private long mSpeed;
    private boolean mIncrement;
    private boolean mDecrement;
    private static final char[] DIGIT_CHARACTERS;
    private com.example.widget.NumberPickerButton mIncrementButton;
    private com.example.widget.NumberPickerButton mDecrementButton;
    private static final boolean[][] $VRc;

    public void <init>(android.content.Context)
    {
        com.example.widget.NumberPicker r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: android.content.Context;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<com.example.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);
        r3[0] = 1;
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.example.widget.NumberPicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        $r3 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        specialinvoke r0.<com.example.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);
        r4[0] = 1;
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.example.widget.NumberPicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        boolean[][] $r3;
        boolean[] r4;
        android.view.LayoutInflater r5;
        com.example.widget.NumberPicker$NumberPickerInputFilter r6, $r11;
        com.example.widget.NumberPicker$3 $r7;
        java.lang.Object $r8;
        android.os.Handler $r10;
        com.example.widget.NumberPicker$NumberRangeKeyListener $r12;
        android.view.View $r13, $r18, $r23;
        com.example.widget.NumberPickerButton $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22;
        android.widget.EditText $r24, $r25, $r26, $r28;
        android.text.InputFilter[] $r27;
        boolean $z0;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        i0 := @parameter2: int;
        $r3 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        $r7 = new com.example.widget.NumberPicker$3;
        specialinvoke $r7.<com.example.widget.NumberPicker$3: void <init>(com.example.widget.NumberPicker)>(r0);
        r0.<com.example.widget.NumberPicker: java.lang.Runnable mRunnable> = $r7;
        r0.<com.example.widget.NumberPicker: long mSpeed> = 300L;
        virtualinvoke r0.<com.example.widget.NumberPicker: void setOrientation(int)>(1);
        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");
        r5 = (android.view.LayoutInflater) $r8;
        virtualinvoke r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130903041, r0, 1);
        $r10 = new android.os.Handler;
        specialinvoke $r10.<android.os.Handler: void <init>()>();
        r0.<com.example.widget.NumberPicker: android.os.Handler mHandler> = $r10;
        $r11 = new com.example.widget.NumberPicker$NumberPickerInputFilter;
        specialinvoke $r11.<com.example.widget.NumberPicker$NumberPickerInputFilter: void <init>(com.example.widget.NumberPicker,com.example.widget.NumberPicker$1)>(r0, null);
        r6 = $r11;
        $r12 = new com.example.widget.NumberPicker$NumberRangeKeyListener;
        specialinvoke $r12.<com.example.widget.NumberPicker$NumberRangeKeyListener: void <init>(com.example.widget.NumberPicker,com.example.widget.NumberPicker$1)>(r0, null);
        r0.<com.example.widget.NumberPicker: android.text.InputFilter mNumberInputFilter> = $r12;
        $r13 = virtualinvoke r0.<com.example.widget.NumberPicker: android.view.View findViewById(int)>(2131034114);
        $r14 = (com.example.widget.NumberPickerButton) $r13;
        r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mIncrementButton> = $r14;
        $r15 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mIncrementButton>;
        virtualinvoke $r15.<com.example.widget.NumberPickerButton: void setOnClickListener(android.view.View$OnClickListener)>(r0);
        $r16 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mIncrementButton>;
        virtualinvoke $r16.<com.example.widget.NumberPickerButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0);
        $r17 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mIncrementButton>;
        virtualinvoke $r17.<com.example.widget.NumberPickerButton: void setNumberPicker(com.example.widget.NumberPicker)>(r0);
        $r18 = virtualinvoke r0.<com.example.widget.NumberPicker: android.view.View findViewById(int)>(2131034116);
        $r19 = (com.example.widget.NumberPickerButton) $r18;
        r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mDecrementButton> = $r19;
        $r20 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mDecrementButton>;
        virtualinvoke $r20.<com.example.widget.NumberPickerButton: void setOnClickListener(android.view.View$OnClickListener)>(r0);
        $r21 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mDecrementButton>;
        virtualinvoke $r21.<com.example.widget.NumberPickerButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0);
        $r22 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mDecrementButton>;
        virtualinvoke $r22.<com.example.widget.NumberPickerButton: void setNumberPicker(com.example.widget.NumberPicker)>(r0);
        $r23 = virtualinvoke r0.<com.example.widget.NumberPicker: android.view.View findViewById(int)>(2131034115);
        $r24 = (android.widget.EditText) $r23;
        r0.<com.example.widget.NumberPicker: android.widget.EditText mText> = $r24;
        $r25 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        virtualinvoke $r25.<android.widget.EditText: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>(r0);
        $r26 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        $r27 = newarray (android.text.InputFilter)[1];
        $r27[0] = r6;
        virtualinvoke $r26.<android.widget.EditText: void setFilters(android.text.InputFilter[])>($r27);
        $r28 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        virtualinvoke $r28.<android.widget.EditText: void setRawInputType(int)>(2);
        $z0 = virtualinvoke r0.<com.example.widget.NumberPicker: boolean isEnabled()>();
        r4[0] = 1;
        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.example.widget.NumberPicker: void setEnabled(boolean)>(0);
        r4[1] = 1;

     label1:
        r0.<com.example.widget.NumberPicker: int mStart> = 0;
        r0.<com.example.widget.NumberPicker: int mEnd> = 200;
        r4[2] = 1;
        return;
    }

    public void setEnabled(boolean)
    {
        com.example.widget.NumberPicker r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.widget.NumberPickerButton $r3, $r4;
        android.widget.EditText $r5;

        r0 := @this: com.example.widget.NumberPicker;
        z0 := @parameter0: boolean;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        specialinvoke r0.<android.widget.LinearLayout: void setEnabled(boolean)>(z0);
        $r3 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mIncrementButton>;
        virtualinvoke $r3.<com.example.widget.NumberPickerButton: void setEnabled(boolean)>(z0);
        $r4 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPickerButton mDecrementButton>;
        virtualinvoke $r4.<com.example.widget.NumberPickerButton: void setEnabled(boolean)>(z0);
        $r5 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        virtualinvoke $r5.<android.widget.EditText: void setEnabled(boolean)>(z0);
        r2[0] = 1;
        return;
    }

    public void setOnChangeListener(com.example.widget.NumberPicker$OnChangedListener)
    {
        com.example.widget.NumberPicker r0;
        com.example.widget.NumberPicker$OnChangedListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: com.example.widget.NumberPicker$OnChangedListener;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r0.<com.example.widget.NumberPicker: com.example.widget.NumberPicker$OnChangedListener mListener> = r1;
        r3[0] = 1;
        return;
    }

    public void setFormatter(com.example.widget.NumberPicker$Formatter)
    {
        com.example.widget.NumberPicker r0;
        com.example.widget.NumberPicker$Formatter r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: com.example.widget.NumberPicker$Formatter;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r0.<com.example.widget.NumberPicker: com.example.widget.NumberPicker$Formatter mFormatter> = r1;
        r3[0] = 1;
        return;
    }

    public void setRange(int, int)
    {
        com.example.widget.NumberPicker r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.widget.NumberPicker;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r0.<com.example.widget.NumberPicker: int mStart> = i0;
        r0.<com.example.widget.NumberPicker: int mEnd> = i1;
        r0.<com.example.widget.NumberPicker: int mCurrent> = i0;
        virtualinvoke r0.<com.example.widget.NumberPicker: void updateView()>();
        r2[0] = 1;
        return;
    }

    public void setRange(int, int, java.lang.String[])
    {
        com.example.widget.NumberPicker r0;
        int i0, i1;
        java.lang.String[] r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPicker;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.lang.String[];
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r0.<com.example.widget.NumberPicker: java.lang.String[] mDisplayedValues> = r1;
        r0.<com.example.widget.NumberPicker: int mStart> = i0;
        r0.<com.example.widget.NumberPicker: int mEnd> = i1;
        r0.<com.example.widget.NumberPicker: int mCurrent> = i0;
        virtualinvoke r0.<com.example.widget.NumberPicker: void updateView()>();
        r3[0] = 1;
        return;
    }

    public void setCurrent(int)
    {
        com.example.widget.NumberPicker r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.widget.NumberPicker;
        i0 := @parameter0: int;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r0.<com.example.widget.NumberPicker: int mCurrent> = i0;
        virtualinvoke r0.<com.example.widget.NumberPicker: void updateView()>();
        r2[0] = 1;
        return;
    }

    public void setSpeed(long)
    {
        com.example.widget.NumberPicker r0;
        long l0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.widget.NumberPicker;
        l0 := @parameter0: long;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r0.<com.example.widget.NumberPicker: long mSpeed> = l0;
        r2[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.example.widget.NumberPicker r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.EditText $r4, $r5, $r6;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: android.view.View;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r4 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        specialinvoke r0.<com.example.widget.NumberPicker: void validateInput(android.view.View)>($r4);
        $r5 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        $z0 = virtualinvoke $r5.<android.widget.EditText: boolean hasFocus()>();
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $r6 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        virtualinvoke $r6.<android.widget.EditText: boolean requestFocus()>();
        r3[1] = 1;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getId()>();
        r3[2] = 1;
        if 2131034114 != $i0 goto label2;

        $i1 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        $i2 = $i1 + 1;
        virtualinvoke r0.<com.example.widget.NumberPicker: void changeCurrent(int)>($i2);
        r3[3] = 1;
        goto label3;

     label2:
        $i3 = virtualinvoke r1.<android.view.View: int getId()>();
        r3[4] = 1;
        if 2131034116 != $i3 goto label3;

        $i4 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        $i5 = $i4 - 1;
        virtualinvoke r0.<com.example.widget.NumberPicker: void changeCurrent(int)>($i5);
        r3[5] = 1;

     label3:
        r3[6] = 1;
        return;
    }

    private java.lang.String formatNumber(int)
    {
        com.example.widget.NumberPicker r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.widget.NumberPicker$Formatter $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.example.widget.NumberPicker;
        i0 := @parameter0: int;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPicker$Formatter mFormatter>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPicker$Formatter mFormatter>;
        $r5 = interfaceinvoke $r4.<com.example.widget.NumberPicker$Formatter: java.lang.String toString(int)>(i0);
        r2[1] = 1;
        goto label2;

     label1:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r5;
    }

    protected void changeCurrent(int)
    {
        com.example.widget.NumberPicker r0;
        int i0, $i1, $i2, $i3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.widget.NumberPicker;
        i0 := @parameter0: int;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $i1 = r0.<com.example.widget.NumberPicker: int mEnd>;
        r2[0] = 1;
        if i0 <= $i1 goto label1;

        i0 = r0.<com.example.widget.NumberPicker: int mStart>;
        r2[1] = 1;
        goto label2;

     label1:
        $i2 = r0.<com.example.widget.NumberPicker: int mStart>;
        r2[2] = 1;
        if i0 >= $i2 goto label2;

        i0 = r0.<com.example.widget.NumberPicker: int mEnd>;
        r2[3] = 1;

     label2:
        $i3 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        r0.<com.example.widget.NumberPicker: int mPrevious> = $i3;
        r0.<com.example.widget.NumberPicker: int mCurrent> = i0;
        virtualinvoke r0.<com.example.widget.NumberPicker: void notifyChange()>();
        virtualinvoke r0.<com.example.widget.NumberPicker: void updateView()>();
        r2[4] = 1;
        return;
    }

    protected void notifyChange()
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        com.example.widget.NumberPicker$OnChangedListener $r3, $r4;
        int $i0, $i1;

        r0 := @this: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPicker$OnChangedListener mListener>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = r0.<com.example.widget.NumberPicker: com.example.widget.NumberPicker$OnChangedListener mListener>;
        $i0 = r0.<com.example.widget.NumberPicker: int mPrevious>;
        $i1 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        interfaceinvoke $r4.<com.example.widget.NumberPicker$OnChangedListener: void onChanged(com.example.widget.NumberPicker,int,int)>(r0, $i0, $i1);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    protected void updateView()
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] $r3, $r7;
        android.widget.EditText $r4, $r6, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5, $r8;
        android.text.Editable $r11;

        r0 := @this: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = r0.<com.example.widget.NumberPicker: java.lang.String[] mDisplayedValues>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        $i0 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        $r5 = specialinvoke r0.<com.example.widget.NumberPicker: java.lang.String formatNumber(int)>($i0);
        virtualinvoke $r4.<android.widget.EditText: void setText(java.lang.CharSequence)>($r5);
        r2[1] = 1;
        goto label2;

     label1:
        $r6 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        $r7 = r0.<com.example.widget.NumberPicker: java.lang.String[] mDisplayedValues>;
        $i1 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        $i2 = r0.<com.example.widget.NumberPicker: int mStart>;
        $i3 = $i1 - $i2;
        $r8 = $r7[$i3];
        virtualinvoke $r6.<android.widget.EditText: void setText(java.lang.CharSequence)>($r8);
        r2[2] = 1;

     label2:
        $r9 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        $r10 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        $r11 = virtualinvoke $r10.<android.widget.EditText: android.text.Editable getText()>();
        $i4 = interfaceinvoke $r11.<android.text.Editable: int length()>();
        virtualinvoke $r9.<android.widget.EditText: void setSelection(int)>($i4);
        r2[3] = 1;
        return;
    }

    private void validateCurrentView(java.lang.CharSequence)
    {
        com.example.widget.NumberPicker r0;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r4;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: java.lang.CharSequence;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[15];
        $r4 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();
        i0 = specialinvoke r0.<com.example.widget.NumberPicker: int getSelectedPos(java.lang.String)>($r4);
        $i1 = r0.<com.example.widget.NumberPicker: int mStart>;
        r3[0] = 1;
        if i0 < $i1 goto label1;

        $i2 = r0.<com.example.widget.NumberPicker: int mEnd>;
        r3[1] = 1;
        if i0 > $i2 goto label1;

        $i3 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        r3[2] = 1;
        if $i3 == i0 goto label1;

        $i4 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        r0.<com.example.widget.NumberPicker: int mPrevious> = $i4;
        r0.<com.example.widget.NumberPicker: int mCurrent> = i0;
        virtualinvoke r0.<com.example.widget.NumberPicker: void notifyChange()>();
        r3[3] = 1;

     label1:
        virtualinvoke r0.<com.example.widget.NumberPicker: void updateView()>();
        r3[4] = 1;
        return;
    }

    public void onFocusChange(android.view.View, boolean)
    {
        com.example.widget.NumberPicker r0;
        android.view.View r1;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: android.view.View;
        z0 := @parameter1: boolean;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        r3[0] = 1;
        if z0 != 0 goto label1;

        specialinvoke r0.<com.example.widget.NumberPicker: void validateInput(android.view.View)>(r1);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    private void validateInput(android.view.View)
    {
        com.example.widget.NumberPicker r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r7;
        android.widget.TextView $r5;
        java.lang.CharSequence $r6;
        boolean $z0;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: android.view.View;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];
        $r5 = (android.widget.TextView) r1;
        $r6 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();
        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);
        $r7 = "";
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        r3[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.example.widget.NumberPicker: void updateView()>();
        r3[1] = 1;
        goto label2;

     label1:
        specialinvoke r0.<com.example.widget.NumberPicker: void validateCurrentView(java.lang.CharSequence)>(r4);
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return;
    }

    public boolean onLongClick(android.view.View)
    {
        com.example.widget.NumberPicker r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.EditText $r4;
        int $i0, $i1;
        android.os.Handler $r5, $r7;
        java.lang.Runnable $r6, $r8;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: android.view.View;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        $r4 = r0.<com.example.widget.NumberPicker: android.widget.EditText mText>;
        virtualinvoke $r4.<android.widget.EditText: void clearFocus()>();
        $i0 = virtualinvoke r1.<android.view.View: int getId()>();
        r3[0] = 1;
        if 2131034114 != $i0 goto label1;

        r0.<com.example.widget.NumberPicker: boolean mIncrement> = 1;
        $r5 = r0.<com.example.widget.NumberPicker: android.os.Handler mHandler>;
        $r6 = r0.<com.example.widget.NumberPicker: java.lang.Runnable mRunnable>;
        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);
        r3[1] = 1;
        goto label2;

     label1:
        $i1 = virtualinvoke r1.<android.view.View: int getId()>();
        r3[2] = 1;
        if 2131034116 != $i1 goto label2;

        r0.<com.example.widget.NumberPicker: boolean mDecrement> = 1;
        $r7 = r0.<com.example.widget.NumberPicker: android.os.Handler mHandler>;
        $r8 = r0.<com.example.widget.NumberPicker: java.lang.Runnable mRunnable>;
        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return 1;
    }

    public void cancelIncrement()
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        r0.<com.example.widget.NumberPicker: boolean mIncrement> = 0;
        r2[0] = 1;
        return;
    }

    public void cancelDecrement()
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        r0.<com.example.widget.NumberPicker: boolean mDecrement> = 0;
        r2[0] = 1;
        return;
    }

    private int getSelectedPos(java.lang.String)
    {
        com.example.widget.NumberPicker r0;
        java.lang.String r1, $r7, $r8;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String[] $r4, $r5, $r6;
        boolean $z0;
        java.lang.NumberFormatException $r9, r10;

        r0 := @this: com.example.widget.NumberPicker;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[21];
        $r4 = r0.<com.example.widget.NumberPicker: java.lang.String[] mDisplayedValues>;
        r3[0] = 1;
        if $r4 != null goto label1;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);
        r3[1] = 1;
        return $i1;

     label1:
        i0 = 0;
        r3[2] = 1;

     label2:
        $r5 = r0.<com.example.widget.NumberPicker: java.lang.String[] mDisplayedValues>;
        $i2 = lengthof $r5;
        r3[3] = 1;
        if i0 >= $i2 goto label4;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r6 = r0.<com.example.widget.NumberPicker: java.lang.String[] mDisplayedValues>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>(r1);
        r3[4] = 1;
        if $z0 == 0 goto label3;

        $i3 = r0.<com.example.widget.NumberPicker: int mStart>;
        $i4 = $i3 + i0;
        r3[5] = 1;
        return $i4;

     label3:
        i0 = i0 + 1;
        r3[6] = 1;
        goto label2;

     label4:
        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);
        r3[7] = 1;

     label5:
        return $i5;

     label6:
        $r9 := @caughtexception;
        r10 = $r9;
        $i6 = r0.<com.example.widget.NumberPicker: int mStart>;
        r3[8] = 1;
        return $i6;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public int getCurrent()
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $i0 = r0.<com.example.widget.NumberPicker: int mCurrent>;
        r2[0] = 1;
        return $i0;
    }

    static boolean access$000(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        $z0 = r0.<com.example.widget.NumberPicker: boolean mIncrement>;
        r2[0] = 1;
        return $z0;
    }

    static long access$100(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        long $l0;

        r0 := @parameter0: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $l0 = r0.<com.example.widget.NumberPicker: long mSpeed>;
        r2[0] = 1;
        return $l0;
    }

    static android.os.Handler access$200(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Handler $r3;

        r0 := @parameter0: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        $r3 = r0.<com.example.widget.NumberPicker: android.os.Handler mHandler>;
        r2[0] = 1;
        return $r3;
    }

    static boolean access$300(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[26];
        $z0 = r0.<com.example.widget.NumberPicker: boolean mDecrement>;
        r2[0] = 1;
        return $z0;
    }

    static java.lang.String[] access$600(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] $r3;

        r0 := @parameter0: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[27];
        $r3 = r0.<com.example.widget.NumberPicker: java.lang.String[] mDisplayedValues>;
        r2[0] = 1;
        return $r3;
    }

    static android.text.InputFilter access$700(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPicker r0;
        boolean[][] $r1;
        boolean[] r2;
        android.text.InputFilter $r3;

        r0 := @parameter0: com.example.widget.NumberPicker;
        $r1 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $r3 = r0.<com.example.widget.NumberPicker: android.text.InputFilter mNumberInputFilter>;
        r2[0] = 1;
        return $r3;
    }

    static char[] access$800()
    {
        boolean[][] $r0;
        boolean[] r1;
        char[] $r2;

        $r0 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r1 = $r0[29];
        $r2 = <com.example.widget.NumberPicker: char[] DIGIT_CHARACTERS>;
        r1[0] = 1;
        return $r2;
    }

    static int access$900(com.example.widget.NumberPicker, java.lang.String)
    {
        com.example.widget.NumberPicker r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @parameter0: com.example.widget.NumberPicker;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.example.widget.NumberPicker: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();

     label0:
        r3 = $r2[30];
        $i0 = specialinvoke r0.<com.example.widget.NumberPicker: int getSelectedPos(java.lang.String)>(r1);
        r3[0] = 1;
        return $i0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        com.example.widget.NumberPicker$1 $r2;
        com.example.widget.NumberPicker$2 $r3;
        char[] $r4;

        $r0 = staticinvoke <com.example.widget.NumberPicker: boolean[][] $VRi()>();
        r1 = $r0[31];
        $r2 = new com.example.widget.NumberPicker$1;
        specialinvoke $r2.<com.example.widget.NumberPicker$1: void <init>()>();
        <com.example.widget.NumberPicker: com.example.widget.NumberPicker$Formatter TWO_DIGIT_FORMATTER> = $r2;
        $r3 = new com.example.widget.NumberPicker$2;
        specialinvoke $r3.<com.example.widget.NumberPicker$2: void <init>()>();
        <com.example.widget.NumberPicker: com.example.widget.NumberPicker$Formatter THREE_DIGIT_FORMATTER> = $r3;
        $r4 = newarray (char)[10];
        $r4[0] = 48;
        $r4[1] = 49;
        $r4[2] = 50;
        $r4[3] = 51;
        $r4[4] = 52;
        $r4[5] = 53;
        $r4[6] = 54;
        $r4[7] = 55;
        $r4[8] = 56;
        $r4[9] = 57;
        <com.example.widget.NumberPicker: char[] DIGIT_CHARACTERS> = $r4;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;

        $r0 = newmultiarray (boolean)[32][];
        <com.example.widget.NumberPicker: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[7];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[4];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[5];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[3];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[4];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[5];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[3];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[4];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[5];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[9];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/widget/NumberPicker", 7275944298029642612L);
        return $r0;
    }
}
public class com.example.widget.NumberPickerButton extends android.widget.ImageButton
{
    private com.example.widget.NumberPicker mNumberPicker;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.example.widget.NumberPickerButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.example.widget.NumberPickerButton;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        i0 := @parameter2: int;
        $r3 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);
        r4[0] = 1;
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.example.widget.NumberPickerButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.example.widget.NumberPickerButton;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        $r3 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        specialinvoke r0.<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        r4[0] = 1;
        return;
    }

    public void <init>(android.content.Context)
    {
        com.example.widget.NumberPickerButton r0;
        android.content.Context r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPickerButton;
        r1 := @parameter0: android.content.Context;
        $r2 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<android.widget.ImageButton: void <init>(android.content.Context)>(r1);
        r3[0] = 1;
        return;
    }

    public void setNumberPicker(com.example.widget.NumberPicker)
    {
        com.example.widget.NumberPickerButton r0;
        com.example.widget.NumberPicker r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.example.widget.NumberPickerButton;
        r1 := @parameter0: com.example.widget.NumberPicker;
        $r2 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r0.<com.example.widget.NumberPickerButton: com.example.widget.NumberPicker mNumberPicker> = r1;
        r3[0] = 1;
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.example.widget.NumberPickerButton r0;
        android.view.MotionEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: com.example.widget.NumberPickerButton;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        specialinvoke r0.<com.example.widget.NumberPickerButton: void cancelLongpressIfRequired(android.view.MotionEvent)>(r1);
        $z0 = specialinvoke r0.<android.widget.ImageButton: boolean onTouchEvent(android.view.MotionEvent)>(r1);
        r3[0] = 1;
        return $z0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        com.example.widget.NumberPickerButton r0;
        android.view.MotionEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: com.example.widget.NumberPickerButton;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        specialinvoke r0.<com.example.widget.NumberPickerButton: void cancelLongpressIfRequired(android.view.MotionEvent)>(r1);
        $z0 = specialinvoke r0.<android.widget.ImageButton: boolean onTrackballEvent(android.view.MotionEvent)>(r1);
        r3[0] = 1;
        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.example.widget.NumberPickerButton r0;
        int i0;
        android.view.KeyEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: com.example.widget.NumberPickerButton;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.KeyEvent;
        $r2 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if i0 == 23 goto label1;

        r3[1] = 1;
        if i0 != 66 goto label2;

     label1:
        specialinvoke r0.<com.example.widget.NumberPickerButton: void cancelLongpress()>();
        r3[2] = 1;

     label2:
        $z0 = specialinvoke r0.<android.widget.ImageButton: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);
        r3[3] = 1;
        return $z0;
    }

    private void cancelLongpressIfRequired(android.view.MotionEvent)
    {
        com.example.widget.NumberPickerButton r0;
        android.view.MotionEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1;

        r0 := @this: com.example.widget.NumberPickerButton;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        r3[0] = 1;
        if $i0 == 3 goto label1;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        r3[1] = 1;
        if $i1 != 1 goto label2;

     label1:
        specialinvoke r0.<com.example.widget.NumberPickerButton: void cancelLongpress()>();
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return;
    }

    private void cancelLongpress()
    {
        com.example.widget.NumberPickerButton r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;
        com.example.widget.NumberPicker $r3, $r4;

        r0 := @this: com.example.widget.NumberPickerButton;
        $r1 = <com.example.widget.NumberPickerButton: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $i0 = virtualinvoke r0.<com.example.widget.NumberPickerButton: int getId()>();
        r2[0] = 1;
        if 2131034114 != $i0 goto label1;

        $r3 = r0.<com.example.widget.NumberPickerButton: com.example.widget.NumberPicker mNumberPicker>;
        virtualinvoke $r3.<com.example.widget.NumberPicker: void cancelIncrement()>();
        r2[1] = 1;
        goto label2;

     label1:
        $i1 = virtualinvoke r0.<com.example.widget.NumberPickerButton: int getId()>();
        r2[2] = 1;
        if 2131034116 != $i1 goto label2;

        $r4 = r0.<com.example.widget.NumberPickerButton: com.example.widget.NumberPicker mNumberPicker>;
        virtualinvoke $r4.<com.example.widget.NumberPicker: void cancelDecrement()>();
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.example.widget.NumberPickerButton: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <com.example.widget.NumberPickerButton: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[5];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/example/widget/NumberPickerButton", -8060779824453282070L);
        return $r0;
    }
}
public class com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator extends java.lang.Object
{
    private com.luckycatlabs.sunrisesunset.dto.Location2 location;
    private com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(com.luckycatlabs.sunrisesunset.dto.Location2, java.lang.String)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        com.luckycatlabs.sunrisesunset.dto.Location2 r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r5;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.dto.Location2;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r5 = new com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        specialinvoke $r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: void <init>(com.luckycatlabs.sunrisesunset.dto.Location2,java.lang.String)>(r1, r2);
        r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator> = $r5;
        r4[0] = 1;
        return;
    }

    public java.lang.String getAstronomicalSunriseForDate(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.Zenith $r5;
        java.lang.String $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith ASTRONOMICAL>;
        $r6 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSunriseTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar)>($r5, r1);
        r3[0] = 1;
        return $r6;
    }

    public com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret computeMoon(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret $r5;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret computeMoonStats(java.util.Calendar)>(r1);
        r3[0] = 1;
        return $r5;
    }

    public java.lang.String getAstronomicalSunsetForDate(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.Zenith $r5;
        java.lang.String $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith ASTRONOMICAL>;
        $r6 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSunsetTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar)>($r5, r1);
        r3[0] = 1;
        return $r6;
    }

    public java.lang.String getNauticalSunriseForDate(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.Zenith $r5;
        java.lang.String $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith NAUTICAL>;
        $r6 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSunriseTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar)>($r5, r1);
        r3[0] = 1;
        return $r6;
    }

    public java.lang.String getNauticalSunsetForDate(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.Zenith $r5;
        java.lang.String $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith NAUTICAL>;
        $r6 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSunsetTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar)>($r5, r1);
        r3[0] = 1;
        return $r6;
    }

    public java.lang.String getCivilSunriseForDate(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.Zenith $r5;
        java.lang.String $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith CIVIL>;
        $r6 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSunriseTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar)>($r5, r1);
        r3[0] = 1;
        return $r6;
    }

    public java.lang.String getCivilSunsetForDate(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.Zenith $r5;
        java.lang.String $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith CIVIL>;
        $r6 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSunsetTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar)>($r5, r1);
        r3[0] = 1;
        return $r6;
    }

    public java.lang.String getOfficialSunriseForDate(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.Zenith $r5;
        java.lang.String $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith OFFICIAL>;
        $r6 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSunriseTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar)>($r5, r1);
        r3[0] = 1;
        return $r6;
    }

    public java.lang.String getOfficialSunsetForDate(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator $r4;
        com.luckycatlabs.sunrisesunset.Zenith $r5;
        java.lang.String $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $r4 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator>;
        $r5 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith OFFICIAL>;
        $r6 = virtualinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSunsetTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar)>($r5, r1);
        r3[0] = 1;
        return $r6;
    }

    public com.luckycatlabs.sunrisesunset.dto.Location2 getLocation()
    {
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator r0;
        boolean[][] $r1;
        boolean[] r2;
        com.luckycatlabs.sunrisesunset.dto.Location2 $r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        $r1 = <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location>;
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRi()>();
        r1 = $r0[11];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/luckycatlabs/sunrisesunset/SunriseSunsetCalculator", -4496799217020234195L);
        return $r0;
    }
}
public final enum class com.luckycatlabs.sunrisesunset.Zenith extends java.lang.Enum
{
    public static final enum com.luckycatlabs.sunrisesunset.Zenith ASTRONOMICAL;
    public static final enum com.luckycatlabs.sunrisesunset.Zenith NAUTICAL;
    public static final enum com.luckycatlabs.sunrisesunset.Zenith CIVIL;
    public static final enum com.luckycatlabs.sunrisesunset.Zenith OFFICIAL;
    private final java.math.BigDecimal degrees;
    private static final com.luckycatlabs.sunrisesunset.Zenith[] $VALUES;
    private static final boolean[][] $VRc;

    public static com.luckycatlabs.sunrisesunset.Zenith[] values()
    {
        boolean[][] $r0;
        boolean[] r1;
        com.luckycatlabs.sunrisesunset.Zenith[] $r2, $r4;
        java.lang.Object $r3;

        $r0 = <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $r2 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith[] $VALUES>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (com.luckycatlabs.sunrisesunset.Zenith[]) $r3;
        r1[0] = 1;
        return $r4;
    }

    public static com.luckycatlabs.sunrisesunset.Zenith valueOf(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        com.luckycatlabs.sunrisesunset.Zenith $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/luckycatlabs/sunrisesunset/Zenith", r0);
        $r4 = (com.luckycatlabs.sunrisesunset.Zenith) $r3;
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int, java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.Zenith r0;
        java.lang.String r1;
        int i0;
        java.math.BigDecimal r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.luckycatlabs.sunrisesunset.Zenith;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.math.BigDecimal;
        $r3 = <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r0.<com.luckycatlabs.sunrisesunset.Zenith: java.math.BigDecimal degrees> = r2;
        r4[0] = 1;
        return;
    }

    public java.math.BigDecimal degrees()
    {
        com.luckycatlabs.sunrisesunset.Zenith r0;
        boolean[][] $r1;
        boolean[] r2;
        java.math.BigDecimal $r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.Zenith;
        $r1 = <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<com.luckycatlabs.sunrisesunset.Zenith: java.math.BigDecimal degrees>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        com.luckycatlabs.sunrisesunset.Zenith $r2, $r4, $r6, $r8, $r11, $r12, $r13, $r14;
        java.math.BigDecimal $r3, $r5, $r7, $r9;
        com.luckycatlabs.sunrisesunset.Zenith[] $r10;

        $r0 = staticinvoke <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r2 = new com.luckycatlabs.sunrisesunset.Zenith;
        $r3 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(108L);
        specialinvoke $r2.<com.luckycatlabs.sunrisesunset.Zenith: void <init>(java.lang.String,int,java.math.BigDecimal)>("ASTRONOMICAL", 0, $r3);
        <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith ASTRONOMICAL> = $r2;
        $r4 = new com.luckycatlabs.sunrisesunset.Zenith;
        $r5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(102L);
        specialinvoke $r4.<com.luckycatlabs.sunrisesunset.Zenith: void <init>(java.lang.String,int,java.math.BigDecimal)>("NAUTICAL", 1, $r5);
        <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith NAUTICAL> = $r4;
        $r6 = new com.luckycatlabs.sunrisesunset.Zenith;
        $r7 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(96L);
        specialinvoke $r6.<com.luckycatlabs.sunrisesunset.Zenith: void <init>(java.lang.String,int,java.math.BigDecimal)>("CIVIL", 2, $r7);
        <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith CIVIL> = $r6;
        $r8 = new com.luckycatlabs.sunrisesunset.Zenith;
        $r9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>(90.8333);
        specialinvoke $r8.<com.luckycatlabs.sunrisesunset.Zenith: void <init>(java.lang.String,int,java.math.BigDecimal)>("OFFICIAL", 3, $r9);
        <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith OFFICIAL> = $r8;
        $r10 = newarray (com.luckycatlabs.sunrisesunset.Zenith)[4];
        $r11 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith ASTRONOMICAL>;
        $r10[0] = $r11;
        $r12 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith NAUTICAL>;
        $r10[1] = $r12;
        $r13 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith CIVIL>;
        $r10[2] = $r13;
        $r14 = <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith OFFICIAL>;
        $r10[3] = $r14;
        <com.luckycatlabs.sunrisesunset.Zenith: com.luckycatlabs.sunrisesunset.Zenith[] $VALUES> = $r10;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.luckycatlabs.sunrisesunset.Zenith: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/luckycatlabs/sunrisesunset/Zenith", -6206711928773593640L);
        return $r0;
    }
}
public class com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret extends java.lang.Object
{
    double x;
    double y;
    double z;
    double radius;
    double lat;
    double lon;
    final com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret r0;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator$cart_ret", 9252593981417L);
        return $r0;
    }
}
public class com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret extends java.lang.Object
{
    public double lon;
    public double lat;
    public double orbitLon;
    public double distance;
    public double diameter;
    public double parallax;
    public double raGeocentric;
    public double decGeocentric;
    public double ra;
    public double dec;
    public double raTopocentric;
    public double decTopocentric;
    public double distanceTopocentric;
    public double moonAge;
    public double phase;
    public double az;
    public double alt;
    public java.lang.String moonPhase;
    public java.lang.String sign;
    final com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret r0;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator$moonCoor_ret", 9252593981417L);
        return $r0;
    }
}
public class com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret extends java.lang.Object
{
    double lon;
    double anomalyMean;
    final com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret r0;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator$sunCoor_ret", 9252593981417L);
        return $r0;
    }
}
public class com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator extends java.lang.Object
{
    private com.luckycatlabs.sunrisesunset.dto.Location2 location;
    private java.util.TimeZone timeZone;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(com.luckycatlabs.sunrisesunset.dto.Location2, java.lang.String)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        com.luckycatlabs.sunrisesunset.dto.Location2 r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        java.util.TimeZone $r5;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.dto.Location2;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location> = r1;
        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r2);
        r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.util.TimeZone timeZone> = $r5;
        r4[0] = 1;
        return;
    }

    public double div(double, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, $d2;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, $i2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        i0 = (int) d0;
        i1 = (int) d1;
        $i2 = i0 / i1;
        $d2 = (double) $i2;
        r2[0] = 1;
        return $d2;
    }

    public double Rev(double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, $d2, $d3, $d4;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $d2 = d0 / 360.0;
        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);
        $d4 = $d3 * 360.0;
        d1 = d0 - $d4;
        r2[0] = 1;
        return d1;
    }

    public double Radians(double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, $d1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);
        r2[0] = 1;
        return $d1;
    }

    public double Deg(double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, $d1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>(d0);
        r2[0] = 1;
        return $d1;
    }

    public double ElevationRefraction(double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, d32;
        boolean[][] $r1;
        boolean[] r2;
        byte $b0;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        d1 = 0.58804392;
        d2 = -0.17941557;
        d3 = 0.029906946;
        d4 = -0.00251874;
        d5 = 8.2622101E-5;
        d6 = d0;
        $d9 = d0 + 0.589;
        d7 = staticinvoke <java.lang.Math: double abs(double)>($d9);
        $d10 = d2 * d7;
        $d11 = d1 + $d10;
        $d12 = d3 * d7;
        $d13 = $d12 * d7;
        $d14 = $d11 + $d13;
        $d15 = d4 * d7;
        $d16 = $d15 * d7;
        $d17 = $d16 * d7;
        $d18 = $d14 + $d17;
        $d19 = d5 * d7;
        $d20 = $d19 * d7;
        $d21 = $d20 * d7;
        $d22 = $d21 * d7;
        $d23 = $d18 + $d22;
        d8 = staticinvoke <java.lang.Math: double abs(double)>($d23);
        $b0 = d0 cmpl 10.2;
        r2[0] = 1;
        if $b0 <= 0 goto label1;

        $d24 = staticinvoke <java.lang.Math: double abs(double)>(d0);
        $d25 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d24);
        $d26 = staticinvoke <java.lang.Math: double cos(double)>($d25);
        $d27 = staticinvoke <java.lang.Math: double abs(double)>(d0);
        $d28 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d27);
        $d29 = staticinvoke <java.lang.Math: double sin(double)>($d28);
        $d30 = $d26 / $d29;
        $d31 = 0.01617 * $d30;
        d32 = d0 + $d31;
        r2[1] = 1;
        goto label2;

     label1:
        d32 = d0 + d8;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return d32;
    }

    public double CalcJD(double, double, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, d11, $d12;
        boolean[][] $r1;
        boolean[] r2;
        byte $b0;
        int $i1, $i2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        d2 := @parameter2: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        d3 = 2414956.5;
        $b0 = d1 cmpg 2.0;
        r2[0] = 1;
        if $b0 > 0 goto label1;

        d2 = d2 - 1.0;
        d1 = d1 + 12.0;
        r2[1] = 1;

     label1:
        $d4 = d2 - 1900.0;
        $d5 = $d4 * 365.25;
        $i1 = (int) $d5;
        $d6 = (double) $i1;
        d7 = d3 + $d6;
        $d8 = 1.0 + d1;
        $d9 = 30.6001 * $d8;
        $i2 = (int) $d9;
        $d10 = (double) $i2;
        d11 = d7 + $d10;
        $d12 = d11 + d0;
        r2[2] = 1;
        return $d12;
    }

    public double frac(double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, $d1, $d2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $d1 = staticinvoke <java.lang.Math: double floor(double)>(d0);
        $d2 = d0 - $d1;
        r2[0] = 1;
        return $d2;
    }

    public double Mod(double, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, $d2, $d3, $d4, $d5;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $d2 = d0 / d1;
        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);
        $d4 = $d3 * d1;
        $d5 = d0 - $d4;
        r2[0] = 1;
        return $d5;
    }

    public double GMST(double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $d4 = d0 - 0.5;
        $d5 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double frac(double)>($d4);
        d1 = $d5 * 24.0;
        $d6 = d0 - 0.5;
        $d7 = staticinvoke <java.lang.Math: double floor(double)>($d6);
        d8 = $d7 + 0.5;
        $d9 = d8 - 2451545.0;
        d2 = $d9 / 36525.0;
        $d10 = d2 * 2.5862E-5;
        $d11 = 2400.051336 + $d10;
        $d12 = d2 * $d11;
        d3 = 6.697374558 + $d12;
        $d13 = d1 * 1.002737909;
        $d14 = d3 + $d13;
        $d15 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod(double,double)>($d14, 24.0);
        r2[0] = 1;
        return $d15;
    }

    public double GMST2LMST(double, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, d2, d3, $d4, $d5, $d6;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        d2 = 57.29577951308232;
        $d4 = d2 * d1;
        $d5 = $d4 / 15.0;
        $d6 = d0 + $d5;
        d3 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod(double,double)>($d6, 24.0);
        r2[0] = 1;
        return d3;
    }

    public com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret EquPolar2Cart(double, double, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        boolean[][] $r1;
        boolean[] r2;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret r3, $r4;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        d2 := @parameter2: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r4 = new com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret;
        specialinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: void <init>(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator)>(r0);
        r3 = $r4;
        $d4 = staticinvoke <java.lang.Math: double cos(double)>(d1);
        d3 = $d4 * d2;
        $d5 = staticinvoke <java.lang.Math: double cos(double)>(d0);
        $d6 = d3 * $d5;
        r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double x> = $d6;
        $d7 = staticinvoke <java.lang.Math: double sin(double)>(d0);
        $d8 = d3 * $d7;
        r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double y> = $d8;
        $d9 = staticinvoke <java.lang.Math: double sin(double)>(d1);
        $d10 = d2 * $d9;
        r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double z> = $d10;
        r2[0] = 1;
        return r3;
    }

    public com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret Observer2EquCart(double, double, double, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, $d16, d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50;
        boolean[][] $r1;
        boolean[] r2;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret r3, $r4, r5;
        byte $b0;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        d2 := @parameter2: double;
        d3 := @parameter3: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        d4 = 298.257223563;
        d5 = 6378.137;
        $r4 = new com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret;
        specialinvoke $r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: void <init>(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator)>(r0);
        r3 = $r4;
        d6 = staticinvoke <java.lang.Math: double cos(double)>(d1);
        d7 = staticinvoke <java.lang.Math: double sin(double)>(d1);
        $d16 = 1.0 / d4;
        d8 = 1.0 - $d16;
        d17 = d8 * d8;
        d18 = d7 * d7;
        $d19 = d6 * d6;
        $d20 = d17 * d18;
        $d21 = $d19 + $d20;
        $d22 = staticinvoke <java.lang.Math: double sqrt(double)>($d21);
        d9 = 1.0 / $d22;
        $d23 = d5 * d9;
        d10 = $d23 + d2;
        $d24 = d5 * d17;
        $d25 = $d24 * d9;
        d11 = $d25 + d2;
        $d26 = d10 * d10;
        $d27 = $d26 * d6;
        $d28 = $d27 * d6;
        $d29 = d11 * d11;
        $d30 = $d29 * d18;
        $d31 = $d28 + $d30;
        d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d31);
        $d32 = d10 * d6;
        $d33 = $d32 / d12;
        $d34 = staticinvoke <java.lang.Math: double acos(double)>($d33);
        r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double y> = $d34;
        r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double x> = d0;
        $b0 = d1 cmpg 0.0;
        r2[0] = 1;
        if $b0 >= 0 goto label1;

        $d35 = r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double y>;
        $d36 = neg $d35;
        r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double y> = $d36;
        r2[1] = 1;

     label1:
        $d37 = r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double x>;
        $d38 = r3.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double y>;
        r5 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret EquPolar2Cart(double,double,double)>($d37, $d38, d12);
        d13 = r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double x>;
        d14 = r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double y>;
        $d39 = d3 / 24.0;
        $d40 = $d39 * 2.0;
        d15 = $d40 * 3.141592653589793;
        $d41 = staticinvoke <java.lang.Math: double cos(double)>(d15);
        $d42 = d13 * $d41;
        $d43 = staticinvoke <java.lang.Math: double sin(double)>(d15);
        $d44 = d14 * $d43;
        $d45 = $d42 - $d44;
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double x> = $d45;
        $d46 = staticinvoke <java.lang.Math: double sin(double)>(d15);
        $d47 = d13 * $d46;
        $d48 = staticinvoke <java.lang.Math: double cos(double)>(d15);
        $d49 = d14 * $d48;
        $d50 = $d47 + $d49;
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double y> = $d50;
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double radius> = d12;
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double lon> = d0;
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double lat> = d1;
        r2[2] = 1;
        return r5;
    }

    public double Mod2Pi(double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        d1 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod(double,double)>(d0, 6.283185307179586);
        r2[0] = 1;
        return d1;
    }

    public com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret Ecl2Equ(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret;
        d0 := @parameter1: double;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];
        d1 = 3.141592653589793;
        d2 = d1 / 180.0;
        $d8 = d0 - 2451545.0;
        d3 = $d8 / 36525.0;
        $d9 = d3 * 0.00181;
        $d10 = -6.0E-4 + $d9;
        $d11 = d3 * $d10;
        $d12 = -46.815 + $d11;
        $d13 = d3 * $d12;
        $d14 = $d13 / 3600.0;
        $d15 = 23.439291666666666 + $d14;
        d4 = $d15 * d2;
        d5 = staticinvoke <java.lang.Math: double cos(double)>(d4);
        d6 = staticinvoke <java.lang.Math: double sin(double)>(d4);
        $d16 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double lon>;
        d7 = staticinvoke <java.lang.Math: double sin(double)>($d16);
        $d17 = d7 * d5;
        $d18 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double lat>;
        $d19 = staticinvoke <java.lang.Math: double tan(double)>($d18);
        $d20 = $d19 * d6;
        $d21 = $d17 - $d20;
        $d22 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double lon>;
        $d23 = staticinvoke <java.lang.Math: double cos(double)>($d22);
        $d24 = staticinvoke <java.lang.Math: double atan2(double,double)>($d21, $d23);
        $d25 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod2Pi(double)>($d24);
        r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double ra> = $d25;
        $d26 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double lat>;
        $d27 = staticinvoke <java.lang.Math: double sin(double)>($d26);
        $d28 = $d27 * d5;
        $d29 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double lat>;
        $d30 = staticinvoke <java.lang.Math: double cos(double)>($d29);
        $d31 = $d30 * d6;
        $d32 = $d31 * d7;
        $d33 = $d28 + $d32;
        $d34 = staticinvoke <java.lang.Math: double asin(double)>($d33);
        r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double dec> = $d34;
        r3[0] = 1;
        return r1;
    }

    public com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret GeoEqu2TopoEqu(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret, com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret r1;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret;
        r2 := @parameter1: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret;
        d0 := @parameter2: double;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[15];
        $d11 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double dec>;
        d1 = staticinvoke <java.lang.Math: double cos(double)>($d11);
        $d12 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double dec>;
        d2 = staticinvoke <java.lang.Math: double sin(double)>($d12);
        d3 = staticinvoke <java.lang.Math: double cos(double)>(d0);
        d4 = staticinvoke <java.lang.Math: double sin(double)>(d0);
        $d13 = r2.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double lat>;
        d5 = staticinvoke <java.lang.Math: double cos(double)>($d13);
        $d14 = r2.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double lat>;
        d6 = staticinvoke <java.lang.Math: double sin(double)>($d14);
        d7 = r2.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double radius>;
        $d15 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distance>;
        $d16 = $d15 * d1;
        $d17 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double ra>;
        $d18 = staticinvoke <java.lang.Math: double cos(double)>($d17);
        $d19 = $d16 * $d18;
        $d20 = d7 * d5;
        $d21 = $d20 * d3;
        d8 = $d19 - $d21;
        $d22 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distance>;
        $d23 = $d22 * d1;
        $d24 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double ra>;
        $d25 = staticinvoke <java.lang.Math: double sin(double)>($d24);
        $d26 = $d23 * $d25;
        $d27 = d7 * d5;
        $d28 = $d27 * d4;
        d9 = $d26 - $d28;
        $d29 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distance>;
        $d30 = $d29 * d2;
        $d31 = d7 * d6;
        d10 = $d30 - $d31;
        $d32 = d8 * d8;
        $d33 = d9 * d9;
        $d34 = $d32 + $d33;
        $d35 = d10 * d10;
        $d36 = $d34 + $d35;
        $d37 = staticinvoke <java.lang.Math: double sqrt(double)>($d36);
        r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distanceTopocentric> = $d37;
        $d38 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distanceTopocentric>;
        $d39 = d10 / $d38;
        $d40 = staticinvoke <java.lang.Math: double asin(double)>($d39);
        r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double decTopocentric> = $d40;
        $d41 = staticinvoke <java.lang.Math: double atan2(double,double)>(d9, d8);
        $d42 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod2Pi(double)>($d41);
        r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double raTopocentric> = $d42;
        r4[0] = 1;
        return r1;
    }

    public com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret Equ2Altaz(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret, double, double, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret;
        d0 := @parameter1: double;
        d1 := @parameter2: double;
        d2 := @parameter3: double;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        $d12 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double dec>;
        d3 = staticinvoke <java.lang.Math: double cos(double)>($d12);
        $d13 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double dec>;
        d4 = staticinvoke <java.lang.Math: double sin(double)>($d13);
        $d14 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double ra>;
        d5 = d2 - $d14;
        d6 = staticinvoke <java.lang.Math: double cos(double)>(d5);
        d7 = staticinvoke <java.lang.Math: double sin(double)>(d5);
        d8 = staticinvoke <java.lang.Math: double cos(double)>(d1);
        d9 = staticinvoke <java.lang.Math: double sin(double)>(d1);
        $d15 = neg d3;
        d10 = $d15 * d7;
        $d16 = d4 * d8;
        $d17 = d3 * d6;
        $d18 = $d17 * d9;
        d11 = $d16 - $d18;
        $d19 = staticinvoke <java.lang.Math: double atan2(double,double)>(d10, d11);
        $d20 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod2Pi(double)>($d19);
        r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double az> = $d20;
        $d21 = d4 * d9;
        $d22 = d3 * d6;
        $d23 = $d22 * d8;
        $d24 = $d21 + $d23;
        $d25 = staticinvoke <java.lang.Math: double asin(double)>($d24);
        r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double alt> = $d25;
        r3[0] = 1;
        return r1;
    }

    public com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret MoonPosition(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret, double, com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret, double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret r1;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, d23, d24, d25, d26, d27, d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, d112, $d113, $d114, $d115, $d116, $d117, d118;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret r2;
        boolean[][] $r3;
        boolean[] r4;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret r5, $r6, r7, r9;
        byte $b0, $b1, $b2;
        long $l3, $l4;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret;
        d0 := @parameter1: double;
        r2 := @parameter2: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret;
        d1 := @parameter3: double;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[17];
        d2 = d0 - 2447891.5;
        d3 = 3.141592653589793;
        d4 = d3 / 180.0;
        d5 = 318.351648 * d4;
        d6 = 36.34041 * d4;
        d7 = 318.510107 * d4;
        d8 = 5.145396 * d4;
        d9 = 0.0549;
        d10 = 384401.0;
        d11 = 0.5181 * d4;
        d12 = 0.9507 * d4;
        $d29 = 13.1763966 * d4;
        $d30 = $d29 * d2;
        d13 = $d30 + d5;
        $d31 = 0.1114041 * d4;
        $d32 = $d31 * d2;
        $d33 = d13 - $d32;
        d14 = $d33 - d6;
        $d34 = 0.0529539 * d4;
        $d35 = $d34 * d2;
        d15 = d7 - $d35;
        $d36 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: double lon>;
        d16 = d13 - $d36;
        $d37 = 1.2739 * d4;
        $d38 = 2.0 * d16;
        $d39 = $d38 - d14;
        $d40 = staticinvoke <java.lang.Math: double sin(double)>($d39);
        d17 = $d37 * $d40;
        $d41 = 0.1858 * d4;
        $d42 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: double anomalyMean>;
        $d43 = staticinvoke <java.lang.Math: double sin(double)>($d42);
        d18 = $d41 * $d43;
        $d44 = 0.37 * d4;
        $d45 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: double anomalyMean>;
        $d46 = staticinvoke <java.lang.Math: double sin(double)>($d45);
        d19 = $d44 * $d46;
        $d47 = d14 + d17;
        $d48 = $d47 - d18;
        d20 = $d48 - d19;
        $d49 = 6.2886 * d4;
        $d50 = staticinvoke <java.lang.Math: double sin(double)>(d20);
        d21 = $d49 * $d50;
        $d51 = 0.214 * d4;
        $d52 = 2.0 * d20;
        $d53 = staticinvoke <java.lang.Math: double sin(double)>($d52);
        d22 = $d51 * $d53;
        $d54 = d13 + d17;
        $d55 = $d54 + d21;
        $d56 = $d55 - d18;
        d23 = $d56 + d22;
        $d57 = 0.6583 * d4;
        $d58 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: double lon>;
        $d59 = d23 - $d58;
        $d60 = 2.0 * $d59;
        $d61 = staticinvoke <java.lang.Math: double sin(double)>($d60);
        d24 = $d57 * $d61;
        d25 = d23 + d24;
        $d62 = 0.16 * d4;
        $d63 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: double anomalyMean>;
        $d64 = staticinvoke <java.lang.Math: double sin(double)>($d63);
        $d65 = $d62 * $d64;
        d26 = d15 - $d65;
        $r6 = new com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret;
        specialinvoke $r6.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: void <init>(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator)>(r0);
        r5 = $r6;
        $d66 = d25 - d26;
        $d67 = staticinvoke <java.lang.Math: double sin(double)>($d66);
        $d68 = staticinvoke <java.lang.Math: double cos(double)>(d8);
        $d69 = $d67 * $d68;
        $d70 = d25 - d26;
        $d71 = staticinvoke <java.lang.Math: double cos(double)>($d70);
        $d72 = staticinvoke <java.lang.Math: double atan2(double,double)>($d69, $d71);
        $d73 = d26 + $d72;
        $d74 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod2Pi(double)>($d73);
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double lon> = $d74;
        $d75 = d25 - d26;
        $d76 = staticinvoke <java.lang.Math: double sin(double)>($d75);
        $d77 = staticinvoke <java.lang.Math: double sin(double)>(d8);
        $d78 = $d76 * $d77;
        $d79 = staticinvoke <java.lang.Math: double asin(double)>($d78);
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double lat> = $d79;
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double orbitLon> = d25;
        r7 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret Ecl2Equ(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret,double)>(r5, d0);
        $d80 = staticinvoke <java.lang.Math: double sqrt(double)>(d9);
        $d81 = 1.0 - $d80;
        $d82 = d20 + d21;
        $d83 = staticinvoke <java.lang.Math: double cos(double)>($d82);
        $d84 = d9 * $d83;
        $d85 = 1.0 + $d84;
        $d86 = $d81 / $d85;
        r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distance> = $d86;
        $d87 = r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distance>;
        $d88 = d11 / $d87;
        r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double diameter> = $d88;
        $d89 = r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distance>;
        $d90 = d12 / $d89;
        r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double parallax> = $d90;
        $d91 = r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distance>;
        $d92 = $d91 * d10;
        r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double distance> = $d92;
        r4[0] = 1;
        if r2 == null goto label1;

        $b0 = d1 cmpl 0.0;
        r4[1] = 1;
        if $b0 == 0 goto label1;

        r9 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret GeoEqu2TopoEqu(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret,com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret,double)>(r7, r2, d1);
        $d93 = r9.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double ra>;
        r9.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double raGeocentric> = $d93;
        $d94 = r9.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double dec>;
        r9.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double decGeocentric> = $d94;
        $d95 = r9.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double raTopocentric>;
        r9.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double ra> = $d95;
        $d96 = r9.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double decTopocentric>;
        r9.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double dec> = $d96;
        $d97 = r2.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret: double lat>;
        r7 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret Equ2Altaz(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret,double,double,double)>(r9, d0, $d97, d1);
        r4[2] = 1;

     label1:
        $d98 = r1.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: double lon>;
        $d99 = d25 - $d98;
        $d100 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod2Pi(double)>($d99);
        r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double moonAge> = $d100;
        $d101 = r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double moonAge>;
        $d102 = staticinvoke <java.lang.Math: double cos(double)>($d101);
        $d103 = 1.0 - $d102;
        $d104 = 0.5 * $d103;
        r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double phase> = $d104;
        d27 = 12.190992211310531 * d4;
        $d105 = r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double moonAge>;
        $d106 = 90.0 * d4;
        d28 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Mod(double,double)>($d105, $d106);
        $b1 = d28 cmpg d27;
        r4[3] = 1;
        if $b1 < 0 goto label2;

        $d107 = 90.0 * d4;
        $d108 = $d107 - d27;
        $b2 = d28 cmpl $d108;
        r4[4] = 1;
        if $b2 <= 0 goto label3;

     label2:
        $d109 = r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double moonAge>;
        $d110 = 90.0 * d4;
        $d111 = $d109 / $d110;
        $l3 = staticinvoke <java.lang.Math: long round(double)>($d111);
        $l4 = 2L * $l3;
        d112 = (double) $l4;
        r4[5] = 1;
        goto label4;

     label3:
        $d113 = r7.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double moonAge>;
        $d114 = 90.0 * d4;
        $d115 = $d113 / $d114;
        $d116 = staticinvoke <java.lang.Math: double floor(double)>($d115);
        $d117 = 2.0 * $d116;
        d118 = $d117 + 1.0;
        r4[6] = 1;

     label4:
        r4[7] = 1;
        return r7;
    }

    public double Refraction(double)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, $d26, $d27, $d28, $d29, d30, $d31, d32, $d33, $d34, $d35, $d36, d37;
        boolean[][] $r1;
        boolean[] r2;
        int i0;
        byte $b1, $b2, $b3, $b4, $b5;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        d0 := @parameter0: double;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        d1 = 3.141592653589793;
        d2 = d1 / 180.0;
        d3 = 180.0 / d1;
        d4 = d0 * d3;
        $b1 = d4 cmpg -2.0;
        r2[0] = 1;
        if $b1 < 0 goto label1;

        $b2 = d4 cmpl 90.0;
        r2[1] = 1;
        if $b2 < 0 goto label2;

     label1:
        r2[2] = 1;
        return 0.0;

     label2:
        d5 = 1015.0;
        d6 = 10.0;
        $b3 = d4 cmpl 15.0;
        r2[3] = 1;
        if $b3 <= 0 goto label3;

        $d14 = 0.00452 * d5;
        $d15 = 273.0 + d6;
        $d16 = staticinvoke <java.lang.Math: double tan(double)>(d0);
        $d17 = $d15 * $d16;
        $d18 = $d14 / $d17;
        r2[4] = 1;
        return $d18;

     label3:
        d7 = d0;
        d8 = 0.0;
        $d19 = d5 - 80.0;
        d9 = $d19 / 930.0;
        $d20 = d6 - 10.0;
        d10 = 0.0048 * $d20;
        d11 = d7;
        d12 = d8;
        i0 = 0;
        r2[5] = 1;

     label4:
        r2[6] = 1;
        if i0 >= 3 goto label7;

        $d21 = d7 + 4.4;
        $d22 = 7.31 / $d21;
        d13 = d7 + $d22;
        $d23 = d13 * d2;
        $d24 = staticinvoke <java.lang.Math: double tan(double)>($d23);
        d25 = 1.0 / $d24;
        $d26 = d25 * d9;
        $d27 = d25 + 39.0;
        $d28 = d10 * $d27;
        $d29 = 60.0 + $d28;
        d8 = $d26 / $d29;
        d30 = d7 - d11;
        $d31 = d8 - d12;
        d32 = $d31 - d30;
        $b4 = d30 cmpl 0.0;
        r2[7] = 1;
        if $b4 == 0 goto label5;

        $b5 = d32 cmpl 0.0;
        r2[8] = 1;
        if $b5 == 0 goto label5;

        $d33 = d0 + d8;
        $d34 = $d33 - d7;
        $d35 = d30 * $d34;
        $d36 = $d35 / d32;
        d37 = d7 - $d36;
        r2[9] = 1;
        goto label6;

     label5:
        d37 = d0 + d8;
        r2[10] = 1;

     label6:
        d11 = d7;
        d12 = d8;
        d7 = d37;
        i0 = i0 + 1;
        r2[11] = 1;
        goto label4;

     label7:
        r2[12] = 1;
        return d8;
    }

    public com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret computeMoonStats(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret r4;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret r5, $r14;
        java.math.BigDecimal r6, r7, $r11, $r13;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret r8;
        java.util.TimeZone $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.luckycatlabs.sunrisesunset.dto.Location2 $r10, $r12;
        java.lang.Boolean $r15;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[19];
        d0 = 3.141592653589793;
        d1 = d0 / 180.0;
        d2 = 180.0 / d0;
        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
        virtualinvoke r1.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r9);
        $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);
        $d11 = (double) $i0;
        $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);
        $d12 = (double) $i1;
        $d13 = $d12 + 1.0;
        $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);
        $d14 = (double) $i2;
        d3 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double CalcJD(double,double,double)>($d11, $d13, $d14);
        $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11);
        $d15 = (double) $i3;
        $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12);
        $d16 = (double) $i4;
        $d17 = $d16 / 60.0;
        $d18 = $d15 + $d17;
        $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13);
        $d19 = (double) $i5;
        $d20 = $d19 / 3600.0;
        $d21 = $d18 + $d20;
        $d22 = $d21 / 24.0;
        d4 = d3 + $d22;
        d5 = d4;
        $r10 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location>;
        $r11 = virtualinvoke $r10.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal getLatitude()>();
        $d23 = virtualinvoke $r11.<java.math.BigDecimal: double doubleValue()>();
        d6 = $d23 * d1;
        $r12 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location>;
        $r13 = virtualinvoke $r12.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal getLongitude()>();
        $d24 = virtualinvoke $r13.<java.math.BigDecimal: double doubleValue()>();
        d7 = $d24 * d1;
        d8 = 0.0;
        d9 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double GMST(double)>(d4);
        d10 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double GMST2LMST(double,double)>(d9, d7);
        r4 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret Observer2EquCart(double,double,double,double)>(d7, d6, d8, d9);
        $r14 = new com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret;
        specialinvoke $r14.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: void <init>(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator)>(r0);
        r5 = $r14;
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getLongitudeHour(java.util.Calendar,java.lang.Boolean)>(r1, $r15);
        r7 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getMeanAnomaly(java.math.BigDecimal)>(r6);
        $d25 = virtualinvoke r6.<java.math.BigDecimal: double doubleValue()>();
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: double lon> = $d25;
        $d26 = virtualinvoke r7.<java.math.BigDecimal: double doubleValue()>();
        r5.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret: double anomalyMean> = $d26;
        $d27 = d10 * 15.0;
        $d28 = $d27 * d1;
        r8 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret MoonPosition(com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$sunCoor_ret,double,com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$cart_ret,double)>(r5, d5, r4, $d28);
        $d29 = r8.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double az>;
        $d30 = $d29 * d2;
        r8.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double az> = $d30;
        $d31 = r8.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double alt>;
        $d32 = $d31 * d2;
        $d33 = r8.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double alt>;
        $d34 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Refraction(double)>($d33);
        $d35 = $d32 + $d34;
        r8.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double alt> = $d35;
        r3[0] = 1;
        return r8;
    }

    public void computeMoonStats2(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d22, d23, d24, d25, d26, d27, d28, d29, d30, d31, d32, d33, d34, d35, d36, d37, d38, d39, d40, d41, d42, d43, d44, d45, d46, d47, d48, d49, d50, d51, d52, d53, d54, d55, d56, d57, d58, d59, d60, d61, d62, d63, d64, d65, d66, d69, d70, d71, d72, d73, d74, d75, d76, d77, d78, d79, d80, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, d98, $d99, $d100, $d101, d102, d103, d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, d143, $d144, $d145, $d146, $d147, $d148, $d149, $d150, d151, $d152, $d153, $d154, d155, $d156, d157, $d158, $d159, $d160, d161, $d162, $d163, d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197, $d198, $d199, $d200, $d201, $d202, $d203, $d204, $d205, $d206, $d207, $d208, $d209, $d210, $d211, $d212, $d213, d214, d215, $d216, $d217, $d218, $d219, $d220, $d221, $d222, $d223, $d224, $d225, $d226, $d227, $d228, $d229, $d230, $d231, $d232, $d233, $d234, $d235, $d236, $d237, $d238, $d239, $d240, $d241, $d242, $d243, $d244, $d245, $d246, $d247, $d248, $d249, $d250, $d251, $d252, $d253, $d254, $d255, $d256, $d257, $d258, $d259, $d260, $d261, $d262, $d263, $d264, $d265, $d266, $d267, $d268, $d269, $d270, $d271, $d272, $d273, $d274, $d275, $d276, $d277, $d278, $d279, $d280, $d281, $d282, $d283, $d284, $d285, $d286, $d287, $d288, $d289, $d290, $d291, $d292, $d293, $d294, $d295, $d296, $d297, $d298, $d299, $d300, $d301, $d302, $d303, $d304, $d305, $d306, $d307, d308, d309, d310, $d311, $d312, $d313, $d314, $d315, $d316, $d317, $d318, $d319, $d320, $d321, $d322, $d323, $d324, $d325, $d326, $d327, $d328, $d329, $d330, $d331, $d332, $d333, $d334, $d335, $d336, $d337, $d338, $d339, $d340, $d341, $d342, $d343, d344, $d345, $d346, $d347, $d348, $d349, d350, $d351, $d352, $d353, $d354, $d355, $d356, $d357, $d358, $d359, d360, $d361, $d362, $d363, $d364, $d365, $d366, d367, $d368, $d369, d370, $d371, $d372, $d373, $d374, $d375, $d376, $d377, $d378, $d379, $d380, $d381, $d382, $d383, $d384, $d385, $d386, $d387, $d388, $d389, $d390, $d391, $d392, $d393, d394, $d396;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.math.BigDecimal r4, r5, $r9, $r11;
        java.util.TimeZone $r6;
        byte $b8, $b9;
        java.lang.Boolean $r7;
        com.luckycatlabs.sunrisesunset.dto.Location2 $r8, $r10;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[20];
        $r6 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
        virtualinvoke r1.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r6);
        $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);
        d0 = (double) $i1;
        $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);
        $i3 = $i2 + 1;
        d1 = (double) $i3;
        $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);
        d2 = (double) $i4;
        $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11);
        d3 = (double) $i5;
        $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12);
        d4 = (double) $i6;
        $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13);
        d5 = (double) $i7;
        $d82 = 367.0 * d0;
        $d83 = d1 + 9.0;
        $d84 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double div(double,double)>($d83, 12.0);
        $d85 = d0 + $d84;
        $d86 = 7.0 * $d85;
        $d87 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double div(double,double)>($d86, 4.0);
        $d88 = $d82 - $d87;
        $d89 = 275.0 * d1;
        $d90 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double div(double,double)>($d89, 9.0);
        $d91 = $d88 + $d90;
        $d92 = $d91 + d2;
        d6 = $d92 - 730530.0;
        $d93 = d3 / 24.0;
        $d94 = d6 + $d93;
        $d95 = d4 / 1440.0;
        $d96 = $d94 + $d95;
        $d97 = d5 / 86400.0;
        d98 = $d96 + $d97;
        $d99 = 0.0529538083 * d98;
        d7 = 125.1228 - $d99;
        d8 = 5.1454;
        $d100 = 0.1643573223 * d98;
        d9 = 318.0634 + $d100;
        d10 = 60.2666;
        d11 = 0.0549;
        $d101 = 13.0649929509 * d98;
        d12 = 115.3654 + $d101;
        d102 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d9);
        d103 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d12);
        d104 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d7);
        $d105 = 57.29577951308232 * d11;
        $d106 = staticinvoke <java.lang.Math: double toRadians(double)>(d103);
        $d107 = staticinvoke <java.lang.Math: double sin(double)>($d106);
        $d108 = $d105 * $d107;
        $d109 = staticinvoke <java.lang.Math: double toRadians(double)>(d103);
        $d110 = staticinvoke <java.lang.Math: double cos(double)>($d109);
        $d111 = d11 * $d110;
        $d112 = 1.0 + $d111;
        $d113 = $d108 * $d112;
        d13 = d103 + $d113;
        d114 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d13);
        d14 = d114;
        i0 = 0;
        d15 = 9.0;
        r3[0] = 1;

     label1:
        $b8 = d15 cmpl 5.0E-4;
        r3[1] = 1;
        if $b8 <= 0 goto label3;

        r3[2] = 1;
        if i0 >= 20 goto label3;

        i0 = i0 + 1;
        d16 = d114;
        $d115 = 57.29577951308232 * d11;
        $d116 = staticinvoke <java.lang.Math: double toRadians(double)>(d16);
        $d117 = staticinvoke <java.lang.Math: double sin(double)>($d116);
        $d118 = $d115 * $d117;
        $d119 = d16 - $d118;
        $d120 = $d119 - d103;
        $d121 = staticinvoke <java.lang.Math: double toRadians(double)>(d16);
        $d122 = staticinvoke <java.lang.Math: double cos(double)>($d121);
        $d123 = d11 * $d122;
        $d124 = 1.0 - $d123;
        $d125 = $d120 / $d124;
        d17 = d16 - $d125;
        d114 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d17);
        $b9 = d114 cmpg d16;
        r3[3] = 1;
        if $b9 >= 0 goto label2;

        d15 = d16 - d114;
        r3[4] = 1;
        goto label1;

     label2:
        d15 = d114 - d16;
        r3[5] = 1;
        goto label1;

     label3:
        $d126 = staticinvoke <java.lang.Math: double toRadians(double)>(d114);
        $d127 = staticinvoke <java.lang.Math: double cos(double)>($d126);
        $d128 = $d127 - d11;
        d18 = d10 * $d128;
        $d129 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d114);
        $d130 = staticinvoke <java.lang.Math: double toRadians(double)>($d129);
        $d131 = staticinvoke <java.lang.Math: double sin(double)>($d130);
        $d132 = d10 * $d131;
        $d133 = d11 * d11;
        $d134 = 1.0 - $d133;
        $d135 = staticinvoke <java.lang.Math: double sqrt(double)>($d134);
        d19 = $d132 * $d135;
        $d136 = d18 * d18;
        $d137 = d19 * d19;
        $d138 = $d136 + $d137;
        staticinvoke <java.lang.Math: double sqrt(double)>($d138);
        $d139 = staticinvoke <java.lang.Math: double atan2(double,double)>(d19, d18);
        staticinvoke <java.lang.Math: double toDegrees(double)>($d139);
        $d140 = staticinvoke <java.lang.Math: double toRadians(double)>(d114);
        $d141 = staticinvoke <java.lang.Math: double cos(double)>($d140);
        $d142 = $d141 - d11;
        d143 = d10 * $d142;
        $d144 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d114);
        $d145 = staticinvoke <java.lang.Math: double toRadians(double)>($d144);
        $d146 = staticinvoke <java.lang.Math: double sin(double)>($d145);
        $d147 = d10 * $d146;
        $d148 = d11 * d11;
        $d149 = 1.0 - $d148;
        $d150 = staticinvoke <java.lang.Math: double sqrt(double)>($d149);
        d151 = $d147 * $d150;
        $d152 = d143 * d143;
        $d153 = d151 * d151;
        $d154 = $d152 + $d153;
        d155 = staticinvoke <java.lang.Math: double sqrt(double)>($d154);
        $d156 = staticinvoke <java.lang.Math: double atan2(double,double)>(d151, d143);
        d157 = staticinvoke <java.lang.Math: double toDegrees(double)>($d156);
        $d158 = d157 + d102;
        d22 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>($d158);
        $d159 = staticinvoke <java.lang.Math: double toRadians(double)>(d22);
        $d160 = staticinvoke <java.lang.Math: double cos(double)>($d159);
        d161 = d155 * $d160;
        $d162 = staticinvoke <java.lang.Math: double toRadians(double)>(d22);
        $d163 = staticinvoke <java.lang.Math: double sin(double)>($d162);
        d164 = d155 * $d163;
        d23 = 0.0;
        $d165 = staticinvoke <java.lang.Math: double toRadians(double)>(d104);
        $d166 = staticinvoke <java.lang.Math: double cos(double)>($d165);
        $d167 = d157 + d102;
        $d168 = staticinvoke <java.lang.Math: double toRadians(double)>($d167);
        $d169 = staticinvoke <java.lang.Math: double cos(double)>($d168);
        $d170 = $d166 * $d169;
        $d171 = staticinvoke <java.lang.Math: double toRadians(double)>(d104);
        $d172 = staticinvoke <java.lang.Math: double sin(double)>($d171);
        $d173 = d157 + d102;
        $d174 = staticinvoke <java.lang.Math: double toRadians(double)>($d173);
        $d175 = staticinvoke <java.lang.Math: double sin(double)>($d174);
        $d176 = $d172 * $d175;
        $d177 = staticinvoke <java.lang.Math: double toRadians(double)>(d8);
        $d178 = staticinvoke <java.lang.Math: double cos(double)>($d177);
        $d179 = $d176 * $d178;
        $d180 = $d170 - $d179;
        d24 = d155 * $d180;
        $d181 = staticinvoke <java.lang.Math: double toRadians(double)>(d104);
        $d182 = staticinvoke <java.lang.Math: double sin(double)>($d181);
        $d183 = d157 + d102;
        $d184 = staticinvoke <java.lang.Math: double toRadians(double)>($d183);
        $d185 = staticinvoke <java.lang.Math: double cos(double)>($d184);
        $d186 = $d182 * $d185;
        $d187 = staticinvoke <java.lang.Math: double toRadians(double)>(d104);
        $d188 = staticinvoke <java.lang.Math: double cos(double)>($d187);
        $d189 = d157 + d102;
        $d190 = staticinvoke <java.lang.Math: double toRadians(double)>($d189);
        $d191 = staticinvoke <java.lang.Math: double sin(double)>($d190);
        $d192 = $d188 * $d191;
        $d193 = staticinvoke <java.lang.Math: double toRadians(double)>(d8);
        $d194 = staticinvoke <java.lang.Math: double cos(double)>($d193);
        $d195 = $d192 * $d194;
        $d196 = $d186 + $d195;
        d25 = d155 * $d196;
        $d197 = d157 + d102;
        $d198 = staticinvoke <java.lang.Math: double toRadians(double)>($d197);
        $d199 = staticinvoke <java.lang.Math: double sin(double)>($d198);
        $d200 = d155 * $d199;
        $d201 = staticinvoke <java.lang.Math: double toRadians(double)>(d8);
        $d202 = staticinvoke <java.lang.Math: double sin(double)>($d201);
        d26 = $d200 * $d202;
        $d203 = staticinvoke <java.lang.Math: double atan2(double,double)>(d25, d24);
        $d204 = staticinvoke <java.lang.Math: double toDegrees(double)>($d203);
        d27 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>($d204);
        $d205 = d24 * d24;
        $d206 = d25 * d25;
        $d207 = $d205 + $d206;
        $d208 = staticinvoke <java.lang.Math: double sqrt(double)>($d207);
        $d209 = staticinvoke <java.lang.Math: double atan2(double,double)>(d26, $d208);
        d28 = staticinvoke <java.lang.Math: double toDegrees(double)>($d209);
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r4 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getLongitudeHour(java.util.Calendar,java.lang.Boolean)>(r1, $r7);
        r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getMeanAnomaly(java.math.BigDecimal)>(r4);
        d29 = 23.45;
        $d210 = 4.70935E-5 * d98;
        d30 = 282.9404 + $d210;
        $d211 = 0.9856002585 * d98;
        d31 = 356.047 + $d211;
        $d212 = 3.563E-7 * d98;
        d32 = 23.4393 - $d212;
        $d213 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d31);
        d33 = d30 + $d213;
        d34 = d33 + 180.0;
        d214 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d33);
        d215 = d32;
        d35 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>(d103);
        $d216 = d104 + d102;
        $d217 = $d216 + d103;
        d36 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>($d217);
        d37 = virtualinvoke r5.<java.math.BigDecimal: double doubleValue()>();
        d38 = d214;
        $d218 = d36 - d38;
        d39 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>($d218);
        $d219 = d36 - d104;
        d40 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>($d219);
        $d220 = 2.0 * d39;
        $d221 = d35 - $d220;
        $d222 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d221);
        $d223 = staticinvoke <java.lang.Math: double sin(double)>($d222);
        d41 = -1.274 * $d223;
        $d224 = 2.0 * d39;
        $d225 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d224);
        $d226 = staticinvoke <java.lang.Math: double sin(double)>($d225);
        d42 = 0.658 * $d226;
        $d227 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d37);
        $d228 = staticinvoke <java.lang.Math: double sin(double)>($d227);
        d43 = -0.186 * $d228;
        $d229 = 2.0 * d35;
        $d230 = 2.0 * d39;
        $d231 = $d229 - $d230;
        $d232 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d231);
        $d233 = staticinvoke <java.lang.Math: double sin(double)>($d232);
        d44 = -0.059 * $d233;
        $d234 = 2.0 * d39;
        $d235 = d35 - $d234;
        $d236 = $d235 + d37;
        $d237 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d236);
        $d238 = staticinvoke <java.lang.Math: double sin(double)>($d237);
        d45 = -0.057 * $d238;
        $d239 = 2.0 * d39;
        $d240 = d35 + $d239;
        $d241 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d240);
        $d242 = staticinvoke <java.lang.Math: double sin(double)>($d241);
        d46 = 0.053 * $d242;
        $d243 = 2.0 * d39;
        $d244 = $d243 - d37;
        $d245 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d244);
        $d246 = staticinvoke <java.lang.Math: double sin(double)>($d245);
        d47 = 0.046 * $d246;
        $d247 = d35 - d37;
        $d248 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d247);
        $d249 = staticinvoke <java.lang.Math: double sin(double)>($d248);
        d48 = 0.041 * $d249;
        $d250 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d39);
        $d251 = staticinvoke <java.lang.Math: double sin(double)>($d250);
        d49 = -0.035 * $d251;
        $d252 = d35 + d37;
        $d253 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d252);
        $d254 = staticinvoke <java.lang.Math: double sin(double)>($d253);
        d50 = -0.031 * $d254;
        $d255 = 2.0 * d40;
        $d256 = 2.0 * d39;
        $d257 = $d255 - $d256;
        $d258 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d257);
        $d259 = staticinvoke <java.lang.Math: double sin(double)>($d258);
        d51 = -0.015 * $d259;
        $d260 = 4.0 * d39;
        $d261 = d35 - $d260;
        $d262 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d261);
        $d263 = staticinvoke <java.lang.Math: double sin(double)>($d262);
        d52 = 0.011 * $d263;
        $d264 = 2.0 * d39;
        $d265 = d40 - $d264;
        $d266 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d265);
        $d267 = staticinvoke <java.lang.Math: double sin(double)>($d266);
        d53 = -0.173 * $d267;
        $d268 = d35 - d40;
        $d269 = 2.0 * d39;
        $d270 = $d268 - $d269;
        $d271 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d270);
        $d272 = staticinvoke <java.lang.Math: double sin(double)>($d271);
        d54 = -0.055 * $d272;
        $d273 = d35 + d40;
        $d274 = 2.0 * d39;
        $d275 = $d273 - $d274;
        $d276 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d275);
        $d277 = staticinvoke <java.lang.Math: double sin(double)>($d276);
        d55 = -0.046 * $d277;
        $d278 = 2.0 * d39;
        $d279 = d40 + $d278;
        $d280 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d279);
        $d281 = staticinvoke <java.lang.Math: double sin(double)>($d280);
        d56 = 0.033 * $d281;
        $d282 = 2.0 * d35;
        $d283 = $d282 + d40;
        $d284 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d283);
        $d285 = staticinvoke <java.lang.Math: double sin(double)>($d284);
        d57 = 0.017 * $d285;
        $d286 = d41 + d42;
        $d287 = $d286 + d43;
        $d288 = $d287 + d44;
        $d289 = $d288 + d45;
        $d290 = $d289 + d46;
        $d291 = $d290 + d47;
        $d292 = $d291 + d48;
        $d293 = $d292 + d49;
        $d294 = $d293 + d50;
        $d295 = $d294 + d51;
        d58 = $d295 + d52;
        $d296 = d53 + d54;
        $d297 = $d296 + d55;
        $d298 = $d297 + d56;
        d59 = $d298 + d57;
        $d299 = 2.0 * d39;
        $d300 = d35 - $d299;
        $d301 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d300);
        $d302 = staticinvoke <java.lang.Math: double cos(double)>($d301);
        $d303 = -0.58 * $d302;
        $d304 = 2.0 * d39;
        $d305 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>($d304);
        $d306 = staticinvoke <java.lang.Math: double cos(double)>($d305);
        $d307 = 0.46 * $d306;
        d60 = $d303 - $d307;
        d308 = d27 + d58;
        d309 = d28 + d59;
        d310 = d155 + d60;
        $d311 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d308);
        $d312 = staticinvoke <java.lang.Math: double cos(double)>($d311);
        $d313 = d310 * $d312;
        $d314 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d309);
        $d315 = staticinvoke <java.lang.Math: double cos(double)>($d314);
        d61 = $d313 * $d315;
        $d316 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d308);
        $d317 = staticinvoke <java.lang.Math: double sin(double)>($d316);
        $d318 = d310 * $d317;
        $d319 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d309);
        $d320 = staticinvoke <java.lang.Math: double cos(double)>($d319);
        d62 = $d318 * $d320;
        $d321 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d309);
        $d322 = staticinvoke <java.lang.Math: double sin(double)>($d321);
        d63 = d310 * $d322;
        d64 = d61;
        $d323 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d215);
        $d324 = staticinvoke <java.lang.Math: double cos(double)>($d323);
        $d325 = d62 * $d324;
        $d326 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d215);
        $d327 = staticinvoke <java.lang.Math: double sin(double)>($d326);
        $d328 = d63 * $d327;
        d65 = $d325 - $d328;
        $d329 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d215);
        $d330 = staticinvoke <java.lang.Math: double sin(double)>($d329);
        $d331 = d62 * $d330;
        $d332 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d215);
        $d333 = staticinvoke <java.lang.Math: double cos(double)>($d332);
        $d334 = d63 * $d333;
        d66 = $d331 + $d334;
        $d335 = staticinvoke <java.lang.Math: double atan2(double,double)>(d62, d61);
        $d336 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Deg(double)>($d335);
        virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>($d336);
        $d337 = d61 * d61;
        $d338 = d62 * d62;
        $d339 = $d337 + $d338;
        $d340 = staticinvoke <java.lang.Math: double sqrt(double)>($d339);
        $d341 = staticinvoke <java.lang.Math: double atan2(double,double)>(d63, $d340);
        virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Deg(double)>($d341);
        $d342 = staticinvoke <java.lang.Math: double atan2(double,double)>(d65, d64);
        $d343 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Deg(double)>($d342);
        d344 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Rev(double)>($d343);
        $d345 = d64 * d64;
        $d346 = d65 * d65;
        $d347 = $d345 + $d346;
        $d348 = staticinvoke <java.lang.Math: double sqrt(double)>($d347);
        $d349 = staticinvoke <java.lang.Math: double atan2(double,double)>(d66, $d348);
        d350 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Deg(double)>($d349);
        d69 = d38 - 180.0;
        $d351 = staticinvoke <java.lang.Math: double floor(double)>(d98);
        d70 = d98 - $d351;
        $r8 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location>;
        $r9 = virtualinvoke $r8.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal getLatitude()>();
        d71 = virtualinvoke $r9.<java.math.BigDecimal: double doubleValue()>();
        $r10 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location>;
        $r11 = virtualinvoke $r10.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal getLongitude()>();
        d72 = virtualinvoke $r11.<java.math.BigDecimal: double doubleValue()>();
        $d352 = d70 * 360.0;
        $d353 = d69 + $d352;
        d73 = $d353 + d71;
        d74 = d73 - d344;
        d75 = 3.141592653589793;
        $d354 = d74 * 3.141592653589793;
        $d355 = $d354 / 180.0;
        $d356 = staticinvoke <java.lang.Math: double cos(double)>($d355);
        $d357 = d350 * 3.141592653589793;
        $d358 = $d357 / 180.0;
        $d359 = staticinvoke <java.lang.Math: double cos(double)>($d358);
        d360 = $d356 * $d359;
        $d361 = d74 * 3.141592653589793;
        $d362 = $d361 / 180.0;
        $d363 = staticinvoke <java.lang.Math: double sin(double)>($d362);
        $d364 = d350 * 3.141592653589793;
        $d365 = $d364 / 180.0;
        $d366 = staticinvoke <java.lang.Math: double cos(double)>($d365);
        d367 = $d363 * $d366;
        $d368 = d350 * 3.141592653589793;
        $d369 = $d368 / 180.0;
        d370 = staticinvoke <java.lang.Math: double sin(double)>($d369);
        $d371 = d72 * d75;
        $d372 = $d371 / 180.0;
        $d373 = staticinvoke <java.lang.Math: double sin(double)>($d372);
        $d374 = d360 * $d373;
        $d375 = d72 * d75;
        $d376 = $d375 / 180.0;
        $d377 = staticinvoke <java.lang.Math: double cos(double)>($d376);
        $d378 = d370 * $d377;
        d76 = $d374 - $d378;
        d77 = d367;
        $d379 = d72 * d75;
        $d380 = $d379 / 180.0;
        $d381 = staticinvoke <java.lang.Math: double cos(double)>($d380);
        $d382 = d360 * $d381;
        $d383 = d72 * d75;
        $d384 = $d383 / 180.0;
        $d385 = staticinvoke <java.lang.Math: double sin(double)>($d384);
        $d386 = d370 * $d385;
        d78 = $d382 + $d386;
        $d387 = staticinvoke <java.lang.Math: double asin(double)>(d78);
        d79 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Deg(double)>($d387);
        $d388 = 1.0 / d310;
        $d389 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Radians(double)>(d79);
        $d390 = staticinvoke <java.lang.Math: double cos(double)>($d389);
        $d391 = $d388 * $d390;
        $d392 = staticinvoke <java.lang.Math: double asin(double)>($d391);
        $d393 = virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Deg(double)>($d392);
        d394 = d79 - $d393;
        d80 = d394;
        virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double ElevationRefraction(double)>(d394);
        $d396 = staticinvoke <java.lang.Math: double atan2(double,double)>(d77, d76);
        virtualinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: double Deg(double)>($d396);
        r3[6] = 1;
        return;
    }

    public java.lang.String computeSunriseTime(com.luckycatlabs.sunrisesunset.Zenith, java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        com.luckycatlabs.sunrisesunset.Zenith r1;
        java.util.Calendar r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r5;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.Zenith;
        r2 := @parameter1: java.util.Calendar;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[21];
        $r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSolarEventTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar,boolean)>(r1, r2, 1);
        r4[0] = 1;
        return $r5;
    }

    public java.lang.String computeSunsetTime(com.luckycatlabs.sunrisesunset.Zenith, java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        com.luckycatlabs.sunrisesunset.Zenith r1;
        java.util.Calendar r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String $r5;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.Zenith;
        r2 := @parameter1: java.util.Calendar;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[22];
        $r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String computeSolarEventTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar,boolean)>(r1, r2, 0);
        r4[0] = 1;
        return $r5;
    }

    private java.lang.String computeSolarEventTime(com.luckycatlabs.sunrisesunset.Zenith, java.util.Calendar, boolean)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        com.luckycatlabs.sunrisesunset.Zenith r1;
        java.util.Calendar r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        java.math.BigDecimal r5, r6, r7, r8, r9, r10, r11;
        java.util.TimeZone $r12;
        java.lang.Boolean $r13, $r14;
        double $d0, $d1;
        byte $b0, $b1;
        java.lang.String $r15;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: com.luckycatlabs.sunrisesunset.Zenith;
        r2 := @parameter1: java.util.Calendar;
        z0 := @parameter2: boolean;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[23];
        $r12 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.util.TimeZone timeZone>;
        virtualinvoke r2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r12);
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);
        r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getLongitudeHour(java.util.Calendar,java.lang.Boolean)>(r2, $r13);
        r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getMeanAnomaly(java.math.BigDecimal)>(r5);
        r7 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getSunTrueLongitude(java.math.BigDecimal)>(r6);
        r8 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getCosineSunLocalHour(java.math.BigDecimal,com.luckycatlabs.sunrisesunset.Zenith)>(r7, r1);
        $d0 = virtualinvoke r8.<java.math.BigDecimal: double doubleValue()>();
        $b0 = $d0 cmpg -1.0;
        r4[0] = 1;
        if $b0 < 0 goto label1;

        $d1 = virtualinvoke r8.<java.math.BigDecimal: double doubleValue()>();
        $b1 = $d1 cmpl 1.0;
        r4[1] = 1;
        if $b1 <= 0 goto label2;

     label1:
        r4[2] = 1;
        return "99:99";

     label2:
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);
        r9 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getSunLocalHour(java.math.BigDecimal,java.lang.Boolean)>(r8, $r14);
        r10 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getLocalMeanTime(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal)>(r7, r5, r9);
        r11 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getLocalTime(java.math.BigDecimal,java.util.Calendar)>(r10, r2);
        $r15 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.lang.String getLocalTimeAsString(java.math.BigDecimal)>(r11);
        r4[3] = 1;
        return $r15;
    }

    private java.math.BigDecimal getBaseLongitudeHour()
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        boolean[][] $r1;
        boolean[] r2;
        com.luckycatlabs.sunrisesunset.dto.Location2 $r3;
        java.math.BigDecimal $r4, $r5, $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        $r1 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $r3 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location>;
        $r4 = virtualinvoke $r3.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal getLongitude()>();
        $r5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(15L);
        $r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal divideBy(java.math.BigDecimal,java.math.BigDecimal)>($r4, $r5);
        r2[0] = 1;
        return $r6;
    }

    private java.math.BigDecimal getLongitudeHour(java.util.Calendar, java.lang.Boolean)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.util.Calendar r1;
        java.lang.Boolean r2;
        boolean[][] $r3;
        boolean[] r4;
        byte b0;
        java.math.BigDecimal r5, r6, r7, $r8, $r9, $r10, $r11, $r12;
        boolean $z0;
        long $l1;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.util.Calendar;
        r2 := @parameter1: java.lang.Boolean;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[25];
        b0 = 18;
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
        r4[0] = 1;
        if $z0 == 0 goto label1;

        b0 = 6;
        r4[1] = 1;

     label1:
        $l1 = (long) b0;
        $r8 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l1);
        $r9 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getBaseLongitudeHour()>();
        r5 = virtualinvoke $r8.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r9);
        $r10 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(24L);
        r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal divideBy(java.math.BigDecimal,java.math.BigDecimal)>(r5, $r10);
        $r11 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getDayOfYear(java.util.Calendar)>(r1);
        r7 = virtualinvoke $r11.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r6);
        $r12 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>(r7);
        r4[2] = 1;
        return $r12;
    }

    private java.math.BigDecimal getMeanAnomaly(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r4, $r5, $r6, $r7, $r8;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[26];
        $r5 = new java.math.BigDecimal;
        specialinvoke $r5.<java.math.BigDecimal: void <init>(java.lang.String)>("0.9856");
        $r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal multiplyBy(java.math.BigDecimal,java.math.BigDecimal)>($r5, r1);
        $r7 = new java.math.BigDecimal;
        specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>("3.289");
        r4 = virtualinvoke $r6.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r7);
        $r8 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>(r4);
        r3[0] = 1;
        return $r8;
    }

    private java.math.BigDecimal getSunTrueLongitude(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r4, r5, r6, r7, r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        boolean[][] $r2;
        boolean[] r3;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b0;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[27];
        $r9 = new java.math.BigDecimal;
        $r10 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)>(r1);
        $d0 = virtualinvoke $r10.<java.math.BigDecimal: double doubleValue()>();
        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d0);
        specialinvoke $r9.<java.math.BigDecimal: void <init>(double)>($d1);
        r4 = $r9;
        $r11 = new java.math.BigDecimal;
        $r12 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)>(r1);
        $r13 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(2L);
        $r14 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal multiplyBy(java.math.BigDecimal,java.math.BigDecimal)>($r12, $r13);
        $d2 = virtualinvoke $r14.<java.math.BigDecimal: double doubleValue()>();
        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);
        specialinvoke $r11.<java.math.BigDecimal: void <init>(double)>($d3);
        r5 = $r11;
        $r15 = new java.math.BigDecimal;
        specialinvoke $r15.<java.math.BigDecimal: void <init>(java.lang.String)>("1.916");
        $r16 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal multiplyBy(java.math.BigDecimal,java.math.BigDecimal)>(r4, $r15);
        r6 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r16);
        $r17 = new java.math.BigDecimal;
        specialinvoke $r17.<java.math.BigDecimal: void <init>(java.lang.String)>("0.020");
        $r18 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal multiplyBy(java.math.BigDecimal,java.math.BigDecimal)>(r5, $r17);
        $r19 = new java.math.BigDecimal;
        specialinvoke $r19.<java.math.BigDecimal: void <init>(java.lang.String)>("282.634");
        r7 = virtualinvoke $r18.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r19);
        r8 = virtualinvoke r6.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r7);
        $d4 = virtualinvoke r8.<java.math.BigDecimal: double doubleValue()>();
        $b0 = $d4 cmpl 360.0;
        r3[0] = 1;
        if $b0 <= 0 goto label1;

        $r20 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(360L);
        r8 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r20);
        r3[1] = 1;

     label1:
        $r21 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>(r8);
        r3[2] = 1;
        return $r21;
    }

    private java.math.BigDecimal getRightAscension(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r4, r5, r6, r7, r8, r9, r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, r18, $r19, $r20, r22, r24, $r25, $r26, $r27;
        boolean[][] $r2;
        boolean[] r3;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1;
        java.math.RoundingMode $r21, $r23;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[28];
        $r11 = new java.math.BigDecimal;
        $r12 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)>(r1);
        $d0 = virtualinvoke $r12.<java.math.BigDecimal: double doubleValue()>();
        $d1 = staticinvoke <java.lang.Math: double tan(double)>($d0);
        specialinvoke $r11.<java.math.BigDecimal: void <init>(double)>($d1);
        r4 = $r11;
        $r13 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertRadiansToDegrees(java.math.BigDecimal)>(r4);
        $r14 = new java.math.BigDecimal;
        specialinvoke $r14.<java.math.BigDecimal: void <init>(java.lang.String)>("0.91764");
        r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal multiplyBy(java.math.BigDecimal,java.math.BigDecimal)>($r13, $r14);
        $r15 = new java.math.BigDecimal;
        $r16 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)>(r5);
        $d2 = virtualinvoke $r16.<java.math.BigDecimal: double doubleValue()>();
        $d3 = staticinvoke <java.lang.Math: double atan(double)>($d2);
        specialinvoke $r15.<java.math.BigDecimal: void <init>(double)>($d3);
        r6 = $r15;
        $r17 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertRadiansToDegrees(java.math.BigDecimal)>(r6);
        r18 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>($r17);
        $d4 = virtualinvoke r18.<java.math.BigDecimal: double doubleValue()>();
        $b0 = $d4 cmpg 0.0;
        r3[0] = 1;
        if $b0 >= 0 goto label1;

        $r19 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(360L);
        r18 = virtualinvoke r18.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r19);
        r3[1] = 1;
        goto label2;

     label1:
        $d5 = virtualinvoke r18.<java.math.BigDecimal: double doubleValue()>();
        $b1 = $d5 cmpl 360.0;
        r3[2] = 1;
        if $b1 <= 0 goto label2;

        $r20 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(360L);
        r18 = virtualinvoke r18.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r20);
        r3[3] = 1;

     label2:
        r7 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(90L);
        $r21 = <java.math.RoundingMode: java.math.RoundingMode FLOOR>;
        r8 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r7, 0, $r21);
        r22 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r7);
        $r23 = <java.math.RoundingMode: java.math.RoundingMode FLOOR>;
        r9 = virtualinvoke r18.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r7, 0, $r23);
        r24 = virtualinvoke r9.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r7);
        r10 = virtualinvoke r22.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>(r24);
        $r25 = virtualinvoke r18.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r10);
        $r26 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(15L);
        $r27 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal divideBy(java.math.BigDecimal,java.math.BigDecimal)>($r25, $r26);
        r3[4] = 1;
        return $r27;
    }

    private java.math.BigDecimal getCosineSunLocalHour(java.math.BigDecimal, com.luckycatlabs.sunrisesunset.Zenith)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r5, r6, r7, r8, r9, r10, r11, r12, r13, $r14, $r16, $r17, $r19, $r20, $r21, $r22;
        com.luckycatlabs.sunrisesunset.Zenith r2;
        boolean[][] $r3;
        boolean[] r4;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        com.luckycatlabs.sunrisesunset.dto.Location2 $r15, $r18;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        r2 := @parameter1: com.luckycatlabs.sunrisesunset.Zenith;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[29];
        r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getSinOfSunDeclination(java.math.BigDecimal)>(r1);
        r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getCosineOfSunDeclination(java.math.BigDecimal)>(r5);
        $r14 = virtualinvoke r2.<com.luckycatlabs.sunrisesunset.Zenith: java.math.BigDecimal degrees()>();
        r7 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)>($r14);
        $d0 = virtualinvoke r7.<java.math.BigDecimal: double doubleValue()>();
        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);
        r8 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d1);
        $r15 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location>;
        $r16 = virtualinvoke $r15.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal getLatitude()>();
        $r17 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)>($r16);
        $d2 = virtualinvoke $r17.<java.math.BigDecimal: double doubleValue()>();
        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);
        r9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d3);
        $r18 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: com.luckycatlabs.sunrisesunset.dto.Location2 location>;
        $r19 = virtualinvoke $r18.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal getLatitude()>();
        $r20 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)>($r19);
        $d4 = virtualinvoke $r20.<java.math.BigDecimal: double doubleValue()>();
        $d5 = staticinvoke <java.lang.Math: double cos(double)>($d4);
        r10 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d5);
        r11 = virtualinvoke r5.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r9);
        r12 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>(r11);
        r13 = virtualinvoke r6.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r10);
        $r21 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal divideBy(java.math.BigDecimal,java.math.BigDecimal)>(r12, r13);
        $r22 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>($r21);
        r4[0] = 1;
        return $r22;
    }

    private java.math.BigDecimal getSinOfSunDeclination(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r4, r5, $r6, $r7, $r8;
        boolean[][] $r2;
        boolean[] r3;
        double $d0, $d1;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[30];
        $r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)>(r1);
        $d0 = virtualinvoke $r6.<java.math.BigDecimal: double doubleValue()>();
        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d0);
        r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d1);
        $r7 = new java.math.BigDecimal;
        specialinvoke $r7.<java.math.BigDecimal: void <init>(java.lang.String)>("0.39782");
        r5 = virtualinvoke r4.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r7);
        $r8 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>(r5);
        r3[0] = 1;
        return $r8;
    }

    private java.math.BigDecimal getCosineOfSunDeclination(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r4, r5, $r6;
        boolean[][] $r2;
        boolean[] r3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[31];
        $d0 = virtualinvoke r1.<java.math.BigDecimal: double doubleValue()>();
        $d1 = staticinvoke <java.lang.Math: double asin(double)>($d0);
        r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d1);
        $d2 = virtualinvoke r4.<java.math.BigDecimal: double doubleValue()>();
        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);
        r5 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d3);
        $r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>(r5);
        r3[0] = 1;
        return $r6;
    }

    private java.math.BigDecimal getSunLocalHour(java.math.BigDecimal, java.lang.Boolean)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r5, r6, $r7, $r8, $r9;
        java.lang.Boolean r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        r2 := @parameter1: java.lang.Boolean;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[32];
        r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getArcCosineFor(java.math.BigDecimal)>(r1);
        r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal convertRadiansToDegrees(java.math.BigDecimal)>(r5);
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $r7 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(360L);
        r6 = virtualinvoke $r7.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>(r6);
        r4[1] = 1;

     label1:
        $r8 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(15L);
        $r9 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal divideBy(java.math.BigDecimal,java.math.BigDecimal)>(r6, $r8);
        r4[2] = 1;
        return $r9;
    }

    private java.math.BigDecimal getLocalMeanTime(java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r2, r3, r6, r7, r8, $r9, $r10, $r11, r12, $r13, $r14, $r15;
        boolean[][] $r4;
        boolean[] r5;
        double $d0, $d1;
        byte $b0, $b1;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        r2 := @parameter1: java.math.BigDecimal;
        r3 := @parameter2: java.math.BigDecimal;
        $r4 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r5 = $r4[33];
        r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getRightAscension(java.math.BigDecimal)>(r1);
        $r9 = new java.math.BigDecimal;
        specialinvoke $r9.<java.math.BigDecimal: void <init>(java.lang.String)>("0.06571");
        r7 = virtualinvoke r2.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r9);
        $r10 = virtualinvoke r3.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r6);
        r8 = virtualinvoke $r10.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>(r7);
        $r11 = new java.math.BigDecimal;
        specialinvoke $r11.<java.math.BigDecimal: void <init>(java.lang.String)>("6.622");
        r12 = virtualinvoke r8.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r11);
        $d0 = virtualinvoke r12.<java.math.BigDecimal: double doubleValue()>();
        $b0 = $d0 cmpg 0.0;
        r5[0] = 1;
        if $b0 >= 0 goto label1;

        $r13 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(24L);
        r12 = virtualinvoke r12.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r13);
        r5[1] = 1;
        goto label2;

     label1:
        $d1 = virtualinvoke r12.<java.math.BigDecimal: double doubleValue()>();
        $b1 = $d1 cmpl 24.0;
        r5[2] = 1;
        if $b1 <= 0 goto label2;

        $r14 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(24L);
        r12 = virtualinvoke r12.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r14);
        r5[3] = 1;

     label2:
        $r15 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>(r12);
        r5[4] = 1;
        return $r15;
    }

    private java.math.BigDecimal getLocalTime(java.math.BigDecimal, java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r5, r6, r7, $r8, $r9;
        java.util.Calendar r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        r2 := @parameter1: java.util.Calendar;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[34];
        $r8 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getBaseLongitudeHour()>();
        r5 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r8);
        r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal getUTCOffSet(java.util.Calendar)>(r2);
        r7 = virtualinvoke r5.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>(r6);
        $r9 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal adjustForDST(java.math.BigDecimal,java.util.Calendar)>(r7, r2);
        r4[0] = 1;
        return $r9;
    }

    private java.math.BigDecimal adjustForDST(java.math.BigDecimal, java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r5, $r8, $r9;
        java.util.Calendar r2;
        boolean[][] $r3;
        boolean[] r4;
        java.util.TimeZone $r6;
        java.util.Date $r7;
        boolean $z0;
        double $d0;
        byte $b0;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        r2 := @parameter1: java.util.Calendar;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[35];
        r5 = r1;
        $r6 = r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.util.TimeZone timeZone>;
        $r7 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();
        $z0 = virtualinvoke $r6.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>($r7);
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $r8 = <java.math.BigDecimal: java.math.BigDecimal ONE>;
        r5 = virtualinvoke r5.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r8);
        r4[1] = 1;

     label1:
        $d0 = virtualinvoke r5.<java.math.BigDecimal: double doubleValue()>();
        $b0 = $d0 cmpl 24.0;
        r4[2] = 1;
        if $b0 <= 0 goto label2;

        $r9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(24L);
        r5 = virtualinvoke r5.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r9);
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return r5;
    }

    private java.lang.String getLocalTimeAsString(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r6, $r11, $r16, $r17, r19;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r5, $r12, $r14, $r20, $r21, $r23, $r25, $r26, $r28, $r30, $r31, $r32, $r33;
        java.lang.String r7, r8, $r9, $r10, $r13, $r15, $r22, $r24, $r27, $r29, $r34;
        java.math.RoundingMode $r18;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[36];
        $r9 = virtualinvoke r1.<java.math.BigDecimal: java.lang.String toPlainString()>();
        r4 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
        $r10 = r4[0];
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);
        $r11 = new java.math.BigDecimal;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.");
        $r13 = r4[1];
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.math.BigDecimal: void <init>(java.lang.String)>($r15);
        r6 = $r11;
        $r16 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(60L);
        $r17 = virtualinvoke r6.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r16);
        $r18 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
        r19 = virtualinvoke $r17.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(0, $r18);
        $i1 = virtualinvoke r19.<java.math.BigDecimal: int intValue()>();
        r3[0] = 1;
        if $i1 != 60 goto label1;

        r19 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;
        i0 = i0 + 1;
        r3[1] = 1;

     label1:
        $i2 = virtualinvoke r19.<java.math.BigDecimal: int intValue()>();
        r3[2] = 1;
        if $i2 >= 10 goto label2;

        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
        $r22 = virtualinvoke r19.<java.math.BigDecimal: java.lang.String toPlainString()>();
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[3] = 1;
        goto label3;

     label2:
        $r24 = virtualinvoke r19.<java.math.BigDecimal: java.lang.String toPlainString()>();
        r3[4] = 1;

     label3:
        r7 = $r24;
        r3[5] = 1;
        if i0 >= 10 goto label4;

        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[6] = 1;
        goto label5;

     label4:
        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        r3[7] = 1;

     label5:
        r8 = $r29;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[8] = 1;
        return $r34;
    }

    private java.math.BigDecimal getDayOfYear(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        java.math.BigDecimal $r4;
        int $i0;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[37];
        $r4 = new java.math.BigDecimal;
        $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(6);
        specialinvoke $r4.<java.math.BigDecimal: void <init>(int)>($i0);
        r3[0] = 1;
        return $r4;
    }

    private java.math.BigDecimal getUTCOffSet(java.util.Calendar)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.util.Calendar r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1;
        java.math.BigDecimal r4, $r5, $r7;
        java.math.RoundingMode $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.util.Calendar;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[38];
        i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(15);
        $r5 = new java.math.BigDecimal;
        $i1 = i0 / 3600000;
        specialinvoke $r5.<java.math.BigDecimal: void <init>(int)>($i1);
        r4 = $r5;
        $r6 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
        $r7 = virtualinvoke r4.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(0, $r6);
        r3[0] = 1;
        return $r7;
    }

    private java.math.BigDecimal getArcCosineFor(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r4, $r5;
        boolean[][] $r2;
        boolean[] r3;
        double $d0, $d1;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[39];
        $d0 = virtualinvoke r1.<java.math.BigDecimal: double doubleValue()>();
        $d1 = staticinvoke <java.lang.Math: double acos(double)>($d0);
        r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($d1);
        $r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>(r4);
        r3[0] = 1;
        return $r5;
    }

    private java.math.BigDecimal convertRadiansToDegrees(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, $r4, $r5;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[40];
        $r4 = new java.math.BigDecimal;
        specialinvoke $r4.<java.math.BigDecimal: void <init>(double)>(57.29577951308232);
        $r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal multiplyBy(java.math.BigDecimal,java.math.BigDecimal)>(r1, $r4);
        r3[0] = 1;
        return $r5;
    }

    private java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, $r4, $r5;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[41];
        $r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>(0.017453292519943295);
        $r5 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal multiplyBy(java.math.BigDecimal,java.math.BigDecimal)>(r1, $r4);
        r3[0] = 1;
        return $r5;
    }

    private java.math.BigDecimal multiplyBy(java.math.BigDecimal, java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r2, $r5, $r6;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        r2 := @parameter1: java.math.BigDecimal;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[42];
        $r5 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>(r2);
        $r6 = specialinvoke r0.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: java.math.BigDecimal setScale(java.math.BigDecimal)>($r5);
        r4[0] = 1;
        return $r6;
    }

    private java.math.BigDecimal divideBy(java.math.BigDecimal, java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        java.math.RoundingMode $r5;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        r2 := @parameter1: java.math.BigDecimal;
        $r3 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[43];
        $r5 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
        $r6 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>(r2, 4, $r5);
        r4[0] = 1;
        return $r6;
    }

    private java.math.BigDecimal setScale(java.math.BigDecimal)
    {
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator r0;
        java.math.BigDecimal r1, $r5;
        boolean[][] $r2;
        boolean[] r3;
        java.math.RoundingMode $r4;

        r0 := @this: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator;
        r1 := @parameter0: java.math.BigDecimal;
        $r2 = <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[44];
        $r4 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;
        $r5 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>(4, $r4);
        r3[0] = 1;
        return $r5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRi()>();
        r1 = $r0[45];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46;

        $r0 = newmultiarray (boolean)[46][];
        <com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[3];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[8];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[13];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[7];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[4];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[3];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[3];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[5];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[3];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[5];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[1];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[5];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[9];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[1];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[38] = $r39;
        $r40 = newarray (boolean)[1];
        $r0[39] = $r40;
        $r41 = newarray (boolean)[1];
        $r0[40] = $r41;
        $r42 = newarray (boolean)[1];
        $r0[41] = $r42;
        $r43 = newarray (boolean)[1];
        $r0[42] = $r43;
        $r44 = newarray (boolean)[1];
        $r0[43] = $r44;
        $r45 = newarray (boolean)[1];
        $r0[44] = $r45;
        $r46 = newarray (boolean)[1];
        $r0[45] = $r46;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/luckycatlabs/sunrisesunset/calculator/SolarEventCalculator", 1949900272905256189L);
        return $r0;
    }
}
public class com.luckycatlabs.sunrisesunset.dto.Location2 extends java.lang.Object
{
    private java.math.BigDecimal latitude;
    private java.math.BigDecimal longitude;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.String)
    {
        com.luckycatlabs.sunrisesunset.dto.Location2 r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        java.math.BigDecimal $r5, $r6;

        r0 := @this: com.luckycatlabs.sunrisesunset.dto.Location2;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.luckycatlabs.sunrisesunset.dto.Location2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.luckycatlabs.sunrisesunset.dto.Location2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r5 = new java.math.BigDecimal;
        specialinvoke $r5.<java.math.BigDecimal: void <init>(java.lang.String)>(r1);
        r0.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal latitude> = $r5;
        $r6 = new java.math.BigDecimal;
        specialinvoke $r6.<java.math.BigDecimal: void <init>(java.lang.String)>(r2);
        r0.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal longitude> = $r6;
        r4[0] = 1;
        return;
    }

    public java.math.BigDecimal getLatitude()
    {
        com.luckycatlabs.sunrisesunset.dto.Location2 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.math.BigDecimal $r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.dto.Location2;
        $r1 = <com.luckycatlabs.sunrisesunset.dto.Location2: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.dto.Location2: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal latitude>;
        r2[0] = 1;
        return $r3;
    }

    public java.math.BigDecimal getLongitude()
    {
        com.luckycatlabs.sunrisesunset.dto.Location2 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.math.BigDecimal $r3;

        r0 := @this: com.luckycatlabs.sunrisesunset.dto.Location2;
        $r1 = <com.luckycatlabs.sunrisesunset.dto.Location2: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.luckycatlabs.sunrisesunset.dto.Location2: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<com.luckycatlabs.sunrisesunset.dto.Location2: java.math.BigDecimal longitude>;
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.luckycatlabs.sunrisesunset.dto.Location2: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <com.luckycatlabs.sunrisesunset.dto.Location2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/luckycatlabs/sunrisesunset/dto/Location2", -8199203421250510724L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.ArrowView extends android.widget.ImageView
{
    android.graphics.Paint arrow_paint;
    android.graphics.Paint text_paint;
    com.zoffcc.applications.aagtl.aagtl main_aagtl;
    long mLastCalcSunMillis;
    public double azmiuth_cache;
    public double zenith_cache;
    public java.lang.String sunrise_cache;
    public java.lang.String sunset_cache;
    public double elevation;
    public double moon_azimuth_cache;
    public double moon_evelation_cache;
    java.lang.Boolean must_calc_new;
    com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator calc;
    java.util.Calendar cx;
    bpi.sdbm.illuminance.SolarPosition$SunCoordinates sc;
    int COLOR_QUALITY_INNER;
    int COLOR_QUALITY_OUTER;
    int COLOR_ARROW_ATTARGET;
    int COLOR_ARROW_NEAR;
    int COLOR_ARROW_DEFAULT;
    int COLOR_ARROW_OUTER_LINE;
    int COLOR_CIRCLE_OUTLINE;
    int DISTANCE_DISABLE_ARROW;
    int NORTH_INDICATOR_SIZE;
    double ARROW_OFFSET;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.ArrowView r0;
        android.content.Context r1;
        com.zoffcc.applications.aagtl.aagtl r2;
        boolean[][] $r3;
        boolean[] r4;
        android.graphics.Paint $r5, $r6, $r8, $r9, $r10, $r13;
        java.lang.Boolean $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Typeface $r11;

        r0 := @this: com.zoffcc.applications.aagtl.ArrowView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: com.zoffcc.applications.aagtl.aagtl;
        $r3 = <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context)>(r1);
        $r5 = new android.graphics.Paint;
        specialinvoke $r5.<android.graphics.Paint: void <init>(int)>(0);
        r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint> = $r5;
        $r6 = new android.graphics.Paint;
        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(0);
        r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint> = $r6;
        r0.<com.zoffcc.applications.aagtl.ArrowView: long mLastCalcSunMillis> = -1L;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double azmiuth_cache> = -1.0;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double zenith_cache> = -1.0;
        r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String sunrise_cache> = "";
        r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String sunset_cache> = "";
        r0.<com.zoffcc.applications.aagtl.ArrowView: double elevation> = 0.0;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double moon_azimuth_cache> = -1.0;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double moon_evelation_cache> = -1.0;
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.Boolean must_calc_new> = $r7;
        r0.<com.zoffcc.applications.aagtl.ArrowView: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator calc> = null;
        r0.<com.zoffcc.applications.aagtl.ArrowView: java.util.Calendar cx> = null;
        r0.<com.zoffcc.applications.aagtl.ArrowView: bpi.sdbm.illuminance.SolarPosition$SunCoordinates sc> = null;
        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#348017");
        r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_QUALITY_INNER> = $i0;
        $i1 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#150517");
        r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_QUALITY_OUTER> = $i1;
        $i2 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#C11B17");
        r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_ARROW_ATTARGET> = $i2;
        $i3 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#F87217");
        r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_ARROW_NEAR> = $i3;
        $i4 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#348017");
        r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_ARROW_DEFAULT> = $i4;
        $i5 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#150517");
        r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_ARROW_OUTER_LINE> = $i5;
        $i6 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#424242");
        r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_CIRCLE_OUTLINE> = $i6;
        r0.<com.zoffcc.applications.aagtl.ArrowView: int DISTANCE_DISABLE_ARROW> = 2;
        r0.<com.zoffcc.applications.aagtl.ArrowView: int NORTH_INDICATOR_SIZE> = 20;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double ARROW_OFFSET> = 0.3333333333333333;
        $r8 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(-1);
        $r9 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke $r9.<android.graphics.Paint: void setTextSize(float)>(19.0F);
        $r10 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        $r11 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT_BOLD>;
        virtualinvoke $r10.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r11);
        $r13 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke $r13.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl> = r2;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: void clear_stuff()>();
        r4[0] = 1;
        return;
    }

    public java.lang.String roundTwoDecimals(double)
    {
        com.zoffcc.applications.aagtl.ArrowView r0;
        double d0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Object[] $r3;
        java.lang.Double $r4;
        java.lang.String $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ArrowView;
        d0 := @parameter0: double;
        $r1 = <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = newarray (java.lang.Object)[1];
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);
        $r3[0] = $r4;
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r3);
        r2[0] = 1;
        return $r5;
    }

    public void calc_sun_stats()
    {
        com.zoffcc.applications.aagtl.ArrowView r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.TimeZone r3;
        com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret r4;
        long $l0, $l1, $l2, $l5;
        byte $b3, $b4;
        boolean $z0, $z1;
        java.lang.Boolean $r6, $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator $r8, $r26, $r29, $r32;
        com.luckycatlabs.sunrisesunset.dto.Location2 $r9;
        com.zoffcc.applications.aagtl.aagtl $r10, $r13, $r19, $r21;
        com.zoffcc.applications.aagtl.aagtl$settings $r11, $r14, $r20, $r22;
        java.lang.String $r12, $r15, $r16, $r28, $r31;
        java.util.Calendar $r17, $r27, $r30, $r33;
        java.util.Date $r18;
        bpi.sdbm.illuminance.SolarPosition$SunCoordinates $r23, $r24, $r25;

        r0 := @this: com.zoffcc.applications.aagtl.ArrowView;
        $r1 = <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        $l1 = r0.<com.zoffcc.applications.aagtl.ArrowView: long mLastCalcSunMillis>;
        $l2 = $l0 - $l1;
        $b3 = $l2 cmp 60000L;
        r2[0] = 1;
        if $b3 <= 0 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);
        r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.Boolean must_calc_new> = $r6;
        $r7 = r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.Boolean must_calc_new>;
        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
        r2[3] = 1;
        if $z1 != 0 goto label3;

        $d0 = r0.<com.zoffcc.applications.aagtl.ArrowView: double azmiuth_cache>;
        $b4 = $d0 cmpl -1.0;
        r2[4] = 1;
        if $b4 != 0 goto label4;

     label3:
        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        r0.<com.zoffcc.applications.aagtl.ArrowView: long mLastCalcSunMillis> = $l5;
        r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
        $r8 = new com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;
        $r9 = new com.luckycatlabs.sunrisesunset.dto.Location2;
        $r10 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d1 = $r11.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat>;
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d1);
        $r13 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r14 = $r13.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d2 = $r14.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon>;
        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d2);
        specialinvoke $r9.<com.luckycatlabs.sunrisesunset.dto.Location2: void <init>(java.lang.String,java.lang.String)>($r12, $r15);
        $r16 = virtualinvoke r3.<java.util.TimeZone: java.lang.String getID()>();
        specialinvoke $r8.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: void <init>(com.luckycatlabs.sunrisesunset.dto.Location2,java.lang.String)>($r9, $r16);
        r0.<com.zoffcc.applications.aagtl.ArrowView: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator calc> = $r8;
        $r17 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
        r0.<com.zoffcc.applications.aagtl.ArrowView: java.util.Calendar cx> = $r17;
        $r18 = new java.util.Date;
        specialinvoke $r18.<java.util.Date: void <init>()>();
        $r19 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r20 = $r19.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d3 = $r20.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat>;
        $r21 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r22 = $r21.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d4 = $r22.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon>;
        $r23 = staticinvoke <bpi.sdbm.illuminance.SolarPosition: bpi.sdbm.illuminance.SolarPosition$SunCoordinates getSunPosition(java.util.Date,double,double)>($r18, $d3, $d4);
        r0.<com.zoffcc.applications.aagtl.ArrowView: bpi.sdbm.illuminance.SolarPosition$SunCoordinates sc> = $r23;
        $r24 = r0.<com.zoffcc.applications.aagtl.ArrowView: bpi.sdbm.illuminance.SolarPosition$SunCoordinates sc>;
        $d5 = $r24.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double azimuth>;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double azmiuth_cache> = $d5;
        $r25 = r0.<com.zoffcc.applications.aagtl.ArrowView: bpi.sdbm.illuminance.SolarPosition$SunCoordinates sc>;
        $d6 = $r25.<bpi.sdbm.illuminance.SolarPosition$SunCoordinates: double zenithAngle>;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double zenith_cache> = $d6;
        $r26 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator calc>;
        $r27 = r0.<com.zoffcc.applications.aagtl.ArrowView: java.util.Calendar cx>;
        $r28 = virtualinvoke $r26.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: java.lang.String getOfficialSunriseForDate(java.util.Calendar)>($r27);
        r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String sunrise_cache> = $r28;
        $r29 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator calc>;
        $r30 = r0.<com.zoffcc.applications.aagtl.ArrowView: java.util.Calendar cx>;
        $r31 = virtualinvoke $r29.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: java.lang.String getOfficialSunsetForDate(java.util.Calendar)>($r30);
        r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String sunset_cache> = $r31;
        $r32 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator calc>;
        $r33 = r0.<com.zoffcc.applications.aagtl.ArrowView: java.util.Calendar cx>;
        r4 = virtualinvoke $r32.<com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator: com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret computeMoon(java.util.Calendar)>($r33);
        $d7 = r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double az>;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double moon_azimuth_cache> = $d7;
        $d8 = r4.<com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator$moonCoor_ret: double alt>;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double moon_evelation_cache> = $d8;
        r2[5] = 1;

     label4:
        $d9 = r0.<com.zoffcc.applications.aagtl.ArrowView: double zenith_cache>;
        $d10 = 90.0 - $d9;
        r0.<com.zoffcc.applications.aagtl.ArrowView: double elevation> = $d10;
        r2[6] = 1;
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.zoffcc.applications.aagtl.ArrowView r0;
        android.graphics.Canvas r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i65, $i66, $i67, $i68, $i69, $i70, $i71, i72, $i73, i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i84, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113;
        int[] r4;
        android.graphics.RectF r5, r7, r8, $r11, $r125, $r133, $r149, r150;
        boolean z0;
        short s2;
        com.zoffcc.applications.aagtl.Coordinate r6, $r18;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47;
        double[] r9, r142;
        android.graphics.Path r10, $r143;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39;
        android.graphics.Paint $r12, $r13, $r14, $r16, $r17, $r38, $r39, $r40, $r48, $r55, $r64, $r74, $r82, $r88, $r94, $r95, $r101, $r107, $r119, $r124, $r126, $r127, $r129, $r130, $r134, $r135, $r137, $r141, $r144, $r146, $r147, $r148, $r151, $r153, $r154, $r155;
        android.graphics.Paint$Style $r15, $r128, $r136, $r145, $r152;
        com.zoffcc.applications.aagtl.aagtl $r19, $r21, $r23, $r26, $r29, $r32, $r34, $r36, $r58, $r67, $r77, $r108, $r113, $r120, $r131, $r138;
        com.zoffcc.applications.aagtl.aagtl$settings $r20, $r22;
        com.zoffcc.applications.aagtl.Rose $r24, $r27, $r30, $r109, $r114, $r121, $r139;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r25, $r28, $r31, $r110, $r115, $r122, $r140;
        com.zoffcc.applications.aagtl.CrossHair $r33, $r35, $r37, $r59, $r68, $r78, $r132;
        byte $b33, $b47, b64, $b82, $b83, $b85;
        java.lang.StringBuilder $r41, $r42, $r45, $r46, $r49, $r50, $r52, $r53, $r56, $r57, $r61, $r62, $r65, $r66, $r71, $r72, $r75, $r76, $r80, $r83, $r84, $r86, $r89, $r90, $r92, $r96, $r97, $r99, $r102, $r103, $r105, $r111, $r112, $r117;
        java.lang.String $r43, $r44, $r47, $r51, $r54, $r60, $r63, $r69, $r70, $r73, $r79, $r81, $r85, $r87, $r91, $r93, $r98, $r100, $r104, $r106, $r116, $r118, $r123;

        r0 := @this: com.zoffcc.applications.aagtl.ArrowView;
        r1 := @parameter0: android.graphics.Canvas;
        $r2 = <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $i7 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i8 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i8);
        $i10 = $i9 / 4;
        $f0 = (float) $i10;
        $f1 = $f0 * 1.1F;
        i0 = (int) $f1;
        $i11 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i12 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i12);
        $i14 = $i13 / 2;
        $i15 = i0 / 2;
        i1 = $i14 - $i15;
        r4 = newarray (int)[2];
        $i16 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i17 = $i16 / 2;
        r4[0] = $i17;
        $i18 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i19 = $i18 / 2;
        r4[1] = $i19;
        $r11 = new android.graphics.RectF;
        $i20 = r4[0];
        $i21 = $i20 - i1;
        $f2 = (float) $i21;
        $i22 = r4[1];
        $i23 = $i22 - i1;
        $f3 = (float) $i23;
        $i24 = r4[0];
        $i25 = $i24 - i1;
        $i26 = i1 * 2;
        $i27 = $i25 + $i26;
        $f4 = (float) $i27;
        $i28 = r4[1];
        $i29 = $i28 - i1;
        $i30 = i1 * 2;
        $i31 = $i29 + $i30;
        $f5 = (float) $i31;
        specialinvoke $r11.<android.graphics.RectF: void <init>(float,float,float,float)>($f2, $f3, $f4, $f5);
        r5 = $r11;
        z0 = 0;
        s2 = 360;
        $r12 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke $r12.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r13 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        $i32 = r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_CIRCLE_OUTLINE>;
        virtualinvoke $r13.<android.graphics.Paint: void setColor(int)>($i32);
        $r14 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r14.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r15);
        $r16 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke $r16.<android.graphics.Paint: void setStrokeWidth(float)>(3.0F);
        $f6 = (float) z0;
        $f7 = (float) s2;
        $r17 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r5, $f6, $f7, 0, $r17);
        $r18 = new com.zoffcc.applications.aagtl.Coordinate;
        $r19 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r20 = $r19.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d3 = $r20.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat>;
        $r21 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r22 = $r21.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d4 = $r22.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon>;
        specialinvoke $r18.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>($d3, $d4);
        r6 = $r18;
        d0 = 0.0;
        d1 = 0.0;
        $r23 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r24 = $r23.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r25 = $r24.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r3[0] = 1;
        if $r25 == null goto label1;

        $r26 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r27 = $r26.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r28 = $r27.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        d0 = virtualinvoke r6.<com.zoffcc.applications.aagtl.Coordinate: double distance_to(com.zoffcc.applications.aagtl.Coordinate)>($r28);
        $r29 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r30 = $r29.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r31 = $r30.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $d5 = virtualinvoke r6.<com.zoffcc.applications.aagtl.Coordinate: double bearing_to(com.zoffcc.applications.aagtl.Coordinate)>($r31);
        $r32 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r33 = $r32.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d6 = $r33.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        d1 = $d5 - $d6;
        r3[1] = 1;

     label1:
        $r34 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r35 = $r34.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d7 = $r35.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        $b33 = $d7 cmpl -1.0;
        r3[2] = 1;
        if $b33 == 0 goto label2;

        $r36 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r37 = $r36.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d8 = $r37.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d8);
        $i34 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i35 = $i34 / 2;
        $d9 = (double) $i35;
        $d10 = staticinvoke <java.lang.Math: double sin(double)>(d2);
        $d11 = (double) i1;
        $d12 = $d11 * 1.15;
        $d13 = $d10 * $d12;
        $d14 = $d9 - $d13;
        i3 = (int) $d14;
        $i36 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i37 = $i36 / 2;
        $d15 = (double) $i37;
        $d16 = staticinvoke <java.lang.Math: double cos(double)>(d2);
        $d17 = (double) i1;
        $d18 = $d17 * 1.15;
        $d19 = $d16 * $d18;
        $d20 = $d15 - $d19;
        i4 = (int) $d20;
        $r38 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke $r38.<android.graphics.Paint: void setColor(int)>(-1);
        $f8 = (float) i3;
        $f9 = (float) i4;
        $r39 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>("N", $f8, $f9, $r39);
        r3[3] = 1;

     label2:
        $r40 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke $r40.<android.graphics.Paint: void setColor(int)>(-1);
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("distance to target: ");
        $r43 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String roundTwoDecimals(double)>(d0);
        $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r43);
        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
        $r48 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r47, 10.0F, 34.0F, $r48);
        $r49 = new java.lang.StringBuilder;
        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target: ");
        $i38 = (int) d1;
        $r51 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i38);
        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \ufffd");
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        $r55 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r54, 10.0F, 68.0F, $r55);
        $r56 = new java.lang.StringBuilder;
        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("my heading: ");
        $r58 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r59 = $r58.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d21 = $r59.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        $i39 = (int) $d21;
        $r60 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i39);
        $r61 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \ufffd");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        $i40 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i41 = $i40 / 2;
        $f10 = (float) $i41;
        $r64 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r63, $f10, 68.0F, $r64);
        $r65 = new java.lang.StringBuilder;
        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gps accuracy: ");
        $r67 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r68 = $r67.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d22 = $r68.<com.zoffcc.applications.aagtl.CrossHair: double gps_acc>;
        $r69 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String roundTwoDecimals(double)>($d22);
        $r70 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r69);
        $r71 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m");
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
        $r74 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r73, 10.0F, 102.0F, $r74);
        $r75 = new java.lang.StringBuilder;
        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gps Sats.: ");
        $r77 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r78 = $r77.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $i42 = $r78.<com.zoffcc.applications.aagtl.CrossHair: int used_sats>;
        $r79 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i42);
        $r80 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();
        $r82 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r81, 10.0F, 136.0F, $r82);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: void calc_sun_stats()>();
        $r83 = new java.lang.StringBuilder;
        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sunrise: ");
        $r85 = r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String sunrise_cache>;
        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);
        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();
        $i43 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i44 = $i43 - 136;
        $f11 = (float) $i44;
        $r88 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r87, 10.0F, $f11, $r88);
        $r89 = new java.lang.StringBuilder;
        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();
        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sunset: ");
        $r91 = r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String sunset_cache>;
        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);
        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();
        $i45 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i46 = $i45 - 102;
        $f12 = (float) $i46;
        $r94 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r93, 10.0F, $f12, $r94);
        $d23 = r0.<com.zoffcc.applications.aagtl.ArrowView: double elevation>;
        $b47 = $d23 cmpg -0.83;
        r3[4] = 1;
        if $b47 >= 0 goto label3;

        $i48 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i49 = $i48 / 2;
        $f13 = (float) $i49;
        $i50 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i51 = $i50 - 136;
        $f14 = (float) $i51;
        $r95 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>("elevation: *night*", $f13, $f14, $r95);
        r3[5] = 1;
        goto label4;

     label3:
        $r96 = new java.lang.StringBuilder;
        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();
        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("elevation: ");
        $d24 = r0.<com.zoffcc.applications.aagtl.ArrowView: double elevation>;
        $r98 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String roundTwoDecimals(double)>($d24);
        $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);
        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();
        $i52 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i53 = $i52 / 2;
        $f15 = (float) $i53;
        $i54 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i55 = $i54 - 136;
        $f16 = (float) $i55;
        $r101 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r100, $f15, $f16, $r101);
        r3[6] = 1;

     label4:
        $r102 = new java.lang.StringBuilder;
        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();
        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("azimuth: ");
        $d25 = r0.<com.zoffcc.applications.aagtl.ArrowView: double azmiuth_cache>;
        $r104 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: java.lang.String roundTwoDecimals(double)>($d25);
        $r105 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);
        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();
        $i56 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i57 = $i56 / 2;
        $f17 = (float) $i57;
        $i58 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i59 = $i58 - 102;
        $f18 = (float) $i59;
        $r107 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r106, $f17, $f18, $r107);
        $r108 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r109 = $r108.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r110 = $r109.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r3[7] = 1;
        if $r110 == null goto label5;

        $r111 = new java.lang.StringBuilder;
        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();
        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Geocache: ");
        $r113 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r114 = $r113.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r115 = $r114.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $r116 = $r115.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r117 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);
        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();
        $i60 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i61 = $i60 - 68;
        $f19 = (float) $i61;
        $r119 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r118, 10.0F, $f19, $r119);
        $r120 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r121 = $r120.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r122 = $r121.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $r123 = $r122.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $i62 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i63 = $i62 - 34;
        $f20 = (float) $i63;
        $r124 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r123, 10.0F, $f20, $r124);
        r3[8] = 1;

     label5:
        b64 = 15;
        $r125 = new android.graphics.RectF;
        $i65 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i66 = $i65 - b64;
        $i67 = $i66 - 2;
        $f21 = (float) $i67;
        $i68 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $f22 = (float) $i68;
        $i69 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $f23 = (float) $i69;
        specialinvoke $r125.<android.graphics.RectF: void <init>(float,float,float,float)>($f21, 0.0F, $f22, $f23);
        r7 = $r125;
        $r126 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        $i70 = r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_QUALITY_OUTER>;
        virtualinvoke $r126.<android.graphics.Paint: void setColor(int)>($i70);
        $r127 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        $r128 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r127.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r128);
        $r129 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke $r129.<android.graphics.Paint: void setStrokeWidth(float)>(3.0F);
        $r130 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r7, $r130);
        $i71 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        i72 = $i71 - 1;
        $f24 = (float) i72;
        $r131 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r132 = $r131.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $i73 = $r132.<com.zoffcc.applications.aagtl.CrossHair: int used_sats>;
        $f25 = (float) $i73;
        $f26 = $f25 / 13.0F;
        $f27 = $f24 * $f26;
        i74 = (int) $f27;
        $r133 = new android.graphics.RectF;
        $i75 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i76 = $i75 - b64;
        $i77 = $i76 - 1;
        $f28 = (float) $i77;
        $i78 = i72 - i74;
        $f29 = (float) $i78;
        $i79 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i80 = $i79 - 1;
        $f30 = (float) $i80;
        $f31 = (float) i72;
        specialinvoke $r133.<android.graphics.RectF: void <init>(float,float,float,float)>($f28, $f29, $f30, $f31);
        r8 = $r133;
        $r134 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        $i81 = r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_QUALITY_INNER>;
        virtualinvoke $r134.<android.graphics.Paint: void setColor(int)>($i81);
        $r135 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        $r136 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke $r135.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r136);
        $r137 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r8, $r137);
        $r138 = r0.<com.zoffcc.applications.aagtl.ArrowView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r139 = $r138.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r140 = $r139.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r3[9] = 1;
        if $r140 == null goto label14;

        $r141 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke $r141.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);
        $b82 = d0 cmpg 50.0;
        r3[10] = 1;
        if $b82 >= 0 goto label6;

        i5 = r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_ARROW_ATTARGET>;
        r3[11] = 1;
        goto label8;

     label6:
        $b83 = d0 cmpg 150.0;
        r3[12] = 1;
        if $b83 >= 0 goto label7;

        i5 = r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_ARROW_NEAR>;
        r3[13] = 1;
        goto label8;

     label7:
        i5 = r0.<com.zoffcc.applications.aagtl.ArrowView: int COLOR_ARROW_DEFAULT>;
        r3[14] = 1;

     label8:
        $i84 = r0.<com.zoffcc.applications.aagtl.ArrowView: int DISTANCE_DISABLE_ARROW>;
        $d26 = (double) $i84;
        $b85 = d0 cmpl $d26;
        r3[15] = 1;
        if $b85 <= 0 goto label13;

        r9 = newarray (double)[8];
        $i86 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i87 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        r142 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: double[] __get_arrow_transformed(int,int,int,int,double,double)>(0, 0, $i86, $i87, d1, 0.22);
        $r143 = new android.graphics.Path;
        specialinvoke $r143.<android.graphics.Path: void <init>()>();
        r10 = $r143;
        i6 = 0;
        r3[16] = 1;

     label9:
        r3[17] = 1;
        if i6 >= 4 goto label12;

        r3[18] = 1;
        if i6 != 0 goto label10;

        $i88 = i6 + 1;
        $i89 = $i88 * 2;
        $i90 = $i89 - 2;
        $d27 = r142[$i90];
        $f32 = (float) $d27;
        $i91 = i6 + 1;
        $i92 = $i91 * 2;
        $i93 = $i92 - 1;
        $d28 = r142[$i93];
        $f33 = (float) $d28;
        virtualinvoke r10.<android.graphics.Path: void moveTo(float,float)>($f32, $f33);
        r3[19] = 1;
        goto label11;

     label10:
        $i94 = i6 + 1;
        $i95 = $i94 * 2;
        $i96 = $i95 - 2;
        $d29 = r142[$i96];
        $f34 = (float) $d29;
        $i97 = i6 + 1;
        $i98 = $i97 * 2;
        $i99 = $i98 - 1;
        $d30 = r142[$i99];
        $f35 = (float) $d30;
        virtualinvoke r10.<android.graphics.Path: void lineTo(float,float)>($f34, $f35);
        r3[20] = 1;

     label11:
        i6 = i6 + 1;
        r3[21] = 1;
        goto label9;

     label12:
        virtualinvoke r10.<android.graphics.Path: void close()>();
        $r144 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        $r145 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke $r144.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r145);
        $r146 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke $r146.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r147 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke $r147.<android.graphics.Paint: void setColor(int)>(i5);
        $r148 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r10, $r148);
        r3[22] = 1;
        goto label14;

     label13:
        $i100 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $d31 = (double) $i100;
        $d32 = $d31 / 2.5;
        $i101 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $d33 = (double) $i101;
        $d34 = $d33 / 2.5;
        d35 = staticinvoke <java.lang.Math: double max(double,double)>($d32, $d34);
        $r149 = new android.graphics.RectF;
        $i102 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i103 = $i102 / 2;
        $d36 = (double) $i103;
        $d37 = d35 / 2.0;
        $d38 = $d36 - $d37;
        $i104 = (int) $d38;
        $f36 = (float) $i104;
        $i105 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i106 = $i105 / 2;
        $d39 = (double) $i106;
        $d40 = d35 / 2.0;
        $d41 = $d39 - $d40;
        $i107 = (int) $d41;
        $f37 = (float) $i107;
        $i108 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getWidth()>();
        $i109 = $i108 / 2;
        $d42 = (double) $i109;
        $d43 = d35 / 2.0;
        $d44 = $d42 + $d43;
        $i110 = (int) $d44;
        $f38 = (float) $i110;
        $i111 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ArrowView: int getHeight()>();
        $i112 = $i111 / 2;
        $d45 = (double) $i112;
        $d46 = d35 / 2.0;
        $d47 = $d45 + $d46;
        $i113 = (int) $d47;
        $f39 = (float) $i113;
        specialinvoke $r149.<android.graphics.RectF: void <init>(float,float,float,float)>($f36, $f37, $f38, $f39);
        r150 = $r149;
        $r151 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        $r152 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke $r151.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r152);
        $r153 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke $r153.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r154 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke $r154.<android.graphics.Paint: void setColor(int)>(i5);
        $r155 = r0.<com.zoffcc.applications.aagtl.ArrowView: android.graphics.Paint arrow_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r150, 0.0F, 360.0F, 0, $r155);
        r3[23] = 1;

     label14:
        r3[24] = 1;
        return;
    }

    public double[] __get_arrow_transformed(int, int, int, int, double, double)
    {
        com.zoffcc.applications.aagtl.ArrowView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35;
        boolean[][] $r1;
        boolean[] r2;
        double[] r3, r4;

        r0 := @this: com.zoffcc.applications.aagtl.ArrowView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        d0 := @parameter4: double;
        d1 := @parameter5: double;
        $r1 = <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r3 = newarray (double)[8];
        r3[0] = 0.0;
        $d9 = r0.<com.zoffcc.applications.aagtl.ArrowView: double ARROW_OFFSET>;
        $d10 = -2.0 + $d9;
        r3[1] = $d10;
        r3[2] = 1.0;
        $d11 = r0.<com.zoffcc.applications.aagtl.ArrowView: double ARROW_OFFSET>;
        $d12 = 1.0 + $d11;
        r3[3] = $d12;
        r3[4] = 0.0;
        $d13 = r0.<com.zoffcc.applications.aagtl.ArrowView: double ARROW_OFFSET>;
        $d14 = 0.0 + $d13;
        r3[5] = $d14;
        r3[6] = -1.0;
        $d15 = r0.<com.zoffcc.applications.aagtl.ArrowView: double ARROW_OFFSET>;
        $d16 = 1.0 + $d15;
        r3[7] = $d16;
        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i3);
        $d17 = (double) $i5;
        $d18 = $d17 * 0.7;
        $d19 = r0.<com.zoffcc.applications.aagtl.ArrowView: double ARROW_OFFSET>;
        $d20 = 2.0 * $d19;
        $d21 = $d18 / $d20;
        d2 = $d21 * d1;
        $i6 = i2 / 2;
        d3 = (double) $i6;
        $i7 = i3 / 2;
        d4 = (double) $i7;
        $d22 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);
        d5 = staticinvoke <java.lang.Math: double sin(double)>($d22);
        $d23 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);
        d6 = staticinvoke <java.lang.Math: double cos(double)>($d23);
        r4 = newarray (double)[8];
        i4 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i4 >= 4 goto label2;

        $i8 = i4 + 1;
        $i9 = $i8 * 2;
        $i10 = $i9 - 2;
        d7 = r3[$i10];
        $i11 = i4 + 1;
        $i12 = $i11 * 2;
        $i13 = $i12 - 1;
        d8 = r3[$i13];
        $i14 = i4 + 1;
        $i15 = $i14 * 2;
        $i16 = $i15 - 2;
        $d24 = d7 * d2;
        $d25 = $d24 * d6;
        $d26 = $d25 + d3;
        $d27 = d8 * d2;
        $d28 = $d27 * d5;
        $d29 = $d26 - $d28;
        r4[$i16] = $d29;
        $i17 = i4 + 1;
        $i18 = $i17 * 2;
        $i19 = $i18 - 1;
        $d30 = d8 * d2;
        $d31 = $d30 * d6;
        $d32 = $d31 + d4;
        $d33 = d7 * d2;
        $d34 = $d33 * d5;
        $d35 = $d32 + $d34;
        r4[$i19] = $d35;
        i4 = i4 + 1;
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return r4;
    }

    public void clear_stuff()
    {
        com.zoffcc.applications.aagtl.ArrowView r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.ArrowView;
        $r1 = <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r2[0] = 1;
        return;
    }

    public void onSizeChanged(int, int, int, int)
    {
        com.zoffcc.applications.aagtl.ArrowView r0;
        int i0, i1, i2, i3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.ArrowView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <com.zoffcc.applications.aagtl.ArrowView: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[25];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/ArrowView", -3870673452617404522L);
        return $r0;
    }
}
final class com.zoffcc.applications.aagtl.Base64$1 extends java.io.ObjectInputStream
{
    final java.lang.ClassLoader val$loader;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(java.io.InputStream, java.lang.ClassLoader)
    {
        com.zoffcc.applications.aagtl.Base64$1 r0;
        java.io.InputStream r1;
        java.lang.ClassLoader r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$1;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.lang.ClassLoader;
        $r3 = <com.zoffcc.applications.aagtl.Base64$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.zoffcc.applications.aagtl.Base64$1: java.lang.ClassLoader val$loader> = r2;
        specialinvoke r0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r1);
        r4[0] = 1;
        return;
    }

    public java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        com.zoffcc.applications.aagtl.Base64$1 r0;
        java.io.ObjectStreamClass r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Class r4, $r7;
        java.lang.String $r5;
        java.lang.ClassLoader $r6;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$1;
        r1 := @parameter0: java.io.ObjectStreamClass;
        $r2 = <com.zoffcc.applications.aagtl.Base64$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = virtualinvoke r1.<java.io.ObjectStreamClass: java.lang.String getName()>();
        $r6 = r0.<com.zoffcc.applications.aagtl.Base64$1: java.lang.ClassLoader val$loader>;
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r5, 0, $r6);
        r3[0] = 1;
        if r4 != null goto label1;

        $r7 = specialinvoke r0.<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>(r1);
        r3[1] = 1;
        return $r7;

     label1:
        r3[2] = 1;
        return r4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Base64$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.Base64$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/Base64$1", 6369256156654581441L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.Base64$InputStream extends java.io.FilterInputStream
{
    private boolean encode;
    private int position;
    private byte[] buffer;
    private int bufferLength;
    private int numSigBytes;
    private int lineLength;
    private boolean breakLines;
    private int options;
    private byte[] decodabet;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.io.InputStream)
    {
        com.zoffcc.applications.aagtl.Base64$InputStream r0;
        java.io.InputStream r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$InputStream;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<com.zoffcc.applications.aagtl.Base64$InputStream: void <init>(java.io.InputStream,int)>(r1, 0);
        r3[0] = 1;
        return;
    }

    public void <init>(java.io.InputStream, int)
    {
        com.zoffcc.applications.aagtl.Base64$InputStream r0;
        java.io.InputStream r1;
        int i0, $i1, $i2, $i4;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0, $z1, $z2;
        byte $b3;
        byte[] $r7, $r8;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$InputStream;
        r1 := @parameter0: java.io.InputStream;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int options> = i0;
        $i1 = i0 & 8;
        r3[0] = 1;
        if $i1 <= 0 goto label1;

        $z0 = 1;
        r3[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r3[2] = 1;

     label2:
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: boolean breakLines> = $z0;
        $i2 = i0 & 1;
        r3[3] = 1;
        if $i2 <= 0 goto label3;

        $z1 = 1;
        r3[4] = 1;
        goto label4;

     label3:
        $z1 = 0;
        r3[5] = 1;

     label4:
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: boolean encode> = $z1;
        $z2 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: boolean encode>;
        r3[6] = 1;
        if $z2 == 0 goto label5;

        $b3 = 4;
        r3[7] = 1;
        goto label6;

     label5:
        $b3 = 3;
        r3[8] = 1;

     label6:
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int bufferLength> = $b3;
        $i4 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int bufferLength>;
        $r7 = newarray (byte)[$i4];
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: byte[] buffer> = $r7;
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position> = -1;
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int lineLength> = 0;
        $r8 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] access$000(int)>(i0);
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: byte[] decodabet> = $r8;
        r3[9] = 1;
        return;
    }

    public int read() throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.Base64$InputStream r0;
        boolean[][] $r1;
        boolean[] r2;
        byte[] r3, $r5, r7, $r9, $r10, $r13;
        int i0, i1, i2, $i3, $i5, i6, i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23;
        boolean $z0, z1, z2, $z3, $z4;
        java.io.InputStream $r4, $r8;
        byte $b4, $b9, $b10, b21;
        java.io.IOException $r11, $r15;
        short $s24;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$InputStream;
        $r1 = <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i3 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position>;
        r2[0] = 1;
        if $i3 >= 0 goto label13;

        $z0 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: boolean encode>;
        r2[1] = 1;
        if $z0 == 0 goto label5;

        r3 = newarray (byte)[3];
        i0 = 0;
        i1 = 0;
        r2[2] = 1;

     label1:
        r2[3] = 1;
        if i1 >= 3 goto label2;

        $r4 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: java.io.InputStream in>;
        i2 = virtualinvoke $r4.<java.io.InputStream: int read()>();
        r2[4] = 1;
        if i2 < 0 goto label2;

        $b4 = (byte) i2;
        r3[i1] = $b4;
        i0 = i0 + 1;
        i1 = i1 + 1;
        r2[5] = 1;
        goto label1;

     label2:
        r2[6] = 1;
        if i0 <= 0 goto label3;

        $r5 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: byte[] buffer>;
        $i5 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int options>;
        staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] access$100(byte[],int,int,byte[],int,int)>(r3, 0, i0, $r5, 0, $i5);
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position> = 0;
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int numSigBytes> = 4;
        r2[7] = 1;
        goto label4;

     label3:
        r2[8] = 1;
        return -1;

     label4:
        r2[9] = 1;
        goto label13;

     label5:
        r7 = newarray (byte)[4];
        z1 = 0;
        i6 = 0;
        r2[10] = 1;

     label6:
        r2[11] = 1;
        if i6 >= 4 goto label10;

        z2 = 0;
        r2[12] = 1;

     label7:
        $r8 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: java.io.InputStream in>;
        i7 = virtualinvoke $r8.<java.io.InputStream: int read()>();
        r2[13] = 1;
        if i7 < 0 goto label8;

        $r9 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: byte[] decodabet>;
        $i8 = i7 & 127;
        $b9 = $r9[$i8];
        r2[14] = 1;
        if $b9 <= -5 goto label7;

     label8:
        r2[15] = 1;
        if i7 >= 0 goto label9;

        r2[16] = 1;
        goto label10;

     label9:
        $b10 = (byte) i7;
        r7[i6] = $b10;
        i6 = i6 + 1;
        r2[17] = 1;
        goto label6;

     label10:
        r2[18] = 1;
        if i6 != 4 goto label11;

        $r10 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: byte[] buffer>;
        $i11 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int options>;
        $i12 = staticinvoke <com.zoffcc.applications.aagtl.Base64: int access$200(byte[],int,byte[],int,int)>(r7, 0, $r10, 0, $i11);
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int numSigBytes> = $i12;
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position> = 0;
        r2[19] = 1;
        goto label13;

     label11:
        r2[20] = 1;
        if i6 != 0 goto label12;

        r2[21] = 1;
        return -1;

     label12:
        $r11 = new java.io.IOException;
        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Improperly padded Base64 input.");
        r2[22] = 1;
        throw $r11;

     label13:
        $i13 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position>;
        r2[23] = 1;
        if $i13 < 0 goto label17;

        $i14 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position>;
        $i15 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int numSigBytes>;
        r2[24] = 1;
        if $i14 < $i15 goto label14;

        r2[25] = 1;
        return -1;

     label14:
        $z3 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: boolean encode>;
        r2[26] = 1;
        if $z3 == 0 goto label15;

        $z4 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: boolean breakLines>;
        r2[27] = 1;
        if $z4 == 0 goto label15;

        $i16 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int lineLength>;
        r2[28] = 1;
        if $i16 < 76 goto label15;

        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int lineLength> = 0;
        r2[29] = 1;
        return 10;

     label15:
        $i17 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int lineLength>;
        $i18 = $i17 + 1;
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int lineLength> = $i18;
        $r13 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: byte[] buffer>;
        $i19 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position>;
        $i20 = $i19 + 1;
        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position> = $i20;
        b21 = $r13[$i19];
        $i22 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position>;
        $i23 = r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int bufferLength>;
        r2[30] = 1;
        if $i22 < $i23 goto label16;

        r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int position> = -1;
        r2[31] = 1;

     label16:
        $s24 = b21 & 255;
        r2[32] = 1;
        return $s24;

     label17:
        $r15 = new java.io.IOException;
        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Error in Base64 code reading stream.");
        r2[33] = 1;
        throw $r15;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.Base64$InputStream r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4;
        boolean[][] $r2;
        boolean[] r3;
        byte $b5;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$InputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        i2 = 0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i2 >= i1 goto label4;

        i3 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Base64$InputStream: int read()>();
        r3[2] = 1;
        if i3 < 0 goto label2;

        $i4 = i0 + i2;
        $b5 = (byte) i3;
        r1[$i4] = $b5;
        r3[3] = 1;
        goto label3;

     label2:
        r3[4] = 1;
        if i2 != 0 goto label4;

        r3[5] = 1;
        return -1;

     label3:
        i2 = i2 + 1;
        r3[6] = 1;
        goto label1;

     label4:
        r3[7] = 1;
        return i2;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.zoffcc.applications.aagtl.Base64$InputStream: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[34];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[8];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/Base64$InputStream", 1159204629847631755L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.Base64$OutputStream extends java.io.FilterOutputStream
{
    private boolean encode;
    private int position;
    private byte[] buffer;
    private int bufferLength;
    private int lineLength;
    private boolean breakLines;
    private byte[] b4;
    private boolean suspendEncoding;
    private int options;
    private byte[] decodabet;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.io.OutputStream)
    {
        com.zoffcc.applications.aagtl.Base64$OutputStream r0;
        java.io.OutputStream r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$OutputStream;
        r1 := @parameter0: java.io.OutputStream;
        $r2 = <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: void <init>(java.io.OutputStream,int)>(r1, 1);
        r3[0] = 1;
        return;
    }

    public void <init>(java.io.OutputStream, int)
    {
        com.zoffcc.applications.aagtl.Base64$OutputStream r0;
        java.io.OutputStream r1;
        int i0, $i1, $i2, $i4;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0, $z1, $z2;
        byte $b3;
        byte[] $r7, $r8, $r9;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$OutputStream;
        r1 := @parameter0: java.io.OutputStream;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);
        $i1 = i0 & 8;
        r3[0] = 1;
        if $i1 == 0 goto label1;

        $z0 = 1;
        r3[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r3[2] = 1;

     label2:
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean breakLines> = $z0;
        $i2 = i0 & 1;
        r3[3] = 1;
        if $i2 == 0 goto label3;

        $z1 = 1;
        r3[4] = 1;
        goto label4;

     label3:
        $z1 = 0;
        r3[5] = 1;

     label4:
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean encode> = $z1;
        $z2 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean encode>;
        r3[6] = 1;
        if $z2 == 0 goto label5;

        $b3 = 3;
        r3[7] = 1;
        goto label6;

     label5:
        $b3 = 4;
        r3[8] = 1;

     label6:
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int bufferLength> = $b3;
        $i4 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int bufferLength>;
        $r7 = newarray (byte)[$i4];
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] buffer> = $r7;
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position> = 0;
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int lineLength> = 0;
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean suspendEncoding> = 0;
        $r8 = newarray (byte)[4];
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] b4> = $r8;
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int options> = i0;
        $r9 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] access$000(int)>(i0);
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] decodabet> = $r9;
        r3[9] = 1;
        return;
    }

    public void write(int) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.Base64$OutputStream r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i17, $i18, $i19, $i20;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1, $z2;
        java.io.OutputStream $r3, $r6, $r11, $r17;
        byte[] $r4, $r7, $r8, $r9, $r12, $r13, $r15, $r16, $r18, $r19;
        byte $b4, $b13, $b16, $b21;
        java.io.IOException $r20;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$OutputStream;
        i0 := @parameter0: int;
        $r1 = <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $z0 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean suspendEncoding>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: java.io.OutputStream out>;
        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(i0);
        r2[1] = 1;
        return;

     label1:
        $z1 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean encode>;
        r2[2] = 1;
        if $z1 == 0 goto label3;

        $r4 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] buffer>;
        $i2 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position>;
        $i3 = $i2 + 1;
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position> = $i3;
        $b4 = (byte) i0;
        $r4[$i2] = $b4;
        $i5 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position>;
        $i6 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int bufferLength>;
        r2[3] = 1;
        if $i5 < $i6 goto label5;

        $r6 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: java.io.OutputStream out>;
        $r7 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] b4>;
        $r8 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] buffer>;
        $i7 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int bufferLength>;
        $i8 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int options>;
        $r9 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] access$300(byte[],byte[],int,int)>($r7, $r8, $i7, $i8);
        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r9);
        $i9 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int lineLength>;
        $i10 = $i9 + 4;
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int lineLength> = $i10;
        $z2 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean breakLines>;
        r2[4] = 1;
        if $z2 == 0 goto label2;

        $i11 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int lineLength>;
        r2[5] = 1;
        if $i11 < 76 goto label2;

        $r11 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: java.io.OutputStream out>;
        virtualinvoke $r11.<java.io.OutputStream: void write(int)>(10);
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int lineLength> = 0;
        r2[6] = 1;

     label2:
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position> = 0;
        r2[7] = 1;
        goto label5;

     label3:
        $r12 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] decodabet>;
        $i12 = i0 & 127;
        $b13 = $r12[$i12];
        r2[8] = 1;
        if $b13 <= -5 goto label4;

        $r13 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] buffer>;
        $i14 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position>;
        $i15 = $i14 + 1;
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position> = $i15;
        $b16 = (byte) i0;
        $r13[$i14] = $b16;
        $i17 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position>;
        $i18 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int bufferLength>;
        r2[9] = 1;
        if $i17 < $i18 goto label5;

        $r15 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] buffer>;
        $r16 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] b4>;
        $i19 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int options>;
        i1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: int access$200(byte[],int,byte[],int,int)>($r15, 0, $r16, 0, $i19);
        $r17 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: java.io.OutputStream out>;
        $r18 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] b4>;
        virtualinvoke $r17.<java.io.OutputStream: void write(byte[],int,int)>($r18, 0, i1);
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position> = 0;
        r2[10] = 1;
        goto label5;

     label4:
        $r19 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] decodabet>;
        $i20 = i0 & 127;
        $b21 = $r19[$i20];
        r2[11] = 1;
        if $b21 == -5 goto label5;

        $r20 = new java.io.IOException;
        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("Invalid character in Base64 data.");
        r2[12] = 1;
        throw $r20;

     label5:
        r2[13] = 1;
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.Base64$OutputStream r0;
        byte[] r1;
        int i0, i1, i2, $i3;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        java.io.OutputStream $r4;
        byte $b4;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$OutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $z0 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean suspendEncoding>;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: java.io.OutputStream out>;
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);
        r3[1] = 1;
        return;

     label1:
        i2 = 0;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        if i2 >= i1 goto label3;

        $i3 = i0 + i2;
        $b4 = r1[$i3];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: void write(int)>($b4);
        i2 = i2 + 1;
        r3[4] = 1;
        goto label2;

     label3:
        r3[5] = 1;
        return;
    }

    public void flushBase64() throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.Base64$OutputStream r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;
        boolean $z0;
        java.io.OutputStream $r3;
        byte[] $r4, $r5, $r6;
        java.io.IOException $r7;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$OutputStream;
        $r1 = <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $i0 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position>;
        r2[0] = 1;
        if $i0 <= 0 goto label2;

        $z0 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean encode>;
        r2[1] = 1;
        if $z0 == 0 goto label1;

        $r3 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: java.io.OutputStream out>;
        $r4 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] b4>;
        $r5 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] buffer>;
        $i1 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position>;
        $i2 = r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int options>;
        $r6 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] access$300(byte[],byte[],int,int)>($r4, $r5, $i1, $i2);
        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r6);
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: int position> = 0;
        r2[2] = 1;
        goto label2;

     label1:
        $r7 = new java.io.IOException;
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Base64 input not properly padded.");
        r2[3] = 1;
        throw $r7;

     label2:
        r2[4] = 1;
        return;
    }

    public void close() throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.Base64$OutputStream r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$OutputStream;
        $r1 = <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: void flushBase64()>();
        specialinvoke r0.<java.io.FilterOutputStream: void close()>();
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: byte[] buffer> = null;
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: java.io.OutputStream out> = null;
        r2[0] = 1;
        return;
    }

    public void suspendEncoding() throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.Base64$OutputStream r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$OutputStream;
        $r1 = <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: void flushBase64()>();
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean suspendEncoding> = 1;
        r2[0] = 1;
        return;
    }

    public void resumeEncoding()
    {
        com.zoffcc.applications.aagtl.Base64$OutputStream r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.Base64$OutputStream;
        $r1 = <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r0.<com.zoffcc.applications.aagtl.Base64$OutputStream: boolean suspendEncoding> = 0;
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRi()>();
        r1 = $r0[8];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <com.zoffcc.applications.aagtl.Base64$OutputStream: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[14];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/Base64$OutputStream", 5473623575862118865L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.Base64 extends java.lang.Object
{
    public static final int NO_OPTIONS;
    public static final int ENCODE;
    public static final int DECODE;
    public static final int GZIP;
    public static final int DONT_GUNZIP;
    public static final int DO_BREAK_LINES;
    public static final int URL_SAFE;
    public static final int ORDERED;
    private static final int MAX_LINE_LENGTH;
    private static final byte EQUALS_SIGN;
    private static final byte NEW_LINE;
    private static final java.lang.String PREFERRED_ENCODING;
    private static final byte WHITE_SPACE_ENC;
    private static final byte EQUALS_SIGN_ENC;
    private static final byte[] _STANDARD_ALPHABET;
    private static final byte[] _STANDARD_DECODABET;
    private static final byte[] _URL_SAFE_ALPHABET;
    private static final byte[] _URL_SAFE_DECODABET;
    private static final byte[] _ORDERED_ALPHABET;
    private static final byte[] _ORDERED_DECODABET;
    static final boolean $assertionsDisabled;
    private static final boolean[][] $VRc;

    private static final byte[] getAlphabet(int)
    {
        int i0, $i1, $i2;
        boolean[][] $r0;
        boolean[] r1;
        byte[] $r2, $r3, $r4;

        i0 := @parameter0: int;
        $r0 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $i1 = i0 & 16;
        r1[0] = 1;
        if $i1 != 16 goto label1;

        $r2 = <com.zoffcc.applications.aagtl.Base64: byte[] _URL_SAFE_ALPHABET>;
        r1[1] = 1;
        return $r2;

     label1:
        $i2 = i0 & 32;
        r1[2] = 1;
        if $i2 != 32 goto label2;

        $r3 = <com.zoffcc.applications.aagtl.Base64: byte[] _ORDERED_ALPHABET>;
        r1[3] = 1;
        return $r3;

     label2:
        $r4 = <com.zoffcc.applications.aagtl.Base64: byte[] _STANDARD_ALPHABET>;
        r1[4] = 1;
        return $r4;
    }

    private static final byte[] getDecodabet(int)
    {
        int i0, $i1, $i2;
        boolean[][] $r0;
        boolean[] r1;
        byte[] $r2, $r3, $r4;

        i0 := @parameter0: int;
        $r0 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        $i1 = i0 & 16;
        r1[0] = 1;
        if $i1 != 16 goto label1;

        $r2 = <com.zoffcc.applications.aagtl.Base64: byte[] _URL_SAFE_DECODABET>;
        r1[1] = 1;
        return $r2;

     label1:
        $i2 = i0 & 32;
        r1[2] = 1;
        if $i2 != 32 goto label2;

        $r3 = <com.zoffcc.applications.aagtl.Base64: byte[] _ORDERED_DECODABET>;
        r1[3] = 1;
        return $r3;

     label2:
        $r4 = <com.zoffcc.applications.aagtl.Base64: byte[] _STANDARD_DECODABET>;
        r1[4] = 1;
        return $r4;
    }

    private void <init>()
    {
        com.zoffcc.applications.aagtl.Base64 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.Base64;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    private static byte[] encode3to4(byte[], byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: byte[];
        r1 := @parameter1: byte[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>(r1, 0, i0, r0, 0, i1);
        r3[0] = 1;
        return r0;
    }

    private static byte[] encode3to4(byte[], int, int, byte[], int, int)
    {
        byte[] r0, r1, r4;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i19, $i20, $i21, $i23, $i24, $i25, $i27, $i28, $i30, $i32, $i33, $i34, $i36, $i37, $i38, $i40, $i41, $i43, $i44, $i45, $i47, $i48;
        boolean[][] $r2;
        boolean[] r3;
        byte $b5, $b9, $b14, $b18, $b22, $b26, $b29, $b31, $b35, $b39, $b42, $b46;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r1 := @parameter3: byte[];
        i2 := @parameter4: int;
        i3 := @parameter5: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r4 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] getAlphabet(int)>(i3);
        r3[0] = 1;
        if i1 <= 0 goto label1;

        $b5 = r0[i0];
        $i6 = $b5 << 24;
        $i7 = $i6 >>> 8;
        r3[1] = 1;
        goto label2;

     label1:
        $i7 = 0;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        if i1 <= 1 goto label3;

        $i8 = i0 + 1;
        $b9 = r0[$i8];
        $i10 = $b9 << 24;
        $i11 = $i10 >>> 16;
        r3[4] = 1;
        goto label4;

     label3:
        $i11 = 0;
        r3[5] = 1;

     label4:
        $i12 = $i7 | $i11;
        r3[6] = 1;
        if i1 <= 2 goto label5;

        $i13 = i0 + 2;
        $b14 = r0[$i13];
        $i15 = $b14 << 24;
        $i16 = $i15 >>> 24;
        r3[7] = 1;
        goto label6;

     label5:
        $i16 = 0;
        r3[8] = 1;

     label6:
        i4 = $i12 | $i16;
        r3[9] = 1;
        tableswitch(i1)
        {
            case 1: goto label9;
            case 2: goto label8;
            case 3: goto label7;
            default: goto label10;
        };

     label7:
        $i17 = i4 >>> 18;
        $b18 = r4[$i17];
        r1[i2] = $b18;
        $i19 = i2 + 1;
        $i20 = i4 >>> 12;
        $i21 = $i20 & 63;
        $b22 = r4[$i21];
        r1[$i19] = $b22;
        $i23 = i2 + 2;
        $i24 = i4 >>> 6;
        $i25 = $i24 & 63;
        $b26 = r4[$i25];
        r1[$i23] = $b26;
        $i27 = i2 + 3;
        $i28 = i4 & 63;
        $b29 = r4[$i28];
        r1[$i27] = $b29;
        r3[10] = 1;
        return r1;

     label8:
        $i30 = i4 >>> 18;
        $b31 = r4[$i30];
        r1[i2] = $b31;
        $i32 = i2 + 1;
        $i33 = i4 >>> 12;
        $i34 = $i33 & 63;
        $b35 = r4[$i34];
        r1[$i32] = $b35;
        $i36 = i2 + 2;
        $i37 = i4 >>> 6;
        $i38 = $i37 & 63;
        $b39 = r4[$i38];
        r1[$i36] = $b39;
        $i40 = i2 + 3;
        r1[$i40] = 61;
        r3[11] = 1;
        return r1;

     label9:
        $i41 = i4 >>> 18;
        $b42 = r4[$i41];
        r1[i2] = $b42;
        $i43 = i2 + 1;
        $i44 = i4 >>> 12;
        $i45 = $i44 & 63;
        $b46 = r4[$i45];
        r1[$i43] = $b46;
        $i47 = i2 + 2;
        r1[$i47] = 61;
        $i48 = i2 + 3;
        r1[$i48] = 61;
        r3[12] = 1;
        return r1;

     label10:
        r3[13] = 1;
        return r1;
    }

    public static void encode(java.nio.ByteBuffer, java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4, r5;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.nio.ByteBuffer;
        r1 := @parameter1: java.nio.ByteBuffer;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r4 = newarray (byte)[3];
        r5 = newarray (byte)[4];
        r3[0] = 1;

     label1:
        $z0 = virtualinvoke r0.<java.nio.ByteBuffer: boolean hasRemaining()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();
        i0 = staticinvoke <java.lang.Math: int min(int,int)>(3, $i1);
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r4, 0, i0);
        staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encode3to4(byte[],byte[],int,int)>(r5, r4, i0, 0);
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r5);
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    public static void encode(java.nio.ByteBuffer, java.nio.CharBuffer)
    {
        java.nio.ByteBuffer r0;
        java.nio.CharBuffer r1;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4, r5;
        int i0, i1, $i2;
        boolean $z0;
        byte $b3;
        short $s4;
        char $c5;

        r0 := @parameter0: java.nio.ByteBuffer;
        r1 := @parameter1: java.nio.CharBuffer;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r4 = newarray (byte)[3];
        r5 = newarray (byte)[4];
        r3[0] = 1;

     label1:
        $z0 = virtualinvoke r0.<java.nio.ByteBuffer: boolean hasRemaining()>();
        r3[1] = 1;
        if $z0 == 0 goto label4;

        $i2 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();
        i0 = staticinvoke <java.lang.Math: int min(int,int)>(3, $i2);
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r4, 0, i0);
        staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encode3to4(byte[],byte[],int,int)>(r5, r4, i0, 0);
        i1 = 0;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        if i1 >= 4 goto label3;

        $b3 = r5[i1];
        $s4 = $b3 & 255;
        $c5 = (char) $s4;
        virtualinvoke r1.<java.nio.CharBuffer: java.nio.CharBuffer put(char)>($c5);
        i1 = i1 + 1;
        r3[4] = 1;
        goto label2;

     label3:
        r3[5] = 1;
        goto label1;

     label4:
        r3[6] = 1;
        return;
    }

    public static java.lang.String encodeObject(java.io.Serializable) throws java.io.IOException
    {
        java.io.Serializable r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @parameter0: java.io.Serializable;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: java.lang.String encodeObject(java.io.Serializable,int)>(r0, 0);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String encodeObject(java.io.Serializable, int) throws java.io.IOException
    {
        java.io.Serializable r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        java.io.ByteArrayOutputStream r3, $r11;
        com.zoffcc.applications.aagtl.Base64$OutputStream r4, $r12;
        java.util.zip.GZIPOutputStream r5, $r13;
        java.io.ObjectOutputStream r6, $r14, $r15;
        java.lang.Exception r7, r9, $r16, $r17, r18, $r19, r20, $r21, r22, $r26, $r27, r28, $r29, r30, $r31, r32;
        java.lang.Throwable r8, $r25;
        java.lang.NullPointerException $r10;
        java.io.IOException $r23, r24;
        java.lang.String $r33, $r37;
        byte[] $r34, $r38;
        java.io.UnsupportedEncodingException $r35, r36;

        r0 := @parameter0: java.io.Serializable;
        i0 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r2[0] = 1;
        if r0 != null goto label1;

        $r10 = new java.lang.NullPointerException;
        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot serialize a null object.");
        r2[1] = 1;
        throw $r10;

     label1:
        r3 = null;
        r4 = null;
        r5 = null;
        r6 = null;

     label2:
        $r11 = new java.io.ByteArrayOutputStream;
        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>()>();
        r3 = $r11;
        $r12 = new com.zoffcc.applications.aagtl.Base64$OutputStream;
        $i1 = 1 | i0;
        specialinvoke $r12.<com.zoffcc.applications.aagtl.Base64$OutputStream: void <init>(java.io.OutputStream,int)>(r3, $i1);
        r4 = $r12;
        $i2 = i0 & 2;
        r2[2] = 1;
        if $i2 == 0 goto label3;

        $r13 = new java.util.zip.GZIPOutputStream;
        specialinvoke $r13.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r4);
        r5 = $r13;
        $r14 = new java.io.ObjectOutputStream;
        specialinvoke $r14.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r5);
        r6 = $r14;
        r2[3] = 1;
        goto label4;

     label3:
        $r15 = new java.io.ObjectOutputStream;
        specialinvoke $r15.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r4);
        r6 = $r15;
        r2[4] = 1;

     label4:
        virtualinvoke r6.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0);

     label5:
        virtualinvoke r6.<java.io.ObjectOutputStream: void close()>();
        r2[5] = 1;

     label6:
        goto label8;

     label7:
        $r16 := @caughtexception;
        r7 = $r16;
        r2[6] = 1;

     label8:
        virtualinvoke r5.<java.util.zip.GZIPOutputStream: void close()>();
        r2[7] = 1;

     label9:
        goto label11;

     label10:
        $r17 := @caughtexception;
        r18 = $r17;
        r2[8] = 1;

     label11:
        virtualinvoke r4.<java.io.OutputStream: void close()>();
        r2[9] = 1;

     label12:
        goto label14;

     label13:
        $r19 := @caughtexception;
        r20 = $r19;
        r2[10] = 1;

     label14:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void close()>();
        r2[11] = 1;

     label15:
        goto label33;

     label16:
        $r21 := @caughtexception;
        r22 = $r21;
        r2[12] = 1;
        goto label33;

     label17:
        $r23 := @caughtexception;

     label18:
        r24 = $r23;
        r2[13] = 1;
        throw r24;

     label19:
        $r25 := @caughtexception;
        r8 = $r25;

     label20:
        virtualinvoke r6.<java.io.ObjectOutputStream: void close()>();
        r2[14] = 1;

     label21:
        goto label23;

     label22:
        $r26 := @caughtexception;
        r9 = $r26;
        r2[15] = 1;

     label23:
        virtualinvoke r5.<java.util.zip.GZIPOutputStream: void close()>();
        r2[16] = 1;

     label24:
        goto label26;

     label25:
        $r27 := @caughtexception;
        r28 = $r27;
        r2[17] = 1;

     label26:
        virtualinvoke r4.<java.io.OutputStream: void close()>();
        r2[18] = 1;

     label27:
        goto label29;

     label28:
        $r29 := @caughtexception;
        r30 = $r29;
        r2[19] = 1;

     label29:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void close()>();
        r2[20] = 1;

     label30:
        goto label32;

     label31:
        $r31 := @caughtexception;
        r32 = $r31;
        r2[21] = 1;

     label32:
        r2[22] = 1;
        throw r8;

     label33:
        $r33 = new java.lang.String;
        $r34 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        specialinvoke $r33.<java.lang.String: void <init>(byte[],java.lang.String)>($r34, "US-ASCII");
        r2[23] = 1;

     label34:
        return $r33;

     label35:
        $r35 := @caughtexception;
        r36 = $r35;
        $r37 = new java.lang.String;
        $r38 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        specialinvoke $r37.<java.lang.String: void <init>(byte[])>($r38);
        r2[24] = 1;
        return $r37;

        catch java.lang.Exception from label5 to label6 with label7;
        catch java.lang.Exception from label8 to label9 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.io.IOException from label2 to label5 with label17;
        catch java.lang.Throwable from label2 to label5 with label19;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Exception from label23 to label24 with label25;
        catch java.lang.Exception from label26 to label27 with label28;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Throwable from label18 to label20 with label19;
        catch java.io.UnsupportedEncodingException from label33 to label34 with label35;
    }

    public static java.lang.String encodeBytes(byte[])
    {
        byte[] r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r7;
        java.io.IOException r4, $r5;
        int $i0;
        boolean $z0, $z1;
        java.lang.AssertionError $r6, $r8;

        r0 := @parameter0: byte[];
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r3 = null;

     label1:
        $i0 = lengthof r0;
        r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: java.lang.String encodeBytes(byte[],int,int,int)>(r0, 0, $i0, 0);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r4 = $r5;
        $z0 = <com.zoffcc.applications.aagtl.Base64: boolean $assertionsDisabled>;
        r2[1] = 1;
        if $z0 != 0 goto label4;

        $r6 = new java.lang.AssertionError;
        $r7 = virtualinvoke r4.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);
        r2[2] = 1;
        throw $r6;

     label4:
        $z1 = <com.zoffcc.applications.aagtl.Base64: boolean $assertionsDisabled>;
        r2[3] = 1;
        if $z1 != 0 goto label5;

        r2[4] = 1;
        if r3 != null goto label5;

        $r8 = new java.lang.AssertionError;
        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();
        r2[5] = 1;
        throw $r8;

     label5:
        r2[6] = 1;
        return r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String encodeBytes(byte[], int) throws java.io.IOException
    {
        byte[] r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $i1 = lengthof r0;
        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: java.lang.String encodeBytes(byte[],int,int,int)>(r0, 0, $i1, i0);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String encodeBytes(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r7;
        java.io.IOException r4, $r5;
        boolean $z0, $z1;
        java.lang.AssertionError $r6, $r8;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r3 = null;

     label1:
        r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: java.lang.String encodeBytes(byte[],int,int,int)>(r0, i0, i1, 0);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r4 = $r5;
        $z0 = <com.zoffcc.applications.aagtl.Base64: boolean $assertionsDisabled>;
        r2[1] = 1;
        if $z0 != 0 goto label4;

        $r6 = new java.lang.AssertionError;
        $r7 = virtualinvoke r4.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r7);
        r2[2] = 1;
        throw $r6;

     label4:
        $z1 = <com.zoffcc.applications.aagtl.Base64: boolean $assertionsDisabled>;
        r2[3] = 1;
        if $z1 != 0 goto label5;

        r2[4] = 1;
        if r3 != null goto label5;

        $r8 = new java.lang.AssertionError;
        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();
        r2[5] = 1;
        throw $r8;

     label5:
        r2[6] = 1;
        return r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String encodeBytes(byte[], int, int, int) throws java.io.IOException
    {
        byte[] r0, r3;
        int i0, i1, i2;
        boolean[][] $r1;
        boolean[] r2;
        java.io.UnsupportedEncodingException r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>(r0, i0, i1, i2);

     label1:
        $r5 = new java.lang.String;
        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>(r3, "US-ASCII");
        r2[0] = 1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r4 = $r6;
        $r7 = new java.lang.String;
        specialinvoke $r7.<java.lang.String: void <init>(byte[])>(r3);
        r2[1] = 1;
        return $r7;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static byte[] encodeBytesToBytes(byte[])
    {
        byte[] r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r4, $r5;
        int $i0;
        boolean $z0;
        java.lang.AssertionError $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @parameter0: byte[];
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        r3 = null;

     label1:
        $i0 = lengthof r0;
        r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>(r0, 0, $i0, 0);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r4 = $r5;
        $z0 = <com.zoffcc.applications.aagtl.Base64: boolean $assertionsDisabled>;
        r2[1] = 1;
        if $z0 != 0 goto label4;

        $r6 = new java.lang.AssertionError;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOExceptions only come from GZipping, which is turned off: ");
        $r9 = virtualinvoke r4.<java.io.IOException: java.lang.String getMessage()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);
        r2[2] = 1;
        throw $r6;

     label4:
        r2[3] = 1;
        return r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static byte[] encodeBytesToBytes(byte[], int, int, int) throws java.io.IOException
    {
        byte[] r0, r9, $r43, r44;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14, $i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24;
        boolean[][] $r1;
        boolean[] r2;
        java.io.ByteArrayOutputStream r3, $r27;
        java.util.zip.GZIPOutputStream r4, $r29;
        com.zoffcc.applications.aagtl.Base64$OutputStream r5, $r28;
        java.lang.Exception r6, r8, $r30, $r31, r32, $r33, r34, $r38, $r39, r40, $r41, r42;
        java.lang.Throwable r7, $r37;
        java.lang.NullPointerException $r10;
        java.lang.IllegalArgumentException $r11, $r16, $r21;
        java.lang.StringBuilder $r12, $r13, $r14, $r17, $r18, $r19;
        java.lang.String $r15, $r20, $r26;
        java.lang.Object[] $r22;
        java.lang.Integer $r23, $r24, $r25;
        java.io.IOException $r35, r36;
        boolean $z0, z1;
        byte $b13;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        r2[0] = 1;
        if r0 != null goto label1;

        $r10 = new java.lang.NullPointerException;
        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot serialize a null array.");
        r2[1] = 1;
        throw $r10;

     label1:
        r2[2] = 1;
        if i0 >= 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have negative offset: ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);
        r2[3] = 1;
        throw $r11;

     label2:
        r2[4] = 1;
        if i1 >= 0 goto label3;

        $r16 = new java.lang.IllegalArgumentException;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot have length offset: ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);
        r2[5] = 1;
        throw $r16;

     label3:
        $i4 = i0 + i1;
        $i5 = lengthof r0;
        r2[6] = 1;
        if $i4 <= $i5 goto label4;

        $r21 = new java.lang.IllegalArgumentException;
        $r22 = newarray (java.lang.Object)[3];
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r22[0] = $r23;
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r22[1] = $r24;
        $i6 = lengthof r0;
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
        $r22[2] = $r25;
        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot have offset of %d and length of %d with array of length %d", $r22);
        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);
        r2[7] = 1;
        throw $r21;

     label4:
        $i7 = i2 & 2;
        r2[8] = 1;
        if $i7 == 0 goto label29;

        r3 = null;
        r4 = null;
        r5 = null;

     label5:
        $r27 = new java.io.ByteArrayOutputStream;
        specialinvoke $r27.<java.io.ByteArrayOutputStream: void <init>()>();
        r3 = $r27;
        $r28 = new com.zoffcc.applications.aagtl.Base64$OutputStream;
        $i8 = 1 | i2;
        specialinvoke $r28.<com.zoffcc.applications.aagtl.Base64$OutputStream: void <init>(java.io.OutputStream,int)>(r3, $i8);
        r5 = $r28;
        $r29 = new java.util.zip.GZIPOutputStream;
        specialinvoke $r29.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r5);
        r4 = $r29;
        virtualinvoke r4.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>(r0, i0, i1);
        virtualinvoke r4.<java.util.zip.GZIPOutputStream: void close()>();

     label6:
        virtualinvoke r4.<java.util.zip.GZIPOutputStream: void close()>();
        r2[9] = 1;

     label7:
        goto label9;

     label8:
        $r30 := @caughtexception;
        r6 = $r30;
        r2[10] = 1;

     label9:
        virtualinvoke r5.<com.zoffcc.applications.aagtl.Base64$OutputStream: void close()>();
        r2[11] = 1;

     label10:
        goto label12;

     label11:
        $r31 := @caughtexception;
        r32 = $r31;
        r2[12] = 1;

     label12:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void close()>();
        r2[13] = 1;

     label13:
        goto label28;

     label14:
        $r33 := @caughtexception;
        r34 = $r33;
        r2[14] = 1;
        goto label28;

     label15:
        $r35 := @caughtexception;

     label16:
        r36 = $r35;
        r2[15] = 1;
        throw r36;

     label17:
        $r37 := @caughtexception;
        r7 = $r37;

     label18:
        virtualinvoke r4.<java.util.zip.GZIPOutputStream: void close()>();
        r2[16] = 1;

     label19:
        goto label21;

     label20:
        $r38 := @caughtexception;
        r8 = $r38;
        r2[17] = 1;

     label21:
        virtualinvoke r5.<com.zoffcc.applications.aagtl.Base64$OutputStream: void close()>();
        r2[18] = 1;

     label22:
        goto label24;

     label23:
        $r39 := @caughtexception;
        r40 = $r39;
        r2[19] = 1;

     label24:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void close()>();
        r2[20] = 1;

     label25:
        goto label27;

     label26:
        $r41 := @caughtexception;
        r42 = $r41;
        r2[21] = 1;

     label27:
        r2[22] = 1;
        throw r7;

     label28:
        $r43 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        r2[23] = 1;
        return $r43;

     label29:
        $i9 = i2 & 8;
        r2[24] = 1;
        if $i9 == 0 goto label30;

        $z0 = 1;
        r2[25] = 1;
        goto label31;

     label30:
        $z0 = 0;
        r2[26] = 1;

     label31:
        z1 = $z0;
        $i10 = i1 / 3;
        $i11 = $i10 * 4;
        $i12 = i1 % 3;
        r2[27] = 1;
        if $i12 <= 0 goto label32;

        $b13 = 4;
        r2[28] = 1;
        goto label33;

     label32:
        $b13 = 0;
        r2[29] = 1;

     label33:
        i14 = $i11 + $b13;
        r2[30] = 1;
        if z1 == 0 goto label34;

        $i15 = i14 / 76;
        i14 = i14 + $i15;
        r2[31] = 1;

     label34:
        r44 = newarray (byte)[i14];
        i16 = 0;
        i17 = 0;
        i18 = i1 - 2;
        i3 = 0;
        r2[32] = 1;

     label35:
        r2[33] = 1;
        if i16 >= i18 goto label37;

        $i19 = i16 + i0;
        staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>(r0, $i19, 3, r44, i17, i2);
        i3 = i3 + 4;
        r2[34] = 1;
        if z1 == 0 goto label36;

        r2[35] = 1;
        if i3 < 76 goto label36;

        $i20 = i17 + 4;
        r44[$i20] = 10;
        i17 = i17 + 1;
        i3 = 0;
        r2[36] = 1;

     label36:
        i16 = i16 + 3;
        i17 = i17 + 4;
        r2[37] = 1;
        goto label35;

     label37:
        r2[38] = 1;
        if i16 >= i1 goto label38;

        $i21 = i16 + i0;
        $i22 = i1 - i16;
        staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>(r0, $i21, $i22, r44, i17, i2);
        i17 = i17 + 4;
        r2[39] = 1;

     label38:
        $i23 = lengthof r44;
        $i24 = $i23 - 1;
        r2[40] = 1;
        if i17 > $i24 goto label39;

        r9 = newarray (byte)[i17];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r44, 0, r9, 0, i17);
        r2[41] = 1;
        return r9;

     label39:
        r2[42] = 1;
        return r44;

        catch java.lang.Exception from label6 to label7 with label8;
        catch java.lang.Exception from label9 to label10 with label11;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.io.IOException from label5 to label6 with label15;
        catch java.lang.Throwable from label5 to label6 with label17;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.lang.Throwable from label16 to label18 with label17;
    }

    private static int decode4to3(byte[], int, byte[], int, int)
    {
        byte[] r0, r1, r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i15, $i16, $i20, $i21, $i23, $i28, $i29, $i33, $i34, $i35, $i39, i40, $i41, $i43, $i44, $i49, $i50, $i54, $i55, $i56, $i60, $i61, $i62, i66, $i67, $i69, $i70, $i72;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.NullPointerException $r5, $r6;
        java.lang.IllegalArgumentException $r7, $r12;
        java.lang.Object[] $r8, $r13;
        java.lang.Integer $r9, $r10, $r14, $r15;
        java.lang.String $r11, $r16;
        byte $b11, $b12, $b13, $b17, $b18, $b22, $b24, $b25, $b26, $b30, $b31, $b36, $b37, $b42, $b45, $b46, $b47, $b51, $b52, $b57, $b58, $b63, $b64, $b68, $b71, $b73;
        short $s14, $s19, $s27, $s32, $s38, $s48, $s53, $s59, $s65;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        r1 := @parameter2: byte[];
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[15];
        r3[0] = 1;
        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;
        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Source array was null.");
        r3[1] = 1;
        throw $r5;

     label1:
        r3[2] = 1;
        if r1 != null goto label2;

        $r6 = new java.lang.NullPointerException;
        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("Destination array was null.");
        r3[3] = 1;
        throw $r6;

     label2:
        r3[4] = 1;
        if i0 < 0 goto label3;

        $i4 = i0 + 3;
        $i5 = lengthof r0;
        r3[5] = 1;
        if $i4 < $i5 goto label4;

     label3:
        $r7 = new java.lang.IllegalArgumentException;
        $r8 = newarray (java.lang.Object)[2];
        $i6 = lengthof r0;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
        $r8[0] = $r9;
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r8[1] = $r10;
        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source array with length %d cannot have offset of %d and still process four bytes.", $r8);
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);
        r3[6] = 1;
        throw $r7;

     label4:
        r3[7] = 1;
        if i1 < 0 goto label5;

        $i7 = i1 + 2;
        $i8 = lengthof r1;
        r3[8] = 1;
        if $i7 < $i8 goto label6;

     label5:
        $r12 = new java.lang.IllegalArgumentException;
        $r13 = newarray (java.lang.Object)[2];
        $i9 = lengthof r1;
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r13[0] = $r14;
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r13[1] = $r15;
        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Destination array with length %d cannot have offset of %d and still store three bytes.", $r13);
        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);
        r3[9] = 1;
        throw $r12;

     label6:
        r4 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] getDecodabet(int)>(i2);
        $i10 = i0 + 2;
        $b11 = r0[$i10];
        r3[10] = 1;
        if $b11 != 61 goto label7;

        $b12 = r0[i0];
        $b13 = r4[$b12];
        $s14 = $b13 & 255;
        $i15 = $s14 << 18;
        $i16 = i0 + 1;
        $b17 = r0[$i16];
        $b18 = r4[$b17];
        $s19 = $b18 & 255;
        $i20 = $s19 << 12;
        i3 = $i15 | $i20;
        $i21 = i3 >>> 16;
        $b22 = (byte) $i21;
        r1[i1] = $b22;
        r3[11] = 1;
        return 1;

     label7:
        $i23 = i0 + 3;
        $b24 = r0[$i23];
        r3[12] = 1;
        if $b24 != 61 goto label8;

        $b25 = r0[i0];
        $b26 = r4[$b25];
        $s27 = $b26 & 255;
        $i28 = $s27 << 18;
        $i29 = i0 + 1;
        $b30 = r0[$i29];
        $b31 = r4[$b30];
        $s32 = $b31 & 255;
        $i33 = $s32 << 12;
        $i34 = $i28 | $i33;
        $i35 = i0 + 2;
        $b36 = r0[$i35];
        $b37 = r4[$b36];
        $s38 = $b37 & 255;
        $i39 = $s38 << 6;
        i40 = $i34 | $i39;
        $i41 = i40 >>> 16;
        $b42 = (byte) $i41;
        r1[i1] = $b42;
        $i43 = i1 + 1;
        $i44 = i40 >>> 8;
        $b45 = (byte) $i44;
        r1[$i43] = $b45;
        r3[13] = 1;
        return 2;

     label8:
        $b46 = r0[i0];
        $b47 = r4[$b46];
        $s48 = $b47 & 255;
        $i49 = $s48 << 18;
        $i50 = i0 + 1;
        $b51 = r0[$i50];
        $b52 = r4[$b51];
        $s53 = $b52 & 255;
        $i54 = $s53 << 12;
        $i55 = $i49 | $i54;
        $i56 = i0 + 2;
        $b57 = r0[$i56];
        $b58 = r4[$b57];
        $s59 = $b58 & 255;
        $i60 = $s59 << 6;
        $i61 = $i55 | $i60;
        $i62 = i0 + 3;
        $b63 = r0[$i62];
        $b64 = r4[$b63];
        $s65 = $b64 & 255;
        i66 = $i61 | $s65;
        $i67 = i66 >> 16;
        $b68 = (byte) $i67;
        r1[i1] = $b68;
        $i69 = i1 + 1;
        $i70 = i66 >> 8;
        $b71 = (byte) $i70;
        r1[$i69] = $b71;
        $i72 = i1 + 2;
        $b73 = (byte) i66;
        r1[$i72] = $b73;
        r3[14] = 1;
        return 3;
    }

    public static byte[] decode(byte[]) throws java.io.IOException
    {
        byte[] r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0;
        int $i0;

        r0 := @parameter0: byte[];
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        n0 = null;
        $i0 = lengthof r0;
        r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] decode(byte[],int,int,int)>(r0, 0, $i0, 0);
        r2[0] = 1;
        return r3;
    }

    public static byte[] decode(byte[], int, int, int) throws java.io.IOException
    {
        byte[] r0, r3, r4, r5, r6, $r14;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, i10, $i11, $i15, $i17;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0, z1;
        java.lang.NullPointerException $r7;
        java.lang.IllegalArgumentException $r8, $r15;
        java.lang.Object[] $r9, $r21;
        java.lang.Integer $r10, $r11, $r12, $r22, $r23;
        java.lang.String $r13, $r19, $r24;
        java.lang.StringBuilder $r16, $r17, $r18;
        byte $b12, b14, $b16, $b18, $b19;
        short $s13, $s20;
        java.io.IOException $r20;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        r2[0] = 1;
        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;
        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot decode null source array.");
        r2[1] = 1;
        throw $r7;

     label1:
        r2[2] = 1;
        if i0 < 0 goto label2;

        $i6 = i0 + i1;
        $i7 = lengthof r0;
        r2[3] = 1;
        if $i6 <= $i7 goto label3;

     label2:
        $r8 = new java.lang.IllegalArgumentException;
        $r9 = newarray (java.lang.Object)[3];
        $i8 = lengthof r0;
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);
        $r9[0] = $r10;
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r9[1] = $r11;
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r9[2] = $r12;
        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source array with length %d cannot have offset of %d and process %d bytes.", $r9);
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);
        r2[4] = 1;
        throw $r8;

     label3:
        r2[5] = 1;
        if i1 != 0 goto label4;

        $r14 = newarray (byte)[0];
        r2[6] = 1;
        return $r14;

     label4:
        r2[7] = 1;
        if i1 >= 4 goto label5;

        $r15 = new java.lang.IllegalArgumentException;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Base64-encoded string must have at least four characters, but length specified was ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);
        r2[8] = 1;
        throw $r15;

     label5:
        r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] getDecodabet(int)>(i2);
        $i9 = i1 * 3;
        i3 = $i9 / 4;
        r4 = newarray (byte)[i3];
        i4 = 0;
        r5 = newarray (byte)[4];
        i5 = 0;
        z0 = 0;
        z1 = 0;
        i10 = i0;
        r2[9] = 1;

     label6:
        $i11 = i0 + i1;
        r2[10] = 1;
        if i10 >= $i11 goto label9;

        $b12 = r0[i10];
        $s13 = $b12 & 255;
        b14 = r3[$s13];
        r2[11] = 1;
        if b14 < -5 goto label7;

        r2[12] = 1;
        if b14 < -1 goto label8;

        $i15 = i5;
        i5 = i5 + 1;
        $b16 = r0[i10];
        r5[$i15] = $b16;
        r2[13] = 1;
        if i5 <= 3 goto label8;

        $i17 = staticinvoke <com.zoffcc.applications.aagtl.Base64: int decode4to3(byte[],int,byte[],int,int)>(r5, 0, r4, i4, i2);
        i4 = i4 + $i17;
        i5 = 0;
        $b18 = r0[i10];
        r2[14] = 1;
        if $b18 != 61 goto label8;

        r2[15] = 1;
        goto label9;

     label7:
        $r20 = new java.io.IOException;
        $r21 = newarray (java.lang.Object)[2];
        $b19 = r0[i10];
        $s20 = $b19 & 255;
        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($s20);
        $r21[0] = $r22;
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
        $r21[1] = $r23;
        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Bad Base64 input character decimal %d in array position %d", $r21);
        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r24);
        r2[16] = 1;
        throw $r20;

     label8:
        i10 = i10 + 1;
        r2[17] = 1;
        goto label6;

     label9:
        r6 = newarray (byte)[i4];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r6, 0, i4);
        r2[18] = 1;
        return r6;
    }

    public static byte[] decode(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] decode(java.lang.String,int)>(r0, 0);
        r2[0] = 1;
        return $r3;
    }

    public static byte[] decode(java.lang.String, int) throws java.io.IOException
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3, $i4, $i8, $i9, $i10, i11;
        boolean[][] $r1;
        boolean[] r2;
        byte[] r3, r8, r14;
        java.io.UnsupportedEncodingException r4, $r13;
        java.io.ByteArrayInputStream r5, $r16;
        java.util.zip.GZIPInputStream r6, $r17;
        java.io.ByteArrayOutputStream r7, $r15;
        boolean z0, $z1, z2;
        java.lang.Exception r9, r11, $r18, $r19, r20, $r21, r22, $r25, r26, $r27, r28, $r29, r30, $r32, $r33, r34, $r35, r36;
        java.lang.Throwable r10, $r31;
        java.lang.NullPointerException $r12;
        byte $b5, $b7;
        short $s6;
        java.io.IOException $r23, r24;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        r2[0] = 1;
        if r0 != null goto label1;

        $r12 = new java.lang.NullPointerException;
        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("Input string was null.");
        r2[1] = 1;
        throw $r12;

     label1:
        r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");
        r2[2] = 1;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;
        r4 = $r13;
        r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();
        r2[3] = 1;

     label4:
        $i2 = lengthof r3;
        r14 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] decode(byte[],int,int,int)>(r3, 0, $i2, i0);
        $i3 = i0 & 4;
        r2[4] = 1;
        if $i3 == 0 goto label5;

        $z1 = 1;
        r2[5] = 1;
        goto label6;

     label5:
        $z1 = 0;
        r2[6] = 1;

     label6:
        z2 = $z1;
        r2[7] = 1;
        if r14 == null goto label42;

        $i4 = lengthof r14;
        r2[8] = 1;
        if $i4 < 4 goto label42;

        r2[9] = 1;
        if z2 != 0 goto label42;

        $b5 = r14[0];
        $s6 = $b5 & 255;
        $b7 = r14[1];
        $i8 = $b7 << 8;
        $i9 = $i8 & 65280;
        i1 = $s6 | $i9;
        r2[10] = 1;
        if 35615 != i1 goto label42;

        r5 = null;
        r6 = null;
        r7 = null;
        r8 = newarray (byte)[2048];
        z0 = 0;

     label7:
        $r15 = new java.io.ByteArrayOutputStream;
        specialinvoke $r15.<java.io.ByteArrayOutputStream: void <init>()>();
        r7 = $r15;
        $r16 = new java.io.ByteArrayInputStream;
        specialinvoke $r16.<java.io.ByteArrayInputStream: void <init>(byte[])>(r14);
        r5 = $r16;
        $r17 = new java.util.zip.GZIPInputStream;
        specialinvoke $r17.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r5);
        r6 = $r17;
        r2[11] = 1;

     label8:
        $i10 = virtualinvoke r6.<java.util.zip.GZIPInputStream: int read(byte[])>(r8);
        i11 = $i10;
        r2[12] = 1;
        if $i10 < 0 goto label9;

        virtualinvoke r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r8, 0, i11);
        r2[13] = 1;
        goto label8;

     label9:
        r14 = virtualinvoke r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label10:
        virtualinvoke r7.<java.io.ByteArrayOutputStream: void close()>();
        r2[14] = 1;

     label11:
        goto label13;

     label12:
        $r18 := @caughtexception;
        r9 = $r18;
        r2[15] = 1;

     label13:
        virtualinvoke r6.<java.util.zip.GZIPInputStream: void close()>();
        r2[16] = 1;

     label14:
        goto label16;

     label15:
        $r19 := @caughtexception;
        r20 = $r19;
        r2[17] = 1;

     label16:
        virtualinvoke r5.<java.io.ByteArrayInputStream: void close()>();
        r2[18] = 1;

     label17:
        goto label42;

     label18:
        $r21 := @caughtexception;
        r22 = $r21;
        r2[19] = 1;
        goto label42;

     label19:
        $r23 := @caughtexception;

     label20:
        r24 = $r23;
        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();

     label21:
        virtualinvoke r7.<java.io.ByteArrayOutputStream: void close()>();
        r2[20] = 1;

     label22:
        goto label24;

     label23:
        $r25 := @caughtexception;
        r26 = $r25;
        r2[21] = 1;

     label24:
        virtualinvoke r6.<java.util.zip.GZIPInputStream: void close()>();
        r2[22] = 1;

     label25:
        goto label27;

     label26:
        $r27 := @caughtexception;
        r28 = $r27;
        r2[23] = 1;

     label27:
        virtualinvoke r5.<java.io.ByteArrayInputStream: void close()>();
        r2[24] = 1;

     label28:
        goto label42;

     label29:
        $r29 := @caughtexception;
        r30 = $r29;
        r2[25] = 1;
        goto label42;

     label30:
        $r31 := @caughtexception;

     label31:
        r10 = $r31;

     label32:
        virtualinvoke r7.<java.io.ByteArrayOutputStream: void close()>();
        r2[26] = 1;

     label33:
        goto label35;

     label34:
        $r32 := @caughtexception;
        r11 = $r32;
        r2[27] = 1;

     label35:
        virtualinvoke r6.<java.util.zip.GZIPInputStream: void close()>();
        r2[28] = 1;

     label36:
        goto label38;

     label37:
        $r33 := @caughtexception;
        r34 = $r33;
        r2[29] = 1;

     label38:
        virtualinvoke r5.<java.io.ByteArrayInputStream: void close()>();
        r2[30] = 1;

     label39:
        goto label41;

     label40:
        $r35 := @caughtexception;
        r36 = $r35;
        r2[31] = 1;

     label41:
        r2[32] = 1;
        throw r10;

     label42:
        r2[33] = 1;
        return r14;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.io.IOException from label7 to label10 with label19;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.Throwable from label7 to label10 with label30;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.lang.Exception from label32 to label33 with label34;
        catch java.lang.Exception from label35 to label36 with label37;
        catch java.lang.Exception from label38 to label39 with label40;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    public static java.lang.Object decodeToObject(java.lang.String) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader)>(r0, 0, null);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.Object decodeToObject(java.lang.String, int, java.lang.ClassLoader) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.lang.String r0;
        int i0;
        java.lang.ClassLoader r1;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4;
        java.io.ByteArrayInputStream r5, $r10;
        java.io.ObjectInputStream r6, $r11;
        null_type n0;
        java.lang.Exception r7, r9, $r14, $r15, r16, $r22, $r23, r24;
        java.lang.Throwable r8, $r21;
        com.zoffcc.applications.aagtl.Base64$1 $r12;
        java.lang.Object r13;
        java.io.IOException $r17, r18;
        java.lang.ClassNotFoundException $r19, r20;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.ClassLoader;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[21];
        r4 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] decode(java.lang.String,int)>(r0, i0);
        r5 = null;
        r6 = null;
        n0 = null;

     label1:
        $r10 = new java.io.ByteArrayInputStream;
        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);
        r5 = $r10;
        r3[0] = 1;
        if r1 != null goto label2;

        $r11 = new java.io.ObjectInputStream;
        specialinvoke $r11.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r5);
        r6 = $r11;
        r3[1] = 1;
        goto label3;

     label2:
        $r12 = new com.zoffcc.applications.aagtl.Base64$1;
        specialinvoke $r12.<com.zoffcc.applications.aagtl.Base64$1: void <init>(java.io.InputStream,java.lang.ClassLoader)>(r5, r1);
        r6 = $r12;
        r3[2] = 1;

     label3:
        r13 = virtualinvoke r6.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label4:
        virtualinvoke r5.<java.io.ByteArrayInputStream: void close()>();
        r3[3] = 1;

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;
        r7 = $r14;
        r3[4] = 1;

     label7:
        virtualinvoke r6.<java.io.ObjectInputStream: void close()>();
        r3[5] = 1;

     label8:
        goto label21;

     label9:
        $r15 := @caughtexception;
        r16 = $r15;
        r3[6] = 1;
        goto label21;

     label10:
        $r17 := @caughtexception;

     label11:
        r18 = $r17;
        r3[7] = 1;
        throw r18;

     label12:
        $r19 := @caughtexception;
        r20 = $r19;
        r3[8] = 1;
        throw r20;

     label13:
        $r21 := @caughtexception;
        r8 = $r21;

     label14:
        virtualinvoke r5.<java.io.ByteArrayInputStream: void close()>();
        r3[9] = 1;

     label15:
        goto label17;

     label16:
        $r22 := @caughtexception;
        r9 = $r22;
        r3[10] = 1;

     label17:
        virtualinvoke r6.<java.io.ObjectInputStream: void close()>();
        r3[11] = 1;

     label18:
        goto label20;

     label19:
        $r23 := @caughtexception;
        r24 = $r23;
        r3[12] = 1;

     label20:
        r3[13] = 1;
        throw r8;

     label21:
        r3[14] = 1;
        return r13;

        catch java.lang.Exception from label4 to label5 with label6;
        catch java.lang.Exception from label7 to label8 with label9;
        catch java.io.IOException from label1 to label4 with label10;
        catch java.lang.ClassNotFoundException from label1 to label4 with label12;
        catch java.lang.Throwable from label1 to label4 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Throwable from label11 to label14 with label13;
    }

    public static void encodeToFile(byte[], java.lang.String) throws java.io.IOException
    {
        byte[] r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.Base64$OutputStream r4, $r9;
        java.lang.Exception r5, r7, $r11, $r15;
        java.lang.Throwable r6, $r14;
        java.lang.NullPointerException $r8;
        java.io.FileOutputStream $r10;
        java.io.IOException $r12, r13;

        r0 := @parameter0: byte[];
        r1 := @parameter1: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[22];
        r3[0] = 1;
        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;
        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Data to encode was null.");
        r3[1] = 1;
        throw $r8;

     label1:
        r4 = null;

     label2:
        $r9 = new com.zoffcc.applications.aagtl.Base64$OutputStream;
        $r10 = new java.io.FileOutputStream;
        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);
        specialinvoke $r9.<com.zoffcc.applications.aagtl.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r10, 1);
        r4 = $r9;
        virtualinvoke r4.<com.zoffcc.applications.aagtl.Base64$OutputStream: void write(byte[])>(r0);

     label3:
        virtualinvoke r4.<com.zoffcc.applications.aagtl.Base64$OutputStream: void close()>();
        r3[2] = 1;

     label4:
        goto label13;

     label5:
        $r11 := @caughtexception;
        r5 = $r11;
        r3[3] = 1;
        goto label13;

     label6:
        $r12 := @caughtexception;

     label7:
        r13 = $r12;
        r3[4] = 1;
        throw r13;

     label8:
        $r14 := @caughtexception;
        r6 = $r14;

     label9:
        virtualinvoke r4.<com.zoffcc.applications.aagtl.Base64$OutputStream: void close()>();
        r3[5] = 1;

     label10:
        goto label12;

     label11:
        $r15 := @caughtexception;
        r7 = $r15;
        r3[6] = 1;

     label12:
        r3[7] = 1;
        throw r6;

     label13:
        r3[8] = 1;
        return;

        catch java.lang.Exception from label3 to label4 with label5;
        catch java.io.IOException from label2 to label3 with label6;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Exception from label9 to label10 with label11;
        catch java.lang.Throwable from label7 to label9 with label8;
    }

    public static void decodeToFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.Base64$OutputStream r4, $r9;
        java.io.FileOutputStream $r5;
        java.lang.Exception r6, r8, $r11, $r15;
        java.lang.Throwable r7, $r14;
        byte[] $r10;
        java.io.IOException $r12, r13;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        r4 = null;

     label1:
        $r9 = new com.zoffcc.applications.aagtl.Base64$OutputStream;
        $r5 = new java.io.FileOutputStream;
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);
        specialinvoke $r9.<com.zoffcc.applications.aagtl.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r5, 0);
        r4 = $r9;
        $r10 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");
        virtualinvoke r4.<com.zoffcc.applications.aagtl.Base64$OutputStream: void write(byte[])>($r10);

     label2:
        virtualinvoke r4.<com.zoffcc.applications.aagtl.Base64$OutputStream: void close()>();
        r3[0] = 1;

     label3:
        goto label12;

     label4:
        $r11 := @caughtexception;
        r6 = $r11;
        r3[1] = 1;
        goto label12;

     label5:
        $r12 := @caughtexception;

     label6:
        r13 = $r12;
        r3[2] = 1;
        throw r13;

     label7:
        $r14 := @caughtexception;
        r7 = $r14;

     label8:
        virtualinvoke r4.<com.zoffcc.applications.aagtl.Base64$OutputStream: void close()>();
        r3[3] = 1;

     label9:
        goto label11;

     label10:
        $r15 := @caughtexception;
        r8 = $r15;
        r3[4] = 1;

     label11:
        r3[5] = 1;
        throw r7;

     label12:
        r3[6] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Exception from label8 to label9 with label10;
        catch java.lang.Throwable from label6 to label8 with label7;
    }

    public static byte[] decodeFromFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r14;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0, n1;
        com.zoffcc.applications.aagtl.Base64$InputStream r3, $r16;
        java.io.File r4, $r8;
        int i0, $i5, $i6, i7;
        boolean z0;
        java.io.FileInputStream $r5;
        java.lang.Throwable r6, $r23;
        java.lang.Exception r7, $r19, r20, $r24;
        long $l1, $l3, $l4;
        byte $b2;
        java.io.IOException $r9, $r21, r22;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        byte[] r15, r18;
        java.io.BufferedInputStream $r17;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        n0 = null;
        r3 = null;

     label1:
        $r8 = new java.io.File;
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r0);
        r4 = $r8;
        n1 = null;
        i0 = 0;
        z0 = 0;
        $l1 = virtualinvoke r4.<java.io.File: long length()>();
        $b2 = $l1 cmp 2147483647L;
        r2[0] = 1;
        if $b2 <= 0 goto label2;

        $r9 = new java.io.IOException;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is too big for this convenience method (");
        $l3 = virtualinvoke r4.<java.io.File: long length()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes).");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);
        r2[1] = 1;
        throw $r9;

     label2:
        $l4 = virtualinvoke r4.<java.io.File: long length()>();
        $i5 = (int) $l4;
        r15 = newarray (byte)[$i5];
        $r16 = new com.zoffcc.applications.aagtl.Base64$InputStream;
        $r17 = new java.io.BufferedInputStream;
        $r5 = new java.io.FileInputStream;
        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r4);
        specialinvoke $r17.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);
        specialinvoke $r16.<com.zoffcc.applications.aagtl.Base64$InputStream: void <init>(java.io.InputStream,int)>($r17, 0);
        r3 = $r16;
        r2[2] = 1;

     label3:
        $i6 = virtualinvoke r3.<com.zoffcc.applications.aagtl.Base64$InputStream: int read(byte[],int,int)>(r15, i0, 4096);
        i7 = $i6;
        r2[3] = 1;
        if $i6 < 0 goto label4;

        i0 = i0 + i7;
        r2[4] = 1;
        goto label3;

     label4:
        r18 = newarray (byte)[i0];
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r15, 0, r18, 0, i0);

     label5:
        virtualinvoke r3.<com.zoffcc.applications.aagtl.Base64$InputStream: void close()>();
        r2[5] = 1;

     label6:
        goto label15;

     label7:
        $r19 := @caughtexception;
        r20 = $r19;
        r2[6] = 1;
        goto label15;

     label8:
        $r21 := @caughtexception;

     label9:
        r22 = $r21;
        r2[7] = 1;
        throw r22;

     label10:
        $r23 := @caughtexception;
        r6 = $r23;

     label11:
        virtualinvoke r3.<com.zoffcc.applications.aagtl.Base64$InputStream: void close()>();
        r2[8] = 1;

     label12:
        goto label14;

     label13:
        $r24 := @caughtexception;
        r7 = $r24;
        r2[9] = 1;

     label14:
        r2[10] = 1;
        throw r6;

     label15:
        r2[11] = 1;
        return r18;

        catch java.lang.Exception from label5 to label6 with label7;
        catch java.io.IOException from label1 to label5 with label8;
        catch java.lang.Throwable from label1 to label5 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Throwable from label9 to label11 with label10;
    }

    public static java.lang.String encodeFromFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r12, r13;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0;
        com.zoffcc.applications.aagtl.Base64$InputStream r3, $r10;
        java.io.File r4, $r9;
        byte[] r5;
        int i0, $i2, $i3, $i4, i5;
        boolean z0;
        java.io.FileInputStream $r6;
        java.lang.Throwable r7, $r18;
        java.lang.Exception r8, $r14, r15, $r19;
        long $l1;
        double $d0, $d1, $d2;
        java.io.BufferedInputStream $r11;
        java.io.IOException $r16, r17;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        n0 = null;
        r3 = null;

     label1:
        $r9 = new java.io.File;
        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r0);
        r4 = $r9;
        $l1 = virtualinvoke r4.<java.io.File: long length()>();
        $d0 = (double) $l1;
        $d1 = $d0 * 1.4;
        $d2 = $d1 + 1.0;
        $i2 = (int) $d2;
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 40);
        r5 = newarray (byte)[$i3];
        i0 = 0;
        z0 = 0;
        $r10 = new com.zoffcc.applications.aagtl.Base64$InputStream;
        $r11 = new java.io.BufferedInputStream;
        $r6 = new java.io.FileInputStream;
        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>(r4);
        specialinvoke $r11.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6);
        specialinvoke $r10.<com.zoffcc.applications.aagtl.Base64$InputStream: void <init>(java.io.InputStream,int)>($r11, 1);
        r3 = $r10;
        r2[0] = 1;

     label2:
        $i4 = virtualinvoke r3.<com.zoffcc.applications.aagtl.Base64$InputStream: int read(byte[],int,int)>(r5, i0, 4096);
        i5 = $i4;
        r2[1] = 1;
        if $i4 < 0 goto label3;

        i0 = i0 + i5;
        r2[2] = 1;
        goto label2;

     label3:
        $r12 = new java.lang.String;
        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r5, 0, i0, "US-ASCII");
        r13 = $r12;

     label4:
        virtualinvoke r3.<com.zoffcc.applications.aagtl.Base64$InputStream: void close()>();
        r2[3] = 1;

     label5:
        goto label14;

     label6:
        $r14 := @caughtexception;
        r15 = $r14;
        r2[4] = 1;
        goto label14;

     label7:
        $r16 := @caughtexception;

     label8:
        r17 = $r16;
        r2[5] = 1;
        throw r17;

     label9:
        $r18 := @caughtexception;
        r7 = $r18;

     label10:
        virtualinvoke r3.<com.zoffcc.applications.aagtl.Base64$InputStream: void close()>();
        r2[6] = 1;

     label11:
        goto label13;

     label12:
        $r19 := @caughtexception;
        r8 = $r19;
        r2[7] = 1;

     label13:
        r2[8] = 1;
        throw r7;

     label14:
        r2[9] = 1;
        return r13;

        catch java.lang.Exception from label4 to label5 with label6;
        catch java.io.IOException from label1 to label4 with label7;
        catch java.lang.Throwable from label1 to label4 with label9;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label8 to label10 with label9;
    }

    public static void encodeFileToFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        java.io.BufferedOutputStream r5, $r10;
        java.io.FileOutputStream $r6;
        java.lang.Exception r7, r9, $r12, $r16;
        java.lang.Throwable r8, $r15;
        byte[] $r11;
        java.io.IOException $r13, r14;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[26];
        r4 = staticinvoke <com.zoffcc.applications.aagtl.Base64: java.lang.String encodeFromFile(java.lang.String)>(r0);
        r5 = null;

     label1:
        $r10 = new java.io.BufferedOutputStream;
        $r6 = new java.io.FileOutputStream;
        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);
        specialinvoke $r10.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r6);
        r5 = $r10;
        $r11 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");
        virtualinvoke r5.<java.io.OutputStream: void write(byte[])>($r11);

     label2:
        virtualinvoke r5.<java.io.OutputStream: void close()>();
        r3[0] = 1;

     label3:
        goto label12;

     label4:
        $r12 := @caughtexception;
        r7 = $r12;
        r3[1] = 1;
        goto label12;

     label5:
        $r13 := @caughtexception;

     label6:
        r14 = $r13;
        r3[2] = 1;
        throw r14;

     label7:
        $r15 := @caughtexception;
        r8 = $r15;

     label8:
        virtualinvoke r5.<java.io.OutputStream: void close()>();
        r3[3] = 1;

     label9:
        goto label11;

     label10:
        $r16 := @caughtexception;
        r9 = $r16;
        r3[4] = 1;

     label11:
        r3[5] = 1;
        throw r8;

     label12:
        r3[6] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Exception from label8 to label9 with label10;
        catch java.lang.Throwable from label6 to label8 with label7;
    }

    public static void decodeFileToFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4;
        java.io.BufferedOutputStream r5, $r10;
        java.io.FileOutputStream $r6;
        java.lang.Exception r7, r9, $r11, $r15;
        java.lang.Throwable r8, $r14;
        java.io.IOException $r12, r13;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[27];
        r4 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] decodeFromFile(java.lang.String)>(r0);
        r5 = null;

     label1:
        $r10 = new java.io.BufferedOutputStream;
        $r6 = new java.io.FileOutputStream;
        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);
        specialinvoke $r10.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r6);
        r5 = $r10;
        virtualinvoke r5.<java.io.OutputStream: void write(byte[])>(r4);

     label2:
        virtualinvoke r5.<java.io.OutputStream: void close()>();
        r3[0] = 1;

     label3:
        goto label12;

     label4:
        $r11 := @caughtexception;
        r7 = $r11;
        r3[1] = 1;
        goto label12;

     label5:
        $r12 := @caughtexception;

     label6:
        r13 = $r12;
        r3[2] = 1;
        throw r13;

     label7:
        $r14 := @caughtexception;
        r8 = $r14;

     label8:
        virtualinvoke r5.<java.io.OutputStream: void close()>();
        r3[3] = 1;

     label9:
        goto label11;

     label10:
        $r15 := @caughtexception;
        r9 = $r15;
        r3[4] = 1;

     label11:
        r3[5] = 1;
        throw r8;

     label12:
        r3[6] = 1;
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Exception from label8 to label9 with label10;
        catch java.lang.Throwable from label6 to label8 with label7;
    }

    static byte[] access$000(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        byte[] $r2;

        i0 := @parameter0: int;
        $r0 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r1 = $r0[28];
        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] getDecodabet(int)>(i0);
        r1[0] = 1;
        return $r2;
    }

    static byte[] access$100(byte[], int, int, byte[], int, int)
    {
        byte[] r0, r1, $r4;
        int i0, i1, i2, i3;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r1 := @parameter3: byte[];
        i2 := @parameter4: int;
        i3 := @parameter5: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[29];
        $r4 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>(r0, i0, i1, r1, i2, i3);
        r3[0] = 1;
        return $r4;
    }

    static int access$200(byte[], int, byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1, i2, $i3;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        r1 := @parameter2: byte[];
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[30];
        $i3 = staticinvoke <com.zoffcc.applications.aagtl.Base64: int decode4to3(byte[],int,byte[],int,int)>(r0, i0, r1, i1, i2);
        r3[0] = 1;
        return $i3;
    }

    static byte[] access$300(byte[], byte[], int, int)
    {
        byte[] r0, r1, $r4;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: byte[];
        r1 := @parameter1: byte[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r2 = <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();

     label0:
        r3 = $r2[31];
        $r4 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] encode3to4(byte[],byte[],int,int)>(r0, r1, i0, i1);
        r3[0] = 1;
        return $r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        boolean $z0, $z1;
        byte[] $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRi()>();
        r1 = $r0[32];
        $r2 = class "com/zoffcc/applications/aagtl/Base64";
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();
        r1[0] = 1;
        if $z0 != 0 goto label0;

        $z1 = 1;
        r1[1] = 1;
        goto label1;

     label0:
        $z1 = 0;
        r1[2] = 1;

     label1:
        <com.zoffcc.applications.aagtl.Base64: boolean $assertionsDisabled> = $z1;
        $r3 = newarray (byte)[64];
        $r3[0] = 65;
        $r3[1] = 66;
        $r3[2] = 67;
        $r3[3] = 68;
        $r3[4] = 69;
        $r3[5] = 70;
        $r3[6] = 71;
        $r3[7] = 72;
        $r3[8] = 73;
        $r3[9] = 74;
        $r3[10] = 75;
        $r3[11] = 76;
        $r3[12] = 77;
        $r3[13] = 78;
        $r3[14] = 79;
        $r3[15] = 80;
        $r3[16] = 81;
        $r3[17] = 82;
        $r3[18] = 83;
        $r3[19] = 84;
        $r3[20] = 85;
        $r3[21] = 86;
        $r3[22] = 87;
        $r3[23] = 88;
        $r3[24] = 89;
        $r3[25] = 90;
        $r3[26] = 97;
        $r3[27] = 98;
        $r3[28] = 99;
        $r3[29] = 100;
        $r3[30] = 101;
        $r3[31] = 102;
        $r3[32] = 103;
        $r3[33] = 104;
        $r3[34] = 105;
        $r3[35] = 106;
        $r3[36] = 107;
        $r3[37] = 108;
        $r3[38] = 109;
        $r3[39] = 110;
        $r3[40] = 111;
        $r3[41] = 112;
        $r3[42] = 113;
        $r3[43] = 114;
        $r3[44] = 115;
        $r3[45] = 116;
        $r3[46] = 117;
        $r3[47] = 118;
        $r3[48] = 119;
        $r3[49] = 120;
        $r3[50] = 121;
        $r3[51] = 122;
        $r3[52] = 48;
        $r3[53] = 49;
        $r3[54] = 50;
        $r3[55] = 51;
        $r3[56] = 52;
        $r3[57] = 53;
        $r3[58] = 54;
        $r3[59] = 55;
        $r3[60] = 56;
        $r3[61] = 57;
        $r3[62] = 43;
        $r3[63] = 47;
        <com.zoffcc.applications.aagtl.Base64: byte[] _STANDARD_ALPHABET> = $r3;
        $r4 = newarray (byte)[256];
        $r4[0] = -9;
        $r4[1] = -9;
        $r4[2] = -9;
        $r4[3] = -9;
        $r4[4] = -9;
        $r4[5] = -9;
        $r4[6] = -9;
        $r4[7] = -9;
        $r4[8] = -9;
        $r4[9] = -5;
        $r4[10] = -5;
        $r4[11] = -9;
        $r4[12] = -9;
        $r4[13] = -5;
        $r4[14] = -9;
        $r4[15] = -9;
        $r4[16] = -9;
        $r4[17] = -9;
        $r4[18] = -9;
        $r4[19] = -9;
        $r4[20] = -9;
        $r4[21] = -9;
        $r4[22] = -9;
        $r4[23] = -9;
        $r4[24] = -9;
        $r4[25] = -9;
        $r4[26] = -9;
        $r4[27] = -9;
        $r4[28] = -9;
        $r4[29] = -9;
        $r4[30] = -9;
        $r4[31] = -9;
        $r4[32] = -5;
        $r4[33] = -9;
        $r4[34] = -9;
        $r4[35] = -9;
        $r4[36] = -9;
        $r4[37] = -9;
        $r4[38] = -9;
        $r4[39] = -9;
        $r4[40] = -9;
        $r4[41] = -9;
        $r4[42] = -9;
        $r4[43] = 62;
        $r4[44] = -9;
        $r4[45] = -9;
        $r4[46] = -9;
        $r4[47] = 63;
        $r4[48] = 52;
        $r4[49] = 53;
        $r4[50] = 54;
        $r4[51] = 55;
        $r4[52] = 56;
        $r4[53] = 57;
        $r4[54] = 58;
        $r4[55] = 59;
        $r4[56] = 60;
        $r4[57] = 61;
        $r4[58] = -9;
        $r4[59] = -9;
        $r4[60] = -9;
        $r4[61] = -1;
        $r4[62] = -9;
        $r4[63] = -9;
        $r4[64] = -9;
        $r4[65] = 0;
        $r4[66] = 1;
        $r4[67] = 2;
        $r4[68] = 3;
        $r4[69] = 4;
        $r4[70] = 5;
        $r4[71] = 6;
        $r4[72] = 7;
        $r4[73] = 8;
        $r4[74] = 9;
        $r4[75] = 10;
        $r4[76] = 11;
        $r4[77] = 12;
        $r4[78] = 13;
        $r4[79] = 14;
        $r4[80] = 15;
        $r4[81] = 16;
        $r4[82] = 17;
        $r4[83] = 18;
        $r4[84] = 19;
        $r4[85] = 20;
        $r4[86] = 21;
        $r4[87] = 22;
        $r4[88] = 23;
        $r4[89] = 24;
        $r4[90] = 25;
        $r4[91] = -9;
        $r4[92] = -9;
        $r4[93] = -9;
        $r4[94] = -9;
        $r4[95] = -9;
        $r4[96] = -9;
        $r4[97] = 26;
        $r4[98] = 27;
        $r4[99] = 28;
        $r4[100] = 29;
        $r4[101] = 30;
        $r4[102] = 31;
        $r4[103] = 32;
        $r4[104] = 33;
        $r4[105] = 34;
        $r4[106] = 35;
        $r4[107] = 36;
        $r4[108] = 37;
        $r4[109] = 38;
        $r4[110] = 39;
        $r4[111] = 40;
        $r4[112] = 41;
        $r4[113] = 42;
        $r4[114] = 43;
        $r4[115] = 44;
        $r4[116] = 45;
        $r4[117] = 46;
        $r4[118] = 47;
        $r4[119] = 48;
        $r4[120] = 49;
        $r4[121] = 50;
        $r4[122] = 51;
        $r4[123] = -9;
        $r4[124] = -9;
        $r4[125] = -9;
        $r4[126] = -9;
        $r4[127] = -9;
        $r4[128] = -9;
        $r4[129] = -9;
        $r4[130] = -9;
        $r4[131] = -9;
        $r4[132] = -9;
        $r4[133] = -9;
        $r4[134] = -9;
        $r4[135] = -9;
        $r4[136] = -9;
        $r4[137] = -9;
        $r4[138] = -9;
        $r4[139] = -9;
        $r4[140] = -9;
        $r4[141] = -9;
        $r4[142] = -9;
        $r4[143] = -9;
        $r4[144] = -9;
        $r4[145] = -9;
        $r4[146] = -9;
        $r4[147] = -9;
        $r4[148] = -9;
        $r4[149] = -9;
        $r4[150] = -9;
        $r4[151] = -9;
        $r4[152] = -9;
        $r4[153] = -9;
        $r4[154] = -9;
        $r4[155] = -9;
        $r4[156] = -9;
        $r4[157] = -9;
        $r4[158] = -9;
        $r4[159] = -9;
        $r4[160] = -9;
        $r4[161] = -9;
        $r4[162] = -9;
        $r4[163] = -9;
        $r4[164] = -9;
        $r4[165] = -9;
        $r4[166] = -9;
        $r4[167] = -9;
        $r4[168] = -9;
        $r4[169] = -9;
        $r4[170] = -9;
        $r4[171] = -9;
        $r4[172] = -9;
        $r4[173] = -9;
        $r4[174] = -9;
        $r4[175] = -9;
        $r4[176] = -9;
        $r4[177] = -9;
        $r4[178] = -9;
        $r4[179] = -9;
        $r4[180] = -9;
        $r4[181] = -9;
        $r4[182] = -9;
        $r4[183] = -9;
        $r4[184] = -9;
        $r4[185] = -9;
        $r4[186] = -9;
        $r4[187] = -9;
        $r4[188] = -9;
        $r4[189] = -9;
        $r4[190] = -9;
        $r4[191] = -9;
        $r4[192] = -9;
        $r4[193] = -9;
        $r4[194] = -9;
        $r4[195] = -9;
        $r4[196] = -9;
        $r4[197] = -9;
        $r4[198] = -9;
        $r4[199] = -9;
        $r4[200] = -9;
        $r4[201] = -9;
        $r4[202] = -9;
        $r4[203] = -9;
        $r4[204] = -9;
        $r4[205] = -9;
        $r4[206] = -9;
        $r4[207] = -9;
        $r4[208] = -9;
        $r4[209] = -9;
        $r4[210] = -9;
        $r4[211] = -9;
        $r4[212] = -9;
        $r4[213] = -9;
        $r4[214] = -9;
        $r4[215] = -9;
        $r4[216] = -9;
        $r4[217] = -9;
        $r4[218] = -9;
        $r4[219] = -9;
        $r4[220] = -9;
        $r4[221] = -9;
        $r4[222] = -9;
        $r4[223] = -9;
        $r4[224] = -9;
        $r4[225] = -9;
        $r4[226] = -9;
        $r4[227] = -9;
        $r4[228] = -9;
        $r4[229] = -9;
        $r4[230] = -9;
        $r4[231] = -9;
        $r4[232] = -9;
        $r4[233] = -9;
        $r4[234] = -9;
        $r4[235] = -9;
        $r4[236] = -9;
        $r4[237] = -9;
        $r4[238] = -9;
        $r4[239] = -9;
        $r4[240] = -9;
        $r4[241] = -9;
        $r4[242] = -9;
        $r4[243] = -9;
        $r4[244] = -9;
        $r4[245] = -9;
        $r4[246] = -9;
        $r4[247] = -9;
        $r4[248] = -9;
        $r4[249] = -9;
        $r4[250] = -9;
        $r4[251] = -9;
        $r4[252] = -9;
        $r4[253] = -9;
        $r4[254] = -9;
        $r4[255] = -9;
        <com.zoffcc.applications.aagtl.Base64: byte[] _STANDARD_DECODABET> = $r4;
        $r5 = newarray (byte)[64];
        $r5[0] = 65;
        $r5[1] = 66;
        $r5[2] = 67;
        $r5[3] = 68;
        $r5[4] = 69;
        $r5[5] = 70;
        $r5[6] = 71;
        $r5[7] = 72;
        $r5[8] = 73;
        $r5[9] = 74;
        $r5[10] = 75;
        $r5[11] = 76;
        $r5[12] = 77;
        $r5[13] = 78;
        $r5[14] = 79;
        $r5[15] = 80;
        $r5[16] = 81;
        $r5[17] = 82;
        $r5[18] = 83;
        $r5[19] = 84;
        $r5[20] = 85;
        $r5[21] = 86;
        $r5[22] = 87;
        $r5[23] = 88;
        $r5[24] = 89;
        $r5[25] = 90;
        $r5[26] = 97;
        $r5[27] = 98;
        $r5[28] = 99;
        $r5[29] = 100;
        $r5[30] = 101;
        $r5[31] = 102;
        $r5[32] = 103;
        $r5[33] = 104;
        $r5[34] = 105;
        $r5[35] = 106;
        $r5[36] = 107;
        $r5[37] = 108;
        $r5[38] = 109;
        $r5[39] = 110;
        $r5[40] = 111;
        $r5[41] = 112;
        $r5[42] = 113;
        $r5[43] = 114;
        $r5[44] = 115;
        $r5[45] = 116;
        $r5[46] = 117;
        $r5[47] = 118;
        $r5[48] = 119;
        $r5[49] = 120;
        $r5[50] = 121;
        $r5[51] = 122;
        $r5[52] = 48;
        $r5[53] = 49;
        $r5[54] = 50;
        $r5[55] = 51;
        $r5[56] = 52;
        $r5[57] = 53;
        $r5[58] = 54;
        $r5[59] = 55;
        $r5[60] = 56;
        $r5[61] = 57;
        $r5[62] = 45;
        $r5[63] = 95;
        <com.zoffcc.applications.aagtl.Base64: byte[] _URL_SAFE_ALPHABET> = $r5;
        $r6 = newarray (byte)[256];
        $r6[0] = -9;
        $r6[1] = -9;
        $r6[2] = -9;
        $r6[3] = -9;
        $r6[4] = -9;
        $r6[5] = -9;
        $r6[6] = -9;
        $r6[7] = -9;
        $r6[8] = -9;
        $r6[9] = -5;
        $r6[10] = -5;
        $r6[11] = -9;
        $r6[12] = -9;
        $r6[13] = -5;
        $r6[14] = -9;
        $r6[15] = -9;
        $r6[16] = -9;
        $r6[17] = -9;
        $r6[18] = -9;
        $r6[19] = -9;
        $r6[20] = -9;
        $r6[21] = -9;
        $r6[22] = -9;
        $r6[23] = -9;
        $r6[24] = -9;
        $r6[25] = -9;
        $r6[26] = -9;
        $r6[27] = -9;
        $r6[28] = -9;
        $r6[29] = -9;
        $r6[30] = -9;
        $r6[31] = -9;
        $r6[32] = -5;
        $r6[33] = -9;
        $r6[34] = -9;
        $r6[35] = -9;
        $r6[36] = -9;
        $r6[37] = -9;
        $r6[38] = -9;
        $r6[39] = -9;
        $r6[40] = -9;
        $r6[41] = -9;
        $r6[42] = -9;
        $r6[43] = -9;
        $r6[44] = -9;
        $r6[45] = 62;
        $r6[46] = -9;
        $r6[47] = -9;
        $r6[48] = 52;
        $r6[49] = 53;
        $r6[50] = 54;
        $r6[51] = 55;
        $r6[52] = 56;
        $r6[53] = 57;
        $r6[54] = 58;
        $r6[55] = 59;
        $r6[56] = 60;
        $r6[57] = 61;
        $r6[58] = -9;
        $r6[59] = -9;
        $r6[60] = -9;
        $r6[61] = -1;
        $r6[62] = -9;
        $r6[63] = -9;
        $r6[64] = -9;
        $r6[65] = 0;
        $r6[66] = 1;
        $r6[67] = 2;
        $r6[68] = 3;
        $r6[69] = 4;
        $r6[70] = 5;
        $r6[71] = 6;
        $r6[72] = 7;
        $r6[73] = 8;
        $r6[74] = 9;
        $r6[75] = 10;
        $r6[76] = 11;
        $r6[77] = 12;
        $r6[78] = 13;
        $r6[79] = 14;
        $r6[80] = 15;
        $r6[81] = 16;
        $r6[82] = 17;
        $r6[83] = 18;
        $r6[84] = 19;
        $r6[85] = 20;
        $r6[86] = 21;
        $r6[87] = 22;
        $r6[88] = 23;
        $r6[89] = 24;
        $r6[90] = 25;
        $r6[91] = -9;
        $r6[92] = -9;
        $r6[93] = -9;
        $r6[94] = -9;
        $r6[95] = 63;
        $r6[96] = -9;
        $r6[97] = 26;
        $r6[98] = 27;
        $r6[99] = 28;
        $r6[100] = 29;
        $r6[101] = 30;
        $r6[102] = 31;
        $r6[103] = 32;
        $r6[104] = 33;
        $r6[105] = 34;
        $r6[106] = 35;
        $r6[107] = 36;
        $r6[108] = 37;
        $r6[109] = 38;
        $r6[110] = 39;
        $r6[111] = 40;
        $r6[112] = 41;
        $r6[113] = 42;
        $r6[114] = 43;
        $r6[115] = 44;
        $r6[116] = 45;
        $r6[117] = 46;
        $r6[118] = 47;
        $r6[119] = 48;
        $r6[120] = 49;
        $r6[121] = 50;
        $r6[122] = 51;
        $r6[123] = -9;
        $r6[124] = -9;
        $r6[125] = -9;
        $r6[126] = -9;
        $r6[127] = -9;
        $r6[128] = -9;
        $r6[129] = -9;
        $r6[130] = -9;
        $r6[131] = -9;
        $r6[132] = -9;
        $r6[133] = -9;
        $r6[134] = -9;
        $r6[135] = -9;
        $r6[136] = -9;
        $r6[137] = -9;
        $r6[138] = -9;
        $r6[139] = -9;
        $r6[140] = -9;
        $r6[141] = -9;
        $r6[142] = -9;
        $r6[143] = -9;
        $r6[144] = -9;
        $r6[145] = -9;
        $r6[146] = -9;
        $r6[147] = -9;
        $r6[148] = -9;
        $r6[149] = -9;
        $r6[150] = -9;
        $r6[151] = -9;
        $r6[152] = -9;
        $r6[153] = -9;
        $r6[154] = -9;
        $r6[155] = -9;
        $r6[156] = -9;
        $r6[157] = -9;
        $r6[158] = -9;
        $r6[159] = -9;
        $r6[160] = -9;
        $r6[161] = -9;
        $r6[162] = -9;
        $r6[163] = -9;
        $r6[164] = -9;
        $r6[165] = -9;
        $r6[166] = -9;
        $r6[167] = -9;
        $r6[168] = -9;
        $r6[169] = -9;
        $r6[170] = -9;
        $r6[171] = -9;
        $r6[172] = -9;
        $r6[173] = -9;
        $r6[174] = -9;
        $r6[175] = -9;
        $r6[176] = -9;
        $r6[177] = -9;
        $r6[178] = -9;
        $r6[179] = -9;
        $r6[180] = -9;
        $r6[181] = -9;
        $r6[182] = -9;
        $r6[183] = -9;
        $r6[184] = -9;
        $r6[185] = -9;
        $r6[186] = -9;
        $r6[187] = -9;
        $r6[188] = -9;
        $r6[189] = -9;
        $r6[190] = -9;
        $r6[191] = -9;
        $r6[192] = -9;
        $r6[193] = -9;
        $r6[194] = -9;
        $r6[195] = -9;
        $r6[196] = -9;
        $r6[197] = -9;
        $r6[198] = -9;
        $r6[199] = -9;
        $r6[200] = -9;
        $r6[201] = -9;
        $r6[202] = -9;
        $r6[203] = -9;
        $r6[204] = -9;
        $r6[205] = -9;
        $r6[206] = -9;
        $r6[207] = -9;
        $r6[208] = -9;
        $r6[209] = -9;
        $r6[210] = -9;
        $r6[211] = -9;
        $r6[212] = -9;
        $r6[213] = -9;
        $r6[214] = -9;
        $r6[215] = -9;
        $r6[216] = -9;
        $r6[217] = -9;
        $r6[218] = -9;
        $r6[219] = -9;
        $r6[220] = -9;
        $r6[221] = -9;
        $r6[222] = -9;
        $r6[223] = -9;
        $r6[224] = -9;
        $r6[225] = -9;
        $r6[226] = -9;
        $r6[227] = -9;
        $r6[228] = -9;
        $r6[229] = -9;
        $r6[230] = -9;
        $r6[231] = -9;
        $r6[232] = -9;
        $r6[233] = -9;
        $r6[234] = -9;
        $r6[235] = -9;
        $r6[236] = -9;
        $r6[237] = -9;
        $r6[238] = -9;
        $r6[239] = -9;
        $r6[240] = -9;
        $r6[241] = -9;
        $r6[242] = -9;
        $r6[243] = -9;
        $r6[244] = -9;
        $r6[245] = -9;
        $r6[246] = -9;
        $r6[247] = -9;
        $r6[248] = -9;
        $r6[249] = -9;
        $r6[250] = -9;
        $r6[251] = -9;
        $r6[252] = -9;
        $r6[253] = -9;
        $r6[254] = -9;
        $r6[255] = -9;
        <com.zoffcc.applications.aagtl.Base64: byte[] _URL_SAFE_DECODABET> = $r6;
        $r7 = newarray (byte)[64];
        $r7[0] = 45;
        $r7[1] = 48;
        $r7[2] = 49;
        $r7[3] = 50;
        $r7[4] = 51;
        $r7[5] = 52;
        $r7[6] = 53;
        $r7[7] = 54;
        $r7[8] = 55;
        $r7[9] = 56;
        $r7[10] = 57;
        $r7[11] = 65;
        $r7[12] = 66;
        $r7[13] = 67;
        $r7[14] = 68;
        $r7[15] = 69;
        $r7[16] = 70;
        $r7[17] = 71;
        $r7[18] = 72;
        $r7[19] = 73;
        $r7[20] = 74;
        $r7[21] = 75;
        $r7[22] = 76;
        $r7[23] = 77;
        $r7[24] = 78;
        $r7[25] = 79;
        $r7[26] = 80;
        $r7[27] = 81;
        $r7[28] = 82;
        $r7[29] = 83;
        $r7[30] = 84;
        $r7[31] = 85;
        $r7[32] = 86;
        $r7[33] = 87;
        $r7[34] = 88;
        $r7[35] = 89;
        $r7[36] = 90;
        $r7[37] = 95;
        $r7[38] = 97;
        $r7[39] = 98;
        $r7[40] = 99;
        $r7[41] = 100;
        $r7[42] = 101;
        $r7[43] = 102;
        $r7[44] = 103;
        $r7[45] = 104;
        $r7[46] = 105;
        $r7[47] = 106;
        $r7[48] = 107;
        $r7[49] = 108;
        $r7[50] = 109;
        $r7[51] = 110;
        $r7[52] = 111;
        $r7[53] = 112;
        $r7[54] = 113;
        $r7[55] = 114;
        $r7[56] = 115;
        $r7[57] = 116;
        $r7[58] = 117;
        $r7[59] = 118;
        $r7[60] = 119;
        $r7[61] = 120;
        $r7[62] = 121;
        $r7[63] = 122;
        <com.zoffcc.applications.aagtl.Base64: byte[] _ORDERED_ALPHABET> = $r7;
        $r8 = newarray (byte)[257];
        $r8[0] = -9;
        $r8[1] = -9;
        $r8[2] = -9;
        $r8[3] = -9;
        $r8[4] = -9;
        $r8[5] = -9;
        $r8[6] = -9;
        $r8[7] = -9;
        $r8[8] = -9;
        $r8[9] = -5;
        $r8[10] = -5;
        $r8[11] = -9;
        $r8[12] = -9;
        $r8[13] = -5;
        $r8[14] = -9;
        $r8[15] = -9;
        $r8[16] = -9;
        $r8[17] = -9;
        $r8[18] = -9;
        $r8[19] = -9;
        $r8[20] = -9;
        $r8[21] = -9;
        $r8[22] = -9;
        $r8[23] = -9;
        $r8[24] = -9;
        $r8[25] = -9;
        $r8[26] = -9;
        $r8[27] = -9;
        $r8[28] = -9;
        $r8[29] = -9;
        $r8[30] = -9;
        $r8[31] = -9;
        $r8[32] = -5;
        $r8[33] = -9;
        $r8[34] = -9;
        $r8[35] = -9;
        $r8[36] = -9;
        $r8[37] = -9;
        $r8[38] = -9;
        $r8[39] = -9;
        $r8[40] = -9;
        $r8[41] = -9;
        $r8[42] = -9;
        $r8[43] = -9;
        $r8[44] = -9;
        $r8[45] = 0;
        $r8[46] = -9;
        $r8[47] = -9;
        $r8[48] = 1;
        $r8[49] = 2;
        $r8[50] = 3;
        $r8[51] = 4;
        $r8[52] = 5;
        $r8[53] = 6;
        $r8[54] = 7;
        $r8[55] = 8;
        $r8[56] = 9;
        $r8[57] = 10;
        $r8[58] = -9;
        $r8[59] = -9;
        $r8[60] = -9;
        $r8[61] = -1;
        $r8[62] = -9;
        $r8[63] = -9;
        $r8[64] = -9;
        $r8[65] = 11;
        $r8[66] = 12;
        $r8[67] = 13;
        $r8[68] = 14;
        $r8[69] = 15;
        $r8[70] = 16;
        $r8[71] = 17;
        $r8[72] = 18;
        $r8[73] = 19;
        $r8[74] = 20;
        $r8[75] = 21;
        $r8[76] = 22;
        $r8[77] = 23;
        $r8[78] = 24;
        $r8[79] = 25;
        $r8[80] = 26;
        $r8[81] = 27;
        $r8[82] = 28;
        $r8[83] = 29;
        $r8[84] = 30;
        $r8[85] = 31;
        $r8[86] = 32;
        $r8[87] = 33;
        $r8[88] = 34;
        $r8[89] = 35;
        $r8[90] = 36;
        $r8[91] = -9;
        $r8[92] = -9;
        $r8[93] = -9;
        $r8[94] = -9;
        $r8[95] = 37;
        $r8[96] = -9;
        $r8[97] = 38;
        $r8[98] = 39;
        $r8[99] = 40;
        $r8[100] = 41;
        $r8[101] = 42;
        $r8[102] = 43;
        $r8[103] = 44;
        $r8[104] = 45;
        $r8[105] = 46;
        $r8[106] = 47;
        $r8[107] = 48;
        $r8[108] = 49;
        $r8[109] = 50;
        $r8[110] = 51;
        $r8[111] = 52;
        $r8[112] = 53;
        $r8[113] = 54;
        $r8[114] = 55;
        $r8[115] = 56;
        $r8[116] = 57;
        $r8[117] = 58;
        $r8[118] = 59;
        $r8[119] = 60;
        $r8[120] = 61;
        $r8[121] = 62;
        $r8[122] = 63;
        $r8[123] = -9;
        $r8[124] = -9;
        $r8[125] = -9;
        $r8[126] = -9;
        $r8[127] = -9;
        $r8[128] = -9;
        $r8[129] = -9;
        $r8[130] = -9;
        $r8[131] = -9;
        $r8[132] = -9;
        $r8[133] = -9;
        $r8[134] = -9;
        $r8[135] = -9;
        $r8[136] = -9;
        $r8[137] = -9;
        $r8[138] = -9;
        $r8[139] = -9;
        $r8[140] = -9;
        $r8[141] = -9;
        $r8[142] = -9;
        $r8[143] = -9;
        $r8[144] = -9;
        $r8[145] = -9;
        $r8[146] = -9;
        $r8[147] = -9;
        $r8[148] = -9;
        $r8[149] = -9;
        $r8[150] = -9;
        $r8[151] = -9;
        $r8[152] = -9;
        $r8[153] = -9;
        $r8[154] = -9;
        $r8[155] = -9;
        $r8[156] = -9;
        $r8[157] = -9;
        $r8[158] = -9;
        $r8[159] = -9;
        $r8[160] = -9;
        $r8[161] = -9;
        $r8[162] = -9;
        $r8[163] = -9;
        $r8[164] = -9;
        $r8[165] = -9;
        $r8[166] = -9;
        $r8[167] = -9;
        $r8[168] = -9;
        $r8[169] = -9;
        $r8[170] = -9;
        $r8[171] = -9;
        $r8[172] = -9;
        $r8[173] = -9;
        $r8[174] = -9;
        $r8[175] = -9;
        $r8[176] = -9;
        $r8[177] = -9;
        $r8[178] = -9;
        $r8[179] = -9;
        $r8[180] = -9;
        $r8[181] = -9;
        $r8[182] = -9;
        $r8[183] = -9;
        $r8[184] = -9;
        $r8[185] = -9;
        $r8[186] = -9;
        $r8[187] = -9;
        $r8[188] = -9;
        $r8[189] = -9;
        $r8[190] = -9;
        $r8[191] = -9;
        $r8[192] = -9;
        $r8[193] = -9;
        $r8[194] = -9;
        $r8[195] = -9;
        $r8[196] = -9;
        $r8[197] = -9;
        $r8[198] = -9;
        $r8[199] = -9;
        $r8[200] = -9;
        $r8[201] = -9;
        $r8[202] = -9;
        $r8[203] = -9;
        $r8[204] = -9;
        $r8[205] = -9;
        $r8[206] = -9;
        $r8[207] = -9;
        $r8[208] = -9;
        $r8[209] = -9;
        $r8[210] = -9;
        $r8[211] = -9;
        $r8[212] = -9;
        $r8[213] = -9;
        $r8[214] = -9;
        $r8[215] = -9;
        $r8[216] = -9;
        $r8[217] = -9;
        $r8[218] = -9;
        $r8[219] = -9;
        $r8[220] = -9;
        $r8[221] = -9;
        $r8[222] = -9;
        $r8[223] = -9;
        $r8[224] = -9;
        $r8[225] = -9;
        $r8[226] = -9;
        $r8[227] = -9;
        $r8[228] = -9;
        $r8[229] = -9;
        $r8[230] = -9;
        $r8[231] = -9;
        $r8[232] = -9;
        $r8[233] = -9;
        $r8[234] = -9;
        $r8[235] = -9;
        $r8[236] = -9;
        $r8[237] = -9;
        $r8[238] = -9;
        $r8[239] = -9;
        $r8[240] = -9;
        $r8[241] = -9;
        $r8[242] = -9;
        $r8[243] = -9;
        $r8[244] = -9;
        $r8[245] = -9;
        $r8[246] = -9;
        $r8[247] = -9;
        $r8[248] = -9;
        $r8[249] = -9;
        $r8[250] = -9;
        $r8[251] = -9;
        $r8[252] = -9;
        $r8[253] = -9;
        $r8[254] = -9;
        $r8[255] = -9;
        $r8[256] = -9;
        <com.zoffcc.applications.aagtl.Base64: byte[] _ORDERED_DECODABET> = $r8;
        r1[3] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;

        $r0 = newmultiarray (boolean)[33][];
        <com.zoffcc.applications.aagtl.Base64: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[5];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[14];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[7];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[25];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[7];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[7];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[2];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[4];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[43];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[15];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[19];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[34];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[15];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[9];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[7];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[12];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[10];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[7];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[7];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[4];
        $r0[32] = $r33;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/Base64", 7569382958086204063L);
        return $r0;
    }
}
public final class com.zoffcc.applications.aagtl.BuildConfig extends java.lang.Object
{
    public static final boolean DEBUG;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.BuildConfig r0;

        r0 := @this: com.zoffcc.applications.aagtl.BuildConfig;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class com.zoffcc.applications.aagtl.CacheDownloader extends java.lang.Object
{
    com.zoffcc.applications.aagtl.aagtl main_aagtl;
    com.zoffcc.applications.aagtl.GeocacheCoordinate current_cache;
    com.zoffcc.applications.aagtl.HTMLDownloader downloader;
    static final java.lang.Boolean DEBUG_;
    static final java.lang.Boolean DEBUG2_;
    private static final boolean[][] $VRc;

    public void <init>(com.zoffcc.applications.aagtl.aagtl, com.zoffcc.applications.aagtl.HTMLDownloader)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        com.zoffcc.applications.aagtl.HTMLDownloader r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        r2 := @parameter1: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r3 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.GeocacheCoordinate current_cache> = null;
        r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.HTMLDownloader downloader> = null;
        r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl> = r1;
        r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.HTMLDownloader downloader> = r2;
        r4[0] = 1;
        return;
    }

    public com.zoffcc.applications.aagtl.GeocacheCoordinate update_coordinate(com.zoffcc.applications.aagtl.GeocacheCoordinate)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r1, r4, r7;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r5, $r9;
        java.lang.String[] r6;
        java.lang.Throwable r8, $r18;
        com.zoffcc.applications.aagtl.aagtl $r10, $r12, $r14, $r16, $r19;
        com.zoffcc.applications.aagtl.PointProvider $r11, $r13, $r15, $r17, $r20;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = r1;
        r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.GeocacheCoordinate current_cache> = r4;
        $r9 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: java.lang.String __get_cache_page(java.lang.String)>($r9);
        r3[0] = 1;
        if r5 != null goto label1;

        r3[1] = 1;
        return null;

     label1:
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");
        r7 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.GeocacheCoordinate __parse_cache_page(java.lang.String[],com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r6, r1);
        r3[2] = 1;
        if r7 == null goto label8;

        $r10 = r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r11.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();

     label2:
        $r12 = r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r13.<com.zoffcc.applications.aagtl.PointProvider: void add_point_full(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r4);
        $r14 = r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r15 = $r14.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r15.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();

     label3:
        $r16 = r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r17 = $r16.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r17.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r3[3] = 1;
        goto label7;

     label4:
        $r18 := @caughtexception;

     label5:
        r8 = $r18;

     label6:
        $r19 = r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r20 = $r19.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r20.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r3[4] = 1;
        throw r8;

     label7:
        r3[5] = 1;
        goto label9;

     label8:
        r3[6] = 1;
        return null;

     label9:
        r3[7] = 1;
        return r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String __get_cache_page(java.lang.String)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String r1, $r6, $r7;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.HTMLDownloader $r4;
        java.lang.Object[] $r5;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r5 = newarray (java.lang.Object)[1];
        $r5[0] = r1;
        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("http://www.geocaching.com/seek/cache_details.aspx?wp=%s", $r5);
        $r7 = virtualinvoke $r4.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String getUrlData(java.lang.String)>($r6);
        r3[0] = 1;
        return $r7;
    }

    public static com.zoffcc.applications.aagtl.GeocacheCoordinate __parse_cache_page_print(java.lang.String, com.zoffcc.applications.aagtl.GeocacheCoordinate)
    {
        java.lang.String r0, r5, r6, r8, $r14, $r17, r18, $r24, $r27, $r29, $r31;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source r4, $r9;
        com.zoffcc.applications.aagtl.Coordinate r7;
        net.htmlparser.jericho.Element $r10, $r19, $r21, $r22, $r23;
        net.htmlparser.jericho.TextExtractor $r11, $r20;
        java.lang.StringBuilder $r12, $r13, $r15, $r16;
        null_type $n0;
        double $d0, $d1;
        java.util.HashMap $r25;
        java.lang.String[] $r26, $r28;
        java.lang.Object $r30;
        java.lang.Exception $r32, r33;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];

     label1:
        $r9 = new net.htmlparser.jericho.Source;
        specialinvoke $r9.<net.htmlparser.jericho.Source: void <init>(java.lang.CharSequence)>(r0);
        r4 = $r9;
        $r10 = virtualinvoke r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Element getFirstElement(java.lang.String,java.lang.String,boolean)>("id", "pageTitle", 0);
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.Element: net.htmlparser.jericho.TextExtractor getTextExtractor()>();
        r5 = virtualinvoke $r11.<net.htmlparser.jericho.TextExtractor: java.lang.String toString()>();
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
        $r14 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        r18 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r17, "");
        r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title> = r18;
        $r19 = virtualinvoke r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Element getFirstElement(java.lang.String,java.lang.String,boolean)>("class", "LatLong Meta", 0);
        $r20 = virtualinvoke $r19.<net.htmlparser.jericho.Element: net.htmlparser.jericho.TextExtractor getTextExtractor()>();
        r6 = virtualinvoke $r20.<net.htmlparser.jericho.TextExtractor: java.lang.String toString()>();
        r7 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: com.zoffcc.applications.aagtl.Coordinate parse_coord_string(java.lang.String)>(r6);
        r3[0] = 1;
        if r7 != null goto label3;

        $n0 = null;
        r3[1] = 1;

     label2:
        return $n0;

     label3:
        $d0 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat> = $d0;
        $d1 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon> = $d1;
        $r21 = virtualinvoke r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Element getFirstElement(java.lang.String,java.lang.String,boolean)>("id", "Content", 0);
        $r22 = virtualinvoke $r21.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element getFirstElement(java.lang.String)>("h2");
        $r23 = virtualinvoke $r22.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element getFirstElement(java.lang.String)>("img");
        $r24 = virtualinvoke $r23.<net.htmlparser.jericho.Element: java.lang.String getAttributeValue(java.lang.String)>("src");
        r8 = virtualinvoke $r24.<java.lang.String: java.lang.String toString()>();
        $r25 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap GC_TYPE_HASH>;
        $r26 = virtualinvoke r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");
        $r27 = $r26[3];
        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
        $r29 = $r28[0];
        $r30 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r29);
        $r31 = (java.lang.String) $r30;
        r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type> = $r31;
        r3[2] = 1;

     label4:
        goto label6;

     label5:
        $r32 := @caughtexception;
        r33 = $r32;
        virtualinvoke r33.<java.lang.Exception: void printStackTrace()>();
        r3[3] = 1;
        return null;

     label6:
        r3[4] = 1;
        return r1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public com.zoffcc.applications.aagtl.GeocacheCoordinate __parse_cache_page(java.lang.String[], com.zoffcc.applications.aagtl.GeocacheCoordinate)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String[] r1, r46, r47;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r16, $r22, r23, r24, $r30, r31, $r39, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60;
        java.lang.Boolean r15, $r17, $r25, $r32, $r34;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42;
        java.io.PrintStream $r18, $r26, $r33, $r35;
        java.lang.StringBuilder $r19, $r20, $r21, $r27, $r28, $r29, $r36, $r37, $r38;
        java.lang.Object[] $r40, $r41, $r42, $r43, $r44, $r45;
        double $d0, $d1, $d2;
        byte $b8;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String[];
        r2 := @parameter1: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r3 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[4];
        r5 = "";
        r6 = "";
        r7 = "XXXXXX";
        r8 = "";
        r9 = "";
        r10 = "";
        r11 = "";
        r12 = "";
        r13 = "";
        r14 = "";
        r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r16 = "";
        $r17 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z0 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $r18 = <java.lang.System: java.io.PrintStream out>;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lines=");
        $i1 = lengthof r1;
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22);
        r4[1] = 1;

     label1:
        i0 = 0;
        r4[2] = 1;

     label2:
        $i2 = lengthof r1;
        r4[3] = 1;
        if i0 >= $i2 goto label32;

        r23 = r1[i0];
        r24 = virtualinvoke r23.<java.lang.String: java.lang.String trim()>();
        $i3 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>(r7);
        r4[4] = 1;
        if $i3 == 0 goto label4;

        $r25 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z1 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();
        r4[5] = 1;
        if $z1 == 0 goto label3;

        $r26 = <java.lang.System: java.io.PrintStream out>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("##sec##=");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);
        r4[6] = 1;

     label3:
        r7 = r5;
        r4[7] = 1;

     label4:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("");
        r4[8] = 1;
        if $z2 == 0 goto label5;

        $z3 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("<div class=\"span-17 last");
        r4[9] = 1;
        if $z3 == 0 goto label5;

        r5 = "head";
        r4[10] = 1;
        goto label24;

     label5:
        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("head");
        r4[11] = 1;
        if $z4 == 0 goto label6;

        $z5 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("<span id=\"ctl00_ContentBody_ShortDescription\">");
        r4[12] = 1;
        if $z5 == 0 goto label6;

        r5 = "shortdesc";
        r4[13] = 1;
        goto label24;

     label6:
        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("head");
        r4[14] = 1;
        if $z6 != 0 goto label7;

        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("shortdesc");
        r4[15] = 1;
        if $z7 == 0 goto label8;

     label7:
        $z8 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("<span id=\"ctl00_ContentBody_LongDescription\">");
        r4[16] = 1;
        if $z8 == 0 goto label8;

        r5 = "desc";
        r4[17] = 1;
        goto label24;

     label8:
        $z9 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("desc");
        r4[18] = 1;
        if $z9 != 0 goto label9;

        $z10 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("shortdesc");
        r4[19] = 1;
        if $z10 == 0 goto label10;

     label9:
        $z11 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("Additional Hints");
        r4[20] = 1;
        if $z11 == 0 goto label10;

        r5 = "after-desc";
        r4[21] = 1;
        goto label24;

     label10:
        $z12 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("after-desc");
        r4[22] = 1;
        if $z12 == 0 goto label11;

        $z13 = virtualinvoke r24.<java.lang.String: boolean contains(java.lang.CharSequence)>("<div id=\"div_hint\"");
        r4[23] = 1;
        if $z13 == 0 goto label11;

        r5 = "hints";
        r4[24] = 1;
        goto label24;

     label11:
        $z14 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("<div id=\"ctl00_ContentBody_uxStatusInformation\"");
        r4[25] = 1;
        if $z14 == 0 goto label12;

        r6 = "status-found-1";
        r4[26] = 1;
        goto label24;

     label12:
        $z15 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("status-found-1");
        r4[27] = 1;
        if $z15 == 0 goto label14;

        $z16 = virtualinvoke r24.<java.lang.String: boolean contains(java.lang.CharSequence)>("id=\"ctl00_ContentBody_hlFoundItLog\"");
        r4[28] = 1;
        if $z16 == 0 goto label14;

        r31 = "status-found-2";
        $r32 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z17 = virtualinvoke $r32.<java.lang.Boolean: boolean booleanValue()>();
        r4[29] = 1;
        if $z17 == 0 goto label13;

        $r33 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("-- found it --");
        r4[30] = 1;

     label13:
        r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r6 = "";
        r4[31] = 1;
        goto label24;

     label14:
        $z18 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("hints");
        r4[32] = 1;
        if $z18 == 0 goto label15;

        $z19 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("<div id=\'dk\'");
        r4[33] = 1;
        if $z19 == 0 goto label15;

        r5 = "after-hints";
        r4[34] = 1;
        goto label24;

     label15:
        $z20 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("after-hints");
        r4[35] = 1;
        if $z20 != 0 goto label16;

        $z21 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("after-desc");
        r4[36] = 1;
        if $z21 == 0 goto label17;

     label16:
        $z22 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("<div class=\"CacheDetailNavigationWidget\">");
        r4[37] = 1;
        if $z22 == 0 goto label17;

        r5 = "pre-waypoints";
        r4[38] = 1;
        goto label24;

     label17:
        $z23 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("after-hints");
        r4[39] = 1;
        if $z23 != 0 goto label18;

        $z24 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("pre-waypoints");
        r4[40] = 1;
        if $z24 == 0 goto label19;

     label18:
        $z25 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("<table class=\"Table\" id=\"ctl00_ContentBody_Waypoints\">");
        r4[41] = 1;
        if $z25 == 0 goto label19;

        r5 = "waypoints";
        r4[42] = 1;
        goto label24;

     label19:
        $z26 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("waypoints");
        r4[43] = 1;
        if $z26 == 0 goto label20;

        $z27 = virtualinvoke r24.<java.lang.String: boolean contains(java.lang.CharSequence)>("</tbody> </table>");
        r4[44] = 1;
        if $z27 == 0 goto label20;

        r5 = "after-waypoints";
        r4[45] = 1;
        goto label24;

     label20:
        $z28 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("pre-waypoints");
        r4[46] = 1;
        if $z28 != 0 goto label21;

        $z29 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("after-waypoints");
        r4[47] = 1;
        if $z29 == 0 goto label22;

     label21:
        $z30 = virtualinvoke r24.<java.lang.String: boolean startsWith(java.lang.String)>("<span id=\"ctl00_ContentBody_Images\">");
        r4[48] = 1;
        if $z30 == 0 goto label22;

        r5 = "images";
        r4[49] = 1;
        goto label24;

     label22:
        $z31 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("images");
        r4[50] = 1;
        if $z31 != 0 goto label23;

        $z32 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("after-waypoints");
        r4[51] = 1;
        if $z32 != 0 goto label23;

        $z33 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("pre-waypoints");
        r4[52] = 1;
        if $z33 == 0 goto label24;

     label23:
        $z34 = virtualinvoke r24.<java.lang.String: boolean contains(java.lang.CharSequence)>("initalLogs = {");
        r4[53] = 1;
        if $z34 == 0 goto label24;

        r5 = "logs";
        r13 = r24;
        $r34 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z35 = virtualinvoke $r34.<java.lang.Boolean: boolean booleanValue()>();
        r4[54] = 1;
        if $z35 == 0 goto label24;

        $r35 = <java.lang.System: java.io.PrintStream out>;
        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logline=");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r39);
        r4[55] = 1;

     label24:
        $z36 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("logs");
        r4[56] = 1;
        if $z36 == 0 goto label25;

        r4[57] = 1;
        goto label32;

     label25:
        $z37 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("head");
        r4[58] = 1;
        if $z37 == 0 goto label26;

        $r40 = newarray (java.lang.Object)[2];
        $r40[0] = r14;
        $r40[1] = r24;
        r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s\n", $r40);
        r4[59] = 1;
        goto label31;

     label26:
        $z38 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("shortdesc");
        r4[60] = 1;
        if $z38 == 0 goto label27;

        $r41 = newarray (java.lang.Object)[2];
        $r41[0] = r8;
        $r41[1] = r24;
        r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s\n", $r41);
        r4[61] = 1;
        goto label31;

     label27:
        $z39 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("desc");
        r4[62] = 1;
        if $z39 == 0 goto label28;

        $r42 = newarray (java.lang.Object)[2];
        $r42[0] = r9;
        $r42[1] = r24;
        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s\n", $r42);
        r4[63] = 1;
        goto label31;

     label28:
        $z40 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("hints");
        r4[64] = 1;
        if $z40 == 0 goto label29;

        $r43 = newarray (java.lang.Object)[2];
        $r43[0] = r10;
        $r43[1] = r24;
        r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s\n", $r43);
        r4[65] = 1;
        goto label31;

     label29:
        $z41 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("waypoints");
        r4[66] = 1;
        if $z41 == 0 goto label30;

        $r44 = newarray (java.lang.Object)[2];
        $r44[0] = r11;
        $r44[1] = r24;
        r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s\n", $r44);
        r4[67] = 1;
        goto label31;

     label30:
        $z42 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("images");
        r4[68] = 1;
        if $z42 == 0 goto label31;

        $r45 = newarray (java.lang.Object)[2];
        $r45[0] = r12;
        $r45[1] = r24;
        r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s\n", $r45);
        r4[69] = 1;

     label31:
        i0 = i0 + 1;
        r4[70] = 1;
        goto label2;

     label32:
        r46 = newarray (java.lang.String)[7];
        r47 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: java.lang.String[] __parse_head(java.lang.String)>(r14);
        $r48 = r47[0];
        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r48);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int size> = $i4;
        $r49 = r47[1];
        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r49);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int difficulty> = $i5;
        $r50 = r47[2];
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r50);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int terrain> = $i6;
        $r51 = r47[3];
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String owner> = $r51;
        $r52 = r47[4];
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r52);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat> = $d0;
        $r53 = r47[5];
        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r53);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon> = $d1;
        $r54 = r47[6];
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type> = $r54;
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String shortdesc> = r8;
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc> = r9;
        $r55 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: java.lang.String __treat_hints(java.lang.String)>(r10);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String hints> = $r55;
        $r56 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: java.lang.String __treat_logs(java.lang.String)>(r13);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String logs> = $r56;
        $r57 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: java.lang.String __get_guid(java.lang.String)>(r14);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String guid> = $r57;
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = r15;
        $r58 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: java.lang.String __treat_waypoints(java.lang.String)>(r11);
        r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String waypoints> = $r58;
        $r59 = r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String guid>;
        r4[71] = 1;
        if $r59 != null goto label33;

        $r60 = r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String owner>;
        $i7 = virtualinvoke $r60.<java.lang.String: int compareTo(java.lang.String)>("dummy");
        r4[72] = 1;
        if $i7 != 0 goto label33;

        $d2 = r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat>;
        $b8 = $d2 cmpl 0.0;
        r4[73] = 1;
        if $b8 != 0 goto label33;

        r4[74] = 1;
        return null;

     label33:
        r4[75] = 1;
        return r2;
    }

    public java.lang.String _strip_html(java.lang.String)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String r1, $r4;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = staticinvoke <com.zoffcc.applications.aagtl.HtmlToText: java.lang.String htmlToPlainText(java.lang.String)>(r1);
        r3[0] = 1;
        return $r4;
    }

    public java.lang.String __treat_waypoints(java.lang.String)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String r1, r4, $r10, r11, r12, r13, r14, $r20;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Boolean $r5, $r15;
        boolean $z0, $z1;
        java.io.PrintStream $r6, $r16;
        java.lang.StringBuilder $r7, $r8, $r9, $r17, $r18, $r19;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r4 = r1;
        $r5 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("way1=");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);
        r3[1] = 1;

     label1:
        r11 = virtualinvoke r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<tr>", "<br><tr>");
        r12 = virtualinvoke r11.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<tr ", "<br><tr ");
        r13 = staticinvoke <com.zoffcc.applications.aagtl.HtmlToText: java.lang.String htmlToPlainText(java.lang.String)>(r12);
        r14 = virtualinvoke r13.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "<br><br>");
        $r15 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z1 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();
        r3[2] = 1;
        if $z1 == 0 goto label2;

        $r16 = <java.lang.System: java.io.PrintStream out>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("way2=");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return r14;
    }

    public java.lang.String __treat_hints(java.lang.String)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String r1, r4, r5, $r9, r11;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r10;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r4 = r1;
        r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: java.lang.String _strip_html(java.lang.String)>(r4);
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n<br>\n<br>");
        $r9 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CacheDownloader: java.lang.String convert_rot13(java.lang.String)>(r5);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[0] = 1;
        return r11;
    }

    public java.lang.String __treat_logs(java.lang.String)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String r1, r4, r5, r6, r7, r8;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        r4 = r1;
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<img src=\"[^>]*icon_smile.gif[^>]*>", "\n<br><br>* FOUND *\n\n<br><br>");
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<img src=\"[^>]*icon_sad.gif[^>]*>", "\n<br><br># NOT FOUND #\n\n<br><br>");
        r7 = staticinvoke <com.zoffcc.applications.aagtl.HtmlToText: java.lang.String htmlToPlainText(java.lang.String)>(r6);
        r8 = virtualinvoke r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "<br>");
        r3[0] = 1;
        return r8;
    }

    public java.lang.String convert_rot13(java.lang.String)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String r1, $r7;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuffer r4, $r5;
        boolean z0;
        int i0, $i2, $i4, i5, $i6, $i7, $i8, $i9, i10;
        char c1, c3, $c11;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        r4 = $r5;
        z0 = 0;
        i0 = 0;
        r3[0] = 1;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if i0 >= $i2 goto label4;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
        c1 = c3 & 32;
        $i4 = c1 ^ -1;
        i5 = c3 & $i4;
        r3[2] = 1;
        if i5 < 65 goto label2;

        r3[3] = 1;
        if i5 > 90 goto label2;

        $i6 = i5 - 65;
        $i7 = $i6 + 13;
        $i8 = $i7 % 26;
        $i9 = $i8 + 65;
        r3[4] = 1;
        goto label3;

     label2:
        $i9 = i5;
        r3[5] = 1;

     label3:
        i10 = $i9 | c1;
        $c11 = (char) i10;
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c11);
        i0 = i0 + 1;
        r3[6] = 1;
        goto label1;

     label4:
        $r7 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
        r3[7] = 1;
        return $r7;
    }

    public java.lang.String __get_guid(java.lang.String)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        java.util.regex.Pattern r5;
        java.util.regex.Matcher r6;
        java.lang.Boolean r7;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        r4 = "";
        r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".*guid=([a-z0-9-]+)\"");
        r6 = virtualinvoke r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z0 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>();
        r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);
        $z1 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z1 != 0 goto label1;

        r3[1] = 1;
        return null;

     label1:
        $i0 = virtualinvoke r6.<java.util.regex.Matcher: int groupCount()>();
        r3[2] = 1;
        if $i0 <= 0 goto label2;

        r4 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return r4;
    }

    public java.lang.String[] __parse_head(java.lang.String)
    {
        com.zoffcc.applications.aagtl.CacheDownloader r0;
        java.lang.String r1, r5, r9, r10, r11, r12, r13, r14, r15, r22, $r28, $r32, $r33, $r34, $r40, $r45, $r52, $r57, $r64, r65, r66, $r77, $r83, $r89;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4;
        java.util.regex.Pattern r6, r16, r29, r41, r53;
        java.util.regex.Matcher r7, r17, r30, r42, r54;
        java.lang.Boolean r8, r18, $r23, r31, $r35, r43, $r47, r55, $r59, $r78, $r84;
        android.os.Message r19;
        android.os.Bundle r20, $r69;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, $z16;
        java.io.PrintStream $r21, $r24, $r36, $r48, $r60, $r72, $r73, $r79, $r85;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.StringBuilder $r25, $r26, $r27, $r37, $r38, $r39, $r49, $r50, $r51, $r61, $r62, $r63, $r74, $r75, $r76, $r80, $r81, $r82, $r86, $r87, $r88;
        java.lang.Object[] $r44, $r56;
        double $d0, $d1, $d2, $d3;
        java.lang.Double $r46, $r58;
        com.zoffcc.applications.aagtl.aagtl $r67, $r70;
        android.os.Handler $r68, $r71;

        r0 := @this: com.zoffcc.applications.aagtl.CacheDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        r4 = newarray (java.lang.String)[7];
        r5 = "";
        r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<img src=\"/images/icons/container/([^\\.]+)\\.gif\" alt=\"Size:");
        r7 = virtualinvoke r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z0 = virtualinvoke r7.<java.util.regex.Matcher: boolean find()>();
        r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);
        r9 = "5";
        r10 = "0.0";
        r11 = "0.0";
        r12 = "1";
        r13 = "1";
        r14 = "regular";
        r15 = "dummy";
        $z1 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z1 != 0 goto label1;

        r4[0] = r9;
        r4[1] = r12;
        r4[2] = r13;
        r4[3] = r15;
        r4[4] = r10;
        r4[5] = r11;
        $r21 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("__parse_head: problem -> no data!");
        r3[1] = 1;
        return r4;

     label1:
        $i0 = virtualinvoke r7.<java.util.regex.Matcher: int groupCount()>();
        r3[2] = 1;
        if $i0 <= 0 goto label9;

        r22 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $i1 = virtualinvoke r22.<java.lang.String: int compareTo(java.lang.String)>("micro");
        r3[3] = 1;
        if $i1 != 0 goto label2;

        r9 = "1";
        r3[4] = 1;
        goto label8;

     label2:
        $i2 = virtualinvoke r22.<java.lang.String: int compareTo(java.lang.String)>("small");
        r3[5] = 1;
        if $i2 != 0 goto label3;

        r9 = "2";
        r3[6] = 1;
        goto label8;

     label3:
        $i3 = virtualinvoke r22.<java.lang.String: int compareTo(java.lang.String)>("regular");
        r3[7] = 1;
        if $i3 != 0 goto label4;

        r9 = "3";
        r3[8] = 1;
        goto label8;

     label4:
        $i4 = virtualinvoke r22.<java.lang.String: int compareTo(java.lang.String)>("large");
        r3[9] = 1;
        if $i4 == 0 goto label5;

        $i5 = virtualinvoke r22.<java.lang.String: int compareTo(java.lang.String)>("big");
        r3[10] = 1;
        if $i5 != 0 goto label6;

     label5:
        r9 = "4";
        r3[11] = 1;
        goto label8;

     label6:
        $i6 = virtualinvoke r22.<java.lang.String: int compareTo(java.lang.String)>("not_chosen");
        r3[12] = 1;
        if $i6 == 0 goto label7;

        $i7 = virtualinvoke r22.<java.lang.String: int compareTo(java.lang.String)>("other");
        r3[13] = 1;
        if $i7 != 0 goto label8;

     label7:
        r9 = "5";
        r3[14] = 1;

     label8:
        $r23 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z2 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();
        r3[15] = 1;
        if $z2 == 0 goto label9;

        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size=");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);
        r3[16] = 1;

     label9:
        r29 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<img src=\"/images/WptTypes/.*\\.gif\" alt=\"([^\"]*)\"");
        r30 = virtualinvoke r29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z3 = virtualinvoke r30.<java.util.regex.Matcher: boolean find()>();
        r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);
        $z4 = virtualinvoke r31.<java.lang.Boolean: boolean booleanValue()>();
        r3[17] = 1;
        if $z4 == 0 goto label14;

        $i8 = virtualinvoke r30.<java.util.regex.Matcher: int groupCount()>();
        r3[18] = 1;
        if $i8 <= 0 goto label14;

        $r32 = virtualinvoke r30.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $i9 = virtualinvoke $r32.<java.lang.String: int compareTo(java.lang.String)>("Traditional Cache");
        r3[19] = 1;
        if $i9 != 0 goto label10;

        r14 = "regular";
        r3[20] = 1;
        goto label13;

     label10:
        $r33 = virtualinvoke r30.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $i10 = virtualinvoke $r33.<java.lang.String: int compareTo(java.lang.String)>("Multi-cache");
        r3[21] = 1;
        if $i10 != 0 goto label11;

        r14 = "multi";
        r3[22] = 1;
        goto label13;

     label11:
        $r34 = virtualinvoke r30.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $i11 = virtualinvoke $r34.<java.lang.String: int compareTo(java.lang.String)>("Unknown Cache");
        r3[23] = 1;
        if $i11 != 0 goto label12;

        r14 = "mystery";
        r3[24] = 1;
        goto label13;

     label12:
        r14 = "unknown";
        r3[25] = 1;

     label13:
        $r35 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z5 = virtualinvoke $r35.<java.lang.Boolean: boolean booleanValue()>();
        r3[26] = 1;
        if $z5 == 0 goto label14;

        $r36 = <java.lang.System: java.io.PrintStream out>;
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r40);
        r3[27] = 1;

     label14:
        r41 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?s)uxLegendScale\"[^>]*?><img src=\"http://www.geocaching.com/images/stars/stars[0-9_]+\\.gif\" alt=\"([0-9.]+) out");
        r42 = virtualinvoke r41.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z6 = virtualinvoke r42.<java.util.regex.Matcher: boolean find()>();
        r43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);
        $z7 = virtualinvoke r43.<java.lang.Boolean: boolean booleanValue()>();
        r3[28] = 1;
        if $z7 == 0 goto label15;

        $i12 = virtualinvoke r42.<java.util.regex.Matcher: int groupCount()>();
        r3[29] = 1;
        if $i12 <= 0 goto label15;

        $r44 = newarray (java.lang.Object)[1];
        $r45 = virtualinvoke r42.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r45);
        $d1 = $d0 * 10.0;
        $r46 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        $r44[0] = $r46;
        r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r44);
        $r47 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z8 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();
        r3[30] = 1;
        if $z8 == 0 goto label15;

        $r48 = <java.lang.System: java.io.PrintStream out>;
        $r49 = new java.lang.StringBuilder;
        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("diff=");
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r52);
        r3[31] = 1;

     label15:
        r53 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?s)ContentBody_Localize6\"[^>]*?><img src=\"http://www.geocaching.com/images/stars/stars[0-9_]+\\.gif\" alt=\"([0-9.]+) out");
        r54 = virtualinvoke r53.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z9 = virtualinvoke r54.<java.util.regex.Matcher: boolean find()>();
        r55 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);
        $z10 = virtualinvoke r55.<java.lang.Boolean: boolean booleanValue()>();
        r3[32] = 1;
        if $z10 == 0 goto label16;

        $i13 = virtualinvoke r54.<java.util.regex.Matcher: int groupCount()>();
        r3[33] = 1;
        if $i13 <= 0 goto label16;

        $r56 = newarray (java.lang.Object)[1];
        $r57 = virtualinvoke r54.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r57);
        $d3 = $d2 * 10.0;
        $r58 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);
        $r56[0] = $r58;
        r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r56);
        $r59 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z11 = virtualinvoke $r59.<java.lang.Boolean: boolean booleanValue()>();
        r3[34] = 1;
        if $z11 == 0 goto label16;

        $r60 = <java.lang.System: java.io.PrintStream out>;
        $r61 = new java.lang.StringBuilder;
        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terr=");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>($r64);
        r3[35] = 1;

     label16:
        r16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("lat=([0-9.-]+)&amp;lon=([0-9.-]+)&amp;");
        r17 = virtualinvoke r16.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z12 = virtualinvoke r17.<java.util.regex.Matcher: boolean find()>();
        r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12);
        $z13 = virtualinvoke r18.<java.lang.Boolean: boolean booleanValue()>();
        r3[36] = 1;
        if $z13 != 0 goto label17;

        r65 = "0.0";
        r66 = "0.0";
        r4[0] = r9;
        r4[1] = r12;
        r4[2] = r13;
        r4[3] = r15;
        r4[4] = r65;
        r4[5] = r66;
        $r67 = r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r68 = $r67.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler toast_handler>;
        r19 = virtualinvoke $r68.<android.os.Handler: android.os.Message obtainMessage()>();
        $r69 = new android.os.Bundle;
        specialinvoke $r69.<android.os.Bundle: void <init>()>();
        r20 = $r69;
        virtualinvoke r20.<android.os.Bundle: void putInt(java.lang.String,int)>("command", 1);
        virtualinvoke r20.<android.os.Bundle: void putInt(java.lang.String,int)>("duration", 1);
        virtualinvoke r20.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("text", "problem downloading cache\n\nplease check username/password!!\n\nor maybe network error");
        virtualinvoke r19.<android.os.Message: void setData(android.os.Bundle)>(r20);
        $r70 = r0.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r71 = $r70.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler toast_handler>;
        virtualinvoke $r71.<android.os.Handler: boolean sendMessage(android.os.Message)>(r19);
        $r72 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>("__parse_head: problem parsing lat,lon -> 0.0 0.0 !");
        $r73 = <java.lang.System: java.io.PrintStream out>;
        $r74 = new java.lang.StringBuilder;
        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();
        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r77);
        r3[37] = 1;
        return r4;

     label17:
        $i14 = virtualinvoke r17.<java.util.regex.Matcher: int groupCount()>();
        r3[38] = 1;
        if $i14 <= 1 goto label18;

        r10 = virtualinvoke r17.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        r11 = virtualinvoke r17.<java.util.regex.Matcher: java.lang.String group(int)>(2);
        r3[39] = 1;

     label18:
        r4[0] = r9;
        r4[1] = r12;
        r4[2] = r13;
        r4[3] = r15;
        r4[4] = r10;
        r4[5] = r11;
        r4[6] = r14;
        $r78 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z15 = virtualinvoke $r78.<java.lang.Boolean: boolean booleanValue()>();
        r3[40] = 1;
        if $z15 == 0 goto label19;

        $r79 = <java.lang.System: java.io.PrintStream out>;
        $r80 = new java.lang.StringBuilder;
        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lat=");
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r83);
        r3[41] = 1;

     label19:
        $r84 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z16 = virtualinvoke $r84.<java.lang.Boolean: boolean booleanValue()>();
        r3[42] = 1;
        if $z16 == 0 goto label20;

        $r85 = <java.lang.System: java.io.PrintStream out>;
        $r86 = new java.lang.StringBuilder;
        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();
        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lon=");
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r89);
        r3[43] = 1;

     label20:
        r3[44] = 1;
        return r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Boolean $r2, $r3;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRi()>();
        r1 = $r0[12];
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_> = $r2;
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG2_> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = newmultiarray (boolean)[13][];
        <com.zoffcc.applications.aagtl.CacheDownloader: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[76];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[5];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[8];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[45];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/CacheDownloader", -2952522917658031342L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.ClientHttpRequest extends java.lang.Object
{
    java.net.URLConnection connection;
    java.io.OutputStream os;
    java.util.Map cookies;
    private static java.util.Random random;
    java.lang.String boundary;
    private static final boolean[][] $VRc;

    protected void connect() throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.OutputStream $r3, $r5;
        java.net.URLConnection $r4;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        $r1 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        $r3 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.OutputStream os>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.net.URLConnection connection>;
        $r5 = virtualinvoke $r4.<java.net.URLConnection: java.io.OutputStream getOutputStream()>();
        r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.OutputStream os> = $r5;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    protected void write(char) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        char c0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;
        java.io.OutputStream $r4;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        c0 := @parameter0: char;
        $r1 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void connect()>();
        $r3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r3.<java.io.PrintStream: void println(char)>(c0);
        $r4 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.OutputStream os>;
        virtualinvoke $r4.<java.io.OutputStream: void write(int)>(c0);
        r2[0] = 1;
        return;
    }

    protected void write(java.lang.String) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.PrintStream $r4;
        byte[] $r5, $r7;
        java.io.OutputStream $r6;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void connect()>();
        $r4 = <java.lang.System: java.io.PrintStream out>;
        $r5 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();
        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.Object)>($r5);
        $r6 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.OutputStream os>;
        $r7 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();
        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r7);
        r3[0] = 1;
        return;
    }

    protected void newline() throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.PrintStream $r3;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        $r1 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void connect()>();
        $r3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\r\n");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>("\r\n");
        r2[0] = 1;
        return;
    }

    protected void writeln(java.lang.String) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.PrintStream $r4;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void connect()>();
        $r4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>(r1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void newline()>();
        r3[0] = 1;
        return;
    }

    protected static java.lang.String randomString()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.Random $r2;
        long $l0;
        java.lang.String $r3;

        $r0 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: java.util.Random random>;
        $l0 = virtualinvoke $r2.<java.util.Random: long nextLong()>();
        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l0, 36);
        r1[0] = 1;
        return $r3;
    }

    private void boundary() throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        $r1 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>("--");
        $r3 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.lang.String boundary>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>($r3);
        r2[0] = 1;
        return;
    }

    public void <init>(java.net.URLConnection) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.net.URLConnection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.HashMap $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r12, $r14, $r15, $r17;
        java.lang.String $r7, $r9, $r11, $r13, $r16, $r18;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.net.URLConnection;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.OutputStream os> = null;
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.util.Map cookies> = $r4;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("---------------------------");
        $r7 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: java.lang.String randomString()>();
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: java.lang.String randomString()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: java.lang.String randomString()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.lang.String boundary> = $r13;
        r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.net.URLConnection connection> = r1;
        virtualinvoke r1.<java.net.URLConnection: void setDoOutput(boolean)>(1);
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/form-data; boundary=");
        $r16 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.lang.String boundary>;
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r18);
        r3[0] = 1;
        return;
    }

    public void <init>(java.net.URL) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.net.URL r1;
        boolean[][] $r2;
        boolean[] r3;
        java.net.URLConnection $r4;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.net.URL;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        $r4 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();
        specialinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URLConnection)>($r4);
        r3[0] = 1;
        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.net.URL $r4;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $r4 = new java.net.URL;
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>(r1);
        specialinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>($r4);
        r3[0] = 1;
        return;
    }

    private void postCookies()
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuffer r3, $r6;
        java.util.Iterator r4;
        java.util.Map$Entry r5, $r10;
        java.util.Map $r7;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.Object $r9, $r12, $r16;
        java.lang.StringBuilder $r11, $r14, $r15, $r17;
        java.lang.String $r13, $r18, $r22;
        int $i0;
        java.net.URLConnection $r21;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        $r1 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        r3 = $r6;
        $r7 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.util.Map cookies>;
        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $r10 = (java.util.Map$Entry) $r9;
        r5 = (java.util.Map$Entry) $r10;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[2] = 1;
        if $z1 == 0 goto label2;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");
        r2[3] = 1;

     label2:
        r2[4] = 1;
        goto label1;

     label3:
        $i0 = virtualinvoke r3.<java.lang.StringBuffer: int length()>();
        r2[5] = 1;
        if $i0 <= 0 goto label4;

        $r21 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.net.URLConnection connection>;
        $r22 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r21.<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cookie", $r22);
        r2[6] = 1;

     label4:
        r2[7] = 1;
        return;
    }

    public void setCookie(java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        java.util.Map $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[11];
        $r5 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.util.Map cookies>;
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        specialinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void postCookies()>();
        r4[0] = 1;
        return;
    }

    public void setCookies(java.util.Map) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.util.Map r1, $r4;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.util.Map;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        r3[0] = 1;
        if r1 != null goto label1;

        r3[1] = 1;
        return;

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.util.Map cookies>;
        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>(r1);
        r3[2] = 1;
        return;
    }

    public void setCookies(java.lang.String[]) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String[] r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3;
        java.lang.String $r4, $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String[];
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        r3[0] = 1;
        if r1 != null goto label1;

        r3[1] = 1;
        return;

     label1:
        i0 = 0;
        r3[2] = 1;

     label2:
        $i1 = lengthof r1;
        $i2 = $i1 - 1;
        r3[3] = 1;
        if i0 >= $i2 goto label3;

        $r4 = r1[i0];
        $i3 = i0 + 1;
        $r5 = r1[$i3];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setCookie(java.lang.String,java.lang.String)>($r4, $r5);
        i0 = i0 + 2;
        r3[4] = 1;
        goto label2;

     label3:
        r3[5] = 1;
        return;
    }

    private void writeName(java.lang.String) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void newline()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>("Content-Disposition: form-data; name=\"");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>(r1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(char)>(34);
        r3[0] = 1;
        return;
    }

    public void setParameter(java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[15];
        specialinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void boundary()>();
        specialinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void writeName(java.lang.String)>(r1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void newline()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void newline()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void writeln(java.lang.String)>(r2);
        r4[0] = 1;
        return;
    }

    private static void pipe(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream r0, r5;
        java.io.OutputStream r1;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4;
        int i0, i1, $i2, $i3;
        java.lang.Throwable r6, $r8;
        null_type n0;

        r0 := @parameter0: java.io.InputStream;
        r1 := @parameter1: java.io.OutputStream;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        r4 = newarray (byte)[500000];
        i0 = 0;
        r5 = r0;
        entermonitor r0;
        r3[0] = 1;

     label1:
        $i2 = lengthof r4;
        $i3 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r4, 0, $i2);
        i1 = $i3;
        r3[1] = 1;
        if $i3 < 0 goto label2;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r4, 0, i1);
        i0 = i0 + i1;
        r3[2] = 1;
        goto label1;

     label2:
        exitmonitor r5;
        r3[3] = 1;

     label3:
        goto label7;

     label4:
        $r8 := @caughtexception;

     label5:
        r6 = $r8;
        exitmonitor r5;

     label6:
        r3[4] = 1;
        throw r6;

     label7:
        virtualinvoke r1.<java.io.OutputStream: void flush()>();
        n0 = null;
        r3[5] = 1;
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setParameter(java.lang.String, java.lang.String, java.io.InputStream) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1, r2, r6;
        java.io.InputStream r3;
        boolean[][] $r4;
        boolean[] r5;
        java.io.OutputStream $r8;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.io.InputStream;
        $r4 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r5 = $r4[17];
        specialinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void boundary()>();
        specialinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void writeName(java.lang.String)>(r1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>("; filename=\"");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>(r2);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(char)>(34);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void newline()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void write(java.lang.String)>("Content-Type: ");
        r6 = staticinvoke <java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>(r2);
        r5[0] = 1;
        if r6 != null goto label1;

        r6 = "application/octet-stream";
        r5[1] = 1;

     label1:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void writeln(java.lang.String)>(r6);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void newline()>();
        $r8 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.OutputStream os>;
        staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: void pipe(java.io.InputStream,java.io.OutputStream)>(r3, $r8);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void newline()>();
        r5[2] = 1;
        return;
    }

    public void setParameter(java.lang.String, java.io.File) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1, $r6;
        java.io.File r2;
        boolean[][] $r3;
        boolean[] r4;
        java.io.FileInputStream $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.io.File;
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[18];
        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();
        $r5 = new java.io.FileInputStream;
        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r2);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.String,java.io.InputStream)>(r1, $r6, $r5);
        r4[0] = 1;
        return;
    }

    public void setParameter(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1, $r6;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0;
        java.io.File $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[19];
        $z0 = r2 instanceof java.io.File;
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $r5 = (java.io.File) r2;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.io.File)>(r1, $r5);
        r4[1] = 1;
        goto label2;

     label1:
        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.String)>(r1, $r6);
        r4[2] = 1;

     label2:
        r4[3] = 1;
        return;
    }

    public void setParameters(java.util.Map) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.util.Map r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r8, $r10;
        java.lang.String $r9;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.util.Map;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[20];
        r3[0] = 1;
        if r1 != null goto label1;

        r3[1] = 1;
        return;

     label1:
        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
        r3[2] = 1;

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[3] = 1;
        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r7;
        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();
        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.Object)>($r9, $r10);
        r3[4] = 1;
        goto label2;

     label3:
        r3[5] = 1;
        return;
    }

    public void setParameters(java.lang.Object[]) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.Object[] r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3;
        java.lang.Object $r4, $r6;
        java.lang.String $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.Object[];
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[21];
        r3[0] = 1;
        if r1 != null goto label1;

        r3[1] = 1;
        return;

     label1:
        i0 = 0;
        r3[2] = 1;

     label2:
        $i1 = lengthof r1;
        $i2 = $i1 - 1;
        r3[3] = 1;
        if i0 >= $i2 goto label3;

        $r4 = r1[i0];
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        $i3 = i0 + 1;
        $r6 = r1[$i3];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.Object)>($r5, $r6);
        i0 = i0 + 2;
        r3[4] = 1;
        goto label2;

     label3:
        r3[5] = 1;
        return;
    }

    public java.io.InputStream post() throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.OutputStream $r3;
        java.net.URLConnection $r4;
        java.io.InputStream $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        $r1 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        specialinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void boundary()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void writeln(java.lang.String)>("--");
        $r3 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.OutputStream os>;
        virtualinvoke $r3.<java.io.OutputStream: void close()>();
        $r4 = r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.net.URLConnection connection>;
        $r5 = virtualinvoke $r4.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        r2[0] = 1;
        return $r5;
    }

    public java.io.InputStream post(java.util.Map) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.util.Map r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.InputStream $r4;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.util.Map;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameters(java.util.Map)>(r1);
        $r4 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post()>();
        r3[0] = 1;
        return $r4;
    }

    public java.io.InputStream post(java.lang.Object[]) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.Object[] r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.InputStream $r4;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.Object[];
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[24];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameters(java.lang.Object[])>(r1);
        $r4 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post()>();
        r3[0] = 1;
        return $r4;
    }

    public java.io.InputStream post(java.util.Map, java.util.Map) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.util.Map r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        java.io.InputStream $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.util.Map;
        r2 := @parameter1: java.util.Map;
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[25];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setCookies(java.util.Map)>(r1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameters(java.util.Map)>(r2);
        $r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post()>();
        r4[0] = 1;
        return $r5;
    }

    public java.io.InputStream post(java.lang.String[], java.lang.Object[]) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String[] r1;
        java.lang.Object[] r2;
        boolean[][] $r3;
        boolean[] r4;
        java.io.InputStream $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String[];
        r2 := @parameter1: java.lang.Object[];
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[26];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setCookies(java.lang.String[])>(r1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameters(java.lang.Object[])>(r2);
        $r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post()>();
        r4[0] = 1;
        return $r5;
    }

    public java.io.InputStream post(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        java.io.InputStream $r5;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[27];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.Object)>(r1, r2);
        $r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post()>();
        r4[0] = 1;
        return $r5;
    }

    public java.io.InputStream post(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1, r3;
        java.lang.Object r2, r4;
        boolean[][] $r5;
        boolean[] r6;
        java.io.InputStream $r7;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object;
        $r5 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r6 = $r5[28];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.Object)>(r1, r2);
        $r7 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.String,java.lang.Object)>(r3, r4);
        r6[0] = 1;
        return $r7;
    }

    public java.io.InputStream post(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1, r3, r5;
        java.lang.Object r2, r4, r6;
        boolean[][] $r7;
        boolean[] r8;
        java.io.InputStream $r9;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object;
        r5 := @parameter4: java.lang.String;
        r6 := @parameter5: java.lang.Object;
        $r7 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r7 != null goto label0;

        $r7 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r8 = $r7[29];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.Object)>(r1, r2);
        $r9 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)>(r3, r4, r5, r6);
        r8[0] = 1;
        return $r9;
    }

    public java.io.InputStream post(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.ClientHttpRequest r0;
        java.lang.String r1, r3, r5, r7;
        java.lang.Object r2, r4, r6, r8;
        boolean[][] $r9;
        boolean[] r10;
        java.io.InputStream $r11;

        r0 := @this: com.zoffcc.applications.aagtl.ClientHttpRequest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.Object;
        r5 := @parameter4: java.lang.String;
        r6 := @parameter5: java.lang.Object;
        r7 := @parameter6: java.lang.String;
        r8 := @parameter7: java.lang.Object;
        $r9 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r9 != null goto label0;

        $r9 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r10 = $r9[30];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.Object)>(r1, r2);
        $r11 = virtualinvoke r0.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)>(r3, r4, r5, r6, r7, r8);
        r10[0] = 1;
        return $r11;
    }

    public static java.io.InputStream post(java.net.URL, java.util.Map) throws java.io.IOException
    {
        java.net.URL r0;
        java.util.Map r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r4;
        java.io.InputStream $r5;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.util.Map;
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[31];
        $r4 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        specialinvoke $r4.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>(r0);
        $r5 = virtualinvoke $r4.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.util.Map)>(r1);
        r3[0] = 1;
        return $r5;
    }

    public static java.io.InputStream post(java.net.URL, java.lang.Object[]) throws java.io.IOException
    {
        java.net.URL r0;
        java.lang.Object[] r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r4;
        java.io.InputStream $r5;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.lang.Object[];
        $r2 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[32];
        $r4 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        specialinvoke $r4.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>(r0);
        $r5 = virtualinvoke $r4.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.Object[])>(r1);
        r3[0] = 1;
        return $r5;
    }

    public static java.io.InputStream post(java.net.URL, java.util.Map, java.util.Map) throws java.io.IOException
    {
        java.net.URL r0;
        java.util.Map r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r5;
        java.io.InputStream $r6;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.util.Map;
        r2 := @parameter2: java.util.Map;
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[33];
        $r5 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        specialinvoke $r5.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>(r0);
        $r6 = virtualinvoke $r5.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.util.Map,java.util.Map)>(r1, r2);
        r4[0] = 1;
        return $r6;
    }

    public static java.io.InputStream post(java.net.URL, java.lang.String[], java.lang.Object[]) throws java.io.IOException
    {
        java.net.URL r0;
        java.lang.String[] r1;
        java.lang.Object[] r2;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r5;
        java.io.InputStream $r6;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.lang.String[];
        r2 := @parameter2: java.lang.Object[];
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[34];
        $r5 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        specialinvoke $r5.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>(r0);
        $r6 = virtualinvoke $r5.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.String[],java.lang.Object[])>(r1, r2);
        r4[0] = 1;
        return $r6;
    }

    public static java.io.InputStream post(java.net.URL, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        java.net.URL r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r5;
        java.io.InputStream $r6;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Object;
        $r3 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[35];
        $r5 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        specialinvoke $r5.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>(r0);
        $r6 = virtualinvoke $r5.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.String,java.lang.Object)>(r1, r2);
        r4[0] = 1;
        return $r6;
    }

    public static java.io.InputStream post(java.net.URL, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        java.net.URL r0;
        java.lang.String r1, r3;
        java.lang.Object r2, r4;
        boolean[][] $r5;
        boolean[] r6;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r7;
        java.io.InputStream $r8;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Object;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.Object;
        $r5 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r6 = $r5[36];
        $r7 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        specialinvoke $r7.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>(r0);
        $r8 = virtualinvoke $r7.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)>(r1, r2, r3, r4);
        r6[0] = 1;
        return $r8;
    }

    public static java.io.InputStream post(java.net.URL, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        java.net.URL r0;
        java.lang.String r1, r3, r5;
        java.lang.Object r2, r4, r6;
        boolean[][] $r7;
        boolean[] r8;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r9;
        java.io.InputStream $r10;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Object;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.Object;
        r5 := @parameter5: java.lang.String;
        r6 := @parameter6: java.lang.Object;
        $r7 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r7 != null goto label0;

        $r7 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r8 = $r7[37];
        $r9 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        specialinvoke $r9.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>(r0);
        $r10 = virtualinvoke $r9.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)>(r1, r2, r3, r4, r5, r6);
        r8[0] = 1;
        return $r10;
    }

    public static java.io.InputStream post(java.net.URL, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.String, java.lang.Object) throws java.io.IOException
    {
        java.net.URL r0;
        java.lang.String r1, r3, r5, r7;
        java.lang.Object r2, r4, r6, r8;
        boolean[][] $r9;
        boolean[] r10;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r11;
        java.io.InputStream $r12;

        r0 := @parameter0: java.net.URL;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.Object;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.Object;
        r5 := @parameter5: java.lang.String;
        r6 := @parameter6: java.lang.Object;
        r7 := @parameter7: java.lang.String;
        r8 := @parameter8: java.lang.Object;
        $r9 = <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc>;
        if $r9 != null goto label0;

        $r9 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();

     label0:
        r10 = $r9[38];
        $r11 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        specialinvoke $r11.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.net.URL)>(r0);
        $r12 = virtualinvoke $r11.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8);
        r10[0] = 1;
        return $r12;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.Random $r2;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRi()>();
        r1 = $r0[39];
        $r2 = new java.util.Random;
        specialinvoke $r2.<java.util.Random: void <init>()>();
        <com.zoffcc.applications.aagtl.ClientHttpRequest: java.util.Random random> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;

        $r0 = newmultiarray (boolean)[40][];
        <com.zoffcc.applications.aagtl.ClientHttpRequest: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[3];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[8];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[3];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[6];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[6];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[3];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[4];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[6];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[6];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[1];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[1];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[1];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[1];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[1];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[38] = $r39;
        $r40 = newarray (boolean)[1];
        $r0[39] = $r40;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/ClientHttpRequest", -8738705495924371950L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m extends java.lang.Object
{
    public boolean lat_plus_minus;
    public java.lang.String lat_sign;
    public int lat_deg;
    public int lat_min;
    public int lat_min_fractions;
    public boolean lon_plus_minus;
    public java.lang.String lon_sign;
    public int lon_deg;
    public int lon_min;
    public int lon_min_fractions;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m;
        $r1 = <com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lat_plus_minus> = 1;
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lat_sign> = "+";
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_deg> = 0;
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min> = 0;
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min_fractions> = 0;
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus> = 1;
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lon_sign> = "+";
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_deg> = 0;
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min> = 0;
        r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min_fractions> = 0;
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/Coordinate$coords_d_m_m", 9265640660704L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.Coordinate extends java.lang.Object
{
    int RADIUS_EARTH;
    int FORMAT_D;
    int FORMAT_DM;
    public double lat;
    public double lon;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(double, double)
    {
        com.zoffcc.applications.aagtl.Coordinate r0;
        double d0, d1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.Coordinate;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        $r1 = <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.Coordinate: int RADIUS_EARTH> = 6371000;
        r0.<com.zoffcc.applications.aagtl.Coordinate: int FORMAT_D> = 0;
        r0.<com.zoffcc.applications.aagtl.Coordinate: int FORMAT_DM> = 1;
        r0.<com.zoffcc.applications.aagtl.Coordinate: double lat> = d0;
        r0.<com.zoffcc.applications.aagtl.Coordinate: double lon> = d1;
        r2[0] = 1;
        return;
    }

    public static com.zoffcc.applications.aagtl.Coordinate dm_m_to_d(com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m)
    {
        com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.Coordinate r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        boolean $z0, $z1;

        r0 := @parameter0: com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m;
        $r1 = <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r4 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r4.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(0.0, 0.0);
        r3 = $r4;
        $i0 = r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_deg>;
        $d0 = (double) $i0;
        $i1 = r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min>;
        $d1 = (double) $i1;
        $d2 = $d1 / 60.0;
        $d3 = $d0 + $d2;
        $i2 = r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min_fractions>;
        $d4 = (double) $i2;
        $d5 = $d4 / 60.0;
        $d6 = $d5 / 1000.0;
        $d7 = $d3 + $d6;
        r3.<com.zoffcc.applications.aagtl.Coordinate: double lat> = $d7;
        $z0 = r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lat_plus_minus>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $d8 = r3.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d9 = neg $d8;
        r3.<com.zoffcc.applications.aagtl.Coordinate: double lat> = $d9;
        r2[1] = 1;

     label1:
        $i3 = r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_deg>;
        $d10 = (double) $i3;
        $i4 = r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min>;
        $d11 = (double) $i4;
        $d12 = $d11 / 60.0;
        $d13 = $d10 + $d12;
        $i5 = r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min_fractions>;
        $d14 = (double) $i5;
        $d15 = $d14 / 60.0;
        $d16 = $d15 / 1000.0;
        $d17 = $d13 + $d16;
        r3.<com.zoffcc.applications.aagtl.Coordinate: double lon> = $d17;
        $z1 = r0.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus>;
        r2[2] = 1;
        if $z1 != 0 goto label2;

        $d18 = r3.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d19 = neg $d18;
        r3.<com.zoffcc.applications.aagtl.Coordinate: double lon> = $d19;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return r3;
    }

    public static com.zoffcc.applications.aagtl.Coordinate parse_coord_string(java.lang.String)
    {
        java.lang.String r0, r5, r6, $r10, $r11, $r13, r14, $r16, $r18, $r20, $r21, $r23, $r25, $r26, $r28, $r31, r32, $r34, $r36, $r38, $r39, $r41, $r43, $r44;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.Coordinate r3, $r7, r45;
        com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m r4, $r8;
        java.lang.String[] $r9, $r15, $r17, $r19, $r22, $r24, $r27, $r33, $r35, $r37, $r40, $r42;
        java.lang.Boolean $r12, $r29, $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Exception $r46, r47;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r7 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r7.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(0.0, 0.0);
        r3 = $r7;

     label1:
        $r8 = new com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m;
        specialinvoke $r8.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: void <init>()>();
        r4 = $r8;
        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("[EWew]", 2);
        $r10 = $r9[0];
        r5 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();
        $r11 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, 1);
        $r12 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: java.lang.Boolean letter_to_sign(java.lang.String)>($r11);
        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lat_plus_minus> = $z0;
        $r13 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(1);
        r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();
        $r15 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\ufffd", 2);
        $r16 = $r15[0];
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_deg> = $i0;
        $r17 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\ufffd", 2);
        $r18 = $r17[1];
        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", 2);
        $r20 = $r19[0];
        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String trim()>();
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min> = $i1;
        $r22 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\ufffd", 2);
        $r23 = $r22[1];
        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", 2);
        $r25 = $r24[1];
        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>();
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min_fractions> = $i2;
        $r27 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("[EWew]", 2);
        $r28 = $r27[1];
        r6 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>();
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("E");
        r2[0] = 1;
        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("e");
        r2[1] = 1;
        if $z2 == 0 goto label3;

     label2:
        $r29 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: java.lang.Boolean letter_to_sign(java.lang.String)>("E");
        $z3 = virtualinvoke $r29.<java.lang.Boolean: boolean booleanValue()>();
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus> = $z3;
        r2[2] = 1;
        goto label4;

     label3:
        $r30 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: java.lang.Boolean letter_to_sign(java.lang.String)>("W");
        $z4 = virtualinvoke $r30.<java.lang.Boolean: boolean booleanValue()>();
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus> = $z4;
        r2[3] = 1;

     label4:
        $r31 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(1);
        r32 = virtualinvoke $r31.<java.lang.String: java.lang.String trim()>();
        $r33 = virtualinvoke r32.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\ufffd", 2);
        $r34 = $r33[0];
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r34);
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_deg> = $i3;
        $r35 = virtualinvoke r32.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\ufffd", 2);
        $r36 = $r35[1];
        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", 2);
        $r38 = $r37[0];
        $r39 = virtualinvoke $r38.<java.lang.String: java.lang.String trim()>();
        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r39);
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min> = $i4;
        $r40 = virtualinvoke r32.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\ufffd", 2);
        $r41 = $r40[1];
        $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", 2);
        $r43 = $r42[1];
        $r44 = virtualinvoke $r43.<java.lang.String: java.lang.String trim()>();
        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r44);
        r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min_fractions> = $i5;
        r45 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: com.zoffcc.applications.aagtl.Coordinate dm_m_to_d(com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m)>(r4);
        r2[4] = 1;

     label5:
        goto label7;

     label6:
        $r46 := @caughtexception;
        r47 = $r46;
        virtualinvoke r47.<java.lang.Exception: void printStackTrace()>();
        r2[5] = 1;
        return null;

     label7:
        r2[6] = 1;
        return r45;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    public static java.lang.Boolean letter_to_sign(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r3, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("n");
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r2[1] = 1;
        return $r3;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("s");
        r2[2] = 1;
        if $z1 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r2[3] = 1;
        return $r4;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("e");
        r2[4] = 1;
        if $z2 == 0 goto label3;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r2[5] = 1;
        return $r5;

     label3:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r2[6] = 1;
        return $r6;
    }

    public com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m d_to_dm_m()
    {
        com.zoffcc.applications.aagtl.Coordinate r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12;
        byte $b6, $b13;

        r0 := @this: com.zoffcc.applications.aagtl.Coordinate;
        $r1 = <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r4 = new com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m;
        specialinvoke $r4.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: void <init>()>();
        r3 = $r4;
        $d0 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0);
        $i0 = (int) $d1;
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_deg> = $i0;
        $d2 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);
        $i1 = r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_deg>;
        $d4 = (double) $i1;
        $d5 = $d3 - $d4;
        $d6 = $d5 * 60.0;
        $i2 = (int) $d6;
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min> = $i2;
        $d7 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d7);
        $i3 = r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_deg>;
        $d9 = (double) $i3;
        $d10 = $d8 - $d9;
        $d11 = $d10 * 60.0;
        $i4 = r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min>;
        $d12 = (double) $i4;
        $d13 = $d11 - $d12;
        $d14 = $d13 * 1000.0;
        $i5 = (int) $d14;
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min_fractions> = $i5;
        $d15 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $b6 = $d15 cmpl 0.0;
        r2[0] = 1;
        if $b6 < 0 goto label1;

        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lat_sign> = "+";
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lat_plus_minus> = 1;
        r2[1] = 1;
        goto label2;

     label1:
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lat_sign> = "-";
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lat_plus_minus> = 0;
        r2[2] = 1;

     label2:
        $d16 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);
        $i7 = (int) $d17;
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_deg> = $i7;
        $d18 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d19 = staticinvoke <java.lang.Math: double abs(double)>($d18);
        $i8 = r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_deg>;
        $d20 = (double) $i8;
        $d21 = $d19 - $d20;
        $d22 = $d21 * 60.0;
        $i9 = (int) $d22;
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min> = $i9;
        $d23 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d24 = staticinvoke <java.lang.Math: double abs(double)>($d23);
        $i10 = r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_deg>;
        $d25 = (double) $i10;
        $d26 = $d24 - $d25;
        $d27 = $d26 * 60.0;
        $i11 = r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min>;
        $d28 = (double) $i11;
        $d29 = $d27 - $d28;
        $d30 = $d29 * 1000.0;
        $i12 = (int) $d30;
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min_fractions> = $i12;
        $d31 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $b13 = $d31 cmpl 0.0;
        r2[3] = 1;
        if $b13 < 0 goto label3;

        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lon_sign> = "+";
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus> = 1;
        r2[4] = 1;
        goto label4;

     label3:
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lon_sign> = "-";
        r3.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus> = 0;
        r2[5] = 1;

     label4:
        r2[6] = 1;
        return r3;
    }

    public double distance_to(com.zoffcc.applications.aagtl.Coordinate)
    {
        com.zoffcc.applications.aagtl.Coordinate r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        int $i0;

        r0 := @this: com.zoffcc.applications.aagtl.Coordinate;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate;
        $r2 = <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $d4 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d5 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d6 = $d4 - $d5;
        $d7 = staticinvoke <java.lang.Math: double toRadians(double)>($d6);
        $d8 = $d7 / 2.0;
        $d9 = staticinvoke <java.lang.Math: double sin(double)>($d8);
        d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d9, 2.0);
        $d10 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d11 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d12 = $d10 - $d11;
        $d13 = staticinvoke <java.lang.Math: double toRadians(double)>($d12);
        $d14 = $d13 / 2.0;
        $d15 = staticinvoke <java.lang.Math: double sin(double)>($d14);
        d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d15, 2.0);
        $d16 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d17 = staticinvoke <java.lang.Math: double toRadians(double)>($d16);
        $d18 = staticinvoke <java.lang.Math: double cos(double)>($d17);
        $d19 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d20 = staticinvoke <java.lang.Math: double toRadians(double)>($d19);
        $d21 = staticinvoke <java.lang.Math: double cos(double)>($d20);
        $d22 = $d18 * $d21;
        $d23 = $d22 * d1;
        d2 = d0 + $d23;
        $d24 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);
        $d25 = 1.0 - d2;
        $d26 = staticinvoke <java.lang.Math: double sqrt(double)>($d25);
        $d27 = staticinvoke <java.lang.Math: double atan2(double,double)>($d24, $d26);
        d3 = 2.0 * $d27;
        $i0 = r0.<com.zoffcc.applications.aagtl.Coordinate: int RADIUS_EARTH>;
        $d28 = (double) $i0;
        $d29 = $d28 * d3;
        r3[0] = 1;
        return $d29;
    }

    public double bearing_to(com.zoffcc.applications.aagtl.Coordinate)
    {
        com.zoffcc.applications.aagtl.Coordinate r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;

        r0 := @this: com.zoffcc.applications.aagtl.Coordinate;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate;
        $r2 = <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $d6 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d6);
        $d7 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d7);
        $d8 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d9 = r0.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d10 = $d8 - $d9;
        d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d10);
        $d11 = staticinvoke <java.lang.Math: double sin(double)>(d2);
        $d12 = staticinvoke <java.lang.Math: double cos(double)>(d1);
        d3 = $d11 * $d12;
        $d13 = staticinvoke <java.lang.Math: double cos(double)>(d0);
        $d14 = staticinvoke <java.lang.Math: double sin(double)>(d1);
        $d15 = $d13 * $d14;
        $d16 = staticinvoke <java.lang.Math: double sin(double)>(d0);
        $d17 = staticinvoke <java.lang.Math: double cos(double)>(d1);
        $d18 = $d16 * $d17;
        $d19 = staticinvoke <java.lang.Math: double cos(double)>(d2);
        $d20 = $d18 * $d19;
        d4 = $d15 - $d20;
        $d21 = staticinvoke <java.lang.Math: double atan2(double,double)>(d3, d4);
        d5 = staticinvoke <java.lang.Math: double toDegrees(double)>($d21);
        $d22 = 360.0 + d5;
        $d23 = $d22 % 360.0;
        r3[0] = 1;
        return $d23;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <com.zoffcc.applications.aagtl.Coordinate: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[7];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[7];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/Coordinate", -4111918937902931529L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.CrossHair extends android.widget.ImageView
{
    int middle_size;
    double gps_acc;
    double gps_heading;
    int used_sats;
    com.zoffcc.applications.aagtl.aagtl main_aagtl;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.CrossHair r0;
        android.content.Context r1;
        com.zoffcc.applications.aagtl.aagtl r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.CrossHair;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: com.zoffcc.applications.aagtl.aagtl;
        $r3 = <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context)>(r1);
        r0.<com.zoffcc.applications.aagtl.CrossHair: int middle_size> = 10;
        r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_acc> = -1.0;
        r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading> = -1.0;
        r0.<com.zoffcc.applications.aagtl.CrossHair: int used_sats> = 0;
        r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl> = r2;
        r4[0] = 1;
        return;
    }

    public void set_used_sats(int)
    {
        com.zoffcc.applications.aagtl.CrossHair r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.CrossHair;
        i0 := @parameter0: int;
        $r1 = <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r0.<com.zoffcc.applications.aagtl.CrossHair: int used_sats> = i0;
        r2[0] = 1;
        return;
    }

    public void set_gps_heading(double)
    {
        com.zoffcc.applications.aagtl.CrossHair r0;
        double d0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.aagtl $r3, $r6;
        com.zoffcc.applications.aagtl.aagtl$settings $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        com.zoffcc.applications.aagtl.Rose $r7;

        r0 := @this: com.zoffcc.applications.aagtl.CrossHair;
        d0 := @parameter0: double;
        $r1 = <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading> = d0;
        $r3 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r4 = $r3.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r5 = $r4.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r6 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r7 = $r6.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r7.<com.zoffcc.applications.aagtl.Rose: void draw_view()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public double get_gps_heading()
    {
        com.zoffcc.applications.aagtl.CrossHair r0;
        boolean[][] $r1;
        boolean[] r2;
        double $d0;

        r0 := @this: com.zoffcc.applications.aagtl.CrossHair;
        $r1 = <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $d0 = r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        r2[0] = 1;
        return $d0;
    }

    public void set_gps_acc(double)
    {
        com.zoffcc.applications.aagtl.CrossHair r0;
        double d0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.CrossHair;
        d0 := @parameter0: double;
        $r1 = <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_acc> = d0;
        r2[0] = 1;
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.zoffcc.applications.aagtl.CrossHair r0;
        android.graphics.Canvas r1;
        boolean[][] $r2;
        boolean[] r3;
        android.graphics.Paint r4, r5, $r9, $r18, $r31, r32, $r44, r45, $r72, r73, $r75, r76;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, d141, $d142, $d143, d144, d145, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197;
        byte b0, b1, $b39, b49, b50, b56, b57, $b62, b71, b72, b74, b75, b81, b82, $b87, b107, b154;
        null_type n0, n1;
        int i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i51, $i52, $i53, $i54, $i55, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i73, $i76, $i77, $i78, $i79, $i80, $i83, $i84, $i85, $i86, $i88, $i89, $i90, $i91, i92, $i93, i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200;
        double[] r6, r8, $r55, $r69;
        android.graphics.Path r7, $r56, $r70, r71;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49;
        com.zoffcc.applications.aagtl.aagtl $r10, $r12, $r14, $r16, $r25, $r27, $r29, $r39, $r41, $r47, $r49, $r51, $r63, $r66, $r83, $r85, $r87, $r89, $r91, $r93;
        com.zoffcc.applications.aagtl.ArrowView $r11, $r13, $r15, $r17, $r26, $r28, $r30;
        android.graphics.Paint$Style $r19, $r22, $r33, $r36, $r46, $r57, $r74, $r77;
        android.graphics.RectF $r20, r21, $r23, r24, $r34, r35, $r37, r38, $r53, r54, $r86, $r88, $r92, $r94;
        java.lang.Boolean $r40, $r43, $r65, $r68;
        boolean $z0, $z1, $z2, $z3;
        com.zoffcc.applications.aagtl.aagtl$settings $r42, $r64, $r67;
        com.zoffcc.applications.aagtl.Rose $r48, $r50, $r52;
        java.lang.StringBuilder $r58, $r59, $r60, $r61, $r78, $r79, $r80, $r81;
        java.lang.String $r62, $r82;
        android.graphics.Bitmap $r84, $r90;

        r0 := @this: com.zoffcc.applications.aagtl.CrossHair;
        r1 := @parameter0: android.graphics.Canvas;
        $r2 = <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r9 = new android.graphics.Paint;
        specialinvoke $r9.<android.graphics.Paint: void <init>(int)>(0);
        r4 = $r9;
        virtualinvoke r4.<android.graphics.Paint: void setAntiAlias(boolean)>(0);
        virtualinvoke r4.<android.graphics.Paint: void setColor(int)>(-7829368);
        $i5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i6 = $i5 / 2;
        $f0 = (float) $i6;
        $i7 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i8 = $i7 / 2;
        $f1 = (float) $i8;
        $i9 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i10 = $i9 / 2;
        $i11 = r0.<com.zoffcc.applications.aagtl.CrossHair: int middle_size>;
        $i12 = $i10 - $i11;
        $f2 = (float) $i12;
        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, 0.0F, $f1, $f2, r4);
        $i13 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i14 = $i13 / 2;
        $f3 = (float) $i14;
        $i15 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i16 = $i15 / 2;
        $i17 = r0.<com.zoffcc.applications.aagtl.CrossHair: int middle_size>;
        $i18 = $i16 + $i17;
        $f4 = (float) $i18;
        $i19 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i20 = $i19 / 2;
        $f5 = (float) $i20;
        $i21 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $f6 = (float) $i21;
        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f3, $f4, $f5, $f6, r4);
        $i22 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i23 = $i22 / 2;
        $f7 = (float) $i23;
        $i24 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i25 = $i24 / 2;
        $i26 = r0.<com.zoffcc.applications.aagtl.CrossHair: int middle_size>;
        $i27 = $i25 - $i26;
        $f8 = (float) $i27;
        $i28 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i29 = $i28 / 2;
        $f9 = (float) $i29;
        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, $f7, $f8, $f9, r4);
        $i30 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i31 = $i30 / 2;
        $i32 = r0.<com.zoffcc.applications.aagtl.CrossHair: int middle_size>;
        $i33 = $i31 + $i32;
        $f10 = (float) $i33;
        $i34 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i35 = $i34 / 2;
        $f11 = (float) $i35;
        $i36 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $f12 = (float) $i36;
        $i37 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i38 = $i37 / 2;
        $f13 = (float) $i38;
        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f10, $f11, $f12, $f13, r4);
        $r10 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r11.<com.zoffcc.applications.aagtl.ArrowView: void calc_sun_stats()>();
        $r12 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        $d7 = $r13.<com.zoffcc.applications.aagtl.ArrowView: double moon_evelation_cache>;
        $b39 = $d7 cmpg -0.83;
        r3[0] = 1;
        if $b39 >= 0 goto label1;

        r3[1] = 1;
        goto label2;

     label1:
        $i40 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i41 = $i40 / 2;
        $d8 = (double) $i41;
        $r14 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r15 = $r14.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        $d9 = $r15.<com.zoffcc.applications.aagtl.ArrowView: double moon_azimuth_cache>;
        $d10 = staticinvoke <java.lang.Math: double toRadians(double)>($d9);
        $d11 = staticinvoke <java.lang.Math: double sin(double)>($d10);
        $i42 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i43 = $i42 / 2;
        $d12 = (double) $i43;
        $d13 = $d11 * $d12;
        $d14 = $d13 * 0.9;
        d0 = $d8 + $d14;
        $i44 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i45 = $i44 / 2;
        $d15 = (double) $i45;
        $r16 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r17 = $r16.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        $d16 = $r17.<com.zoffcc.applications.aagtl.ArrowView: double moon_azimuth_cache>;
        $d17 = staticinvoke <java.lang.Math: double toRadians(double)>($d16);
        $d18 = staticinvoke <java.lang.Math: double cos(double)>($d17);
        $i46 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i47 = $i46 / 2;
        $d19 = (double) $i47;
        $d20 = $d18 * $d19;
        $d21 = $d20 * 0.9;
        d1 = $d15 - $d21;
        b0 = 6;
        b1 = 6;
        n0 = null;
        $r18 = new android.graphics.Paint;
        specialinvoke $r18.<android.graphics.Paint: void <init>(int)>(0);
        r5 = $r18;
        $i48 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#EBEBEB");
        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i48);
        $r19 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r19);
        virtualinvoke r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        b49 = 6;
        b50 = 6;
        $r20 = new android.graphics.RectF;
        $d22 = (double) b49;
        $d23 = d0 - $d22;
        $i51 = (int) $d23;
        $f14 = (float) $i51;
        $d24 = (double) b50;
        $d25 = d1 - $d24;
        $i52 = (int) $d25;
        $f15 = (float) $i52;
        $d26 = (double) b49;
        $d27 = d0 + $d26;
        $i53 = (int) $d27;
        $f16 = (float) $i53;
        $d28 = (double) b50;
        $d29 = d1 + $d28;
        $i54 = (int) $d29;
        $f17 = (float) $i54;
        specialinvoke $r20.<android.graphics.RectF: void <init>(float,float,float,float)>($f14, $f15, $f16, $f17);
        r21 = $r20;
        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r21, 0.0F, 360.0F, 0, r5);
        $i55 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#000000");
        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i55);
        $r22 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r22);
        virtualinvoke r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        virtualinvoke r5.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);
        b56 = 6;
        b57 = 6;
        $r23 = new android.graphics.RectF;
        $d30 = (double) b56;
        $d31 = d0 - $d30;
        $i58 = (int) $d31;
        $f18 = (float) $i58;
        $d32 = (double) b57;
        $d33 = d1 - $d32;
        $i59 = (int) $d33;
        $f19 = (float) $i59;
        $d34 = (double) b56;
        $d35 = d0 + $d34;
        $i60 = (int) $d35;
        $f20 = (float) $i60;
        $d36 = (double) b57;
        $d37 = d1 + $d36;
        $i61 = (int) $d37;
        $f21 = (float) $i61;
        specialinvoke $r23.<android.graphics.RectF: void <init>(float,float,float,float)>($f18, $f19, $f20, $f21);
        r24 = $r23;
        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r24, 0.0F, 360.0F, 0, r5);
        r3[2] = 1;

     label2:
        $r25 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r26 = $r25.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        $d38 = $r26.<com.zoffcc.applications.aagtl.ArrowView: double elevation>;
        $b62 = $d38 cmpg -0.83;
        r3[3] = 1;
        if $b62 >= 0 goto label3;

        r3[4] = 1;
        goto label4;

     label3:
        $i63 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i64 = $i63 / 2;
        $d39 = (double) $i64;
        $r27 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r28 = $r27.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        $d40 = $r28.<com.zoffcc.applications.aagtl.ArrowView: double azmiuth_cache>;
        $d41 = staticinvoke <java.lang.Math: double toRadians(double)>($d40);
        $d42 = staticinvoke <java.lang.Math: double sin(double)>($d41);
        $i65 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i66 = $i65 / 2;
        $d43 = (double) $i66;
        $d44 = $d42 * $d43;
        $d45 = $d44 * 0.9;
        d46 = $d39 + $d45;
        $i67 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i68 = $i67 / 2;
        $d47 = (double) $i68;
        $r29 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r30 = $r29.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        $d48 = $r30.<com.zoffcc.applications.aagtl.ArrowView: double azmiuth_cache>;
        $d49 = staticinvoke <java.lang.Math: double toRadians(double)>($d48);
        $d50 = staticinvoke <java.lang.Math: double cos(double)>($d49);
        $i69 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i70 = $i69 / 2;
        $d51 = (double) $i70;
        $d52 = $d50 * $d51;
        $d53 = $d52 * 0.9;
        d54 = $d47 - $d53;
        b71 = 6;
        b72 = 6;
        n1 = null;
        $r31 = new android.graphics.Paint;
        specialinvoke $r31.<android.graphics.Paint: void <init>(int)>(0);
        r32 = $r31;
        $i73 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#FFFF66");
        virtualinvoke r32.<android.graphics.Paint: void setColor(int)>($i73);
        $r33 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke r32.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r33);
        virtualinvoke r32.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        b74 = 6;
        b75 = 6;
        $r34 = new android.graphics.RectF;
        $d55 = (double) b74;
        $d56 = d46 - $d55;
        $i76 = (int) $d56;
        $f22 = (float) $i76;
        $d57 = (double) b75;
        $d58 = d54 - $d57;
        $i77 = (int) $d58;
        $f23 = (float) $i77;
        $d59 = (double) b74;
        $d60 = d46 + $d59;
        $i78 = (int) $d60;
        $f24 = (float) $i78;
        $d61 = (double) b75;
        $d62 = d54 + $d61;
        $i79 = (int) $d62;
        $f25 = (float) $i79;
        specialinvoke $r34.<android.graphics.RectF: void <init>(float,float,float,float)>($f22, $f23, $f24, $f25);
        r35 = $r34;
        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r35, 0.0F, 360.0F, 0, r32);
        $i80 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#000000");
        virtualinvoke r32.<android.graphics.Paint: void setColor(int)>($i80);
        $r36 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke r32.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r36);
        virtualinvoke r32.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        virtualinvoke r32.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);
        b81 = 6;
        b82 = 6;
        $r37 = new android.graphics.RectF;
        $d63 = (double) b81;
        $d64 = d46 - $d63;
        $i83 = (int) $d64;
        $f26 = (float) $i83;
        $d65 = (double) b82;
        $d66 = d54 - $d65;
        $i84 = (int) $d66;
        $f27 = (float) $i84;
        $d67 = (double) b81;
        $d68 = d46 + $d67;
        $i85 = (int) $d68;
        $f28 = (float) $i85;
        $d69 = (double) b82;
        $d70 = d54 + $d69;
        $i86 = (int) $d70;
        $f29 = (float) $i86;
        specialinvoke $r37.<android.graphics.RectF: void <init>(float,float,float,float)>($f26, $f27, $f28, $f29);
        r38 = $r37;
        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r38, 0.0F, 360.0F, 0, r32);
        r3[5] = 1;

     label4:
        $r39 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r40 = $r39.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix>;
        $z0 = virtualinvoke $r40.<java.lang.Boolean: boolean booleanValue()>();
        r3[6] = 1;
        if $z0 == 0 goto label9;

        $r41 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r42 = $r41.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r43 = $r42.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z1 = virtualinvoke $r43.<java.lang.Boolean: boolean booleanValue()>();
        r3[7] = 1;
        if $z1 != 0 goto label15;

        $d71 = r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_acc>;
        $b87 = $d71 cmpl -1.0;
        r3[8] = 1;
        if $b87 == 0 goto label15;

        $r44 = new android.graphics.Paint;
        specialinvoke $r44.<android.graphics.Paint: void <init>(int)>(0);
        r45 = $r44;
        $i88 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#0000AA");
        virtualinvoke r45.<android.graphics.Paint: void setColor(int)>($i88);
        $r46 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke r45.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r46);
        virtualinvoke r45.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r47 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r48 = $r47.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i89 = $r48.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        i2 = 19 - $i89;
        $i90 = 1 << i2;
        d72 = (double) $i90;
        $d73 = r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_acc>;
        $r49 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r50 = $r49.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i91 = $r50.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d74 = (double) $i91;
        $d75 = 50.0 * d72;
        $d76 = $d74 / $d75;
        $d77 = $d73 * $d76;
        i92 = (int) $d77;
        $d78 = r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_acc>;
        $r51 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r52 = $r51.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i93 = $r52.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d79 = (double) $i93;
        $d80 = 50.0 * d72;
        $d81 = $d79 / $d80;
        $d82 = $d78 * $d81;
        i94 = (int) $d82;
        $r53 = new android.graphics.RectF;
        $i95 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i96 = $i95 / 2;
        $i97 = $i96 - i92;
        $f30 = (float) $i97;
        $i98 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i99 = $i98 / 2;
        $i100 = $i99 - i94;
        $f31 = (float) $i100;
        $i101 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i102 = $i101 / 2;
        $i103 = $i102 + i92;
        $f32 = (float) $i103;
        $i104 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i105 = $i104 / 2;
        $i106 = $i105 + i94;
        $f33 = (float) $i106;
        specialinvoke $r53.<android.graphics.RectF: void <init>(float,float,float,float)>($f30, $f31, $f32, $f33);
        r54 = $r53;
        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r54, 0.0F, 360.0F, 0, r45);
        b107 = 16;
        $d83 = r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        $d84 = staticinvoke <java.lang.Math: double toRadians(double)>($d83);
        d2 = staticinvoke <java.lang.Math: double sin(double)>($d84);
        $d85 = r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        $d86 = staticinvoke <java.lang.Math: double toRadians(double)>($d85);
        d3 = staticinvoke <java.lang.Math: double cos(double)>($d86);
        $i108 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i109 = $i108 / 2;
        $i110 = $i109 - 34;
        d4 = (double) $i110;
        $i111 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i112 = $i111 / 2;
        $i113 = $i112 - 34;
        d5 = (double) $i113;
        $r55 = newarray (double)[6];
        $r55[0] = 0.7;
        $r55[1] = 0.0;
        $r55[2] = 0.0;
        $r55[3] = -1.0;
        $r55[4] = -0.7;
        $r55[5] = 0.0;
        r6 = $r55;
        $r56 = new android.graphics.Path;
        specialinvoke $r56.<android.graphics.Path: void <init>()>();
        r7 = $r56;
        i3 = 0;
        r3[9] = 1;

     label5:
        r3[10] = 1;
        if i3 >= 3 goto label8;

        r3[11] = 1;
        if i3 != 0 goto label6;

        $i114 = i3 + 1;
        $i115 = $i114 * 2;
        $i116 = $i115 - 2;
        $d87 = r6[$i116];
        $d88 = (double) b107;
        $d89 = $d87 * $d88;
        $d90 = $d89 * d3;
        $i117 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i118 = $i117 / 2;
        $d91 = (double) $i118;
        $d92 = $d90 + $d91;
        $i119 = i3 + 1;
        $i120 = $i119 * 2;
        $i121 = $i120 - 1;
        $d93 = r6[$i121];
        $d94 = (double) b107;
        $d95 = $d93 * $d94;
        $d96 = $d95 * d2;
        $d97 = $d92 - $d96;
        $d98 = d2 * d4;
        $d99 = $d97 + $d98;
        $f34 = (float) $d99;
        $i122 = i3 + 1;
        $i123 = $i122 * 2;
        $i124 = $i123 - 1;
        $d100 = r6[$i124];
        $d101 = (double) b107;
        $d102 = $d100 * $d101;
        $d103 = $d102 * d3;
        $i125 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i126 = $i125 / 2;
        $d104 = (double) $i126;
        $d105 = $d103 + $d104;
        $i127 = i3 + 1;
        $i128 = $i127 * 2;
        $i129 = $i128 - 2;
        $d106 = r6[$i129];
        $d107 = (double) b107;
        $d108 = $d106 * $d107;
        $d109 = $d108 * d2;
        $d110 = $d105 + $d109;
        $d111 = d3 * d5;
        $d112 = $d110 - $d111;
        $f35 = (float) $d112;
        virtualinvoke r7.<android.graphics.Path: void moveTo(float,float)>($f34, $f35);
        r3[12] = 1;
        goto label7;

     label6:
        $i130 = i3 + 1;
        $i131 = $i130 * 2;
        $i132 = $i131 - 2;
        $d113 = r6[$i132];
        $d114 = (double) b107;
        $d115 = $d113 * $d114;
        $d116 = $d115 * d3;
        $i133 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i134 = $i133 / 2;
        $d117 = (double) $i134;
        $d118 = $d116 + $d117;
        $i135 = i3 + 1;
        $i136 = $i135 * 2;
        $i137 = $i136 - 1;
        $d119 = r6[$i137];
        $d120 = (double) b107;
        $d121 = $d119 * $d120;
        $d122 = $d121 * d2;
        $d123 = $d118 - $d122;
        $d124 = d2 * d4;
        $d125 = $d123 + $d124;
        $f36 = (float) $d125;
        $i138 = i3 + 1;
        $i139 = $i138 * 2;
        $i140 = $i139 - 1;
        $d126 = r6[$i140];
        $d127 = (double) b107;
        $d128 = $d126 * $d127;
        $d129 = $d128 * d3;
        $i141 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i142 = $i141 / 2;
        $d130 = (double) $i142;
        $d131 = $d129 + $d130;
        $i143 = i3 + 1;
        $i144 = $i143 * 2;
        $i145 = $i144 - 2;
        $d132 = r6[$i145];
        $d133 = (double) b107;
        $d134 = $d132 * $d133;
        $d135 = $d134 * d2;
        $d136 = $d131 + $d135;
        $d137 = d3 * d5;
        $d138 = $d136 - $d137;
        $f37 = (float) $d138;
        virtualinvoke r7.<android.graphics.Path: void lineTo(float,float)>($f36, $f37);
        r3[13] = 1;

     label7:
        i3 = i3 + 1;
        r3[14] = 1;
        goto label5;

     label8:
        virtualinvoke r7.<android.graphics.Path: void close()>();
        $r57 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke r45.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r57);
        virtualinvoke r45.<android.graphics.Paint: void setStrokeWidth(float)>(4.0F);
        $i146 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#00EE00");
        virtualinvoke r45.<android.graphics.Paint: void setColor(int)>($i146);
        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r7, r45);
        virtualinvoke r45.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);
        $i147 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#157DEC");
        virtualinvoke r45.<android.graphics.Paint: void setColor(int)>($i147);
        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r7, r45);
        virtualinvoke r45.<android.graphics.Paint: void setTextSize(float)>(14.0F);
        virtualinvoke r45.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);
        $i148 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#00EE00");
        virtualinvoke r45.<android.graphics.Paint: void setColor(int)>($i148);
        $r58 = new java.lang.StringBuilder;
        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*gps fix* (");
        $i149 = r0.<com.zoffcc.applications.aagtl.CrossHair: int used_sats>;
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i149);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();
        $i150 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i151 = $i150 - 90;
        $f38 = (float) $i151;
        $i152 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i153 = $i152 - 17;
        $f39 = (float) $i153;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r62, $f38, $f39, r45);
        r3[15] = 1;
        goto label15;

     label9:
        $r63 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r64 = $r63.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r65 = $r64.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z2 = virtualinvoke $r65.<java.lang.Boolean: boolean booleanValue()>();
        r3[16] = 1;
        if $z2 != 0 goto label14;

        $r66 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r67 = $r66.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r68 = $r67.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_use_compass_heading>;
        $z3 = virtualinvoke $r68.<java.lang.Boolean: boolean booleanValue()>();
        r3[17] = 1;
        if $z3 == 0 goto label14;

        b154 = 16;
        $d139 = r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        $d140 = staticinvoke <java.lang.Math: double toRadians(double)>($d139);
        d141 = staticinvoke <java.lang.Math: double sin(double)>($d140);
        $d142 = r0.<com.zoffcc.applications.aagtl.CrossHair: double gps_heading>;
        $d143 = staticinvoke <java.lang.Math: double toRadians(double)>($d142);
        d6 = staticinvoke <java.lang.Math: double cos(double)>($d143);
        $i155 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i156 = $i155 / 2;
        $i157 = $i156 - 34;
        d144 = (double) $i157;
        $i158 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i159 = $i158 / 2;
        $i160 = $i159 - 34;
        d145 = (double) $i160;
        $r69 = newarray (double)[6];
        $r69[0] = 0.7;
        $r69[1] = 0.0;
        $r69[2] = 0.0;
        $r69[3] = -1.0;
        $r69[4] = -0.7;
        $r69[5] = 0.0;
        r8 = $r69;
        $r70 = new android.graphics.Path;
        specialinvoke $r70.<android.graphics.Path: void <init>()>();
        r71 = $r70;
        i4 = 0;
        r3[18] = 1;

     label10:
        r3[19] = 1;
        if i4 >= 3 goto label13;

        r3[20] = 1;
        if i4 != 0 goto label11;

        $i161 = i4 + 1;
        $i162 = $i161 * 2;
        $i163 = $i162 - 2;
        $d146 = r8[$i163];
        $d147 = (double) b154;
        $d148 = $d146 * $d147;
        $d149 = $d148 * d6;
        $i164 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i165 = $i164 / 2;
        $d150 = (double) $i165;
        $d151 = $d149 + $d150;
        $i166 = i4 + 1;
        $i167 = $i166 * 2;
        $i168 = $i167 - 1;
        $d152 = r8[$i168];
        $d153 = (double) b154;
        $d154 = $d152 * $d153;
        $d155 = $d154 * d141;
        $d156 = $d151 - $d155;
        $d157 = d141 * d144;
        $d158 = $d156 + $d157;
        $f40 = (float) $d158;
        $i169 = i4 + 1;
        $i170 = $i169 * 2;
        $i171 = $i170 - 1;
        $d159 = r8[$i171];
        $d160 = (double) b154;
        $d161 = $d159 * $d160;
        $d162 = $d161 * d6;
        $i172 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i173 = $i172 / 2;
        $d163 = (double) $i173;
        $d164 = $d162 + $d163;
        $i174 = i4 + 1;
        $i175 = $i174 * 2;
        $i176 = $i175 - 2;
        $d165 = r8[$i176];
        $d166 = (double) b154;
        $d167 = $d165 * $d166;
        $d168 = $d167 * d141;
        $d169 = $d164 + $d168;
        $d170 = d6 * d145;
        $d171 = $d169 - $d170;
        $f41 = (float) $d171;
        virtualinvoke r71.<android.graphics.Path: void moveTo(float,float)>($f40, $f41);
        r3[21] = 1;
        goto label12;

     label11:
        $i177 = i4 + 1;
        $i178 = $i177 * 2;
        $i179 = $i178 - 2;
        $d172 = r8[$i179];
        $d173 = (double) b154;
        $d174 = $d172 * $d173;
        $d175 = $d174 * d6;
        $i180 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i181 = $i180 / 2;
        $d176 = (double) $i181;
        $d177 = $d175 + $d176;
        $i182 = i4 + 1;
        $i183 = $i182 * 2;
        $i184 = $i183 - 1;
        $d178 = r8[$i184];
        $d179 = (double) b154;
        $d180 = $d178 * $d179;
        $d181 = $d180 * d141;
        $d182 = $d177 - $d181;
        $d183 = d141 * d144;
        $d184 = $d182 + $d183;
        $f42 = (float) $d184;
        $i185 = i4 + 1;
        $i186 = $i185 * 2;
        $i187 = $i186 - 1;
        $d185 = r8[$i187];
        $d186 = (double) b154;
        $d187 = $d185 * $d186;
        $d188 = $d187 * d6;
        $i188 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i189 = $i188 / 2;
        $d189 = (double) $i189;
        $d190 = $d188 + $d189;
        $i190 = i4 + 1;
        $i191 = $i190 * 2;
        $i192 = $i191 - 2;
        $d191 = r8[$i192];
        $d192 = (double) b154;
        $d193 = $d191 * $d192;
        $d194 = $d193 * d141;
        $d195 = $d190 + $d194;
        $d196 = d6 * d145;
        $d197 = $d195 - $d196;
        $f43 = (float) $d197;
        virtualinvoke r71.<android.graphics.Path: void lineTo(float,float)>($f42, $f43);
        r3[22] = 1;

     label12:
        i4 = i4 + 1;
        r3[23] = 1;
        goto label10;

     label13:
        virtualinvoke r71.<android.graphics.Path: void close()>();
        $r72 = new android.graphics.Paint;
        specialinvoke $r72.<android.graphics.Paint: void <init>(int)>(0);
        r73 = $r72;
        virtualinvoke r73.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r74 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke r73.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r74);
        virtualinvoke r73.<android.graphics.Paint: void setStrokeWidth(float)>(4.0F);
        $i193 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#00EE00");
        virtualinvoke r73.<android.graphics.Paint: void setColor(int)>($i193);
        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r71, r73);
        virtualinvoke r73.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);
        $i194 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#157DEC");
        virtualinvoke r73.<android.graphics.Paint: void setColor(int)>($i194);
        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r71, r73);
        r3[24] = 1;

     label14:
        $r75 = new android.graphics.Paint;
        specialinvoke $r75.<android.graphics.Paint: void <init>(int)>(0);
        r76 = $r75;
        virtualinvoke r76.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $i195 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#EE0000");
        virtualinvoke r76.<android.graphics.Paint: void setColor(int)>($i195);
        $r77 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke r76.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r77);
        virtualinvoke r76.<android.graphics.Paint: void setTextSize(float)>(11.0F);
        $r78 = new java.lang.StringBuilder;
        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no gps fix (");
        $i196 = r0.<com.zoffcc.applications.aagtl.CrossHair: int used_sats>;
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i196);
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
        $i197 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getWidth()>();
        $i198 = $i197 - 90;
        $f44 = (float) $i198;
        $i199 = virtualinvoke r0.<com.zoffcc.applications.aagtl.CrossHair: int getHeight()>();
        $i200 = $i199 - 17;
        $f45 = (float) $i200;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r82, $f44, $f45, r76);
        r3[25] = 1;

     label15:
        $r83 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r84 = $r83.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_current>;
        $r85 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r86 = $r85.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF follow_button_rect>;
        $f46 = $r86.<android.graphics.RectF: float left>;
        $r87 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r88 = $r87.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF follow_button_rect>;
        $f47 = $r88.<android.graphics.RectF: float top>;
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r84, $f46, $f47, null);
        $r89 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r90 = $r89.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap arrow_button>;
        $r91 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r92 = $r91.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF arrow_button_rect>;
        $f48 = $r92.<android.graphics.RectF: float left>;
        $r93 = r0.<com.zoffcc.applications.aagtl.CrossHair: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r94 = $r93.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF arrow_button_rect>;
        $f49 = $r94.<android.graphics.RectF: float top>;
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r90, $f48, $f49, null);
        r3[26] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRi()>();
        r1 = $r0[6];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[7][];
        <com.zoffcc.applications.aagtl.CrossHair: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[27];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/CrossHair", 3981336401261504694L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation extends android.app.Instrumentation implements com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener
{
    public static java.lang.String TAG;
    private static final java.lang.String DEFAULT_COVERAGE_FILE_PATH;
    private final android.os.Bundle mResults;
    private android.content.Intent mIntent;
    private static final boolean LOGD;
    private boolean mCoverage;
    private java.lang.String mCoverageFilePath;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Bundle $r3;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Instrumentation: void <init>()>();
        $r3 = new android.os.Bundle;
        specialinvoke $r3.<android.os.Bundle: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults> = $r3;
        r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = 1;
        r2[0] = 1;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r9, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;
        android.content.Intent $r11, $r13;
        android.content.Context $r12;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate(");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r9);
        specialinvoke r0.<android.app.Instrumentation: void onCreate(android.os.Bundle)>(r1);
        r3[0] = 1;
        if r1 == null goto label1;

        $z0 = specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean getBooleanArgument(android.os.Bundle,java.lang.String)>(r1, "coverage");
        r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean mCoverage> = $z0;
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("coverageFile");
        r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = $r10;
        r3[1] = 1;

     label1:
        $r11 = new android.content.Intent;
        $r12 = virtualinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: android.content.Context getTargetContext()>();
        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r12, class "com/zoffcc/applications/aagtl/EmmaInstrument/InstrumentedActivity");
        r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent> = $r11;
        $r13 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        virtualinvoke $r13.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void start()>();
        r3[2] = 1;
        return;
    }

    public void onStart()
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity r3;
        java.lang.String $r4;
        android.content.Intent $r5;
        android.app.Activity $r6;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "onStart()");
        specialinvoke r0.<android.app.Instrumentation: void onStart()>();
        staticinvoke <android.os.Looper: void prepare()>();
        $r5 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: android.content.Intent mIntent>;
        $r6 = virtualinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: android.app.Activity startActivitySync(android.content.Intent)>($r5);
        r3 = (com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity) $r6;
        virtualinvoke r3.<com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: void setFinishListener(com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener)>(r0);
        r2[0] = 1;
        return;
    }

    private boolean getBooleanArgument(android.os.Bundle, java.lang.String)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        android.os.Bundle r1;
        java.lang.String r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: android.os.Bundle;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);
        r4[0] = 1;
        if r5 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);
        r4[1] = 1;
        if $z0 == 0 goto label1;

        $z1 = 1;
        r4[2] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return $z1;
    }

    private void generateCoverageReport()
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, $r7;
        java.lang.Class r4, $r10, $r11, $r12;
        java.lang.reflect.Method r5;
        java.lang.String $r6, $r8;
        java.lang.Class[] $r9;
        java.lang.Object[] $r13;
        java.lang.Boolean $r14, $r15;
        java.lang.ClassNotFoundException $r17, r18;
        java.lang.SecurityException $r19, r20;
        java.lang.NoSuchMethodException $r21, r22;
        java.lang.IllegalArgumentException $r23, r24;
        java.lang.IllegalAccessException $r25, r26;
        java.lang.reflect.InvocationTargetException $r27, r28;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r6 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, "generateCoverageReport()");
        $r7 = new java.io.File;
        $r8 = specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String getCoverageFilePath()>();
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);
        r3 = $r7;

     label1:
        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.vladium.emma.rt.RT");
        $r9 = newarray (java.lang.Class)[3];
        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();
        $r9[0] = $r10;
        $r11 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[1] = $r11;
        $r12 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r9[2] = $r12;
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dumpCoverageData", $r9);
        $r13 = newarray (java.lang.Object)[3];
        $r13[0] = r3;
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r13[1] = $r14;
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $r13[2] = $r15;
        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);
        r2[0] = 1;

     label2:
        goto label9;

     label3:
        $r17 := @caughtexception;
        r18 = $r17;
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("Emma.jar not in the class path?", r18);
        r2[1] = 1;
        goto label9;

     label4:
        $r19 := @caughtexception;
        r20 = $r19;
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r20);
        r2[2] = 1;
        goto label9;

     label5:
        $r21 := @caughtexception;
        r22 = $r21;
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r22);
        r2[3] = 1;
        goto label9;

     label6:
        $r23 := @caughtexception;
        r24 = $r23;
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r24);
        r2[4] = 1;
        goto label9;

     label7:
        $r25 := @caughtexception;
        r26 = $r25;
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r26);
        r2[5] = 1;
        goto label9;

     label8:
        $r27 := @caughtexception;
        r28 = $r27;
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.Exception)>(r28);
        r2[6] = 1;

     label9:
        r2[7] = 1;
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
    }

    private java.lang.String getCoverageFilePath()
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[0] = 1;
        if $r3 != null goto label1;

        r2[1] = 1;
        return "/mnt/sdcard/coverage.ec";

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath>;
        r2[2] = 1;
        return $r4;
    }

    private boolean setCoverageFilePath(java.lang.String)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if $i0 <= 0 goto label1;

        r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String mCoverageFilePath> = r1;
        r3[2] = 1;
        return 1;

     label1:
        r3[3] = 1;
        return 0;
    }

    private void reportEmmaError(java.lang.Exception)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.Exception r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.Exception;
        $r2 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void reportEmmaError(java.lang.String,java.lang.Exception)>("", r1);
        r3[0] = 1;
        return;
    }

    private void reportEmmaError(java.lang.String, java.lang.Exception)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, r5, $r9, $r14;
        java.lang.Exception r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        android.os.Bundle $r10;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Exception;
        $r3 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r4 = $r3[8];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to generate emma coverage. ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, r5, r2);
        $r10 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nError: ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r10.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);
        r4[0] = 1;
        return;
    }

    public void onActivityFinished()
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "onActivityFinished()");
        $z0 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        r2[1] = 1;

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: android.os.Bundle mResults>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void finish(int,android.os.Bundle)>(-1, $r4);
        r2[2] = 1;
        return;
    }

    public void dumpIntermediateCoverage(java.lang.String)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r0;
        java.lang.String r1, $r4, $r8, $r9, $r14;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r4 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intermidate Dump Called with file name :");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r8);
        $z0 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean mCoverage>;
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>(r1);
        r3[1] = 1;
        if $z1 != 0 goto label1;

        $r9 = <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set the given file path:");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as dump target.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r14);
        r3[2] = 1;

     label1:
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void generateCoverageReport()>();
        specialinvoke r0.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean setCoverageFilePath(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRi()>();
        r1 = $r0[11];
        <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: java.lang.String TAG> = "EmmaInstrumentation:";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/EmmaInstrument/EmmaInstrumentation", -6390195098943533753L);
        return $r0;
    }
}
public interface  com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener extends java.lang.Object
{

    public abstract void onActivityFinished();

    public abstract void dumpIntermediateCoverage(java.lang.String);
}
class com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector extends android.content.BroadcastReceiver
{
    final com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity;
        $r2 = <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity this$0> = r1;
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        android.os.Bundle r5;
        java.lang.Object[] r6, $r13;
        android.telephony.SmsMessage r7;
        java.lang.String r8, r9, $r17;
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity $r10, $r18;
        com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener $r11, $r19;
        java.lang.Object $r12, $r14;
        int $i0;
        byte[] $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r10 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity this$0>;
        $r11 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener access$000(com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity)>($r10);
        r4[0] = 1;
        if $r11 == null goto label2;

        r4[1] = 1;
        if r5 == null goto label2;

        $r12 = virtualinvoke r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("pdus");
        $r13 = (java.lang.Object[]) $r12;
        r6 = (java.lang.Object[]) $r13;
        $i0 = lengthof r6;
        r4[2] = 1;
        if $i0 <= 0 goto label2;

        $r14 = r6[0];
        $r15 = (byte[]) $r14;
        $r16 = (byte[]) $r15;
        r7 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>($r16);
        $r17 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getMessageBody()>();
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String toString()>();
        r9 = virtualinvoke r7.<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>();
        $z0 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("6782345628");
        r4[3] = 1;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("/mnt/sdcard");
        r4[4] = 1;
        if $z1 == 0 goto label2;

     label1:
        $r18 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity this$0>;
        $r19 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener access$000(com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity)>($r18);
        interfaceinvoke $r19.<com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>(r8);
        r4[5] = 1;

     label2:
        r4[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity$CoverageCollector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/EmmaInstrument/InstrumentedActivity$CoverageCollector", -1604738725137032633L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity extends com.zoffcc.applications.aagtl.aagtl
{
    public static java.lang.String TAG;
    private com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener mListener;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void setFinishListener(com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity r0;
        com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity;
        r1 := @parameter0: com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener;
        $r2 = <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return;
    }

    public void finish()
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener $r8, $r9;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: java.lang.String TAG>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".InstrumentedActivity");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, "finish()");
        specialinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void finish()>();
        $r8 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        if $r8 == null goto label1;

        $r9 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener mListener>;
        interfaceinvoke $r9.<com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener: void onActivityFinished()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    static com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener access$000(com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener $r3;

        r0 := @parameter0: com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener mListener>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRi()>();
        r1 = $r0[4];
        <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: java.lang.String TAG> = "IntrumentedPlayer";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.zoffcc.applications.aagtl.EmmaInstrument.InstrumentedActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/EmmaInstrument/InstrumentedActivity", -3953097121653020106L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver extends android.content.BroadcastReceiver
{
    public static java.lang.String TAG;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver;
        $r1 = <com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation r6, $r7;

        r0 := @this: com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.content.Intent;
        $r3 = <com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();
        $r7 = new com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation;
        specialinvoke $r7.<com.zoffcc.applications.aagtl.EmmaInstrument.EmmaInstrumentation: void <init>()>();
        r6 = $r7;
        r4[0] = 1;
        if r6 == null goto label1;

        interfaceinvoke r6.<com.zoffcc.applications.aagtl.EmmaInstrument.FinishListener: void dumpIntermediateCoverage(java.lang.String)>("/mnt/sdcard/coverage.ec");
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRi()>();
        r1 = $r0[2];
        <com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver: java.lang.String TAG> = "M3SMSInstrumentedReceiver";
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.EmmaInstrument.SMSInstrumentedReceiver: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/EmmaInstrument/SMSInstrumentedReceiver", 8704909102833939831L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret extends java.lang.Object
{
    java.lang.String encoding;
    java.io.ByteArrayOutputStream data;
    final com.zoffcc.applications.aagtl.FieldnotesUploader this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(com.zoffcc.applications.aagtl.FieldnotesUploader)
    {
        com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret r0;
        com.zoffcc.applications.aagtl.FieldnotesUploader r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret;
        r1 := @parameter0: com.zoffcc.applications.aagtl.FieldnotesUploader;
        $r2 = <com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: com.zoffcc.applications.aagtl.FieldnotesUploader this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/FieldnotesUploader$data_ret", 9252593981417L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.FieldnotesUploader extends java.lang.Object
{
    java.lang.String URL;
    com.zoffcc.applications.aagtl.HTMLDownloader downloader;
    java.util.List gc_with_fn;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(com.zoffcc.applications.aagtl.HTMLDownloader, java.util.List)
    {
        com.zoffcc.applications.aagtl.FieldnotesUploader r0;
        com.zoffcc.applications.aagtl.HTMLDownloader r1;
        java.util.List r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.FieldnotesUploader;
        r1 := @parameter0: com.zoffcc.applications.aagtl.HTMLDownloader;
        r2 := @parameter1: java.util.List;
        $r3 = <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL> = "http://www.geocaching.com/my/uploadfieldnotes.aspx";
        r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader> = null;
        r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.util.List gc_with_fn> = null;
        r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.util.List gc_with_fn> = r2;
        r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader> = r1;
        r4[0] = 1;
        return;
    }

    public java.lang.Boolean upload()
    {
        com.zoffcc.applications.aagtl.FieldnotesUploader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean $r3;

        r0 := @this: com.zoffcc.applications.aagtl.FieldnotesUploader;
        $r1 = <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = virtualinvoke r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.Boolean upload_v3()>();
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String convertStreamToString(java.io.InputStream) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.FieldnotesUploader r0;
        java.io.InputStream r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.StringWriter r4, $r8;
        char[] r5;
        java.io.BufferedReader r6, $r9;
        int i0, $i1, $i2, $i3;
        java.lang.Throwable r7, $r11;
        java.io.InputStreamReader $r10;
        java.lang.String $r12;

        r0 := @this: com.zoffcc.applications.aagtl.FieldnotesUploader;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r3[0] = 1;
        if r1 == null goto label8;

        $r8 = new java.io.StringWriter;
        specialinvoke $r8.<java.io.StringWriter: void <init>()>();
        r4 = $r8;
        $i1 = <com.zoffcc.applications.aagtl.HTMLDownloader: int large_buffer_size>;
        r5 = newarray (char)[$i1];

     label1:
        $r9 = new java.io.BufferedReader;
        $r10 = new java.io.InputStreamReader;
        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF-8");
        $i2 = <com.zoffcc.applications.aagtl.HTMLDownloader: int large_buffer_size>;
        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r10, $i2);
        r6 = $r9;
        r3[1] = 1;

     label2:
        $i3 = virtualinvoke r6.<java.io.Reader: int read(char[])>(r5);
        i0 = $i3;
        r3[2] = 1;
        if $i3 == -1 goto label3;

        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>(r5, 0, i0);
        r3[3] = 1;
        goto label2;

     label3:
        virtualinvoke r1.<java.io.InputStream: void close()>();
        r3[4] = 1;
        goto label7;

     label4:
        $r11 := @caughtexception;

     label5:
        r7 = $r11;

     label6:
        virtualinvoke r1.<java.io.InputStream: void close()>();
        r3[5] = 1;
        throw r7;

     label7:
        $r12 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        r3[6] = 1;
        return $r12;

     label8:
        r3[7] = 1;
        return "";

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String SendPost(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.FieldnotesUploader r0;
        java.lang.String r1, r2, r3, r9, $r18, r19, $r22, r25, $r26, r27;
        boolean[][] $r4;
        boolean[] r5;
        java.net.URL r6, $r10;
        java.net.HttpURLConnection r7;
        java.io.OutputStreamWriter r8, $r12;
        null_type n0;
        int i0, $i1, $i2;
        java.net.URLConnection $r11;
        java.io.OutputStream $r13;
        java.io.BufferedReader $r14, r17;
        java.io.InputStreamReader $r15;
        java.io.InputStream $r16;
        boolean $z0;
        java.lang.StringBuilder $r20, $r21, $r23, $r24, $r28, $r29, $r30, $r31;

        r0 := @this: com.zoffcc.applications.aagtl.FieldnotesUploader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRi()>();

     label0:
        r5 = $r4[3];
        $r10 = new java.net.URL;
        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>(r1);
        r6 = $r10;
        $r11 = virtualinvoke r6.<java.net.URL: java.net.URLConnection openConnection()>();
        r7 = (java.net.HttpURLConnection) $r11;
        virtualinvoke r7.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");
        virtualinvoke r7.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);
        virtualinvoke r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "Keep-Alive");
        virtualinvoke r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.8.1.10) Gecko/20071115 Firefox/2.0.0.10");
        virtualinvoke r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cookie", r3);
        virtualinvoke r7.<java.net.HttpURLConnection: void connect()>();
        r5[0] = 1;
        if r2 == "" goto label1;

        $r12 = new java.io.OutputStreamWriter;
        $r13 = virtualinvoke r7.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();
        specialinvoke $r12.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r13);
        r8 = $r12;
        virtualinvoke r8.<java.io.OutputStreamWriter: void write(java.lang.String)>(r2);
        virtualinvoke r8.<java.io.OutputStreamWriter: void flush()>();
        virtualinvoke r8.<java.io.OutputStreamWriter: void close()>();
        r5[1] = 1;

     label1:
        $r14 = new java.io.BufferedReader;
        $r15 = new java.io.InputStreamReader;
        $r16 = virtualinvoke r7.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();
        specialinvoke $r15.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r16);
        $i1 = <com.zoffcc.applications.aagtl.HTMLDownloader: int default_buffer_size>;
        specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r15, $i1);
        r17 = $r14;
        n0 = null;
        r5[2] = 1;
        if r3 != "" goto label4;

        i0 = 1;
        r5[3] = 1;

     label2:
        $r18 = virtualinvoke r7.<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)>(i0);
        r19 = $r18;
        r5[4] = 1;
        if $r18 == null goto label4;

        $z0 = virtualinvoke r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-Cookie");
        r5[5] = 1;
        if $z0 == 0 goto label3;

        r9 = virtualinvoke r7.<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>(i0);
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $i2 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>(";");
        $r22 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");
        r3 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        r5[6] = 1;

     label3:
        i0 = i0 + 1;
        r5[7] = 1;
        goto label2;

     label4:
        r25 = "";
        r5[8] = 1;

     label5:
        $r26 = virtualinvoke r17.<java.io.BufferedReader: java.lang.String readLine()>();
        r27 = $r26;
        r5[9] = 1;
        if $r26 == null goto label6;

        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r25 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        r5[10] = 1;
        goto label5;

     label6:
        virtualinvoke r17.<java.io.BufferedReader: void close()>();
        r5[11] = 1;
        return r25;
    }

    public com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret _encode_multipart_formdata(java.util.Hashtable, java.lang.String, java.lang.String, byte[]) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.FieldnotesUploader r0;
        java.util.Hashtable r1;
        java.lang.String r2, r3, r9, r10, r15, r17, $r23, $r30, $r35, $r52, $r61, $r64;
        byte[] r4, $r18, $r24, $r31, $r36, $r37, $r53, $r54, $r62;
        boolean[][] $r5;
        boolean[] r6;
        com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret r7, $r12;
        java.io.ByteArrayOutputStream r8, $r13;
        java.util.Enumeration r11;
        null_type n0, n1;
        boolean $z0;
        java.lang.Object $r14, $r16;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r29, $r32, $r33, $r34, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r55, $r56, $r57, $r58, $r59, $r60;
        java.lang.Object[] $r63;

        r0 := @this: com.zoffcc.applications.aagtl.FieldnotesUploader;
        r1 := @parameter0: java.util.Hashtable;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: byte[];
        $r5 = <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRi()>();

     label0:
        r6 = $r5[4];
        $r12 = new com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret;
        specialinvoke $r12.<com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: void <init>(com.zoffcc.applications.aagtl.FieldnotesUploader)>(r0);
        r7 = $r12;
        $r13 = new java.io.ByteArrayOutputStream;
        specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>()>();
        r8 = $r13;
        r9 = "----------ThIs_Is_tHe_bouNdaRY_$";
        r10 = "\r\n";
        r11 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>();
        n0 = null;
        n1 = null;
        r6[0] = 1;

     label1:
        $z0 = interfaceinvoke r11.<java.util.Enumeration: boolean hasMoreElements()>();
        r6[1] = 1;
        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke r11.<java.util.Enumeration: java.lang.Object nextElement()>();
        r15 = (java.lang.String) $r14;
        $r16 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r15);
        r17 = (java.lang.String) $r16;
        $i0 = virtualinvoke r8.<java.io.ByteArrayOutputStream: int size()>();
        r6[2] = 1;
        if $i0 <= 0 goto label2;

        $r18 = virtualinvoke r10.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>($r18);
        r6[3] = 1;

     label2:
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        $r24 = virtualinvoke $r23.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>($r24);
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        $r31 = virtualinvoke $r30.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>($r31);
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        $r36 = virtualinvoke $r35.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>($r36);
        r6[4] = 1;
        goto label1;

     label3:
        $i1 = virtualinvoke r8.<java.io.ByteArrayOutputStream: int size()>();
        r6[5] = 1;
        if $i1 <= 0 goto label4;

        $r37 = virtualinvoke r10.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>($r37);
        r6[6] = 1;

     label4:
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; filename=\"");
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: ");
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text/plain");
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();
        $r53 = virtualinvoke $r52.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>($r53);
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>(r4);
        $i2 = virtualinvoke r8.<java.io.ByteArrayOutputStream: int size()>();
        r6[7] = 1;
        if $i2 <= 0 goto label5;

        $r54 = virtualinvoke r10.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>($r54);
        r6[8] = 1;

     label5:
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
        $r62 = virtualinvoke $r61.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.ByteArrayOutputStream: void write(byte[])>($r62);
        r7.<com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: java.io.ByteArrayOutputStream data> = r8;
        $r63 = newarray (java.lang.Object)[1];
        $r63[0] = r9;
        $r64 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("multipart/form-data; boundary=%s", $r63);
        r7.<com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: java.lang.String encoding> = $r64;
        r6[9] = 1;
        return r7;
    }

    public java.lang.Boolean upload_v3()
    {
        com.zoffcc.applications.aagtl.FieldnotesUploader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean r3, $r70;
        java.lang.String r4, r5, $r20, r21, r37, $r41, $r45, $r50, r53, $r61, $r64, $r68, r71;
        java.util.regex.Pattern r6;
        java.util.regex.Matcher r7;
        java.util.Calendar r8;
        java.text.SimpleDateFormat r9, r10, $r22, $r24;
        null_type n0, n1, n2, n3, n4;
        java.util.Hashtable r12, $r26;
        java.util.Iterator r13;
        java.lang.Exception r14, $r38;
        java.io.UnsupportedEncodingException r15, $r54;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r16, r32;
        java.lang.Throwable r17, $r84;
        com.zoffcc.applications.aagtl.HTMLDownloader $r18, $r19, $r25, $r67, $r72, $r75, $r78, $r81, $r85;
        java.util.TimeZone $r23;
        java.util.List $r30;
        boolean $z2;
        java.lang.Object $r31, $r36;
        byte[] r33;
        java.util.HashMap $r34;
        int $i0, $i1, $i2;
        java.lang.Integer $r35;
        java.io.PrintStream $r39, $r88, $r89;
        java.lang.StringBuilder $r40, $r42, $r43, $r46, $r47, $r48, $r49, $r51, $r52;
        java.util.Date $r44;
        java.util.ArrayList $r55, r56;
        com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret r57;
        java.io.IOException $r58, r59;
        org.apache.http.message.BasicNameValuePair $r60, $r62, $r65, $r66;
        java.io.ByteArrayOutputStream $r63, $r69;
        com.zoffcc.applications.aagtl.aagtl $r73, $r76, $r79, $r82, $r86;
        com.zoffcc.applications.aagtl.PointProvider $r74, $r77, $r80, $r83, $r87;

        r0 := @this: com.zoffcc.applications.aagtl.FieldnotesUploader;
        $r1 = <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r18 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        virtualinvoke $r18.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean login()>();
        $r19 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r20 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL>;
        r4 = virtualinvoke $r19.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String getUrlData(java.lang.String)>($r20);
        r5 = "";
        r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"([^\"]+)\" />");
        r7 = virtualinvoke r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);
        virtualinvoke r7.<java.util.regex.Matcher: boolean find()>();
        r21 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
        $r22 = new java.text.SimpleDateFormat;
        specialinvoke $r22.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm\'Z\'");
        r9 = $r22;
        $r23 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
        virtualinvoke r9.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r23);
        $r24 = new java.text.SimpleDateFormat;
        specialinvoke $r24.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm");
        r10 = $r24;
        $r25 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        virtualinvoke $r25.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String getCookies()>();
        n0 = null;
        n1 = null;
        $r26 = new java.util.Hashtable;
        specialinvoke $r26.<java.util.Hashtable: void <init>()>();
        r12 = $r26;
        virtualinvoke r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ctl00$ContentBody$btnUpload", "Upload Field Note");
        virtualinvoke r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ctl00$ContentBody$chkSuppressDate", "");
        virtualinvoke r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("__VIEWSTATE", r21);
        n2 = null;
        n3 = null;
        $r30 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.util.List gc_with_fn>;
        r13 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z2 == 0 goto label22;

        $r31 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
        r32 = (com.zoffcc.applications.aagtl.GeocacheCoordinate) $r31;
        r33 = null;
        n4 = null;

     label2:
        $r34 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap LOG_AS_HASH>;
        $i0 = r32.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as>;
        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        $r36 = virtualinvoke $r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r35);
        r37 = (java.lang.String) $r36;
        r2[2] = 1;

     label3:
        goto label5;

     label4:
        $r38 := @caughtexception;
        r14 = $r38;
        virtualinvoke r14.<java.lang.Exception: void printStackTrace()>();
        $r39 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("Unknown LOG_AS type!!");
        r2[3] = 1;
        goto label22;

     label5:
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = r32.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r44 = virtualinvoke r8.<java.util.Calendar: java.util.Date getTime()>();
        $r45 = virtualinvoke r9.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r44);
        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");
        $r50 = r32.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String fieldnotes>;
        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        r33 = virtualinvoke r53.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16");
        r2[4] = 1;

     label7:
        goto label9;

     label8:
        $r54 := @caughtexception;
        r15 = $r54;
        virtualinvoke r15.<java.io.UnsupportedEncodingException: void printStackTrace()>();
        r2[5] = 1;

     label9:
        $r55 = new java.util.ArrayList;
        specialinvoke $r55.<java.util.ArrayList: void <init>()>();
        r56 = $r55;
        r57 = null;

     label10:
        r57 = virtualinvoke r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret _encode_multipart_formdata(java.util.Hashtable,java.lang.String,java.lang.String,byte[])>(r12, "ctl00$ContentBody$FieldNoteLoader", "geocache_visits.txt", r33);
        r2[6] = 1;

     label11:
        goto label13;

     label12:
        $r58 := @caughtexception;
        r59 = $r58;
        virtualinvoke r59.<java.io.IOException: void printStackTrace()>();
        r2[7] = 1;

     label13:
        $r60 = new org.apache.http.message.BasicNameValuePair;
        $r61 = r57.<com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: java.lang.String encoding>;
        specialinvoke $r60.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("Content-Type", $r61);
        interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r60);
        $r62 = new org.apache.http.message.BasicNameValuePair;
        $r63 = r57.<com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: java.io.ByteArrayOutputStream data>;
        $i1 = virtualinvoke $r63.<java.io.ByteArrayOutputStream: int size()>();
        $r64 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);
        specialinvoke $r62.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("Content-Length", $r64);
        interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r62);
        $r65 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r65.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)");
        interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r65);
        $r66 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r66.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("Pragma", "no-cache");
        interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r66);
        $r67 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r68 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL>;
        $r69 = r57.<com.zoffcc.applications.aagtl.FieldnotesUploader$data_ret: java.io.ByteArrayOutputStream data>;
        $r70 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r71 = virtualinvoke $r67.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_reader_stream(java.lang.String,java.util.List,java.io.ByteArrayOutputStream,java.lang.Boolean)>($r68, r56, $r69, $r70);
        $i2 = virtualinvoke r71.<java.lang.String: int indexOf(java.lang.String)>("records were successfully uploaded");
        r2[8] = 1;
        if $i2 == -1 goto label20;

        r16 = r32;
        r16.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as> = 0;
        $r72 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r73 = $r72.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r74 = $r73.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r74.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();

     label14:
        $r75 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r76 = $r75.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r77 = $r76.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r77.<com.zoffcc.applications.aagtl.PointProvider: void reset_point_fn(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r16);
        $r78 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r79 = $r78.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r80 = $r79.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r80.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();

     label15:
        $r81 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r82 = $r81.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r83 = $r82.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r83.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r2[9] = 1;
        goto label19;

     label16:
        $r84 := @caughtexception;

     label17:
        r17 = $r84;

     label18:
        $r85 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r86 = $r85.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r87 = $r86.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r87.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r2[10] = 1;
        throw r17;

     label19:
        r2[11] = 1;
        goto label21;

     label20:
        $r88 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>(r71);
        $r89 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>("Fieldnote upload ERROR");
        r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r2[12] = 1;

     label21:
        r2[13] = 1;
        goto label1;

     label22:
        r2[14] = 1;
        return r3;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public java.lang.Boolean upload_v2()
    {
        com.zoffcc.applications.aagtl.FieldnotesUploader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r8, $r9, r14, r15, r23, $r30, r31, $r34, r38, $r44, $r46, r54, r58, r64, $r68, r71, r75, r80, r86, $r90, r93, r97, r102, r108, $r112, r115, r119, r124, r130, $r134, r137, $r141, r144, r148, r153, r160, r164, $r165, $r175, $r178, $r182, $r191, $r194, $r199, $r204, $r210, $r213, $r215, $r216, $r217, $r226;
        java.util.regex.Pattern r5;
        java.util.regex.Matcher r6;
        java.io.ByteArrayInputStream r7, $r32;
        java.io.UnsupportedEncodingException r10, $r36;
        java.util.ArrayList r11, $r39;
        java.util.Hashtable r12, $r40, $r187, $r195, $r221, r222;
        java.net.URL r16, $r45;
        java.net.MalformedURLException r17, $r47;
        java.io.IOException r18, r20, r21, $r50, $r57, $r167, $r168, r169, $r183, r184, $r201, r202, $r219, r220;
        java.io.DataOutputStream r19, $r55;
        java.io.BufferedReader r22, $r172;
        java.util.Set r24;
        java.util.Iterator r25;
        java.util.Map$Entry r26;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Boolean r27;
        com.zoffcc.applications.aagtl.HTMLDownloader $r28, $r29, $r37, $r206;
        byte[] $r33, $r35;
        java.net.HttpURLConnection r48;
        java.net.URLConnection $r49;
        java.net.ProtocolException $r51, r52;
        java.lang.Object[] $r53, $r67, $r89, $r111, $r133, $r140;
        java.io.OutputStream $r56;
        java.lang.StringBuilder $r59, $r60, $r61, $r62, $r63, $r65, $r66, $r69, $r70, $r72, $r73, $r74, $r76, $r77, $r78, $r79, $r81, $r82, $r83, $r84, $r85, $r87, $r88, $r91, $r92, $r94, $r95, $r96, $r98, $r99, $r100, $r101, $r103, $r104, $r105, $r106, $r107, $r109, $r110, $r113, $r114, $r116, $r117, $r118, $r120, $r121, $r122, $r123, $r125, $r126, $r127, $r128, $r129, $r131, $r132, $r135, $r136, $r138, $r139, $r142, $r143, $r145, $r146, $r147, $r149, $r150, $r151, $r152, $r154, $r155, $r156, $r157, $r158, $r159, $r161, $r162, $r163, $r176, $r179, $r180, $r181, $r209, $r211, $r212, $r214;
        moz.http.HttpData $r170, r171;
        java.io.InputStreamReader $r173;
        java.io.InputStream $r174;
        java.util.Map r185;
        boolean $z3, $z4;
        java.lang.Object $r186, $r188, $r189, $r193, $r196, $r197;
        java.util.List $r190, $r198;
        com.zoffcc.applications.aagtl.ClientHttpRequest $r203, r205;
        java.lang.String[] r207;
        java.io.PrintStream $r208;

        r0 := @this: com.zoffcc.applications.aagtl.FieldnotesUploader;
        $r1 = <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r28 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        virtualinvoke $r28.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean login()>();
        $r29 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        $r30 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL>;
        r3 = virtualinvoke $r29.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String getUrlData(java.lang.String)>($r30);
        r4 = "";
        r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"([^\"]+)\" />");
        r6 = virtualinvoke r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);
        virtualinvoke r6.<java.util.regex.Matcher: boolean find()>();
        r31 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        r7 = null;
        r8 = "";

     label1:
        $r32 = new java.io.ByteArrayInputStream;
        $r9 = "GC2BNHP,2010-11-07T14:00Z,Write note,\"bla bla\"";
        $r33 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");
        specialinvoke $r32.<java.io.ByteArrayInputStream: void <init>(byte[])>($r33);
        r7 = $r32;
        $r34 = "GC2BNHP,2010-11-07T20:50Z,Write note,\"bla bla\"";
        $r35 = virtualinvoke $r34.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");
        r8 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r36 := @caughtexception;
        r10 = $r36;
        virtualinvoke r10.<java.io.UnsupportedEncodingException: void printStackTrace()>();
        r2[1] = 1;

     label4:
        $r37 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        r38 = virtualinvoke $r37.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String getCookies()>();
        $r39 = new java.util.ArrayList;
        specialinvoke $r39.<java.util.ArrayList: void <init>()>();
        r11 = $r39;
        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);
        $r40 = new java.util.Hashtable;
        specialinvoke $r40.<java.util.Hashtable: void <init>()>();
        r12 = $r40;
        virtualinvoke r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ctl00$ContentBody$btnUpload", "Upload Field Note");
        virtualinvoke r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ctl00$ContentBody$chkSuppressDate", "");
        virtualinvoke r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("__VIEWSTATE", r31);
        $r44 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL>;
        staticinvoke <moz.http.HttpRequest: moz.http.HttpData post(java.lang.String,java.util.Hashtable,java.util.ArrayList,java.lang.String)>($r44, r12, r11, r38);
        r14 = "----------ThIs_Is_tHe_bouNdaRY_$";
        r15 = "\r\n";
        r16 = null;

     label5:
        $r45 = new java.net.URL;
        $r46 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL>;
        specialinvoke $r45.<java.net.URL: void <init>(java.lang.String)>($r46);
        r16 = $r45;
        r2[2] = 1;

     label6:
        goto label8;

     label7:
        $r47 := @caughtexception;
        r17 = $r47;
        virtualinvoke r17.<java.net.MalformedURLException: void printStackTrace()>();
        r2[3] = 1;

     label8:
        r48 = null;

     label9:
        $r49 = virtualinvoke r16.<java.net.URL: java.net.URLConnection openConnection()>();
        r48 = (java.net.HttpURLConnection) $r49;
        r2[4] = 1;

     label10:
        goto label12;

     label11:
        $r50 := @caughtexception;
        r18 = $r50;
        virtualinvoke r18.<java.io.IOException: void printStackTrace()>();
        r2[5] = 1;

     label12:
        virtualinvoke r48.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);
        virtualinvoke r48.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);
        virtualinvoke r48.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

     label13:
        virtualinvoke r48.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");
        r2[6] = 1;

     label14:
        goto label16;

     label15:
        $r51 := @caughtexception;
        r52 = $r51;
        virtualinvoke r52.<java.net.ProtocolException: void printStackTrace()>();
        r2[7] = 1;

     label16:
        virtualinvoke r48.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cookie", r38);
        virtualinvoke r48.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)");
        virtualinvoke r48.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Pragma", "no-cache");
        $r53 = newarray (java.lang.Object)[1];
        $r53[0] = r14;
        r54 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("multipart/form-data; boundary=%s", $r53);
        virtualinvoke r48.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", r54);
        r19 = null;

     label17:
        $r55 = new java.io.DataOutputStream;
        $r56 = virtualinvoke r48.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();
        specialinvoke $r55.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r56);
        r19 = $r55;
        r2[8] = 1;

     label18:
        goto label20;

     label19:
        $r57 := @caughtexception;
        r20 = $r57;
        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();
        r2[9] = 1;

     label20:
        r58 = "";
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();
        $r65 = new java.lang.StringBuilder;
        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);
        $r67 = newarray (java.lang.Object)[1];
        $r67[0] = "ctl00$ContentBody$btnUpload";
        $r68 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Content-Disposition: form-data; name=\"%s\"", $r67);
        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
        $r72 = new java.lang.StringBuilder;
        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();
        $r76 = new java.lang.StringBuilder;
        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r75);
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upload Field Note");
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();
        $r81 = new java.lang.StringBuilder;
        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
        $r87 = new java.lang.StringBuilder;
        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r86);
        $r89 = newarray (java.lang.Object)[1];
        $r89[0] = "ctl00$ContentBody$chkSuppressDate";
        $r90 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Content-Disposition: form-data; name=\"%s\"", $r89);
        $r91 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);
        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();
        $r94 = new java.lang.StringBuilder;
        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();
        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r93);
        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();
        $r98 = new java.lang.StringBuilder;
        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();
        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r97);
        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();
        $r103 = new java.lang.StringBuilder;
        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();
        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r102);
        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();
        $r109 = new java.lang.StringBuilder;
        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();
        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r108);
        $r111 = newarray (java.lang.Object)[1];
        $r111[0] = "__VIEWSTATE";
        $r112 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Content-Disposition: form-data; name=\"%s\"", $r111);
        $r113 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);
        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();
        $r116 = new java.lang.StringBuilder;
        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();
        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r115);
        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();
        $r120 = new java.lang.StringBuilder;
        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();
        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r119);
        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);
        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();
        $r125 = new java.lang.StringBuilder;
        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();
        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r124);
        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();
        $r131 = new java.lang.StringBuilder;
        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();
        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r130);
        $r133 = newarray (java.lang.Object)[2];
        $r133[0] = "ctl00$ContentBody$FieldNoteLoader";
        $r133[1] = "geocache_visits.txt";
        $r134 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Content-Disposition: form-data; name=\"%s\"; filename=\"%s\"", $r133);
        $r135 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r134);
        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();
        $r138 = new java.lang.StringBuilder;
        specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();
        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r137);
        $r140 = newarray (java.lang.Object)[1];
        $r140[0] = "text/plain";
        $r141 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Content-Type: %s", $r140);
        $r142 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r141);
        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.String toString()>();
        $r145 = new java.lang.StringBuilder;
        specialinvoke $r145.<java.lang.StringBuilder: void <init>()>();
        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r144);
        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>();
        $r149 = new java.lang.StringBuilder;
        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();
        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r148);
        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();
        $r154 = new java.lang.StringBuilder;
        specialinvoke $r154.<java.lang.StringBuilder: void <init>()>();
        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r153);
        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.String toString()>();
        $r161 = new java.lang.StringBuilder;
        specialinvoke $r161.<java.lang.StringBuilder: void <init>()>();
        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r160);
        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r165 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String SendPost(java.lang.String,java.lang.String,java.lang.String)>($r165, r164, r38);
        r2[10] = 1;

     label22:
        goto label24;

     label23:
        $r167 := @caughtexception;
        r21 = $r167;
        virtualinvoke r21.<java.io.IOException: void printStackTrace()>();
        r2[11] = 1;

     label24:
        virtualinvoke r19.<java.io.DataOutputStream: void writeBytes(java.lang.String)>(r164);
        virtualinvoke r19.<java.io.DataOutputStream: void flush()>();
        r2[12] = 1;

     label25:
        goto label27;

     label26:
        $r168 := @caughtexception;
        r169 = $r168;
        virtualinvoke r169.<java.io.IOException: void printStackTrace()>();
        r2[13] = 1;

     label27:
        $r170 = new moz.http.HttpData;
        specialinvoke $r170.<moz.http.HttpData: void <init>()>();
        r171 = $r170;
        r22 = null;

     label28:
        $r172 = new java.io.BufferedReader;
        $r173 = new java.io.InputStreamReader;
        $r174 = virtualinvoke r48.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();
        specialinvoke $r173.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r174);
        $i1 = <com.zoffcc.applications.aagtl.HTMLDownloader: int large_buffer_size>;
        specialinvoke $r172.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r173, $i1);
        r22 = $r172;
        r2[14] = 1;

     label29:
        $r175 = virtualinvoke r22.<java.io.BufferedReader: java.lang.String readLine()>();
        r23 = $r175;
        r2[15] = 1;
        if $r175 == null goto label30;

        $r176 = new java.lang.StringBuilder;
        specialinvoke $r176.<java.lang.StringBuilder: void <init>()>();
        $r178 = r171.<moz.http.HttpData: java.lang.String content>;
        $r179 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r178);
        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);
        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.String toString()>();
        r171.<moz.http.HttpData: java.lang.String content> = $r182;
        r2[16] = 1;
        goto label29;

     label30:
        r2[17] = 1;

     label31:
        goto label33;

     label32:
        $r183 := @caughtexception;
        r184 = $r183;
        virtualinvoke r184.<java.io.IOException: void printStackTrace()>();
        r2[18] = 1;

     label33:
        r185 = virtualinvoke r48.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();
        r24 = interfaceinvoke r185.<java.util.Map: java.util.Set entrySet()>();
        r25 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>();
        r2[19] = 1;

     label34:
        $z3 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
        r2[20] = 1;
        if $z3 == 0 goto label36;

        $r186 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();
        r26 = (java.util.Map$Entry) $r186;
        $r187 = r171.<moz.http.HttpData: java.util.Hashtable headers>;
        $r188 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r189 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r190 = (java.util.List) $r189;
        $r191 = virtualinvoke $r190.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r187.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r188, $r191);
        $r193 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r194 = (java.lang.String) $r193;
        $z4 = virtualinvoke $r194.<java.lang.String: boolean equals(java.lang.Object)>("set-cookie");
        r2[21] = 1;
        if $z4 == 0 goto label35;

        $r195 = r171.<moz.http.HttpData: java.util.Hashtable cookies>;
        $r196 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r197 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r198 = (java.util.List) $r197;
        $r199 = virtualinvoke $r198.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r195.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r196, $r199);
        r2[22] = 1;

     label35:
        r2[23] = 1;
        goto label34;

     label36:
        virtualinvoke r19.<java.io.DataOutputStream: void close()>();
        virtualinvoke r22.<java.io.BufferedReader: void close()>();
        r2[24] = 1;

     label37:
        goto label39;

     label38:
        $r201 := @caughtexception;
        r202 = $r201;
        virtualinvoke r202.<java.io.IOException: void printStackTrace()>();
        r2[25] = 1;

     label39:
        $r203 = new com.zoffcc.applications.aagtl.ClientHttpRequest;
        $r204 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL>;
        specialinvoke $r203.<com.zoffcc.applications.aagtl.ClientHttpRequest: void <init>(java.lang.String)>($r204);
        r205 = $r203;
        $r206 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: com.zoffcc.applications.aagtl.HTMLDownloader downloader>;
        r207 = virtualinvoke $r206.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String[] getCookies2()>();
        i0 = 0;
        r2[26] = 1;

     label40:
        $i2 = lengthof r207;
        r2[27] = 1;
        if i0 >= $i2 goto label41;

        $r208 = <java.lang.System: java.io.PrintStream out>;
        $r209 = new java.lang.StringBuilder;
        specialinvoke $r209.<java.lang.StringBuilder: void <init>()>();
        $i3 = i0 * 2;
        $r210 = r207[$i3];
        $r211 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r210);
        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $i4 = i0 * 2;
        $i5 = $i4 + 1;
        $r213 = r207[$i5];
        $r214 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r213);
        $r215 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r208.<java.io.PrintStream: void println(java.lang.String)>($r215);
        $i6 = i0 * 2;
        $r216 = r207[$i6];
        $i7 = i0 * 2;
        $i8 = $i7 + 1;
        $r217 = r207[$i8];
        virtualinvoke r205.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setCookie(java.lang.String,java.lang.String)>($r216, $r217);
        i0 = i0 + 1;
        r2[28] = 1;
        goto label40;

     label41:
        virtualinvoke r205.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.String)>("ctl00$ContentBody$btnUpload", "Upload Field Note");
        virtualinvoke r205.<com.zoffcc.applications.aagtl.ClientHttpRequest: void setParameter(java.lang.String,java.lang.String,java.io.InputStream)>("ctl00$ContentBody$FieldNoteLoader", "geocache_visits.txt", r7);
        virtualinvoke r205.<com.zoffcc.applications.aagtl.ClientHttpRequest: java.io.InputStream post()>();
        r2[29] = 1;

     label42:
        goto label44;

     label43:
        $r219 := @caughtexception;
        r220 = $r219;
        virtualinvoke r220.<java.io.IOException: void printStackTrace()>();
        r2[30] = 1;

     label44:
        virtualinvoke r11.<java.util.ArrayList: void clear()>();
        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);
        $r221 = new java.util.Hashtable;
        specialinvoke $r221.<java.util.Hashtable: void <init>()>();
        r222 = $r221;
        virtualinvoke r222.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ctl00$ContentBody$btnUpload", "Upload Field Note");
        virtualinvoke r222.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ctl00$ContentBody$chkSuppressDate", "");
        virtualinvoke r222.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("__VIEWSTATE", r31);
        $r226 = r0.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.String URL>;
        staticinvoke <moz.http.HttpRequest: moz.http.HttpData post(java.lang.String,java.util.Hashtable,java.util.ArrayList,java.lang.String)>($r226, r222, r11, r38);
        r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r2[31] = 1;
        return r27;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch java.net.MalformedURLException from label5 to label6 with label7;
        catch java.io.IOException from label9 to label10 with label11;
        catch java.net.ProtocolException from label13 to label14 with label15;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.io.IOException from label28 to label31 with label32;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.io.IOException from label39 to label42 with label43;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <com.zoffcc.applications.aagtl.FieldnotesUploader: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[8];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[12];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[10];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[15];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[32];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/FieldnotesUploader", -6677057899643971333L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1 extends java.lang.Thread
{
    android.os.Handler mHandler;
    java.lang.Boolean do_close;
    final com.zoffcc.applications.aagtl.GCacheView this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.GCacheView, android.os.Handler)
    {
        com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1 r0;
        com.zoffcc.applications.aagtl.GCacheView r1;
        android.os.Handler r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Boolean $r5;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1;
        r1 := @parameter0: com.zoffcc.applications.aagtl.GCacheView;
        r2 := @parameter1: android.os.Handler;
        $r3 = <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: com.zoffcc.applications.aagtl.GCacheView this$0> = r1;
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: java.lang.Boolean do_close> = $r5;
        r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: android.os.Handler mHandler> = r2;
        r4[0] = 1;
        return;
    }

    public void close_dialog()
    {
        com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean $r3;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1;
        $r1 = <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: java.lang.Boolean do_close> = $r3;
        r2[0] = 1;
        return;
    }

    public void run()
    {
        com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1 r0;
        boolean[][] $r1;
        boolean[] r2;
        android.os.Message r3, r13;
        android.os.Bundle r4, $r7, $r14, r15;
        java.lang.InterruptedException r5, $r10;
        android.os.Handler $r6, $r8, $r12, $r16;
        java.lang.Boolean $r9, $r11;
        boolean $z1;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1;
        $r1 = <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r6 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: android.os.Handler mHandler>;
        r3 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();
        $r7 = new android.os.Bundle;
        specialinvoke $r7.<android.os.Bundle: void <init>()>();
        r4 = $r7;
        virtualinvoke r4.<android.os.Bundle: void putInt(java.lang.String,int)>("command", 0);
        virtualinvoke r3.<android.os.Message: void setData(android.os.Bundle)>(r4);
        $r8 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: android.os.Handler mHandler>;
        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);
        r2[0] = 1;

     label1:
        $r9 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: java.lang.Boolean do_close>;
        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();
        r2[1] = 1;
        if $z1 != 0 goto label5;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);
        r2[2] = 1;

     label3:
        goto label1;

     label4:
        $r10 := @caughtexception;
        r5 = $r10;
        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: java.lang.Boolean do_close> = $r11;
        r2[3] = 1;
        goto label1;

     label5:
        $r12 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: android.os.Handler mHandler>;
        r13 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage()>();
        $r14 = new android.os.Bundle;
        specialinvoke $r14.<android.os.Bundle: void <init>()>();
        r15 = $r14;
        virtualinvoke r15.<android.os.Bundle: void putInt(java.lang.String,int)>("command", 1);
        virtualinvoke r13.<android.os.Message: void setData(android.os.Bundle)>(r15);
        $r16 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: android.os.Handler mHandler>;
        virtualinvoke $r16.<android.os.Handler: boolean sendMessage(android.os.Message)>(r13);
        r2[4] = 1;
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/GCacheView$Thread_gcv1", 2800570479885642663L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2 extends java.lang.Thread
{
    com.zoffcc.applications.aagtl.GCacheView main;
    final com.zoffcc.applications.aagtl.GCacheView this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.GCacheView, com.zoffcc.applications.aagtl.GCacheView)
    {
        com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2 r0;
        com.zoffcc.applications.aagtl.GCacheView r1, r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2;
        r1 := @parameter0: com.zoffcc.applications.aagtl.GCacheView;
        r2 := @parameter1: com.zoffcc.applications.aagtl.GCacheView;
        $r3 = <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView this$0> = r1;
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main> = null;
        r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main> = r2;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2 r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1 r3, $r6;
        android.os.Message r4;
        android.os.Bundle r5, $r23;
        com.zoffcc.applications.aagtl.GCacheView $r7, $r8, $r11, $r14, $r17, $r19, $r20, $r24;
        com.zoffcc.applications.aagtl.aagtl $r9, $r12, $r21, $r25;
        android.os.Handler $r10, $r22, $r26;
        com.zoffcc.applications.aagtl.CacheDownloader $r13;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r15;
        java.lang.Boolean $r18;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2;
        $r1 = <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r6 = new com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1;
        $r7 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView this$0>;
        $r8 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main>;
        $r9 = $r8.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r10 = $r9.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler dl_handler>;
        specialinvoke $r6.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: void <init>(com.zoffcc.applications.aagtl.GCacheView,android.os.Handler)>($r7, $r10);
        r3 = $r6;
        virtualinvoke r3.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: void start()>();
        $r11 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main>;
        $r12 = $r11.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CacheDownloader cdol>;
        $r14 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main>;
        $r15 = $r14.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        virtualinvoke $r13.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.GeocacheCoordinate update_coordinate(com.zoffcc.applications.aagtl.GeocacheCoordinate)>($r15);
        $r17 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main>;
        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r17.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean download_details_thread_finished> = $r18;
        $r19 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main>;
        $r19.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded> = 2;
        $r20 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main>;
        $r21 = $r20.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r22 = $r21.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler dl_handler>;
        r4 = virtualinvoke $r22.<android.os.Handler: android.os.Message obtainMessage()>();
        $r23 = new android.os.Bundle;
        specialinvoke $r23.<android.os.Bundle: void <init>()>();
        r5 = $r23;
        virtualinvoke r5.<android.os.Bundle: void putInt(java.lang.String,int)>("command", 2);
        virtualinvoke r4.<android.os.Message: void setData(android.os.Bundle)>(r5);
        $r24 = r0.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: com.zoffcc.applications.aagtl.GCacheView main>;
        $r25 = $r24.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r26 = $r25.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler dl_handler>;
        virtualinvoke $r26.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);
        virtualinvoke r3.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv1: void close_dialog()>();
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/GCacheView$Thread_gcv2", 5090709630664030409L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.GCacheView extends android.widget.ImageView
{
    com.zoffcc.applications.aagtl.GeocacheCoordinate gc;
    android.graphics.Paint box_paint;
    android.graphics.Paint text_paint;
    int details_loaded;
    java.lang.String gc_name_current;
    java.lang.String gc_name_previous;
    int get_gc_from_db;
    java.lang.Boolean need_repaint;
    java.lang.Boolean override_download;
    public java.lang.Boolean download_details_thread_finished;
    public static final int SHOW_DESC;
    public static final int SHOW_SHORT_DESC;
    public static final int SHOW_LOGS;
    public static final int SHOW_HINTS;
    public static final int SHOW_WAYPOINTS;
    public int show_field;
    com.zoffcc.applications.aagtl.aagtl main_aagtl;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.GCacheView r0;
        android.content.Context r1;
        com.zoffcc.applications.aagtl.aagtl r2;
        boolean[][] $r3;
        boolean[] r4;
        android.graphics.Paint $r5, $r6, $r10, $r11, $r12;
        java.lang.Boolean $r7, $r8, $r9;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: com.zoffcc.applications.aagtl.aagtl;
        $r3 = <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context)>(r1);
        r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc> = null;
        $r5 = new android.graphics.Paint;
        specialinvoke $r5.<android.graphics.Paint: void <init>(int)>(0);
        r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint box_paint> = $r5;
        $r6 = new android.graphics.Paint;
        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(0);
        r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint> = $r6;
        r0.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded> = 0;
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.String gc_name_current> = "";
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.String gc_name_previous> = "";
        r0.<com.zoffcc.applications.aagtl.GCacheView: int get_gc_from_db> = 0;
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r7;
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean override_download> = $r8;
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean download_details_thread_finished> = $r9;
        r0.<com.zoffcc.applications.aagtl.GCacheView: int show_field> = 2;
        $r10 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>(-1);
        $r11 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke $r11.<android.graphics.Paint: void setTextSize(float)>(16.0F);
        $r12 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke $r12.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl> = r2;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GCacheView: void clear_stuff()>();
        r4[0] = 1;
        return;
    }

    public void set_cache(com.zoffcc.applications.aagtl.GeocacheCoordinate)
    {
        com.zoffcc.applications.aagtl.GCacheView r0;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r1, $r6;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.NullPointerException r4, $r8;
        java.lang.Boolean $r5;
        java.lang.String $r7, $r9, $r10, $r11;
        boolean $z0;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView;
        r1 := @parameter0: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r2 = <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r5;

     label1:
        $r6 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r7 = $r6.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.String gc_name_previous> = $r7;
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;
        r4 = $r8;
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.String gc_name_previous> = "";
        r3[1] = 1;

     label4:
        $r9 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.String gc_name_current> = $r9;
        $r10 = r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.String gc_name_current>;
        $r11 = r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.String gc_name_previous>;
        $z0 = virtualinvoke $r10.<java.lang.String: boolean matches(java.lang.String)>($r11);
        r3[2] = 1;
        if $z0 != 0 goto label5;

        r0.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded> = 0;
        r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc> = r1;
        r0.<com.zoffcc.applications.aagtl.GCacheView: int show_field> = 2;
        r3[3] = 1;

     label5:
        r3[4] = 1;
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public com.zoffcc.applications.aagtl.GeocacheCoordinate get_cache()
    {
        com.zoffcc.applications.aagtl.GCacheView r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r3;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView;
        $r1 = <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        r2[0] = 1;
        return $r3;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.zoffcc.applications.aagtl.GCacheView r0;
        android.graphics.Canvas r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2 r4, $r92;
        java.lang.String r5, $r8, $r11, $r14, $r19, $r21, $r26, $r28, $r34, $r41, $r43, $r45, $r52, $r59, $r61, $r66, $r68, $r71, $r74, $r79, $r81, $r86, $r88, $r97, $r100, $r103, $r108, $r110, $r118, $r120, $r125, $r127, $r132, $r134, $r140, $r143, $r146, $r151, $r153, $r161, $r163, $r168, $r170, $r175, $r177, r181, $r187, r191;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r6, $r7, $r10, $r13, $r18, $r25, $r33, $r35, $r40, $r44, $r46, $r51, $r53, $r58, $r64, $r65, $r67, $r70, $r73, $r78, $r85, $r96, $r99, $r102, $r107, $r115, $r124, $r131, $r139, $r142, $r145, $r150, $r158, $r167, $r174, $r180, $r182, $r183, $r184, $r185;
        android.graphics.Paint $r9, $r12, $r15, $r22, $r29, $r30, $r48, $r69, $r72, $r75, $r82, $r89, $r90, $r98, $r101, $r104, $r111, $r121, $r128, $r135, $r136, $r141, $r144, $r147, $r154, $r164, $r171, $r178, $r179;
        java.lang.StringBuilder $r16, $r17, $r20, $r23, $r24, $r27, $r38, $r39, $r42, $r56, $r57, $r60, $r76, $r77, $r80, $r83, $r84, $r87, $r105, $r106, $r109, $r112, $r113, $r119, $r122, $r123, $r126, $r129, $r130, $r133, $r148, $r149, $r152, $r155, $r156, $r162, $r165, $r166, $r169, $r172, $r173, $r176, $r188, $r189, $r190;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        com.zoffcc.applications.aagtl.aagtl $r31, $r49, $r192, $r194, $r196, $r199, $r201;
        com.zoffcc.applications.aagtl.PointProvider $r32, $r50;
        java.io.PrintStream $r36, $r37, $r54, $r55, $r62;
        java.lang.Boolean $r47, $r63, $r91, $r93, $r94, $r95, $r137, $r138;
        boolean $z0, $z1;
        java.util.HashMap $r114, $r157;
        java.lang.Integer $r116, $r159;
        java.lang.Object $r117, $r160;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.text.Spanned $r186;
        android.webkit.WebView $r193, $r195, $r197, $r200, $r202;
        android.webkit.WebSettings $r198;
        java.lang.NullPointerException $r203, r204;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView;
        r1 := @parameter0: android.graphics.Canvas;
        $r2 = <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r6 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        r3[0] = 1;
        if $r6 != null goto label1;

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>(-65536);
        r3[1] = 1;
        goto label20;

     label1:
        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>(-16777216);
        $r7 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r9 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r8, 10.0F, 50.0F, $r9);
        $r10 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $r12 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r11, 10.0F, 80.0F, $r12);
        $r13 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r14 = $r13.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        $r15 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r14, 10.0F, 110.0F, $r15);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size: ");
        $r18 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i0 = $r18.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int size>;
        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);
        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        $r22 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r21, 10.0F, 140.0F, $r22);
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terrain: ");
        $r25 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i1 = $r25.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int terrain>;
        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);
        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        $r29 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r28, 10.0F, 170.0F, $r29);
        $i2 = r0.<com.zoffcc.applications.aagtl.GCacheView: int get_gc_from_db>;
        r3[2] = 1;
        if $i2 != 1 goto label3;

        $r30 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>("checking database ...", 10.0F, 230.0F, $r30);
        $r31 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r32 = $r31.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        $r33 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r34 = $r33.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r35 = virtualinvoke $r32.<com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.GeocacheCoordinate get_point_full(java.lang.String)>($r34);
        r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc> = $r35;
        $r36 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("checking database");
        $r37 = <java.lang.System: java.io.PrintStream out>;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DESC=");
        $r40 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r41 = $r40.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc>;
        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r43);
        $r44 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r45 = $r44.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc>;
        r3[3] = 1;
        if $r45 != null goto label2;

        $r46 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r46.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc> = "please update details";
        r3[4] = 1;

     label2:
        r0.<com.zoffcc.applications.aagtl.GCacheView: int get_gc_from_db> = 0;
        r3[5] = 1;

     label3:
        $i3 = r0.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded>;
        r3[6] = 1;
        if $i3 != 0 goto label7;

        $r47 = r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean override_download>;
        $z0 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();
        r3[7] = 1;
        if $z0 != 0 goto label4;

        $r48 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>("checking database ...", 10.0F, 230.0F, $r48);
        $r49 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r50 = $r49.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        $r51 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r52 = $r51.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r53 = virtualinvoke $r50.<com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.GeocacheCoordinate get_point_full(java.lang.String)>($r52);
        r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc> = $r53;
        $r54 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("checking database");
        $r55 = <java.lang.System: java.io.PrintStream out>;
        $r56 = new java.lang.StringBuilder;
        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DESC=");
        $r58 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r59 = $r58.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc>;
        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r61);
        r3[8] = 1;
        goto label5;

     label4:
        $r62 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("here 001");
        $r63 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean override_download> = $r63;
        $r64 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r64.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc> = null;
        r3[9] = 1;

     label5:
        $r65 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r66 = $r65.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc>;
        r3[10] = 1;
        if $r66 != null goto label6;

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>(-16777216);
        $r67 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r68 = $r67.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r69 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r68, 10.0F, 50.0F, $r69);
        $r70 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r71 = $r70.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $r72 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r71, 10.0F, 80.0F, $r72);
        $r73 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r74 = $r73.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        $r75 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r74, 10.0F, 110.0F, $r75);
        $r76 = new java.lang.StringBuilder;
        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size: ");
        $r78 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i4 = $r78.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int size>;
        $r79 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);
        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();
        $r82 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r81, 10.0F, 140.0F, $r82);
        $r83 = new java.lang.StringBuilder;
        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terrain: ");
        $r85 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i5 = $r85.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int terrain>;
        $r86 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5);
        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();
        $r89 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r88, 10.0F, 170.0F, $r89);
        $r90 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>("downloading ...", 10.0F, 230.0F, $r90);
        $r91 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean download_details_thread_finished> = $r91;
        r0.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded> = 1;
        $r92 = new com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2;
        specialinvoke $r92.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: void <init>(com.zoffcc.applications.aagtl.GCacheView,com.zoffcc.applications.aagtl.GCacheView)>(r0, r0);
        r4 = $r92;
        virtualinvoke r4.<com.zoffcc.applications.aagtl.GCacheView$Thread_gcv2: void start()>();
        $r93 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r93;
        r3[11] = 1;
        goto label8;

     label6:
        $r94 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean download_details_thread_finished> = $r94;
        r0.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded> = 2;
        $r95 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r95;
        r3[12] = 1;
        goto label8;

     label7:
        $i6 = r0.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded>;
        r3[13] = 1;
        if $i6 != 1 goto label8;

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>(-16777216);
        $r96 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r97 = $r96.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r98 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r97, 10.0F, 50.0F, $r98);
        $r99 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r100 = $r99.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $r101 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r100, 10.0F, 80.0F, $r101);
        $r102 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r103 = $r102.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        $r104 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r103, 10.0F, 110.0F, $r104);
        $r105 = new java.lang.StringBuilder;
        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();
        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size: ");
        $r107 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i7 = $r107.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int size>;
        $r108 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);
        $r109 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);
        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();
        $r111 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r110, 10.0F, 140.0F, $r111);
        $r112 = new java.lang.StringBuilder;
        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();
        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status: ");
        $r114 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap STATUS_HASH>;
        $r115 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i8 = $r115.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status>;
        $r116 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);
        $r117 = virtualinvoke $r114.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r116);
        $r118 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r117);
        $r119 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);
        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();
        $r121 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r120, 150.0F, 140.0F, $r121);
        $r122 = new java.lang.StringBuilder;
        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();
        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("diff: ");
        $r124 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i9 = $r124.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int difficulty>;
        $f0 = (float) $i9;
        $f1 = $f0 / 10.0F;
        $r125 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f1);
        $r126 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r125);
        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();
        $r128 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r127, 10.0F, 170.0F, $r128);
        $r129 = new java.lang.StringBuilder;
        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();
        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terrain: ");
        $r131 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i10 = $r131.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int terrain>;
        $f2 = (float) $i10;
        $f3 = $f2 / 10.0F;
        $r132 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f3);
        $r133 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r132);
        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();
        $r135 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r134, 10.0F, 200.0F, $r135);
        $r136 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>("downloading ...", 10.0F, 230.0F, $r136);
        r3[14] = 1;

     label8:
        $i11 = r0.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded>;
        r3[15] = 1;
        if $i11 != 2 goto label17;

        $r137 = r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint>;
        $z1 = virtualinvoke $r137.<java.lang.Boolean: boolean booleanValue()>();
        r3[16] = 1;
        if $z1 != 0 goto label10;

        r3[17] = 1;

     label9:
        return;

     label10:
        $r138 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r138;
        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>(-16777216);
        $r139 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r140 = $r139.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r141 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r140, 10.0F, 50.0F, $r141);
        $r142 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r143 = $r142.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $r144 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r143, 10.0F, 80.0F, $r144);
        $r145 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r146 = $r145.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        $r147 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r146, 10.0F, 110.0F, $r147);
        $r148 = new java.lang.StringBuilder;
        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();
        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size: ");
        $r150 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i12 = $r150.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int size>;
        $r151 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i12);
        $r152 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r151);
        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();
        $r154 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r153, 10.0F, 140.0F, $r154);
        $r155 = new java.lang.StringBuilder;
        specialinvoke $r155.<java.lang.StringBuilder: void <init>()>();
        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status: ");
        $r157 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap STATUS_HASH>;
        $r158 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i13 = $r158.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status>;
        $r159 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);
        $r160 = virtualinvoke $r157.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r159);
        $r161 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r160);
        $r162 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r161);
        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.String toString()>();
        $r164 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r163, 150.0F, 140.0F, $r164);
        $r165 = new java.lang.StringBuilder;
        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();
        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("diff: ");
        $r167 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i14 = $r167.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int difficulty>;
        $f4 = (float) $i14;
        $f5 = $f4 / 10.0F;
        $r168 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f5);
        $r169 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r168);
        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();
        $r171 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r170, 10.0F, 170.0F, $r171);
        $r172 = new java.lang.StringBuilder;
        specialinvoke $r172.<java.lang.StringBuilder: void <init>()>();
        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("terrain: ");
        $r174 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $i15 = $r174.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int terrain>;
        $f6 = (float) $i15;
        $f7 = $f6 / 10.0F;
        $r175 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f7);
        $r176 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r175);
        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.String toString()>();
        $r178 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r177, 10.0F, 200.0F, $r178);
        $r179 = r0.<com.zoffcc.applications.aagtl.GCacheView: android.graphics.Paint text_paint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>("", 10.0F, 230.0F, $r179);
        $r180 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        r181 = $r180.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String shortdesc>;
        $i16 = r0.<com.zoffcc.applications.aagtl.GCacheView: int show_field>;
        r3[18] = 1;
        tableswitch($i16)
        {
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label15;
            default: goto label16;
        };

     label11:
        r3[19] = 1;
        goto label16;

     label12:
        $r182 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        r181 = $r182.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc>;
        r3[20] = 1;
        goto label16;

     label13:
        $r183 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        r181 = $r183.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String logs>;
        r3[21] = 1;
        goto label16;

     label14:
        $r184 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        r181 = $r184.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String hints>;
        r3[22] = 1;
        goto label16;

     label15:
        $r185 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        r181 = $r185.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String waypoints>;
        r3[23] = 1;

     label16:
        $r186 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>(r181);
        $r187 = virtualinvoke $r186.<java.lang.Object: java.lang.String toString()>();
        r5 = virtualinvoke $r187.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "<br>");
        $r188 = new java.lang.StringBuilder;
        specialinvoke $r188.<java.lang.StringBuilder: void <init>()>();
        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<style> * { color: #FFFFFF; } </style> ");
        $r190 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        r191 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.String toString()>();
        $r192 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r193 = $r192.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r193.<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, r191, "text/html", "UTF-8", null);
        $r194 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r195 = $r194.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r195.<android.webkit.WebView: void setBackgroundColor(int)>(-16777216);
        $r196 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r197 = $r196.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        $r198 = virtualinvoke $r197.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();
        virtualinvoke $r198.<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>(0);
        $r199 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r200 = $r199.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r200.<android.webkit.WebView: void setVisibility(int)>(0);
        $r201 = r0.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r202 = $r201.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r202.<android.webkit.WebView: void bringToFront()>();
        r3[24] = 1;

     label17:
        r3[25] = 1;

     label18:
        goto label20;

     label19:
        $r203 := @caughtexception;
        r204 = $r203;
        r3[26] = 1;

     label20:
        r3[27] = 1;
        return;

        catch java.lang.NullPointerException from label1 to label9 with label19;
        catch java.lang.NullPointerException from label10 to label18 with label19;
    }

    public void clear_stuff()
    {
        com.zoffcc.applications.aagtl.GCacheView r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView;
        $r1 = <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r2[0] = 1;
        return;
    }

    public void onSizeChanged(int, int, int, int)
    {
        com.zoffcc.applications.aagtl.GCacheView r0;
        int i0, i1, i2, i3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.GCacheView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRi()>();
        r1 = $r0[6];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[7][];
        <com.zoffcc.applications.aagtl.GCacheView: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[28];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/GCacheView", -5651516048815794467L);
        return $r0;
    }
}
final class com.zoffcc.applications.aagtl.GeocacheCoordinate$1 extends java.util.HashMap
{
    private static final long serialVersionUID;
    private static final boolean[][] $VRc;

    void <init>()
    {
        com.zoffcc.applications.aagtl.GeocacheCoordinate$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Integer $r3, $r5, $r7, $r9;

        r0 := @this: com.zoffcc.applications.aagtl.GeocacheCoordinate$1;
        $r1 = <com.zoffcc.applications.aagtl.GeocacheCoordinate$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GeocacheCoordinate$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$1: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "XXXX");
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$1: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "Found it");
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$1: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "Didn\'t find it");
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$1: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, "Write note");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.GeocacheCoordinate$1: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.GeocacheCoordinate$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/GeocacheCoordinate$1", 9263419949336L);
        return $r0;
    }
}
final class com.zoffcc.applications.aagtl.GeocacheCoordinate$2 extends java.util.HashMap
{
    private static final long serialVersionUID;
    private static final boolean[][] $VRc;

    void <init>()
    {
        com.zoffcc.applications.aagtl.GeocacheCoordinate$2 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.GeocacheCoordinate$2;
        $r1 = <com.zoffcc.applications.aagtl.GeocacheCoordinate$2: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GeocacheCoordinate$2: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$2: java.lang.Object put(java.lang.Object,java.lang.Object)>("2", "regular");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$2: java.lang.Object put(java.lang.Object,java.lang.Object)>("3", "multi");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$2: java.lang.Object put(java.lang.Object,java.lang.Object)>("4", "virtual");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$2: java.lang.Object put(java.lang.Object,java.lang.Object)>("6", "event");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$2: java.lang.Object put(java.lang.Object,java.lang.Object)>("8", "mystery");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$2: java.lang.Object put(java.lang.Object,java.lang.Object)>("11", "webcam");
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$2: java.lang.Object put(java.lang.Object,java.lang.Object)>("137", "earth");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.GeocacheCoordinate$2: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.GeocacheCoordinate$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/GeocacheCoordinate$2", 9268694138835L);
        return $r0;
    }
}
final class com.zoffcc.applications.aagtl.GeocacheCoordinate$3 extends java.util.HashMap
{
    private static final long serialVersionUID;
    private static final boolean[][] $VRc;

    void <init>()
    {
        com.zoffcc.applications.aagtl.GeocacheCoordinate$3 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Integer $r3, $r5;

        r0 := @this: com.zoffcc.applications.aagtl.GeocacheCoordinate$3;
        $r1 = <com.zoffcc.applications.aagtl.GeocacheCoordinate$3: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GeocacheCoordinate$3: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.util.HashMap: void <init>()>();
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$3: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "normal");
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate$3: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "disabled");
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.GeocacheCoordinate$3: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.GeocacheCoordinate$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/GeocacheCoordinate$3", 9257312993074L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.GeocacheCoordinate extends com.zoffcc.applications.aagtl.Coordinate implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final int LOG_NO_LOG;
    public static final int LOG_AS_FOUND;
    public static final int LOG_AS_NOTFOUND;
    public static final int LOG_AS_NOTE;
    public static final java.util.HashMap LOG_AS_HASH;
    public static final java.lang.String TYPE_REGULAR;
    public static final java.lang.String TYPE_MULTI;
    public static final java.lang.String TYPE_VIRTUAL;
    public static final java.lang.String TYPE_EVENT;
    public static final java.lang.String TYPE_MYSTERY;
    public static final java.lang.String TYPE_WEBCAM;
    public static final java.lang.String TYPE_EARTH;
    public static final java.lang.String TYPE_UNKNOWN;
    public static final java.util.HashMap GC_TYPE_HASH;
    public static final int STATUS_NORMAL;
    public static final int STATUS_DISABLED;
    public static final java.util.HashMap STATUS_HASH;
    public static final int AAGTL_STATUS_NORMAL;
    public static final int AAGTL_STATUS_FOUND;
    public static final java.lang.String LOG_TYPE_FOUND;
    public static final java.lang.String LOG_TYPE_NOTFOUND;
    public static final java.lang.String LOG_TYPE_NOTE;
    public static final java.lang.String LOG_TYPE_MAINTENANCE;
    double lat;
    double lon;
    java.lang.String name;
    java.lang.String title;
    java.lang.String desc;
    java.lang.String shortdesc;
    java.lang.String hints;
    java.lang.String type;
    int size;
    int difficulty;
    int terrain;
    java.lang.String owner;
    java.lang.Boolean found;
    java.lang.String waypoints;
    java.lang.String images;
    java.lang.String notes;
    java.lang.String fieldnotes;
    int log_as;
    java.lang.String log_date;
    java.lang.Boolean marked;
    java.lang.String logs;
    java.lang.String guid;
    int status;
    int aagtl_status;
    private static final boolean[][] $VRc;

    public void <init>(double, double, java.lang.String)
    {
        com.zoffcc.applications.aagtl.GeocacheCoordinate r0;
        double d0, d1;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Boolean $r4, $r5;

        r0 := @this: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        r1 := @parameter2: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.GeocacheCoordinate: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d0, d1);
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat> = d0;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon> = d1;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name> = r1;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String shortdesc> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String hints> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int size> = -1;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int difficulty> = -1;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int terrain> = -1;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String owner> = "";
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r4;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String waypoints> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String images> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String notes> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String fieldnotes> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as> = 0;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String log_date> = "";
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean marked> = $r5;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String logs> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String guid> = "";
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status> = 0;
        r0.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int aagtl_status> = 0;
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        com.zoffcc.applications.aagtl.GeocacheCoordinate$1 $r2;
        com.zoffcc.applications.aagtl.GeocacheCoordinate$2 $r3;
        com.zoffcc.applications.aagtl.GeocacheCoordinate$3 $r4;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.GeocacheCoordinate: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new com.zoffcc.applications.aagtl.GeocacheCoordinate$1;
        specialinvoke $r2.<com.zoffcc.applications.aagtl.GeocacheCoordinate$1: void <init>()>();
        <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap LOG_AS_HASH> = $r2;
        $r3 = new com.zoffcc.applications.aagtl.GeocacheCoordinate$2;
        specialinvoke $r3.<com.zoffcc.applications.aagtl.GeocacheCoordinate$2: void <init>()>();
        <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap GC_TYPE_HASH> = $r3;
        $r4 = new com.zoffcc.applications.aagtl.GeocacheCoordinate$3;
        specialinvoke $r4.<com.zoffcc.applications.aagtl.GeocacheCoordinate$3: void <init>()>();
        <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap STATUS_HASH> = $r4;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.GeocacheCoordinate: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/GeocacheCoordinate", 9290623663624L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.GeocachesView extends android.widget.ImageView
{
    int gc_box_small_width;
    int gc_box_small_height;
    int gc_box_big_width;
    int gc_box_big_height;
    int TOO_MUCH_POINTS;
    int MAX_DRAW_POINTS;
    com.zoffcc.applications.aagtl.aagtl main_aagtl;
    android.graphics.Bitmap bitmap_main;
    android.graphics.Canvas image_main;
    java.lang.Boolean double_buffer;
    int COLOR_FOUND;
    int COLOR_REGULAR;
    int COLOR_MULTI;
    int COLOR_WAYPOINTS;
    int COLOR_DEFAULT;
    int COLOR_CURRENT_CACHE;
    int COLOR_CACHE_CENTER;
    android.graphics.Paint box_paint;
    android.graphics.Paint text_paint;
    java.util.List caches_loaded;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.content.Context, com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.GeocachesView r0;
        android.content.Context r1;
        com.zoffcc.applications.aagtl.aagtl r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Boolean $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Paint $r6, $r7, $r9, $r10, $r11, $r12, $r15;
        java.util.ArrayList $r8;
        android.graphics.Typeface $r13;
        android.graphics.Bitmap$Config $r16;
        android.graphics.Bitmap $r17, $r19;
        android.graphics.Canvas $r18;

        r0 := @this: com.zoffcc.applications.aagtl.GeocachesView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: com.zoffcc.applications.aagtl.aagtl;
        $r3 = <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context)>(r1);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int gc_box_small_width> = 8;
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int gc_box_small_height> = 8;
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int gc_box_big_width> = 15;
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int gc_box_big_height> = 15;
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int TOO_MUCH_POINTS> = 30;
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int MAX_DRAW_POINTS> = 250;
        r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main> = null;
        r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Canvas image_main> = null;
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: java.lang.Boolean double_buffer> = $r5;
        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#bebebe");
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_FOUND> = $i0;
        $i1 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#11a011");
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_REGULAR> = $i1;
        $i2 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#b0a010");
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_MULTI> = $i2;
        $i3 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#b0a010");
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_WAYPOINTS> = $i3;
        $i4 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#1111ef");
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_DEFAULT> = $i4;
        $i5 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#fe0000");
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_CURRENT_CACHE> = $i5;
        $i6 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>("#101010");
        r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_CACHE_CENTER> = $i6;
        $r6 = new android.graphics.Paint;
        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(0);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint> = $r6;
        $r7 = new android.graphics.Paint;
        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(0);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint> = $r7;
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded> = $r8;
        $r9 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>(-16777216);
        $r10 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r10.<android.graphics.Paint: void setTextSize(float)>(21.0F);
        $r11 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r11.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);
        $r12 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        $r13 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT_BOLD>;
        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r13);
        $r15 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r15.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r16 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r17 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(2, 2, $r16);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main> = $r17;
        $r18 = new android.graphics.Canvas;
        $r19 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main>;
        specialinvoke $r18.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r19);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Canvas image_main> = $r18;
        r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl> = r2;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: void clear_stuff()>();
        r4[0] = 1;
        return;
    }

    public void clear_stuff()
    {
        com.zoffcc.applications.aagtl.GeocachesView r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3, $r4;

        r0 := @this: com.zoffcc.applications.aagtl.GeocachesView;
        $r1 = <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        interfaceinvoke $r4.<java.util.List: void clear()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public void set_loaded_caches(java.util.List)
    {
        com.zoffcc.applications.aagtl.GeocachesView r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.GeocachesView;
        r1 := @parameter0: java.util.List;
        $r2 = <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded> = r1;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: void invalidate()>();
        r3[0] = 1;
        return;
    }

    public double[] deg2num_give_zoom(com.zoffcc.applications.aagtl.Coordinate, int)
    {
        com.zoffcc.applications.aagtl.GeocachesView r0;
        com.zoffcc.applications.aagtl.Coordinate r1;
        int i0, $i1, $i2;
        boolean[][] $r2;
        boolean[] r3;
        double[] r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;

        r0 := @this: com.zoffcc.applications.aagtl.GeocachesView;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r4 = newarray (double)[2];
        $d0 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d1 = $d0 + 180.0;
        $d2 = $d1 / 360.0;
        $i1 = 1 << i0;
        $d3 = (double) $i1;
        $d4 = $d2 * $d3;
        r4[0] = $d4;
        $d5 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d6 = staticinvoke <java.lang.Math: double toRadians(double)>($d5);
        $d7 = staticinvoke <java.lang.Math: double tan(double)>($d6);
        $d8 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d9 = staticinvoke <java.lang.Math: double toRadians(double)>($d8);
        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d9);
        $d11 = 1.0 / $d10;
        $d12 = $d7 + $d11;
        $d13 = staticinvoke <java.lang.Math: double log(double)>($d12);
        $d14 = $d13 / 3.141592653589793;
        $d15 = 1.0 - $d14;
        $d16 = $d15 / 2.0;
        $i2 = 1 << i0;
        $d17 = (double) $i2;
        $d18 = $d16 * $d17;
        r4[1] = $d18;
        r3[0] = 1;
        return r4;
    }

    public int[] __coord2point_give_zoom(com.zoffcc.applications.aagtl.Coordinate, int)
    {
        com.zoffcc.applications.aagtl.GeocachesView r0;
        com.zoffcc.applications.aagtl.Coordinate r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean[][] $r2;
        boolean[] r3;
        double[] r4, r6;
        int[] r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.zoffcc.applications.aagtl.aagtl $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;
        com.zoffcc.applications.aagtl.Rose $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;

        r0 := @this: com.zoffcc.applications.aagtl.GeocachesView;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r4 = newarray (double)[2];
        r6 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: double[] deg2num_give_zoom(com.zoffcc.applications.aagtl.Coordinate,int)>(r1, i0);
        r5 = newarray (int)[2];
        $d0 = r6[0];
        $r7 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i1 = $r8.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d1 = (double) $i1;
        $d2 = $d0 * $d1;
        $r9 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r10 = $r9.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $d3 = $r10.<com.zoffcc.applications.aagtl.Rose: double map_center_x>;
        $r11 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r12 = $r11.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i2 = $r12.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d4 = (double) $i2;
        $d5 = $d3 * $d4;
        $d6 = $d2 - $d5;
        $r13 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r14 = $r13.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i3 = $r14.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i4 = $i3 / 2;
        $d7 = (double) $i4;
        $d8 = $d6 + $d7;
        $i5 = (int) $d8;
        r5[0] = $i5;
        $d9 = r6[1];
        $r15 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r16 = $r15.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i6 = $r16.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d10 = (double) $i6;
        $d11 = $d9 * $d10;
        $r17 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r18 = $r17.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $d12 = $r18.<com.zoffcc.applications.aagtl.Rose: double map_center_y>;
        $r19 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r20 = $r19.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i7 = $r20.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d13 = (double) $i7;
        $d14 = $d12 * $d13;
        $d15 = $d11 - $d14;
        $r21 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r22 = $r21.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i8 = $r22.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $i9 = $i8 / 2;
        $d16 = (double) $i9;
        $d17 = $d15 + $d16;
        $i10 = (int) $d17;
        r5[1] = $i10;
        r3[0] = 1;
        return r5;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.zoffcc.applications.aagtl.GeocachesView r0;
        android.graphics.Canvas r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        null_type n0, n1;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i97, $i98, $i99, $i100, $i101;
        java.lang.Boolean r5, $r11, $r12, $r13, $r14, $r27, $r99, $r102, $r108;
        int[] r6, r26, r91, r94;
        android.graphics.RectF r7, $r41, $r47, r48, $r50, r51;
        byte b3, b4;
        android.graphics.Paint r8, $r28, $r30, $r32, $r34, $r35, $r36, $r38, $r39, $r42, $r43, $r45, $r46, $r49, $r52, $r53, $r56, $r57, $r59, $r61, $r64, $r65, $r67, $r71, $r80, $r81, $r83, $r95, $r96, $r97;
        com.zoffcc.applications.aagtl.aagtl $r9, $r24, $r54, $r62, $r72, $r75, $r84, $r87, $r92, $r100, $r103, $r106;
        com.zoffcc.applications.aagtl.aagtl$settings $r10, $r101, $r107;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.graphics.Bitmap $r15, $r98, $r105;
        java.util.List $r16, $r17, $r18, $r19, $r20, $r37, $r44, $r58, $r66;
        java.lang.Object $r21;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r22, r23, $r74, $r77, r82, $r86, r89, r90;
        com.zoffcc.applications.aagtl.Rose $r25, $r55, $r63, $r73, $r76, $r85, $r88, $r93;
        java.lang.String $r29, $r31, $r33, $r60, $r68, $r69, $r70, $r78, $r79;
        android.graphics.Paint$Style $r40;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30;
        com.zoffcc.applications.aagtl.CrossHair $r104;
        double $d0, $d1;

        r0 := @this: com.zoffcc.applications.aagtl.GeocachesView;
        r1 := @parameter0: android.graphics.Canvas;
        $r2 = <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        n0 = null;
        n1 = null;
        $r9 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r10 = $r9.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: java.lang.Boolean double_buffer> = $r12;
        r3[1] = 1;
        goto label2;

     label1:
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: java.lang.Boolean double_buffer> = $r13;
        r3[2] = 1;

     label2:
        r4 = r1;
        $r14 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.lang.Boolean double_buffer>;
        $z1 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();
        r3[3] = 1;
        if $z1 == 0 goto label3;

        r4 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Canvas image_main>;
        $r15 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main>;
        virtualinvoke $r15.<android.graphics.Bitmap: void eraseColor(int)>(0);
        r3[4] = 1;

     label3:
        $r16 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        r3[5] = 1;
        if $r16 != null goto label4;

        r3[6] = 1;
        return;

     label4:
        $r17 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i5 = interfaceinvoke $r17.<java.util.List: int size()>();
        $i6 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int MAX_DRAW_POINTS>;
        r3[7] = 1;
        if $i5 <= $i6 goto label5;

        r3[8] = 1;
        return;

     label5:
        i0 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int gc_box_big_width>;
        i1 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int gc_box_big_height>;
        $r18 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i7 = interfaceinvoke $r18.<java.util.List: int size()>();
        $i8 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int TOO_MUCH_POINTS>;
        r3[9] = 1;
        if $i7 <= $i8 goto label6;

        i0 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int gc_box_small_width>;
        i1 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int gc_box_small_height>;
        r3[10] = 1;

     label6:
        r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        i2 = 0;
        r3[11] = 1;

     label7:
        $r19 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i9 = interfaceinvoke $r19.<java.util.List: int size()>();
        r3[12] = 1;
        if i2 >= $i9 goto label22;

        $r20 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i2);
        r22 = (com.zoffcc.applications.aagtl.GeocacheCoordinate) $r21;
        r23 = r22;
        r6 = newarray (int)[2];
        $r24 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r25 = $r24.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i10 = $r25.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r26 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: int[] __coord2point_give_zoom(com.zoffcc.applications.aagtl.Coordinate,int)>(r23, $i10);
        $r27 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found>;
        $z2 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();
        r3[13] = 1;
        if $z2 != 0 goto label8;

        $i11 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int aagtl_status>;
        r3[14] = 1;
        if $i11 != 1 goto label9;

     label8:
        $r28 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        $i12 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_FOUND>;
        virtualinvoke $r28.<android.graphics.Paint: void setColor(int)>($i12);
        r3[15] = 1;
        goto label13;

     label9:
        $r29 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        r3[16] = 1;
        if $r29 != null goto label10;

        $r30 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        $i13 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_DEFAULT>;
        virtualinvoke $r30.<android.graphics.Paint: void setColor(int)>($i13);
        r3[17] = 1;
        goto label13;

     label10:
        $r31 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        $z3 = virtualinvoke $r31.<java.lang.String: boolean matches(java.lang.String)>("regular");
        r3[18] = 1;
        if $z3 == 0 goto label11;

        $r32 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        $i14 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_REGULAR>;
        virtualinvoke $r32.<android.graphics.Paint: void setColor(int)>($i14);
        r3[19] = 1;
        goto label13;

     label11:
        $r33 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        $z4 = virtualinvoke $r33.<java.lang.String: boolean matches(java.lang.String)>("multi");
        r3[20] = 1;
        if $z4 == 0 goto label12;

        $r34 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        $i15 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_MULTI>;
        virtualinvoke $r34.<android.graphics.Paint: void setColor(int)>($i15);
        r3[21] = 1;
        goto label13;

     label12:
        $r35 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        $i16 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int COLOR_DEFAULT>;
        virtualinvoke $r35.<android.graphics.Paint: void setColor(int)>($i16);
        r3[22] = 1;

     label13:
        $r36 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r36.<android.graphics.Paint: void setStrokeWidth(float)>(4.0F);
        $r37 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i17 = interfaceinvoke $r37.<java.util.List: int size()>();
        $i18 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int TOO_MUCH_POINTS>;
        r3[23] = 1;
        if $i17 <= $i18 goto label14;

        $r38 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r38.<android.graphics.Paint: void setStrokeWidth(float)>(3.0F);
        r3[24] = 1;

     label14:
        $r39 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        $r40 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r39.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r40);
        $r41 = new android.graphics.RectF;
        $i19 = r26[0];
        $i20 = $i19 - i0;
        $f0 = (float) $i20;
        $i21 = r26[1];
        $i22 = $i21 - i1;
        $f1 = (float) $i22;
        $i23 = r26[0];
        $i24 = $i23 + i0;
        $f2 = (float) $i24;
        $i25 = r26[1];
        $i26 = $i25 + i1;
        $f3 = (float) $i26;
        specialinvoke $r41.<android.graphics.RectF: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);
        r7 = $r41;
        $r42 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke r4.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r7, $r42);
        $r43 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r43.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);
        b3 = 3;
        b4 = 2;
        $r44 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i27 = interfaceinvoke $r44.<java.util.List: int size()>();
        $i28 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int TOO_MUCH_POINTS>;
        r3[25] = 1;
        if $i27 <= $i28 goto label15;

        $r45 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r45.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);
        b3 = 1;
        b4 = 2;
        r3[26] = 1;

     label15:
        $r46 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r46.<android.graphics.Paint: void setColor(int)>(-16777216);
        $r47 = new android.graphics.RectF;
        $i29 = r26[0];
        $i30 = $i29 - i0;
        $i31 = $i30 - b4;
        $f4 = (float) $i31;
        $i32 = r26[1];
        $i33 = $i32 - i1;
        $i34 = $i33 - b4;
        $f5 = (float) $i34;
        $i35 = r26[0];
        $i36 = $i35 + i0;
        $i37 = $i36 + b4;
        $f6 = (float) $i37;
        $i38 = r26[1];
        $i39 = $i38 + i1;
        $i40 = $i39 + b4;
        $f7 = (float) $i40;
        specialinvoke $r47.<android.graphics.RectF: void <init>(float,float,float,float)>($f4, $f5, $f6, $f7);
        r48 = $r47;
        $r49 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke r4.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r48, $r49);
        $r50 = new android.graphics.RectF;
        $i41 = r26[0];
        $i42 = $i41 - i0;
        $i43 = $i42 + b3;
        $f8 = (float) $i43;
        $i44 = r26[1];
        $i45 = $i44 - i1;
        $i46 = $i45 + b3;
        $f9 = (float) $i46;
        $i47 = r26[0];
        $i48 = $i47 + i0;
        $i49 = $i48 - b3;
        $f10 = (float) $i49;
        $i50 = r26[1];
        $i51 = $i50 + i1;
        $i52 = $i51 - b3;
        $f11 = (float) $i52;
        specialinvoke $r50.<android.graphics.RectF: void <init>(float,float,float,float)>($f8, $f9, $f10, $f11);
        r51 = $r50;
        $r52 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke r4.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r51, $r52);
        $i53 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status>;
        r3[27] = 1;
        if $i53 != 1 goto label16;

        $r53 = new android.graphics.Paint;
        specialinvoke $r53.<android.graphics.Paint: void <init>()>();
        r8 = $r53;
        virtualinvoke r8.<android.graphics.Paint: void setColor(int)>(-65536);
        virtualinvoke r8.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        virtualinvoke r8.<android.graphics.Paint: void setStrokeWidth(float)>(4.0F);
        $i54 = r26[0];
        $i55 = $i54 + i0;
        $f12 = (float) $i55;
        $i56 = r26[1];
        $i57 = $i56 - i1;
        $f13 = (float) $i57;
        $i58 = r26[0];
        $i59 = $i58 - i0;
        $i60 = $i59 - 1;
        $f14 = (float) $i60;
        $i61 = r26[1];
        $i62 = $i61 + i1;
        $i63 = $i62 - 1;
        $f15 = (float) $i63;
        virtualinvoke r4.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f12, $f13, $f14, $f15, r8);
        r3[28] = 1;

     label16:
        $r54 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r55 = $r54.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i64 = $r55.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r3[29] = 1;
        if $i64 <= 15 goto label18;

        $r56 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r56.<android.graphics.Paint: void setTextScaleX(float)>(1.0F);
        $r57 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r57.<android.graphics.Paint: void setTextSize(float)>(25.0F);
        $r58 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i65 = interfaceinvoke $r58.<java.util.List: int size()>();
        $i66 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int TOO_MUCH_POINTS>;
        r3[30] = 1;
        if $i65 <= $i66 goto label17;

        $r59 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r59.<android.graphics.Paint: void setTextSize(float)>(17.0F);
        r3[31] = 1;

     label17:
        $r60 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $i67 = r26[0];
        $i68 = $i67 - i0;
        $f16 = (float) $i68;
        $i69 = r26[1];
        $i70 = $i69 - i1;
        $i71 = $i70 - 6;
        $f17 = (float) $i71;
        $r61 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke r4.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r60, $f16, $f17, $r61);
        r3[32] = 1;

     label18:
        $r62 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r63 = $r62.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i72 = $r63.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r3[33] = 1;
        if $i72 <= 17 goto label20;

        $r64 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r64.<android.graphics.Paint: void setTextScaleX(float)>(0.9F);
        $r65 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r65.<android.graphics.Paint: void setTextSize(float)>(19.0F);
        $r66 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i73 = interfaceinvoke $r66.<java.util.List: int size()>();
        $i74 = r0.<com.zoffcc.applications.aagtl.GeocachesView: int TOO_MUCH_POINTS>;
        r3[34] = 1;
        if $i73 <= $i74 goto label19;

        $r67 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke $r67.<android.graphics.Paint: void setTextSize(float)>(15.0F);
        r3[35] = 1;

     label19:
        $r68 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $r69 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $i75 = virtualinvoke $r69.<java.lang.String: int length()>();
        $i76 = staticinvoke <java.lang.Math: int min(int,int)>(20, $i75);
        $r70 = virtualinvoke $r68.<java.lang.String: java.lang.String substring(int,int)>(0, $i76);
        $i77 = r26[0];
        $i78 = $i77 - i0;
        $f18 = (float) $i78;
        $i79 = r26[1];
        $i80 = $i79 + i1;
        $i81 = $i80 + 19;
        $f19 = (float) $i81;
        $r71 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint text_paint>;
        virtualinvoke r4.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r70, $f18, $f19, $r71);
        r3[36] = 1;

     label20:
        $r72 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r73 = $r72.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r74 = $r73.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r3[37] = 1;
        if $r74 == null goto label21;

        $r75 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r76 = $r75.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r77 = $r76.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $r78 = $r77.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r79 = r22.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $i82 = virtualinvoke $r78.<java.lang.String: int compareTo(java.lang.String)>($r79);
        r3[38] = 1;
        if $i82 != 0 goto label21;

        $r80 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r80.<android.graphics.Paint: void setColor(int)>(-16776961);
        $r81 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r81.<android.graphics.Paint: void setStrokeWidth(float)>(3.0F);
        r82 = r22;
        $i83 = r26[0];
        $f20 = (float) $i83;
        $i84 = r26[1];
        $f21 = (float) $i84;
        $i85 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: int getWidth()>();
        $i86 = $i85 / 2;
        $f22 = (float) $i86;
        $i87 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: int getHeight()>();
        $i88 = $i87 / 2;
        $f23 = (float) $i88;
        $r83 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke r4.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f20, $f21, $f22, $f23, $r83);
        r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r3[39] = 1;

     label21:
        i2 = i2 + 1;
        r3[40] = 1;
        goto label7;

     label22:
        $z5 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();
        r3[41] = 1;
        if $z5 != 0 goto label23;

        $r84 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r85 = $r84.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r86 = $r85.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r3[42] = 1;
        if $r86 == null goto label23;

        $r87 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r88 = $r87.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        r89 = $r88.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r90 = r89;
        r91 = newarray (int)[2];
        $r92 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r93 = $r92.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i89 = $r93.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r94 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: int[] __coord2point_give_zoom(com.zoffcc.applications.aagtl.Coordinate,int)>(r90, $i89);
        $r95 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r95.<android.graphics.Paint: void setColor(int)>(-16776961);
        $r96 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke $r96.<android.graphics.Paint: void setStrokeWidth(float)>(3.0F);
        $i90 = r94[0];
        $f24 = (float) $i90;
        $i91 = r94[1];
        $f25 = (float) $i91;
        $i92 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: int getWidth()>();
        $i93 = $i92 / 2;
        $f26 = (float) $i93;
        $i94 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: int getHeight()>();
        $i95 = $i94 / 2;
        $f27 = (float) $i95;
        $r97 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Paint box_paint>;
        virtualinvoke r4.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f24, $f25, $f26, $f27, $r97);
        r3[43] = 1;

     label23:
        $r98 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main>;
        r3[44] = 1;
        if $r98 == null goto label25;

        $r99 = r0.<com.zoffcc.applications.aagtl.GeocachesView: java.lang.Boolean double_buffer>;
        $z6 = virtualinvoke $r99.<java.lang.Boolean: boolean booleanValue()>();
        r3[45] = 1;
        if $z6 == 0 goto label25;

        $r100 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r101 = $r100.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r102 = $r101.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z7 = virtualinvoke $r102.<java.lang.Boolean: boolean booleanValue()>();
        r3[46] = 1;
        if $z7 == 0 goto label24;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();
        $r103 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r104 = $r103.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d0 = virtualinvoke $r104.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        $d1 = neg $d0;
        $i97 = (int) $d1;
        $f28 = (float) $i97;
        $i98 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: int getWidth()>();
        $i99 = $i98 / 2;
        $f29 = (float) $i99;
        $i100 = virtualinvoke r0.<com.zoffcc.applications.aagtl.GeocachesView: int getHeight()>();
        $i101 = $i100 / 2;
        $f30 = (float) $i101;
        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f28, $f29, $f30);
        r3[47] = 1;

     label24:
        $r105 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main>;
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r105, 0.0F, 0.0F, null);
        $r106 = r0.<com.zoffcc.applications.aagtl.GeocachesView: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r107 = $r106.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r108 = $r107.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z8 = virtualinvoke $r108.<java.lang.Boolean: boolean booleanValue()>();
        r3[48] = 1;
        if $z8 == 0 goto label25;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();
        r3[49] = 1;

     label25:
        r3[50] = 1;
        return;
    }

    public void onSizeChanged(int, int, int, int)
    {
        com.zoffcc.applications.aagtl.GeocachesView r0;
        int i0, i1, i2, i3;
        boolean[][] $r1;
        boolean[] r2;
        android.graphics.Bitmap $r3, $r4, $r6, $r8;
        android.graphics.Bitmap$Config $r5;
        android.graphics.Canvas $r7;

        r0 := @this: com.zoffcc.applications.aagtl.GeocachesView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main>;
        virtualinvoke $r4.<android.graphics.Bitmap: void recycle()>();
        r2[1] = 1;

     label1:
        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r5);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main> = $r6;
        $r7 = new android.graphics.Canvas;
        $r8 = r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Bitmap bitmap_main>;
        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r8);
        r0.<com.zoffcc.applications.aagtl.GeocachesView: android.graphics.Canvas image_main> = $r7;
        r2[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <com.zoffcc.applications.aagtl.GeocachesView: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[51];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/GeocachesView", -332801194121950416L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.HTMLDownloader$1 extends java.lang.Object implements javax.net.ssl.HostnameVerifier
{
    final com.zoffcc.applications.aagtl.HTMLDownloader this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader$1 r0;
        com.zoffcc.applications.aagtl.HTMLDownloader r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader$1;
        r1 := @parameter0: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.HTMLDownloader$1: com.zoffcc.applications.aagtl.HTMLDownloader this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public boolean verify(java.lang.String, javax.net.ssl.SSLSession)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader$1 r0;
        java.lang.String r1, $r9;
        javax.net.ssl.SSLSession r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader$1;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: javax.net.ssl.SSLSession;
        $r3 = <com.zoffcc.applications.aagtl.HTMLDownloader$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DANGER !!! trusted hostname=");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" DANGER !!!");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("aagtl", $r9);
        r4[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.HTMLDownloader$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/HTMLDownloader$1", 4320153515616762951L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.HTMLDownloader$2 extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
    final com.zoffcc.applications.aagtl.HTMLDownloader this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader$2 r0;
        com.zoffcc.applications.aagtl.HTMLDownloader r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader$2;
        r1 := @parameter0: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.HTMLDownloader$2: com.zoffcc.applications.aagtl.HTMLDownloader this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        com.zoffcc.applications.aagtl.HTMLDownloader$2 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.security.cert.X509Certificate[] $r3;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader$2;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("aagtl", "DANGER !!! 222222222");
        $r3 = newarray (java.security.cert.X509Certificate)[0];
        r2[0] = 1;
        return $r3;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.zoffcc.applications.aagtl.HTMLDownloader$2 r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader$2;
        r1 := @parameter0: java.security.cert.X509Certificate[];
        r2 := @parameter1: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("aagtl", "DANGER !!! 333333333");
        r4[0] = 1;
        return;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.zoffcc.applications.aagtl.HTMLDownloader$2 r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader$2;
        r1 := @parameter0: java.security.cert.X509Certificate[];
        r2 := @parameter1: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("aagtl", "DANGER !!! 444444444444");
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.zoffcc.applications.aagtl.HTMLDownloader$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/HTMLDownloader$2", -7165051622315754224L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret extends java.lang.Object
{
    int count_p;
    com.zoffcc.applications.aagtl.GeocacheCoordinate[] points;
    final com.zoffcc.applications.aagtl.HTMLDownloader this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret r0;
        com.zoffcc.applications.aagtl.HTMLDownloader r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        r1 := @parameter0: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.HTMLDownloader this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/HTMLDownloader$get_geocaches_ret", 9252593981417L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.HTMLDownloader extends java.lang.Object
{
    boolean logged_in;
    public static org.apache.http.client.CookieStore cookie_jar;
    public static int GC_DOWNLOAD_MAX_REC_DEPTH;
    com.zoffcc.applications.aagtl.aagtl main_aagtl;
    public static int large_buffer_size;
    public static int default_buffer_size;
    private static final java.util.regex.Pattern patternLoggedIn;
    private static final java.util.regex.Pattern patternLogged2In;
    private static final java.util.regex.Pattern patternViewstateFieldCount;
    private static final java.util.regex.Pattern patternViewstates;
    private static final java.util.regex.Pattern patternUserToken;
    private static final boolean[][] $VRc;

    public void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean logged_in> = 0;
        r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl> = r1;
        r3[0] = 1;
        return;
    }

    public java.lang.String convertStreamToString(java.io.InputStream) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        java.io.InputStream r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.StringWriter r4, $r8;
        char[] r5;
        java.io.BufferedReader r6, $r9;
        int i0, $i1, $i2, $i3;
        java.lang.Throwable r7, $r11;
        java.io.InputStreamReader $r10;
        java.lang.String $r12;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        if r1 == null goto label8;

        $r8 = new java.io.StringWriter;
        specialinvoke $r8.<java.io.StringWriter: void <init>()>();
        r4 = $r8;
        $i1 = <com.zoffcc.applications.aagtl.HTMLDownloader: int default_buffer_size>;
        r5 = newarray (char)[$i1];

     label1:
        $r9 = new java.io.BufferedReader;
        $r10 = new java.io.InputStreamReader;
        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF-8");
        $i2 = <com.zoffcc.applications.aagtl.HTMLDownloader: int large_buffer_size>;
        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r10, $i2);
        r6 = $r9;
        r3[1] = 1;

     label2:
        $i3 = virtualinvoke r6.<java.io.Reader: int read(char[])>(r5);
        i0 = $i3;
        r3[2] = 1;
        if $i3 == -1 goto label3;

        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>(r5, 0, i0);
        r3[3] = 1;
        goto label2;

     label3:
        virtualinvoke r1.<java.io.InputStream: void close()>();
        r3[4] = 1;
        goto label7;

     label4:
        $r11 := @caughtexception;

     label5:
        r7 = $r11;

     label6:
        virtualinvoke r1.<java.io.InputStream: void close()>();
        r3[5] = 1;
        throw r7;

     label7:
        $r12 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        r3[6] = 1;
        return $r12;

     label8:
        r3[7] = 1;
        return null;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.lang.String get_reader_stream(java.lang.String, java.util.List, java.io.ByteArrayOutputStream, java.lang.Boolean)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        java.lang.String r1, r26, $r33;
        java.util.List r2;
        java.io.ByteArrayOutputStream r3;
        java.lang.Boolean r4;
        boolean[][] $r5;
        boolean[] r6;
        null_type n0, n1, n2;
        org.apache.http.impl.client.DefaultHttpClient r7, $r13;
        java.net.URISyntaxException r8, $r17;
        java.io.UnsupportedEncodingException r9, $r22;
        java.io.InputStream r10, r32;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r11, $r12;
        org.apache.http.client.CookieStore $r14;
        java.net.URI $r15, r16;
        org.apache.http.client.methods.HttpPost $r18, r19;
        org.apache.http.client.entity.UrlEncodedFormEntity $r20, r21;
        org.apache.http.Header $r23;
        org.apache.http.HttpResponse r24;
        org.apache.http.HttpEntity $r25;
        org.apache.http.client.ClientProtocolException $r27, r28;
        java.io.IOException $r29, r30, $r34, r35;
        org.apache.http.conn.ClientConnectionManager $r31;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.List;
        r3 := @parameter2: java.io.ByteArrayOutputStream;
        r4 := @parameter3: java.lang.Boolean;
        $r5 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r6 = $r5[2];
        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();
        r6[0] = 1;
        if $z0 == 0 goto label1;

        $z1 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean logged_in>;
        r6[1] = 1;
        if $z1 != 0 goto label1;

        $r11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("--2--- LOGIN START -----");
        $z2 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean login()>();
        r0.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean logged_in> = $z2;
        $r12 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("--2--- LOGIN END   -----");
        r6[2] = 1;

     label1:
        r6[3] = 1;
        if r2 != null goto label2;

        r6[4] = 1;
        if r3 != null goto label2;

        r6[5] = 1;
        return null;

     label2:
        r6[6] = 1;
        if r3 != null goto label16;

        n0 = null;
        n1 = null;
        $r13 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r13.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();
        r7 = $r13;
        $r14 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        virtualinvoke r7.<org.apache.http.impl.client.DefaultHttpClient: void setCookieStore(org.apache.http.client.CookieStore)>($r14);

     label3:
        $r15 = new java.net.URI;
        specialinvoke $r15.<java.net.URI: void <init>(java.lang.String)>(r1);
        r16 = $r15;
        r6[7] = 1;

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;
        r8 = $r17;
        virtualinvoke r8.<java.net.URISyntaxException: void printStackTrace()>();
        r6[8] = 1;
        return null;

     label6:
        $r18 = new org.apache.http.client.methods.HttpPost;
        specialinvoke $r18.<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>(r16);
        r19 = $r18;
        virtualinvoke r19.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)");
        virtualinvoke r19.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Pragma", "no-cache");
        virtualinvoke r19.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded");
        n2 = null;

     label7:
        $r20 = new org.apache.http.client.entity.UrlEncodedFormEntity;
        specialinvoke $r20.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r2, "UTF-8");
        r21 = $r20;
        r6[9] = 1;

     label8:
        goto label10;

     label9:
        $r22 := @caughtexception;
        r9 = $r22;
        virtualinvoke r9.<java.io.UnsupportedEncodingException: void printStackTrace()>();
        r6[10] = 1;
        return null;

     label10:
        $r23 = interfaceinvoke r21.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();
        virtualinvoke r19.<org.apache.http.client.methods.HttpPost: void addHeader(org.apache.http.Header)>($r23);
        virtualinvoke r19.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>(r21);

     label11:
        r24 = virtualinvoke r7.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r19);
        $r25 = interfaceinvoke r24.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();
        r10 = interfaceinvoke $r25.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();
        r26 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String generateString(java.io.InputStream)>(r10);
        r6[11] = 1;

     label12:
        goto label15;

     label13:
        $r27 := @caughtexception;
        r28 = $r27;
        r6[12] = 1;
        return null;

     label14:
        $r29 := @caughtexception;
        r30 = $r29;
        r6[13] = 1;
        return null;

     label15:
        $r31 = virtualinvoke r7.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();
        interfaceinvoke $r31.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();
        r6[14] = 1;
        return r26;

     label16:
        r32 = specialinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.io.InputStream doPost2(java.lang.String,java.util.List,java.io.ByteArrayOutputStream)>(r1, r2, r3);
        $r33 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String convertStreamToString(java.io.InputStream)>(r32);
        r6[15] = 1;

     label17:
        return $r33;

     label18:
        $r34 := @caughtexception;
        r35 = $r34;
        virtualinvoke r35.<java.io.IOException: void printStackTrace()>();
        r6[16] = 1;
        return null;

        catch java.net.URISyntaxException from label3 to label4 with label5;
        catch java.io.UnsupportedEncodingException from label7 to label8 with label9;
        catch org.apache.http.client.ClientProtocolException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label14;
        catch java.io.IOException from label16 to label17 with label18;
    }

    private java.io.InputStream doPost2(java.lang.String, java.util.List, java.io.ByteArrayOutputStream) throws java.io.IOException
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        java.lang.String r1, $r14, $r17, r18;
        java.util.List r2;
        java.io.ByteArrayOutputStream r3;
        boolean[][] $r4;
        boolean[] r5;
        java.net.URL r6, $r10;
        java.net.HttpURLConnection r7;
        null_type n0;
        int i0, $i1;
        java.io.OutputStream r8;
        byte[] r9;
        java.net.URLConnection $r11;
        java.lang.Object $r12, $r15;
        org.apache.http.NameValuePair $r13, $r16;
        java.io.InputStream r19;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.List;
        r3 := @parameter2: java.io.ByteArrayOutputStream;
        $r4 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r5 = $r4[3];
        $r10 = new java.net.URL;
        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>(r1);
        r6 = $r10;
        $r11 = virtualinvoke r6.<java.net.URL: java.net.URLConnection openConnection()>();
        r7 = (java.net.HttpURLConnection) $r11;
        n0 = null;
        virtualinvoke r7.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");
        i0 = 0;
        r5[0] = 1;

     label1:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();
        r5[1] = 1;
        if i0 >= $i1 goto label2;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);
        $r13 = (org.apache.http.NameValuePair) $r12;
        $r14 = interfaceinvoke $r13.<org.apache.http.NameValuePair: java.lang.String getName()>();
        $r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);
        $r16 = (org.apache.http.NameValuePair) $r15;
        $r17 = interfaceinvoke $r16.<org.apache.http.NameValuePair: java.lang.String getValue()>();
        virtualinvoke r7.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r14, $r17);
        i0 = i0 + 1;
        r5[2] = 1;
        goto label1;

     label2:
        r18 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String getCookies()>();
        virtualinvoke r7.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Cookie", r18);
        virtualinvoke r7.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);
        virtualinvoke r7.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);
        virtualinvoke r7.<java.net.HttpURLConnection: void connect()>();
        r8 = virtualinvoke r7.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();
        r9 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>(r9);
        virtualinvoke r8.<java.io.OutputStream: void flush()>();
        virtualinvoke r8.<java.io.OutputStream: void close()>();
        r19 = virtualinvoke r7.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();
        r5[3] = 1;
        return r19;
    }

    public java.lang.String get_user_token()
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, r6, r12, r13, $r19, $r26, $r28, $r29;
        java.util.ArrayList r5, $r8;
        java.lang.String[] r7;
        null_type n0, n1, n2;
        int i0, $i1, $i2;
        java.lang.Boolean $r9, $r10, $r14, $r22;
        boolean $z0, $z1, $z2, $z4;
        java.io.PrintStream $r11, $r15, $r23;
        java.lang.StringBuilder $r16, $r17, $r18, $r24, $r25, $r27;
        java.util.regex.Pattern r20;
        java.util.regex.Matcher r21;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r3 = "";
        r4 = "http://www.geocaching.com/map/default.aspx?lat=6&lng=9";
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r5 = $r8;
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r6 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_reader_stream(java.lang.String,java.util.List,java.io.ByteArrayOutputStream,java.lang.Boolean)>(r4, r5, null, $r9);
        r2[0] = 1;
        if r6 != null goto label2;

        $r10 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();
        r2[1] = 1;
        if $z0 == 0 goto label1;

        $r11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("page = NULL");
        r2[2] = 1;

     label1:
        r2[3] = 1;
        return "";

     label2:
        r7 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");
        n0 = null;
        n1 = null;
        n2 = null;
        i0 = 0;
        r2[4] = 1;

     label3:
        $i1 = lengthof r7;
        r2[5] = 1;
        if i0 >= $i1 goto label7;

        r12 = r7[i0];
        r13 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>();
        $z1 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("var uvtoken");
        r2[6] = 1;
        if $z1 == 0 goto label6;

        $r14 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z2 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();
        r2[7] = 1;
        if $z2 == 0 goto label4;

        $r15 = <java.lang.System: java.io.PrintStream out>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usertoken=");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19);
        r2[8] = 1;

     label4:
        r20 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("userToken[ =]+\'([^\']+)\'");
        r21 = virtualinvoke r20.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r13);
        virtualinvoke r21.<java.util.regex.Matcher: boolean find()>();
        $i2 = virtualinvoke r21.<java.util.regex.Matcher: int groupCount()>();
        r2[9] = 1;
        if $i2 <= 0 goto label6;

        $r22 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z4 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();
        r2[10] = 1;
        if $z4 == 0 goto label5;

        $r23 = <java.lang.System: java.io.PrintStream out>;
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usertoken parsed=");
        $r26 = virtualinvoke r21.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28);
        r2[11] = 1;

     label5:
        $r29 = virtualinvoke r21.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        r2[12] = 1;
        return $r29;

     label6:
        i0 = i0 + 1;
        r2[13] = 1;
        goto label3;

     label7:
        r2[14] = 1;
        return r3;
    }

    public com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches(com.zoffcc.applications.aagtl.Coordinate[], int, int, int, android.os.Handler, int)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        com.zoffcc.applications.aagtl.Coordinate[] r1;
        int i0, i1, i2, i3;
        android.os.Handler r2;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret $r5;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r2 := @parameter4: android.os.Handler;
        i3 := @parameter5: int;
        $r3 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[5];
        $r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches_v3(com.zoffcc.applications.aagtl.Coordinate[],int,int,int,android.os.Handler,int)>(r1, i0, i1, i2, r2, i3);
        r4[0] = 1;
        return $r5;
    }

    public com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches_v3(com.zoffcc.applications.aagtl.Coordinate[], int, int, int, android.os.Handler, int)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        com.zoffcc.applications.aagtl.Coordinate[] r1;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, $i10, i11, $i12, $i13, i14, $i15;
        android.os.Handler r2;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.Coordinate r5, r6, r7, $r31;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret r8, r16, $r32, $r46;
        java.text.DecimalFormat r9, $r36;
        java.lang.String r10, r11, r12, r13, r15, r20, r21, r28, $r57, $r61, $r65, r69, r71, $r79, $r86, r94, $r100, r105, r110;
        java.util.ArrayList r14, r18, $r44, $r47, $r95, r96, $r115, r116;
        java.lang.Boolean r17, $r30, $r45, r70, $r97, $r101, $r121;
        null_type n0, n1;
        java.util.List r19, r23, r26, $r106, $r111;
        java.util.Iterator r24;
        net.htmlparser.jericho.Segment r25, $r51, $r53, $r55, $r59, $r63, $r67, $r73, $r77, $r82;
        java.lang.Exception r27, $r80, $r87, r88, $r102, r103, $r108, r109, $r113, r114;
        com.zoffcc.applications.aagtl.aagtl $r29, $r99;
        byte $b7;
        java.text.DecimalFormatSymbols $r33, r35;
        java.util.Locale $r34;
        java.lang.StringBuilder $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r91, $r92, $r93;
        boolean z0, $z1, $z2, $z3, $z4;
        net.htmlparser.jericho.Source $r48, r49;
        net.htmlparser.jericho.Element $r50, $r52, $r66, $r74, $r78, $r83;
        java.lang.Object $r54, $r58, $r62, $r68, $r72, $r76, $r81, $r107, $r112, $r124;
        net.htmlparser.jericho.TextExtractor $r56, $r60, $r64, $r84;
        java.lang.String[] $r75, $r85;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r89, r90, r98, $r125;
        net.htmlparser.jericho.FormFields r104;
        org.apache.http.message.BasicNameValuePair $r117, $r118, $r119, $r120;
        com.zoffcc.applications.aagtl.GeocacheCoordinate[] $r122, $r123;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r2 := @parameter4: android.os.Handler;
        i3 := @parameter5: int;
        $r3 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[6];
        $r29 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke $r29.<com.zoffcc.applications.aagtl.aagtl: void set_bar_slow(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r2, "get geocaches", "downloading ...", i0, i1, $r30);
        r5 = r1[0];
        r6 = r1[1];
        $r31 = new com.zoffcc.applications.aagtl.Coordinate;
        $d1 = r5.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d2 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d3 = $d1 + $d2;
        $d4 = $d3 / 2.0;
        $d5 = r5.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d6 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d7 = $d5 + $d6;
        $d8 = $d7 / 2.0;
        specialinvoke $r31.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>($d4, $d8);
        r7 = $r31;
        $d9 = virtualinvoke r7.<com.zoffcc.applications.aagtl.Coordinate: double distance_to(com.zoffcc.applications.aagtl.Coordinate)>(r5);
        $d10 = $d9 / 1000.0;
        d0 = $d10 / 2.0;
        $b7 = d0 cmpl 100.0;
        r4[0] = 1;
        if $b7 <= 0 goto label1;

        i8 = i0 + 1;
        $r32 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r32.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r8 = $r32;
        r8.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i8;
        r8.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = null;
        r4[1] = 1;
        return r8;

     label1:
        $r33 = new java.text.DecimalFormatSymbols;
        $r34 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r33.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r34);
        r35 = $r33;
        virtualinvoke r35.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46);
        virtualinvoke r35.<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)>(44);
        $r36 = new java.text.DecimalFormat;
        specialinvoke $r36.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>("#.#####", r35);
        r9 = $r36;
        $d11 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        r10 = virtualinvoke r9.<java.text.DecimalFormat: java.lang.String format(double)>($d11);
        $d12 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        r11 = virtualinvoke r9.<java.text.DecimalFormat: java.lang.String format(double)>($d12);
        r12 = virtualinvoke r9.<java.text.DecimalFormat: java.lang.String format(double)>(d0);
        $r37 = new java.lang.StringBuilder;
        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.geocaching.com/seek/nearest.aspx?lat=");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lng=");
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&dist=");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);
        r13 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        $r44 = new java.util.ArrayList;
        specialinvoke $r44.<java.util.ArrayList: void <init>()>();
        r14 = $r44;
        $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r15 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_reader_stream(java.lang.String,java.util.List,java.io.ByteArrayOutputStream,java.lang.Boolean)>(r13, r14, null, $r45);
        $r46 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r46.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r16 = $r46;
        r16.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i0;
        r16.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = null;
        r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        n0 = null;
        $r47 = new java.util.ArrayList;
        specialinvoke $r47.<java.util.ArrayList: void <init>()>();
        r18 = $r47;
        i9 = 0;
        z0 = 0;
        r4[2] = 1;

     label2:
        $z1 = virtualinvoke r17.<java.lang.Boolean: boolean booleanValue()>();
        r4[3] = 1;
        if $z1 == 0 goto label30;

        $r48 = new net.htmlparser.jericho.Source;
        specialinvoke $r48.<net.htmlparser.jericho.Source: void <init>(java.lang.CharSequence)>(r15);
        r49 = $r48;
        $r50 = virtualinvoke r49.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Element getFirstElement(java.lang.String,java.lang.String,boolean)>("id", "ctl00_ContentBody_ResultsPanel", 0);
        $r51 = virtualinvoke $r50.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment getContent()>();
        $r52 = virtualinvoke $r51.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Element getFirstElement(java.lang.String,java.lang.String,boolean)>("class", "PageBuilderWidget", 0);
        $r53 = virtualinvoke $r52.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment getContent()>();
        r19 = virtualinvoke $r53.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.lang.String)>("b");
        $i10 = interfaceinvoke r19.<java.util.List: int size()>();
        r4[4] = 1;
        if $i10 >= 3 goto label3;

        r4[5] = 1;
        return r16;

     label3:
        $r54 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(0);
        $r55 = (net.htmlparser.jericho.Segment) $r54;
        $r56 = virtualinvoke $r55.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.TextExtractor getTextExtractor()>();
        $r57 = virtualinvoke $r56.<net.htmlparser.jericho.TextExtractor: java.lang.String toString()>();
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r57);
        $r58 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(1);
        $r59 = (net.htmlparser.jericho.Segment) $r58;
        $r60 = virtualinvoke $r59.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.TextExtractor getTextExtractor()>();
        $r61 = virtualinvoke $r60.<net.htmlparser.jericho.TextExtractor: java.lang.String toString()>();
        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r61);
        $r62 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(2);
        $r63 = (net.htmlparser.jericho.Segment) $r62;
        $r64 = virtualinvoke $r63.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.TextExtractor getTextExtractor()>();
        $r65 = virtualinvoke $r64.<net.htmlparser.jericho.TextExtractor: java.lang.String toString()>();
        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r65);
        i11 = i4;
        r20 = "";
        r21 = "";
        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $r66 = virtualinvoke r49.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Element getFirstElement(java.lang.String,java.lang.String,boolean)>("class", "SearchResultsTable Table", 0);
        $r67 = virtualinvoke $r66.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment getContent()>();
        r23 = virtualinvoke $r67.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.lang.String)>("tr");

     label4:
        r24 = interfaceinvoke r23.<java.util.List: java.util.Iterator iterator()>();
        r4[6] = 1;

     label5:
        $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();
        r4[7] = 1;
        if $z2 == 0 goto label17;

        $r68 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();
        r25 = (net.htmlparser.jericho.Segment) $r68;
        r69 = "";
        r70 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r71 = null;

     label6:
        r26 = virtualinvoke r25.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.lang.String,java.lang.String,boolean)>("class", "Merge", 0);
        $r72 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);
        $r73 = (net.htmlparser.jericho.Segment) $r72;
        $r74 = virtualinvoke $r73.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Element getFirstElement(java.lang.String)>("a");
        r69 = virtualinvoke $r74.<net.htmlparser.jericho.Element: java.lang.String getAttributeValue(java.lang.String)>("href");
        $r75 = virtualinvoke r69.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("guid=", 3);
        r69 = $r75[1];

     label7:
        $r76 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(1);
        $r77 = (net.htmlparser.jericho.Segment) $r76;
        $r78 = virtualinvoke $r77.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Element getFirstElement(java.lang.String)>("a");
        $r79 = virtualinvoke $r78.<net.htmlparser.jericho.Element: java.lang.String getAttributeValue(java.lang.String)>("class");
        $z3 = virtualinvoke $r79.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lnk  Strike");
        r4[8] = 1;
        if $z3 == 0 goto label8;

        r70 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r4[9] = 1;

     label8:
        r4[10] = 1;

     label9:
        goto label11;

     label10:
        $r80 := @caughtexception;
        r27 = $r80;
        r4[11] = 1;

     label11:
        $r81 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(1);
        $r82 = (net.htmlparser.jericho.Segment) $r81;
        $r83 = virtualinvoke $r82.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Element getFirstElement(java.lang.String,java.lang.String,boolean)>("class", "small", 0);
        $r84 = virtualinvoke $r83.<net.htmlparser.jericho.Element: net.htmlparser.jericho.TextExtractor getTextExtractor()>();
        r71 = virtualinvoke $r84.<net.htmlparser.jericho.TextExtractor: java.lang.String toString()>();
        $r85 = virtualinvoke r71.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");
        $r86 = $r85[1];
        r71 = virtualinvoke $r86.<java.lang.String: java.lang.String trim()>();
        r4[12] = 1;

     label12:
        goto label14;

     label13:
        $r87 := @caughtexception;
        r88 = $r87;
        virtualinvoke r88.<java.lang.Exception: void printStackTrace()>();
        r4[13] = 1;

     label14:
        r4[14] = 1;
        if r71 == null goto label16;

        n1 = null;
        $r89 = new com.zoffcc.applications.aagtl.GeocacheCoordinate;
        specialinvoke $r89.<com.zoffcc.applications.aagtl.GeocacheCoordinate: void <init>(double,double,java.lang.String)>(0.0, 0.0, r71);
        r90 = $r89;
        $z4 = virtualinvoke r70.<java.lang.Boolean: boolean booleanValue()>();
        r4[15] = 1;
        if $z4 == 0 goto label15;

        r90.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status> = 1;
        r4[16] = 1;

     label15:
        $r91 = new java.lang.StringBuilder;
        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();
        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.geocaching.com/seek/cdpf.aspx?guid=");
        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);
        r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();
        $r95 = new java.util.ArrayList;
        specialinvoke $r95.<java.util.ArrayList: void <init>()>();
        r96 = $r95;
        $r97 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r28 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_reader_stream(java.lang.String,java.util.List,java.io.ByteArrayOutputStream,java.lang.Boolean)>(r94, r96, null, $r97);
        r98 = staticinvoke <com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.GeocacheCoordinate __parse_cache_page_print(java.lang.String,com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r28, r90);
        r4[17] = 1;
        if r98 == null goto label16;

        interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>(r98);
        i9 = i9 + 1;
        $r99 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r100 = r98.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $r101 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke $r99.<com.zoffcc.applications.aagtl.aagtl: void set_bar_slow(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r2, "get geocaches", $r100, i9, i11, $r101);
        r4[18] = 1;

     label16:
        r4[19] = 1;
        goto label5;

     label17:
        r4[20] = 1;

     label18:
        goto label20;

     label19:
        $r102 := @caughtexception;
        r103 = $r102;
        virtualinvoke r103.<java.lang.Exception: void printStackTrace()>();
        r4[21] = 1;

     label20:
        r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r4[22] = 1;
        if i5 >= i6 goto label29;

        r104 = virtualinvoke r49.<net.htmlparser.jericho.Source: net.htmlparser.jericho.FormFields getFormFields()>();
        r105 = null;

     label21:
        $r106 = virtualinvoke r104.<net.htmlparser.jericho.FormFields: java.util.List getValues(java.lang.String)>("__VIEWSTATE1");
        $r107 = interfaceinvoke $r106.<java.util.List: java.lang.Object get(int)>(0);
        r105 = (java.lang.String) $r107;
        r4[23] = 1;

     label22:
        goto label24;

     label23:
        $r108 := @caughtexception;
        r109 = $r108;
        r4[24] = 1;

     label24:
        r110 = null;

     label25:
        $r111 = virtualinvoke r104.<net.htmlparser.jericho.FormFields: java.util.List getValues(java.lang.String)>("__VIEWSTATE");
        $r112 = interfaceinvoke $r111.<java.util.List: java.lang.Object get(int)>(0);
        r110 = (java.lang.String) $r112;
        r4[25] = 1;

     label26:
        goto label28;

     label27:
        $r113 := @caughtexception;
        r114 = $r113;
        r4[26] = 1;

     label28:
        $r115 = new java.util.ArrayList;
        specialinvoke $r115.<java.util.ArrayList: void <init>()>();
        r116 = $r115;
        $r117 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r117.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("__EVENTTARGET", "ctl00$ContentBody$pgrTop$ctl08");
        interfaceinvoke r116.<java.util.List: boolean add(java.lang.Object)>($r117);
        $r118 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r118.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("__VIEWSTATEFIELDCOUNT", "2");
        interfaceinvoke r116.<java.util.List: boolean add(java.lang.Object)>($r118);
        $r119 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r119.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("__VIEWSTATE", r110);
        interfaceinvoke r116.<java.util.List: boolean add(java.lang.Object)>($r119);
        $r120 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r120.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("__VIEWSTATE1", r105);
        interfaceinvoke r116.<java.util.List: boolean add(java.lang.Object)>($r120);
        $r121 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r15 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_reader_stream(java.lang.String,java.util.List,java.io.ByteArrayOutputStream,java.lang.Boolean)>(r13, r116, null, $r121);
        r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r4[27] = 1;

     label29:
        r4[28] = 1;
        goto label2;

     label30:
        $i12 = interfaceinvoke r18.<java.util.List: int size()>();
        r16.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = $i12;
        $i13 = interfaceinvoke r18.<java.util.List: int size()>();
        $r122 = newarray (com.zoffcc.applications.aagtl.GeocacheCoordinate)[$i13];
        r16.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = $r122;
        i14 = 0;
        r4[29] = 1;

     label31:
        $i15 = interfaceinvoke r18.<java.util.List: int size()>();
        r4[30] = 1;
        if i14 >= $i15 goto label32;

        $r123 = r16.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $r124 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(i14);
        $r125 = (com.zoffcc.applications.aagtl.GeocacheCoordinate) $r124;
        $r123[i14] = $r125;
        i14 = i14 + 1;
        r4[31] = 1;
        goto label31;

     label32:
        r4[32] = 1;
        return r16;

        catch java.lang.Exception from label7 to label9 with label10;
        catch java.lang.Exception from label6 to label12 with label13;
        catch java.lang.Exception from label4 to label18 with label19;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label25 to label26 with label27;
    }

    private static void displaySegments(java.util.List)
    {
        java.util.List r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        net.htmlparser.jericho.Segment r4;
        boolean $z0;
        java.lang.Object $r5;
        java.io.PrintStream $r6, $r7, $r9, $r10;
        java.lang.String $r8;

        r0 := @parameter0: java.util.List;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (net.htmlparser.jericho.Segment) $r5;
        $r6 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("-------------------------------------------------------------------------------");
        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r8 = virtualinvoke r4.<net.htmlparser.jericho.Segment: java.lang.String getDebugInfo()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r8);
        $r9 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.Object)>(r4);
        r2[2] = 1;
        goto label1;

     label2:
        $r10 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("\n*******************************************************************************\n");
        r2[3] = 1;
        return;
    }

    public com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches_v2(com.zoffcc.applications.aagtl.Coordinate[], int, int, int, android.os.Handler, int)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        com.zoffcc.applications.aagtl.Coordinate[] r1;
        int i0, i1, i2, i3, $i6, $i7, i8;
        android.os.Handler r2;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret r5, $r31, $r108, r109;
        com.zoffcc.applications.aagtl.Coordinate r6, r7, r23, $r75;
        java.lang.String r8, r11, r12, r13, r15, r19, r22, r25, r26, r27, $r47, $r56, r60, $r65, $r71, $r103, r105;
        java.text.DecimalFormatSymbols r9, $r35;
        java.text.DecimalFormat r10, $r37;
        java.util.ArrayList r14, $r48, $r84, r85;
        java.util.regex.Pattern r16, r57;
        java.util.regex.Matcher r17, r58;
        java.lang.Exception r20, r28, $r51, $r107;
        java.util.Date r21, $r66;
        double[] r24;
        com.zoffcc.applications.aagtl.aagtl $r29, $r76;
        java.lang.Boolean $r30, $r49, $r104;
        java.lang.StringBuilder $r32, $r33, $r34, $r38, $r39, $r40, $r41, $r42, $r44, $r45, $r46, $r53, $r54, $r55, $r62, $r63, $r64, $r68, $r69, $r70, $r72, $r73, $r74, $r78, $r79, $r80, $r81, $r82, $r83, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r100, $r101, $r102;
        java.util.Locale $r36;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        java.io.PrintStream $r43, $r52, $r61, $r67, $r99, $r106;
        boolean $z0, $z1;
        long $l4, $l5;
        com.zoffcc.applications.aagtl.Rose $r77;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r2 := @parameter4: android.os.Handler;
        i3 := @parameter5: int;
        $r3 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[8];
        $r29 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke $r29.<com.zoffcc.applications.aagtl.aagtl: void set_bar_slow(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r2, "get geocaches", "downloading ...", i0, i1, $r30);
        r4[0] = 1;
        if i3 <= 16 goto label1;

        i3 = 16;
        r4[1] = 1;
        goto label2;

     label1:
        r4[2] = 1;
        if i3 >= 6 goto label2;

        i3 = 6;
        r4[3] = 1;

     label2:
        $r31 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r31.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r5 = $r31;
        r6 = r1[0];
        r7 = r1[1];
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
        r8 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        $r35 = new java.text.DecimalFormatSymbols;
        $r36 = <java.util.Locale: java.util.Locale US>;
        specialinvoke $r35.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r36);
        r9 = $r35;
        virtualinvoke r9.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(46);
        virtualinvoke r9.<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)>(44);
        $r37 = new java.text.DecimalFormat;
        specialinvoke $r37.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>("#.#####", r9);
        r10 = $r37;
        $d0 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d1 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d2 = $d0 + $d1;
        $d3 = $d2 / 2.0;
        r11 = virtualinvoke r10.<java.text.DecimalFormat: java.lang.String format(double)>($d3);
        $d4 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d5 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d6 = $d4 + $d5;
        $d7 = $d6 / 2.0;
        r12 = virtualinvoke r10.<java.text.DecimalFormat: java.lang.String format(double)>($d7);
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.geocaching.com/map/default.aspx?ll=");
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);
        r13 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        $r43 = <java.lang.System: java.io.PrintStream out>;
        $r44 = new java.lang.StringBuilder;
        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url=");
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r47);
        $r48 = new java.util.ArrayList;
        specialinvoke $r48.<java.util.ArrayList: void <init>()>();
        r14 = $r48;
        $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r15 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_reader_stream(java.lang.String,java.util.List,java.io.ByteArrayOutputStream,java.lang.Boolean)>(r13, r14, null, $r49);
        r16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("Groundspeak\\.Map\\.UserSession.\'([^\']*)\'");
        r17 = virtualinvoke r16.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r15);
        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r19 = "";

     label3:
        $z0 = virtualinvoke r17.<java.util.regex.Matcher: boolean find()>();
        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);
        r19 = virtualinvoke r17.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        r4[4] = 1;

     label4:
        goto label6;

     label5:
        $r51 := @caughtexception;
        r20 = $r51;
        virtualinvoke r20.<java.lang.Exception: void printStackTrace()>();
        r4[5] = 1;

     label6:
        $r52 = <java.lang.System: java.io.PrintStream out>;
        $r53 = new java.lang.StringBuilder;
        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("kk=");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r56);
        r57 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("sessionToken:\'([^\']*)\'");
        r58 = virtualinvoke r57.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r15);
        $z1 = virtualinvoke r58.<java.util.regex.Matcher: boolean find()>();
        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);
        r60 = virtualinvoke r58.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $r61 = <java.lang.System: java.io.PrintStream out>;
        $r62 = new java.lang.StringBuilder;
        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sess_token=");
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r65);
        $r66 = new java.util.Date;
        specialinvoke $r66.<java.util.Date: void <init>()>();
        r21 = $r66;
        $r67 = <java.lang.System: java.io.PrintStream out>;
        $r68 = new java.lang.StringBuilder;
        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ts=");
        $l4 = virtualinvoke r21.<java.util.Date: long getTime()>();
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r71);
        $r72 = new java.lang.StringBuilder;
        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $l5 = virtualinvoke r21.<java.util.Date: long getTime()>();
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);
        r22 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();
        $r75 = new com.zoffcc.applications.aagtl.Coordinate;
        $d8 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d9 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d10 = $d8 + $d9;
        $d11 = $d10 / 2.0;
        $d12 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d13 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d14 = $d12 + $d13;
        $d15 = $d14 / 2.0;
        specialinvoke $r75.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>($d11, $d15);
        r23 = $r75;
        $r76 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r77 = $r76.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        r24 = virtualinvoke $r77.<com.zoffcc.applications.aagtl.Rose: double[] deg2num_give_zoom(com.zoffcc.applications.aagtl.Coordinate,int)>(r23, i3);
        $r78 = new java.lang.StringBuilder;
        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $d16 = r24[0];
        $i6 = (int) $d16;
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        r25 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();
        $r81 = new java.lang.StringBuilder;
        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $d17 = r24[1];
        $i7 = (int) $d17;
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        r26 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
        $r84 = new java.util.ArrayList;
        specialinvoke $r84.<java.util.ArrayList: void <init>()>();
        r85 = $r84;
        $r86 = new java.lang.StringBuilder;
        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();
        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.geocaching.com/map/map.info?x=");
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&y=");
        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);
        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&z=");
        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&k=");
        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);
        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&st=");
        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);
        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&ep=1&_=");
        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);
        r27 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();
        $r99 = <java.lang.System: java.io.PrintStream out>;
        $r100 = new java.lang.StringBuilder;
        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();
        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url2=");
        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);
        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>($r103);
        $r104 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r105 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_reader_stream(java.lang.String,java.util.List,java.io.ByteArrayOutputStream,java.lang.Boolean)>(r27, r85, null, $r104);

     label7:
        $r106 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>(r105);
        r4[6] = 1;

     label8:
        goto label10;

     label9:
        $r107 := @caughtexception;
        r28 = $r107;
        r4[7] = 1;

     label10:
        i8 = i0 + 1;
        $r108 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r108.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r109 = $r108;
        r109.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i8;
        r109.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = null;
        r4[8] = 1;
        return r109;

        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches_v1(com.zoffcc.applications.aagtl.Coordinate[], int, int, int, android.os.Handler, int)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        com.zoffcc.applications.aagtl.Coordinate[] r1, r23, r78, r85, r92;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23, i24, $i25, i26, $i27, i28, $i29, $i30, $i31, $i32, $i33, i34, i35, $i36, i37, $i38;
        android.os.Handler r2;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret r5, r24, r25, r26, r27, $r30, $r33, r34, $r72, r73, $r79, r80, $r86, r87, $r93, r94;
        com.zoffcc.applications.aagtl.Coordinate r6, r7, r21, r22, $r70, $r71, $r74, r75, $r76, r77, $r81, r82, $r83, r84, $r88, r89, $r90, r91;
        java.lang.String r8, r9, r12, r35, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r49, r54, $r58, $r123, $r124, $r127, r129, $r132, $r140;
        java.util.ArrayList r10, $r36;
        java.text.DecimalFormat r11, $r37;
        java.io.ByteArrayOutputStream r13, $r50;
        java.io.IOException r14, $r52;
        java.lang.Boolean r15, $r32, $r53, r65, r68, $r136, r138, $r141, $r143;
        org.json.JSONObject r16, $r55, $r56, r64, $r120, $r121, $r122, $r126, $r128, $r135, $r137;
        org.json.JSONException r17, r20, $r59, $r66, r67, $r69, $r145, r146;
        boolean z0, z1, $z4, $z5, $z6, $z7, $z8, $z9;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33;
        com.zoffcc.applications.aagtl.GeocacheCoordinate[] r28, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r106, $r107, $r109, $r110, $r112, $r113, $r115, r118;
        null_type n0;
        java.lang.Exception r29, $r61, r62, $r133;
        com.zoffcc.applications.aagtl.aagtl $r31, $r139, $r142;
        java.lang.Object[] $r38;
        org.apache.http.message.BasicNameValuePair $r47, $r48;
        byte[] $r51;
        java.lang.Object $r57, $r131;
        java.io.PrintStream $r60, $r63, $r134, $r147;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r105, $r108, $r111, $r114, $r119, r125;
        org.json.JSONArray r117;
        float $f0, $f1;
        java.util.HashMap $r130;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r2 := @parameter4: android.os.Handler;
        i3 := @parameter5: int;
        $r3 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[9];
        $i11 = <com.zoffcc.applications.aagtl.HTMLDownloader: int GC_DOWNLOAD_MAX_REC_DEPTH>;
        r4[0] = 1;
        if i2 <= $i11 goto label1;

        i12 = i0 + 1;
        $r30 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r30.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r5 = $r30;
        r5.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i12;
        r5.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = null;
        r4[1] = 1;
        return r5;

     label1:
        $r31 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke $r31.<com.zoffcc.applications.aagtl.aagtl: void set_bar_slow(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r2, "get geocaches", "downloading ...", i0, i1, $r32);
        $r33 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r33.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r34 = $r33;
        r6 = r1[0];
        r7 = r1[1];
        r8 = "http://www.geocaching.com/map/default.aspx/MapAction?lat=9&lng=6";
        r9 = "";
        r35 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_user_token()>();
        $r36 = new java.util.ArrayList;
        specialinvoke $r36.<java.util.ArrayList: void <init>()>();
        r10 = $r36;
        $r37 = new java.text.DecimalFormat;
        specialinvoke $r37.<java.text.DecimalFormat: void <init>(java.lang.String)>("#.##########");
        r11 = $r37;
        $r38 = newarray (java.lang.Object)[5];
        $d5 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d6 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d7 = staticinvoke <java.lang.Math: double max(double,double)>($d5, $d6);
        $r39 = virtualinvoke r11.<java.text.DecimalFormat: java.lang.String format(double)>($d7);
        $r40 = virtualinvoke $r39.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(",", ".");
        $r38[0] = $r40;
        $d8 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d9 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d10 = staticinvoke <java.lang.Math: double min(double,double)>($d8, $d9);
        $r41 = virtualinvoke r11.<java.text.DecimalFormat: java.lang.String format(double)>($d10);
        $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(",", ".");
        $r38[1] = $r42;
        $d11 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d12 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d13 = staticinvoke <java.lang.Math: double max(double,double)>($d11, $d12);
        $r43 = virtualinvoke r11.<java.text.DecimalFormat: java.lang.String format(double)>($d13);
        $r44 = virtualinvoke $r43.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(",", ".");
        $r38[2] = $r44;
        $d14 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d15 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d16 = staticinvoke <java.lang.Math: double min(double,double)>($d14, $d15);
        $r45 = virtualinvoke r11.<java.text.DecimalFormat: java.lang.String format(double)>($d16);
        $r46 = virtualinvoke $r45.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(",", ".");
        $r38[3] = $r46;
        $r38[4] = r35;
        r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("{\"dto\":{\"data\":{\"c\":1,\"m\":\"\",\"d\":\"%s|%s|%s|%s\"},\"ut\":\"%s\"}}", $r38);
        $r47 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r47.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("Content-Type", "application/json");
        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r47);
        $r48 = new org.apache.http.message.BasicNameValuePair;
        $i13 = virtualinvoke r12.<java.lang.String: int length()>();
        $r49 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i13);
        specialinvoke $r48.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("Content-Length", $r49);
        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r48);
        $r50 = new java.io.ByteArrayOutputStream;
        specialinvoke $r50.<java.io.ByteArrayOutputStream: void <init>()>();
        r13 = $r50;

     label2:
        $r51 = virtualinvoke r12.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r13.<java.io.ByteArrayOutputStream: void write(byte[])>($r51);
        r4[2] = 1;

     label3:
        goto label5;

     label4:
        $r52 := @caughtexception;
        r14 = $r52;
        virtualinvoke r14.<java.io.IOException: void printStackTrace()>();
        r4[3] = 1;

     label5:
        $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r54 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String get_reader_stream(java.lang.String,java.util.List,java.io.ByteArrayOutputStream,java.lang.Boolean)>(r8, r10, r13, $r53);
        r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r16 = null;

     label6:
        $r55 = new org.json.JSONObject;
        specialinvoke $r55.<org.json.JSONObject: void <init>(java.lang.String)>(r54);
        r16 = $r55;
        $r56 = new org.json.JSONObject;
        $r57 = virtualinvoke r16.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("d");
        $r58 = virtualinvoke $r57.<java.lang.Object: java.lang.String toString()>();
        specialinvoke $r56.<org.json.JSONObject: void <init>(java.lang.String)>($r58);
        r16 = $r56;
        r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r4[4] = 1;

     label7:
        goto label10;

     label8:
        $r59 := @caughtexception;
        r17 = $r59;
        virtualinvoke r17.<org.json.JSONException: void printStackTrace()>();
        $r60 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>("get_geocaches_ret: JSONException1");
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i0;
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = null;
        r4[5] = 1;
        return r34;

     label9:
        $r61 := @caughtexception;
        r62 = $r61;
        virtualinvoke r62.<java.lang.Exception: void printStackTrace()>();
        $r63 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>("get_geocaches_ret: general Exception");
        r4[6] = 1;

     label10:
        $z4 = virtualinvoke r15.<java.lang.Boolean: boolean booleanValue()>();
        r4[7] = 1;
        if $z4 != 0 goto label11;

        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i0;
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = null;
        r4[8] = 1;
        return r34;

     label11:
        r64 = virtualinvoke r16.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("cs");
        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label12:
        virtualinvoke r64.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("cc");
        r65 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r4[9] = 1;

     label13:
        goto label15;

     label14:
        $r66 := @caughtexception;
        r67 = $r66;
        r65 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r4[10] = 1;

     label15:
        $z5 = virtualinvoke r65.<java.lang.Boolean: boolean booleanValue()>();
        r4[11] = 1;
        if $z5 != 0 goto label35;

        r68 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        z0 = 0;

     label16:
        i14 = virtualinvoke r64.<org.json.JSONObject: int getInt(java.lang.String)>("count");
        r4[12] = 1;
        if i14 <= 0 goto label17;

        r68 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r4[13] = 1;

     label17:
        r4[14] = 1;
        goto label19;

     label18:
        $r69 := @caughtexception;
        r20 = $r69;
        r68 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r4[15] = 1;

     label19:
        $z6 = virtualinvoke r68.<java.lang.Boolean: boolean booleanValue()>();
        r4[16] = 1;
        if $z6 == 0 goto label33;

        $d17 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d18 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d19 = $d17 + $d18;
        d20 = $d19 / 2.0;
        $d21 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d22 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d23 = $d21 + $d22;
        d0 = $d23 / 2.0;
        $d24 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d25 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        d1 = staticinvoke <java.lang.Math: double min(double,double)>($d24, $d25);
        $d26 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d27 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        d2 = staticinvoke <java.lang.Math: double min(double,double)>($d26, $d27);
        $d28 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d29 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        d3 = staticinvoke <java.lang.Math: double max(double,double)>($d28, $d29);
        $d30 = r6.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d31 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        d4 = staticinvoke <java.lang.Math: double max(double,double)>($d30, $d31);
        $r70 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r70.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d1, d2);
        r21 = $r70;
        $r71 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r71.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d20, d0);
        r22 = $r71;
        r23 = newarray (com.zoffcc.applications.aagtl.Coordinate)[2];
        r23[0] = r21;
        r23[1] = r22;
        $r72 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r72.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r24 = $r72;
        $i15 = i2 + 1;
        r73 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches(com.zoffcc.applications.aagtl.Coordinate[],int,int,int,android.os.Handler,int)>(r23, i0, i1, $i15, r2, i3);
        i0 = r73.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p>;
        $r74 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r74.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d20, d2);
        r75 = $r74;
        $r76 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r76.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d3, d0);
        r77 = $r76;
        r78 = newarray (com.zoffcc.applications.aagtl.Coordinate)[2];
        r78[0] = r75;
        r78[1] = r77;
        $r79 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r79.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r25 = $r79;
        $i16 = i2 + 1;
        r80 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches(com.zoffcc.applications.aagtl.Coordinate[],int,int,int,android.os.Handler,int)>(r78, i0, i1, $i16, r2, i3);
        i0 = r80.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p>;
        $r81 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r81.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d1, d0);
        r82 = $r81;
        $r83 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r83.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d20, d4);
        r84 = $r83;
        r85 = newarray (com.zoffcc.applications.aagtl.Coordinate)[2];
        r85[0] = r82;
        r85[1] = r84;
        $r86 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r86.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r26 = $r86;
        $i17 = i2 + 1;
        r87 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches(com.zoffcc.applications.aagtl.Coordinate[],int,int,int,android.os.Handler,int)>(r85, i0, i1, $i17, r2, i3);
        i0 = r87.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p>;
        $r88 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r88.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d20, d0);
        r89 = $r88;
        $r90 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r90.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d3, d4);
        r91 = $r90;
        r92 = newarray (com.zoffcc.applications.aagtl.Coordinate)[2];
        r92[0] = r89;
        r92[1] = r91;
        $r93 = new com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret;
        specialinvoke $r93.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        r27 = $r93;
        $i18 = i2 + 1;
        r94 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches(com.zoffcc.applications.aagtl.Coordinate[],int,int,int,android.os.Handler,int)>(r92, i0, i1, $i18, r2, i3);
        i0 = r94.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p>;
        i4 = 0;
        i5 = 0;
        i6 = 0;
        i7 = 0;
        $r95 = r73.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        r4[17] = 1;
        if $r95 == null goto label20;

        $r96 = r73.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        i4 = lengthof $r96;
        r4[18] = 1;

     label20:
        $r97 = r80.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        r4[19] = 1;
        if $r97 == null goto label21;

        $r98 = r80.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        i5 = lengthof $r98;
        r4[20] = 1;

     label21:
        $r99 = r87.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        r4[21] = 1;
        if $r99 == null goto label22;

        $r100 = r87.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        i6 = lengthof $r100;
        r4[22] = 1;

     label22:
        $r101 = r94.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        r4[23] = 1;
        if $r101 == null goto label23;

        $r102 = r94.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        i7 = lengthof $r102;
        r4[24] = 1;

     label23:
        $i19 = i4 + i5;
        $i20 = $i19 + i6;
        $i21 = $i20 + i7;
        r28 = newarray (com.zoffcc.applications.aagtl.GeocacheCoordinate)[$i21];
        z1 = 0;
        i8 = 0;
        r4[25] = 1;
        if i4 <= 0 goto label25;

        i22 = 0;
        r4[26] = 1;

     label24:
        $r103 = r73.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i23 = lengthof $r103;
        r4[27] = 1;
        if i22 >= $i23 goto label25;

        $r104 = r73.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $r105 = $r104[i22];
        r28[i8] = $r105;
        i8 = i8 + 1;
        i22 = i22 + 1;
        r4[28] = 1;
        goto label24;

     label25:
        r4[29] = 1;
        if i5 <= 0 goto label27;

        i24 = 0;
        r4[30] = 1;

     label26:
        $r106 = r80.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i25 = lengthof $r106;
        r4[31] = 1;
        if i24 >= $i25 goto label27;

        $r107 = r80.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $r108 = $r107[i24];
        r28[i8] = $r108;
        i8 = i8 + 1;
        i24 = i24 + 1;
        r4[32] = 1;
        goto label26;

     label27:
        r4[33] = 1;
        if i6 <= 0 goto label29;

        i26 = 0;
        r4[34] = 1;

     label28:
        $r109 = r87.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i27 = lengthof $r109;
        r4[35] = 1;
        if i26 >= $i27 goto label29;

        $r110 = r87.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $r111 = $r110[i26];
        r28[i8] = $r111;
        i8 = i8 + 1;
        i26 = i26 + 1;
        r4[36] = 1;
        goto label28;

     label29:
        r4[37] = 1;
        if i7 <= 0 goto label31;

        i28 = 0;
        r4[38] = 1;

     label30:
        $r112 = r94.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i29 = lengthof $r112;
        r4[39] = 1;
        if i28 >= $i29 goto label31;

        $r113 = r94.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $r114 = $r113[i28];
        r28[i8] = $r114;
        i8 = i8 + 1;
        i28 = i28 + 1;
        r4[40] = 1;
        goto label30;

     label31:
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i0;
        $i30 = i4 + i5;
        $i31 = $i30 + i6;
        $i32 = $i31 + i7;
        $r115 = newarray (com.zoffcc.applications.aagtl.GeocacheCoordinate)[$i32];
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = $r115;
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = r28;
        r4[41] = 1;

     label32:
        return r34;

     label33:
        r4[42] = 1;

     label34:
        goto label46;

     label35:
        i0 = i0 + 3;
        r117 = virtualinvoke r64.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("cc");
        $i33 = virtualinvoke r117.<org.json.JSONArray: int length()>();
        r118 = newarray (com.zoffcc.applications.aagtl.GeocacheCoordinate)[$i33];
        i34 = 0;
        i9 = 0;
        i35 = virtualinvoke r117.<org.json.JSONArray: int length()>();
        $f0 = (float) i35;
        $f1 = $f0 / 11.0F;
        $i36 = (int) $f1;
        i10 = 1 + $i36;
        i37 = 0;
        r4[43] = 1;

     label36:
        $i38 = virtualinvoke r117.<org.json.JSONArray: int length()>();
        r4[44] = 1;
        if i37 >= $i38 goto label44;

        n0 = null;
        $r119 = new com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r120 = virtualinvoke r117.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i37);
        $d32 = virtualinvoke $r120.<org.json.JSONObject: double getDouble(java.lang.String)>("lat");
        $r121 = virtualinvoke r117.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i37);
        $d33 = virtualinvoke $r121.<org.json.JSONObject: double getDouble(java.lang.String)>("lon");
        $r122 = virtualinvoke r117.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i37);
        $r123 = virtualinvoke $r122.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("gc");
        $r124 = virtualinvoke $r123.<java.lang.String: java.lang.String toString()>();
        specialinvoke $r119.<com.zoffcc.applications.aagtl.GeocacheCoordinate: void <init>(double,double,java.lang.String)>($d32, $d33, $r124);
        r125 = $r119;
        $r126 = virtualinvoke r117.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i37);
        $r127 = virtualinvoke $r126.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("nn");
        r125.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title> = $r127;
        $r128 = virtualinvoke r117.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i37);
        r129 = virtualinvoke $r128.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("ctid");

     label37:
        $r130 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap GC_TYPE_HASH>;
        $r131 = virtualinvoke $r130.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r129);
        $r132 = (java.lang.String) $r131;
        r125.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type> = $r132;
        r4[45] = 1;

     label38:
        goto label40;

     label39:
        $r133 := @caughtexception;
        r29 = $r133;
        $r134 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r134.<java.io.PrintStream: void println(java.lang.String)>("Unknown GC Type!!");
        r125.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type> = "unknown";
        r4[46] = 1;

     label40:
        $r135 = virtualinvoke r117.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i37);
        $z7 = virtualinvoke $r135.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("f");
        $r136 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);
        r125.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r136;
        $r137 = virtualinvoke r117.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i37);
        $z8 = virtualinvoke $r137.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("ia");
        r138 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);
        $z9 = virtualinvoke r138.<java.lang.Boolean: boolean booleanValue()>();
        r4[47] = 1;
        if $z9 == 0 goto label41;

        r125.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status> = 0;
        r4[48] = 1;
        goto label42;

     label41:
        r125.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status> = 1;
        r4[49] = 1;

     label42:
        r118[i37] = r125;
        i34 = i34 + 1;
        i9 = i9 + 1;
        $r139 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r140 = r125.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        $r141 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke $r139.<com.zoffcc.applications.aagtl.aagtl: void set_bar_slow(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r2, "get geocaches", $r140, i34, i35, $r141);
        r4[50] = 1;
        if i9 < i10 goto label43;

        i9 = 0;
        r4[51] = 1;

     label43:
        i37 = i37 + 1;
        r4[52] = 1;
        goto label36;

     label44:
        i0 = i0 + 1;
        $r142 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r143 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke $r142.<com.zoffcc.applications.aagtl.aagtl: void set_bar_slow(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r2, "get geocaches", "downloading ...", i0, i1, $r143);
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i0;
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = r118;
        r4[53] = 1;

     label45:
        return r34;

     label46:
        r4[54] = 1;
        goto label48;

     label47:
        $r145 := @caughtexception;
        r146 = $r145;
        $r147 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r147.<java.io.PrintStream: void println(java.lang.String)>("get_geocaches_ret: JSONException2");
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: int count_p> = i0;
        r34.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points> = null;
        r4[55] = 1;
        return r34;

     label48:
        r4[56] = 1;
        return r34;

        catch java.io.IOException from label2 to label3 with label4;
        catch org.json.JSONException from label6 to label7 with label8;
        catch java.lang.Exception from label6 to label7 with label9;
        catch org.json.JSONException from label12 to label13 with label14;
        catch org.json.JSONException from label16 to label17 with label18;
        catch java.lang.Exception from label37 to label38 with label39;
        catch org.json.JSONException from label11 to label32 with label47;
        catch org.json.JSONException from label34 to label45 with label47;
    }

    public static boolean isEmpty(java.lang.String[])
    {
        java.lang.String[] r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1;
        java.lang.String r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return 1;

     label1:
        r3 = r0;
        i0 = lengthof r3;
        i1 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        if i1 >= i0 goto label5;

        r4 = r3[i1];
        r2[4] = 1;
        if r4 == null goto label3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("");
        r2[5] = 1;
        if $z0 == 0 goto label4;

     label3:
        r2[6] = 1;
        return 1;

     label4:
        i1 = i1 + 1;
        r2[7] = 1;
        goto label2;

     label5:
        r2[8] = 1;
        return 0;
    }

    public static java.lang.String[] getViewstates(java.lang.String)
    {
        java.lang.String r0, r6, $r8, $r10, $r11;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1;
        java.util.regex.Matcher r3, r5;
        java.lang.String[] r4;
        java.util.regex.Pattern $r7, $r9;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        i0 = 1;
        $r7 = <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternViewstateFieldCount>;
        r3 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);
        r2[1] = 1;

     label1:
        r4 = newarray (java.lang.String)[i0];
        $r9 = <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternViewstates>;
        r5 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);
        r2[2] = 1;

     label2:
        $z1 = virtualinvoke r5.<java.util.regex.Matcher: boolean find()>();
        r2[3] = 1;
        if $z1 == 0 goto label5;

        r6 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $r10 = "";
        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r6);
        r2[4] = 1;
        if $z2 == 0 goto label3;

        i1 = 0;
        r2[5] = 1;
        goto label4;

     label3:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);
        r2[6] = 1;

     label4:
        $r11 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);
        r4[i1] = $r11;
        r2[7] = 1;
        goto label2;

     label5:
        r2[8] = 1;
        return r4;
    }

    private static void putViewstates(java.util.List, java.lang.String[])
    {
        java.util.List r0;
        java.lang.String[] r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        org.apache.http.message.BasicNameValuePair $r4, $r6, $r12;
        java.lang.String $r5, $r10, $r11, $r16;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r15;

        r0 := @parameter0: java.util.List;
        r1 := @parameter1: java.lang.String[];
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        $z0 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean isEmpty(java.lang.String[])>(r1);
        r3[0] = 1;
        if $z0 == 0 goto label1;

        r3[1] = 1;
        return;

     label1:
        $r4 = new org.apache.http.message.BasicNameValuePair;
        $r5 = r1[0];
        specialinvoke $r4.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("__VIEWSTATE", $r5);
        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r4);
        $i1 = lengthof r1;
        r3[2] = 1;
        if $i1 <= 1 goto label4;

        i0 = 1;
        r3[3] = 1;

     label2:
        $i2 = lengthof r1;
        r3[4] = 1;
        if i0 >= $i2 goto label3;

        $r6 = new org.apache.http.message.BasicNameValuePair;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__VIEWSTATE");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r11 = r1[i0];
        specialinvoke $r6.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r10, $r11);
        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r6);
        i0 = i0 + 1;
        r3[5] = 1;
        goto label2;

     label3:
        $r12 = new org.apache.http.message.BasicNameValuePair;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $i3 = lengthof r1;
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("__VIEWSTATEFIELDCOUNT", $r16);
        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r12);
        r3[6] = 1;

     label4:
        r3[7] = 1;
        return;
    }

    public static void transferViewstates(java.lang.String, java.util.List)
    {
        java.lang.String r0;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] $r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.List;
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        $r4 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String[] getViewstates(java.lang.String)>(r0);
        staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: void putViewstates(java.util.List,java.lang.String[])>(r1, $r4);
        r3[0] = 1;
        return;
    }

    private void trust_Every_ssl_cert()
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        javax.net.ssl.SSLContext r3;
        com.zoffcc.applications.aagtl.HTMLDownloader$2 $r4;
        com.zoffcc.applications.aagtl.HTMLDownloader$1 $r5;
        javax.net.ssl.X509TrustManager[] $r6;
        java.security.SecureRandom $r7;
        javax.net.ssl.SSLSocketFactory $r8;
        java.lang.Exception $r9, r10;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];

     label1:
        $r5 = new com.zoffcc.applications.aagtl.HTMLDownloader$1;
        specialinvoke $r5.<com.zoffcc.applications.aagtl.HTMLDownloader$1: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r5);
        r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");
        $r6 = newarray (javax.net.ssl.X509TrustManager)[1];
        $r4 = new com.zoffcc.applications.aagtl.HTMLDownloader$2;
        specialinvoke $r4.<com.zoffcc.applications.aagtl.HTMLDownloader$2: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader)>(r0);
        $r6[0] = $r4;
        $r7 = new java.security.SecureRandom;
        specialinvoke $r7.<java.security.SecureRandom: void <init>()>();
        virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, $r6, $r7);
        $r8 = virtualinvoke r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();
        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r8);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        virtualinvoke r10.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException, java.net.UnknownHostException
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        java.net.Socket r1, $r9;
        java.lang.String r2;
        int i0;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        javax.net.ssl.SSLContext r5;
        java.security.NoSuchAlgorithmException r6, $r7;
        javax.net.ssl.SSLSocketFactory $r8;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: java.net.Socket;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        $r3 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[15];
        r5 = null;

     label1:
        r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");
        r4[0] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r6 = $r7;
        virtualinvoke r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();
        r4[1] = 1;

     label4:
        $r8 = virtualinvoke r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();
        $r9 = virtualinvoke $r8.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r1, r2, i0, z0);
        r4[2] = 1;
        return $r9;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public boolean login()
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r64, $r70, $r72, $r89, $r91, $r95, $r99, $r112, $r114, r127, $r133, $r135, $r142, $r144;
        null_type n0, n1, n2, n3, n4, n5, n6, n7;
        org.apache.http.HttpHost r4, $r32;
        org.apache.http.conn.scheme.SchemeRegistry r5, $r19;
        org.apache.http.conn.scheme.PlainSocketFactory $r6;
        org.apache.http.params.BasicHttpParams r7, $r25, $r38, r39;
        org.apache.http.impl.conn.SingleClientConnManager r8, $r35;
        org.apache.http.client.ClientProtocolException r9, r16, $r52, $r115;
        java.lang.IllegalStateException r10, r17, $r59, $r122;
        java.util.regex.Matcher r11, r75;
        org.apache.http.client.methods.HttpPost r12, $r81;
        java.util.ArrayList r13, $r82;
        java.lang.String[] r14, r137;
        java.io.UnsupportedEncodingException r15, $r105;
        java.lang.Boolean $r18, $r30, $r41, $r65, $r76, $r79, $r85, $r107, $r128, $r138;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z9, $z14, $z15, $z16;
        org.apache.http.conn.scheme.Scheme $r20, $r22;
        com.byarger.exchangeit.EasySSLSocketFactory $r23;
        java.lang.Integer $r26;
        org.apache.http.conn.params.ConnPerRouteBean $r28;
        org.apache.http.HttpVersion $r34;
        org.apache.http.impl.client.DefaultHttpClient $r36, r37, $r40;
        short s0, s1;
        org.apache.http.params.HttpParams $r42;
        java.net.URI $r44, r45;
        java.net.URISyntaxException $r46, r47;
        org.apache.http.client.CookieStore $r48, $r69, $r73, $r102, $r132, $r136;
        org.apache.http.client.methods.HttpGet $r49, r50;
        org.apache.http.HttpResponse r51, r106;
        java.io.IOException $r53, r54, $r60, r61, $r116, r117, $r123, r124;
        java.lang.Exception $r55, r56, $r62, r63, $r118, r119, $r125, r126;
        org.apache.http.HttpEntity $r57, $r120;
        java.io.InputStream r58, r121;
        java.io.PrintStream $r66, $r77, $r80, $r86, $r108, $r129, $r139;
        java.lang.StringBuilder $r67, $r68, $r71, $r87, $r88, $r90, $r109, $r110, $r113, $r130, $r131, $r134, $r140, $r141, $r143;
        java.util.regex.Pattern $r74, $r78;
        org.apache.http.message.BasicNameValuePair $r83, $r84, $r92, $r96, $r100, $r101;
        com.zoffcc.applications.aagtl.aagtl $r93, $r97;
        com.zoffcc.applications.aagtl.aagtl$settings $r94, $r98;
        org.apache.http.client.entity.UrlEncodedFormEntity $r103, r104;
        org.apache.http.StatusLine $r111;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        r3 = "https://www.geocaching.com/login/default.aspx";
        n0 = null;
        r4 = null;
        $r18 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG2_>;
        $z0 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        specialinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: void trust_Every_ssl_cert()>();
        $r19 = new org.apache.http.conn.scheme.SchemeRegistry;
        specialinvoke $r19.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();
        r5 = $r19;
        $r20 = new org.apache.http.conn.scheme.Scheme;
        $r6 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();
        specialinvoke $r20.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r6, 80);
        virtualinvoke r5.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r20);
        $r22 = new org.apache.http.conn.scheme.Scheme;
        $r23 = new com.byarger.exchangeit.EasySSLSocketFactory;
        specialinvoke $r23.<com.byarger.exchangeit.EasySSLSocketFactory: void <init>()>();
        specialinvoke $r22.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r23, 443);
        virtualinvoke r5.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r22);
        $r25 = new org.apache.http.params.BasicHttpParams;
        specialinvoke $r25.<org.apache.http.params.BasicHttpParams: void <init>()>();
        r7 = $r25;
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(30);
        interfaceinvoke r7.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.conn-manager.max-total", $r26);
        $r28 = new org.apache.http.conn.params.ConnPerRouteBean;
        specialinvoke $r28.<org.apache.http.conn.params.ConnPerRouteBean: void <init>(int)>(30);
        interfaceinvoke r7.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.conn-manager.max-per-route", $r28);
        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        interfaceinvoke r7.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.expect-continue", $r30);
        $r32 = new org.apache.http.HttpHost;
        specialinvoke $r32.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>("192.168.0.1", 8888);
        r4 = $r32;
        interfaceinvoke r7.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", r4);
        $r34 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;
        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>(r7, $r34);
        $r35 = new org.apache.http.impl.conn.SingleClientConnManager;
        specialinvoke $r35.<org.apache.http.impl.conn.SingleClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>(r7, r5);
        r8 = $r35;
        $r36 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r36.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(r8, r7);
        r37 = $r36;
        r2[1] = 1;
        goto label2;

     label1:
        $r38 = new org.apache.http.params.BasicHttpParams;
        specialinvoke $r38.<org.apache.http.params.BasicHttpParams: void <init>()>();
        r39 = $r38;
        s0 = 10000;
        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r39, s0);
        s1 = 10000;
        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r39, s1);
        $r40 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r40.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r39);
        r37 = $r40;
        r2[2] = 1;

     label2:
        $r41 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG2_>;
        $z1 = virtualinvoke $r41.<java.lang.Boolean: boolean booleanValue()>();
        r2[3] = 1;
        if $z1 == 0 goto label3;

        $r42 = virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>();
        interfaceinvoke $r42.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", r4);
        r2[4] = 1;

     label3:
        n3 = null;
        n4 = null;

     label4:
        $r44 = new java.net.URI;
        specialinvoke $r44.<java.net.URI: void <init>(java.lang.String)>(r3);
        r45 = $r44;
        r2[5] = 1;

     label5:
        goto label7;

     label6:
        $r46 := @caughtexception;
        r47 = $r46;
        virtualinvoke r47.<java.net.URISyntaxException: void printStackTrace()>();
        r2[6] = 1;
        return 0;

     label7:
        $r48 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: void setCookieStore(org.apache.http.client.CookieStore)>($r48);
        $r49 = new org.apache.http.client.methods.HttpGet;
        specialinvoke $r49.<org.apache.http.client.methods.HttpGet: void <init>(java.net.URI)>(r45);
        r50 = $r49;
        virtualinvoke r50.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("User-Agent", "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.8.1.10) Gecko/20071115 Firefox/2.0.0.10");
        virtualinvoke r50.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Pragma", "no-cache");
        virtualinvoke r50.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Accept-Language", "en");
        n1 = null;

     label8:
        r51 = virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r50);
        r2[7] = 1;

     label9:
        goto label13;

     label10:
        $r52 := @caughtexception;
        r9 = $r52;
        virtualinvoke r9.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        r2[8] = 1;
        return 0;

     label11:
        $r53 := @caughtexception;
        r54 = $r53;
        virtualinvoke r54.<java.io.IOException: void printStackTrace()>();
        r2[9] = 1;
        return 0;

     label12:
        $r55 := @caughtexception;
        r56 = $r55;
        virtualinvoke r56.<java.lang.Exception: void printStackTrace()>();
        r2[10] = 1;
        return 0;

     label13:
        n5 = null;

     label14:
        $r57 = interfaceinvoke r51.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();
        r58 = interfaceinvoke $r57.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();
        r2[11] = 1;

     label15:
        goto label19;

     label16:
        $r59 := @caughtexception;
        r10 = $r59;
        virtualinvoke r10.<java.lang.IllegalStateException: void printStackTrace()>();
        r2[12] = 1;
        return 0;

     label17:
        $r60 := @caughtexception;
        r61 = $r60;
        virtualinvoke r61.<java.io.IOException: void printStackTrace()>();
        r2[13] = 1;
        return 0;

     label18:
        $r62 := @caughtexception;
        r63 = $r62;
        virtualinvoke r63.<java.lang.Exception: void printStackTrace()>();
        r2[14] = 1;
        return 0;

     label19:
        r64 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String generateString(java.io.InputStream)>(r58);
        $r65 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z2 = virtualinvoke $r65.<java.lang.Boolean: boolean booleanValue()>();
        r2[15] = 1;
        if $z2 == 0 goto label20;

        $r66 = <java.lang.System: java.io.PrintStream out>;
        $r67 = new java.lang.StringBuilder;
        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("111 cookies=");
        $r69 = virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>();
        $r70 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String dumpCookieStore(org.apache.http.client.CookieStore)>($r69);
        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>($r72);
        r2[16] = 1;

     label20:
        $r73 = virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>();
        <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar> = $r73;
        $r74 = <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternLogged2In>;
        r75 = virtualinvoke $r74.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r64);
        $z3 = virtualinvoke r75.<java.util.regex.Matcher: boolean find()>();
        r2[17] = 1;
        if $z3 == 0 goto label22;

        $r76 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z4 = virtualinvoke $r76.<java.lang.Boolean: boolean booleanValue()>();
        r2[18] = 1;
        if $z4 == 0 goto label21;

        $r77 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r77.<java.io.PrintStream: void println(java.lang.String)>("login: -> already logged in (1)");
        r2[19] = 1;

     label21:
        r2[20] = 1;
        return 1;

     label22:
        $r78 = <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternLoggedIn>;
        r11 = virtualinvoke $r78.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r64);
        $z5 = virtualinvoke r11.<java.util.regex.Matcher: boolean find()>();
        r2[21] = 1;
        if $z5 == 0 goto label24;

        $r79 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z6 = virtualinvoke $r79.<java.lang.Boolean: boolean booleanValue()>();
        r2[22] = 1;
        if $z6 == 0 goto label23;

        $r80 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>("login: -> already logged in (2)");
        r2[23] = 1;

     label23:
        r2[24] = 1;
        return 1;

     label24:
        $r81 = new org.apache.http.client.methods.HttpPost;
        specialinvoke $r81.<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>(r45);
        r12 = $r81;
        virtualinvoke r12.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("User-Agent", "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0) Firefox/7.0");
        virtualinvoke r12.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Pragma", "no-cache");
        virtualinvoke r12.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded");
        virtualinvoke r12.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Accept-Language", "en");
        $r82 = new java.util.ArrayList;
        specialinvoke $r82.<java.util.ArrayList: void <init>()>();
        r13 = $r82;
        $r83 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r83.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("__EVENTTARGET", "");
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r83);
        $r84 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r84.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("__EVENTARGUMENT", "");
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r84);
        r14 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String[] getViewstates(java.lang.String)>(r64);
        $r85 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z9 = virtualinvoke $r85.<java.lang.Boolean: boolean booleanValue()>();
        r2[25] = 1;
        if $z9 == 0 goto label25;

        $r86 = <java.lang.System: java.io.PrintStream out>;
        $r87 = new java.lang.StringBuilder;
        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vs==");
        $r89 = r14[0];
        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);
        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>($r91);
        r2[26] = 1;

     label25:
        staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: void putViewstates(java.util.List,java.lang.String[])>(r13, r14);
        $r92 = new org.apache.http.message.BasicNameValuePair;
        $r93 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r94 = $r93.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r95 = $r94.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_username>;
        specialinvoke $r92.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("ctl00$ContentBody$tbUsername", $r95);
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r92);
        $r96 = new org.apache.http.message.BasicNameValuePair;
        $r97 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r98 = $r97.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r99 = $r98.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password>;
        specialinvoke $r96.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("ctl00$ContentBody$tbPassword", $r99);
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r96);
        $r100 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r100.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("ctl00$ContentBody$btnSignIn", "Login");
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r100);
        $r101 = new org.apache.http.message.BasicNameValuePair;
        specialinvoke $r101.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("ctl00$ContentBody$cbRememberMe", "on");
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r101);
        $r102 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: void setCookieStore(org.apache.http.client.CookieStore)>($r102);
        n2 = null;

     label26:
        $r103 = new org.apache.http.client.entity.UrlEncodedFormEntity;
        specialinvoke $r103.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r13, "UTF-8");
        r104 = $r103;
        r2[27] = 1;

     label27:
        goto label29;

     label28:
        $r105 := @caughtexception;
        r15 = $r105;
        virtualinvoke r15.<java.io.UnsupportedEncodingException: void printStackTrace()>();
        r2[28] = 1;
        return 0;

     label29:
        virtualinvoke r12.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>(r104);
        n6 = null;

     label30:
        r106 = virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r12);
        $r107 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z14 = virtualinvoke $r107.<java.lang.Boolean: boolean booleanValue()>();
        r2[29] = 1;
        if $z14 == 0 goto label31;

        $r108 = <java.lang.System: java.io.PrintStream out>;
        $r109 = new java.lang.StringBuilder;
        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();
        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("login response ->");
        $r111 = interfaceinvoke r106.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();
        $r112 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r111);
        $r113 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);
        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r108.<java.io.PrintStream: void println(java.lang.String)>($r114);
        r2[30] = 1;

     label31:
        r2[31] = 1;

     label32:
        goto label36;

     label33:
        $r115 := @caughtexception;
        r16 = $r115;
        virtualinvoke r16.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        r2[32] = 1;
        return 0;

     label34:
        $r116 := @caughtexception;
        r117 = $r116;
        virtualinvoke r117.<java.io.IOException: void printStackTrace()>();
        r2[33] = 1;
        return 0;

     label35:
        $r118 := @caughtexception;
        r119 = $r118;
        virtualinvoke r119.<java.lang.Exception: void printStackTrace()>();
        r2[34] = 1;
        return 0;

     label36:
        n7 = null;

     label37:
        $r120 = interfaceinvoke r106.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();
        r121 = interfaceinvoke $r120.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();
        r2[35] = 1;

     label38:
        goto label42;

     label39:
        $r122 := @caughtexception;
        r17 = $r122;
        virtualinvoke r17.<java.lang.IllegalStateException: void printStackTrace()>();
        r2[36] = 1;
        return 0;

     label40:
        $r123 := @caughtexception;
        r124 = $r123;
        virtualinvoke r124.<java.io.IOException: void printStackTrace()>();
        r2[37] = 1;
        return 0;

     label41:
        $r125 := @caughtexception;
        r126 = $r125;
        virtualinvoke r126.<java.lang.Exception: void printStackTrace()>();
        r2[38] = 1;
        return 0;

     label42:
        r127 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String generateString(java.io.InputStream)>(r121);
        $r128 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z15 = virtualinvoke $r128.<java.lang.Boolean: boolean booleanValue()>();
        r2[39] = 1;
        if $z15 == 0 goto label43;

        $r129 = <java.lang.System: java.io.PrintStream out>;
        $r130 = new java.lang.StringBuilder;
        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();
        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2222 cookies=");
        $r132 = virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>();
        $r133 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String dumpCookieStore(org.apache.http.client.CookieStore)>($r132);
        $r134 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);
        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r129.<java.io.PrintStream: void println(java.lang.String)>($r135);
        r2[40] = 1;

     label43:
        $r136 = virtualinvoke r37.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>();
        <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar> = $r136;
        r137 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String[] getViewstates(java.lang.String)>(r127);
        $r138 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z16 = virtualinvoke $r138.<java.lang.Boolean: boolean booleanValue()>();
        r2[41] = 1;
        if $z16 == 0 goto label44;

        $r139 = <java.lang.System: java.io.PrintStream out>;
        $r140 = new java.lang.StringBuilder;
        specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();
        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vs==");
        $r142 = r137[0];
        $r143 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r142);
        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r139.<java.io.PrintStream: void println(java.lang.String)>($r144);
        r2[42] = 1;

     label44:
        r2[43] = 1;
        return 1;

        catch java.net.URISyntaxException from label4 to label5 with label6;
        catch org.apache.http.client.ClientProtocolException from label8 to label9 with label10;
        catch java.io.IOException from label8 to label9 with label11;
        catch java.lang.Exception from label8 to label9 with label12;
        catch java.lang.IllegalStateException from label14 to label15 with label16;
        catch java.io.IOException from label14 to label15 with label17;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label28;
        catch org.apache.http.client.ClientProtocolException from label30 to label32 with label33;
        catch java.io.IOException from label30 to label32 with label34;
        catch java.lang.Exception from label30 to label32 with label35;
        catch java.lang.IllegalStateException from label37 to label38 with label39;
        catch java.io.IOException from label37 to label38 with label40;
        catch java.lang.Exception from label37 to label38 with label41;
    }

    public static java.lang.String dumpCookieStore(org.apache.http.client.CookieStore)
    {
        org.apache.http.client.CookieStore r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r6;
        java.util.Iterator r4;
        org.apache.http.cookie.Cookie r5;
        java.util.List $r7;
        boolean $z0;
        java.lang.Object $r8;
        java.io.PrintStream $r9;
        java.lang.String $r10, $r13, $r16, $r19;

        r0 := @parameter0: org.apache.http.client.CookieStore;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        r3 = $r6;
        $r7 = interfaceinvoke r0.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.apache.http.cookie.Cookie) $r8;
        $r9 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("CC**\n\n");
        $r10 = interfaceinvoke r5.<org.apache.http.cookie.Cookie: java.lang.String getName()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r13 = interfaceinvoke r5.<org.apache.http.cookie.Cookie: java.lang.String getValue()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r16 = interfaceinvoke r5.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");
        r2[2] = 1;
        goto label1;

     label2:
        $r19 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;
        return $r19;
    }

    public void saveCookies()
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.FileOutputStream r3, $r23;
        java.io.OutputStreamWriter r4, $r24;
        java.lang.StringBuilder $r5, $r13, $r14, $r17, $r20, $r21;
        java.io.File r6, r7, $r10, $r16;
        java.lang.Throwable r8, $r36;
        java.io.IOException r9, $r27, r28, $r33, r34, $r37;
        com.zoffcc.applications.aagtl.aagtl $r11, $r18;
        java.lang.String $r12, $r15, $r19, $r22, $r26;
        org.apache.http.client.CookieStore $r25;
        java.io.PrintStream $r29, $r32, $r35, $r38;
        java.lang.Exception $r30, r31;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        r3 = null;
        r4 = null;
        $r10 = new java.io.File;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r11 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r12 = $r11.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/config");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r15);
        r6 = $r10;
        virtualinvoke r6.<java.io.File: boolean mkdirs()>();

     label1:
        $r16 = new java.io.File;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r19 = $r18.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/config/cookie.txt");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r22);
        r7 = $r16;
        $r23 = new java.io.FileOutputStream;
        specialinvoke $r23.<java.io.FileOutputStream: void <init>(java.io.File)>(r7);
        r3 = $r23;
        $r24 = new java.io.OutputStreamWriter;
        specialinvoke $r24.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r3);
        r4 = $r24;
        $r25 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r4.<java.io.OutputStreamWriter: void write(java.lang.String)>($r26);
        virtualinvoke r4.<java.io.OutputStreamWriter: void flush()>();

     label2:
        virtualinvoke r4.<java.io.OutputStreamWriter: void close()>();
        virtualinvoke r3.<java.io.FileOutputStream: void close()>();
        r2[0] = 1;

     label3:
        goto label16;

     label4:
        $r27 := @caughtexception;
        r28 = $r27;
        virtualinvoke r28.<java.io.IOException: void printStackTrace()>();
        $r29 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("saveCookies: Exception2");
        r2[1] = 1;
        goto label16;

     label5:
        $r30 := @caughtexception;

     label6:
        r31 = $r30;
        virtualinvoke r31.<java.lang.Exception: void printStackTrace()>();
        $r32 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("saveCookies: Exception1");

     label7:
        virtualinvoke r4.<java.io.OutputStreamWriter: void close()>();
        virtualinvoke r3.<java.io.FileOutputStream: void close()>();
        r2[2] = 1;

     label8:
        goto label16;

     label9:
        $r33 := @caughtexception;
        r34 = $r33;
        virtualinvoke r34.<java.io.IOException: void printStackTrace()>();
        $r35 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("saveCookies: Exception2");
        r2[3] = 1;
        goto label16;

     label10:
        $r36 := @caughtexception;

     label11:
        r8 = $r36;

     label12:
        virtualinvoke r4.<java.io.OutputStreamWriter: void close()>();
        virtualinvoke r3.<java.io.FileOutputStream: void close()>();
        r2[4] = 1;

     label13:
        goto label15;

     label14:
        $r37 := @caughtexception;
        r9 = $r37;
        virtualinvoke r9.<java.io.IOException: void printStackTrace()>();
        $r38 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("saveCookies: Exception2");
        r2[5] = 1;

     label15:
        r2[6] = 1;
        throw r8;

     label16:
        r2[7] = 1;
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
        catch java.io.IOException from label7 to label8 with label9;
        catch java.lang.Throwable from label1 to label2 with label10;
        catch java.lang.Throwable from label6 to label7 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public java.lang.String getCookies()
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r15, $r22;
        int i0, $i1;
        org.apache.http.client.CookieStore $r4, $r11, $r18;
        java.util.List $r5, $r12, $r19;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r16, $r17, $r23;
        java.lang.Object $r13, $r20;
        org.apache.http.cookie.Cookie $r14, $r21;
        java.lang.Exception $r24, r25;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        r3 = "";

     label1:
        i0 = 0;
        r2[0] = 1;

     label2:
        $r4 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r5 = interfaceinvoke $r4.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        r2[1] = 1;
        if i0 >= $i1 goto label4;

        r2[2] = 1;
        if i0 <= 0 goto label3;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");
        r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;

     label3:
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r11 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r12 = interfaceinvoke $r11.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i0);
        $r14 = (org.apache.http.cookie.Cookie) $r13;
        $r15 = interfaceinvoke $r14.<org.apache.http.cookie.Cookie: java.lang.String getName()>();
        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r18 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r19 = interfaceinvoke $r18.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i0);
        $r21 = (org.apache.http.cookie.Cookie) $r20;
        $r22 = interfaceinvoke $r21.<org.apache.http.cookie.Cookie: java.lang.String getValue()>();
        $r23 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        i0 = i0 + 1;
        r2[4] = 1;
        goto label2;

     label4:
        r2[5] = 1;

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;
        r25 = $r24;
        virtualinvoke r25.<java.lang.Exception: void printStackTrace()>();
        r2[6] = 1;

     label7:
        r2[7] = 1;
        return r3;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    public java.lang.String[] getCookies2()
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.http.client.CookieStore $r4, $r6, $r8, $r10, $r15;
        java.util.List $r5, $r7, $r9, $r11, $r16;
        java.lang.Object $r12, $r17;
        org.apache.http.cookie.Cookie $r13, $r18;
        java.lang.String $r14, $r19;
        java.lang.Exception $r20, r21;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $r4 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r5 = interfaceinvoke $r4.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        r2[0] = 1;
        if $i1 != 0 goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r6 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r7 = interfaceinvoke $r6.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();
        $i3 = $i2 * 2;
        r3 = newarray (java.lang.String)[$i3];

     label2:
        i0 = 0;
        r2[2] = 1;

     label3:
        $r8 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r9 = interfaceinvoke $r8.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $i4 = interfaceinvoke $r9.<java.util.List: int size()>();
        r2[3] = 1;
        if i0 >= $i4 goto label4;

        $i5 = i0 * 2;
        $r10 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r11 = interfaceinvoke $r10.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0);
        $r13 = (org.apache.http.cookie.Cookie) $r12;
        $r14 = interfaceinvoke $r13.<org.apache.http.cookie.Cookie: java.lang.String getName()>();
        r3[$i5] = $r14;
        $i6 = i0 * 2;
        $i7 = $i6 + 1;
        $r15 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        $r16 = interfaceinvoke $r15.<org.apache.http.client.CookieStore: java.util.List getCookies()>();
        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i0);
        $r18 = (org.apache.http.cookie.Cookie) $r17;
        $r19 = interfaceinvoke $r18.<org.apache.http.cookie.Cookie: java.lang.String getValue()>();
        r3[$i7] = $r19;
        i0 = i0 + 1;
        r2[4] = 1;
        goto label3;

     label4:
        r2[5] = 1;

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;
        r21 = $r20;
        virtualinvoke r21.<java.lang.Exception: void printStackTrace()>();
        r2[6] = 1;

     label7:
        r2[7] = 1;
        return r3;

        catch java.lang.Exception from label2 to label5 with label6;
    }

    public void loadCookies()
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] r3, r15, r62, $r74, $r75, r84, $r92, $r94;
        java.lang.StringBuilder $r4, $r24, $r25, $r28, $r31, $r32, $r64, $r65, $r66, $r68, $r69, $r70;
        java.io.File r5, r6, $r21, $r27;
        java.io.FileInputStream r7, $r35;
        java.io.InputStreamReader r8, $r36;
        char[] r9;
        java.io.StringWriter r10, $r34;
        null_type n0, n1, n2, n3, n4, n5, n6, n7, n8;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.NullPointerException r11, r13, $r38, r39, $r47, $r53;
        java.lang.Throwable r12, $r52;
        java.lang.String r14, r16, r17, r18, r19, r20, $r23, $r26, $r30, $r33, r37, r60, r61, r63, r67, $r71, $r72, r73, $r76, r77, r78, r83, r85, r86, r87, r88, $r89, $r90, r91, r93, $r95, r96, r97;
        int i0, $i1, i2, $i3, $i4, $i5, i6, $i7, $i8, i9, $i10;
        com.zoffcc.applications.aagtl.aagtl $r22, $r29;
        java.io.PrintStream $r40, $r43, $r46, $r48, $r51, $r54, $r57;
        java.io.IOException $r41, r42, $r49, r50, $r55, r56;
        java.lang.Exception $r44, r45;
        org.apache.http.client.CookieStore $r58, $r59, $r82, $r101;
        org.apache.http.impl.cookie.BasicClientCookie $r79, r80, $r98, r99;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        $r1 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        r3 = newarray (java.lang.String)[2];
        $r21 = new java.io.File;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r22 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r23 = $r22.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r24 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/config");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r26);
        r5 = $r21;
        virtualinvoke r5.<java.io.File: boolean mkdirs()>();
        $r27 = new java.io.File;
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.aagtl main_aagtl>;
        $r30 = $r29.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/config/cookie.txt");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>($r33);
        r6 = $r27;
        r7 = null;
        r8 = null;
        r9 = newarray (char)[255];
        $r34 = new java.io.StringWriter;
        specialinvoke $r34.<java.io.StringWriter: void <init>()>();
        r10 = $r34;
        n0 = null;

     label1:
        $r35 = new java.io.FileInputStream;
        specialinvoke $r35.<java.io.FileInputStream: void <init>(java.io.File)>(r6);
        r7 = $r35;
        $r36 = new java.io.InputStreamReader;
        specialinvoke $r36.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r7);
        r8 = $r36;
        z0 = 0;
        r2[0] = 1;

     label2:
        $i1 = virtualinvoke r8.<java.io.InputStreamReader: int read(char[])>(r9);
        i2 = $i1;
        r2[1] = 1;
        if $i1 == -1 goto label3;

        virtualinvoke r10.<java.io.Writer: void write(char[],int,int)>(r9, 0, i2);
        r2[2] = 1;
        goto label2;

     label3:
        r37 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

     label4:
        virtualinvoke r8.<java.io.InputStreamReader: void close()>();
        virtualinvoke r7.<java.io.FileInputStream: void close()>();
        r2[3] = 1;

     label5:
        goto label22;

     label6:
        $r38 := @caughtexception;
        r39 = $r38;
        $r40 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("loadCookies: Exception2");
        r2[4] = 1;
        return;

     label7:
        $r41 := @caughtexception;
        r42 = $r41;
        $r43 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("loadCookies: Exception3");
        virtualinvoke r42.<java.io.IOException: void printStackTrace()>();
        r2[5] = 1;
        return;

     label8:
        $r44 := @caughtexception;

     label9:
        r45 = $r44;
        virtualinvoke r45.<java.lang.Exception: void printStackTrace()>();
        $r46 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("loadCookies: Exception1");

     label10:
        virtualinvoke r8.<java.io.InputStreamReader: void close()>();
        virtualinvoke r7.<java.io.FileInputStream: void close()>();
        r2[6] = 1;

     label11:
        goto label14;

     label12:
        $r47 := @caughtexception;
        r11 = $r47;
        $r48 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("loadCookies: Exception2");
        r2[7] = 1;
        return;

     label13:
        $r49 := @caughtexception;
        r50 = $r49;
        $r51 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("loadCookies: Exception3");
        virtualinvoke r50.<java.io.IOException: void printStackTrace()>();
        r2[8] = 1;
        return;

     label14:
        r2[9] = 1;
        return;

     label15:
        $r52 := @caughtexception;

     label16:
        r12 = $r52;

     label17:
        virtualinvoke r8.<java.io.InputStreamReader: void close()>();
        virtualinvoke r7.<java.io.FileInputStream: void close()>();
        r2[10] = 1;

     label18:
        goto label21;

     label19:
        $r53 := @caughtexception;
        r13 = $r53;
        $r54 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("loadCookies: Exception2");
        r2[11] = 1;
        return;

     label20:
        $r55 := @caughtexception;
        r56 = $r55;
        $r57 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("loadCookies: Exception3");
        virtualinvoke r56.<java.io.IOException: void printStackTrace()>();
        r2[12] = 1;
        return;

     label21:
        r2[13] = 1;
        throw r12;

     label22:
        $r58 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        r2[14] = 1;
        if $r58 != null goto label23;

        r2[15] = 1;
        return;

     label23:
        $r59 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        interfaceinvoke $r59.<org.apache.http.client.CookieStore: void clear()>();
        $i3 = virtualinvoke r37.<java.lang.String: int length()>();
        r2[16] = 1;
        if $i3 <= 1 goto label43;

        $z2 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>("[[");
        r2[17] = 1;
        if $z2 == 0 goto label35;

        $i4 = virtualinvoke r37.<java.lang.String: int length()>();
        $i5 = $i4 - 1;
        r60 = virtualinvoke r37.<java.lang.String: java.lang.String substring(int,int)>(1, $i5);
        r61 = "\\], \\[";
        r62 = virtualinvoke r60.<java.lang.String: java.lang.String[] split(java.lang.String)>(r61);
        i6 = 0;
        r2[18] = 1;

     label24:
        $i7 = lengthof r62;
        r2[19] = 1;
        if i6 >= $i7 goto label34;

        r63 = r62[i6];
        r2[20] = 1;
        if i6 != 0 goto label25;

        $r64 = new java.lang.StringBuilder;
        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[21] = 1;
        goto label26;

     label25:
        $r68 = new java.lang.StringBuilder;
        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);
        r67 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[22] = 1;

     label26:
        r14 = "]";
        r15 = virtualinvoke r67.<java.lang.String: java.lang.String[] split(java.lang.String)>(r14);
        n1 = null;
        n2 = null;
        r16 = null;
        r17 = null;
        r18 = null;
        r19 = null;
        n3 = null;
        n4 = null;
        i0 = 0;
        r2[23] = 1;

     label27:
        $i8 = lengthof r15;
        r2[24] = 1;
        if i0 >= $i8 goto label33;

        $r71 = r15[i0];
        $r72 = virtualinvoke $r71.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[", "");
        r73 = virtualinvoke $r72.<java.lang.String: java.lang.String trim()>();
        $r74 = virtualinvoke r73.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
        r20 = $r74[0];
        $r75 = virtualinvoke r73.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
        $r76 = $r75[1];
        r77 = virtualinvoke $r76.<java.lang.String: java.lang.String substring(int)>(1);
        $z3 = virtualinvoke r20.<java.lang.String: boolean matches(java.lang.String)>("name");
        r2[25] = 1;
        if $z3 != 1 goto label28;

        r16 = r77;
        r2[26] = 1;
        goto label32;

     label28:
        $z4 = virtualinvoke r20.<java.lang.String: boolean matches(java.lang.String)>("value");
        r2[27] = 1;
        if $z4 != 1 goto label29;

        r17 = r77;
        r2[28] = 1;
        goto label32;

     label29:
        $z5 = virtualinvoke r20.<java.lang.String: boolean matches(java.lang.String)>("domain");
        r2[29] = 1;
        if $z5 != 1 goto label30;

        r18 = r77;
        r2[30] = 1;
        goto label32;

     label30:
        $z6 = virtualinvoke r20.<java.lang.String: boolean matches(java.lang.String)>("path");
        r2[31] = 1;
        if $z6 != 1 goto label31;

        r19 = r77;
        r2[32] = 1;
        goto label32;

     label31:
        $z7 = virtualinvoke r20.<java.lang.String: boolean matches(java.lang.String)>("version");
        r2[33] = 1;
        if $z7 != 1 goto label32;

        r78 = r77;
        r2[34] = 1;

     label32:
        i0 = i0 + 1;
        r2[35] = 1;
        goto label27;

     label33:
        $r79 = new org.apache.http.impl.cookie.BasicClientCookie;
        specialinvoke $r79.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>(r16, r17);
        r80 = $r79;
        virtualinvoke r80.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>(r18);
        virtualinvoke r80.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>(r19);
        $r82 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        interfaceinvoke $r82.<org.apache.http.client.CookieStore: void addCookie(org.apache.http.cookie.Cookie)>(r80);
        i6 = i6 + 1;
        r2[36] = 1;
        goto label24;

     label34:
        r2[37] = 1;
        goto label43;

     label35:
        r83 = "]";
        r84 = virtualinvoke r37.<java.lang.String: java.lang.String[] split(java.lang.String)>(r83);
        n5 = null;
        n6 = null;
        r85 = null;
        r86 = null;
        r87 = null;
        r88 = null;
        n7 = null;
        n8 = null;
        i9 = 0;
        r2[38] = 1;

     label36:
        $i10 = lengthof r84;
        r2[39] = 1;
        if i9 >= $i10 goto label42;

        $r89 = r84[i9];
        $r90 = virtualinvoke $r89.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[", "");
        r91 = virtualinvoke $r90.<java.lang.String: java.lang.String trim()>();
        $r92 = virtualinvoke r91.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
        r93 = $r92[0];
        $r94 = virtualinvoke r91.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
        $r95 = $r94[1];
        r96 = virtualinvoke $r95.<java.lang.String: java.lang.String substring(int)>(1);
        $z8 = virtualinvoke r93.<java.lang.String: boolean matches(java.lang.String)>("name");
        r2[40] = 1;
        if $z8 != 1 goto label37;

        r85 = r96;
        r2[41] = 1;
        goto label41;

     label37:
        $z9 = virtualinvoke r93.<java.lang.String: boolean matches(java.lang.String)>("value");
        r2[42] = 1;
        if $z9 != 1 goto label38;

        r86 = r96;
        r2[43] = 1;
        goto label41;

     label38:
        $z10 = virtualinvoke r93.<java.lang.String: boolean matches(java.lang.String)>("domain");
        r2[44] = 1;
        if $z10 != 1 goto label39;

        r87 = r96;
        r2[45] = 1;
        goto label41;

     label39:
        $z11 = virtualinvoke r93.<java.lang.String: boolean matches(java.lang.String)>("path");
        r2[46] = 1;
        if $z11 != 1 goto label40;

        r88 = r96;
        r2[47] = 1;
        goto label41;

     label40:
        $z12 = virtualinvoke r93.<java.lang.String: boolean matches(java.lang.String)>("version");
        r2[48] = 1;
        if $z12 != 1 goto label41;

        r97 = r96;
        r2[49] = 1;

     label41:
        i9 = i9 + 1;
        r2[50] = 1;
        goto label36;

     label42:
        $r98 = new org.apache.http.impl.cookie.BasicClientCookie;
        specialinvoke $r98.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>(r85, r86);
        r99 = $r98;
        virtualinvoke r99.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>(r87);
        virtualinvoke r99.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>(r88);
        $r101 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        interfaceinvoke $r101.<org.apache.http.client.CookieStore: void addCookie(org.apache.http.cookie.Cookie)>(r99);
        r2[51] = 1;

     label43:
        r2[52] = 1;
        return;

        catch java.lang.NullPointerException from label4 to label5 with label6;
        catch java.io.IOException from label4 to label5 with label7;
        catch java.lang.Exception from label1 to label4 with label8;
        catch java.lang.NullPointerException from label10 to label11 with label12;
        catch java.io.IOException from label10 to label11 with label13;
        catch java.lang.Throwable from label1 to label4 with label15;
        catch java.lang.Throwable from label9 to label10 with label15;
        catch java.lang.NullPointerException from label17 to label18 with label19;
        catch java.io.IOException from label17 to label18 with label20;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public java.lang.String getUrlData(java.lang.String)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        java.lang.String r1, r4, $r25, $r33;
        boolean[][] $r2;
        boolean[] r3;
        org.apache.http.params.BasicHttpParams r5, $r13;
        short s0, s1;
        org.apache.http.impl.client.DefaultHttpClient r6, $r14;
        java.net.URI r7, $r16;
        org.apache.http.client.methods.HttpGet r8, $r17;
        org.apache.http.HttpResponse r9;
        java.io.InputStream r10;
        boolean $z0, $z1;
        java.io.PrintStream $r11, $r12;
        org.apache.http.client.CookieStore $r15;
        org.apache.http.HttpEntity $r18;
        org.apache.http.conn.ClientConnectionManager $r19;
        java.net.SocketTimeoutException $r20, r21;
        java.lang.StringBuilder $r22, $r23, $r24, $r30, $r31, $r32;
        org.apache.http.client.ClientProtocolException $r26, r27;
        java.net.UnknownHostException $r28, r29;
        java.io.IOException $r34, r35;
        java.net.URISyntaxException $r36, r37;
        java.lang.Exception $r38, r39;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[22];
        r4 = null;
        $z0 = r0.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean logged_in>;
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $r11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("--1--- LOGIN START -----");
        $z1 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean login()>();
        r0.<com.zoffcc.applications.aagtl.HTMLDownloader: boolean logged_in> = $z1;
        $r12 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("--1--- LOGIN END   -----");
        r3[1] = 1;

     label1:
        $r13 = new org.apache.http.params.BasicHttpParams;
        specialinvoke $r13.<org.apache.http.params.BasicHttpParams: void <init>()>();
        r5 = $r13;
        s0 = 10000;
        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r5, s0);
        s1 = 10000;
        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r5, s1);
        $r14 = new org.apache.http.impl.client.DefaultHttpClient;
        specialinvoke $r14.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r5);
        r6 = $r14;
        $r15 = <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar>;
        virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: void setCookieStore(org.apache.http.client.CookieStore)>($r15);
        $r16 = new java.net.URI;
        specialinvoke $r16.<java.net.URI: void <init>(java.lang.String)>(r1);
        r7 = $r16;
        $r17 = new org.apache.http.client.methods.HttpGet;
        specialinvoke $r17.<org.apache.http.client.methods.HttpGet: void <init>(java.net.URI)>(r7);
        r8 = $r17;
        virtualinvoke r8.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("User-Agent", "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.8.1.10) Gecko/20071115 Firefox/2.0.0.10");
        virtualinvoke r8.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Pragma", "no-cache");
        r9 = virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r8);
        $r18 = interfaceinvoke r9.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();
        r10 = interfaceinvoke $r18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();
        r4 = virtualinvoke r0.<com.zoffcc.applications.aagtl.HTMLDownloader: java.lang.String generateString(java.io.InputStream)>(r10);
        $r19 = virtualinvoke r6.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();
        interfaceinvoke $r19.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();
        r3[2] = 1;

     label2:
        goto label9;

     label3:
        $r20 := @caughtexception;
        r21 = $r20;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connectiont timout: ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("HTMLDownloader", $r25);
        r3[3] = 1;
        goto label9;

     label4:
        $r26 := @caughtexception;
        r27 = $r26;
        virtualinvoke r27.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();
        r3[4] = 1;
        goto label9;

     label5:
        $r28 := @caughtexception;
        r29 = $r28;
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("HTMLDownloader", $r33);
        r3[5] = 1;
        goto label9;

     label6:
        $r34 := @caughtexception;
        r35 = $r34;
        virtualinvoke r35.<java.io.IOException: void printStackTrace()>();
        r3[6] = 1;
        goto label9;

     label7:
        $r36 := @caughtexception;
        r37 = $r36;
        virtualinvoke r37.<java.net.URISyntaxException: void printStackTrace()>();
        r3[7] = 1;
        goto label9;

     label8:
        $r38 := @caughtexception;
        r39 = $r38;
        virtualinvoke r39.<java.lang.Exception: void printStackTrace()>();
        r3[8] = 1;

     label9:
        r3[9] = 1;
        return r4;

        catch java.net.SocketTimeoutException from label1 to label2 with label3;
        catch org.apache.http.client.ClientProtocolException from label1 to label2 with label4;
        catch java.net.UnknownHostException from label1 to label2 with label5;
        catch java.io.IOException from label1 to label2 with label6;
        catch java.net.URISyntaxException from label1 to label2 with label7;
        catch java.lang.Exception from label1 to label2 with label8;
    }

    public java.lang.String generateString(java.io.InputStream)
    {
        com.zoffcc.applications.aagtl.HTMLDownloader r0;
        java.io.InputStream r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.InputStreamReader r4, $r8;
        int $i0;
        java.io.BufferedReader r5, $r9;
        java.lang.String r6, r7, $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        java.io.IOException $r15, r16, $r19, r20;
        java.lang.Exception $r17, r18, $r21, r22;

        r0 := @this: com.zoffcc.applications.aagtl.HTMLDownloader;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        $r8 = new java.io.InputStreamReader;
        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);
        r4 = $r8;
        $r9 = new java.io.BufferedReader;
        $i0 = <com.zoffcc.applications.aagtl.HTMLDownloader: int large_buffer_size>;
        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r4, $i0);
        r5 = $r9;
        r6 = "";
        r3[0] = 1;

     label1:
        $r10 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>();
        r7 = $r10;
        r3[1] = 1;
        if $r10 == null goto label2;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;

     label3:
        goto label6;

     label4:
        $r15 := @caughtexception;
        r16 = $r15;
        virtualinvoke r16.<java.io.IOException: void printStackTrace()>();
        r3[4] = 1;
        goto label6;

     label5:
        $r17 := @caughtexception;
        r18 = $r17;
        virtualinvoke r18.<java.lang.Exception: void printStackTrace()>();
        r3[5] = 1;

     label6:
        virtualinvoke r1.<java.io.InputStream: void close()>();
        r3[6] = 1;

     label7:
        goto label10;

     label8:
        $r19 := @caughtexception;
        r20 = $r19;
        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();
        r3[7] = 1;
        goto label10;

     label9:
        $r21 := @caughtexception;
        r22 = $r21;
        virtualinvoke r22.<java.lang.Exception: void printStackTrace()>();
        r3[8] = 1;

     label10:
        r3[9] = 1;
        return r6;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
        catch java.io.IOException from label6 to label7 with label8;
        catch java.lang.Exception from label6 to label7 with label9;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.regex.Pattern $r2, $r3, $r4, $r5, $r6;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRi()>();
        r1 = $r0[24];
        <com.zoffcc.applications.aagtl.HTMLDownloader: org.apache.http.client.CookieStore cookie_jar> = null;
        <com.zoffcc.applications.aagtl.HTMLDownloader: int GC_DOWNLOAD_MAX_REC_DEPTH> = 6;
        <com.zoffcc.applications.aagtl.HTMLDownloader: int large_buffer_size> = 51200;
        <com.zoffcc.applications.aagtl.HTMLDownloader: int default_buffer_size> = 51200;
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("<span class=\"Success\">You are logged in as[^<]*<strong[^>]*>([^<]+)</strong>[^<]*</span>", 10);
        <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternLoggedIn> = $r2;
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("<strong>\\W*Hello,[^<]*<a[^>]+>([^<]+)</a>[^<]*</strong>", 10);
        <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternLogged2In> = $r3;
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("id=\"__VIEWSTATEFIELDCOUNT\"[^(value)]+value=\"(\\d+)\"[^>]+>", 10);
        <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternViewstateFieldCount> = $r4;
        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("id=\"__VIEWSTATE(\\d*)\"[^(value)]+value=\"([^\"]+)\"[^>]+>", 10);
        <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternViewstates> = $r5;
        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("userToken\\s*=\\s*\'([^\']+)\'");
        <com.zoffcc.applications.aagtl.HTMLDownloader: java.util.regex.Pattern patternUserToken> = $r6;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;

        $r0 = newmultiarray (boolean)[25][];
        <com.zoffcc.applications.aagtl.HTMLDownloader: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[17];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[15];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[33];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[9];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[57];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[9];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[9];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[8];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[3];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[3];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[44];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[4];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[8];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[8];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[8];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[53];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[10];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[10];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/HTMLDownloader", -4508536333088782483L);
        return $r0;
    }
}
public final class com.zoffcc.applications.aagtl.HtmlToText extends java.lang.Object
{
    private static final java.util.regex.Pattern htmlNewlinePattern;
    private static final java.util.regex.Pattern htmlListPattern;
    private static final java.util.regex.Pattern htmlTagPattern;
    public static final int EMAIL_LINE_WIDTH_MAX;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        com.zoffcc.applications.aagtl.HtmlToText r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.HtmlToText;
        $r1 = <com.zoffcc.applications.aagtl.HtmlToText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HtmlToText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static java.lang.String htmlToPlainText(java.lang.String)
    {
        java.lang.String r0, r3, r7, r10, r13, $r14, r15, $r17;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.NullPointerException $r4;
        java.util.regex.Pattern $r5, $r8, $r11;
        java.util.regex.Matcher $r6, $r9, $r12;
        java.lang.String[] $r16;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.HtmlToText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.HtmlToText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r2[0] = 1;
        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;
        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Html parameter may not be null.");
        r2[1] = 1;
        throw $r4;

     label1:
        r3 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String stripAndCollapse(java.lang.String)>(r0);
        $r5 = <com.zoffcc.applications.aagtl.HtmlToText: java.util.regex.Pattern htmlNewlinePattern>;
        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);
        r7 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("\n");
        $r8 = <com.zoffcc.applications.aagtl.HtmlToText: java.util.regex.Pattern htmlListPattern>;
        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r7);
        r10 = virtualinvoke $r9.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("\n- ");
        $r11 = <com.zoffcc.applications.aagtl.HtmlToText: java.util.regex.Pattern htmlTagPattern>;
        $r12 = virtualinvoke $r11.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);
        r13 = virtualinvoke $r12.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");
        $r14 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String unescapeHTML(java.lang.String,int)>(r13, 0);
        r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();
        $r16 = virtualinvoke r15.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");
        $r17 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String fixedWidth(java.lang.String[],int)>($r16, 72);
        r2[2] = 1;
        return $r17;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.regex.Pattern $r2, $r3, $r4;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.HtmlToText: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*<(br|/?p)>\\s*");
        <com.zoffcc.applications.aagtl.HtmlToText: java.util.regex.Pattern htmlNewlinePattern> = $r2;
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*<li>\\s*");
        <com.zoffcc.applications.aagtl.HtmlToText: java.util.regex.Pattern htmlListPattern> = $r3;
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("</?([^<]*)>");
        <com.zoffcc.applications.aagtl.HtmlToText: java.util.regex.Pattern htmlTagPattern> = $r4;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.HtmlToText: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/HtmlToText", 7549010232058043351L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.ImageManager extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.ImageManager r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.ImageManager;
        $r1 = <com.zoffcc.applications.aagtl.ImageManager: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.ImageManager: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void DownloadFromUrl(java.lang.String, java.lang.String)
    {
        com.zoffcc.applications.aagtl.ImageManager r0;
        java.lang.String r1, r2, $r23, $r29, $r35;
        boolean[][] $r3;
        boolean[] r4;
        java.net.URL r5, $r12;
        java.io.File r6, $r13;
        java.net.URLConnection r7;
        java.io.InputStream r8;
        int $i0, $i1, $i2, i3;
        java.io.BufferedInputStream r9, $r14;
        org.apache.http.util.ByteArrayBuffer r10, $r15;
        boolean z0;
        java.io.FileOutputStream r11, $r16;
        byte $b4;
        byte[] $r17;
        java.net.SocketTimeoutException $r18, r19;
        java.lang.StringBuilder $r20, $r21, $r22, $r26, $r27, $r28, $r32, $r33, $r34;
        java.io.IOException $r24, r25;
        java.lang.Exception $r30, r31;

        r0 := @this: com.zoffcc.applications.aagtl.ImageManager;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.ImageManager: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.ImageManager: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];

     label1:
        $r12 = new java.net.URL;
        specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>(r1);
        r5 = $r12;
        $r13 = new java.io.File;
        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>(r2);
        r6 = $r13;
        r7 = virtualinvoke r5.<java.net.URL: java.net.URLConnection openConnection()>();
        virtualinvoke r7.<java.net.URLConnection: void setConnectTimeout(int)>(10000);
        virtualinvoke r7.<java.net.URLConnection: void setReadTimeout(int)>(7000);
        r8 = virtualinvoke r7.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        $r14 = new java.io.BufferedInputStream;
        $i0 = <com.zoffcc.applications.aagtl.HTMLDownloader: int large_buffer_size>;
        specialinvoke $r14.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r8, $i0);
        r9 = $r14;
        $r15 = new org.apache.http.util.ByteArrayBuffer;
        $i1 = <com.zoffcc.applications.aagtl.HTMLDownloader: int default_buffer_size>;
        specialinvoke $r15.<org.apache.http.util.ByteArrayBuffer: void <init>(int)>($i1);
        r10 = $r15;
        z0 = 0;
        r4[0] = 1;

     label2:
        $i2 = virtualinvoke r9.<java.io.BufferedInputStream: int read()>();
        i3 = $i2;
        r4[1] = 1;
        if $i2 == -1 goto label3;

        $b4 = (byte) i3;
        virtualinvoke r10.<org.apache.http.util.ByteArrayBuffer: void append(int)>($b4);
        r4[2] = 1;
        goto label2;

     label3:
        $r16 = new java.io.FileOutputStream;
        specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.io.File)>(r6);
        r11 = $r16;
        $r17 = virtualinvoke r10.<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>();
        virtualinvoke r11.<java.io.FileOutputStream: void write(byte[])>($r17);
        virtualinvoke r11.<java.io.FileOutputStream: void close()>();
        r4[3] = 1;

     label4:
        goto label8;

     label5:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connectiont timout: ");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImageManager", $r23);
        r4[4] = 1;
        goto label8;

     label6:
        $r24 := @caughtexception;
        r25 = $r24;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImageManager", $r29);
        r4[5] = 1;
        goto label8;

     label7:
        $r30 := @caughtexception;
        r31 = $r30;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ImageManager", $r35);
        r4[6] = 1;

     label8:
        r4[7] = 1;
        return;

        catch java.net.SocketTimeoutException from label1 to label4 with label5;
        catch java.io.IOException from label1 to label4 with label6;
        catch java.lang.Exception from label1 to label4 with label7;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.ImageManager: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.ImageManager: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/ImageManager", -6099349181899368125L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.MapDownloader$single_tile extends java.lang.Object
{
    int type;
    int zoom;
    int x;
    int y;
    final com.zoffcc.applications.aagtl.MapDownloader this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.MapDownloader)
    {
        com.zoffcc.applications.aagtl.MapDownloader$single_tile r0;
        com.zoffcc.applications.aagtl.MapDownloader r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader$single_tile;
        r1 := @parameter0: com.zoffcc.applications.aagtl.MapDownloader;
        $r2 = <com.zoffcc.applications.aagtl.MapDownloader$single_tile: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader$single_tile: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: com.zoffcc.applications.aagtl.MapDownloader this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader$single_tile: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.MapDownloader$single_tile: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/MapDownloader$single_tile", 9252593981417L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.MapDownloader extends java.lang.Thread
{
    android.os.Handler global_handler;
    com.zoffcc.applications.aagtl.aagtl main_object;
    public static final int MAP_OSM;
    public static final int MAP_OCM;
    public static final int MAP_BIM;
    public static final java.lang.String TILE_FILENAME_EXT;
    public static final java.lang.String TILE_FILENAME_WEBEXT;
    int current_maptype;
    java.lang.Boolean running;
    java.util.List download_list;
    public static final int max_download_list_size;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(android.os.Handler, com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        android.os.Handler r1;
        com.zoffcc.applications.aagtl.aagtl r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.Boolean $r5;
        java.util.ArrayList $r6;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        r1 := @parameter0: android.os.Handler;
        r2 := @parameter1: com.zoffcc.applications.aagtl.aagtl;
        $r3 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.MapDownloader: android.os.Handler global_handler> = null;
        r0.<com.zoffcc.applications.aagtl.MapDownloader: int current_maptype> = 2;
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.Boolean running> = $r5;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list> = $r6;
        r0.<com.zoffcc.applications.aagtl.MapDownloader: android.os.Handler global_handler> = r1;
        r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object> = r2;
        r4[0] = 1;
        return;
    }

    public void clear_stuff()
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List r3, $r5, $r6, $r10;
        java.lang.Throwable r4, $r13;
        com.zoffcc.applications.aagtl.aagtl $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        int $i0;
        java.lang.String $r12;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        $r1 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r5 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        r3 = $r5;
        entermonitor $r5;

     label1:
        $r6 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        interfaceinvoke $r6.<java.util.List: void clear()>();
        $r7 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dl:");
        $r10 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<com.zoffcc.applications.aagtl.aagtl: void append_status_text(java.lang.String)>($r12);
        exitmonitor r3;
        r2[0] = 1;

     label2:
        goto label6;

     label3:
        $r13 := @caughtexception;

     label4:
        r4 = $r13;
        exitmonitor r3;

     label5:
        r2[1] = 1;
        throw r4;

     label6:
        r2[2] = 1;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void append_tile_to_list(int, int, int, int)
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        int i0, i1, i2, i3, $i4, $i5;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.MapDownloader$single_tile r3, $r6;
        java.util.List r4, $r7, $r8, $r9, $r11, $r15;
        java.lang.Throwable r5, $r18;
        com.zoffcc.applications.aagtl.aagtl $r12;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.lang.String $r17;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r6 = new com.zoffcc.applications.aagtl.MapDownloader$single_tile;
        specialinvoke $r6.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: void <init>(com.zoffcc.applications.aagtl.MapDownloader)>(r0);
        r3 = $r6;
        r3.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: int type> = i0;
        r3.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: int zoom> = i1;
        r3.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: int x> = i2;
        r3.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: int y> = i3;
        $r7 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        r4 = $r7;
        entermonitor $r7;

     label1:
        $r8 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        $i4 = interfaceinvoke $r8.<java.util.List: int size()>();
        r2[0] = 1;
        if $i4 <= 30 goto label2;

        $r9 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>(0);
        r2[1] = 1;

     label2:
        $r11 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r3);
        $r12 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dl:");
        $r15 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        $i5 = interfaceinvoke $r15.<java.util.List: int size()>();
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<com.zoffcc.applications.aagtl.aagtl: void append_status_text(java.lang.String)>($r17);
        exitmonitor r4;
        r2[2] = 1;

     label3:
        goto label7;

     label4:
        $r18 := @caughtexception;

     label5:
        r5 = $r18;
        exitmonitor r4;

     label6:
        r2[3] = 1;
        throw r5;

     label7:
        r2[4] = 1;
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void download_tile(java.lang.String, java.lang.String)
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        java.lang.String r1, r2, $r10;
        boolean[][] $r3;
        boolean[] r4;
        java.io.File r5, r6, $r8, $r9;
        com.zoffcc.applications.aagtl.ImageManager r7, $r11;
        com.zoffcc.applications.aagtl.aagtl $r12;
        com.zoffcc.applications.aagtl.Rose $r13;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r4 = $r3[3];
        $r8 = new java.io.File;
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r2);
        r5 = $r8;
        $r9 = new java.io.File;
        $r10 = virtualinvoke r5.<java.io.File: java.lang.String getParent()>();
        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r10);
        r6 = $r9;
        virtualinvoke r6.<java.io.File: boolean mkdirs()>();
        $r11 = new com.zoffcc.applications.aagtl.ImageManager;
        specialinvoke $r11.<com.zoffcc.applications.aagtl.ImageManager: void <init>()>();
        r7 = $r11;
        virtualinvoke r7.<com.zoffcc.applications.aagtl.ImageManager: void DownloadFromUrl(java.lang.String,java.lang.String)>(r1, r2);
        $r12 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r13.<com.zoffcc.applications.aagtl.Rose: void notify_tile_loaded_new(java.lang.String)>(r2);
        r4[0] = 1;
        return;
    }

    public java.lang.Boolean is_downloaded(java.lang.String)
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.File r4, $r5;
        long $l0;
        byte $b1;
        java.lang.Boolean $r6, $r7;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r5 = new java.io.File;
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1);
        r4 = $r5;
        $l0 = virtualinvoke r4.<java.io.File: long length()>();
        $b1 = $l0 cmp 0L;
        r3[0] = 1;
        if $b1 != 0 goto label1;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r3[1] = 1;
        return $r6;

     label1:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r3[2] = 1;
        return $r7;
    }

    public android.graphics.Bitmap get_bitmap_from_local_url(java.lang.String) throws java.io.FileNotFoundException
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        android.graphics.Bitmap r4;
        java.lang.OutOfMemoryError r5, r6, $r7, $r8;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r4 = null;

     label1:
        r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r1);
        r3[0] = 1;

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;
        r5 = $r7;
        virtualinvoke r5.<java.lang.OutOfMemoryError: void printStackTrace()>();
        staticinvoke <java.lang.System: void gc()>();

     label4:
        r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r1);
        r3[1] = 1;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;
        r6 = $r8;
        virtualinvoke r6.<java.lang.OutOfMemoryError: void printStackTrace()>();
        r3[2] = 1;

     label7:
        r3[3] = 1;
        return r4;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
        catch java.lang.OutOfMemoryError from label4 to label5 with label6;
    }

    public java.lang.String get_local_url(int, int, int, int)
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        int i0, i1, i2, i3;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r6, $r10, $r17, $r21, $r28, $r32;
        java.lang.StringBuilder $r4, $r7, $r8, $r9, $r15, $r18, $r19, $r20, $r26, $r29, $r30, $r31;
        com.zoffcc.applications.aagtl.aagtl $r5, $r16, $r27;
        java.lang.Object[] $r11, $r22, $r33;
        java.lang.Integer $r12, $r13, $r14, $r23, $r24, $r25, $r34, $r35, $r36;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r3 = null;
        r2[0] = 1;
        if i0 != 1 goto label1;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r6 = $r5.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/maps/osm/%d/%d/%d.");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("png_");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r11 = newarray (java.lang.Object)[3];
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r11[0] = $r12;
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r11[1] = $r13;
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r11[2] = $r14;
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r10, $r11);
        r2[1] = 1;
        goto label3;

     label1:
        r2[2] = 1;
        if i0 != 2 goto label2;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r17 = $r16.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/maps/ocm/%d/%d/%d.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("png_");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        $r22 = newarray (java.lang.Object)[3];
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r22[0] = $r23;
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r22[1] = $r24;
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r22[2] = $r25;
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r21, $r22);
        r2[3] = 1;
        goto label3;

     label2:
        r2[4] = 1;
        if i0 != 3 goto label3;

        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r28 = $r27.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/maps/sat/%d/%d/%d.");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("png_");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = newarray (java.lang.Object)[3];
        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r33[0] = $r34;
        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r33[1] = $r35;
        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r33[2] = $r36;
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r32, $r33);
        r2[5] = 1;

     label3:
        r2[6] = 1;
        return r3;
    }

    public java.lang.String[] get_remote_url(int, int, int, int)
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, i10;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] r3;
        boolean z0;
        java.lang.String r4, $r9, $r12, $r16, $r21, $r26, $r29, $r33, $r38, $r40, $r45, $r48, $r52, $r57;
        java.lang.Object[] $r5, $r17, $r22, $r34, $r43, $r53;
        java.lang.Integer $r6, $r7, $r8, $r18, $r19, $r20, $r23, $r24, $r25, $r35, $r36, $r37, $r44, $r54, $r55, $r56;
        java.lang.StringBuilder $r10, $r13, $r14, $r15, $r27, $r30, $r31, $r32, $r39, $r41, $r42, $r46, $r49, $r50, $r51;
        com.zoffcc.applications.aagtl.aagtl $r11, $r28, $r47;
        double $d0, $d1;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $r1 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r3 = newarray (java.lang.String)[2];
        r3[0] = null;
        r3[1] = null;
        r2[0] = 1;
        if i0 != 1 goto label1;

        $r5 = newarray (java.lang.Object)[3];
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r5[0] = $r6;
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r5[1] = $r7;
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r5[2] = $r8;
        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("http://tile.openstreetmap.org/%d/%d/%d.png", $r5);
        r3[0] = $r9;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r12 = $r11.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/maps/osm/%d/%d/%d.");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("png_");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        $r17 = newarray (java.lang.Object)[3];
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r17[0] = $r18;
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r17[1] = $r19;
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r17[2] = $r20;
        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r16, $r17);
        r3[1] = $r21;
        r2[1] = 1;
        goto label9;

     label1:
        r2[2] = 1;
        if i0 != 2 goto label2;

        $r22 = newarray (java.lang.Object)[3];
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r22[0] = $r23;
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r22[1] = $r24;
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r22[2] = $r25;
        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("http://andy.sandbox.cloudmade.com/tiles/cycle/%d/%d/%d.png", $r22);
        r3[0] = $r26;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r29 = $r28.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/maps/ocm/%d/%d/%d.");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("png_");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        $r34 = newarray (java.lang.Object)[3];
        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r34[0] = $r35;
        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r34[1] = $r36;
        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r34[2] = $r37;
        $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r33, $r34);
        r3[1] = $r38;
        r2[3] = 1;
        goto label9;

     label2:
        r2[4] = 1;
        if i0 != 3 goto label9;

        z0 = 0;
        r4 = "";
        i4 = 0;
        i5 = 1;
        r2[5] = 1;

     label3:
        $i7 = i1 + 1;
        r2[6] = 1;
        if i5 >= $i7 goto label8;

        i6 = 0;
        r2[7] = 1;
        if i4 != 0 goto label4;

        i4 = 1;
        r2[8] = 1;
        goto label5;

     label4:
        i4 = i4 * 2;
        r2[9] = 1;

     label5:
        $i8 = i4 & i2;
        r2[10] = 1;
        if $i8 != i4 goto label6;

        i6 = i6 + 1;
        r2[11] = 1;

     label6:
        $i9 = i4 & i3;
        r2[12] = 1;
        if $i9 != i4 goto label7;

        i6 = i6 + 2;
        r2[13] = 1;

     label7:
        $r39 = new java.lang.StringBuilder;
        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();
        $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i6);
        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        r4 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        i5 = i5 + 1;
        r2[14] = 1;
        goto label3;

     label8:
        $d0 = staticinvoke <java.lang.Math: double random()>();
        $d1 = $d0 * 6.0;
        i10 = (int) $d1;
        $r43 = newarray (java.lang.Object)[2];
        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
        $r43[0] = $r44;
        $r43[1] = r4;
        $r45 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("http://ecn.t%d.tiles.virtualearth.net/tiles/h%s.jpeg?g=373&mkt=de-DE", $r43);
        r3[0] = $r45;
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
        $r47 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r48 = $r47.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/maps/sat/%d/%d/%d.");
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("png_");
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();
        $r53 = newarray (java.lang.Object)[3];
        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r53[0] = $r54;
        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r53[1] = $r55;
        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        $r53[2] = $r56;
        $r57 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r52, $r53);
        r3[1] = $r57;
        r2[15] = 1;

     label9:
        r2[16] = 1;
        return r3;
    }

    public void request_stop()
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean $r3;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        $r1 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.Boolean running> = $r3;
        r2[0] = 1;
        return;
    }

    public void run()
    {
        com.zoffcc.applications.aagtl.MapDownloader r0;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0;
        java.util.List r3, $r8, $r9, $r10, $r11, $r17, r18, $r19, $r23;
        java.lang.Throwable r4, r6, $r14, $r26;
        java.lang.String[] r5;
        java.lang.Boolean $r7;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object $r12;
        com.zoffcc.applications.aagtl.MapDownloader$single_tile r13;
        java.lang.String $r15, $r16, $r25;
        com.zoffcc.applications.aagtl.aagtl $r20;
        java.lang.StringBuilder $r21, $r22, $r24;
        java.lang.InterruptedException $r27, r28, $r29, r30;

        r0 := @this: com.zoffcc.applications.aagtl.MapDownloader;
        $r1 = <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];

     label1:
        $r7 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.Boolean running>;
        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
        r2[0] = 1;
        if $z0 == 0 goto label21;

        $z1 = staticinvoke <java.lang.Thread: boolean interrupted()>();
        r2[1] = 1;
        if $z1 == 0 goto label2;

        r2[2] = 1;
        return;

     label2:
        $r8 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();
        r2[3] = 1;
        if $i0 <= 0 goto label18;

        n0 = null;
        $r9 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        r3 = $r9;
        entermonitor $r9;

     label3:
        $r10 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        $r11 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();
        $i2 = $i1 - 1;
        $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i2);
        r13 = (com.zoffcc.applications.aagtl.MapDownloader$single_tile) $r12;
        exitmonitor r3;
        r2[4] = 1;

     label4:
        goto label8;

     label5:
        $r14 := @caughtexception;

     label6:
        r4 = $r14;
        exitmonitor r3;

     label7:
        r2[5] = 1;
        throw r4;

     label8:
        $i3 = r13.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: int type>;
        $i4 = r13.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: int zoom>;
        $i5 = r13.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: int x>;
        $i6 = r13.<com.zoffcc.applications.aagtl.MapDownloader$single_tile: int y>;
        r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.String[] get_remote_url(int,int,int,int)>($i3, $i4, $i5, $i6);
        $r15 = r5[0];
        $r16 = r5[1];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.MapDownloader: void download_tile(java.lang.String,java.lang.String)>($r15, $r16);
        $r17 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        r18 = $r17;
        entermonitor $r17;

     label9:
        $r19 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        interfaceinvoke $r19.<java.util.List: boolean remove(java.lang.Object)>(r13);
        $r20 = r0.<com.zoffcc.applications.aagtl.MapDownloader: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r21 = new java.lang.StringBuilder;
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dl:");
        $r23 = r0.<com.zoffcc.applications.aagtl.MapDownloader: java.util.List download_list>;
        $i7 = interfaceinvoke $r23.<java.util.List: int size()>();
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r20.<com.zoffcc.applications.aagtl.aagtl: void append_status_text(java.lang.String)>($r25);
        exitmonitor r18;
        r2[6] = 1;

     label10:
        goto label14;

     label11:
        $r26 := @caughtexception;

     label12:
        r6 = $r26;
        exitmonitor r18;

     label13:
        r2[7] = 1;
        throw r6;

     label14:
        staticinvoke <java.lang.Thread: void sleep(long)>(2L);
        r2[8] = 1;

     label15:
        goto label17;

     label16:
        $r27 := @caughtexception;
        r28 = $r27;
        r2[9] = 1;
        goto label21;

     label17:
        r2[10] = 1;
        goto label1;

     label18:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);
        r2[11] = 1;

     label19:
        goto label1;

     label20:
        $r29 := @caughtexception;
        r30 = $r29;
        r2[12] = 1;
        goto label21;

     label21:
        r2[13] = 1;
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label9 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.InterruptedException from label14 to label15 with label16;
        catch java.lang.InterruptedException from label18 to label19 with label20;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRi()>();
        r1 = $r0[10];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = newmultiarray (boolean)[11][];
        <com.zoffcc.applications.aagtl.MapDownloader: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[7];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[17];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[14];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/MapDownloader", 9170219150543979254L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.PointProvider$access_lock_class extends java.lang.Object
{
    int dummy;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider$access_lock_class;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider$access_lock_class: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider$access_lock_class: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.PointProvider$access_lock_class: int dummy> = 0;
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider$access_lock_class: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.PointProvider$access_lock_class: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/PointProvider$access_lock_class", 9252593981417L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.PointProvider extends java.lang.Object
{
    java.lang.Object downloader;
    java.lang.String cache_table;
    java.lang.String filterstring;
    java.lang.String[] filterargs;
    java.lang.String filename;
    private android.database.sqlite.SQLiteDatabase db;
    public static com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock;
    java.util.HashMap agtlconf;
    private static final boolean[][] $VRc;

    public void <init>(java.lang.String, java.lang.Object, java.lang.String, java.lang.String)
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        java.lang.String r1, r3, r4, $r10, $r13, $r16, $r18;
        java.lang.Object r2;
        boolean[][] $r5;
        boolean[] r6;
        null_type n0;
        java.lang.Exception r7, $r20;
        java.util.HashMap $r8, $r9, $r12, $r15;
        android.database.sqlite.SQLiteDatabase $r19;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        $r5 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r6 = $r5[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String filterstring> = null;
        $r8 = new java.util.HashMap;
        specialinvoke $r8.<java.util.HashMap: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.PointProvider: java.util.HashMap agtlconf> = $r8;
        r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String filename> = r1;
        r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.Object downloader> = r2;
        r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table> = r4;
        $r9 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.util.HashMap agtlconf>;
        $r10 = new java.lang.String;
        specialinvoke $r10.<java.lang.String: void <init>(java.lang.String)>("");
        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app_version", $r10);
        $r12 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.util.HashMap agtlconf>;
        $r13 = new java.lang.String;
        specialinvoke $r13.<java.lang.String: void <init>(java.lang.String)>("");
        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_version", $r13);
        $r15 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.util.HashMap agtlconf>;
        $r16 = new java.lang.String;
        specialinvoke $r16.<java.lang.String: void <init>(java.lang.String)>("");
        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("environment", $r16);
        n0 = null;

     label1:
        $r18 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String filename>;
        $r19 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r18, n0);
        r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db> = $r19;
        r6[0] = 1;

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;
        r7 = $r20;
        virtualinvoke r7.<java.lang.Exception: void printStackTrace()>();
        r6[1] = 1;

     label4:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.PointProvider: void create_db()>();
        r6[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void reopen_db()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r3, $r7;
        java.lang.Exception r4, r5, $r8, $r11;
        java.lang.Throwable r6, $r12;
        null_type n0;
        java.lang.String $r9;
        android.database.sqlite.SQLiteDatabase $r10;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r7 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r3 = $r7;
        entermonitor $r7;

     label1:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.PointProvider: void close()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;
        r4 = $r8;
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        n0 = null;

     label5:
        $r9 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String filename>;
        $r10 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r9, n0);
        r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db> = $r10;
        r2[2] = 1;

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;
        r5 = $r11;
        virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();
        r2[3] = 1;

     label8:
        exitmonitor r3;
        r2[4] = 1;

     label9:
        goto label13;

     label10:
        $r12 := @caughtexception;

     label11:
        r6 = $r12;
        exitmonitor r3;

     label12:
        r2[5] = 1;
        throw r6;

     label13:
        r2[6] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
        catch java.lang.Throwable from label1 to label9 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void create_db()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        android.database.sqlite.SQLiteException r3, $r8, $r15, r16, $r23, r24, $r31, r32;
        android.database.sqlite.SQLiteDatabase $r4, $r11, $r19, $r27;
        java.lang.Object[] $r5, $r12, $r20, $r28;
        java.lang.String $r6, $r7, $r13, $r14, $r21, $r22, $r29, $r30;
        java.lang.Exception $r9, r10, $r17, r18, $r25, r26, $r33, r34;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r5 = newarray (java.lang.Object)[1];
        $r6 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        $r5[0] = $r6;
        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("CREATE TABLE IF NOT EXISTS agtlconf (prop long varchar,data long varchar);", $r5);
        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r7);
        r2[0] = 1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;
        r3 = $r8;
        r2[1] = 1;
        goto label5;

     label4:
        $r9 := @caughtexception;
        r10 = $r9;
        virtualinvoke r10.<java.lang.Exception: void printStackTrace()>();
        r2[2] = 1;

     label5:
        $r11 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r12 = newarray (java.lang.Object)[1];
        $r13 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        $r12[0] = $r13;
        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("CREATE TABLE IF NOT EXISTS %s (logs long varchar, loname long varchar, terrain INTEGER, waypoints long varchar, marked INTEGER, logas INTEGER, owner long varchar, images long varchar, guid long varchar, size INTEGER, title long varchar, lotitle long varchar, lon REAL, logdate long varchar, desc long varchar, type long varchar, status INTEGER, difficulty INTEGER, lat REAL, hints long varchar, name long varchar primary key, fieldnotes long varchar, notes long varchar, shortdesc long varchar, found INTEGER,aagtl_status INTEGER);", $r12);
        virtualinvoke $r11.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r14);
        r2[3] = 1;

     label6:
        goto label9;

     label7:
        $r15 := @caughtexception;
        r16 = $r15;
        r2[4] = 1;
        goto label9;

     label8:
        $r17 := @caughtexception;
        r18 = $r17;
        virtualinvoke r18.<java.lang.Exception: void printStackTrace()>();
        r2[5] = 1;

     label9:
        $r19 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r20 = newarray (java.lang.Object)[1];
        $r21 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        $r20[0] = $r21;
        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("CREATE INDEX IF NOT EXISTS geocaches_latlon ON geocaches (lat ASC, lon ASC);", $r20);
        virtualinvoke $r19.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r22);
        r2[6] = 1;

     label10:
        goto label13;

     label11:
        $r23 := @caughtexception;
        r24 = $r23;
        r2[7] = 1;
        goto label13;

     label12:
        $r25 := @caughtexception;
        r26 = $r25;
        virtualinvoke r26.<java.lang.Exception: void printStackTrace()>();
        r2[8] = 1;

     label13:
        $r27 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r28 = newarray (java.lang.Object)[1];
        $r29 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        $r28[0] = $r29;
        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("CREATE INDEX IF NOT EXISTS geocaches_name ON geocaches (name ASC);", $r28);
        virtualinvoke $r27.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r30);
        r2[9] = 1;

     label14:
        goto label17;

     label15:
        $r31 := @caughtexception;
        r32 = $r31;
        r2[10] = 1;
        goto label17;

     label16:
        $r33 := @caughtexception;
        r34 = $r33;
        virtualinvoke r34.<java.lang.Exception: void printStackTrace()>();
        r2[11] = 1;

     label17:
        r2[12] = 1;
        return;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
        catch android.database.sqlite.SQLiteException from label5 to label6 with label7;
        catch java.lang.Exception from label5 to label6 with label8;
        catch android.database.sqlite.SQLiteException from label9 to label10 with label11;
        catch java.lang.Exception from label9 to label10 with label12;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label15;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    public void begin_trans()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, r4, $r6, $r8;
        android.database.sqlite.SQLiteDatabase $r5, $r7;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];

     label1:
        $r5 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();
        r2[0] = 1;

     label2:
        goto label7;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

     label4:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.PointProvider: void reopen_db()>();
        $r7 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();
        r2[1] = 1;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;
        r4 = $r8;
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r2[2] = 1;

     label7:
        r2[3] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void commit()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r5;
        android.database.sqlite.SQLiteDatabase $r4;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r3 = $r5;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void end_trans()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r5;
        android.database.sqlite.SQLiteDatabase $r4;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r3 = $r5;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void rollback()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        return;
    }

    public void compact()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r4;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];

     label1:
        staticinvoke <android.database.sqlite.SQLiteDatabase: int releaseMemory()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;
        r3 = $r4;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void _clear_database_()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r3, $r6;
        android.database.sqlite.SQLiteException r4, $r11, $r18, r19;
        java.lang.Throwable r5, $r22;
        android.database.sqlite.SQLiteDatabase $r7, $r14;
        java.lang.Object[] $r8, $r15;
        java.lang.String $r9, $r10, $r16, $r17;
        java.lang.Exception $r12, r13, $r20, r21;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r6 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r3 = $r6;
        entermonitor $r6;

     label1:
        $r7 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r8 = newarray (java.lang.Object)[1];
        $r9 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        $r8[0] = $r9;
        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("delete from %s;", $r8);
        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r10);
        r2[0] = 1;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;
        r4 = $r11;
        r2[1] = 1;
        goto label5;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();
        r2[2] = 1;

     label5:
        $r14 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r15 = newarray (java.lang.Object)[1];
        $r16 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        $r15[0] = $r16;
        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("drop table %s;", $r15);
        virtualinvoke $r14.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r17);
        r2[3] = 1;

     label6:
        goto label9;

     label7:
        $r18 := @caughtexception;
        r19 = $r18;
        r2[4] = 1;
        goto label9;

     label8:
        $r20 := @caughtexception;
        r21 = $r20;
        virtualinvoke r21.<java.lang.Exception: void printStackTrace()>();
        r2[5] = 1;

     label9:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.PointProvider: void create_db()>();
        exitmonitor r3;
        r2[6] = 1;

     label10:
        goto label14;

     label11:
        $r22 := @caughtexception;

     label12:
        r5 = $r22;
        exitmonitor r3;

     label13:
        r2[7] = 1;
        throw r5;

     label14:
        r2[8] = 1;
        return;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
        catch android.database.sqlite.SQLiteException from label5 to label6 with label7;
        catch java.lang.Exception from label5 to label6 with label8;
        catch java.lang.Throwable from label1 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public com.zoffcc.applications.aagtl.GeocacheCoordinate get_point_full(java.lang.String)
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        java.lang.String r1, r5, $r12, $r14, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r4, $r9;
        android.database.Cursor r6;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, $i25, i26, $i27, $i28, $i29, $i30, $i31, $i32;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r7, $r13;
        java.lang.Throwable r8, $r33;
        java.lang.Object[] $r10;
        android.database.sqlite.SQLiteDatabase $r11;
        double $d0, $d1;
        java.lang.Boolean $r15, $r16, $r17, $r18;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $r9 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r4 = $r9;
        entermonitor $r9;

     label1:
        $r10 = newarray (java.lang.Object)[1];
        $r10[0] = r1;
        r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" name=\'%s\'", $r10);
        $r11 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r12 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        r6 = virtualinvoke $r11.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r12, null, r5, null, null, null, null);
        i0 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("logs");
        i1 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("terrain");
        i2 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("waypoints");
        i3 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("marked");
        i4 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("logas");
        i5 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("owner");
        i6 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("images");
        i7 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("guid");
        i8 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("size");
        i9 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("title");
        i10 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("lon");
        i11 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("logdate");
        i12 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("desc");
        i13 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("type");
        i14 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("status");
        i15 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("difficulty");
        i16 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("lat");
        i17 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("hints");
        i18 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");
        i19 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("fieldnotes");
        i20 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("notes");
        i21 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("shortdesc");
        i22 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("found");
        i23 = interfaceinvoke r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("aagtl_status");
        r7 = null;
        $i25 = interfaceinvoke r6.<android.database.Cursor: int getCount()>();
        r3[0] = 1;
        if $i25 <= 0 goto label6;

        interfaceinvoke r6.<android.database.Cursor: boolean moveToNext()>();
        $r13 = new com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $d0 = interfaceinvoke r6.<android.database.Cursor: double getDouble(int)>(i16);
        $d1 = interfaceinvoke r6.<android.database.Cursor: double getDouble(int)>(i10);
        $r14 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i18);
        specialinvoke $r13.<com.zoffcc.applications.aagtl.GeocacheCoordinate: void <init>(double,double,java.lang.String)>($d0, $d1, $r14);
        r7 = $r13;
        i24 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(i22);
        r3[1] = 1;
        if i24 != 1 goto label2;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r15;
        r3[2] = 1;
        goto label3;

     label2:
        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r16;
        r3[3] = 1;

     label3:
        i26 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(i3);
        r3[4] = 1;
        if i26 != 1 goto label4;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean marked> = $r17;
        r3[5] = 1;
        goto label5;

     label4:
        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean marked> = $r18;
        r3[6] = 1;

     label5:
        $r19 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i0);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String logs> = $r19;
        $r20 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i2);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String waypoints> = $r20;
        $r21 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i5);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String owner> = $r21;
        $r22 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i6);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String images> = $r22;
        $r23 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i7);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String guid> = $r23;
        $r24 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i9);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title> = $r24;
        $r25 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i11);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String log_date> = $r25;
        $r26 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i12);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc> = $r26;
        $r27 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i13);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type> = $r27;
        $r28 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i17);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String hints> = $r28;
        $r29 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i19);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String fieldnotes> = $r29;
        $r30 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i20);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String notes> = $r30;
        $r31 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(i21);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String shortdesc> = $r31;
        $i27 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(i1);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int terrain> = $i27;
        $i28 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(i4);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as> = $i28;
        $i29 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(i8);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int size> = $i29;
        $i30 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(i14);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status> = $i30;
        $i31 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(i15);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int difficulty> = $i31;
        $i32 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(i23);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int aagtl_status> = $i32;
        r3[7] = 1;

     label6:
        interfaceinvoke r6.<android.database.Cursor: void close()>();
        exitmonitor r4;
        r3[8] = 1;

     label7:
        return r7;

     label8:
        $r33 := @caughtexception;

     label9:
        r8 = $r33;
        exitmonitor r4;

     label10:
        r3[9] = 1;
        throw r8;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
    }

    public java.util.List get_points_filter(com.zoffcc.applications.aagtl.Coordinate[], java.lang.Boolean, int)
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        com.zoffcc.applications.aagtl.Coordinate[] r1;
        java.lang.Boolean r2, $r44, $r45;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r5, $r14;
        java.util.ArrayList r6, $r15;
        com.zoffcc.applications.aagtl.Coordinate r7, r8;
        java.lang.String r9, $r18, $r21, $r24, $r27, $r33, $r37, $r41, $r43, $r46, $r47, $r48;
        java.lang.String[] r10;
        android.database.Cursor r11;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r12, $r42;
        java.lang.Throwable r13, $r50;
        java.lang.StringBuilder $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r38, $r39;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean $z0, $z1;
        android.database.sqlite.SQLiteDatabase $r40;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate[];
        r2 := @parameter1: java.lang.Boolean;
        i0 := @parameter2: int;
        $r3 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r4 = $r3[10];
        $r14 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r5 = $r14;
        entermonitor $r14;

     label1:
        $r15 = new java.util.ArrayList;
        specialinvoke $r15.<java.util.ArrayList: void <init>()>();
        r6 = $r15;
        interfaceinvoke r6.<java.util.List: void clear()>();
        r7 = r1[0];
        r8 = r1[1];
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( lat >= \'");
        $d0 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d1 = r8.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d2 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);
        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d2);
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' AND lat <= \'");
        $d3 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d4 = r8.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d5 = staticinvoke <java.lang.Math: double max(double,double)>($d3, $d4);
        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d5);
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' AND lon >= \'");
        $d6 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d7 = r8.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d8 = staticinvoke <java.lang.Math: double min(double,double)>($d6, $d7);
        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d8);
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' AND lon <= \'");
        $d9 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d10 = r8.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d11 = staticinvoke <java.lang.Math: double max(double,double)>($d9, $d10);
        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d11);
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' )");
        r9 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
        r4[0] = 1;
        if $z0 == 0 goto label2;

        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and (found = 0)");
        r9 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        r4[1] = 1;

     label2:
        $r33 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String filterstring>;
        r4[2] = 1;
        if $r33 == null goto label3;

        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ( ");
        $r37 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String filterstring>;
        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");
        r9 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        r4[3] = 1;

     label3:
        r10 = newarray (java.lang.String)[8];
        r10[0] = "lat";
        r10[1] = "lon";
        r10[2] = "found";
        r10[3] = "title";
        r10[4] = "name";
        r10[5] = "type";
        r10[6] = "status";
        r10[7] = "aagtl_status";
        $r40 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r41 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        r11 = virtualinvoke $r40.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r41, r10, r9, null, null, null, null);
        i1 = interfaceinvoke r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("lat");
        i2 = interfaceinvoke r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("lon");
        i3 = interfaceinvoke r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("found");
        i4 = interfaceinvoke r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("title");
        i5 = interfaceinvoke r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");
        i6 = interfaceinvoke r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("type");
        i7 = interfaceinvoke r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("status");
        i8 = interfaceinvoke r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("aagtl_status");
        $i11 = interfaceinvoke r11.<android.database.Cursor: int getCount()>();
        r4[4] = 1;
        if $i11 <= 0 goto label7;

        i9 = 0;
        r4[5] = 1;

     label4:
        $z1 = interfaceinvoke r11.<android.database.Cursor: boolean moveToNext()>();
        r4[6] = 1;
        if $z1 == 0 goto label7;

        i9 = i9 + 1;
        $r42 = new com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $d12 = interfaceinvoke r11.<android.database.Cursor: double getDouble(int)>(i1);
        $d13 = interfaceinvoke r11.<android.database.Cursor: double getDouble(int)>(i2);
        $r43 = interfaceinvoke r11.<android.database.Cursor: java.lang.String getString(int)>(i5);
        specialinvoke $r42.<com.zoffcc.applications.aagtl.GeocacheCoordinate: void <init>(double,double,java.lang.String)>($d12, $d13, $r43);
        r12 = $r42;
        i10 = interfaceinvoke r11.<android.database.Cursor: int getInt(int)>(i3);
        r4[7] = 1;
        if i10 != 1 goto label5;

        $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r12.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r44;
        r4[8] = 1;
        goto label6;

     label5:
        $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r12.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r45;
        r4[9] = 1;

     label6:
        $r46 = interfaceinvoke r11.<android.database.Cursor: java.lang.String getString(int)>(i4);
        r12.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title> = $r46;
        $r47 = interfaceinvoke r11.<android.database.Cursor: java.lang.String getString(int)>(i5);
        r12.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name> = $r47;
        $r48 = interfaceinvoke r11.<android.database.Cursor: java.lang.String getString(int)>(i6);
        r12.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type> = $r48;
        $i12 = interfaceinvoke r11.<android.database.Cursor: int getInt(int)>(i7);
        r12.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status> = $i12;
        $i13 = interfaceinvoke r11.<android.database.Cursor: int getInt(int)>(i8);
        r12.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int aagtl_status> = $i13;
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r12);
        r4[10] = 1;
        goto label4;

     label7:
        interfaceinvoke r11.<android.database.Cursor: void close()>();
        exitmonitor r5;
        r4[11] = 1;

     label8:
        return r6;

     label9:
        $r50 := @caughtexception;

     label10:
        r13 = $r50;
        exitmonitor r5;

     label11:
        r4[12] = 1;
        throw r13;

        catch java.lang.Throwable from label1 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    public void add_point(com.zoffcc.applications.aagtl.GeocacheCoordinate)
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r4, $r10;
        android.content.ContentValues r5, $r11;
        java.lang.String r6, $r12, $r13, $r14, $r17, $r19, $r23, $r30;
        java.lang.String[] r7;
        android.database.Cursor r8;
        int i0, i1, i2, $i3, $i4;
        double d0, d1, $d2, $d3, $d4, $d5;
        java.lang.Throwable r9, $r31;
        java.lang.Integer $r15, $r27, $r28;
        java.lang.Object[] $r16;
        android.database.sqlite.SQLiteDatabase $r18, $r22, $r29;
        byte $b5, $b6;
        java.lang.Double $r20, $r21, $r24, $r25;
        java.lang.Boolean $r26;
        boolean $z1;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        r1 := @parameter0: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r2 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        $r10 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r4 = $r10;
        entermonitor $r10;

     label1:
        $r11 = new android.content.ContentValues;
        specialinvoke $r11.<android.content.ContentValues: void <init>()>();
        r5 = $r11;
        $r12 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r12);
        $r13 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r13);
        $r14 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("type", $r14);
        $i3 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status>;
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r15);
        $r16 = newarray (java.lang.Object)[1];
        $r17 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r16[0] = $r17;
        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("name =\'%s\'", $r16);
        r7 = newarray (java.lang.String)[3];
        r7[0] = "name";
        r7[1] = "lat";
        r7[2] = "lon";
        $r18 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r19 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        r8 = virtualinvoke $r18.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r19, r7, r6, null, null, null, null);
        i0 = interfaceinvoke r8.<android.database.Cursor: int getCount()>();
        i1 = interfaceinvoke r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("lat");
        i2 = interfaceinvoke r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("lon");
        d0 = 10101.0;
        d1 = 10101.0;
        $i4 = interfaceinvoke r8.<android.database.Cursor: int getCount()>();
        r3[0] = 1;
        if $i4 <= 0 goto label2;

        interfaceinvoke r8.<android.database.Cursor: boolean moveToNext()>();
        d0 = interfaceinvoke r8.<android.database.Cursor: double getDouble(int)>(i1);
        d1 = interfaceinvoke r8.<android.database.Cursor: double getDouble(int)>(i2);
        r3[1] = 1;

     label2:
        interfaceinvoke r8.<android.database.Cursor: void close()>();
        r3[2] = 1;
        if i0 <= 0 goto label4;

        $b5 = d0 cmpl 0.0;
        r3[3] = 1;
        if $b5 != 0 goto label3;

        $b6 = d1 cmpl 0.0;
        r3[4] = 1;
        if $b6 != 0 goto label3;

        $d2 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat>;
        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("lat", $r20);
        $d3 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon>;
        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("lon", $r21);
        r3[5] = 1;

     label3:
        $r22 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r23 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        virtualinvoke $r22.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r23, r5, r6, null);
        r3[6] = 1;
        goto label7;

     label4:
        $d4 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat>;
        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("lat", $r24);
        $d5 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon>;
        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("lon", $r25);
        $r26 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found>;
        $z1 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();
        r3[7] = 1;
        if $z1 == 0 goto label5;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("found", $r27);
        r3[8] = 1;
        goto label6;

     label5:
        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("found", $r28);
        r3[9] = 1;

     label6:
        $r29 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r30 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        virtualinvoke $r29.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r30, null, r5);
        r3[10] = 1;

     label7:
        exitmonitor r4;
        r3[11] = 1;

     label8:
        goto label12;

     label9:
        $r31 := @caughtexception;

     label10:
        r9 = $r31;
        exitmonitor r4;

     label11:
        r3[12] = 1;
        throw r9;

     label12:
        r3[13] = 1;
        return;

        catch java.lang.Throwable from label1 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    public void close()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r5;
        android.database.sqlite.SQLiteDatabase $r4;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r3 = $r5;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void add_point_full(com.zoffcc.applications.aagtl.GeocacheCoordinate)
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r4, $r8;
        android.content.ContentValues r5, $r9;
        java.lang.String r6, $r16, $r17, $r19, $r21, $r23, $r24, $r25, $r27, $r29, $r30, $r31, $r35, $r36, $r37, $r38, $r39, $r41, $r43;
        byte b0;
        java.lang.Throwable r7, $r44;
        java.lang.Boolean $r10, $r13;
        boolean $z0, $z1;
        java.lang.Integer $r11, $r12, $r14, $r15, $r18, $r20, $r22, $r26, $r32, $r33;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        double $d0, $d1;
        java.lang.Double $r28, $r34;
        java.lang.Object[] $r40;
        android.database.sqlite.SQLiteDatabase $r42;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        r1 := @parameter0: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r2 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        $r8 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r4 = $r8;
        entermonitor $r8;

     label1:
        $r9 = new android.content.ContentValues;
        specialinvoke $r9.<android.content.ContentValues: void <init>()>();
        r5 = $r9;
        $r10 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found>;
        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("found", $r11);
        r3[1] = 1;
        goto label3;

     label2:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("found", $r12);
        r3[2] = 1;

     label3:
        $r13 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean marked>;
        $z1 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();
        r3[3] = 1;
        if $z1 == 0 goto label4;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("marked", $r14);
        r3[4] = 1;
        goto label5;

     label4:
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("marked", $r15);
        r3[5] = 1;

     label5:
        $r16 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r16);
        $r17 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("type", $r17);
        $i1 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status>;
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r18);
        $r19 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String logs>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("logs", $r19);
        $i2 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int terrain>;
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("terrain", $r20);
        $r21 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String waypoints>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("waypoints", $r21);
        $i3 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as>;
        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("logas", $r22);
        $r23 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String owner>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("owner", $r23);
        $r24 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String images>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("images", $r24);
        $r25 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String guid>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("guid", $r25);
        $i4 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int size>;
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("size", $r26);
        $r27 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r27);
        $d0 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon>;
        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("lon", $r28);
        $r29 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String log_date>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("logdate", $r29);
        $r30 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("desc", $r30);
        $r31 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("type", $r31);
        $i5 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int status>;
        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r32);
        $i6 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int difficulty>;
        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("difficulty", $r33);
        $d1 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat>;
        $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("lat", $r34);
        $r35 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String hints>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("hints", $r35);
        $r36 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r36);
        $r37 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String fieldnotes>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("fieldnotes", $r37);
        $r38 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String notes>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("notes", $r38);
        $r39 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String shortdesc>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("shortdesc", $r39);
        $r40 = newarray (java.lang.Object)[1];
        $r41 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r40[0] = $r41;
        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("name =\'%s\'", $r40);
        b0 = 1;
        r3[6] = 1;
        if b0 <= 0 goto label6;

        $r42 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r43 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        virtualinvoke $r42.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r43, r5, r6, null);
        r3[7] = 1;

     label6:
        exitmonitor r4;
        r3[8] = 1;

     label7:
        goto label11;

     label8:
        $r44 := @caughtexception;

     label9:
        r7 = $r44;
        exitmonitor r4;

     label10:
        r3[9] = 1;
        throw r7;

     label11:
        r3[10] = 1;
        return;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
    }

    public void reset_point_fn(com.zoffcc.applications.aagtl.GeocacheCoordinate)
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r4, $r8;
        android.content.ContentValues r5, $r9;
        java.lang.String r6, $r12, $r14;
        java.lang.Throwable r7, $r15;
        int $i0;
        java.lang.Integer $r10;
        java.lang.Object[] $r11;
        android.database.sqlite.SQLiteDatabase $r13;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        r1 := @parameter0: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r2 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];
        $r8 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r4 = $r8;
        entermonitor $r8;

     label1:
        $r9 = new android.content.ContentValues;
        specialinvoke $r9.<android.content.ContentValues: void <init>()>();
        r5 = $r9;
        $i0 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as>;
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("logas", $r10);
        $r11 = newarray (java.lang.Object)[1];
        $r12 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r11[0] = $r12;
        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("name =\'%s\'", $r11);
        $r13 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r14 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        virtualinvoke $r13.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r14, r5, r6, null);
        exitmonitor r4;
        r3[0] = 1;

     label2:
        goto label6;

     label3:
        $r15 := @caughtexception;

     label4:
        r7 = $r15;
        exitmonitor r4;

     label5:
        r3[1] = 1;
        throw r7;

     label6:
        r3[2] = 1;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List get_new_fieldnotes()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r3, $r10;
        java.util.ArrayList r4, $r11;
        java.lang.String r5, $r13, $r15, $r18, $r19, $r20, $r21;
        java.lang.String[] r6;
        android.database.Cursor r7;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r8, $r14;
        java.lang.Throwable r9, $r23;
        android.database.sqlite.SQLiteDatabase $r12;
        boolean $z0;
        java.lang.Boolean $r16, $r17;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r10 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r3 = $r10;
        entermonitor $r10;

     label1:
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r4 = $r11;
        interfaceinvoke r4.<java.util.List: void clear()>();
        r5 = " logas <> 0";
        r6 = newarray (java.lang.String)[6];
        r6[0] = "found";
        r6[1] = "title";
        r6[2] = "name";
        r6[3] = "type";
        r6[4] = "fieldnotes";
        r6[5] = "logas";
        $r12 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r13 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        r7 = virtualinvoke $r12.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r13, r6, r5, null, null, null, null);
        i0 = interfaceinvoke r7.<android.database.Cursor: int getColumnIndex(java.lang.String)>("found");
        i1 = interfaceinvoke r7.<android.database.Cursor: int getColumnIndex(java.lang.String)>("title");
        i2 = interfaceinvoke r7.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");
        i3 = interfaceinvoke r7.<android.database.Cursor: int getColumnIndex(java.lang.String)>("type");
        i4 = interfaceinvoke r7.<android.database.Cursor: int getColumnIndex(java.lang.String)>("logas");
        i5 = interfaceinvoke r7.<android.database.Cursor: int getColumnIndex(java.lang.String)>("fieldnotes");
        $i8 = interfaceinvoke r7.<android.database.Cursor: int getCount()>();
        r2[0] = 1;
        if $i8 <= 0 goto label5;

        i6 = 0;
        r2[1] = 1;

     label2:
        $z0 = interfaceinvoke r7.<android.database.Cursor: boolean moveToNext()>();
        r2[2] = 1;
        if $z0 == 0 goto label5;

        i6 = i6 + 1;
        $r14 = new com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r15 = interfaceinvoke r7.<android.database.Cursor: java.lang.String getString(int)>(i2);
        specialinvoke $r14.<com.zoffcc.applications.aagtl.GeocacheCoordinate: void <init>(double,double,java.lang.String)>(0.0, 0.0, $r15);
        r8 = $r14;
        i7 = interfaceinvoke r7.<android.database.Cursor: int getInt(int)>(i0);
        r2[3] = 1;
        if i7 != 1 goto label3;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r16;
        r2[4] = 1;
        goto label4;

     label3:
        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r17;
        r2[5] = 1;

     label4:
        $r18 = interfaceinvoke r7.<android.database.Cursor: java.lang.String getString(int)>(i1);
        r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title> = $r18;
        $r19 = interfaceinvoke r7.<android.database.Cursor: java.lang.String getString(int)>(i2);
        r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name> = $r19;
        $r20 = interfaceinvoke r7.<android.database.Cursor: java.lang.String getString(int)>(i3);
        r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String type> = $r20;
        $i9 = interfaceinvoke r7.<android.database.Cursor: int getInt(int)>(i4);
        r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as> = $i9;
        $r21 = interfaceinvoke r7.<android.database.Cursor: java.lang.String getString(int)>(i5);
        r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String fieldnotes> = $r21;
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r8);
        r2[6] = 1;
        goto label2;

     label5:
        interfaceinvoke r7.<android.database.Cursor: void close()>();
        exitmonitor r3;
        r2[7] = 1;

     label6:
        return r4;

     label7:
        $r23 := @caughtexception;

     label8:
        r9 = $r23;
        exitmonitor r3;

     label9:
        r2[8] = 1;
        throw r9;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void add_point_fn(com.zoffcc.applications.aagtl.GeocacheCoordinate)
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class r4, $r8;
        android.content.ContentValues r5, $r9;
        java.lang.String r6, $r15, $r16, $r18, $r20;
        java.lang.Throwable r7, $r21;
        java.lang.Boolean $r10;
        boolean $z0;
        java.lang.Integer $r11, $r12, $r13, $r14;
        int $i0, $i1;
        java.lang.Object[] $r17;
        android.database.sqlite.SQLiteDatabase $r19;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        r1 := @parameter0: com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r2 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        $r8 = <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock>;
        r4 = $r8;
        entermonitor $r8;

     label1:
        $r9 = new android.content.ContentValues;
        specialinvoke $r9.<android.content.ContentValues: void <init>()>();
        r5 = $r9;
        $r10 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found>;
        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z0 == 0 goto label2;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("found", $r11);
        r3[1] = 1;
        goto label3;

     label2:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("found", $r12);
        r3[2] = 1;

     label3:
        $i0 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int aagtl_status>;
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("aagtl_status", $r13);
        $i1 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as>;
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("logas", $r14);
        $r15 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String log_date>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("logdate", $r15);
        $r16 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String fieldnotes>;
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("fieldnotes", $r16);
        $r17 = newarray (java.lang.Object)[1];
        $r18 = r1.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r17[0] = $r18;
        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("name =\'%s\'", $r17);
        $r19 = r0.<com.zoffcc.applications.aagtl.PointProvider: android.database.sqlite.SQLiteDatabase db>;
        $r20 = r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String cache_table>;
        virtualinvoke $r19.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r20, r5, r6, null);
        exitmonitor r4;
        r3[3] = 1;

     label4:
        goto label8;

     label5:
        $r21 := @caughtexception;

     label6:
        r7 = $r21;
        exitmonitor r4;

     label7:
        r3[4] = 1;
        throw r7;

     label8:
        r3[5] = 1;
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void set_filter(java.lang.String)
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];
        r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String filterstring> = r1;
        r3[0] = 1;
        return;
    }

    public void clear_filter()
    {
        com.zoffcc.applications.aagtl.PointProvider r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.PointProvider;
        $r1 = <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        r0.<com.zoffcc.applications.aagtl.PointProvider: java.lang.String filterstring> = null;
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        com.zoffcc.applications.aagtl.PointProvider$access_lock_class $r2;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRi()>();
        r1 = $r0[19];
        $r2 = new com.zoffcc.applications.aagtl.PointProvider$access_lock_class;
        specialinvoke $r2.<com.zoffcc.applications.aagtl.PointProvider$access_lock_class: void <init>()>();
        <com.zoffcc.applications.aagtl.PointProvider: com.zoffcc.applications.aagtl.PointProvider$access_lock_class access_lock> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        $r0 = newmultiarray (boolean)[20][];
        <com.zoffcc.applications.aagtl.PointProvider: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[3];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[13];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[9];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[10];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[13];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[14];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[3];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[11];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[3];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[9];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[6];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/PointProvider", 1922926495286549036L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.PostLogEntryActivity$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.zoffcc.applications.aagtl.PostLogEntryActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.PostLogEntryActivity)
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity$1 r0;
        com.zoffcc.applications.aagtl.PostLogEntryActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.PostLogEntryActivity$1;
        r1 := @parameter0: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        $r2 = <com.zoffcc.applications.aagtl.PostLogEntryActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity$1: com.zoffcc.applications.aagtl.PostLogEntryActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        byte b0;
        com.zoffcc.applications.aagtl.PostLogEntryActivity $r4, $r6, $r8, $r10;
        android.widget.RadioButton $r5, $r7, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: com.zoffcc.applications.aagtl.PostLogEntryActivity$1;
        r1 := @parameter0: android.view.View;
        $r2 = <com.zoffcc.applications.aagtl.PostLogEntryActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        b0 = 1;
        $r4 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity$1: com.zoffcc.applications.aagtl.PostLogEntryActivity this$0>;
        $r5 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton access$000(com.zoffcc.applications.aagtl.PostLogEntryActivity)>($r4);
        $z0 = virtualinvoke $r5.<android.widget.RadioButton: boolean isChecked()>();
        r3[0] = 1;
        if $z0 != 1 goto label1;

        b0 = 1;
        r3[1] = 1;
        goto label3;

     label1:
        $r6 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity$1: com.zoffcc.applications.aagtl.PostLogEntryActivity this$0>;
        $r7 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton access$100(com.zoffcc.applications.aagtl.PostLogEntryActivity)>($r6);
        $z1 = virtualinvoke $r7.<android.widget.RadioButton: boolean isChecked()>();
        r3[2] = 1;
        if $z1 != 1 goto label2;

        b0 = 2;
        r3[3] = 1;
        goto label3;

     label2:
        $r8 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity$1: com.zoffcc.applications.aagtl.PostLogEntryActivity this$0>;
        $r9 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton access$200(com.zoffcc.applications.aagtl.PostLogEntryActivity)>($r8);
        $z2 = virtualinvoke $r9.<android.widget.RadioButton: boolean isChecked()>();
        r3[4] = 1;
        if $z2 != 1 goto label3;

        b0 = 3;
        r3[5] = 1;

     label3:
        $r10 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity$1: com.zoffcc.applications.aagtl.PostLogEntryActivity this$0>;
        staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: void access$300(com.zoffcc.applications.aagtl.PostLogEntryActivity,int)>($r10, b0);
        r3[6] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.PostLogEntryActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/PostLogEntryActivity$1", -3557610787625342690L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.PostLogEntryActivity extends android.app.Activity
{
    private android.widget.EditText msg;
    private android.widget.RadioButton log_type_found;
    private android.widget.RadioButton log_type_not_found;
    private android.widget.RadioButton log_type_note;
    private android.widget.RadioGroup group_log_type;
    public android.widget.RelativeLayout mainscreen_map_view;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r2[0] = 1;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity r0;
        android.os.Bundle r1, $r57, $r63;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.LinearLayout r4, $r10;
        android.widget.TextView r5, r6, $r12, $r48;
        android.widget.Button r7, $r53;
        java.lang.String r8, $r64;
        android.view.Window $r9;
        android.widget.RelativeLayout$LayoutParams $r11, $r13, $r21, $r29, $r37, $r49, $r52, $r54;
        android.widget.RadioButton $r14, $r15, $r20, $r22, $r23, $r28, $r30, $r31, $r36, $r40, $r42, $r44, $r45, $r46, $r47;
        java.util.HashMap $r16, $r24, $r32;
        java.lang.Integer $r17, $r25, $r33;
        java.lang.Object $r18, $r26, $r34;
        java.lang.CharSequence $r19, $r27, $r35;
        android.widget.RadioGroup $r38, $r39, $r41, $r43, $r67;
        android.widget.EditText $r50, $r51, $r60, $r61, $r68;
        com.zoffcc.applications.aagtl.PostLogEntryActivity$1 $r55;
        android.content.Intent $r56, $r62;
        int $i0;
        java.lang.Exception $r58, r59, $r65, r66;

        r0 := @this: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        $r9 = virtualinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.view.Window getWindow()>();
        virtualinvoke $r9.<android.view.Window: void setFlags(int,int)>(4, 4);
        $r10 = new android.widget.LinearLayout;
        specialinvoke $r10.<android.widget.LinearLayout: void <init>(android.content.Context)>(r0);
        r4 = $r10;
        $r11 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r11.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        virtualinvoke r4.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r11);
        virtualinvoke r4.<android.widget.LinearLayout: void setOrientation(int)>(1);
        $r12 = new android.widget.TextView;
        specialinvoke $r12.<android.widget.TextView: void <init>(android.content.Context)>(r0);
        r5 = $r12;
        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>("Logtype");
        virtualinvoke r5.<android.widget.TextView: void setTextSize(int,float)>(2, 10.0F);
        $r13 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r13.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        virtualinvoke r5.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r13);
        $r14 = new android.widget.RadioButton;
        specialinvoke $r14.<android.widget.RadioButton: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_found> = $r14;
        $r15 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_found>;
        $r16 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap LOG_AS_HASH>;
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        $r18 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r17);
        $r19 = (java.lang.CharSequence) $r18;
        virtualinvoke $r15.<android.widget.RadioButton: void setText(java.lang.CharSequence)>($r19);
        $r20 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_found>;
        $r21 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r21.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        virtualinvoke $r20.<android.widget.RadioButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r21);
        $r22 = new android.widget.RadioButton;
        specialinvoke $r22.<android.widget.RadioButton: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_not_found> = $r22;
        $r23 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_not_found>;
        $r24 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap LOG_AS_HASH>;
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        $r26 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r25);
        $r27 = (java.lang.CharSequence) $r26;
        virtualinvoke $r23.<android.widget.RadioButton: void setText(java.lang.CharSequence)>($r27);
        $r28 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_not_found>;
        $r29 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r29.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        virtualinvoke $r28.<android.widget.RadioButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r29);
        $r30 = new android.widget.RadioButton;
        specialinvoke $r30.<android.widget.RadioButton: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_note> = $r30;
        $r31 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_note>;
        $r32 = <com.zoffcc.applications.aagtl.GeocacheCoordinate: java.util.HashMap LOG_AS_HASH>;
        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        $r34 = virtualinvoke $r32.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r33);
        $r35 = (java.lang.CharSequence) $r34;
        virtualinvoke $r31.<android.widget.RadioButton: void setText(java.lang.CharSequence)>($r35);
        $r36 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_note>;
        $r37 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r37.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        virtualinvoke $r36.<android.widget.RadioButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r37);
        $r38 = new android.widget.RadioGroup;
        specialinvoke $r38.<android.widget.RadioGroup: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioGroup group_log_type> = $r38;
        $r39 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioGroup group_log_type>;
        $r40 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_found>;
        virtualinvoke $r39.<android.widget.RadioGroup: void addView(android.view.View)>($r40);
        $r41 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioGroup group_log_type>;
        $r42 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_not_found>;
        virtualinvoke $r41.<android.widget.RadioGroup: void addView(android.view.View)>($r42);
        $r43 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioGroup group_log_type>;
        $r44 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_note>;
        virtualinvoke $r43.<android.widget.RadioGroup: void addView(android.view.View)>($r44);
        $r45 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_found>;
        virtualinvoke $r45.<android.widget.RadioButton: void setChecked(boolean)>(1);
        $r46 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_not_found>;
        virtualinvoke $r46.<android.widget.RadioButton: void setChecked(boolean)>(0);
        $r47 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_note>;
        virtualinvoke $r47.<android.widget.RadioButton: void setChecked(boolean)>(0);
        $r48 = new android.widget.TextView;
        specialinvoke $r48.<android.widget.TextView: void <init>(android.content.Context)>(r0);
        r6 = $r48;
        virtualinvoke r6.<android.widget.TextView: void setText(java.lang.CharSequence)>("Fieldnote");
        virtualinvoke r6.<android.widget.TextView: void setTextSize(int,float)>(2, 10.0F);
        $r49 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r49.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        virtualinvoke r6.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r49);
        $r50 = new android.widget.EditText;
        specialinvoke $r50.<android.widget.EditText: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.EditText msg> = $r50;
        $r51 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.EditText msg>;
        $r52 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r52.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        virtualinvoke $r51.<android.widget.EditText: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r52);
        $r53 = new android.widget.Button;
        specialinvoke $r53.<android.widget.Button: void <init>(android.content.Context)>(r0);
        r7 = $r53;
        virtualinvoke r7.<android.widget.Button: void setText(java.lang.CharSequence)>("Save");
        $r54 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r54.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        virtualinvoke r7.<android.widget.Button: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r54);
        virtualinvoke r7.<android.widget.Button: void setGravity(int)>(17);
        $r55 = new com.zoffcc.applications.aagtl.PostLogEntryActivity$1;
        specialinvoke $r55.<com.zoffcc.applications.aagtl.PostLogEntryActivity$1: void <init>(com.zoffcc.applications.aagtl.PostLogEntryActivity)>(r0);
        virtualinvoke r7.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r55);

     label1:
        $r56 = virtualinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.content.Intent getIntent()>();
        $r57 = virtualinvoke $r56.<android.content.Intent: android.os.Bundle getExtras()>();
        r8 = virtualinvoke $r57.<android.os.Bundle: java.lang.String getString(java.lang.String)>("title");
        $i0 = virtualinvoke r8.<java.lang.String: int length()>();
        r3[0] = 1;
        if $i0 <= 0 goto label2;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: void setTitle(java.lang.CharSequence)>(r8);
        r3[1] = 1;

     label2:
        r3[2] = 1;

     label3:
        goto label5;

     label4:
        $r58 := @caughtexception;
        r59 = $r58;
        r3[3] = 1;

     label5:
        $r60 = new android.widget.EditText;
        specialinvoke $r60.<android.widget.EditText: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.EditText msg> = $r60;
        $r61 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.EditText msg>;
        $r62 = virtualinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.content.Intent getIntent()>();
        $r63 = virtualinvoke $r62.<android.content.Intent: android.os.Bundle getExtras()>();
        $r64 = virtualinvoke $r63.<android.os.Bundle: java.lang.String getString(java.lang.String)>("msg");
        virtualinvoke $r61.<android.widget.EditText: void setText(java.lang.CharSequence)>($r64);
        r3[4] = 1;

     label6:
        goto label8;

     label7:
        $r65 := @caughtexception;
        r66 = $r65;
        r3[5] = 1;

     label8:
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>(r5);
        $r67 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioGroup group_log_type>;
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>($r67);
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>(r6);
        $r68 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.EditText msg>;
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>($r68);
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>(r7);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: void setContentView(android.view.View)>(r4);
        r3[6] = 1;
        return;

        catch java.lang.Exception from label1 to label3 with label4;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void onBackPressed()
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: void executeDone(int)>(1);
        specialinvoke r0.<android.app.Activity: void onBackPressed()>();
        r2[0] = 1;
        return;
    }

    private void executeDone(int)
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Intent r3, $r4;
        android.widget.EditText $r5;
        android.text.Editable $r6;
        java.lang.String $r7;

        r0 := @this: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        i0 := @parameter0: int;
        $r1 = <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r4 = new android.content.Intent;
        specialinvoke $r4.<android.content.Intent: void <init>()>();
        r3 = $r4;
        $r5 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.EditText msg>;
        $r6 = virtualinvoke $r5.<android.widget.EditText: android.text.Editable getText()>();
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("msg", $r7);
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("logtype", i0);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: void setResult(int,android.content.Intent)>(-1, r3);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: void finish()>();
        r2[0] = 1;
        return;
    }

    static android.widget.RadioButton access$000(com.zoffcc.applications.aagtl.PostLogEntryActivity)
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.widget.RadioButton $r3;

        r0 := @parameter0: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_found>;
        r2[0] = 1;
        return $r3;
    }

    static android.widget.RadioButton access$100(com.zoffcc.applications.aagtl.PostLogEntryActivity)
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.widget.RadioButton $r3;

        r0 := @parameter0: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_not_found>;
        r2[0] = 1;
        return $r3;
    }

    static android.widget.RadioButton access$200(com.zoffcc.applications.aagtl.PostLogEntryActivity)
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.widget.RadioButton $r3;

        r0 := @parameter0: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: android.widget.RadioButton log_type_note>;
        r2[0] = 1;
        return $r3;
    }

    static void access$300(com.zoffcc.applications.aagtl.PostLogEntryActivity, int)
    {
        com.zoffcc.applications.aagtl.PostLogEntryActivity r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.zoffcc.applications.aagtl.PostLogEntryActivity;
        i0 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        specialinvoke r0.<com.zoffcc.applications.aagtl.PostLogEntryActivity: void executeDone(int)>(i0);
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRi()>();
        r1 = $r0[8];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <com.zoffcc.applications.aagtl.PostLogEntryActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/PostLogEntryActivity", 5093986862644391507L);
        return $r0;
    }
}
public final class com.zoffcc.applications.aagtl.R$attr extends java.lang.Object
{

    public void <init>()
    {
        com.zoffcc.applications.aagtl.R$attr r0;

        r0 := @this: com.zoffcc.applications.aagtl.R$attr;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.zoffcc.applications.aagtl.R$drawable extends java.lang.Object
{
    public static final int arrow_off;
    public static final int follow;
    public static final int follow_off;
    public static final int icon;
    public static final int icon_bak1;
    public static final int icon_bak2;
    public static final int timepicker_down_btn;
    public static final int timepicker_down_disabled;
    public static final int timepicker_down_disabled_focused;
    public static final int timepicker_down_normal;
    public static final int timepicker_down_pressed;
    public static final int timepicker_down_selected;
    public static final int timepicker_input;
    public static final int timepicker_input_disabled;
    public static final int timepicker_input_normal;
    public static final int timepicker_input_pressed;
    public static final int timepicker_input_selected;
    public static final int timepicker_up_btn;
    public static final int timepicker_up_disabled;
    public static final int timepicker_up_disabled_focused;
    public static final int timepicker_up_normal;
    public static final int timepicker_up_pressed;
    public static final int timepicker_up_selected;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.R$drawable r0;

        r0 := @this: com.zoffcc.applications.aagtl.R$drawable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.zoffcc.applications.aagtl.R$id extends java.lang.Object
{
    public static final int decrement;
    public static final int increment;
    public static final int pref_num_picker;
    public static final int status1;
    public static final int timepicker_input;
    public static final int top_node;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.R$id r0;

        r0 := @this: com.zoffcc.applications.aagtl.R$id;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.zoffcc.applications.aagtl.R$layout extends java.lang.Object
{
    public static final int main;
    public static final int number_picker;
    public static final int number_picker_pref;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.R$layout r0;

        r0 := @this: com.zoffcc.applications.aagtl.R$layout;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.zoffcc.applications.aagtl.R$string extends java.lang.Object
{
    public static final int app_name;
    public static final int hello;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.R$string r0;

        r0 := @this: com.zoffcc.applications.aagtl.R$string;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class com.zoffcc.applications.aagtl.R extends java.lang.Object
{

    public void <init>()
    {
        com.zoffcc.applications.aagtl.R r0;

        r0 := @this: com.zoffcc.applications.aagtl.R;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class com.zoffcc.applications.aagtl.Rose extends android.view.SurfaceView implements android.view.View$OnTouchListener, android.view.SurfaceHolder$Callback
{
    com.zoffcc.applications.aagtl.ImageManager im;
    int newx;
    int newy;
    int deltax;
    int deltay;
    int prev_x;
    int prev_y;
    int direction;
    boolean start_move;
    static final int more_for_speed_x;
    static final int more_for_speed_y;
    static final int TOUCH_CACHE_RADIUS;
    static final int NONE;
    static final int DRAG;
    static final int ZOOM;
    static final int PRESS;
    int touch_mode;
    float oldDist;
    android.graphics.PointF touch_now;
    android.graphics.PointF touch_start;
    android.graphics.PointF touch_prev;
    android.graphics.PointF touch_last_load_tiles;
    double map_center_x_before_move;
    double map_center_y_before_move;
    double map_heading_prev;
    double map_heading_start;
    double map_heading_last_load_tiles;
    static boolean use_parent_tiles;
    public java.lang.Boolean redraw_notify;
    static final int larger_offset_x;
    static final int larger_offset_y;
    int tile_size_x;
    int tile_size_y;
    int num_tiles_x;
    int num_tiles_y;
    double map_center_x;
    double map_center_y;
    int zoom;
    com.zoffcc.applications.aagtl.Coordinate center_coord;
    com.zoffcc.applications.aagtl.GeocacheCoordinate current_target;
    public int mCanvasHeight;
    public int mCanvasWidth;
    android.graphics.Bitmap bitmap_main;
    android.graphics.Canvas image_main;
    android.graphics.Paint mainpaint;
    android.graphics.Paint rectpaint;
    android.graphics.Bitmap bitmap1;
    android.graphics.Bitmap bitmap2;
    android.graphics.Bitmap bitmap3;
    android.graphics.Bitmap bitmap4;
    android.graphics.Bitmap bitmap5;
    android.graphics.Bitmap bitmap6;
    android.graphics.Bitmap[][] map_tiles_onscreen;
    java.lang.String[][] map_tile_filename;
    int[][][] map_tile_num_onscreen;
    android.graphics.Bitmap[][] copy_bitmaps;
    int[][][] copy_tiles;
    android.graphics.Bitmap[] map_tiles_cache;
    android.graphics.Bitmap[] map_tiles_parent_cache;
    int[][] map_tiles_caches_values;
    int[][] map_tiles_parent_caches_values;
    int map_tiles_cache_oldest_counter;
    int map_tiles_parent_cache_oldest_counter;
    static final int map_tiles_cache_size;
    static final int map_tiles_parent_cache_size;
    java.util.List yit;
    java.util.List xit;
    com.zoffcc.applications.aagtl.aagtl main_object;
    private android.view.SurfaceHolder mSurfaceHolder;
    public static final int STATE_LOSE;
    public static final int STATE_PAUSE;
    public static final int STATE_READY;
    public static final int STATE_RUNNING;
    public static final int STATE_WIN;
    public static final int TILE_NULL;
    public static final int TILE_LOADING;
    public static final int TILE_LOADED_NEW;
    public static final int TILE_LOADED_DRAWN;
    private static final boolean[][] $VRc;

    public double[] deg2num(com.zoffcc.applications.aagtl.Coordinate)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        com.zoffcc.applications.aagtl.Coordinate r1;
        boolean[][] $r2;
        boolean[] r3;
        double[] r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r4 = newarray (double)[2];
        $d0 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d1 = $d0 + 180.0;
        $d2 = $d1 / 360.0;
        $i0 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $i1 = 1 << $i0;
        $d3 = (double) $i1;
        $d4 = $d2 * $d3;
        r4[0] = $d4;
        $d5 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d6 = staticinvoke <java.lang.Math: double toRadians(double)>($d5);
        $d7 = staticinvoke <java.lang.Math: double tan(double)>($d6);
        $d8 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d9 = staticinvoke <java.lang.Math: double toRadians(double)>($d8);
        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d9);
        $d11 = 1.0 / $d10;
        $d12 = $d7 + $d11;
        $d13 = staticinvoke <java.lang.Math: double log(double)>($d12);
        $d14 = $d13 / 3.141592653589793;
        $d15 = 1.0 - $d14;
        $d16 = $d15 / 2.0;
        $i2 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $i3 = 1 << $i2;
        $d17 = (double) $i3;
        $d18 = $d16 * $d17;
        r4[1] = $d18;
        r3[0] = 1;
        return r4;
    }

    public double[] deg2num_give_zoom(com.zoffcc.applications.aagtl.Coordinate, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        com.zoffcc.applications.aagtl.Coordinate r1;
        int i0, $i1, $i2;
        boolean[][] $r2;
        boolean[] r3;
        double[] r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = newarray (double)[2];
        $d0 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $d1 = $d0 + 180.0;
        $d2 = $d1 / 360.0;
        $i1 = 1 << i0;
        $d3 = (double) $i1;
        $d4 = $d2 * $d3;
        r4[0] = $d4;
        $d5 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d6 = staticinvoke <java.lang.Math: double toRadians(double)>($d5);
        $d7 = staticinvoke <java.lang.Math: double tan(double)>($d6);
        $d8 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d9 = staticinvoke <java.lang.Math: double toRadians(double)>($d8);
        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d9);
        $d11 = 1.0 / $d10;
        $d12 = $d7 + $d11;
        $d13 = staticinvoke <java.lang.Math: double log(double)>($d12);
        $d14 = $d13 / 3.141592653589793;
        $d15 = 1.0 - $d14;
        $d16 = $d15 / 2.0;
        $i2 = 1 << i0;
        $d17 = (double) $i2;
        $d18 = $d16 * $d17;
        r4[1] = $d18;
        r3[0] = 1;
        return r4;
    }

    public com.zoffcc.applications.aagtl.Coordinate num2deg(double, double)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.Coordinate r3, $r4;
        int $i0, $i1;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $i1 = 1 << $i0;
        d2 = (double) $i1;
        $d6 = d0 / d2;
        $d7 = $d6 * 360.0;
        d3 = $d7 - 180.0;
        $d8 = 2.0 * d1;
        $d9 = $d8 / d2;
        $d10 = 1.0 - $d9;
        $d11 = 3.141592653589793 * $d10;
        $d12 = staticinvoke <java.lang.Math: double sinh(double)>($d11);
        d4 = staticinvoke <java.lang.Math: double atan(double)>($d12);
        $d13 = d4 * 180.0;
        d5 = $d13 / 3.141592653589793;
        $r4 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r4.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d5, d3);
        r3 = $r4;
        r2[0] = 1;
        return r3;
    }

    public com.zoffcc.applications.aagtl.Coordinate num2deg_give_zoom(double, double, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.Coordinate r3, $r4;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        i0 := @parameter2: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i1 = 1 << i0;
        d2 = (double) $i1;
        $d6 = d0 / d2;
        $d7 = $d6 * 360.0;
        d3 = $d7 - 180.0;
        $d8 = 2.0 * d1;
        $d9 = $d8 / d2;
        $d10 = 1.0 - $d9;
        $d11 = 3.141592653589793 * $d10;
        $d12 = staticinvoke <java.lang.Math: double sinh(double)>($d11);
        d4 = staticinvoke <java.lang.Math: double atan(double)>($d12);
        $d13 = d4 * 180.0;
        d5 = $d13 / 3.141592653589793;
        $r4 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r4.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(d5, d3);
        r3 = $r4;
        r2[0] = 1;
        return r3;
    }

    public void set_center(com.zoffcc.applications.aagtl.Coordinate)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        com.zoffcc.applications.aagtl.Coordinate r1;
        boolean[][] $r2;
        boolean[] r3;
        double[] r4, r5;
        double $d0, $d1, $d2, $d3;
        com.zoffcc.applications.aagtl.aagtl $r6;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r4 = newarray (double)[2];
        r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: double[] deg2num(com.zoffcc.applications.aagtl.Coordinate)>(r1);
        $d0 = r5[0];
        r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x> = $d0;
        $d1 = r5[1];
        r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y> = $d1;
        $r6 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $d2 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d3 = r1.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        virtualinvoke $r6.<com.zoffcc.applications.aagtl.aagtl: void set_center(double,double)>($d2, $d3);
        r3[0] = 1;
        return;
    }

    public synchronized void __calc_tiles_on_display()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, i14, $i15, i16, $i17, $i18, i19, $i20, i21, i22, $i23, i24, i25, $i26, i27, i28, $i29, i30, $i31, $i32, i33, $i34, $i35, $i36, $i37, $i38, $i39;
        double $d0, $d1;
        android.graphics.Bitmap[][] $r3, $r5, $r6, $r8, $r10;
        int[][][] $r4, $r13, $r14, $r16, $r19;
        android.graphics.Bitmap[] $r7, $r9, $r11;
        android.graphics.Bitmap $r12;
        int[][] $r15, $r17, $r20;
        int[] $r18, $r21;
        java.util.List $r22, $r23, $r24, $r27, $r30, $r33;
        java.lang.Object $r25, $r28, $r31, $r34;
        java.lang.Integer $r26, $r29, $r32, $r35;
        com.zoffcc.applications.aagtl.aagtl $r36;
        com.zoffcc.applications.aagtl.aagtl$settings $r37;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $d0 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x>;
        i0 = (int) $d0;
        $d1 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y>;
        i1 = (int) $d1;
        $r3 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        r2[0] = 1;
        if $r3 == null goto label10;

        $r4 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        r2[1] = 1;
        if $r4 == null goto label10;

        i2 = 0;
        r2[2] = 1;

     label1:
        $r5 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $i12 = lengthof $r5;
        r2[3] = 1;
        if i2 >= $i12 goto label4;

        i3 = 0;
        r2[4] = 1;

     label2:
        $r6 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $r7 = $r6[i2];
        $i13 = lengthof $r7;
        r2[5] = 1;
        if i3 >= $i13 goto label3;

        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] copy_bitmaps>;
        $r9 = $r8[i2];
        $r10 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $r11 = $r10[i2];
        $r12 = $r11[i3];
        $r9[i3] = $r12;
        i3 = i3 + 1;
        r2[6] = 1;
        goto label2;

     label3:
        i2 = i2 + 1;
        r2[7] = 1;
        goto label1;

     label4:
        i14 = 0;
        r2[8] = 1;

     label5:
        $r13 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i15 = lengthof $r13;
        r2[9] = 1;
        if i14 >= $i15 goto label10;

        i16 = 0;
        r2[10] = 1;

     label6:
        $r14 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r15 = $r14[i14];
        $i17 = lengthof $r15;
        r2[11] = 1;
        if i16 >= $i17 goto label9;

        i4 = 0;
        r2[12] = 1;

     label7:
        r2[13] = 1;
        if i4 >= 3 goto label8;

        $r16 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] copy_tiles>;
        $r17 = $r16[i14];
        $r18 = $r17[i16];
        $r19 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r20 = $r19[i14];
        $r21 = $r20[i16];
        $i18 = $r21[i4];
        $r18[i4] = $i18;
        i4 = i4 + 1;
        r2[14] = 1;
        goto label7;

     label8:
        i16 = i16 + 1;
        r2[15] = 1;
        goto label6;

     label9:
        i14 = i14 + 1;
        r2[16] = 1;
        goto label5;

     label10:
        $r22 = r0.<com.zoffcc.applications.aagtl.Rose: java.util.List xit>;
        i19 = interfaceinvoke $r22.<java.util.List: int size()>();
        $r23 = r0.<com.zoffcc.applications.aagtl.Rose: java.util.List yit>;
        i5 = interfaceinvoke $r23.<java.util.List: int size()>();
        i6 = 0;
        r2[17] = 1;

     label11:
        r2[18] = 1;
        if i6 >= i19 goto label18;

        $i20 = i6 % 2;
        r2[19] = 1;
        if $i20 != 0 goto label12;

        i7 = i6 / 2;
        $r24 = r0.<com.zoffcc.applications.aagtl.Rose: java.util.List xit>;
        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i7);
        $r26 = (java.lang.Integer) $r25;
        i21 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();
        r2[20] = 1;
        goto label13;

     label12:
        i22 = i6 / 2;
        $i23 = i19 - 1;
        i24 = $i23 - i22;
        $r27 = r0.<com.zoffcc.applications.aagtl.Rose: java.util.List xit>;
        $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(i24);
        $r29 = (java.lang.Integer) $r28;
        i21 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();
        r2[21] = 1;

     label13:
        i25 = 0;
        r2[22] = 1;

     label14:
        r2[23] = 1;
        if i25 >= i5 goto label17;

        $i26 = i25 % 2;
        r2[24] = 1;
        if $i26 != 0 goto label15;

        i8 = i25 / 2;
        $r30 = r0.<com.zoffcc.applications.aagtl.Rose: java.util.List xit>;
        $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(i8);
        $r32 = (java.lang.Integer) $r31;
        i27 = virtualinvoke $r32.<java.lang.Integer: int intValue()>();
        r2[25] = 1;
        goto label16;

     label15:
        i28 = i25 / 2;
        $i29 = i5 - 1;
        i30 = $i29 - i28;
        $r33 = r0.<com.zoffcc.applications.aagtl.Rose: java.util.List yit>;
        $r34 = interfaceinvoke $r33.<java.util.List: java.lang.Object get(int)>(i30);
        $r35 = (java.lang.Integer) $r34;
        i27 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();
        r2[26] = 1;

     label16:
        $i31 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i32 = $i31 / 2;
        i33 = $i32 + 1;
        $i34 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $i35 = $i34 / 2;
        i9 = $i35 + 1;
        $i36 = i0 + i21;
        i10 = $i36 - i33;
        $i37 = i1 + i27;
        i11 = $i37 - i9;
        $r36 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r37 = $r36.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $i38 = $r37.<com.zoffcc.applications.aagtl.aagtl$settings: int map_type>;
        $i39 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void check_tile(int,int,int,int,int,int)>($i38, $i39, i10, i11, i21, i27);
        i25 = i25 + 1;
        r2[27] = 1;
        goto label14;

     label17:
        i6 = i6 + 1;
        r2[28] = 1;
        goto label11;

     label18:
        r2[29] = 1;
        return;
    }

    public void change_map_type(int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.aagtl $r3, $r5;
        com.zoffcc.applications.aagtl.aagtl$settings $r4;
        com.zoffcc.applications.aagtl.MapDownloader $r6;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        i0 := @parameter0: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r4 = $r3.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r4.<com.zoffcc.applications.aagtl.aagtl$settings: int map_type> = i0;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void clear_stuff()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void clear_stuff_2()>();
        $r5 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r6 = $r5.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        virtualinvoke $r6.<com.zoffcc.applications.aagtl.MapDownloader: void clear_stuff()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void __calc_tiles_on_display()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void draw_me()>();
        r2[0] = 1;
        return;
    }

    public synchronized void check_tile(int, int, int, int, int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, $i37, i38, $i39, i41, i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean r3, r4, r10, r12, $r39, $r50, r62, $r63, $r77, $r79, $r84, $r88, $r90, $r95, $r97, $r105, $r107, $r109, $r120;
        java.lang.Exception r5, $r76, $r118, r119;
        com.zoffcc.applications.aagtl.Coordinate r6;
        double[] r7, r81;
        java.lang.String[] r8, $r23;
        java.lang.String r9, $r26, r59;
        android.graphics.Bitmap r11, r14, $r38, $r45, r49, $r69, $r72, r99;
        java.io.FileNotFoundException r13, $r94;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        int[][][] $r15, $r16, $r19, $r27, $r28, $r30, $r33, $r46, $r54, $r73, $r102, $r113;
        int[][] $r17, $r20, $r29, $r31, $r34, $r47, $r55, $r74, $r103, $r114;
        int[] $r18, $r21, $r32, $r35, $r48, $r56, $r75, $r104, $r115;
        java.lang.String[][] $r22;
        com.zoffcc.applications.aagtl.aagtl $r24, $r57, $r60, $r67, $r82, $r86, $r92, $r116;
        com.zoffcc.applications.aagtl.MapDownloader $r25, $r58, $r61, $r68, $r83, $r87, $r93, $r117;
        android.graphics.Bitmap[][] $r36, $r41, $r43, $r52, $r65, $r70, $r100, $r111;
        android.graphics.Bitmap[] $r37, $r42, $r44, $r53, $r66, $r71, $r101, $r112;
        java.io.PrintStream $r40, $r51, $r64, $r78, $r80, $r85, $r89, $r91, $r96, $r98, $r106, $r108, $r110, $r121;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        null_type n0;
        byte $b40, $b42;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        i5 := @parameter5: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r15 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        r2[0] = 1;
        if $r15 != null goto label1;

        r2[1] = 1;
        return;

     label1:
        $r16 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i11 = i4 - 1;
        $r17 = $r16[$i11];
        $i12 = i5 - 1;
        $r18 = $r17[$i12];
        $r18[0] = i2;
        $r19 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i13 = i4 - 1;
        $r20 = $r19[$i13];
        $i14 = i5 - 1;
        $r21 = $r20[$i14];
        $r21[1] = i3;
        $r22 = r0.<com.zoffcc.applications.aagtl.Rose: java.lang.String[][] map_tile_filename>;
        $i15 = i4 - 1;
        $r23 = $r22[$i15];
        $i16 = i5 - 1;
        $r24 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r25 = $r24.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        $r26 = virtualinvoke $r25.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.String get_local_url(int,int,int,int)>(i0, i1, i2, i3);
        $r23[$i16] = $r26;
        r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        i6 = 0;
        r2[2] = 1;

     label2:
        $r27 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] copy_tiles>;
        $i17 = lengthof $r27;
        r2[3] = 1;
        if i6 >= $i17 goto label7;

        i7 = 0;
        r2[4] = 1;

     label3:
        $r28 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] copy_tiles>;
        $r29 = $r28[i6];
        $i18 = lengthof $r29;
        r2[5] = 1;
        if i7 >= $i18 goto label6;

        $r30 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] copy_tiles>;
        $r31 = $r30[i6];
        $r32 = $r31[i7];
        $i19 = $r32[0];
        r2[6] = 1;
        if $i19 != i2 goto label5;

        $r33 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] copy_tiles>;
        $r34 = $r33[i6];
        $r35 = $r34[i7];
        $i20 = $r35[1];
        r2[7] = 1;
        if $i20 != i3 goto label5;

        $r36 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] copy_bitmaps>;
        $r37 = $r36[i6];
        $r38 = $r37[i7];
        r2[8] = 1;
        if $r38 == null goto label5;

        $r39 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z2 = virtualinvoke $r39.<java.lang.Boolean: boolean booleanValue()>();
        r2[9] = 1;
        if $z2 == 0 goto label4;

        $r40 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("found it in memory");
        r2[10] = 1;

     label4:
        $r41 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $i21 = i4 - 1;
        $r42 = $r41[$i21];
        $i22 = i5 - 1;
        $r43 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] copy_bitmaps>;
        $r44 = $r43[i6];
        $r45 = $r44[i7];
        $r42[$i22] = $r45;
        $r46 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i23 = i4 - 1;
        $r47 = $r46[$i23];
        $i24 = i5 - 1;
        $r48 = $r47[$i24];
        $r48[2] = 2;
        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r2[11] = 1;
        goto label6;

     label5:
        i7 = i7 + 1;
        r2[12] = 1;
        goto label3;

     label6:
        i6 = i6 + 1;
        r2[13] = 1;
        goto label2;

     label7:
        $z3 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();
        r2[14] = 1;
        if $z3 != 0 goto label9;

        r49 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap get_tile_from_map_tile_cache(int,int)>(i2, i3);
        r2[15] = 1;
        if r49 == null goto label9;

        $r50 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z4 = virtualinvoke $r50.<java.lang.Boolean: boolean booleanValue()>();
        r2[16] = 1;
        if $z4 == 0 goto label8;

        $r51 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("found it in bitmap cache");
        r2[17] = 1;

     label8:
        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r52 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $i25 = i4 - 1;
        $r53 = $r52[$i25];
        $i26 = i5 - 1;
        $r53[$i26] = r49;
        $r54 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i27 = i4 - 1;
        $r55 = $r54[$i27];
        $i28 = i5 - 1;
        $r56 = $r55[$i28];
        $r56[2] = 2;
        r2[18] = 1;

     label9:
        $z5 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();
        r2[19] = 1;
        if $z5 != 0 goto label36;

        $r57 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r58 = $r57.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        r59 = virtualinvoke $r58.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.String get_local_url(int,int,int,int)>(i0, i1, i2, i3);
        $r60 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r61 = $r60.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        r62 = virtualinvoke $r61.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.Boolean is_downloaded(java.lang.String)>(r59);
        $z6 = virtualinvoke r62.<java.lang.Boolean: boolean booleanValue()>();
        r2[20] = 1;
        if $z6 == 0 goto label14;

     label10:
        $r63 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z7 = virtualinvoke $r63.<java.lang.Boolean: boolean booleanValue()>();
        r2[21] = 1;
        if $z7 == 0 goto label11;

        $r64 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("found it on disk");
        r2[22] = 1;

     label11:
        $r65 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $i29 = i4 - 1;
        $r66 = $r65[$i29];
        $i30 = i5 - 1;
        $r67 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r68 = $r67.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        $r69 = virtualinvoke $r68.<com.zoffcc.applications.aagtl.MapDownloader: android.graphics.Bitmap get_bitmap_from_local_url(java.lang.String)>(r59);
        $r66[$i30] = $r69;
        $r70 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $i31 = i4 - 1;
        $r71 = $r70[$i31];
        $i32 = i5 - 1;
        $r72 = $r71[$i32];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void add_to_map_tile_cache(android.graphics.Bitmap,int,int)>($r72, i2, i3);
        $r73 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i33 = i4 - 1;
        $r74 = $r73[$i33];
        $i34 = i5 - 1;
        $r75 = $r74[$i34];
        $r75[2] = 1;
        r2[23] = 1;

     label12:
        goto label36;

     label13:
        $r76 := @caughtexception;
        r5 = $r76;
        r2[24] = 1;
        goto label36;

     label14:
        $r77 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z8 = virtualinvoke $r77.<java.lang.Boolean: boolean booleanValue()>();
        r2[25] = 1;
        if $z8 == 0 goto label15;

        $r78 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>("11 start downloading tile in background thread");
        r2[26] = 1;

     label15:
        $i35 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r2[27] = 1;
        if $i35 <= 2 goto label31;

        $z9 = <com.zoffcc.applications.aagtl.Rose: boolean use_parent_tiles>;
        r2[28] = 1;
        if $z9 == 0 goto label31;

        $r79 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z10 = virtualinvoke $r79.<java.lang.Boolean: boolean booleanValue()>();
        r2[29] = 1;
        if $z10 == 0 goto label16;

        $r80 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>("loading parent tile");
        r2[30] = 1;

     label16:
        i36 = i1 - 1;
        $d0 = (double) i2;
        $d1 = (double) i3;
        r6 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.Coordinate num2deg(double,double)>($d0, $d1);
        r7 = newarray (double)[2];
        r81 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: double[] deg2num_give_zoom(com.zoffcc.applications.aagtl.Coordinate,int)>(r6, i36);
        $d2 = r81[0];
        $d3 = $d2 + 0.001;
        i8 = (int) $d3;
        $d4 = r81[1];
        $d5 = $d4 + 0.001;
        i9 = (int) $d5;
        $r82 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r83 = $r82.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        r8 = virtualinvoke $r83.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.String[] get_remote_url(int,int,int,int)>(i0, i36, i8, i9);
        r9 = r8[1];
        r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r11 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap get_tile_from_map_tile_parent_cache(int,int)>(i2, i3);
        r2[31] = 1;
        if r11 == null goto label17;

        r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r84 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z11 = virtualinvoke $r84.<java.lang.Boolean: boolean booleanValue()>();
        r2[32] = 1;
        if $z11 == 0 goto label24;

        $r85 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>("found parent tile in bitmap cache");
        r2[33] = 1;
        goto label24;

     label17:
        $r86 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r87 = $r86.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        r12 = virtualinvoke $r87.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.Boolean is_downloaded(java.lang.String)>(r9);
        $r88 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z12 = virtualinvoke $r88.<java.lang.Boolean: boolean booleanValue()>();
        r2[34] = 1;
        if $z12 == 0 goto label18;

        $r89 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>("found parent tile on disk");
        r2[35] = 1;

     label18:
        $z13 = virtualinvoke r12.<java.lang.Boolean: boolean booleanValue()>();
        r2[36] = 1;
        if $z13 == 0 goto label23;

        $r90 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z14 = virtualinvoke $r90.<java.lang.Boolean: boolean booleanValue()>();
        r2[37] = 1;
        if $z14 == 0 goto label19;

        $r91 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r91.<java.io.PrintStream: void println(java.lang.String)>("loading parent tile from disk");
        r2[38] = 1;

     label19:
        $r92 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r93 = $r92.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        r11 = virtualinvoke $r93.<com.zoffcc.applications.aagtl.MapDownloader: android.graphics.Bitmap get_bitmap_from_local_url(java.lang.String)>(r9);
        r2[39] = 1;

     label20:
        goto label24;

     label21:
        $r94 := @caughtexception;
        r13 = $r94;
        $r95 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z15 = virtualinvoke $r95.<java.lang.Boolean: boolean booleanValue()>();
        r2[40] = 1;
        if $z15 == 0 goto label22;

        $r96 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r96.<java.io.PrintStream: void println(java.lang.String)>("++parent tile, file not found++");
        r2[41] = 1;

     label22:
        r2[42] = 1;
        goto label24;

     label23:
        $r97 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z16 = virtualinvoke $r97.<java.lang.Boolean: boolean booleanValue()>();
        r2[43] = 1;
        if $z16 == 0 goto label24;

        $r98 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r98.<java.io.PrintStream: void println(java.lang.String)>("**parent tile not here**");
        r2[44] = 1;

     label24:
        r2[45] = 1;
        if r11 == null goto label31;

        n0 = null;
        $z17 = virtualinvoke r10.<java.lang.Boolean: boolean booleanValue()>();
        r2[46] = 1;
        if $z17 != 0 goto label29;

        $i37 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        i38 = $i37 * 2;
        $i39 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        i10 = $i39 * 2;
        r14 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r11, i38, i10, 0);
        z0 = 0;
        z1 = 0;
        $d6 = r81[0];
        $d7 = (double) i8;
        $d8 = $d6 - $d7;
        $b40 = $d8 cmpl 0.1;
        r2[47] = 1;
        if $b40 <= 0 goto label25;

        i41 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        r2[48] = 1;
        goto label26;

     label25:
        i41 = 0;
        r2[49] = 1;

     label26:
        $d9 = r81[1];
        $d10 = (double) i9;
        $d11 = $d9 - $d10;
        $b42 = $d11 cmpl 0.1;
        r2[50] = 1;
        if $b42 <= 0 goto label27;

        i43 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        r2[51] = 1;
        goto label28;

     label27:
        i43 = 0;
        r2[52] = 1;

     label28:
        $i44 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $i45 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        r99 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>(r14, i41, i43, $i44, $i45);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void add_to_map_tile_parent_cache(android.graphics.Bitmap,int,int)>(r99, i2, i3);
        r2[53] = 1;
        goto label30;

     label29:
        r99 = r11;
        r2[54] = 1;

     label30:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void add_to_map_tile_cache(android.graphics.Bitmap,int,int)>(null, i2, i3);
        $r100 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $i46 = i4 - 1;
        $r101 = $r100[$i46];
        $i47 = i5 - 1;
        $r101[$i47] = r99;
        $r102 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i48 = i4 - 1;
        $r103 = $r102[$i48];
        $i49 = i5 - 1;
        $r104 = $r103[$i49];
        $r104[2] = 0;
        r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r2[55] = 1;

     label31:
        $r105 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z18 = virtualinvoke $r105.<java.lang.Boolean: boolean booleanValue()>();
        r2[56] = 1;
        if $z18 == 0 goto label32;

        $r106 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>("22 start downloading tile in background thread");
        r2[57] = 1;

     label32:
        $z19 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();
        r2[58] = 1;
        if $z19 == 0 goto label33;

        $r107 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z20 = virtualinvoke $r107.<java.lang.Boolean: boolean booleanValue()>();
        r2[59] = 1;
        if $z20 == 0 goto label35;

        $r108 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r108.<java.io.PrintStream: void println(java.lang.String)>("-- showing parent");
        r2[60] = 1;
        goto label35;

     label33:
        $r109 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z21 = virtualinvoke $r109.<java.lang.Boolean: boolean booleanValue()>();
        r2[61] = 1;
        if $z21 == 0 goto label34;

        $r110 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r110.<java.io.PrintStream: void println(java.lang.String)>("-- NOT showing parent");
        r2[62] = 1;

     label34:
        $r111 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $i50 = i4 - 1;
        $r112 = $r111[$i50];
        $i51 = i5 - 1;
        $r112[$i51] = null;
        $r113 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i52 = i4 - 1;
        $r114 = $r113[$i52];
        $i53 = i5 - 1;
        $r115 = $r114[$i53];
        $r115[2] = 0;
        r2[63] = 1;

     label35:
        $r116 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r117 = $r116.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        virtualinvoke $r117.<com.zoffcc.applications.aagtl.MapDownloader: void append_tile_to_list(int,int,int,int)>(i0, i1, i2, i3);
        r2[64] = 1;

     label36:
        r2[65] = 1;

     label37:
        goto label39;

     label38:
        $r118 := @caughtexception;
        r119 = $r118;
        $r120 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z22 = virtualinvoke $r120.<java.lang.Boolean: boolean booleanValue()>();
        r2[66] = 1;
        if $z22 == 0 goto label39;

        $r121 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r121.<java.io.PrintStream: void println(java.lang.String)>("check_tile: Exception1");
        r2[67] = 1;

     label39:
        r2[68] = 1;
        return;

        catch java.lang.Exception from label10 to label12 with label13;
        catch java.io.FileNotFoundException from label19 to label20 with label21;
        catch java.lang.Exception from label1 to label37 with label38;
    }

    public synchronized void add_to_map_tile_cache(android.graphics.Bitmap, int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.graphics.Bitmap r1;
        int i0, i1, i2, i3, i4;
        boolean[][] $r2;
        boolean[] r3;
        android.graphics.Bitmap[] $r4;
        int[][] $r5, $r7;
        int[] $r6, $r8;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.graphics.Bitmap;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        i2 = r0.<com.zoffcc.applications.aagtl.Rose: int map_tiles_cache_oldest_counter>;
        i3 = i2;
        i4 = i2 + 1;
        r3[0] = 1;
        if i4 <= 44 goto label1;

        i4 = 0;
        r3[1] = 1;

     label1:
        r0.<com.zoffcc.applications.aagtl.Rose: int map_tiles_cache_oldest_counter> = i4;
        $r4 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_cache>;
        $r4[i3] = r1;
        $r5 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_caches_values>;
        $r6 = $r5[i3];
        $r6[0] = i0;
        $r7 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_caches_values>;
        $r8 = $r7[i3];
        $r8[1] = i1;
        r3[2] = 1;
        return;
    }

    public synchronized void add_to_map_tile_parent_cache(android.graphics.Bitmap, int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.graphics.Bitmap r1;
        int i0, i1, i2, i3, i4;
        boolean[][] $r2;
        boolean[] r3;
        android.graphics.Bitmap[] $r4;
        int[][] $r5, $r7;
        int[] $r6, $r8;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.graphics.Bitmap;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        i2 = r0.<com.zoffcc.applications.aagtl.Rose: int map_tiles_parent_cache_oldest_counter>;
        i3 = i2;
        i4 = i2 + 1;
        r3[0] = 1;
        if i4 <= 59 goto label1;

        i4 = 0;
        r3[1] = 1;

     label1:
        r0.<com.zoffcc.applications.aagtl.Rose: int map_tiles_parent_cache_oldest_counter> = i4;
        $r4 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_parent_cache>;
        $r4[i3] = r1;
        $r5 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_parent_caches_values>;
        $r6 = $r5[i3];
        $r6[0] = i0;
        $r7 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_parent_caches_values>;
        $r8 = $r7[i3];
        $r8[1] = i1;
        r3[2] = 1;
        return;
    }

    public android.graphics.Bitmap get_tile_from_map_tile_parent_cache(int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        int i0, i1, i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        android.graphics.Bitmap r3;
        int[][] $r4, $r6;
        int[] $r5, $r7;
        android.graphics.Bitmap[] $r8;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        r3 = null;
        i2 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i2 >= 60 goto label3;

        $r4 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_parent_caches_values>;
        $r5 = $r4[i2];
        $i3 = $r5[0];
        r2[2] = 1;
        if $i3 != i0 goto label2;

        $r6 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_parent_caches_values>;
        $r7 = $r6[i2];
        $i4 = $r7[1];
        r2[3] = 1;
        if $i4 != i1 goto label2;

        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_parent_cache>;
        r3 = $r8[i2];
        r2[4] = 1;
        goto label3;

     label2:
        i2 = i2 + 1;
        r2[5] = 1;
        goto label1;

     label3:
        r2[6] = 1;
        return r3;
    }

    public android.graphics.Bitmap get_tile_from_map_tile_cache(int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        int i0, i1, i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        android.graphics.Bitmap r3;
        int[][] $r4, $r6;
        int[] $r5, $r7;
        android.graphics.Bitmap[] $r8;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r3 = null;
        i2 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i2 >= 45 goto label3;

        $r4 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_caches_values>;
        $r5 = $r4[i2];
        $i3 = $r5[0];
        r2[2] = 1;
        if $i3 != i0 goto label2;

        $r6 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_caches_values>;
        $r7 = $r6[i2];
        $i4 = $r7[1];
        r2[3] = 1;
        if $i4 != i1 goto label2;

        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_cache>;
        r3 = $r8[i2];
        r2[4] = 1;
        goto label3;

     label2:
        i2 = i2 + 1;
        r2[5] = 1;
        goto label1;

     label3:
        r2[6] = 1;
        return r3;
    }

    public void notify_tile_loaded_new(java.lang.String)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        java.lang.String r1, $r11;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Boolean r4, $r14, $r24;
        int i0, i1, $i2, $i3, $i4;
        java.io.FileNotFoundException r5, $r23;
        int[][][] $r6, $r7, $r15;
        int[][] $r8, $r16;
        java.lang.String[][] $r9;
        java.lang.String[] $r10;
        boolean $z0, $z1, $z2;
        com.zoffcc.applications.aagtl.aagtl $r12, $r20;
        com.zoffcc.applications.aagtl.MapDownloader $r13, $r21;
        int[] $r17;
        android.graphics.Bitmap[][] $r18;
        android.graphics.Bitmap[] $r19;
        android.graphics.Bitmap $r22;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        i0 = 0;
        r3[0] = 1;

     label1:
        $r6 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i2 = lengthof $r6;
        r3[1] = 1;
        if i0 >= $i2 goto label8;

        i1 = 0;
        r3[2] = 1;

     label2:
        $r7 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r8 = $r7[i0];
        $i3 = lengthof $r8;
        r3[3] = 1;
        if i1 >= $i3 goto label7;

        $r9 = r0.<com.zoffcc.applications.aagtl.Rose: java.lang.String[][] map_tile_filename>;
        $r10 = $r9[i0];
        $r11 = $r10[i1];
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        r3[4] = 1;
        if $z0 == 0 goto label6;

        $r12 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        $r14 = virtualinvoke $r13.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.Boolean is_downloaded(java.lang.String)>(r1);
        $z1 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();
        r3[5] = 1;
        if $z1 == 0 goto label6;

     label3:
        $r15 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r16 = $r15[i0];
        $r17 = $r16[i1];
        $r17[2] = 1;
        $r18 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $r19 = $r18[i0];
        $r20 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r21 = $r20.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        $r22 = virtualinvoke $r21.<com.zoffcc.applications.aagtl.MapDownloader: android.graphics.Bitmap get_bitmap_from_local_url(java.lang.String)>(r1);
        $r19[i1] = $r22;
        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r3[6] = 1;

     label4:
        goto label6;

     label5:
        $r23 := @caughtexception;
        r5 = $r23;
        r3[7] = 1;

     label6:
        i1 = i1 + 1;
        r3[8] = 1;
        goto label2;

     label7:
        i0 = i0 + 1;
        r3[9] = 1;
        goto label1;

     label8:
        $z2 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();
        r3[10] = 1;
        if $z2 == 0 goto label10;

        $i4 = r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode>;
        r3[11] = 1;
        if $i4 == 1 goto label9;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void draw_me()>();
        r3[12] = 1;
        goto label10;

     label9:
        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.Rose: java.lang.Boolean redraw_notify> = $r24;
        r3[13] = 1;

     label10:
        r3[14] = 1;
        return;

        catch java.io.FileNotFoundException from label3 to label4 with label5;
    }

    public void clear_stuff()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1;
        android.graphics.Bitmap[] $r3, $r4, $r7, $r12;
        int[][] $r5, $r6, $r8, $r10, $r13, $r15;
        int[] $r9, $r11, $r14, $r16;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = newarray (android.graphics.Bitmap)[45];
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_cache> = $r3;
        $r4 = newarray (android.graphics.Bitmap)[60];
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_parent_cache> = $r4;
        $r5 = newmultiarray (int)[45][2];
        r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_caches_values> = $r5;
        $r6 = newmultiarray (int)[60][2];
        r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_parent_caches_values> = $r6;
        i0 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i0 >= 45 goto label2;

        $r7 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_cache>;
        $r7[i0] = null;
        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_caches_values>;
        $r9 = $r8[i0];
        $r9[0] = -1;
        $r10 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_caches_values>;
        $r11 = $r10[i0];
        $r11[1] = -1;
        i0 = i0 + 1;
        r2[2] = 1;
        goto label1;

     label2:
        i1 = 0;
        r2[3] = 1;

     label3:
        r2[4] = 1;
        if i1 >= 60 goto label4;

        $r12 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_parent_cache>;
        $r12[i1] = null;
        $r13 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_parent_caches_values>;
        $r14 = $r13[i1];
        $r14[0] = -1;
        $r15 = r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_parent_caches_values>;
        $r16 = $r15[i1];
        $r16[1] = -1;
        i1 = i1 + 1;
        r2[5] = 1;
        goto label3;

     label4:
        r2[6] = 1;
        return;
    }

    public void clear_stuff_2()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17, $i18;
        android.graphics.Bitmap[][] $r3, $r6, $r8, $r9, $r11;
        java.lang.String[][] $r4, $r22;
        int[][][] $r5, $r7, $r13, $r14, $r16, $r19;
        android.graphics.Bitmap[] $r10, $r12;
        int[][] $r15, $r17, $r20;
        int[] $r18, $r21;
        java.lang.String[] $r23;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $i3 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i4 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $r3 = newmultiarray (android.graphics.Bitmap)[$i3][$i4];
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen> = $r3;
        $i5 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i6 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $r4 = newmultiarray (java.lang.String)[$i5][$i6];
        r0.<com.zoffcc.applications.aagtl.Rose: java.lang.String[][] map_tile_filename> = $r4;
        $i7 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i8 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $r5 = newmultiarray (int)[$i7][$i8][3];
        r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen> = $r5;
        $i9 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i10 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $r6 = newmultiarray (android.graphics.Bitmap)[$i9][$i10];
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] copy_bitmaps> = $r6;
        $i11 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i12 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $r7 = newmultiarray (int)[$i11][$i12][3];
        r0.<com.zoffcc.applications.aagtl.Rose: int[][][] copy_tiles> = $r7;
        i0 = 0;
        r2[0] = 1;

     label1:
        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $i13 = lengthof $r8;
        r2[1] = 1;
        if i0 >= $i13 goto label4;

        i1 = 0;
        r2[2] = 1;

     label2:
        $r9 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $r10 = $r9[i0];
        $i14 = lengthof $r10;
        r2[3] = 1;
        if i1 >= $i14 goto label3;

        $r11 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $r12 = $r11[i0];
        $r12[i1] = null;
        i1 = i1 + 1;
        r2[4] = 1;
        goto label2;

     label3:
        i0 = i0 + 1;
        r2[5] = 1;
        goto label1;

     label4:
        i15 = 0;
        r2[6] = 1;

     label5:
        $r13 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $i16 = lengthof $r13;
        r2[7] = 1;
        if i15 >= $i16 goto label10;

        i17 = 0;
        r2[8] = 1;

     label6:
        $r14 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r15 = $r14[i15];
        $i18 = lengthof $r15;
        r2[9] = 1;
        if i17 >= $i18 goto label9;

        i2 = 0;
        r2[10] = 1;

     label7:
        r2[11] = 1;
        if i2 >= 2 goto label8;

        $r16 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r17 = $r16[i15];
        $r18 = $r17[i17];
        $r18[i2] = -1;
        i2 = i2 + 1;
        r2[12] = 1;
        goto label7;

     label8:
        $r19 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r20 = $r19[i15];
        $r21 = $r20[i17];
        $r21[2] = -1;
        $r22 = r0.<com.zoffcc.applications.aagtl.Rose: java.lang.String[][] map_tile_filename>;
        $r23 = $r22[i15];
        $r23[i17] = "";
        i17 = i17 + 1;
        r2[13] = 1;
        goto label6;

     label9:
        i15 = i15 + 1;
        r2[14] = 1;
        goto label5;

     label10:
        r2[15] = 1;
        return;
    }

    public void init_me()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.graphics.Paint $r3, $r4, $r5, $r6, $r7, $r8;
        android.graphics.Bitmap$Config $r9;
        android.graphics.Bitmap $r10, $r12;
        android.graphics.Canvas $r11;
        com.zoffcc.applications.aagtl.aagtl $r13, $r16, $r18;
        com.zoffcc.applications.aagtl.aagtl$settings $r14, $r17, $r19;
        com.zoffcc.applications.aagtl.Coordinate $r15, $r20;
        double $d0, $d1;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = new android.graphics.Paint;
        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(0);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint mainpaint> = $r3;
        $r4 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint mainpaint>;
        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(0);
        $r5 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint mainpaint>;
        virtualinvoke $r5.<android.graphics.Paint: void setDither(boolean)>(0);
        $r6 = new android.graphics.Paint;
        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(0);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint> = $r6;
        $r7 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint>;
        virtualinvoke $r7.<android.graphics.Paint: void setAntiAlias(boolean)>(0);
        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint>;
        virtualinvoke $r8.<android.graphics.Paint: void setDither(boolean)>(0);
        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r10 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(9, 9, $r9);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main> = $r10;
        $r11 = new android.graphics.Canvas;
        $r12 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        specialinvoke $r11.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r12);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Canvas image_main> = $r11;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void clear_stuff()>();
        i0 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getWidth()>();
        i1 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getHeight()>();
        $i2 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $i3 = i0 / $i2;
        $i4 = $i3 + 2;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x> = $i4;
        $i5 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $i6 = i1 / $i5;
        $i7 = $i6 + 2;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y> = $i7;
        $i8 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i9 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i10 = $i9 % 2;
        $i11 = $i10 - 1;
        $i12 = staticinvoke <java.lang.Math: int abs(int)>($i11);
        $i13 = $i8 + $i12;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x> = $i13;
        $i14 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $i15 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $i16 = $i15 % 2;
        $i17 = $i16 - 1;
        $i18 = staticinvoke <java.lang.Math: int abs(int)>($i17);
        $i19 = $i14 + $i18;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y> = $i19;
        $r13 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r14 = $r13.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $i20 = $r14.<com.zoffcc.applications.aagtl.aagtl$settings: int map_zoom>;
        r0.<com.zoffcc.applications.aagtl.Rose: int zoom> = $i20;
        $r15 = new com.zoffcc.applications.aagtl.Coordinate;
        $r16 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r17 = $r16.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d0 = $r17.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat>;
        $r18 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r19 = $r18.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d1 = $r19.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon>;
        specialinvoke $r15.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>($d0, $d1);
        r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.Coordinate center_coord> = $r15;
        $r20 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.Coordinate center_coord>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void set_center(com.zoffcc.applications.aagtl.Coordinate)>($r20);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void __calc_tiles_on_display()>();
        r2[0] = 1;
        return;
    }

    public void zoom_in()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $i0 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r2[0] = 1;
        if $i0 >= 19 goto label1;

        $i1 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $i2 = $i1 + 1;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void set_zoom(int)>($i2);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public void zoom_out()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $i0 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r2[0] = 1;
        if $i0 <= 1 goto label1;

        $i1 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $i2 = $i1 - 1;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void set_zoom(int)>($i2);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public void set_zoom(int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        int i0, i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.aagtl $r3, $r5, $r7, $r10, $r12, $r14;
        com.zoffcc.applications.aagtl.GeocachesView $r4, $r15;
        com.zoffcc.applications.aagtl.MapDownloader $r6;
        com.zoffcc.applications.aagtl.aagtl$settings $r8, $r11, $r13;
        com.zoffcc.applications.aagtl.Coordinate $r9;
        double $d0, $d1;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        i0 := @parameter0: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        i1 = i0;
        $r3 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r4 = $r3.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r4.<com.zoffcc.applications.aagtl.GeocachesView: void clear_stuff()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void clear_stuff()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void clear_stuff_2()>();
        $r5 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r6 = $r5.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        virtualinvoke $r6.<com.zoffcc.applications.aagtl.MapDownloader: void clear_stuff()>();
        r0.<com.zoffcc.applications.aagtl.Rose: int zoom> = i1;
        $r7 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $i2 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $r8.<com.zoffcc.applications.aagtl.aagtl$settings: int map_zoom> = $i2;
        $r9 = new com.zoffcc.applications.aagtl.Coordinate;
        $r10 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d0 = $r11.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat>;
        $r12 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d1 = $r13.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon>;
        specialinvoke $r9.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>($d0, $d1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void set_center(com.zoffcc.applications.aagtl.Coordinate)>($r9);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void __calc_tiles_on_display()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void draw_me()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        $r14 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r15 = $r14.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r15.<com.zoffcc.applications.aagtl.GeocachesView: void invalidate()>();
        r2[0] = 1;
        return;
    }

    public int[] __num2point(int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean[][] $r1;
        boolean[] r2;
        int[] r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        r3 = newarray (int)[2];
        $i2 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $i3 = i0 * $i2;
        $d0 = (double) $i3;
        $d1 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x>;
        $i4 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d2 = (double) $i4;
        $d3 = $d1 * $d2;
        $d4 = $d0 - $d3;
        $i5 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i6 = $i5 / 2;
        $d5 = (double) $i6;
        $d6 = $d4 + $d5;
        $i7 = (int) $d6;
        r3[0] = $i7;
        $i8 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $i9 = i1 * $i8;
        $d7 = (double) $i9;
        $d8 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y>;
        $i10 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d9 = (double) $i10;
        $d10 = $d8 * $d9;
        $d11 = $d7 - $d10;
        $i11 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $i12 = $i11 / 2;
        $d12 = (double) $i12;
        $d13 = $d11 + $d12;
        $i13 = (int) $d13;
        r3[1] = $i13;
        r2[0] = 1;
        return r3;
    }

    public synchronized void draw_me()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        int[] r3, $r11, $r14, r15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        android.graphics.RectF r4, $r27, $r33, r34;
        java.lang.Throwable r5, r6, $r41, $r43;
        int[][][] $r7, $r9, $r12;
        android.graphics.Bitmap[][] $r8, $r16, $r20;
        int[][] $r10, $r13;
        android.graphics.Bitmap[] $r17, $r21;
        android.graphics.Bitmap $r18, $r22;
        android.graphics.Canvas $r19, $r28, $r35, r37;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.graphics.Paint $r23, $r24, $r25, $r29, $r30, $r31, $r36;
        android.graphics.Paint$Style $r26, $r32;
        android.view.SurfaceHolder $r38, $r39, r40, $r42, $r44;
        java.lang.Boolean $r45;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        r3 = newarray (int)[2];
        i0 = 0;
        r2[0] = 1;

     label1:
        $i2 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        r2[1] = 1;
        if i0 >= $i2 goto label8;

        i1 = 0;
        r2[2] = 1;

     label2:
        $i3 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        r2[3] = 1;
        if i1 >= $i3 goto label7;

        $r7 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        r2[4] = 1;
        if $r7 != null goto label3;

        r2[5] = 1;
        return;

     label3:
        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        r2[6] = 1;
        if $r8 != null goto label4;

        r2[7] = 1;
        return;

     label4:
        $r9 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r10 = $r9[i0];
        $r11 = $r10[i1];
        $i4 = $r11[0];
        $r12 = r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen>;
        $r13 = $r12[i0];
        $r14 = $r13[i1];
        $i5 = $r14[1];
        r15 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int[] __num2point(int,int)>($i4, $i5);
        $r16 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $r17 = $r16[i0];
        $r18 = $r17[i1];
        r2[8] = 1;
        if $r18 == null goto label5;

        $r19 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Canvas image_main>;
        $r20 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen>;
        $r21 = $r20[i0];
        $r22 = $r21[i1];
        $i6 = r15[0];
        $i7 = $i6 + 100;
        $f0 = (float) $i7;
        $i8 = r15[1];
        $i9 = $i8 + 100;
        $f1 = (float) $i9;
        $r23 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint mainpaint>;
        virtualinvoke $r19.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r22, $f0, $f1, $r23);
        r2[9] = 1;
        goto label6;

     label5:
        $r24 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint>;
        virtualinvoke $r24.<android.graphics.Paint: void setColor(int)>(-16777216);
        $r25 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint>;
        $r26 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke $r25.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r26);
        $r27 = new android.graphics.RectF;
        $i10 = r15[0];
        $i11 = $i10 + 100;
        $f2 = (float) $i11;
        $i12 = r15[1];
        $i13 = $i12 + 100;
        $f3 = (float) $i13;
        $i14 = r15[0];
        $i15 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $i16 = $i14 + $i15;
        $i17 = $i16 + 100;
        $f4 = (float) $i17;
        $i18 = r15[1];
        $i19 = $i18 + 100;
        $i20 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $i21 = $i19 + $i20;
        $f5 = (float) $i21;
        specialinvoke $r27.<android.graphics.RectF: void <init>(float,float,float,float)>($f2, $f3, $f4, $f5);
        r4 = $r27;
        $r28 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Canvas image_main>;
        $r29 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint>;
        virtualinvoke $r28.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r4, $r29);
        $r30 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint>;
        virtualinvoke $r30.<android.graphics.Paint: void setColor(int)>(-65536);
        $r31 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint>;
        $r32 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r31.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r32);
        $r33 = new android.graphics.RectF;
        $i22 = r15[0];
        $i23 = $i22 + 100;
        $f6 = (float) $i23;
        $i24 = r15[1];
        $i25 = $i24 + 100;
        $f7 = (float) $i25;
        $i26 = r15[0];
        $i27 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $i28 = $i26 + $i27;
        $i29 = $i28 + 100;
        $f8 = (float) $i29;
        $i30 = r15[1];
        $i31 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $i32 = $i30 + $i31;
        $i33 = $i32 + 100;
        $f9 = (float) $i33;
        specialinvoke $r33.<android.graphics.RectF: void <init>(float,float,float,float)>($f6, $f7, $f8, $f9);
        r34 = $r33;
        $r35 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Canvas image_main>;
        $r36 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint>;
        virtualinvoke $r35.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r34, $r36);
        r2[10] = 1;

     label6:
        i1 = i1 + 1;
        r2[11] = 1;
        goto label2;

     label7:
        i0 = i0 + 1;
        r2[12] = 1;
        goto label1;

     label8:
        r37 = null;

     label9:
        $r38 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        r37 = interfaceinvoke $r38.<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);
        $r39 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        r40 = $r39;
        entermonitor $r39;

     label10:
        specialinvoke r0.<com.zoffcc.applications.aagtl.Rose: void doDraw(android.graphics.Canvas)>(r37);
        exitmonitor r40;
        r2[13] = 1;

     label11:
        goto label15;

     label12:
        $r41 := @caughtexception;

     label13:
        r5 = $r41;
        exitmonitor r40;

     label14:
        r2[14] = 1;
        throw r5;

     label15:
        r2[15] = 1;
        if r37 == null goto label20;

        $r42 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        interfaceinvoke $r42.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>(r37);
        r2[16] = 1;
        goto label20;

     label16:
        $r43 := @caughtexception;

     label17:
        r6 = $r43;

     label18:
        r2[17] = 1;
        if r37 == null goto label19;

        $r44 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        interfaceinvoke $r44.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>(r37);
        r2[18] = 1;

     label19:
        r2[19] = 1;
        throw r6;

     label20:
        $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.Rose: java.lang.Boolean redraw_notify> = $r45;
        r2[20] = 1;
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label9 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void setSurfaceSize(int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        android.view.SurfaceHolder r3, $r5;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $r5 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        r3 = $r5;
        entermonitor $r5;

     label1:
        exitmonitor r3;
        r2[0] = 1;

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

     label4:
        r4 = $r6;
        exitmonitor r3;

     label5:
        r2[1] = 1;
        throw r4;

     label6:
        r2[2] = 1;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int[] __coord2point(com.zoffcc.applications.aagtl.Coordinate)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        com.zoffcc.applications.aagtl.Coordinate r1;
        boolean[][] $r2;
        boolean[] r3;
        int[] r4;
        double[] r5, r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: com.zoffcc.applications.aagtl.Coordinate;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[22];
        r4 = newarray (int)[2];
        r5 = newarray (double)[2];
        r6 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: double[] deg2num(com.zoffcc.applications.aagtl.Coordinate)>(r1);
        $d0 = r6[0];
        $i0 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d1 = (double) $i0;
        $d2 = $d0 * $d1;
        $d3 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x>;
        $i1 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d4 = (double) $i1;
        $d5 = $d3 * $d4;
        $d6 = $d2 - $d5;
        $i2 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i3 = $i2 / 2;
        $d7 = (double) $i3;
        $d8 = $d6 + $d7;
        $i4 = (int) $d8;
        r4[0] = $i4;
        $d9 = r6[1];
        $i5 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d10 = (double) $i5;
        $d11 = $d9 * $d10;
        $d12 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y>;
        $i6 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d13 = (double) $i6;
        $d14 = $d12 * $d13;
        $d15 = $d11 - $d14;
        $i7 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $i8 = $i7 / 2;
        $d16 = (double) $i8;
        $d17 = $d15 + $d16;
        $i9 = (int) $d17;
        r4[1] = $i9;
        r3[0] = 1;
        return r4;
    }

    public com.zoffcc.applications.aagtl.GeocacheCoordinate check_for_cache(int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r3, r13;
        null_type n0;
        int[] r4, r14;
        java.lang.IndexOutOfBoundsException r5, $r16;
        com.zoffcc.applications.aagtl.aagtl $r6, $r9;
        com.zoffcc.applications.aagtl.GeocachesView $r7, $r10;
        java.util.List $r8, $r11;
        java.lang.Object $r12;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        r3 = null;
        n0 = null;
        i2 = 0;
        r2[0] = 1;

     label1:
        $r6 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r7 = $r6.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i3 = interfaceinvoke $r8.<java.util.List: int size()>();
        r2[1] = 1;
        if i2 >= $i3 goto label7;

        r4 = newarray (int)[2];

     label2:
        $r9 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r10 = $r9.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i2);
        r13 = (com.zoffcc.applications.aagtl.GeocacheCoordinate) $r12;
        r14 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int[] __coord2point(com.zoffcc.applications.aagtl.Coordinate)>(r13);
        $i4 = r14[0];
        $i5 = $i4 - i0;
        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i5);
        r2[2] = 1;
        if $i6 >= 35 goto label4;

        $i7 = r14[1];
        $i8 = $i7 - i1;
        $i9 = staticinvoke <java.lang.Math: int abs(int)>($i8);
        r2[3] = 1;
        if $i9 >= 35 goto label4;

        r3 = r13;
        r2[4] = 1;

     label3:
        return r3;

     label4:
        r2[5] = 1;
        goto label6;

     label5:
        $r16 := @caughtexception;
        r5 = $r16;
        r2[6] = 1;

     label6:
        i2 = i2 + 1;
        r2[7] = 1;
        goto label1;

     label7:
        r2[8] = 1;
        return r3;

        catch java.lang.IndexOutOfBoundsException from label2 to label3 with label5;
    }

    private void dumpEvent(android.view.MotionEvent)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.view.MotionEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4, $r6;
        java.lang.StringBuilder r5, $r7, $r8, $r11, $r15, $r17, $r19, $r21;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r9, $r25;
        float $f0, $f1;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[24];
        $r6 = newarray (java.lang.String)[10];
        $r6[0] = "DOWN";
        $r6[1] = "UP";
        $r6[2] = "MOVE";
        $r6[3] = "CANCEL";
        $r6[4] = "OUTSIDE";
        $r6[5] = "POINTER_DOWN";
        $r6[6] = "POINTER_UP";
        $r6[7] = "7?";
        $r6[8] = "8?";
        $r6[9] = "9?";
        r4 = $r6;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r5 = $r7;
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        i1 = i0 & 255;
        $r8 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("event ACTION_");
        $r9 = r4[i1];
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        r3[0] = 1;
        if i1 == 5 goto label1;

        r3[1] = 1;
        if i1 != 6 goto label2;

     label1:
        $r11 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(pid ");
        $i3 = i0 >> 8;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        r3[2] = 1;

     label2:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");
        i2 = 0;
        r3[3] = 1;

     label3:
        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();
        r3[4] = 1;
        if i2 >= $i4 goto label5;

        $r15 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");
        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        $r17 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(pid ");
        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i2);
        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
        $r19 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")=");
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i2);
        $i6 = (int) $f0;
        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        $r21 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i2);
        $i7 = (int) $f1;
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        $i8 = i2 + 1;
        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();
        r3[5] = 1;
        if $i8 >= $i9 goto label4;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        r3[6] = 1;

     label4:
        i2 = i2 + 1;
        r3[7] = 1;
        goto label3;

     label5:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r25 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("dump event", $r25);
        r3[8] = 1;
        return;
    }

    private float spacing(android.view.MotionEvent)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.view.MotionEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[25];
        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(0);
        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(1);
        f0 = $f2 - $f3;
        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(0);
        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(1);
        f1 = $f4 - $f5;
        $f6 = f0 * f0;
        $f7 = f1 * f1;
        $f8 = $f6 + $f7;
        $f9 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f8);
        r3[0] = 1;
        return $f9;
    }

    private float spacing(android.graphics.PointF, android.graphics.PointF)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.graphics.PointF r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.graphics.PointF;
        r2 := @parameter1: android.graphics.PointF;
        $r3 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r4 = $r3[26];
        $f2 = r1.<android.graphics.PointF: float x>;
        $f3 = r2.<android.graphics.PointF: float x>;
        f0 = $f2 - $f3;
        $f4 = r1.<android.graphics.PointF: float y>;
        $f5 = r2.<android.graphics.PointF: float y>;
        f1 = $f4 - $f5;
        $f6 = f0 * f0;
        $f7 = f1 * f1;
        $f8 = $f6 + $f7;
        $f9 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f8);
        r4[0] = 1;
        return $f9;
    }

    public android.graphics.PointF turn_point(android.graphics.PointF, double)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.graphics.PointF r1, r4, $r5;
        double d0, $d1, $d2, $d3, $d4;
        boolean[][] $r2;
        boolean[] r3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.graphics.PointF;
        d0 := @parameter1: double;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[27];
        $f4 = r1.<android.graphics.PointF: float x>;
        $i0 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getWidth()>();
        $i1 = $i0 / 2;
        $f5 = (float) $i1;
        f0 = $f4 - $f5;
        $f6 = r1.<android.graphics.PointF: float y>;
        $i2 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getHeight()>();
        $i3 = $i2 / 2;
        $f7 = (float) $i3;
        f1 = $f6 - $f7;
        f2 = 0.0F;
        f3 = 0.0F;
        $i4 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getWidth()>();
        $i5 = $i4 / 2;
        $f8 = (float) $i5;
        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);
        $f9 = (float) $d1;
        $f10 = staticinvoke <android.util.FloatMath: float cos(float)>($f9);
        $f11 = $f10 * f0;
        $f12 = $f8 + $f11;
        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);
        $f13 = (float) $d2;
        $f14 = staticinvoke <android.util.FloatMath: float sin(float)>($f13);
        $f15 = $f14 * f1;
        f16 = $f12 - $f15;
        $i6 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getHeight()>();
        $i7 = $i6 / 2;
        $f17 = (float) $i7;
        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);
        $f18 = (float) $d3;
        $f19 = staticinvoke <android.util.FloatMath: float sin(float)>($f18);
        $f20 = $f19 * f0;
        $f21 = $f17 + $f20;
        $d4 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);
        $f22 = (float) $d4;
        $f23 = staticinvoke <android.util.FloatMath: float cos(float)>($f22);
        $f24 = $f23 * f1;
        f25 = $f21 + $f24;
        $r5 = new android.graphics.PointF;
        specialinvoke $r5.<android.graphics.PointF: void <init>(float,float)>(f16, f25);
        r4 = $r5;
        r3[0] = 1;
        return r4;
    }

    private void midPoint(android.graphics.PointF, android.view.MotionEvent)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.graphics.PointF r1;
        android.view.MotionEvent r2;
        boolean[][] $r3;
        boolean[] r4;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.graphics.PointF;
        r2 := @parameter1: android.view.MotionEvent;
        $r3 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r4 = $r3[28];
        $f2 = virtualinvoke r2.<android.view.MotionEvent: float getX(int)>(0);
        $f3 = virtualinvoke r2.<android.view.MotionEvent: float getX(int)>(1);
        f0 = $f2 + $f3;
        $f4 = virtualinvoke r2.<android.view.MotionEvent: float getY(int)>(0);
        $f5 = virtualinvoke r2.<android.view.MotionEvent: float getY(int)>(1);
        f1 = $f4 + $f5;
        $f6 = f0 / 2.0F;
        $f7 = f1 / 2.0F;
        virtualinvoke r1.<android.graphics.PointF: void set(float,float)>($f6, $f7);
        r4[0] = 1;
        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.view.View r1;
        android.view.MotionEvent r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.view.View;
        r2 := @parameter1: android.view.MotionEvent;
        $r3 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r4 = $r3[29];
        $z0 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: boolean onTouch_aagtl(android.view.View,android.view.MotionEvent)>(r1, r2);
        r4[0] = 1;
        return $z0;
    }

    public boolean onTouch_aagtl(android.view.View, android.view.MotionEvent)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.view.View r1;
        android.view.MotionEvent r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5, $r53, $r76, $r81, $r83, $r118, $r123, $r125, $r146, $r151, $r153;
        null_type n0, n1, n2, n3;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r6;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, d30, d31, $d32, d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, d43, d44, $d45, d46, $d47, d48, $d49, $d50, $d51, $d52, $d53;
        com.zoffcc.applications.aagtl.Coordinate r7, r8, r141;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80;
        android.graphics.Canvas r9;
        android.view.SurfaceHolder r10, $r99, $r100, $r111, $r113;
        java.lang.Throwable r11, r12, $r110, $r112;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i18, $i19, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        android.graphics.PointF $r13, $r14, $r17, $r20, $r23, $r27, r30, $r31, r32, $r66, r69, $r70, r71, $r84, $r88, r91, $r92, $r94, r95, $r96, r97, r98, $r129, r132, $r133, $r135, r136, $r137, r139, r140, $r154, $r155, $r156, $r159, $r162, $r163;
        com.zoffcc.applications.aagtl.aagtl $r15, $r18, $r21, $r24, $r28, $r33, $r35, $r37, $r38, $r40, $r41, $r43, $r45, $r46, $r54, $r57, $r59, $r61, $r63, $r67, $r72, $r85, $r89, $r102, $r105, $r108, $r114, $r126, $r130, $r142, $r157, $r160, $r164;
        com.zoffcc.applications.aagtl.CrossHair $r16, $r19, $r22, $r29, $r39, $r42, $r68, $r90, $r106, $r131, $r158, $r161, $r165;
        com.zoffcc.applications.aagtl.aagtl$settings $r25, $r64, $r86, $r103, $r127;
        java.lang.Boolean $r26, $r36, $r62, $r65, $r87, $r104, $r128;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        byte $b3, $b15, $b16, $b17, $b20, $b22, $b33;
        android.graphics.RectF $r34, $r44;
        com.zoffcc.applications.aagtl.GeocachesView $r47, $r55, $r58, $r109;
        java.util.List $r48, $r56;
        java.io.PrintStream $r49;
        java.lang.StringBuilder $r50, $r51, $r52, $r73, $r77, $r78, $r82, $r115, $r119, $r120, $r124, $r143, $r147, $r148, $r152;
        com.zoffcc.applications.aagtl.GCacheView $r60;
        java.lang.Object[] $r74, $r79, $r116, $r121, $r144, $r149;
        java.lang.Double $r75, $r80, $r117, $r122, $r145, $r150;
        android.graphics.Bitmap $r101, $r107;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.view.View;
        r2 := @parameter1: android.view.MotionEvent;
        $r3 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r4 = $r3[30];
        r5 = "onTouch event";
        n0 = null;
        n1 = null;
        n2 = null;
        n3 = null;
        $i0 = virtualinvoke r2.<android.view.MotionEvent: int getAction()>();
        $i1 = $i0 & 255;
        r4[0] = 1;
        tableswitch($i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label18;
            case 3: goto label41;
            case 4: goto label41;
            case 5: goto label40;
            case 6: goto label2;
            default: goto label41;
        };

     label1:
        $r13 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $f1 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f2 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r13.<android.graphics.PointF: void set(float,float)>($f1, $f2);
        $r14 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        $f3 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f4 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r14.<android.graphics.PointF: void set(float,float)>($f3, $f4);
        $r15 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r16 = $r15.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d2 = virtualinvoke $r16.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_start> = $d2;
        $r17 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_prev>;
        $f5 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f6 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r17.<android.graphics.PointF: void set(float,float)>($f5, $f6);
        $r18 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r19 = $r18.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d3 = virtualinvoke $r19.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_prev> = $d3;
        $r20 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_last_load_tiles>;
        $f7 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f8 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r20.<android.graphics.PointF: void set(float,float)>($f7, $f8);
        $r21 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r22 = $r21.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d4 = virtualinvoke $r22.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_last_load_tiles> = $d4;
        $d5 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x>;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x_before_move> = $d5;
        $d6 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y>;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y_before_move> = $d6;
        r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode> = 1;
        r4[1] = 1;
        goto label41;

     label2:
        $r23 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $f9 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f10 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r23.<android.graphics.PointF: void set(float,float)>($f9, $f10);
        $r24 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r25 = $r24.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r26 = $r25.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z0 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();
        r4[2] = 1;
        if $z0 == 0 goto label3;

        $r27 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $r28 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r29 = $r28.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d7 = virtualinvoke $r29.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r30 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r27, $d7);
        $r31 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        $d8 = r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_start>;
        r32 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r31, $d8);
        r4[3] = 1;
        goto label4;

     label3:
        r30 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        r32 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        r4[4] = 1;

     label4:
        $i2 = r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode>;
        r4[5] = 1;
        if $i2 != 1 goto label10;

        $f11 = specialinvoke r0.<com.zoffcc.applications.aagtl.Rose: float spacing(android.graphics.PointF,android.graphics.PointF)>(r32, r30);
        $b3 = $f11 cmpg 8.0F;
        r4[6] = 1;
        if $b3 >= 0 goto label10;

        r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode> = 3;
        $r33 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r34 = $r33.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF follow_button_rect>;
        $f12 = r32.<android.graphics.PointF: float x>;
        $f13 = r32.<android.graphics.PointF: float y>;
        $z1 = virtualinvoke $r34.<android.graphics.RectF: boolean contains(float,float)>($f12, $f13);
        r4[7] = 1;
        if $z1 == 0 goto label6;

        $r35 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r36 = $r35.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean follow_mode>;
        $z2 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>();
        r4[8] = 1;
        if $z2 == 0 goto label5;

        $r37 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        virtualinvoke $r37.<com.zoffcc.applications.aagtl.aagtl: void turn_off_follow_mode()>();
        $r38 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r39 = $r38.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r39.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        r4[9] = 1;
        goto label8;

     label5:
        $r40 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        virtualinvoke $r40.<com.zoffcc.applications.aagtl.aagtl: void turn_on_follow_mode()>();
        $r41 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r42 = $r41.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r42.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        r4[10] = 1;
        goto label8;

     label6:
        $r43 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r44 = $r43.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF arrow_button_rect>;
        $f14 = r32.<android.graphics.PointF: float x>;
        $f15 = r32.<android.graphics.PointF: float y>;
        $z3 = virtualinvoke $r44.<android.graphics.RectF: boolean contains(float,float)>($f14, $f15);
        r4[11] = 1;
        if $z3 == 0 goto label7;

        $r45 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        virtualinvoke $r45.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(3);
        r4[12] = 1;
        return 1;

     label7:
        $r46 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r47 = $r46.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        $r48 = $r47.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        r4[13] = 1;
        if $r48 == null goto label8;

        $i4 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $i5 = <com.zoffcc.applications.aagtl.aagtl: int TOUCH_CACHES_AFTER_THIS_ZOOM_LEVEL>;
        r4[14] = 1;
        if $i4 < $i5 goto label8;

        $r49 = <java.lang.System: java.io.PrintStream out>;
        $r50 = new java.lang.StringBuilder;
        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XXXXXXXX zoom=");
        $i6 = r0.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r53);
        $r54 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r55 = $r54.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        $r56 = $r55.<com.zoffcc.applications.aagtl.GeocachesView: java.util.List caches_loaded>;
        $i7 = interfaceinvoke $r56.<java.util.List: int size()>();
        $r57 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r58 = $r57.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        $i8 = $r58.<com.zoffcc.applications.aagtl.GeocachesView: int MAX_DRAW_POINTS>;
        r4[15] = 1;
        if $i7 > $i8 goto label8;

        $f16 = r32.<android.graphics.PointF: float x>;
        $i9 = (int) $f16;
        $f17 = r32.<android.graphics.PointF: float y>;
        $i10 = (int) $f17;
        r6 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate check_for_cache(int,int)>($i9, $i10);
        r4[16] = 1;
        if r6 == null goto label8;

        $r59 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r60 = $r59.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r60.<com.zoffcc.applications.aagtl.GCacheView: void set_cache(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r6);
        $r61 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        virtualinvoke $r61.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(2);
        r4[17] = 1;
        return 1;

     label8:
        $r62 = r0.<com.zoffcc.applications.aagtl.Rose: java.lang.Boolean redraw_notify>;
        $z4 = virtualinvoke $r62.<java.lang.Boolean: boolean booleanValue()>();
        r4[18] = 1;
        if $z4 == 0 goto label9;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void draw_me()>();
        r4[19] = 1;

     label9:
        r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode> = 0;
        r4[20] = 1;
        goto label41;

     label10:
        $i11 = r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode>;
        r4[21] = 1;
        if $i11 != 1 goto label13;

        $r63 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r64 = $r63.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r65 = $r64.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z5 = virtualinvoke $r65.<java.lang.Boolean: boolean booleanValue()>();
        r4[22] = 1;
        if $z5 == 0 goto label11;

        $r66 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $r67 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r68 = $r67.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d9 = virtualinvoke $r68.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r69 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r66, $d9);
        $r70 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        $d10 = r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_start>;
        r71 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r70, $d10);
        r4[23] = 1;
        goto label12;

     label11:
        r69 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        r71 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        r4[24] = 1;

     label12:
        $d11 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x_before_move>;
        $f18 = r69.<android.graphics.PointF: float x>;
        $f19 = r71.<android.graphics.PointF: float x>;
        $f20 = $f18 - $f19;
        $i12 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $f21 = (float) $i12;
        $f22 = $f20 / $f21;
        $d12 = (double) $f22;
        d13 = $d11 - $d12;
        $d14 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y_before_move>;
        $f23 = r69.<android.graphics.PointF: float y>;
        $f24 = r71.<android.graphics.PointF: float y>;
        $f25 = $f23 - $f24;
        $i13 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $f26 = (float) $i13;
        $f27 = $f25 / $f26;
        $d15 = (double) $f27;
        d0 = $d14 - $d15;
        r7 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.Coordinate num2deg(double,double)>(d13, d0);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void set_center(com.zoffcc.applications.aagtl.Coordinate)>(r7);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void __calc_tiles_on_display()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void draw_me()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        $r72 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r73 = new java.lang.StringBuilder;
        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();
        $r74 = newarray (java.lang.Object)[1];
        $d16 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $r75 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d16);
        $r74[0] = $r75;
        $r76 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("lat %.5f", $r74);
        $r77 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r79 = newarray (java.lang.Object)[1];
        $d17 = r7.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $r80 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d17);
        $r79[0] = $r80;
        $r81 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("lon %.5f", $r79);
        $r82 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r72.<com.zoffcc.applications.aagtl.aagtl: void change_status_text(java.lang.String)>($r83);
        r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode> = 0;
        r4[25] = 1;
        goto label41;

     label13:
        $i14 = r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode>;
        r4[26] = 1;
        if $i14 != 2 goto label17;

        f28 = specialinvoke r0.<com.zoffcc.applications.aagtl.Rose: float spacing(android.view.MotionEvent)>(r2);
        f0 = 0.0F;
        $b15 = f28 cmpl 10.0F;
        r4[27] = 1;
        if $b15 <= 0 goto label14;

        $f29 = r0.<com.zoffcc.applications.aagtl.Rose: float oldDist>;
        f0 = f28 / $f29;
        r4[28] = 1;

     label14:
        $d18 = (double) f0;
        $b16 = $d18 cmpl 1.3;
        r4[29] = 1;
        if $b16 <= 0 goto label15;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void zoom_in()>();
        r4[30] = 1;
        goto label16;

     label15:
        $d19 = (double) f0;
        $b17 = $d19 cmpg 0.8;
        r4[31] = 1;
        if $b17 >= 0 goto label16;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void zoom_out()>();
        r4[32] = 1;

     label16:
        r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode> = 0;
        r4[33] = 1;
        goto label41;

     label17:
        r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode> = 0;
        r4[34] = 1;
        goto label41;

     label18:
        $i18 = r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode>;
        r4[35] = 1;
        if $i18 != 1 goto label39;

        $r84 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $f30 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f31 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r84.<android.graphics.PointF: void set(float,float)>($f30, $f31);
        $r85 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r86 = $r85.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r87 = $r86.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z6 = virtualinvoke $r87.<java.lang.Boolean: boolean booleanValue()>();
        r4[36] = 1;
        if $z6 == 0 goto label19;

        $r88 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $r89 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r90 = $r89.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d20 = virtualinvoke $r90.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r91 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r88, $d20);
        $r92 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        $d21 = r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_start>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r92, $d21);
        $r94 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_prev>;
        $d22 = r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_prev>;
        r95 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r94, $d22);
        $r96 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_last_load_tiles>;
        $d23 = r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_last_load_tiles>;
        r97 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r96, $d23);
        r4[37] = 1;
        goto label20;

     label19:
        r91 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        r98 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        r95 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_prev>;
        r97 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_last_load_tiles>;
        r4[38] = 1;

     label20:
        $f32 = r91.<android.graphics.PointF: float x>;
        $f33 = r97.<android.graphics.PointF: float x>;
        $f34 = $f32 - $f33;
        $f35 = staticinvoke <java.lang.Math: float abs(float)>($f34);
        $d24 = (double) $f35;
        $i19 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d25 = (double) $i19;
        $d26 = $d25 * 0.4;
        $b20 = $d24 cmpg $d26;
        r4[39] = 1;
        if $b20 >= 0 goto label35;

        $f36 = r91.<android.graphics.PointF: float y>;
        $f37 = r97.<android.graphics.PointF: float y>;
        $f38 = $f36 - $f37;
        $f39 = staticinvoke <java.lang.Math: float abs(float)>($f38);
        $d27 = (double) $f39;
        $i21 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d28 = (double) $i21;
        $d29 = $d28 * 0.4;
        $b22 = $d27 cmpg $d29;
        r4[40] = 1;
        if $b22 >= 0 goto label35;

        $f40 = r91.<android.graphics.PointF: float x>;
        $f41 = r95.<android.graphics.PointF: float x>;
        $f42 = $f40 - $f41;
        $i23 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $f43 = (float) $i23;
        $f44 = $f42 / $f43;
        d30 = (double) $f44;
        $f45 = r91.<android.graphics.PointF: float y>;
        $f46 = r95.<android.graphics.PointF: float y>;
        $f47 = $f45 - $f46;
        $i24 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $f48 = (float) $i24;
        $f49 = $f47 / $f48;
        d31 = (double) $f49;
        $d32 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x>;
        d33 = $d32 - d30;
        $d34 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y>;
        d1 = $d34 - d31;
        r8 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.Coordinate num2deg(double,double)>(d33, d1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void set_center(com.zoffcc.applications.aagtl.Coordinate)>(r8);
        r9 = null;

     label21:
        $r99 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        r9 = interfaceinvoke $r99.<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);
        $r100 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        r10 = $r100;
        entermonitor $r100;

     label22:
        r4[41] = 1;
        if r9 == null goto label24;

        $r101 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        r4[42] = 1;
        if $r101 == null goto label24;

        $r102 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r103 = $r102.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r104 = $r103.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z7 = virtualinvoke $r104.<java.lang.Boolean: boolean booleanValue()>();
        r4[43] = 1;
        if $z7 == 0 goto label23;

        $r105 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r106 = $r105.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d35 = virtualinvoke $r106.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        $d36 = neg $d35;
        $i25 = (int) $d36;
        $f50 = (float) $i25;
        $i26 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getWidth()>();
        $i27 = $i26 / 2;
        $f51 = (float) $i27;
        $i28 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getHeight()>();
        $i29 = $i28 / 2;
        $f52 = (float) $i29;
        virtualinvoke r9.<android.graphics.Canvas: void rotate(float,float,float)>($f50, $f51, $f52);
        r4[44] = 1;

     label23:
        $r107 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        $f53 = r91.<android.graphics.PointF: float x>;
        $f54 = r97.<android.graphics.PointF: float x>;
        $f55 = $f53 - $f54;
        $f56 = $f55 - 100.0F;
        $f57 = r91.<android.graphics.PointF: float y>;
        $f58 = r97.<android.graphics.PointF: float y>;
        $f59 = $f57 - $f58;
        $f60 = $f59 - 100.0F;
        virtualinvoke r9.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r107, $f56, $f60, null);
        $r108 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r109 = $r108.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r109.<com.zoffcc.applications.aagtl.GeocachesView: void invalidate()>();
        r4[45] = 1;

     label24:
        exitmonitor r10;
        r4[46] = 1;

     label25:
        goto label29;

     label26:
        $r110 := @caughtexception;

     label27:
        r11 = $r110;
        exitmonitor r10;

     label28:
        r4[47] = 1;
        throw r11;

     label29:
        r4[48] = 1;
        if r9 == null goto label34;

        $r111 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        interfaceinvoke $r111.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>(r9);
        r4[49] = 1;
        goto label34;

     label30:
        $r112 := @caughtexception;

     label31:
        r12 = $r112;

     label32:
        r4[50] = 1;
        if r9 == null goto label33;

        $r113 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        interfaceinvoke $r113.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>(r9);
        r4[51] = 1;

     label33:
        r4[52] = 1;
        throw r12;

     label34:
        $r114 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r115 = new java.lang.StringBuilder;
        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();
        $r116 = newarray (java.lang.Object)[1];
        $d37 = r8.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $r117 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d37);
        $r116[0] = $r117;
        $r118 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("lat %.5f", $r116);
        $r119 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);
        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r121 = newarray (java.lang.Object)[1];
        $d38 = r8.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $r122 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d38);
        $r121[0] = $r122;
        $r123 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("lon %.5f", $r121);
        $r124 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);
        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r114.<com.zoffcc.applications.aagtl.aagtl: void change_status_text(java.lang.String)>($r125);
        r4[53] = 1;
        goto label38;

     label35:
        $r126 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r127 = $r126.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r128 = $r127.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z8 = virtualinvoke $r128.<java.lang.Boolean: boolean booleanValue()>();
        r4[54] = 1;
        if $z8 == 0 goto label36;

        $r129 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $r130 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r131 = $r130.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d39 = virtualinvoke $r131.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r132 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r129, $d39);
        $r133 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        $d40 = r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_start>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r133, $d40);
        $r135 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_prev>;
        $d41 = r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_prev>;
        r136 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r135, $d41);
        $r137 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_last_load_tiles>;
        $d42 = r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_last_load_tiles>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF turn_point(android.graphics.PointF,double)>($r137, $d42);
        r4[55] = 1;
        goto label37;

     label36:
        r132 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        r139 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start>;
        r136 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_prev>;
        r140 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_last_load_tiles>;
        r4[56] = 1;

     label37:
        $f61 = r132.<android.graphics.PointF: float x>;
        $f62 = r136.<android.graphics.PointF: float x>;
        $f63 = $f61 - $f62;
        $i30 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $f64 = (float) $i30;
        $f65 = $f63 / $f64;
        d43 = (double) $f65;
        $f66 = r132.<android.graphics.PointF: float y>;
        $f67 = r136.<android.graphics.PointF: float y>;
        $f68 = $f66 - $f67;
        $i31 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $f69 = (float) $i31;
        $f70 = $f68 / $f69;
        d44 = (double) $f70;
        $d45 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x>;
        d46 = $d45 - d43;
        $d47 = r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y>;
        d48 = $d47 - d44;
        r141 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.Coordinate num2deg(double,double)>(d46, d48);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void set_center(com.zoffcc.applications.aagtl.Coordinate)>(r141);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void __calc_tiles_on_display()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void draw_me()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        $r142 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r143 = new java.lang.StringBuilder;
        specialinvoke $r143.<java.lang.StringBuilder: void <init>()>();
        $r144 = newarray (java.lang.Object)[1];
        $d49 = r141.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $r145 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d49);
        $r144[0] = $r145;
        $r146 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("lat %.5f", $r144);
        $r147 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);
        $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r149 = newarray (java.lang.Object)[1];
        $d50 = r141.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $r150 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d50);
        $r149[0] = $r150;
        $r151 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("lon %.5f", $r149);
        $r152 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r151);
        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r142.<com.zoffcc.applications.aagtl.aagtl: void change_status_text(java.lang.String)>($r153);
        $r154 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_last_load_tiles>;
        $r155 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $f71 = $r155.<android.graphics.PointF: float x>;
        $r156 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $f72 = $r156.<android.graphics.PointF: float y>;
        virtualinvoke $r154.<android.graphics.PointF: void set(float,float)>($f71, $f72);
        $r157 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r158 = $r157.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d51 = virtualinvoke $r158.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_last_load_tiles> = $d51;
        r4[57] = 1;

     label38:
        $r159 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_prev>;
        $f73 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f74 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r159.<android.graphics.PointF: void set(float,float)>($f73, $f74);
        $r160 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r161 = $r160.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d52 = virtualinvoke $r161.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_prev> = $d52;
        r4[58] = 1;
        goto label41;

     label39:
        $i32 = r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode>;
        r4[59] = 1;
        if $i32 != 2 goto label41;

        $r162 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now>;
        $f75 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f76 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r162.<android.graphics.PointF: void set(float,float)>($f75, $f76);
        $r163 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_prev>;
        $f77 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();
        $f78 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();
        virtualinvoke $r163.<android.graphics.PointF: void set(float,float)>($f77, $f78);
        $r164 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r165 = $r164.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d53 = virtualinvoke $r165.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_prev> = $d53;
        r4[60] = 1;
        goto label41;

     label40:
        $f79 = specialinvoke r0.<com.zoffcc.applications.aagtl.Rose: float spacing(android.view.MotionEvent)>(r2);
        r0.<com.zoffcc.applications.aagtl.Rose: float oldDist> = $f79;
        $f80 = r0.<com.zoffcc.applications.aagtl.Rose: float oldDist>;
        $b33 = $f80 cmpl 10.0F;
        r4[61] = 1;
        if $b33 <= 0 goto label41;

        r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode> = 2;
        r4[62] = 1;

     label41:
        r4[63] = 1;
        return 1;

        catch java.lang.Throwable from label22 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
        catch java.lang.Throwable from label21 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    public void load_caches_from_db()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List r3;
        java.lang.Exception r4, $r13;
        java.util.ArrayList $r5;
        com.zoffcc.applications.aagtl.aagtl $r6, $r8, $r10, $r14;
        com.zoffcc.applications.aagtl.PointProvider $r7;
        com.zoffcc.applications.aagtl.Coordinate[] $r9;
        com.zoffcc.applications.aagtl.aagtl$settings $r11;
        java.lang.Boolean $r12;
        com.zoffcc.applications.aagtl.GeocachesView $r15;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[31];
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r3 = $r5;

     label1:
        $r6 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r7 = $r6.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r9 = virtualinvoke $r8.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Coordinate[] get_visible_area_large()>();
        $r10 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r12 = $r11.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_hide_found>;
        r3 = virtualinvoke $r7.<com.zoffcc.applications.aagtl.PointProvider: java.util.List get_points_filter(com.zoffcc.applications.aagtl.Coordinate[],java.lang.Boolean,int)>($r9, $r12, 50);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;
        r4 = $r13;
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        $r14 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r15 = $r14.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r15.<com.zoffcc.applications.aagtl.GeocachesView: void set_loaded_caches(java.util.List)>(r3);
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void draw_view()
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean[][] $r1;
        boolean[] r2;
        android.graphics.Canvas r3;
        android.view.SurfaceHolder r4, $r7, $r8, $r11, $r13;
        java.lang.Throwable r5, r6, $r10, $r12;
        android.graphics.Bitmap $r9;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        r3 = null;

     label1:
        $r7 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        r3 = interfaceinvoke $r7.<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);
        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        r4 = $r8;
        entermonitor $r8;

     label2:
        r2[0] = 1;
        if r3 == null goto label3;

        $r9 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        r2[1] = 1;
        if $r9 == null goto label3;

        specialinvoke r0.<com.zoffcc.applications.aagtl.Rose: void doDraw(android.graphics.Canvas)>(r3);
        r2[2] = 1;

     label3:
        exitmonitor r4;
        r2[3] = 1;

     label4:
        goto label8;

     label5:
        $r10 := @caughtexception;

     label6:
        r5 = $r10;
        exitmonitor r4;

     label7:
        r2[4] = 1;
        throw r5;

     label8:
        r2[5] = 1;
        if r3 == null goto label13;

        $r11 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        interfaceinvoke $r11.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>(r3);
        r2[6] = 1;
        goto label13;

     label9:
        $r12 := @caughtexception;

     label10:
        r6 = $r12;

     label11:
        r2[7] = 1;
        if r3 == null goto label12;

        $r13 = r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder>;
        interfaceinvoke $r13.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>(r3);
        r2[8] = 1;

     label12:
        r2[9] = 1;
        throw r6;

     label13:
        r2[10] = 1;
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label1 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    private void doDraw(android.graphics.Canvas)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.graphics.Canvas r1;
        boolean[][] $r2;
        boolean[] r3;
        android.graphics.Bitmap $r4, $r10;
        com.zoffcc.applications.aagtl.aagtl $r5, $r8;
        com.zoffcc.applications.aagtl.aagtl$settings $r6;
        java.lang.Boolean $r7;
        boolean $z0;
        com.zoffcc.applications.aagtl.CrossHair $r9;
        double $d0, $d1;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.graphics.Canvas;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[33];
        r3[0] = 1;
        if r1 == null goto label2;

        $r4 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        r3[1] = 1;
        if $r4 == null goto label2;

        $r5 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r6 = $r5.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r7 = $r6.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();
        r3[2] = 1;
        if $z0 == 0 goto label1;

        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r9 = $r8.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $d0 = virtualinvoke $r9.<com.zoffcc.applications.aagtl.CrossHair: double get_gps_heading()>();
        $d1 = neg $d0;
        $i0 = (int) $d1;
        $f0 = (float) $i0;
        $i1 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getWidth()>();
        $i2 = $i1 / 2;
        $f1 = (float) $i2;
        $i3 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getHeight()>();
        $i4 = $i3 / 2;
        $f2 = (float) $i4;
        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f0, $f1, $f2);
        r3[3] = 1;

     label1:
        $r10 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r10, -100.0F, -100.0F, null);
        r3[4] = 1;

     label2:
        r3[5] = 1;
        return;
    }

    public void <init>(android.content.Context, com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.content.Context r1;
        com.zoffcc.applications.aagtl.aagtl r2;
        boolean[][] $r3;
        boolean[] r4;
        android.view.SurfaceHolder r5;
        android.graphics.PointF $r6, $r7, $r8, $r9;
        java.lang.Boolean $r10;
        android.graphics.Bitmap[][] $r11, $r14;
        java.lang.String[][] $r12;
        int[][][] $r13, $r15;
        int[][] $r16, $r17;
        java.util.ArrayList $r18, $r19;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: com.zoffcc.applications.aagtl.aagtl;
        $r3 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r4 = $r3[34];
        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context)>(r1);
        r0.<com.zoffcc.applications.aagtl.Rose: int newx> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int newy> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int deltax> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int deltay> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int prev_x> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int prev_y> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int direction> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: boolean start_move> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int touch_mode> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: float oldDist> = 0.0F;
        $r6 = new android.graphics.PointF;
        specialinvoke $r6.<android.graphics.PointF: void <init>(float,float)>(0.0F, 0.0F);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_now> = $r6;
        $r7 = new android.graphics.PointF;
        specialinvoke $r7.<android.graphics.PointF: void <init>(float,float)>(0.0F, 0.0F);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_start> = $r7;
        $r8 = new android.graphics.PointF;
        specialinvoke $r8.<android.graphics.PointF: void <init>(float,float)>(0.0F, 0.0F);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_prev> = $r8;
        $r9 = new android.graphics.PointF;
        specialinvoke $r9.<android.graphics.PointF: void <init>(float,float)>(0.0F, 0.0F);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.PointF touch_last_load_tiles> = $r9;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x_before_move> = 0.0;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y_before_move> = 0.0;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_prev> = 0.0;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_start> = 0.0;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_heading_last_load_tiles> = 0.0;
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.Rose: java.lang.Boolean redraw_notify> = $r10;
        r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x> = 256;
        r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y> = 256;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_center_x> = 0.0;
        r0.<com.zoffcc.applications.aagtl.Rose: double map_center_y> = 0.0;
        r0.<com.zoffcc.applications.aagtl.Rose: int zoom> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.Coordinate center_coord> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight> = 1;
        r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth> = 1;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Canvas image_main> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint mainpaint> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Paint rectpaint> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap1> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap2> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap3> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap4> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap5> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap6> = null;
        $r11 = (android.graphics.Bitmap[][]) null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] map_tiles_onscreen> = $r11;
        $r12 = (java.lang.String[][]) null;
        r0.<com.zoffcc.applications.aagtl.Rose: java.lang.String[][] map_tile_filename> = $r12;
        $r13 = (int[][][]) null;
        r0.<com.zoffcc.applications.aagtl.Rose: int[][][] map_tile_num_onscreen> = $r13;
        $r14 = (android.graphics.Bitmap[][]) null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[][] copy_bitmaps> = $r14;
        $r15 = (int[][][]) null;
        r0.<com.zoffcc.applications.aagtl.Rose: int[][][] copy_tiles> = $r15;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_cache> = null;
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap[] map_tiles_parent_cache> = null;
        $r16 = (int[][]) null;
        r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_caches_values> = $r16;
        $r17 = (int[][]) null;
        r0.<com.zoffcc.applications.aagtl.Rose: int[][] map_tiles_parent_caches_values> = $r17;
        r0.<com.zoffcc.applications.aagtl.Rose: int map_tiles_cache_oldest_counter> = 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int map_tiles_parent_cache_oldest_counter> = 0;
        $r18 = new java.util.ArrayList;
        specialinvoke $r18.<java.util.ArrayList: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.Rose: java.util.List yit> = $r18;
        $r19 = new java.util.ArrayList;
        specialinvoke $r19.<java.util.ArrayList: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.Rose: java.util.List xit> = $r19;
        r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder getHolder()>();
        r0.<com.zoffcc.applications.aagtl.Rose: android.view.SurfaceHolder mSurfaceHolder> = r5;
        r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object> = r2;
        interfaceinvoke r5.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void init_me()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void setFocusable(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);
        r4[0] = 1;
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        z0 := @parameter0: boolean;
        $r1 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r2 = $r1[35];
        r2[0] = 1;
        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, i50, $i51, $i52;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.aagtl $r4, $r6, $r8, $r10, $r12, $r14, $r26;
        android.graphics.RectF $r5, $r11;
        android.graphics.Bitmap $r7, $r9, $r13, $r15, $r16, $r17, $r19, $r21;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Bitmap$Config $r18;
        android.graphics.Canvas $r20;
        java.util.List $r22, $r24;
        java.lang.Integer $r23, $r25;
        com.zoffcc.applications.aagtl.GeocachesView $r27;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.view.SurfaceHolder;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[36];
        r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth> = i1;
        r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight> = i2;
        $r4 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r5 = new android.graphics.RectF;
        $i4 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $r6 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r7 = $r6.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_current>;
        $i5 = virtualinvoke $r7.<android.graphics.Bitmap: int getHeight()>();
        $i6 = $i4 - $i5;
        $i7 = $i6 - 10;
        $f0 = (float) $i7;
        $r8 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r9 = $r8.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_current>;
        $i8 = virtualinvoke $r9.<android.graphics.Bitmap: int getWidth()>();
        $i9 = 10 + $i8;
        $f1 = (float) $i9;
        $i10 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $i11 = $i10 - 10;
        $f2 = (float) $i11;
        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>(10.0F, $f0, $f1, $f2);
        $r4.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF follow_button_rect> = $r5;
        $r10 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r11 = new android.graphics.RectF;
        $i12 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i13 = $i12 - 10;
        $r12 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap arrow_button>;
        $i14 = virtualinvoke $r13.<android.graphics.Bitmap: int getWidth()>();
        $i15 = $i13 - $i14;
        $f3 = (float) $i15;
        $i16 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $r14 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r15 = $r14.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap arrow_button>;
        $i17 = virtualinvoke $r15.<android.graphics.Bitmap: int getHeight()>();
        $i18 = $i16 - $i17;
        $i19 = $i18 - 10;
        $f4 = (float) $i19;
        $i20 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i21 = $i20 - 10;
        $f5 = (float) $i21;
        $i22 = r0.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $i23 = $i22 - 10;
        $f6 = (float) $i23;
        specialinvoke $r11.<android.graphics.RectF: void <init>(float,float,float,float)>($f3, $f4, $f5, $f6);
        $r10.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF arrow_button_rect> = $r11;
        $r16 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        r3[0] = 1;
        if $r16 == null goto label1;

        $r17 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        virtualinvoke $r17.<android.graphics.Bitmap: void recycle()>();
        r3[1] = 1;

     label1:
        $i24 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getWidth()>();
        $i25 = $i24 + 200;
        $i26 = virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: int getHeight()>();
        $i27 = $i26 + 200;
        $r18 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r19 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i25, $i27, $r18);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main> = $r19;
        $r20 = new android.graphics.Canvas;
        $r21 = r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Bitmap bitmap_main>;
        specialinvoke $r20.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r21);
        r0.<com.zoffcc.applications.aagtl.Rose: android.graphics.Canvas image_main> = $r20;
        $i28 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $i29 = i1 / $i28;
        $i30 = $i29 + 2;
        $i31 = $i30 + 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x> = $i31;
        $i32 = r0.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $i33 = i2 / $i32;
        $i34 = $i33 + 2;
        $i35 = $i34 + 0;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y> = $i35;
        $i36 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i37 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i38 = $i37 % 2;
        $i39 = $i38 - 1;
        $i40 = staticinvoke <java.lang.Math: int abs(int)>($i39);
        $i41 = $i36 + $i40;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x> = $i41;
        $i42 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $i43 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $i44 = $i43 % 2;
        $i45 = $i44 - 1;
        $i46 = staticinvoke <java.lang.Math: int abs(int)>($i45);
        $i47 = $i42 + $i46;
        r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y> = $i47;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void clear_stuff_2()>();
        i3 = 1;
        r3[2] = 1;

     label2:
        $i48 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_x>;
        $i49 = $i48 + 1;
        r3[3] = 1;
        if i3 >= $i49 goto label3;

        $r22 = r0.<com.zoffcc.applications.aagtl.Rose: java.util.List xit>;
        $r23 = new java.lang.Integer;
        specialinvoke $r23.<java.lang.Integer: void <init>(int)>(i3);
        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r23);
        i3 = i3 + 1;
        r3[4] = 1;
        goto label2;

     label3:
        i50 = 1;
        r3[5] = 1;

     label4:
        $i51 = r0.<com.zoffcc.applications.aagtl.Rose: int num_tiles_y>;
        $i52 = $i51 + 1;
        r3[6] = 1;
        if i50 >= $i52 goto label5;

        $r24 = r0.<com.zoffcc.applications.aagtl.Rose: java.util.List yit>;
        $r25 = new java.lang.Integer;
        specialinvoke $r25.<java.lang.Integer: void <init>(int)>(i50);
        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r25);
        i50 = i50 + 1;
        r3[7] = 1;
        goto label4;

     label5:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void __calc_tiles_on_display()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void draw_me()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        $r26 = r0.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r27 = $r26.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r27.<com.zoffcc.applications.aagtl.GeocachesView: void invalidate()>();
        r3[8] = 1;
        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.view.SurfaceHolder r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.view.SurfaceHolder;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[37];
        r3[0] = 1;
        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        com.zoffcc.applications.aagtl.Rose r0;
        android.view.SurfaceHolder r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.Rose;
        r1 := @parameter0: android.view.SurfaceHolder;
        $r2 = <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();

     label0:
        r3 = $r2[38];
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRi()>();
        r1 = $r0[39];
        <com.zoffcc.applications.aagtl.Rose: boolean use_parent_tiles> = 1;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;

        $r0 = newmultiarray (boolean)[40][];
        <com.zoffcc.applications.aagtl.Rose: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[30];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[69];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[3];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[7];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[7];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[15];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[7];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[16];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[3];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[3];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[21];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[3];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[9];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[9];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[64];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[3];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[11];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[6];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[1];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[1];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[9];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[1];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[38] = $r39;
        $r40 = newarray (boolean)[1];
        $r0[39] = $r40;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/Rose", -5316393663328469034L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.StringEnc extends java.lang.Object
{
    javax.crypto.Cipher ecipher;
    javax.crypto.Cipher dcipher;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(javax.crypto.SecretKey, java.lang.String)
    {
        com.zoffcc.applications.aagtl.StringEnc r0;
        javax.crypto.SecretKey r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        javax.crypto.NoSuchPaddingException r5, $r10;
        javax.crypto.Cipher $r6, $r7, $r8, $r9;
        java.io.PrintStream $r11, $r14, $r17;
        java.security.NoSuchAlgorithmException $r12, r13;
        java.security.InvalidKeyException $r15, r16;

        r0 := @this: com.zoffcc.applications.aagtl.StringEnc;
        r1 := @parameter0: javax.crypto.SecretKey;
        r2 := @parameter1: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r2);
        r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher ecipher> = $r6;
        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r2);
        r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher dcipher> = $r7;
        $r8 = r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher ecipher>;
        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, r1);
        $r9 = r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher dcipher>;
        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, r1);
        r4[0] = 1;

     label2:
        goto label6;

     label3:
        $r10 := @caughtexception;
        r5 = $r10;
        $r11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("EXCEPTION: NoSuchPaddingException");
        r4[1] = 1;
        goto label6;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("EXCEPTION: NoSuchAlgorithmException");
        r4[2] = 1;
        goto label6;

     label5:
        $r15 := @caughtexception;
        r16 = $r15;
        $r17 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("EXCEPTION: InvalidKeyException");
        r4[3] = 1;

     label6:
        r4[4] = 1;
        return;

        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch java.security.InvalidKeyException from label1 to label2 with label5;
    }

    void <init>(java.lang.String)
    {
        com.zoffcc.applications.aagtl.StringEnc r0;
        java.lang.String r1, $r12, $r14;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4, $r8;
        byte b0;
        javax.crypto.spec.PBEKeySpec r5, $r9;
        javax.crypto.SecretKey r6;
        javax.crypto.spec.PBEParameterSpec r7, $r16;
        char[] $r10;
        javax.crypto.SecretKeyFactory $r11;
        javax.crypto.Cipher $r13, $r15, $r17, $r18;
        java.security.InvalidAlgorithmParameterException $r19, r20;
        java.io.PrintStream $r21, $r24, $r27, $r30, $r33;
        java.security.spec.InvalidKeySpecException $r22, r23;
        javax.crypto.NoSuchPaddingException $r25, r26;
        java.security.NoSuchAlgorithmException $r28, r29;
        java.security.InvalidKeyException $r31, r32;

        r0 := @this: com.zoffcc.applications.aagtl.StringEnc;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r8 = newarray (byte)[8];
        $r8[0] = -87;
        $r8[1] = -101;
        $r8[2] = -56;
        $r8[3] = 50;
        $r8[4] = 86;
        $r8[5] = 52;
        $r8[6] = -29;
        $r8[7] = 3;
        r4 = $r8;
        b0 = 19;

     label1:
        $r9 = new javax.crypto.spec.PBEKeySpec;
        $r10 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
        specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>($r10, r4, b0);
        r5 = $r9;
        $r11 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("PBEWithMD5AndDES");
        r6 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r5);
        $r12 = interfaceinvoke r6.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
        $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r12);
        r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher ecipher> = $r13;
        $r14 = interfaceinvoke r6.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();
        $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r14);
        r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher dcipher> = $r15;
        $r16 = new javax.crypto.spec.PBEParameterSpec;
        specialinvoke $r16.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r4, b0);
        r7 = $r16;
        $r17 = r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher ecipher>;
        virtualinvoke $r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, r6, r7);
        $r18 = r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher dcipher>;
        virtualinvoke $r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r6, r7);
        r3[0] = 1;

     label2:
        goto label8;

     label3:
        $r19 := @caughtexception;
        r20 = $r19;
        $r21 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("EXCEPTION: InvalidAlgorithmParameterException");
        r3[1] = 1;
        goto label8;

     label4:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("EXCEPTION: InvalidKeySpecException");
        r3[2] = 1;
        goto label8;

     label5:
        $r25 := @caughtexception;
        r26 = $r25;
        $r27 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("EXCEPTION: NoSuchPaddingException");
        r3[3] = 1;
        goto label8;

     label6:
        $r28 := @caughtexception;
        r29 = $r28;
        $r30 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("EXCEPTION: NoSuchAlgorithmException");
        r3[4] = 1;
        goto label8;

     label7:
        $r31 := @caughtexception;
        r32 = $r31;
        $r33 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("EXCEPTION: InvalidKeyException");
        r3[5] = 1;

     label8:
        r3[6] = 1;
        return;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label4;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
    }

    public java.lang.String encrypt(java.lang.String)
    {
        com.zoffcc.applications.aagtl.StringEnc r0;
        java.lang.String r1, $r7;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4, r5;
        javax.crypto.Cipher $r6;
        javax.crypto.BadPaddingException $r8, r9;
        javax.crypto.IllegalBlockSizeException $r10, r11;
        java.io.UnsupportedEncodingException $r12, r13;
        java.io.IOException $r14, r15;

        r0 := @this: com.zoffcc.applications.aagtl.StringEnc;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];

     label1:
        r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8");
        $r6 = r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher ecipher>;
        r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4);
        $r7 = staticinvoke <com.zoffcc.applications.aagtl.Base64: java.lang.String encodeBytes(byte[])>(r5);
        r3[0] = 1;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        r3[1] = 1;
        goto label7;

     label4:
        $r10 := @caughtexception;
        r11 = $r10;
        r3[2] = 1;
        goto label7;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        r3[3] = 1;
        goto label7;

     label6:
        $r14 := @caughtexception;
        r15 = $r14;
        r3[4] = 1;

     label7:
        r3[5] = 1;
        return null;

        catch javax.crypto.BadPaddingException from label1 to label2 with label3;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label4;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.IOException from label1 to label2 with label6;
    }

    public java.lang.String decrypt(java.lang.String)
    {
        com.zoffcc.applications.aagtl.StringEnc r0;
        java.lang.String r1, $r7;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4, r5;
        javax.crypto.Cipher $r6;
        javax.crypto.BadPaddingException $r8, r9;
        javax.crypto.IllegalBlockSizeException $r10, r11;
        java.io.UnsupportedEncodingException $r12, r13;
        java.io.IOException $r14, r15;

        r0 := @this: com.zoffcc.applications.aagtl.StringEnc;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];

     label1:
        r4 = staticinvoke <com.zoffcc.applications.aagtl.Base64: byte[] decode(java.lang.String)>(r1);
        $r6 = r0.<com.zoffcc.applications.aagtl.StringEnc: javax.crypto.Cipher dcipher>;
        r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4);
        $r7 = new java.lang.String;
        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.lang.String)>(r5, "UTF8");
        r3[0] = 1;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        r3[1] = 1;
        goto label7;

     label4:
        $r10 := @caughtexception;
        r11 = $r10;
        r3[2] = 1;
        goto label7;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        r3[3] = 1;
        goto label7;

     label6:
        $r14 := @caughtexception;
        r15 = $r14;
        r3[4] = 1;

     label7:
        r3[5] = 1;
        return null;

        catch javax.crypto.BadPaddingException from label1 to label2 with label3;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label4;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.IOException from label1 to label2 with label6;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <com.zoffcc.applications.aagtl.StringEnc: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[5];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/StringEnc", -1193026778112027321L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.StringUtils extends java.lang.Object
{
    public static final java.lang.String WHITE_SPACES;
    private static java.lang.String[][] htmlEscape;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        com.zoffcc.applications.aagtl.StringUtils r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.StringUtils;
        $r1 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static final java.lang.String unescapeHTML(java.lang.String, int)
    {
        java.lang.String r0, r3, $r7, $r10, $r14, $r16, r18, $r19;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[][] $r4, $r5, $r8, $r12;
        java.lang.String[] $r6, $r13;
        boolean $z0;
        java.lang.StringBuilder $r9, $r11, $r15, $r17;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("&", i0);
        i4 = i1 + 1;
        r2[0] = 1;
        if i1 <= -1 goto label4;

        i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(";", i1);
        r2[1] = 1;
        if i2 <= i1 goto label4;

        $i5 = i2 + 1;
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i5);
        i3 = 0;
        r2[2] = 1;

     label1:
        $r4 = <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[][] htmlEscape>;
        $i6 = lengthof $r4;
        r2[3] = 1;
        if i3 >= $i6 goto label3;

        $r5 = <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[][] htmlEscape>;
        $r6 = $r5[i3];
        $r7 = $r6[0];
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);
        r2[4] = 1;
        if $z0 == 0 goto label2;

        r2[5] = 1;
        goto label3;

     label2:
        i3 = i3 + 1;
        r2[6] = 1;
        goto label1;

     label3:
        $r8 = <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[][] htmlEscape>;
        $i7 = lengthof $r8;
        r2[7] = 1;
        if i3 >= $i7 goto label4;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[][] htmlEscape>;
        $r13 = $r12[i3];
        $r14 = $r13[1];
        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $i8 = i2 + 1;
        $r16 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i8);
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $r19 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String unescapeHTML(java.lang.String,int)>(r18, i1);
        r2[8] = 1;
        return $r19;

     label4:
        r2[9] = 1;
        return r0;
    }

    public static java.lang.String stripAndCollapse(java.lang.String)
    {
        java.lang.String r0, $r3, $r4;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String strip(java.lang.String)>(r0);
        $r4 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String collapseWhitespace(java.lang.String)>($r3);
        r2[0] = 1;
        return $r4;
    }

    public static java.lang.String strip(java.lang.String)
    {
        java.lang.String r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String megastrip(java.lang.String,boolean,boolean,java.lang.String)>(r0, 1, 1, " \r\n\t\u3000\u00a0\u2007\u202f");
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String megastrip(java.lang.String, boolean, boolean, java.lang.String)
    {
        java.lang.String r0, r1, $r4;
        boolean z0, z1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i2, $i4, $i6, $i7;
        char $c3, $c5;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        z1 := @parameter2: boolean;
        r1 := @parameter3: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r3[0] = 1;
        if r0 != null goto label1;

        r3[1] = 1;
        return null;

     label1:
        i0 = 0;
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = $i2 - 1;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        if z0 == 0 goto label3;

        r3[4] = 1;
        if i0 > i1 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        $i4 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($c3);
        r3[5] = 1;
        if $i4 < 0 goto label3;

        i0 = i0 + 1;
        r3[6] = 1;
        goto label2;

     label3:
        r3[7] = 1;
        if z1 == 0 goto label4;

        r3[8] = 1;
        if i1 < i0 goto label4;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);
        $i6 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($c5);
        r3[9] = 1;
        if $i6 < 0 goto label4;

        i1 = i1 + -1;
        r3[10] = 1;
        goto label3;

     label4:
        $i7 = i1 + 1;
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i7);
        r3[11] = 1;
        return $r4;
    }

    public static java.lang.String collapseWhitespace(java.lang.String)
    {
        java.lang.String r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.String;
        $r1 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String collapse(java.lang.String,java.lang.String,java.lang.String)>(r0, " \r\n\t\u3000\u00a0\u2007\u202f", " ");
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String collapse(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r9;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder r5, $r6;
        boolean z0;
        int i0, $i2, $i3;
        char c1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        $r3 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r4 = $r3[6];
        r4[0] = 1;
        if r0 != null goto label1;

        r4[1] = 1;
        return null;

     label1:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        r5 = $r6;
        z0 = 0;
        i0 = 0;
        r4[2] = 1;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        r4[3] = 1;
        if i0 >= $i2 goto label6;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(c1);
        r4[4] = 1;
        if $i3 == -1 goto label4;

        r4[5] = 1;
        if z0 == 0 goto label3;

        r4[6] = 1;
        goto label5;

     label3:
        z0 = 1;
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r4[7] = 1;
        goto label5;

     label4:
        z0 = 0;
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);
        r4[8] = 1;

     label5:
        i0 = i0 + 1;
        r4[9] = 1;
        goto label2;

     label6:
        $r9 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        r4[10] = 1;
        return $r9;
    }

    public static java.lang.String fixedWidth(java.lang.String, int)
    {
        java.lang.String r0, $r4;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] r3;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r3 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, "\n");
        $r4 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String fixedWidth(java.lang.String[],int)>(r3, i0);
        r2[0] = 1;
        return $r4;
    }

    public static java.lang.String[] splitAndTrim(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] $r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        $r4 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String,boolean)>(r0, r1, 1);
        r3[0] = 1;
        return $r4;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] $r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $r4 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);
        r3[0] = 1;
        return $r4;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, $r7, $r8, $r9;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        java.util.StringTokenizer r4, $r6;
        int i0, i1;
        java.lang.String[] r5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r2 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r6 = new java.util.StringTokenizer;
        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, r1);
        r4 = $r6;
        i0 = virtualinvoke r4.<java.util.StringTokenizer: int countTokens()>();
        r5 = newarray (java.lang.String)[i0];
        i1 = 0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i1 >= i0 goto label4;

        r3[2] = 1;
        if z0 == 0 goto label2;

        $r7 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();
        r5[i1] = $r8;
        r3[3] = 1;
        goto label3;

     label2:
        $r9 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r5[i1] = $r9;
        r3[4] = 1;

     label3:
        i1 = i1 + 1;
        r3[5] = 1;
        goto label1;

     label4:
        r3[6] = 1;
        return r5;
    }

    public static java.lang.String fixedWidth(java.lang.String[], int)
    {
        java.lang.String[] r0, r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r5;
        java.lang.String $r7, $r8, $r10, $r11, $r13, $r14, $r17, $r18, $r20;

        r0 := @parameter0: java.lang.String[];
        i0 := @parameter1: int;
        $r1 = <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r3 = $r5;
        i1 = 0;
        r2[0] = 1;

     label1:
        $i4 = lengthof r0;
        r2[1] = 1;
        if i1 >= $i4 goto label10;

        i2 = 0;
        r2[2] = 1;
        if i1 == 0 goto label2;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r2[3] = 1;

     label2:
        $r7 = r0[i1];
        $i5 = virtualinvoke $r7.<java.lang.String: int length()>();
        r2[4] = 1;
        if $i5 > i0 goto label3;

        $r8 = r0[i1];
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        r2[5] = 1;
        goto label9;

     label3:
        $r10 = r0[i1];
        r4 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[] splitAndTrim(java.lang.String,java.lang.String)>($r10, " \r\n\t\u3000\u00a0\u2007\u202f");
        i3 = 0;
        r2[6] = 1;

     label4:
        $i6 = lengthof r4;
        r2[7] = 1;
        if i3 >= $i6 goto label9;

        r2[8] = 1;
        if i2 == 0 goto label5;

        $r11 = r4[i3];
        $i7 = virtualinvoke $r11.<java.lang.String: int length()>();
        $i8 = i2 + $i7;
        r2[9] = 1;
        if $i8 >= i0 goto label7;

     label5:
        r2[10] = 1;
        if i2 == 0 goto label6;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        i2 = i2 + 1;
        r2[11] = 1;

     label6:
        $r13 = r4[i3];
        $i9 = virtualinvoke $r13.<java.lang.String: int length()>();
        i2 = i2 + $i9;
        $r14 = r4[i3];
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        r2[12] = 1;
        goto label8;

     label7:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r17 = r4[i3];
        i2 = virtualinvoke $r17.<java.lang.String: int length()>();
        $r18 = r4[i3];
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        r2[13] = 1;

     label8:
        i3 = i3 + 1;
        r2[14] = 1;
        goto label4;

     label9:
        i1 = i1 + 1;
        r2[15] = 1;
        goto label1;

     label10:
        $r20 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[16] = 1;
        return $r20;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String[][] $r2;
        java.lang.String[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRi()>();
        r1 = $r0[12];
        $r2 = newarray (java.lang.String[])[43];
        $r3 = newarray (java.lang.String)[2];
        $r3[0] = "&lt;";
        $r3[1] = "<";
        $r2[0] = $r3;
        $r4 = newarray (java.lang.String)[2];
        $r4[0] = "&gt;";
        $r4[1] = ">";
        $r2[1] = $r4;
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "&amp;";
        $r5[1] = "&";
        $r2[2] = $r5;
        $r6 = newarray (java.lang.String)[2];
        $r6[0] = "&quot;";
        $r6[1] = "\"";
        $r2[3] = $r6;
        $r7 = newarray (java.lang.String)[2];
        $r7[0] = "&agrave;";
        $r7[1] = "\ufffd";
        $r2[4] = $r7;
        $r8 = newarray (java.lang.String)[2];
        $r8[0] = "&Agrave;";
        $r8[1] = "\ufffd";
        $r2[5] = $r8;
        $r9 = newarray (java.lang.String)[2];
        $r9[0] = "&acirc;";
        $r9[1] = "\ufffd";
        $r2[6] = $r9;
        $r10 = newarray (java.lang.String)[2];
        $r10[0] = "&auml;";
        $r10[1] = "\ufffd";
        $r2[7] = $r10;
        $r11 = newarray (java.lang.String)[2];
        $r11[0] = "&Auml;";
        $r11[1] = "\ufffd";
        $r2[8] = $r11;
        $r12 = newarray (java.lang.String)[2];
        $r12[0] = "&Acirc;";
        $r12[1] = "\ufffd";
        $r2[9] = $r12;
        $r13 = newarray (java.lang.String)[2];
        $r13[0] = "&aring;";
        $r13[1] = "\ufffd";
        $r2[10] = $r13;
        $r14 = newarray (java.lang.String)[2];
        $r14[0] = "&Aring;";
        $r14[1] = "\ufffd";
        $r2[11] = $r14;
        $r15 = newarray (java.lang.String)[2];
        $r15[0] = "&aelig;";
        $r15[1] = "\ufffd";
        $r2[12] = $r15;
        $r16 = newarray (java.lang.String)[2];
        $r16[0] = "&AElig;";
        $r16[1] = "\ufffd";
        $r2[13] = $r16;
        $r17 = newarray (java.lang.String)[2];
        $r17[0] = "&ccedil;";
        $r17[1] = "\ufffd";
        $r2[14] = $r17;
        $r18 = newarray (java.lang.String)[2];
        $r18[0] = "&Ccedil;";
        $r18[1] = "\ufffd";
        $r2[15] = $r18;
        $r19 = newarray (java.lang.String)[2];
        $r19[0] = "&eacute;";
        $r19[1] = "\ufffd";
        $r2[16] = $r19;
        $r20 = newarray (java.lang.String)[2];
        $r20[0] = "&Eacute;";
        $r20[1] = "\ufffd";
        $r2[17] = $r20;
        $r21 = newarray (java.lang.String)[2];
        $r21[0] = "&egrave;";
        $r21[1] = "\ufffd";
        $r2[18] = $r21;
        $r22 = newarray (java.lang.String)[2];
        $r22[0] = "&Egrave;";
        $r22[1] = "\ufffd";
        $r2[19] = $r22;
        $r23 = newarray (java.lang.String)[2];
        $r23[0] = "&ecirc;";
        $r23[1] = "\ufffd";
        $r2[20] = $r23;
        $r24 = newarray (java.lang.String)[2];
        $r24[0] = "&Ecirc;";
        $r24[1] = "\ufffd";
        $r2[21] = $r24;
        $r25 = newarray (java.lang.String)[2];
        $r25[0] = "&euml;";
        $r25[1] = "\ufffd";
        $r2[22] = $r25;
        $r26 = newarray (java.lang.String)[2];
        $r26[0] = "&Euml;";
        $r26[1] = "\ufffd";
        $r2[23] = $r26;
        $r27 = newarray (java.lang.String)[2];
        $r27[0] = "&iuml;";
        $r27[1] = "\ufffd";
        $r2[24] = $r27;
        $r28 = newarray (java.lang.String)[2];
        $r28[0] = "&Iuml;";
        $r28[1] = "\ufffd";
        $r2[25] = $r28;
        $r29 = newarray (java.lang.String)[2];
        $r29[0] = "&ocirc;";
        $r29[1] = "\ufffd";
        $r2[26] = $r29;
        $r30 = newarray (java.lang.String)[2];
        $r30[0] = "&Ocirc;";
        $r30[1] = "\ufffd";
        $r2[27] = $r30;
        $r31 = newarray (java.lang.String)[2];
        $r31[0] = "&ouml;";
        $r31[1] = "\ufffd";
        $r2[28] = $r31;
        $r32 = newarray (java.lang.String)[2];
        $r32[0] = "&Ouml;";
        $r32[1] = "\ufffd";
        $r2[29] = $r32;
        $r33 = newarray (java.lang.String)[2];
        $r33[0] = "&oslash;";
        $r33[1] = "\ufffd";
        $r2[30] = $r33;
        $r34 = newarray (java.lang.String)[2];
        $r34[0] = "&Oslash;";
        $r34[1] = "\ufffd";
        $r2[31] = $r34;
        $r35 = newarray (java.lang.String)[2];
        $r35[0] = "&szlig;";
        $r35[1] = "\ufffd";
        $r2[32] = $r35;
        $r36 = newarray (java.lang.String)[2];
        $r36[0] = "&ugrave;";
        $r36[1] = "\ufffd";
        $r2[33] = $r36;
        $r37 = newarray (java.lang.String)[2];
        $r37[0] = "&Ugrave;";
        $r37[1] = "\ufffd";
        $r2[34] = $r37;
        $r38 = newarray (java.lang.String)[2];
        $r38[0] = "&ucirc;";
        $r38[1] = "\ufffd";
        $r2[35] = $r38;
        $r39 = newarray (java.lang.String)[2];
        $r39[0] = "&Ucirc;";
        $r39[1] = "\ufffd";
        $r2[36] = $r39;
        $r40 = newarray (java.lang.String)[2];
        $r40[0] = "&uuml;";
        $r40[1] = "\ufffd";
        $r2[37] = $r40;
        $r41 = newarray (java.lang.String)[2];
        $r41[0] = "&Uuml;";
        $r41[1] = "\ufffd";
        $r2[38] = $r41;
        $r42 = newarray (java.lang.String)[2];
        $r42[0] = "&nbsp;";
        $r42[1] = " ";
        $r2[39] = $r42;
        $r43 = newarray (java.lang.String)[2];
        $r43[0] = "&copy;";
        $r43[1] = "\u00a9";
        $r2[40] = $r43;
        $r44 = newarray (java.lang.String)[2];
        $r44[0] = "&reg;";
        $r44[1] = "\u00ae";
        $r2[41] = $r44;
        $r45 = newarray (java.lang.String)[2];
        $r45[0] = "&euro;";
        $r45[1] = "\u20a0";
        $r2[42] = $r45;
        <com.zoffcc.applications.aagtl.StringUtils: java.lang.String[][] htmlEscape> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = newmultiarray (boolean)[13][];
        <com.zoffcc.applications.aagtl.StringUtils: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[12];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[11];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[7];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[17];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/StringUtils", -3602098739888981892L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.TextEntryActivity$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.zoffcc.applications.aagtl.TextEntryActivity this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.TextEntryActivity)
    {
        com.zoffcc.applications.aagtl.TextEntryActivity$1 r0;
        com.zoffcc.applications.aagtl.TextEntryActivity r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.TextEntryActivity$1;
        r1 := @parameter0: com.zoffcc.applications.aagtl.TextEntryActivity;
        $r2 = <com.zoffcc.applications.aagtl.TextEntryActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.TextEntryActivity$1: com.zoffcc.applications.aagtl.TextEntryActivity this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.zoffcc.applications.aagtl.TextEntryActivity$1 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.TextEntryActivity $r4;

        r0 := @this: com.zoffcc.applications.aagtl.TextEntryActivity$1;
        r1 := @parameter0: android.view.View;
        $r2 = <com.zoffcc.applications.aagtl.TextEntryActivity$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity$1: com.zoffcc.applications.aagtl.TextEntryActivity this$0>;
        staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity: void access$000(com.zoffcc.applications.aagtl.TextEntryActivity)>($r4);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.TextEntryActivity$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/TextEntryActivity$1", 4320153508954628847L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.TextEntryActivity extends android.app.Activity
{
    private android.widget.EditText u;
    private android.widget.EditText p;
    public android.widget.RelativeLayout mainscreen_map_view;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.TextEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.TextEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r2[0] = 1;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.zoffcc.applications.aagtl.TextEntryActivity r0;
        android.os.Bundle r1, $r28, $r35, $r43;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.LinearLayout r4, $r10;
        android.widget.TextView r5, r6, $r12, $r17;
        android.widget.Button r7, $r24;
        java.lang.String r8, $r36, $r44;
        android.view.Window $r9;
        android.widget.RelativeLayout$LayoutParams $r11, $r13, $r16, $r18, $r21, $r25;
        android.widget.EditText $r14, $r15, $r19, $r20, $r22, $r31, $r32, $r33, $r39, $r40, $r41, $r45, $r49, $r50;
        android.text.method.PasswordTransformationMethod $r23, $r46;
        com.zoffcc.applications.aagtl.TextEntryActivity$1 $r26;
        android.content.Intent $r27, $r34, $r42;
        int $i0;
        java.lang.Exception $r29, r30, $r37, r38, $r47, r48;

        r0 := @this: com.zoffcc.applications.aagtl.TextEntryActivity;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        $r9 = virtualinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.view.Window getWindow()>();
        virtualinvoke $r9.<android.view.Window: void setFlags(int,int)>(4, 4);
        $r10 = new android.widget.LinearLayout;
        specialinvoke $r10.<android.widget.LinearLayout: void <init>(android.content.Context)>(r0);
        r4 = $r10;
        $r11 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r11.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        virtualinvoke r4.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r11);
        virtualinvoke r4.<android.widget.LinearLayout: void setOrientation(int)>(1);
        $r12 = new android.widget.TextView;
        specialinvoke $r12.<android.widget.TextView: void <init>(android.content.Context)>(r0);
        r5 = $r12;
        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>("Userid");
        virtualinvoke r5.<android.widget.TextView: void setTextSize(int,float)>(2, 10.0F);
        $r13 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r13.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        virtualinvoke r5.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r13);
        $r14 = new android.widget.EditText;
        specialinvoke $r14.<android.widget.EditText: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText u> = $r14;
        $r15 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText u>;
        $r16 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r16.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        virtualinvoke $r15.<android.widget.EditText: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r16);
        $r17 = new android.widget.TextView;
        specialinvoke $r17.<android.widget.TextView: void <init>(android.content.Context)>(r0);
        r6 = $r17;
        virtualinvoke r6.<android.widget.TextView: void setTextSize(int,float)>(2, 10.0F);
        virtualinvoke r6.<android.widget.TextView: void setText(java.lang.CharSequence)>("Password");
        $r18 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r18.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        virtualinvoke r6.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r18);
        $r19 = new android.widget.EditText;
        specialinvoke $r19.<android.widget.EditText: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p> = $r19;
        $r20 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p>;
        $r21 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r21.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        virtualinvoke $r20.<android.widget.EditText: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r21);
        $r22 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p>;
        $r23 = new android.text.method.PasswordTransformationMethod;
        specialinvoke $r23.<android.text.method.PasswordTransformationMethod: void <init>()>();
        virtualinvoke $r22.<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>($r23);
        $r24 = new android.widget.Button;
        specialinvoke $r24.<android.widget.Button: void <init>(android.content.Context)>(r0);
        r7 = $r24;
        virtualinvoke r7.<android.widget.Button: void setText(java.lang.CharSequence)>("Save");
        $r25 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r25.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        virtualinvoke r7.<android.widget.Button: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r25);
        virtualinvoke r7.<android.widget.Button: void setGravity(int)>(17);
        $r26 = new com.zoffcc.applications.aagtl.TextEntryActivity$1;
        specialinvoke $r26.<com.zoffcc.applications.aagtl.TextEntryActivity$1: void <init>(com.zoffcc.applications.aagtl.TextEntryActivity)>(r0);
        virtualinvoke r7.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r26);

     label1:
        $r27 = virtualinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.content.Intent getIntent()>();
        $r28 = virtualinvoke $r27.<android.content.Intent: android.os.Bundle getExtras()>();
        r8 = virtualinvoke $r28.<android.os.Bundle: java.lang.String getString(java.lang.String)>("title");
        $i0 = virtualinvoke r8.<java.lang.String: int length()>();
        r3[0] = 1;
        if $i0 <= 0 goto label2;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: void setTitle(java.lang.CharSequence)>(r8);
        r3[1] = 1;

     label2:
        r3[2] = 1;
        goto label4;

     label3:
        $r29 := @caughtexception;
        r30 = $r29;
        r3[3] = 1;

     label4:
        $r31 = new android.widget.EditText;
        specialinvoke $r31.<android.widget.EditText: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText u> = $r31;
        $r32 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText u>;
        virtualinvoke $r32.<android.widget.EditText: void setSingleLine()>();
        $r33 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText u>;
        $r34 = virtualinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.content.Intent getIntent()>();
        $r35 = virtualinvoke $r34.<android.content.Intent: android.os.Bundle getExtras()>();
        $r36 = virtualinvoke $r35.<android.os.Bundle: java.lang.String getString(java.lang.String)>("username");
        virtualinvoke $r33.<android.widget.EditText: void setText(java.lang.CharSequence)>($r36);
        r3[4] = 1;

     label5:
        goto label7;

     label6:
        $r37 := @caughtexception;
        r38 = $r37;
        r3[5] = 1;

     label7:
        $r39 = new android.widget.EditText;
        specialinvoke $r39.<android.widget.EditText: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p> = $r39;
        $r40 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p>;
        virtualinvoke $r40.<android.widget.EditText: void setSingleLine()>();
        $r41 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p>;
        $r42 = virtualinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.content.Intent getIntent()>();
        $r43 = virtualinvoke $r42.<android.content.Intent: android.os.Bundle getExtras()>();
        $r44 = virtualinvoke $r43.<android.os.Bundle: java.lang.String getString(java.lang.String)>("password");
        virtualinvoke $r41.<android.widget.EditText: void setText(java.lang.CharSequence)>($r44);
        $r45 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p>;
        $r46 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();
        virtualinvoke $r45.<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>($r46);
        r3[6] = 1;

     label8:
        goto label10;

     label9:
        $r47 := @caughtexception;
        r48 = $r47;
        r3[7] = 1;

     label10:
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>(r5);
        $r49 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText u>;
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>($r49);
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>(r6);
        $r50 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p>;
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>($r50);
        virtualinvoke r4.<android.widget.LinearLayout: void addView(android.view.View)>(r7);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: void setContentView(android.view.View)>(r4);
        r3[8] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public void onBackPressed()
    {
        com.zoffcc.applications.aagtl.TextEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.TextEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: void executeDone()>();
        specialinvoke r0.<android.app.Activity: void onBackPressed()>();
        r2[0] = 1;
        return;
    }

    private void executeDone()
    {
        com.zoffcc.applications.aagtl.TextEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.Intent r3, $r4;
        android.widget.EditText $r5, $r9;
        android.text.Editable $r6, $r10;
        java.lang.String $r7, $r11;

        r0 := @this: com.zoffcc.applications.aagtl.TextEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r4 = new android.content.Intent;
        specialinvoke $r4.<android.content.Intent: void <init>()>();
        r3 = $r4;
        $r5 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText u>;
        $r6 = virtualinvoke $r5.<android.widget.EditText: android.text.Editable getText()>();
        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("username", $r7);
        $r9 = r0.<com.zoffcc.applications.aagtl.TextEntryActivity: android.widget.EditText p>;
        $r10 = virtualinvoke $r9.<android.widget.EditText: android.text.Editable getText()>();
        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("password", $r11);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: void setResult(int,android.content.Intent)>(-1, r3);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: void finish()>();
        r2[0] = 1;
        return;
    }

    static void access$000(com.zoffcc.applications.aagtl.TextEntryActivity)
    {
        com.zoffcc.applications.aagtl.TextEntryActivity r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: com.zoffcc.applications.aagtl.TextEntryActivity;
        $r1 = <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        specialinvoke r0.<com.zoffcc.applications.aagtl.TextEntryActivity: void executeDone()>();
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <com.zoffcc.applications.aagtl.TextEntryActivity: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[9];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/TextEntryActivity", -4865630170369878376L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$1 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$1 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$1;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$1: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        com.zoffcc.applications.aagtl.aagtl$1 r0;
        android.content.DialogInterface r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$1;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", "Ok, user saw the infobox");
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$1", 4320153509232217768L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$10 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$10 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$10;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$10: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$10: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.zoffcc.applications.aagtl.aagtl$10 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.aagtl $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        android.widget.RelativeLayout $r5, $r9, $r13, $r17, $r21, $r25;
        android.widget.Button $r7, $r11;
        android.widget.ToggleButton $r15;
        com.example.widget.NumberPicker $r19, $r23, $r27;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$10;
        r1 := @parameter0: android.view.View;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$10: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$10: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r5 = $r4.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r7 = $r6.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_cancel>;
        virtualinvoke $r5.<android.widget.RelativeLayout: void removeView(android.view.View)>($r7);
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r9 = $r8.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_ok>;
        virtualinvoke $r9.<android.widget.RelativeLayout: void removeView(android.view.View)>($r11);
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r15 = $r14.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        virtualinvoke $r13.<android.widget.RelativeLayout: void removeView(android.view.View)>($r15);
        $r16 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r17 = $r16.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r19 = $r18.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        virtualinvoke $r17.<android.widget.RelativeLayout: void removeView(android.view.View)>($r19);
        $r20 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r21 = $r20.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r23 = $r22.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        virtualinvoke $r21.<android.widget.RelativeLayout: void removeView(android.view.View)>($r23);
        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r25 = $r24.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r26 = r0.<com.zoffcc.applications.aagtl.aagtl$10: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r27 = $r26.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        virtualinvoke $r25.<android.widget.RelativeLayout: void removeView(android.view.View)>($r27);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$10: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$10: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$10", 4320153535325576342L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$2 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$2 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$2;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$2: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        com.zoffcc.applications.aagtl.aagtl$2 r0;
        android.content.DialogInterface r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4;
        android.content.Intent r5, $r6;
        android.net.Uri $r7;
        com.zoffcc.applications.aagtl.aagtl $r9;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$2;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$2: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$2: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", "user wants more info, show the website");
        r4 = "http://aagtl.work.zoff.cc/";
        $r6 = new android.content.Intent;
        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");
        r5 = $r6;
        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r4);
        virtualinvoke r5.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r7);
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl$2: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r9.<com.zoffcc.applications.aagtl.aagtl: void startActivity(android.content.Intent)>(r5);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$2", 4320153518392652161L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$3 extends android.os.Handler
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$3 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$3;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$3: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.zoffcc.applications.aagtl.aagtl$3 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        android.os.Bundle $r4, $r6, $r8;
        int $i0, $i1;
        com.zoffcc.applications.aagtl.aagtl $r5;
        java.lang.String $r7;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$3;
        r1 := @parameter0: android.os.Message;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$3: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$3: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $i0 = virtualinvoke $r4.<android.os.Bundle: int getInt(java.lang.String)>("command");
        r3[0] = 1;
        if $i0 != 1 goto label1;

        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl$3: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r6 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $r7 = virtualinvoke $r6.<android.os.Bundle: java.lang.String getString(java.lang.String)>("text");
        $r8 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $i1 = virtualinvoke $r8.<android.os.Bundle: int getInt(java.lang.String)>("duration");
        virtualinvoke $r5.<com.zoffcc.applications.aagtl.aagtl: void toast_me(java.lang.String,int)>($r7, $i1);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$3: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$3: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$3", -2798682505193193003L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$4 extends android.os.Handler
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$4 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$4;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$4: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.zoffcc.applications.aagtl.aagtl$4 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        android.os.Bundle $r4, $r6;
        int $i0, $i1;
        com.zoffcc.applications.aagtl.aagtl $r5, $r7, $r9;
        com.zoffcc.applications.aagtl.GCacheView $r8;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$4;
        r1 := @parameter0: android.os.Message;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$4: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$4: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $i0 = virtualinvoke $r4.<android.os.Bundle: int getInt(java.lang.String)>("command");
        r3[0] = 1;
        if $i0 != 1 goto label1;

        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl$4: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r5.<com.zoffcc.applications.aagtl.aagtl: void removeDialog(int)>(1);
        r3[1] = 1;
        goto label3;

     label1:
        $r6 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $i1 = virtualinvoke $r6.<android.os.Bundle: int getInt(java.lang.String)>("command");
        r3[2] = 1;
        if $i1 != 2 goto label2;

        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl$4: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r8.<com.zoffcc.applications.aagtl.GCacheView: void invalidate()>();
        r3[3] = 1;
        goto label3;

     label2:
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl$4: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r9.<com.zoffcc.applications.aagtl.aagtl: void showDialog(int)>(1);
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$4: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$4: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$4", 186139863656701314L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$5 extends android.os.Handler
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$5 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$5;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$5: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$5: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$5: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.zoffcc.applications.aagtl.aagtl$5 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.aagtl $r4, $r7, $r10, $r14;
        android.app.ProgressDialog $r5, $r8, $r11, $r15;
        android.os.Bundle $r6, $r9, $r12, $r16;
        int $i0, $i1;
        java.lang.String $r13, $r17;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$5;
        r1 := @parameter0: android.os.Message;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$5: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$5: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl$5: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r5 = $r4.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        $r6 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $i0 = virtualinvoke $r6.<android.os.Bundle: int getInt(java.lang.String)>("max");
        virtualinvoke $r5.<android.app.ProgressDialog: void setMax(int)>($i0);
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl$5: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        $r9 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $i1 = virtualinvoke $r9.<android.os.Bundle: int getInt(java.lang.String)>("cur");
        virtualinvoke $r8.<android.app.ProgressDialog: void setProgress(int)>($i1);
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl$5: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        $r12 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $r13 = virtualinvoke $r12.<android.os.Bundle: java.lang.String getString(java.lang.String)>("title");
        virtualinvoke $r11.<android.app.ProgressDialog: void setTitle(java.lang.CharSequence)>($r13);
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl$5: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r15 = $r14.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        $r16 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        $r17 = virtualinvoke $r16.<android.os.Bundle: java.lang.String getString(java.lang.String)>("text");
        virtualinvoke $r15.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r17);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$5: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$5: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$5", 4320153528108264396L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$6 extends android.os.Handler
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$6 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$6;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$6: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$6: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$6: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.zoffcc.applications.aagtl.aagtl$6 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        com.zoffcc.applications.aagtl.aagtl $r4;
        com.zoffcc.applications.aagtl.Rose $r5;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$6;
        r1 := @parameter0: android.os.Message;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$6: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$6: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $i0 = r1.<android.os.Message: int what>;
        r3[0] = 1;
        lookupswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl$6: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r5 = $r4.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r5.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        r3[1] = 1;

     label2:
        r3[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$6: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$6: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$6", -1951089306258213160L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$7 extends android.os.Handler
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$7 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$7;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$7: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$7: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$7: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<android.os.Handler: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.zoffcc.applications.aagtl.aagtl$7 r0;
        android.os.Message r1;
        boolean[][] $r2;
        boolean[] r3;
        android.os.Bundle r4;
        int i0;
        com.zoffcc.applications.aagtl.aagtl $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$7;
        r1 := @parameter0: android.os.Message;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$7: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$7: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();
        i0 = virtualinvoke r4.<android.os.Bundle: int getInt(java.lang.String)>("id");
        r3[0] = 1;
        if i0 != 0 goto label1;

        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl$7: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r6 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("text");
        virtualinvoke $r5.<com.zoffcc.applications.aagtl.aagtl: void change_status_text_real(java.lang.String)>($r6);
        r3[1] = 1;
        goto label2;

     label1:
        r3[2] = 1;
        if i0 != 1 goto label2;

        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl$7: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r8 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("text");
        virtualinvoke $r7.<com.zoffcc.applications.aagtl.aagtl: void append_status_text_real(java.lang.String)>($r8);
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$7: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$7: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$7", -8182291696658749959L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$8 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$8 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$8;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$8: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$8: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        com.zoffcc.applications.aagtl.aagtl$8 r0;
        android.content.DialogInterface r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        java.io.FileInputStream r4, $r42;
        java.io.DataInputStream r5, $r52;
        java.io.BufferedReader r6, $r53;
        java.lang.String r7, r8, r9, $r14, $r19, $r21, $r29, $r31, $r36, $r45, $r49, $r51, $r59, r60;
        com.zoffcc.applications.aagtl.aagtl $r10, $r11, $r18, $r22, $r26, $r33, $r37, $r38, $r40, $r44, $r48, $r55, $r57, $r61, $r70, $r72, $r76, $r77, $r79, $r81;
        java.lang.CharSequence[] $r12, $r27, $r34;
        java.lang.CharSequence $r13, $r28, $r35;
        java.io.PrintStream $r15;
        java.lang.StringBuilder $r16, $r17, $r20, $r24, $r25, $r30, $r43, $r46, $r47, $r50, $r64, $r65, $r66, $r67, $r68, $r69;
        android.content.Context $r23;
        android.widget.Toast $r32;
        boolean $z0, $z1, $z3;
        com.zoffcc.applications.aagtl.PointProvider $r39, $r71, $r78;
        com.zoffcc.applications.aagtl.Rose $r41, $r73, $r80;
        java.io.InputStreamReader $r54;
        java.util.ArrayList $r56;
        java.util.List $r58, $r62;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r63;
        java.lang.Exception $r74, r75;
        android.app.AlertDialog $r82;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$8;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$8: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$8: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r12 = $r11.<com.zoffcc.applications.aagtl.aagtl: java.lang.CharSequence[] route_file_items>;
        $r13 = $r12[i0];
        $r14 = interfaceinvoke $r13.<java.lang.CharSequence: java.lang.String toString()>();
        $r10.<com.zoffcc.applications.aagtl.aagtl: java.lang.String current_routefile_name> = $r14;
        $r15 = <java.lang.System: java.io.PrintStream out>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("crfn1=");
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r19 = $r18.<com.zoffcc.applications.aagtl.aagtl: java.lang.String current_routefile_name>;
        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r21);
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r23 = virtualinvoke $r22.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Routefile selected: ");
        $r26 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r27 = $r26.<com.zoffcc.applications.aagtl.aagtl: java.lang.CharSequence[] route_file_items>;
        $r28 = $r27[i0];
        $r29 = interfaceinvoke $r28.<java.lang.CharSequence: java.lang.String toString()>();
        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        $r32 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r23, $r31, 0);
        virtualinvoke $r32.<android.widget.Toast: void show()>();
        $r33 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r34 = $r33.<com.zoffcc.applications.aagtl.aagtl: java.lang.CharSequence[] route_file_items>;
        $r35 = $r34[i0];
        $r36 = interfaceinvoke $r35.<java.lang.CharSequence: java.lang.String toString()>();
        $z0 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>("--None--");
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r37 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r37.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches> = null;
        $r38 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r39 = $r38.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r39.<com.zoffcc.applications.aagtl.PointProvider: void clear_filter()>();
        $r40 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r41 = $r40.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r41.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        r3[1] = 1;
        return;

     label1:
        $r42 = new java.io.FileInputStream;
        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        $r44 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r45 = $r44.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/routes/");
        $r48 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r49 = $r48.<com.zoffcc.applications.aagtl.aagtl: java.lang.String current_routefile_name>;
        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r42.<java.io.FileInputStream: void <init>(java.lang.String)>($r51);
        r4 = $r42;
        $r52 = new java.io.DataInputStream;
        specialinvoke $r52.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r4);
        r5 = $r52;
        $r53 = new java.io.BufferedReader;
        $r54 = new java.io.InputStreamReader;
        specialinvoke $r54.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r5);
        specialinvoke $r53.<java.io.BufferedReader: void <init>(java.io.Reader)>($r54);
        r6 = $r53;
        $r55 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r56 = new java.util.ArrayList;
        specialinvoke $r56.<java.util.ArrayList: void <init>()>();
        $r55.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches> = $r56;
        $r57 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r58 = $r57.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches>;
        interfaceinvoke $r58.<java.util.List: void clear()>();
        r7 = "";
        r8 = "";
        r3[2] = 1;

     label2:
        $r59 = virtualinvoke r6.<java.io.BufferedReader: java.lang.String readLine()>();
        r9 = $r59;
        r3[3] = 1;
        if $r59 == null goto label3;

        r60 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>();
        $z1 = virtualinvoke r60.<java.lang.String: boolean equals(java.lang.Object)>("");
        r3[4] = 1;
        if $z1 != 0 goto label2;

        $r61 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r62 = $r61.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches>;
        $r63 = new com.zoffcc.applications.aagtl.GeocacheCoordinate;
        specialinvoke $r63.<com.zoffcc.applications.aagtl.GeocacheCoordinate: void <init>(double,double,java.lang.String)>(0.0, 0.0, r60);
        interfaceinvoke $r62.<java.util.List: boolean add(java.lang.Object)>($r63);
        $r64 = new java.lang.StringBuilder;
        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=\'");
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");
        r7 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();
        $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("");
        r3[5] = 1;
        if $z3 == 0 goto label2;

        r8 = " or ";
        r3[6] = 1;
        goto label2;

     label3:
        virtualinvoke r5.<java.io.DataInputStream: void close()>();
        $r70 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r71 = $r70.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r71.<com.zoffcc.applications.aagtl.PointProvider: void set_filter(java.lang.String)>(r7);
        $r72 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r73 = $r72.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r73.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        r3[7] = 1;

     label4:
        goto label6;

     label5:
        $r74 := @caughtexception;
        r75 = $r74;
        $r76 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r76.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches> = null;
        $r77 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r78 = $r77.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r78.<com.zoffcc.applications.aagtl.PointProvider: void clear_filter()>();
        $r79 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r80 = $r79.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r80.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        r3[8] = 1;

     label6:
        $r81 = r0.<com.zoffcc.applications.aagtl.aagtl$8: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r82 = $r81.<com.zoffcc.applications.aagtl.aagtl: android.app.AlertDialog alert>;
        virtualinvoke $r82.<android.app.AlertDialog: void dismiss()>();
        r3[9] = 1;
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$8: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$8: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$8", 621441091315465707L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$9 extends java.lang.Object implements android.view.View$OnClickListener
{
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl)
    {
        com.zoffcc.applications.aagtl.aagtl$9 r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$9;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$9: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$9: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        return;
    }

    public void onClick(android.view.View)
    {
        com.zoffcc.applications.aagtl.aagtl$9 r0;
        android.view.View r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.Coordinate r4, $r35, r47;
        com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m r5, $r36;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r6, $r50, $r61, $r72;
        java.io.PrintStream $r7, $r14, $r21, $r28, $r62, $r67;
        java.lang.StringBuilder $r8, $r9, $r12, $r15, $r16, $r19, $r22, $r23, $r26, $r29, $r30, $r33, $r63, $r64, $r65, $r68, $r69, $r70;
        com.zoffcc.applications.aagtl.aagtl $r10, $r17, $r24, $r31, $r37, $r39, $r41, $r43, $r45, $r48, $r51, $r53, $r55, $r57, $r59, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r91, $r93, $r95, $r97;
        android.widget.ToggleButton $r11, $r46, $r58, $r86;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r13, $r20, $r27, $r34, $r66, $r71;
        com.example.widget.NumberPicker $r18, $r25, $r32, $r40, $r42, $r44, $r52, $r54, $r56, $r90, $r94, $r98;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Boolean $r38;
        com.zoffcc.applications.aagtl.Rose $r49, $r60, $r74;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        android.widget.RelativeLayout $r76, $r80, $r84, $r88, $r92, $r96;
        android.widget.Button $r78, $r82;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$9;
        r1 := @parameter0: android.view.View;
        $r2 = <com.zoffcc.applications.aagtl.aagtl$9: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$9: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toggle=");
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        $z0 = virtualinvoke $r11.<android.widget.ToggleButton: boolean isChecked()>();
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r13);
        $r14 = <java.lang.System: java.io.PrintStream out>;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xx1=");
        $r17 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r18 = $r17.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        $i0 = virtualinvoke $r18.<com.example.widget.NumberPicker: int getCurrent()>();
        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r20);
        $r21 = <java.lang.System: java.io.PrintStream out>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xx2=");
        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r25 = $r24.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        $i1 = virtualinvoke $r25.<com.example.widget.NumberPicker: int getCurrent()>();
        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);
        $r28 = <java.lang.System: java.io.PrintStream out>;
        $r29 = new java.lang.StringBuilder;
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xx3=");
        $r31 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r32 = $r31.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        $i2 = virtualinvoke $r32.<com.example.widget.NumberPicker: int getCurrent()>();
        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r34);
        $r35 = new com.zoffcc.applications.aagtl.Coordinate;
        specialinvoke $r35.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>(2.0, 2.0);
        r4 = $r35;
        $r36 = new com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m;
        specialinvoke $r36.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: void <init>()>();
        r5 = $r36;
        $r37 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r38 = $r37.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean is_lat_current_change_target_coords>;
        $z1 = virtualinvoke $r38.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z1 == 0 goto label3;

        $r39 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r40 = $r39.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        $i3 = virtualinvoke $r40.<com.example.widget.NumberPicker: int getCurrent()>();
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_deg> = $i3;
        $r41 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r42 = $r41.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        $i4 = virtualinvoke $r42.<com.example.widget.NumberPicker: int getCurrent()>();
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min> = $i4;
        $r43 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r44 = $r43.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        $i5 = virtualinvoke $r44.<com.example.widget.NumberPicker: int getCurrent()>();
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min_fractions> = $i5;
        $r45 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r46 = $r45.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        $z2 = virtualinvoke $r46.<android.widget.ToggleButton: boolean isChecked()>();
        r3[1] = 1;
        if $z2 == 0 goto label1;

        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lat_plus_minus> = 1;
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lat_sign> = "+";
        r3[2] = 1;
        goto label2;

     label1:
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lat_plus_minus> = 0;
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lat_sign> = "-";
        r3[3] = 1;

     label2:
        r47 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: com.zoffcc.applications.aagtl.Coordinate dm_m_to_d(com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m)>(r5);
        $r48 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r49 = $r48.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r50 = $r49.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $d0 = $r50.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon>;
        r47.<com.zoffcc.applications.aagtl.Coordinate: double lon> = $d0;
        r3[4] = 1;
        goto label6;

     label3:
        $r51 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r52 = $r51.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        $i6 = virtualinvoke $r52.<com.example.widget.NumberPicker: int getCurrent()>();
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_deg> = $i6;
        $r53 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r54 = $r53.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        $i7 = virtualinvoke $r54.<com.example.widget.NumberPicker: int getCurrent()>();
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min> = $i7;
        $r55 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r56 = $r55.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        $i8 = virtualinvoke $r56.<com.example.widget.NumberPicker: int getCurrent()>();
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min_fractions> = $i8;
        $r57 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r58 = $r57.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        $z3 = virtualinvoke $r58.<android.widget.ToggleButton: boolean isChecked()>();
        r3[5] = 1;
        if $z3 == 0 goto label4;

        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus> = 1;
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lon_sign> = "+";
        r3[6] = 1;
        goto label5;

     label4:
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus> = 0;
        r5.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: java.lang.String lon_sign> = "-";
        r3[7] = 1;

     label5:
        r47 = staticinvoke <com.zoffcc.applications.aagtl.Coordinate: com.zoffcc.applications.aagtl.Coordinate dm_m_to_d(com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m)>(r5);
        $r59 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r60 = $r59.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r61 = $r60.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $d1 = $r61.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat>;
        r47.<com.zoffcc.applications.aagtl.Coordinate: double lat> = $d1;
        r3[8] = 1;

     label6:
        $r62 = <java.lang.System: java.io.PrintStream out>;
        $r63 = new java.lang.StringBuilder;
        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ccc lat=");
        $d2 = r47.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>($r66);
        $r67 = <java.lang.System: java.io.PrintStream out>;
        $r68 = new java.lang.StringBuilder;
        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ccc lon=");
        $d3 = r47.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r71);
        $r72 = new com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $d4 = r47.<com.zoffcc.applications.aagtl.Coordinate: double lat>;
        $d5 = r47.<com.zoffcc.applications.aagtl.Coordinate: double lon>;
        specialinvoke $r72.<com.zoffcc.applications.aagtl.GeocacheCoordinate: void <init>(double,double,java.lang.String)>($d4, $d5, "*GCmanual*");
        r6 = $r72;
        r6.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String title> = "*manual target";
        $r73 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r74 = $r73.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r74.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target> = r6;
        $r75 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r76 = $r75.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r77 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r78 = $r77.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_cancel>;
        virtualinvoke $r76.<android.widget.RelativeLayout: void removeView(android.view.View)>($r78);
        $r79 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r80 = $r79.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r81 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r82 = $r81.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_ok>;
        virtualinvoke $r80.<android.widget.RelativeLayout: void removeView(android.view.View)>($r82);
        $r83 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r84 = $r83.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r85 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r86 = $r85.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        virtualinvoke $r84.<android.widget.RelativeLayout: void removeView(android.view.View)>($r86);
        $r87 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r88 = $r87.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r89 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r90 = $r89.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        virtualinvoke $r88.<android.widget.RelativeLayout: void removeView(android.view.View)>($r90);
        $r91 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r92 = $r91.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r93 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r94 = $r93.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        virtualinvoke $r92.<android.widget.RelativeLayout: void removeView(android.view.View)>($r94);
        $r95 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r96 = $r95.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r97 = r0.<com.zoffcc.applications.aagtl.aagtl$9: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r98 = $r97.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        virtualinvoke $r96.<android.widget.RelativeLayout: void removeView(android.view.View)>($r98);
        r3[9] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$9: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$9: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$9", 4067410597244422118L);
        return $r0;
    }
}
class com.zoffcc.applications.aagtl.aagtl$ProgressThread extends java.lang.Thread
{
    android.os.Handler mHandler;
    int with_details;
    final com.zoffcc.applications.aagtl.aagtl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(com.zoffcc.applications.aagtl.aagtl, android.os.Handler, int)
    {
        com.zoffcc.applications.aagtl.aagtl$ProgressThread r0;
        com.zoffcc.applications.aagtl.aagtl r1;
        android.os.Handler r2;
        int i0;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$ProgressThread;
        r1 := @parameter0: com.zoffcc.applications.aagtl.aagtl;
        r2 := @parameter1: android.os.Handler;
        i0 := @parameter2: int;
        $r3 = <com.zoffcc.applications.aagtl.aagtl$ProgressThread: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$ProgressThread: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0> = r1;
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: int with_details> = 0;
        r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: android.os.Handler mHandler> = r2;
        r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: int with_details> = i0;
        r4[0] = 1;
        return;
    }

    public void run()
    {
        com.zoffcc.applications.aagtl.aagtl$ProgressThread r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r6;
        com.zoffcc.applications.aagtl.aagtl $r4, $r7, $r10, $r11, $r12, $r15, $r16, $r17, $r19, $r20, $r21, $r23, $r24;
        com.zoffcc.applications.aagtl.PointProvider $r5;
        int $i0, $i1, $i2;
        android.os.Handler $r8, $r13, $r18, $r22;
        java.lang.Boolean $r9, $r14;
        android.os.PowerManager$WakeLock $r25;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$ProgressThread;
        $r1 = <com.zoffcc.applications.aagtl.aagtl$ProgressThread: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$ProgressThread: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r5 = $r4.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r5.<com.zoffcc.applications.aagtl.PointProvider: void compact()>();
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        $i0 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: int with_details>;
        r2[2] = 1;
        if $i0 != 0 goto label5;

        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: android.os.Handler mHandler>;
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        virtualinvoke $r7.<com.zoffcc.applications.aagtl.aagtl: void download_caches_in_visible_view_wrapper(android.os.Handler,java.lang.Boolean)>($r8, $r9);
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r10.<com.zoffcc.applications.aagtl.aagtl: void dismissDialog(int)>(0);
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r11.<com.zoffcc.applications.aagtl.aagtl: void removeDialog(int)>(0);
        r2[3] = 1;
        goto label7;

     label5:
        $i1 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: int with_details>;
        r2[4] = 1;
        if $i1 != 1 goto label6;

        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r13 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: android.os.Handler mHandler>;
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke $r12.<com.zoffcc.applications.aagtl.aagtl: void download_caches_in_visible_view_wrapper(android.os.Handler,java.lang.Boolean)>($r13, $r14);
        $r15 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r15.<com.zoffcc.applications.aagtl.aagtl: void dismissDialog(int)>(2);
        $r16 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r16.<com.zoffcc.applications.aagtl.aagtl: void removeDialog(int)>(2);
        r2[5] = 1;
        goto label7;

     label6:
        $i2 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: int with_details>;
        r2[6] = 1;
        if $i2 != 3 goto label7;

        $r17 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: android.os.Handler mHandler>;
        virtualinvoke $r17.<com.zoffcc.applications.aagtl.aagtl: void download_caches_from_route_file(android.os.Handler)>($r18);
        $r19 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r19.<com.zoffcc.applications.aagtl.aagtl: void dismissDialog(int)>(3);
        $r20 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r20.<com.zoffcc.applications.aagtl.aagtl: void removeDialog(int)>(3);
        r2[7] = 1;

     label7:
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r22 = $r21.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler gcv_Refresh>;
        virtualinvoke $r22.<android.os.Handler: boolean sendEmptyMessage(int)>(0);
        $r23 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        virtualinvoke $r23.<com.zoffcc.applications.aagtl.aagtl: void mUnlockScreenRotation()>();
        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: com.zoffcc.applications.aagtl.aagtl this$0>;
        $r25 = $r24.<com.zoffcc.applications.aagtl.aagtl: android.os.PowerManager$WakeLock wl>;
        virtualinvoke $r25.<android.os.PowerManager$WakeLock: void release()>();
        r2[8] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$ProgressThread: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <com.zoffcc.applications.aagtl.aagtl$ProgressThread: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[9];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$ProgressThread", 1531038431062110540L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.aagtl$settings extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public java.lang.Boolean download_visible;
    public java.lang.Boolean download_notfound;
    public java.lang.Boolean download_new;
    public java.lang.Boolean download_nothing;
    public java.lang.Boolean download_create_index;
    public java.lang.Boolean download_run_after;
    public java.lang.String download_run_after_string;
    public java.lang.String download_output_dir;
    public double map_position_lat;
    public double map_position_lon;
    public int map_zoom;
    public int map_type;
    public java.lang.Boolean download_resize;
    public int download_resize_pixel;
    public java.lang.Boolean options_show_name;
    public java.lang.String options_username;
    public java.lang.String options_password;
    public double last_target_lat;
    public double last_target_lon;
    public java.lang.String last_target_name;
    public java.lang.Boolean download_noimages;
    public java.lang.String download_map_path;
    public java.lang.Boolean options_hide_found;
    public java.lang.Boolean options_use_compass_heading;
    public java.lang.String options_gc_filter__type;
    public java.lang.Boolean options_turn_map_on_heading;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.aagtl$settings r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl$settings;
        $r1 = <com.zoffcc.applications.aagtl.aagtl$settings: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$settings: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean download_visible> = $r3;
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean download_notfound> = $r4;
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean download_new> = $r5;
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean download_nothing> = $r6;
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean download_create_index> = $r7;
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean download_run_after> = $r8;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string> = "CFG:v2.0:";
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_output_dir> = "/sdcard/external_sd/zoffcc/applications/aagtl";
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat> = 48.23428;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon> = 16.391514;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: int map_zoom> = 15;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: int map_type> = 1;
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean download_resize> = $r9;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: int download_resize_pixel> = 400;
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_show_name> = $r10;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_username> = "Username";
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password> = "Password";
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: double last_target_lat> = 50.0;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: double last_target_lon> = 10.0;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String last_target_name> = "default";
        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean download_noimages> = $r11;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_map_path> = "/sdcard/external_sd/zoffcc/applications/aagtl";
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_hide_found> = $r12;
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_use_compass_heading> = $r13;
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_gc_filter__type> = "";
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading> = $r14;
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl$settings: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.aagtl$settings: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl$settings", 9302282398276L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.aagtl extends android.app.Activity implements android.location.LocationListener, android.location.GpsStatus$Listener, android.hardware.SensorEventListener
{
    static final boolean EMULATOR;
    static final boolean _RELEASE_;
    boolean __ZOFF_PHONE__;
    public android.graphics.Bitmap follow_on;
    public android.graphics.Bitmap follow_off;
    public android.graphics.Bitmap follow_current;
    public java.lang.Boolean follow_mode;
    public android.graphics.RectF follow_button_rect;
    public android.graphics.Bitmap arrow_button;
    public android.graphics.RectF arrow_button_rect;
    android.widget.Button btn_ok;
    android.widget.Button btn_cancel;
    android.widget.ToggleButton orient_1_toggle;
    com.example.widget.NumberPicker xx1;
    com.example.widget.NumberPicker xx2;
    com.example.widget.NumberPicker xx3;
    java.lang.Boolean is_lat_current_change_target_coords;
    private android.os.Handler global_messageHandler;
    com.zoffcc.applications.aagtl.aagtl$ProgressThread progressThread;
    android.app.ProgressDialog pbarDialog;
    public java.lang.String main_dir;
    public java.lang.String main_data_dir;
    public java.lang.String status_text_string;
    public java.lang.String status_append_string;
    android.location.Location mLastLocation;
    long mLastLocationMillis;
    java.lang.Boolean isGPSFix;
    int used_sats;
    java.lang.String main_language;
    java.lang.String sub_language;
    android.util.DisplayMetrics metrics;
    android.os.PowerManager$WakeLock wl;
    java.util.List downloaded_caches;
    public android.location.LocationManager lm;
    public android.location.LocationProvider low;
    public android.location.LocationProvider high;
    public android.hardware.SensorManager sensorManager;
    public long last_heading_update;
    static final int DISPLAY_VIEW_MAP;
    static final int DISPLAY_VIEW_GC;
    static final int DISPLAY_VIEW_ARROW;
    private java.lang.Boolean show_no_loc_warning;
    public int current_display_view;
    static int TOUCH_CACHES_AFTER_THIS_ZOOM_LEVEL;
    public java.lang.CharSequence[] route_file_items;
    public java.lang.String current_routefile_name;
    public java.util.List route_file_caches;
    public android.app.AlertDialog alert;
    public com.zoffcc.applications.aagtl.Rose rose;
    public com.zoffcc.applications.aagtl.CrossHair cross;
    public com.zoffcc.applications.aagtl.GeocachesView gcview;
    public com.zoffcc.applications.aagtl.ArrowView arrowview;
    public com.zoffcc.applications.aagtl.GCacheView cacheview;
    public android.widget.RelativeLayout mainscreen_map_view;
    public int mainscreen_map_view_statusbar_height;
    public android.widget.RelativeLayout$LayoutParams layoutParams_mainscreen_map_view;
    public android.widget.TextView status_text;
    public android.webkit.WebView wv;
    public double cur_lat_gps_save;
    public double cur_lon_gps_save;
    public java.lang.String db_path;
    com.zoffcc.applications.aagtl.MapDownloader mdl;
    com.zoffcc.applications.aagtl.HTMLDownloader wdl;
    com.zoffcc.applications.aagtl.PointProvider pv;
    com.zoffcc.applications.aagtl.CacheDownloader cdol;
    public com.zoffcc.applications.aagtl.aagtl$settings global_settings;
    public android.os.Handler toast_handler;
    public android.os.Handler dl_handler;
    private android.os.Handler progress_handler;
    android.os.Handler gcv_Refresh;
    private android.os.Handler handle_status_text;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean $r3, $r6, $r8, $r9;
        android.graphics.RectF $r4, $r5;
        android.os.Handler $r7;
        com.zoffcc.applications.aagtl.aagtl$settings $r10;
        com.zoffcc.applications.aagtl.aagtl$3 $r11;
        com.zoffcc.applications.aagtl.aagtl$4 $r12;
        com.zoffcc.applications.aagtl.aagtl$5 $r13;
        com.zoffcc.applications.aagtl.aagtl$6 $r14;
        com.zoffcc.applications.aagtl.aagtl$7 $r15;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<android.app.Activity: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: boolean __ZOFF_PHONE__> = 0;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_on> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_off> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_current> = null;
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean follow_mode> = $r3;
        $r4 = new android.graphics.RectF;
        specialinvoke $r4.<android.graphics.RectF: void <init>(float,float,float,float)>(-100.0F, 1.0F, 1.0F, 1.0F);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF follow_button_rect> = $r4;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap arrow_button> = null;
        $r5 = new android.graphics.RectF;
        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>(-100.0F, 1.0F, 1.0F, 1.0F);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.RectF arrow_button_rect> = $r5;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_ok> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_cancel> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3> = null;
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean is_lat_current_change_target_coords> = $r6;
        $r7 = new android.os.Handler;
        specialinvoke $r7.<android.os.Handler: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler global_messageHandler> = $r7;
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir> = "/sdcard/zoffcc/applications/aagtl";
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir> = "/sdcard/external_sd/zoffcc/applications/aagtl";
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String status_text_string> = "";
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String status_append_string> = "";
        r0.<com.zoffcc.applications.aagtl.aagtl: android.location.Location mLastLocation> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: long mLastLocationMillis> = -1L;
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix> = $r8;
        r0.<com.zoffcc.applications.aagtl.aagtl: int used_sats> = 0;
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_language> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String sub_language> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.os.PowerManager$WakeLock wl> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationProvider low> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationProvider high> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.hardware.SensorManager sensorManager> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: long last_heading_update> = 0L;
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean show_no_loc_warning> = $r9;
        r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view> = 1;
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.CharSequence[] route_file_items> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String current_routefile_name> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.app.AlertDialog alert> = null;
        r0.<com.zoffcc.applications.aagtl.aagtl: int mainscreen_map_view_statusbar_height> = 30;
        r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lat_gps_save> = -1.0;
        r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lon_gps_save> = -1.0;
        $r10 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r10.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r10;
        $r11 = new com.zoffcc.applications.aagtl.aagtl$3;
        specialinvoke $r11.<com.zoffcc.applications.aagtl.aagtl$3: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler toast_handler> = $r11;
        $r12 = new com.zoffcc.applications.aagtl.aagtl$4;
        specialinvoke $r12.<com.zoffcc.applications.aagtl.aagtl$4: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler dl_handler> = $r12;
        $r13 = new com.zoffcc.applications.aagtl.aagtl$5;
        specialinvoke $r13.<com.zoffcc.applications.aagtl.aagtl$5: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler progress_handler> = $r13;
        $r14 = new com.zoffcc.applications.aagtl.aagtl$6;
        specialinvoke $r14.<com.zoffcc.applications.aagtl.aagtl$6: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler gcv_Refresh> = $r14;
        $r15 = new com.zoffcc.applications.aagtl.aagtl$7;
        specialinvoke $r15.<com.zoffcc.applications.aagtl.aagtl$7: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler handle_status_text> = $r15;
        r2[0] = 1;
        return;
    }

    public static android.location.Criteria createCoarseCriteria()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.location.Criteria r2, $r3;

        $r0 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        $r3 = new android.location.Criteria;
        specialinvoke $r3.<android.location.Criteria: void <init>()>();
        r2 = $r3;
        virtualinvoke r2.<android.location.Criteria: void setAccuracy(int)>(2);
        virtualinvoke r2.<android.location.Criteria: void setAltitudeRequired(boolean)>(0);
        virtualinvoke r2.<android.location.Criteria: void setBearingRequired(boolean)>(0);
        virtualinvoke r2.<android.location.Criteria: void setSpeedRequired(boolean)>(0);
        virtualinvoke r2.<android.location.Criteria: void setCostAllowed(boolean)>(1);
        virtualinvoke r2.<android.location.Criteria: void setPowerRequirement(int)>(3);
        r1[0] = 1;
        return r2;
    }

    public static android.location.Criteria createFineCriteria()
    {
        boolean[][] $r0;
        boolean[] r1;
        android.location.Criteria r2, $r3;

        $r0 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        $r3 = new android.location.Criteria;
        specialinvoke $r3.<android.location.Criteria: void <init>()>();
        r2 = $r3;
        virtualinvoke r2.<android.location.Criteria: void setAccuracy(int)>(1);
        virtualinvoke r2.<android.location.Criteria: void setAltitudeRequired(boolean)>(0);
        virtualinvoke r2.<android.location.Criteria: void setBearingRequired(boolean)>(0);
        virtualinvoke r2.<android.location.Criteria: void setSpeedRequired(boolean)>(0);
        virtualinvoke r2.<android.location.Criteria: void setCostAllowed(boolean)>(1);
        virtualinvoke r2.<android.location.Criteria: void setPowerRequirement(int)>(3);
        r1[0] = 1;
        return r2;
    }

    public void load_settings()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        null_type n0, n1;
        java.lang.StringBuilder $r3, $r13, $r14, $r47, $r48, $r49, $r50, $r51, $r55, $r56, $r57, $r60, $r61, $r62, $r65, $r66, $r67, $r76, $r77, $r78, $r81, $r82, $r83, $r86, $r87, $r88, $r89, $r111, $r112, $r115, $r118, $r119, $r122;
        java.io.FileNotFoundException r4, $r17;
        java.io.StreamCorruptedException r5, $r25;
        java.lang.String r6, r7, r9, $r12, $r15, $r37, r39, $r43, $r45, $r58, $r63, $r68, r72, r73, $r79, $r84, $r90, $r114, $r116, $r121, $r123;
        com.zoffcc.applications.aagtl.StringEnc r8, $r52;
        java.io.PrintStream $r10, $r19, $r27, $r32, $r41, $r54, $r59, $r64, $r69, $r75, $r80, $r110, $r117;
        java.io.FileInputStream $r11, r16;
        java.lang.Boolean $r18, $r26, $r31, $r40, $r53, $r74, $r109;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.zoffcc.applications.aagtl.aagtl$settings $r20, $r28, $r33, $r35, $r36, $r38, $r42, $r44, $r70, $r71, $r85, $r93, $r96, $r99, $r102, $r105, $r113, $r120;
        java.io.BufferedInputStream $r21, r22;
        java.io.ObjectInputStream $r23, r24;
        java.io.IOException $r29, r30, $r97, r98, $r103, r104;
        java.lang.Object $r34;
        java.lang.String[] $r46;
        double $d0, $d1;
        int $i0;
        java.io.OptionalDataException $r91, r92;
        java.lang.ClassNotFoundException $r94, r95;
        java.lang.Exception $r100, r101;
        com.zoffcc.applications.aagtl.GCacheView $r106, $r107;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r108;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r10 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("load settings");
        n0 = null;

     label1:
        $r11 = new java.io.FileInputStream;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/config/settings.cfg");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.io.FileInputStream: void <init>(java.lang.String)>($r15);
        r16 = $r11;
        r2[0] = 1;

     label2:
        goto label5;

     label3:
        $r17 := @caughtexception;
        r4 = $r17;
        $r18 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z0 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();
        r2[1] = 1;
        if $z0 == 0 goto label4;

        $r19 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("FileNotFoundException");
        r2[2] = 1;

     label4:
        $r20 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r20.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r20;
        r2[3] = 1;
        return;

     label5:
        $r21 = new java.io.BufferedInputStream;
        specialinvoke $r21.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r16, 65536);
        r22 = $r21;
        n1 = null;

     label6:
        $r23 = new java.io.ObjectInputStream;
        specialinvoke $r23.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r22);
        r24 = $r23;
        r2[4] = 1;

     label7:
        goto label12;

     label8:
        $r25 := @caughtexception;
        r5 = $r25;
        $r26 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z1 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();
        r2[5] = 1;
        if $z1 == 0 goto label9;

        $r27 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("StreamCorruptedException");
        r2[6] = 1;

     label9:
        $r28 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r28.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r28;
        r2[7] = 1;
        return;

     label10:
        $r29 := @caughtexception;
        r30 = $r29;
        $r31 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z2 = virtualinvoke $r31.<java.lang.Boolean: boolean booleanValue()>();
        r2[8] = 1;
        if $z2 == 0 goto label11;

        $r32 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("IOException");
        r2[9] = 1;

     label11:
        $r33 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r33.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r33;
        r2[10] = 1;
        return;

     label12:
        $r34 = virtualinvoke r24.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r35 = (com.zoffcc.applications.aagtl.aagtl$settings) $r34;
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r35;
        $r36 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r37 = $r36.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string>;
        $z3 = virtualinvoke $r37.<java.lang.String: boolean startsWith(java.lang.String)>("CFG:v2.0:");
        r2[11] = 1;
        if $z3 == 0 goto label15;

        $r38 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        r39 = $r38.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password>;
        $r40 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z4 = virtualinvoke $r40.<java.lang.Boolean: boolean booleanValue()>();
        r2[12] = 1;
        if $z4 == 0 goto label13;

        $r41 = <java.lang.System: java.io.PrintStream out>;
        $r42 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r43 = $r42.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string>;
        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r43);
        r2[13] = 1;

     label13:
        $r44 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r45 = $r44.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string>;
        $r46 = virtualinvoke $r45.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
        r6 = $r46[2];
        $r47 = new java.lang.StringBuilder;
        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aagtl-");
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("52-");
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crypt");
        r7 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();
        $r52 = new com.zoffcc.applications.aagtl.StringEnc;
        specialinvoke $r52.<com.zoffcc.applications.aagtl.StringEnc: void <init>(java.lang.String)>(r7);
        r8 = $r52;
        r9 = virtualinvoke r8.<com.zoffcc.applications.aagtl.StringEnc: java.lang.String decrypt(java.lang.String)>(r39);
        $r53 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z5 = virtualinvoke $r53.<java.lang.Boolean: boolean booleanValue()>();
        r2[14] = 1;
        if $z5 == 0 goto label14;

        $r54 = <java.lang.System: java.io.PrintStream out>;
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Original String  : ");
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r58);
        $r59 = <java.lang.System: java.io.PrintStream out>;
        $r60 = new java.lang.StringBuilder;
        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();
        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         Salt (read) : ");
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>($r63);
        $r64 = <java.lang.System: java.io.PrintStream out>;
        $r65 = new java.lang.StringBuilder;
        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Decrypted String : ");
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>($r68);
        $r69 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r69.<java.io.PrintStream: void println()>();
        r2[15] = 1;

     label14:
        $r70 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r70.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password> = r9;
        r2[16] = 1;
        goto label17;

     label15:
        $r71 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        r72 = $r71.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password>;
        $d0 = staticinvoke <java.lang.Math: double random()>();
        $d1 = 1000.0 * $d0;
        $i0 = (int) $d1;
        r73 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);
        $r74 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z6 = virtualinvoke $r74.<java.lang.Boolean: boolean booleanValue()>();
        r2[17] = 1;
        if $z6 == 0 goto label16;

        $r75 = <java.lang.System: java.io.PrintStream out>;
        $r76 = new java.lang.StringBuilder;
        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Original String  : ");
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r72);
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r79);
        $r80 = <java.lang.System: java.io.PrintStream out>;
        $r81 = new java.lang.StringBuilder;
        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("          Salt (new) : ");
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>($r84);
        r2[18] = 1;

     label16:
        $r85 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r86 = new java.lang.StringBuilder;
        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();
        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CFG:v2.0:");
        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();
        $r85.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string> = $r90;
        r2[19] = 1;

     label17:
        r2[20] = 1;
        goto label22;

     label18:
        $r91 := @caughtexception;
        r92 = $r91;
        $r93 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r93.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r93;
        r2[21] = 1;
        return;

     label19:
        $r94 := @caughtexception;
        r95 = $r94;
        $r96 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r96.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r96;
        r2[22] = 1;
        return;

     label20:
        $r97 := @caughtexception;
        r98 = $r97;
        $r99 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r99.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r99;
        r2[23] = 1;
        return;

     label21:
        $r100 := @caughtexception;
        r101 = $r100;
        $r102 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r102.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r102;
        r2[24] = 1;
        return;

     label22:
        virtualinvoke r24.<java.io.ObjectInputStream: void close()>();
        r2[25] = 1;

     label23:
        goto label25;

     label24:
        $r103 := @caughtexception;
        r104 = $r103;
        $r105 = new com.zoffcc.applications.aagtl.aagtl$settings;
        specialinvoke $r105.<com.zoffcc.applications.aagtl.aagtl$settings: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings> = $r105;
        r2[26] = 1;
        return;

     label25:
        $r106 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        r2[27] = 1;
        if $r106 == null goto label26;

        $r107 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r108 = $r107.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        r2[28] = 1;
        if $r108 != null goto label27;

     label26:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_init_target_cache()>();
        r2[29] = 1;

     label27:
        $r109 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z7 = virtualinvoke $r109.<java.lang.Boolean: boolean booleanValue()>();
        r2[30] = 1;
        if $z7 == 0 goto label28;

        $r110 = <java.lang.System: java.io.PrintStream out>;
        $r111 = new java.lang.StringBuilder;
        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();
        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("settings:");
        $r113 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r114 = $r113.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_username>;
        $r115 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);
        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r110.<java.io.PrintStream: void println(java.lang.String)>($r116);
        $r117 = <java.lang.System: java.io.PrintStream out>;
        $r118 = new java.lang.StringBuilder;
        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();
        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("settings:");
        $r120 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r121 = $r120.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password>;
        $r122 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);
        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r117.<java.io.PrintStream: void println(java.lang.String)>($r123);
        r2[31] = 1;

     label28:
        r2[32] = 1;
        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.StreamCorruptedException from label6 to label7 with label8;
        catch java.io.IOException from label6 to label7 with label10;
        catch java.io.OptionalDataException from label12 to label17 with label18;
        catch java.lang.ClassNotFoundException from label12 to label17 with label19;
        catch java.io.IOException from label12 to label17 with label20;
        catch java.lang.Exception from label12 to label17 with label21;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public void save_settings()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r20, $r21, $r26, $r28, $r29, $r55, $r56, $r57, $r61, $r62, $r63, $r64, $r70, $r71, $r72, $r74, $r75, $r76, $r77, $r78, $r83, $r84, $r85, $r88, $r89, $r90, $r93, $r94, $r95;
        java.io.File r4, r5, $r18, $r23;
        null_type n0, n1, n2;
        java.io.FileNotFoundException r6, $r32;
        java.io.IOException r7, $r39, $r98, r99;
        java.io.ObjectOutputStream r8, $r37, r38, $r44;
        byte[] r9;
        java.io.ObjectInputStream r10, $r46;
        com.zoffcc.applications.aagtl.aagtl$settings r11, $r45, $r60, $r66;
        java.lang.String r12, r13, r16, $r19, $r22, $r24, $r27, $r30, $r49, $r50, r52, $r58, $r65, $r67, $r73, r79, $r86, $r91, $r96;
        java.lang.Exception r14, $r59, $r102, r103;
        com.zoffcc.applications.aagtl.StringEnc r15, $r80;
        java.io.PrintStream $r17, $r34, $r41, $r54, $r69, $r82, $r87, $r92, $r97, $r101, $r105;
        java.io.FileOutputStream $r25, r31;
        java.lang.Boolean $r33, $r40, $r53, $r68, $r81, $r100, $r104;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.io.BufferedOutputStream $r35, r36;
        java.io.ByteArrayOutputStream $r42, r43;
        java.io.ByteArrayInputStream $r47;
        java.lang.Object $r48;
        java.lang.String[] $r51;
        double $d0, $d1;
        int $i0;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r17 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("save settings");
        $r18 = new java.io.File;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r19 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r20 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/config/settings.cfg");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r22);
        r4 = $r18;
        $r23 = new java.io.File;
        $r24 = virtualinvoke r4.<java.io.File: java.lang.String getParent()>();
        specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>($r24);
        r5 = $r23;
        virtualinvoke r5.<java.io.File: boolean mkdirs()>();
        n0 = null;

     label1:
        $r25 = new java.io.FileOutputStream;
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/config/settings.cfg");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r25.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>($r30, 0);
        r31 = $r25;
        r2[0] = 1;

     label2:
        goto label5;

     label3:
        $r32 := @caughtexception;
        r6 = $r32;
        $r33 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z1 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();
        r2[1] = 1;
        if $z1 == 0 goto label4;

        $r34 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("FileNotFoundException");
        r2[2] = 1;

     label4:
        r2[3] = 1;
        return;

     label5:
        $r35 = new java.io.BufferedOutputStream;
        specialinvoke $r35.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r31, 65536);
        r36 = $r35;
        n1 = null;

     label6:
        $r37 = new java.io.ObjectOutputStream;
        specialinvoke $r37.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r36);
        r38 = $r37;
        r2[4] = 1;

     label7:
        goto label10;

     label8:
        $r39 := @caughtexception;
        r7 = $r39;
        $r40 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z2 = virtualinvoke $r40.<java.lang.Boolean: boolean booleanValue()>();
        r2[5] = 1;
        if $z2 == 0 goto label9;

        $r41 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("IOException");
        r2[6] = 1;

     label9:
        r2[7] = 1;
        return;

     label10:
        $r42 = new java.io.ByteArrayOutputStream;
        specialinvoke $r42.<java.io.ByteArrayOutputStream: void <init>()>();
        r43 = $r42;
        $r44 = new java.io.ObjectOutputStream;
        specialinvoke $r44.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r43);
        r8 = $r44;
        $r45 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        virtualinvoke r8.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r45);
        virtualinvoke r8.<java.io.ObjectOutputStream: void close()>();
        r9 = virtualinvoke r43.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        $r46 = new java.io.ObjectInputStream;
        $r47 = new java.io.ByteArrayInputStream;
        specialinvoke $r47.<java.io.ByteArrayInputStream: void <init>(byte[])>(r9);
        specialinvoke $r46.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r47);
        r10 = $r46;
        $r48 = virtualinvoke r10.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        r11 = (com.zoffcc.applications.aagtl.aagtl$settings) $r48;
        virtualinvoke r10.<java.io.ObjectInputStream: void close()>();
        $r49 = r11.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string>;
        $z3 = virtualinvoke $r49.<java.lang.String: boolean startsWith(java.lang.String)>("CFG:v2.0:");
        r2[8] = 1;
        if $z3 == 0 goto label17;

        r12 = r11.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password>;
        r13 = "";

     label11:
        $r50 = r11.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string>;
        $r51 = virtualinvoke $r50.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
        r52 = $r51[2];
        $r53 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z4 = virtualinvoke $r53.<java.lang.Boolean: boolean booleanValue()>();
        r2[9] = 1;
        if $z4 == 0 goto label12;

        $r54 = <java.lang.System: java.io.PrintStream out>;
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using salt: ");
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r58);
        r2[10] = 1;

     label12:
        r2[11] = 1;

     label13:
        goto label15;

     label14:
        $r59 := @caughtexception;
        r14 = $r59;
        $d0 = staticinvoke <java.lang.Math: double random()>();
        $d1 = 1000.0 * $d0;
        $i0 = (int) $d1;
        r52 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);
        $r60 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r61 = new java.lang.StringBuilder;
        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CFG:v2.0:");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        $r60.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string> = $r65;
        $r66 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r67 = $r66.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string>;
        r11.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String download_run_after_string> = $r67;
        $r68 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z5 = virtualinvoke $r68.<java.lang.Boolean: boolean booleanValue()>();
        r2[12] = 1;
        if $z5 == 0 goto label15;

        $r69 = <java.lang.System: java.io.PrintStream out>;
        $r70 = new java.lang.StringBuilder;
        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("generated salt: ");
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>($r73);
        r2[13] = 1;

     label15:
        $r74 = new java.lang.StringBuilder;
        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();
        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aagtl-");
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("52-");
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crypt");
        r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();
        $r80 = new com.zoffcc.applications.aagtl.StringEnc;
        specialinvoke $r80.<com.zoffcc.applications.aagtl.StringEnc: void <init>(java.lang.String)>(r79);
        r15 = $r80;
        r16 = virtualinvoke r15.<com.zoffcc.applications.aagtl.StringEnc: java.lang.String encrypt(java.lang.String)>(r12);
        $r81 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z6 = virtualinvoke $r81.<java.lang.Boolean: boolean booleanValue()>();
        r2[14] = 1;
        if $z6 == 0 goto label16;

        $r82 = <java.lang.System: java.io.PrintStream out>;
        $r83 = new java.lang.StringBuilder;
        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Original String  : ");
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);
        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>($r86);
        $r87 = <java.lang.System: java.io.PrintStream out>;
        $r88 = new java.lang.StringBuilder;
        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         Salt (read) : ");
        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);
        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r87.<java.io.PrintStream: void println(java.lang.String)>($r91);
        $r92 = <java.lang.System: java.io.PrintStream out>;
        $r93 = new java.lang.StringBuilder;
        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();
        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Encrypted String : ");
        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);
        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r92.<java.io.PrintStream: void println(java.lang.String)>($r96);
        $r97 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r97.<java.io.PrintStream: void println()>();
        r2[15] = 1;

     label16:
        r11.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password> = r16;
        r2[16] = 1;

     label17:
        virtualinvoke r38.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r11);
        virtualinvoke r38.<java.io.ObjectOutputStream: void flush()>();
        virtualinvoke r38.<java.io.ObjectOutputStream: void close()>();
        n2 = null;
        r2[17] = 1;

     label18:
        goto label23;

     label19:
        $r98 := @caughtexception;
        r99 = $r98;
        $r100 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z7 = virtualinvoke $r100.<java.lang.Boolean: boolean booleanValue()>();
        r2[18] = 1;
        if $z7 == 0 goto label20;

        $r101 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>("IOException 2");
        r2[19] = 1;

     label20:
        r2[20] = 1;
        return;

     label21:
        $r102 := @caughtexception;
        r103 = $r102;
        $r104 = <com.zoffcc.applications.aagtl.CacheDownloader: java.lang.Boolean DEBUG_>;
        $z8 = virtualinvoke $r104.<java.lang.Boolean: boolean booleanValue()>();
        r2[21] = 1;
        if $z8 == 0 goto label22;

        $r105 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r105.<java.io.PrintStream: void println(java.lang.String)>("**Exception**");
        r2[22] = 1;

     label22:
        r2[23] = 1;
        return;

     label23:
        r2[24] = 1;
        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label6 to label7 with label8;
        catch java.lang.Exception from label11 to label13 with label14;
        catch java.io.IOException from label10 to label18 with label19;
        catch java.lang.Exception from label10 to label18 with label21;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        com.zoffcc.applications.aagtl.aagtl$settings $r4, $r5;
        double $d0, $d1;
        java.io.PrintStream $r6, $r14;
        com.zoffcc.applications.aagtl.GCacheView $r7, $r10;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r8, $r11, $r13;
        java.lang.String $r9;
        com.zoffcc.applications.aagtl.Rose $r12;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d0 = $r4.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat>;
        virtualinvoke r1.<android.os.Bundle: void putDouble(java.lang.String,double)>("global_settings.map_position_lat", $d0);
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d1 = $r5.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon>;
        virtualinvoke r1.<android.os.Bundle: void putDouble(java.lang.String,double)>("global_settings.map_position_lon", $d1);
        $r6 = <java.lang.System: java.io.PrintStream out>;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        virtualinvoke r1.<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>("cacheview.gc", $r11);
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r13 = $r12.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        virtualinvoke r1.<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>("rose.current_target", $r13);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void save_settings()>();
        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);
        $r14 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("save bundle");
        r3[0] = 1;
        return;
    }

    public void onRestoreInstanceState(android.os.Bundle)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        com.zoffcc.applications.aagtl.aagtl$settings $r4, $r5;
        double $d0, $d1;
        java.io.PrintStream $r6;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        specialinvoke r0.<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>(r1);
        $z0 = virtualinvoke r1.<android.os.Bundle: boolean isEmpty()>();
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d0 = virtualinvoke r1.<android.os.Bundle: double getDouble(java.lang.String)>("global_settings.map_position_lat");
        $r4.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat> = $d0;
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d1 = virtualinvoke r1.<android.os.Bundle: double getDouble(java.lang.String)>("global_settings.map_position_lon");
        $r5.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon> = $d1;
        r3[1] = 1;

     label1:
        $r6 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("restore bundle");
        r3[2] = 1;
        return;
    }

    public void set_center(double, double)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        double d0, d1;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.aagtl$settings $r3, $r4;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        d0 := @parameter0: double;
        d1 := @parameter1: double;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r3.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lat> = d0;
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r4.<com.zoffcc.applications.aagtl.aagtl$settings: double map_position_lon> = d1;
        r2[0] = 1;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.os.Bundle r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, r6, r7, r8, r9, $r35, $r39, $r43, $r47, r48, $r51, $r52, r54, $r57, $r58, $r60, $r61, $r62, $r66, $r69, $r71, $r75, $r78, $r82, $r84, $r87, $r90, $r93, $r97, $r100, $r106, $r109, $r129, $r134, $r141, r144, $r162, $r167, $r172, $r177, $r181, $r183, $r265, $r268, $r270, $r272;
        java.util.Locale r5;
        int i0, i1, i2, i9, $i11, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.io.File r10, r11, r18, r28, r29, $r31, $r83, r85, $r86, $r88, $r95, r101, $r104, r110, $r145, $r269, $r271;
        java.io.IOException r12, $r94, $r102, r103;
        android.app.AlertDialog$Builder r13, $r111;
        android.widget.TextView r14, $r114, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r214, $r258;
        android.widget.RelativeLayout$LayoutParams r15, r24, r25, r26, r27, $r115, $r195, $r198, $r207, r208, $r211, r212, $r228, r229, $r233, $r235, $r237, $r239;
        android.text.SpannableString r16, $r116;
        java.lang.Exception r17, r20, r23, $r138, $r149, $r151, r152, $r224;
        java.io.FileOutputStream r19, $r148;
        java.lang.Boolean r21, $r123, $r139, $r146, $r147;
        java.util.List r22;
        null_type n0;
        java.lang.InterruptedException r30, $r273;
        java.lang.StringBuilder $r32, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r42, $r44, $r45, $r46, $r49, $r50, $r53, $r55, $r56, $r59, $r63, $r64, $r65, $r67, $r68, $r70, $r72, $r73, $r74, $r76, $r79, $r80, $r81, $r89, $r91, $r92, $r96, $r98, $r99, $r105, $r107, $r108, $r140, $r142, $r143, $r157, $r158, $r159, $r160, $r161, $r163, $r164, $r166, $r168, $r169, $r171, $r173, $r174, $r176, $r179, $r180, $r182, $r264, $r266, $r267;
        android.text.method.MovementMethod $r117;
        com.zoffcc.applications.aagtl.aagtl$1 $r119;
        com.zoffcc.applications.aagtl.aagtl$2 $r121;
        java.lang.Object $r124, $r136, $r186, $r274;
        android.location.LocationManager $r125, $r126, $r127, $r131, $r132;
        android.location.Criteria $r128, $r133;
        android.location.LocationProvider $r130, $r135;
        android.hardware.SensorManager $r137, $r185, $r188;
        boolean $z6, $z7, $z8, $z10;
        android.view.WindowManager $r153;
        android.view.Display r154;
        android.util.DisplayMetrics $r155, $r156, $r165, $r170, $r175;
        float $f0, $f1;
        java.io.PrintStream $r178;
        android.view.Window $r184;
        android.hardware.Sensor r187;
        com.zoffcc.applications.aagtl.MapDownloader $r189, $r191;
        android.os.Handler $r190;
        com.zoffcc.applications.aagtl.HTMLDownloader $r192, $r194;
        com.zoffcc.applications.aagtl.CacheDownloader $r193;
        android.widget.RelativeLayout $r196, $r197, $r209, $r213, $r230, $r247, $r249, $r251, $r253, $r263;
        com.zoffcc.applications.aagtl.Rose $r206, $r210, $r255;
        android.webkit.WebView $r215, $r216, $r218, $r220, $r222, $r225, $r231, $r259, $r262;
        android.webkit.WebSettings $r217, $r219, $r221, $r226;
        android.view.View r223;
        android.webkit.WebSettings$ZoomDensity $r227;
        com.zoffcc.applications.aagtl.CrossHair $r232, $r248, $r257;
        com.zoffcc.applications.aagtl.GeocachesView $r234, $r250, $r256;
        com.zoffcc.applications.aagtl.ArrowView $r236, $r252, $r260;
        com.zoffcc.applications.aagtl.GCacheView $r238, $r254, $r261;
        android.content.res.Resources $r240, $r242, $r245;
        android.graphics.Bitmap $r241, $r243, $r244, $r246;
        android.os.PowerManager r275;
        android.os.PowerManager$WakeLock $r276;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.os.Bundle;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void setVolumeControlStream(int)>(3);
        $r31 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        r4 = virtualinvoke $r31.<java.io.File: java.lang.String getAbsolutePath()>();
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sdcard dir=");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r35);
        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/zoffcc/applications/aagtl");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir> = $r39;
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/external_sd/zoffcc/applications/aagtl");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir> = $r43;
        r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r6 = virtualinvoke r5.<java.util.Locale: java.lang.String getLanguage()>();
        r7 = r6;
        r8 = r6;
        $r44 = new java.lang.StringBuilder;
        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lang=");
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r47);
        i0 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(95);
        r3[0] = 1;
        if i0 == -1 goto label1;

        r48 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $r49 = new java.lang.StringBuilder;
        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);
        $r51 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(i0);
        $r52 = virtualinvoke $r51.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r5);
        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);
        r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();
        $r55 = new java.lang.StringBuilder;
        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("substring lang ");
        $r57 = virtualinvoke r54.<java.lang.String: java.lang.String substring(int)>(i0);
        $r58 = virtualinvoke $r57.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r5);
        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r60);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_language> = r48;
        $r61 = virtualinvoke r54.<java.lang.String: java.lang.String substring(int)>(i0);
        $r62 = virtualinvoke $r61.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r5);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String sub_language> = $r62;
        r3[1] = 1;
        goto label2;

     label1:
        r9 = virtualinvoke r5.<java.util.Locale: java.lang.String getCountry()>();
        $r63 = new java.lang.StringBuilder;
        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Country1 ");
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r66);
        $r67 = new java.lang.StringBuilder;
        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Country2 ");
        $r69 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r5);
        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r71);
        $r72 = new java.lang.StringBuilder;
        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");
        $r75 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r5);
        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);
        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_language> = r8;
        $r78 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r5);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String sub_language> = $r78;
        r3[2] = 1;

     label2:
        $r79 = new java.lang.StringBuilder;
        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Language ");
        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r82);
        $r83 = new java.io.File;
        $r84 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        specialinvoke $r83.<java.io.File: void <init>(java.lang.String)>($r84);
        r85 = $r83;
        virtualinvoke r85.<java.io.File: boolean mkdirs()>();
        $r86 = new java.io.File;
        $r87 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        specialinvoke $r86.<java.io.File: void <init>(java.lang.String)>($r87);
        r10 = $r86;
        virtualinvoke r10.<java.io.File: boolean mkdirs()>();
        $r88 = new java.io.File;
        $r89 = new java.lang.StringBuilder;
        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();
        $r90 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);
        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.nomedia");
        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r88.<java.io.File: void <init>(java.lang.String)>($r93);
        r11 = $r88;

     label3:
        virtualinvoke r11.<java.io.File: boolean createNewFile()>();
        r3[3] = 1;

     label4:
        goto label6;

     label5:
        $r94 := @caughtexception;
        r12 = $r94;
        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();
        r3[4] = 1;

     label6:
        $r95 = new java.io.File;
        $r96 = new java.lang.StringBuilder;
        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();
        $r97 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);
        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.nomedia");
        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r95.<java.io.File: void <init>(java.lang.String)>($r100);
        r101 = $r95;

     label7:
        virtualinvoke r101.<java.io.File: boolean createNewFile()>();
        r3[5] = 1;

     label8:
        goto label10;

     label9:
        $r102 := @caughtexception;
        r103 = $r102;
        virtualinvoke r103.<java.io.IOException: void printStackTrace()>();
        r3[6] = 1;

     label10:
        $r104 = new java.io.File;
        $r105 = new java.lang.StringBuilder;
        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();
        $r106 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);
        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/routes/");
        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r104.<java.io.File: void <init>(java.lang.String)>($r109);
        r110 = $r104;
        virtualinvoke r110.<java.io.File: boolean mkdirs()>();
        $r111 = new android.app.AlertDialog$Builder;
        specialinvoke $r111.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r13 = $r111;
        virtualinvoke r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Welcome to aagtl");
        virtualinvoke r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0);
        $r114 = new android.widget.TextView;
        specialinvoke $r114.<android.widget.TextView: void <init>(android.content.Context)>(r0);
        r14 = $r114;
        virtualinvoke r14.<android.widget.TextView: void setFadingEdgeLength(int)>(20);
        virtualinvoke r14.<android.widget.TextView: void setVerticalFadingEdgeEnabled(boolean)>(1);
        virtualinvoke r14.<android.widget.TextView: void setVerticalScrollBarEnabled(boolean)>(1);
        $r115 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r115.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);
        r15 = $r115;
        virtualinvoke r14.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r15);
        $r116 = new android.text.SpannableString;
        specialinvoke $r116.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(" You are running aagtl for the first time!\n\n To start enter your geocaching.com \n username and password\n Make sure you have a flatrate or similar!\n\n For more information on aagtl\n visit our Website\n http://aagtl.work.zoff.cc/\n\n       Have fun using aagtl.");
        r16 = $r116;
        staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>(r16, 1);
        virtualinvoke r14.<android.widget.TextView: void setText(java.lang.CharSequence)>(r16);
        $r117 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();
        virtualinvoke r14.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r117);
        virtualinvoke r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r14);
        $r119 = new com.zoffcc.applications.aagtl.aagtl$1;
        specialinvoke $r119.<com.zoffcc.applications.aagtl.aagtl$1: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        virtualinvoke r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Ok", $r119);
        $r121 = new com.zoffcc.applications.aagtl.aagtl$2;
        specialinvoke $r121.<com.zoffcc.applications.aagtl.aagtl$2: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        virtualinvoke r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("More info", $r121);
        $r123 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean show_no_loc_warning> = $r123;

     label11:
        $r124 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Object getSystemService(java.lang.String)>("location");
        $r125 = (android.location.LocationManager) $r124;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm> = $r125;
        $r126 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        $r127 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        $r128 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: android.location.Criteria createCoarseCriteria()>();
        $r129 = virtualinvoke $r127.<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>($r128, 1);
        $r130 = virtualinvoke $r126.<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>($r129);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationProvider low> = $r130;
        $r131 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        $r132 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        $r133 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: android.location.Criteria createFineCriteria()>();
        $r134 = virtualinvoke $r132.<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>($r133, 1);
        $r135 = virtualinvoke $r131.<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>($r134);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationProvider high> = $r135;
        $r136 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Object getSystemService(java.lang.String)>("sensor");
        $r137 = (android.hardware.SensorManager) $r136;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.hardware.SensorManager sensorManager> = $r137;
        r3[7] = 1;

     label12:
        goto label14;

     label13:
        $r138 := @caughtexception;
        r17 = $r138;
        virtualinvoke r17.<java.lang.Exception: void printStackTrace()>();
        virtualinvoke r14.<android.widget.TextView: void setText(java.lang.CharSequence)>("\n You don\'t have any Location providers!\n This program will not work fully!\n");
        $r139 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean show_no_loc_warning> = $r139;
        r3[8] = 1;

     label14:
        $r140 = new java.lang.StringBuilder;
        specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();
        $r141 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r142 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r141);
        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/infobox_seen.txt");
        r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.String toString()>();
        $r145 = new java.io.File;
        specialinvoke $r145.<java.io.File: void <init>(java.lang.String)>(r144);
        r18 = $r145;
        $z6 = virtualinvoke r18.<java.io.File: boolean exists()>();
        r3[9] = 1;
        if $z6 == 0 goto label15;

        $r146 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean show_no_loc_warning>;
        $z7 = virtualinvoke $r146.<java.lang.Boolean: boolean booleanValue()>();
        r3[10] = 1;
        if $z7 == 0 goto label22;

     label15:
        $r147 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean show_no_loc_warning>;
        $z8 = virtualinvoke $r147.<java.lang.Boolean: boolean booleanValue()>();
        r3[11] = 1;
        if $z8 != 0 goto label19;

     label16:
        $r148 = new java.io.FileOutputStream;
        specialinvoke $r148.<java.io.FileOutputStream: void <init>(java.io.File)>(r18);
        r19 = $r148;
        virtualinvoke r19.<java.io.FileOutputStream: void write(int)>(65);
        virtualinvoke r19.<java.io.FileOutputStream: void flush()>();
        virtualinvoke r19.<java.io.FileOutputStream: void close()>();
        r3[12] = 1;

     label17:
        goto label19;

     label18:
        $r149 := @caughtexception;
        r20 = $r149;
        virtualinvoke r20.<java.lang.Exception: void printStackTrace()>();
        r3[13] = 1;

     label19:
        virtualinvoke r13.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();
        r3[14] = 1;

     label20:
        goto label22;

     label21:
        $r151 := @caughtexception;
        r152 = $r151;
        virtualinvoke r152.<java.lang.Exception: void printStackTrace()>();
        r3[15] = 1;

     label22:
        $r153 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.view.WindowManager getWindowManager()>();
        r154 = interfaceinvoke $r153.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();
        i9 = virtualinvoke r154.<android.view.Display: int getWidth()>();
        i1 = virtualinvoke r154.<android.view.Display: int getHeight()>();
        $r155 = new android.util.DisplayMetrics;
        specialinvoke $r155.<android.util.DisplayMetrics: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: android.util.DisplayMetrics metrics> = $r155;
        $r156 = r0.<com.zoffcc.applications.aagtl.aagtl: android.util.DisplayMetrics metrics>;
        virtualinvoke r154.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r156);
        $r157 = new java.lang.StringBuilder;
        specialinvoke $r157.<java.lang.StringBuilder: void <init>()>();
        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aagtl -> pixels x=");
        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pixels y=");
        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r162);
        $r163 = new java.lang.StringBuilder;
        specialinvoke $r163.<java.lang.StringBuilder: void <init>()>();
        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aagtl -> dpi=");
        $r165 = r0.<com.zoffcc.applications.aagtl.aagtl: android.util.DisplayMetrics metrics>;
        $i11 = $r165.<android.util.DisplayMetrics: int densityDpi>;
        $r166 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);
        $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r167);
        $r168 = new java.lang.StringBuilder;
        specialinvoke $r168.<java.lang.StringBuilder: void <init>()>();
        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aagtl -> density=");
        $r170 = r0.<com.zoffcc.applications.aagtl.aagtl: android.util.DisplayMetrics metrics>;
        $f0 = $r170.<android.util.DisplayMetrics: float density>;
        $r171 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r172);
        $r173 = new java.lang.StringBuilder;
        specialinvoke $r173.<java.lang.StringBuilder: void <init>()>();
        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aagtl -> scaledDensity=");
        $r175 = r0.<com.zoffcc.applications.aagtl.aagtl: android.util.DisplayMetrics metrics>;
        $f1 = $r175.<android.util.DisplayMetrics: float scaledDensity>;
        $r176 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);
        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("aagtl", $r177);
        $r178 = <java.lang.System: java.io.PrintStream out>;
        $r179 = new java.lang.StringBuilder;
        specialinvoke $r179.<java.lang.StringBuilder: void <init>()>();
        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Create: ");
        $r181 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);
        $r182 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r181);
        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r178.<java.io.PrintStream: void println(java.lang.String)>($r183);
        r3[16] = 1;
        if r1 == null goto label23;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void onRestoreInstanceState(android.os.Bundle)>(r1);
        r3[17] = 1;

     label23:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void load_settings()>();
        $r184 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.view.Window getWindow()>();
        virtualinvoke $r184.<android.view.Window: void setFlags(int,int)>(0, 0);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: boolean requestWindowFeature(int)>(0);
        r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $z10 = virtualinvoke r21.<java.lang.Boolean: boolean booleanValue()>();
        r3[18] = 1;
        if $z10 == 0 goto label26;

        $r185 = r0.<com.zoffcc.applications.aagtl.aagtl: android.hardware.SensorManager sensorManager>;
        r22 = virtualinvoke $r185.<android.hardware.SensorManager: java.util.List getSensorList(int)>(-1);
        n0 = null;
        i2 = 0;
        r3[19] = 1;

     label24:
        $i15 = interfaceinvoke r22.<java.util.List: int size()>();
        r3[20] = 1;
        if i2 >= $i15 goto label26;

        $r186 = interfaceinvoke r22.<java.util.List: java.lang.Object get(int)>(i2);
        r187 = (android.hardware.Sensor) $r186;
        r3[21] = 1;
        if r187 == null goto label25;

        $r188 = r0.<com.zoffcc.applications.aagtl.aagtl: android.hardware.SensorManager sensorManager>;
        virtualinvoke $r188.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>(r0, r187, 3);
        r3[22] = 1;

     label25:
        i2 = i2 + 1;
        r3[23] = 1;
        goto label24;

     label26:
        $r189 = new com.zoffcc.applications.aagtl.MapDownloader;
        $r190 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler global_messageHandler>;
        specialinvoke $r189.<com.zoffcc.applications.aagtl.MapDownloader: void <init>(android.os.Handler,com.zoffcc.applications.aagtl.aagtl)>($r190, r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl> = $r189;
        $r191 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        virtualinvoke $r191.<com.zoffcc.applications.aagtl.MapDownloader: void start()>();
        $r192 = new com.zoffcc.applications.aagtl.HTMLDownloader;
        specialinvoke $r192.<com.zoffcc.applications.aagtl.HTMLDownloader: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.HTMLDownloader wdl> = $r192;
        $r193 = new com.zoffcc.applications.aagtl.CacheDownloader;
        $r194 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.HTMLDownloader wdl>;
        specialinvoke $r193.<com.zoffcc.applications.aagtl.CacheDownloader: void <init>(com.zoffcc.applications.aagtl.aagtl,com.zoffcc.applications.aagtl.HTMLDownloader)>(r0, $r194);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CacheDownloader cdol> = $r193;
        $r195 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r195.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout$LayoutParams layoutParams_mainscreen_map_view> = $r195;
        $r196 = new android.widget.RelativeLayout;
        specialinvoke $r196.<android.widget.RelativeLayout: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view> = $r196;
        $r197 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r198 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout$LayoutParams layoutParams_mainscreen_map_view>;
        virtualinvoke $r197.<android.widget.RelativeLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r198);
        $r199 = new android.widget.TextView;
        specialinvoke $r199.<android.widget.TextView: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text> = $r199;
        $r200 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r200.<android.widget.TextView: void setBackgroundColor(int)>(-16777216);
        $r201 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r201.<android.widget.TextView: void setTextColor(int)>(-1);
        $r202 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r202.<android.widget.TextView: void setMaxLines(int)>(1);
        $r203 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r203.<android.widget.TextView: void setTextSize(float)>(12.0F);
        $r204 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r204.<android.widget.TextView: void setText(java.lang.CharSequence)>("--- --- --- --- ---");
        $r205 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r205.<android.widget.TextView: void setVisibility(int)>(0);
        $r206 = new com.zoffcc.applications.aagtl.Rose;
        specialinvoke $r206.<com.zoffcc.applications.aagtl.Rose: void <init>(android.content.Context,com.zoffcc.applications.aagtl.aagtl)>(r0, r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose> = $r206;
        $r207 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r207.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);
        r208 = $r207;
        $i16 = r0.<com.zoffcc.applications.aagtl.aagtl: int mainscreen_map_view_statusbar_height>;
        r208.<android.widget.RelativeLayout$LayoutParams: int bottomMargin> = $i16;
        virtualinvoke r208.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(10);
        $r209 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r210 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r209.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r210, r208);
        $r211 = new android.widget.RelativeLayout$LayoutParams;
        $i17 = r0.<com.zoffcc.applications.aagtl.aagtl: int mainscreen_map_view_statusbar_height>;
        specialinvoke $r211.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, $i17);
        r212 = $r211;
        virtualinvoke r212.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(12);
        $r213 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r214 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r213.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r214, r212);
        $r215 = new android.webkit.WebView;
        specialinvoke $r215.<android.webkit.WebView: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv> = $r215;
        $r216 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        $r217 = virtualinvoke $r216.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();
        virtualinvoke $r217.<android.webkit.WebSettings: void setSupportZoom(boolean)>(1);
        $r218 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        $r219 = virtualinvoke $r218.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();
        virtualinvoke $r219.<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>(1);
        $r220 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        $r221 = virtualinvoke $r220.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();
        virtualinvoke $r221.<android.webkit.WebSettings: void setDefaultFontSize(int)>(13);
        $r222 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        r223 = virtualinvoke $r222.<android.webkit.WebView: android.view.View getZoomControls()>();

     label27:
        virtualinvoke r223.<android.view.View: void setVisibility(int)>(4);
        r3[24] = 1;

     label28:
        goto label30;

     label29:
        $r224 := @caughtexception;
        r23 = $r224;
        virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();
        r3[25] = 1;

     label30:
        $r225 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        $r226 = virtualinvoke $r225.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();
        $r227 = <android.webkit.WebSettings$ZoomDensity: android.webkit.WebSettings$ZoomDensity MEDIUM>;
        virtualinvoke $r226.<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)>($r227);
        $r228 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r228.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);
        r229 = $r228;
        $r230 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r231 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r230.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r231, r229);
        $r232 = new com.zoffcc.applications.aagtl.CrossHair;
        specialinvoke $r232.<com.zoffcc.applications.aagtl.CrossHair: void <init>(android.content.Context,com.zoffcc.applications.aagtl.aagtl)>(r0, r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross> = $r232;
        $r233 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r233.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);
        r24 = $r233;
        $r234 = new com.zoffcc.applications.aagtl.GeocachesView;
        specialinvoke $r234.<com.zoffcc.applications.aagtl.GeocachesView: void <init>(android.content.Context,com.zoffcc.applications.aagtl.aagtl)>(r0, r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview> = $r234;
        $r235 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r235.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);
        r25 = $r235;
        $r236 = new com.zoffcc.applications.aagtl.ArrowView;
        specialinvoke $r236.<com.zoffcc.applications.aagtl.ArrowView: void <init>(android.content.Context,com.zoffcc.applications.aagtl.aagtl)>(r0, r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview> = $r236;
        $r237 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r237.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);
        r26 = $r237;
        $r238 = new com.zoffcc.applications.aagtl.GCacheView;
        specialinvoke $r238.<com.zoffcc.applications.aagtl.GCacheView: void <init>(android.content.Context,com.zoffcc.applications.aagtl.aagtl)>(r0, r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview> = $r238;
        $r239 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r239.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);
        r27 = $r239;
        $r240 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.res.Resources getResources()>();
        $r241 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r240, 2130837505);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_on> = $r241;
        $r242 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.res.Resources getResources()>();
        $r243 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r242, 2130837506);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_off> = $r243;
        $r244 = r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_on>;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_current> = $r244;
        $r245 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.res.Resources getResources()>();
        $r246 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r245, 2130837504);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap arrow_button> = $r246;
        $i18 = r0.<com.zoffcc.applications.aagtl.aagtl: int mainscreen_map_view_statusbar_height>;
        r24.<android.widget.RelativeLayout$LayoutParams: int bottomMargin> = $i18;
        $i19 = r0.<com.zoffcc.applications.aagtl.aagtl: int mainscreen_map_view_statusbar_height>;
        r25.<android.widget.RelativeLayout$LayoutParams: int bottomMargin> = $i19;
        $i20 = r0.<com.zoffcc.applications.aagtl.aagtl: int mainscreen_map_view_statusbar_height>;
        r26.<android.widget.RelativeLayout$LayoutParams: int bottomMargin> = $i20;
        $i21 = r0.<com.zoffcc.applications.aagtl.aagtl: int mainscreen_map_view_statusbar_height>;
        r27.<android.widget.RelativeLayout$LayoutParams: int bottomMargin> = $i21;
        $i22 = r0.<com.zoffcc.applications.aagtl.aagtl: int mainscreen_map_view_statusbar_height>;
        r229.<android.widget.RelativeLayout$LayoutParams: int bottomMargin> = $i22;
        r229.<android.widget.RelativeLayout$LayoutParams: int topMargin> = 240;
        $r247 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r248 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r247.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r248, r24);
        $r249 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r250 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r249.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r250, r25);
        $r251 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r252 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r251.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r252, r26);
        $r253 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r254 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r253.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r254, r27);
        $r255 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r255.<com.zoffcc.applications.aagtl.Rose: void bringToFront()>();
        $r256 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r256.<com.zoffcc.applications.aagtl.GeocachesView: void bringToFront()>();
        $r257 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r257.<com.zoffcc.applications.aagtl.CrossHair: void bringToFront()>();
        $r258 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r258.<android.widget.TextView: void bringToFront()>();
        $r259 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r259.<android.webkit.WebView: void bringToFront()>();
        $r260 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r260.<com.zoffcc.applications.aagtl.ArrowView: void setVisibility(int)>(4);
        $r261 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r261.<com.zoffcc.applications.aagtl.GCacheView: void setVisibility(int)>(4);
        $r262 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r262.<android.webkit.WebView: void setVisibility(int)>(4);
        $r263 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void setContentView(android.view.View)>($r263);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(1);
        $r264 = new java.lang.StringBuilder;
        specialinvoke $r264.<java.lang.StringBuilder: void <init>()>();
        $r265 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_data_dir>;
        $r266 = virtualinvoke $r264.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r265);
        $r267 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/config/caches.db");
        $r268 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String db_path> = $r268;
        $r269 = new java.io.File;
        $r270 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String db_path>;
        specialinvoke $r269.<java.io.File: void <init>(java.lang.String)>($r270);
        r28 = $r269;
        $r271 = new java.io.File;
        $r272 = virtualinvoke r28.<java.io.File: java.lang.String getParent()>();
        specialinvoke $r271.<java.io.File: void <init>(java.lang.String)>($r272);
        r29 = $r271;
        virtualinvoke r29.<java.io.File: boolean mkdirs()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_off_gps()>();

     label31:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
        r3[26] = 1;

     label32:
        goto label34;

     label33:
        $r273 := @caughtexception;
        r30 = $r273;
        virtualinvoke r30.<java.lang.InterruptedException: void printStackTrace()>();
        r3[27] = 1;

     label34:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_on_gps()>();
        $r274 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Object getSystemService(java.lang.String)>("power");
        r275 = (android.os.PowerManager) $r274;
        $r276 = virtualinvoke r275.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(536870938, "aagtlWakeLock");
        r0.<com.zoffcc.applications.aagtl.aagtl: android.os.PowerManager$WakeLock wl> = $r276;
        r3[28] = 1;
        return;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.io.IOException from label7 to label8 with label9;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.InterruptedException from label31 to label32 with label33;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.view.Menu;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        specialinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);
        r3[0] = 1;
        return 1;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.view.Menu r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4;
        int $i0;
        boolean $z1, $z2, $z3;
        com.zoffcc.applications.aagtl.aagtl$settings $r21, $r41;
        java.lang.Boolean $r22, $r42;
        com.zoffcc.applications.aagtl.Rose $r44;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r45;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.view.Menu;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        specialinvoke r0.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r1);
        $i0 = r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view>;
        r3[0] = 1;
        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label9;
        };

     label1:
        interfaceinvoke r1.<android.view.Menu: void clear()>();
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 2, 20, "zoom in");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 3, 22, "zoom out");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 4, 30, "maptype: OSM");
        $z1 = r0.<com.zoffcc.applications.aagtl.aagtl: boolean __ZOFF_PHONE__>;
        r3[1] = 1;
        if $z1 == 0 goto label2;

        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 5, 32, "maptype: Sat");
        r3[2] = 1;
        goto label3;

     label2:
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 29, 33, "maptype: OCM");
        r3[3] = 1;

     label3:
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 1, 40, "get caches in view");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 20, 41, "get details in view");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 21, 42, "turn on GPS");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 22, 43, "turn off GPS");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 25, 44, "show arrow view");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 30, 45, "navigate to target");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 32, 46, "change target lat.");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 33, 47, "change target lon.");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 27, 49, "select routefile");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 28, 50, "get caches from routefile");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 23, 51, "upload fieldnotes");
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r22 = $r21.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z2 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();
        r3[4] = 1;
        if $z2 == 0 goto label4;

        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 26, 52, "turn off rotating map");
        r3[5] = 1;
        goto label5;

     label4:
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 26, 52, "turn on rotating map");
        r3[6] = 1;

     label5:
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 6, 78, "-");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 19, 79, "set username/password");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 6, 80, "-");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 7, 82, "empty database");
        r3[7] = 1;
        goto label9;

     label6:
        interfaceinvoke r1.<android.view.Menu: void clear()>();
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 8, 20, "map view");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 14, 22, "update details");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 9, 24, "set as target -> map");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 10, 26, "set as target -> arrow");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 15, 28, "description");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 16, 30, "hints");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 17, 32, "logs");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 34, 33, "waypoints");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 18, 34, "shorttext");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 31, 35, "show Cache website");
        r3[8] = 1;
        goto label9;

     label7:
        interfaceinvoke r1.<android.view.Menu: void clear()>();
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 11, 20, "cache view");
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 12, 22, "map view");
        r4 = "use compass heading";
        $r41 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r42 = $r41.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_use_compass_heading>;
        $z3 = virtualinvoke $r42.<java.lang.Boolean: boolean booleanValue()>();
        r3[9] = 1;
        if $z3 == 0 goto label8;

        r4 = "use gps heading";
        r3[10] = 1;

     label8:
        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 13, 24, r4);
        $r44 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r45 = $r44.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r3[11] = 1;
        if $r45 == null goto label9;

        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 24, 26, "post fieldnote");
        r3[12] = 1;

     label9:
        r3[13] = 1;
        return 1;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.hardware.SensorEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Boolean r4, $r8, $r9, $r12;
        double d0;
        long l0, $l4, $l5, $l6, $l8, $l9;
        android.hardware.Sensor $r5, $r6;
        int $i1, $i2, $i3;
        com.zoffcc.applications.aagtl.aagtl$settings $r7, $r11;
        boolean $z0, $z1, $z2, $z3;
        float[] $r10;
        float $f0;
        byte $b7;
        com.zoffcc.applications.aagtl.CrossHair $r13, $r14, $r16, $r17;
        com.zoffcc.applications.aagtl.ArrowView $r15, $r18;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.hardware.SensorEvent;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        $r5 = r1.<android.hardware.SensorEvent: android.hardware.Sensor sensor>;
        $i1 = virtualinvoke $r5.<android.hardware.Sensor: int getType()>();
        r3[0] = 1;
        if $i1 != 2 goto label1;

        r3[1] = 1;
        return;

     label1:
        $r6 = r1.<android.hardware.SensorEvent: android.hardware.Sensor sensor>;
        $i2 = virtualinvoke $r6.<android.hardware.Sensor: int getType()>();
        r3[2] = 1;
        if $i2 != 3 goto label8;

        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_use_compass_heading>;
        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();
        r3[3] = 1;
        if $z0 == 0 goto label2;

        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r3[4] = 1;
        goto label3;

     label2:
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix>;
        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();
        r3[5] = 1;
        if $z1 != 0 goto label3;

        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r3[6] = 1;

     label3:
        $z2 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();
        r3[7] = 1;
        if $z2 == 0 goto label8;

        $r10 = r1.<android.hardware.SensorEvent: float[] values>;
        $f0 = $r10[0];
        d0 = (double) $f0;
        $i3 = r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view>;
        r3[8] = 1;
        if $i3 != 1 goto label7;

        l0 = 1000L;
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r12 = $r11.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z3 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();
        r3[9] = 1;
        if $z3 == 0 goto label4;

        l0 = 400L;
        r3[10] = 1;

     label4:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l5 = r0.<com.zoffcc.applications.aagtl.aagtl: long last_heading_update>;
        $l6 = $l4 - $l5;
        $b7 = $l6 cmp l0;
        r3[11] = 1;
        if $b7 >= 0 goto label5;

        r3[12] = 1;
        goto label6;

     label5:
        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: long last_heading_update> = $l8;
        $r13 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r13.<com.zoffcc.applications.aagtl.CrossHair: void set_gps_heading(double)>(d0);
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r14.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        $r15 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r15.<com.zoffcc.applications.aagtl.ArrowView: void invalidate()>();
        r3[13] = 1;

     label6:
        r3[14] = 1;
        goto label8;

     label7:
        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: long last_heading_update> = $l9;
        $r16 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r16.<com.zoffcc.applications.aagtl.CrossHair: void set_gps_heading(double)>(d0);
        $r17 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r17.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r18.<com.zoffcc.applications.aagtl.ArrowView: void invalidate()>();
        r3[15] = 1;

     label8:
        r3[16] = 1;
        return;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.hardware.Sensor r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.hardware.Sensor;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        r3[0] = 1;
        return;
    }

    public void onBackPressed()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;
        com.zoffcc.applications.aagtl.Rose $r3;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r4;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $i0 = r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view>;
        r2[0] = 1;
        if $i0 != 1 goto label1;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void finish()>();
        r2[1] = 1;
        goto label4;

     label1:
        $i1 = r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view>;
        r2[2] = 1;
        if $i1 != 2 goto label2;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(1);
        r2[3] = 1;
        goto label4;

     label2:
        $i2 = r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view>;
        r2[4] = 1;
        if $i2 != 3 goto label4;

        $r3 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r4 = $r3.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r2[5] = 1;
        if $r4 == null goto label3;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(2);
        r2[6] = 1;
        goto label4;

     label3:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(1);
        r2[7] = 1;

     label4:
        r2[8] = 1;
        return;
    }

    public void set_init_target_cache()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r6, $r21, $r23, $r29, $r35;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r4, $r7;
        com.zoffcc.applications.aagtl.aagtl$settings $r5, $r8, $r9, $r15, $r20, $r27, $r33;
        int $i0;
        double $d0, $d1, $d2, $d3;
        com.zoffcc.applications.aagtl.GCacheView $r10, $r12;
        java.io.PrintStream $r11, $r14, $r16, $r17, $r24, $r30;
        com.zoffcc.applications.aagtl.Rose $r13, $r36;
        java.lang.StringBuilder $r18, $r19, $r22, $r25, $r26, $r28, $r31, $r32, $r34;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r6 = $r5.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String last_target_name>;
        $i0 = virtualinvoke $r6.<java.lang.String: int compareTo(java.lang.String)>("default");
        r2[0] = 1;
        if $i0 != 0 goto label1;

        r2[1] = 1;
        goto label3;

     label1:
        r3 = "last target";
        $r7 = new com.zoffcc.applications.aagtl.GeocacheCoordinate;
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d0 = $r8.<com.zoffcc.applications.aagtl.aagtl$settings: double last_target_lat>;
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d1 = $r9.<com.zoffcc.applications.aagtl.aagtl$settings: double last_target_lon>;
        specialinvoke $r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: void <init>(double,double,java.lang.String)>($d0, $d1, r3);
        r4 = $r7;
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        r2[2] = 1;
        if $r10 == null goto label2;

        $r11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("xxxxx1");
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r12.<com.zoffcc.applications.aagtl.GCacheView: void set_cache(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r4);
        r2[3] = 1;

     label2:
        $r13 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        r2[4] = 1;
        if $r13 == null goto label3;

        $r14 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("xxxxx2");
        $r15 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        r2[5] = 1;
        if $r15 == null goto label3;

        $r16 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("xxxxx3");
        $r17 = <java.lang.System: java.io.PrintStream out>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r20 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r21 = $r20.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String last_target_name>;
        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r23);
        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r27 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d2 = $r27.<com.zoffcc.applications.aagtl.aagtl$settings: double last_target_lat>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
        $r30 = <java.lang.System: java.io.PrintStream out>;
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r33 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $d3 = $r33.<com.zoffcc.applications.aagtl.aagtl$settings: double last_target_lon>;
        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r35);
        $r36 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r36.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target> = r4;
        r2[6] = 1;

     label3:
        r2[7] = 1;
        return;
    }

    public void set_target()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.Rose $r3, $r7, $r10, $r15;
        com.zoffcc.applications.aagtl.GCacheView $r4;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r5, $r8, $r11, $r16;
        com.zoffcc.applications.aagtl.aagtl$settings $r6, $r9, $r12;
        double $d0, $d1;
        java.lang.StringBuilder $r13, $r14, $r18;
        java.lang.String $r17, $r19;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r5 = virtualinvoke $r4.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate get_cache()>();
        $r3.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target> = $r5;
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $d0 = $r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat>;
        $r6.<com.zoffcc.applications.aagtl.aagtl$settings: double last_target_lat> = $d0;
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r11 = $r10.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $d1 = $r11.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon>;
        $r9.<com.zoffcc.applications.aagtl.aagtl$settings: double last_target_lon> = $d1;
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GC:");
        $r15 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r16 = $r15.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $r17 = $r16.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        $r12.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String last_target_name> = $r19;
        r2[0] = 1;
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.view.MenuItem r1;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Intent r4, r5, $r43, $r56;
        java.util.Calendar r6;
        java.text.SimpleDateFormat r7, $r65;
        int $i0, $i1;
        java.lang.Boolean $r8, $r16, $r17, $r20, $r23, $r25, $r29, $r33, $r37, $r41, $r51, $r76, $r77, $r93;
        com.zoffcc.applications.aagtl.Rose $r9, $r10, $r11, $r12, $r59, $r82, $r83, $r87;
        com.zoffcc.applications.aagtl.PointProvider $r13;
        com.zoffcc.applications.aagtl.aagtl$settings $r14, $r15, $r45, $r48, $r74, $r75;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.zoffcc.applications.aagtl.GCacheView $r18, $r19, $r21, $r22, $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r35, $r36, $r38, $r39, $r40, $r42, $r91, $r92, $r94;
        java.lang.String $r46, $r49, $r61, $r63, $r69, $r72;
        com.zoffcc.applications.aagtl.CrossHair $r52, $r54;
        com.zoffcc.applications.aagtl.ArrowView $r53, $r55;
        java.lang.StringBuilder $r57, $r58, $r62, $r66, $r67, $r70, $r71;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r60, $r84, $r88;
        java.util.Date $r68;
        java.util.List $r78, $r79;
        android.content.Context $r80, $r85, $r89;
        android.widget.Toast $r81, $r86, $r90;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.view.MenuItem;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();
        r3[0] = 1;
        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label8;
            case 9: goto label9;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label16;
            case 15: goto label17;
            case 16: goto label18;
            case 17: goto label19;
            case 18: goto label20;
            case 19: goto label21;
            case 20: goto label22;
            case 21: goto label23;
            case 22: goto label24;
            case 23: goto label25;
            case 24: goto label26;
            case 25: goto label27;
            case 26: goto label28;
            case 27: goto label31;
            case 28: goto label32;
            case 29: goto label35;
            case 30: goto label36;
            case 31: goto label37;
            case 32: goto label38;
            case 33: goto label41;
            case 34: goto label44;
            default: goto label45;
        };

     label1:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void download_caches_in_visible_view(java.lang.Boolean)>($r8);
        r3[1] = 1;
        return 1;

     label2:
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r9.<com.zoffcc.applications.aagtl.Rose: void zoom_in()>();
        r3[2] = 1;
        return 1;

     label3:
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r10.<com.zoffcc.applications.aagtl.Rose: void zoom_out()>();
        r3[3] = 1;
        return 1;

     label4:
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r11.<com.zoffcc.applications.aagtl.Rose: void change_map_type(int)>(1);
        r3[4] = 1;
        return 1;

     label5:
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r12.<com.zoffcc.applications.aagtl.Rose: void change_map_type(int)>(3);
        r3[5] = 1;
        return 1;

     label6:
        r3[6] = 1;
        return 1;

     label7:
        $r13 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r13.<com.zoffcc.applications.aagtl.PointProvider: void _clear_database_()>();
        r3[7] = 1;
        return 1;

     label8:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(1);
        r3[8] = 1;
        return 1;

     label9:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_target()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(1);
        r3[9] = 1;
        return 1;

     label10:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_target()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(3);
        r3[10] = 1;
        return 1;

     label11:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(2);
        r3[11] = 1;
        return 1;

     label12:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(1);
        r3[12] = 1;
        return 1;

     label13:
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r15 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r16 = $r15.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_use_compass_heading>;
        $z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();
        r3[13] = 1;
        if $z0 != 0 goto label14;

        $z1 = 1;
        r3[14] = 1;
        goto label15;

     label14:
        $z1 = 0;
        r3[15] = 1;

     label15:
        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);
        $r14.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_use_compass_heading> = $r17;
        r3[16] = 1;
        return 1;

     label16:
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r18.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded> = 0;
        $r19 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        $r19.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean download_details_thread_finished> = $r20;
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r21.<com.zoffcc.applications.aagtl.GCacheView: java.lang.String gc_name_previous> = "";
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r22.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r23;
        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r24.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean override_download> = $r25;
        $r26 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r26.<com.zoffcc.applications.aagtl.GCacheView: void invalidate()>();
        r3[17] = 1;
        return 1;

     label17:
        $r27 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r27.<com.zoffcc.applications.aagtl.GCacheView: int show_field> = 1;
        $r28 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r28.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r29;
        $r30 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r30.<com.zoffcc.applications.aagtl.GCacheView: void invalidate()>();
        r3[18] = 1;
        return 1;

     label18:
        $r31 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r31.<com.zoffcc.applications.aagtl.GCacheView: int show_field> = 4;
        $r32 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r32.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r33;
        $r34 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r34.<com.zoffcc.applications.aagtl.GCacheView: void invalidate()>();
        r3[19] = 1;
        return 1;

     label19:
        $r35 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r35.<com.zoffcc.applications.aagtl.GCacheView: int show_field> = 3;
        $r36 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r36.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r37;
        $r38 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r38.<com.zoffcc.applications.aagtl.GCacheView: void invalidate()>();
        r3[20] = 1;
        return 1;

     label20:
        $r39 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r39.<com.zoffcc.applications.aagtl.GCacheView: int show_field> = 2;
        $r40 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r40.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r41;
        $r42 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r42.<com.zoffcc.applications.aagtl.GCacheView: void invalidate()>();
        r3[21] = 1;
        return 1;

     label21:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void save_settings()>();
        $r43 = new android.content.Intent;
        specialinvoke $r43.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/zoffcc/applications/aagtl/TextEntryActivity");
        r4 = $r43;
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", "Enter geocaching.com userdetails");
        $r45 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r46 = $r45.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_username>;
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("username", $r46);
        $r48 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r49 = $r48.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password>;
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("password", $r49);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void startActivityForResult(android.content.Intent,int)>(r4, 7);
        r3[22] = 1;
        return 1;

     label22:
        $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void download_caches_in_visible_view(java.lang.Boolean)>($r51);
        r3[23] = 1;
        return 1;

     label23:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_on_gps()>();
        $r52 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r52.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        $r53 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r53.<com.zoffcc.applications.aagtl.ArrowView: void invalidate()>();
        r3[24] = 1;
        return 1;

     label24:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_off_gps()>();
        $r54 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r54.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        $r55 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r55.<com.zoffcc.applications.aagtl.ArrowView: void invalidate()>();
        r3[25] = 1;
        return 1;

     label25:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void upload_fieldnotes()>();
        r3[26] = 1;
        return 1;

     label26:
        $r56 = new android.content.Intent;
        specialinvoke $r56.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/zoffcc/applications/aagtl/PostLogEntryActivity");
        r5 = $r56;
        $r57 = new java.lang.StringBuilder;
        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fieldnote for ");
        $r59 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r60 = $r59.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $r61 = $r60.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r62 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r63);
        r6 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
        $r65 = new java.text.SimpleDateFormat;
        specialinvoke $r65.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm");
        r7 = $r65;
        $r66 = new java.lang.StringBuilder;
        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nTFTC\n");
        $r68 = virtualinvoke r6.<java.util.Calendar: java.util.Date getTime()>();
        $r69 = virtualinvoke r7.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r68);
        $r70 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("msg", $r72);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void startActivityForResult(android.content.Intent,int)>(r5, 8);
        r3[27] = 1;
        return 1;

     label27:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_display_screen(int)>(3);
        r3[28] = 1;
        return 1;

     label28:
        $r74 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r75 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r76 = $r75.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading>;
        $z2 = virtualinvoke $r76.<java.lang.Boolean: boolean booleanValue()>();
        r3[29] = 1;
        if $z2 != 0 goto label29;

        $z3 = 1;
        r3[30] = 1;
        goto label30;

     label29:
        $z3 = 0;
        r3[31] = 1;

     label30:
        $r77 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);
        $r74.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_turn_map_on_heading> = $r77;
        r3[32] = 1;
        return 1;

     label31:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void get_route_files()>();
        r3[33] = 1;
        return 1;

     label32:
        $r78 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches>;
        r3[34] = 1;
        if $r78 == null goto label33;

        $r79 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches>;
        $i1 = interfaceinvoke $r79.<java.util.List: int size()>();
        r3[35] = 1;
        if $i1 <= 0 goto label33;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void showDialog(int)>(3);
        r3[36] = 1;
        goto label34;

     label33:
        $r80 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r81 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r80, "No caches in Route!", 0);
        virtualinvoke $r81.<android.widget.Toast: void show()>();
        r3[37] = 1;

     label34:
        r3[38] = 1;
        return 1;

     label35:
        $r82 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r82.<com.zoffcc.applications.aagtl.Rose: void change_map_type(int)>(2);
        r3[39] = 1;
        return 1;

     label36:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void navigate_to_target()>();
        r3[40] = 1;
        return 1;

     label37:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void show_cache_page_in_browser()>();
        r3[41] = 1;
        return 1;

     label38:
        $r83 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r84 = $r83.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r3[42] = 1;
        if $r84 == null goto label39;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void change_target_coords_lat()>();
        r3[43] = 1;
        goto label40;

     label39:
        $r85 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r86 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r85, "No target selected", 0);
        virtualinvoke $r86.<android.widget.Toast: void show()>();
        r3[44] = 1;

     label40:
        r3[45] = 1;
        return 1;

     label41:
        $r87 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r88 = $r87.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r3[46] = 1;
        if $r88 == null goto label42;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void change_target_coords_lon()>();
        r3[47] = 1;
        goto label43;

     label42:
        $r89 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r90 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r89, "No target selected", 0);
        virtualinvoke $r90.<android.widget.Toast: void show()>();
        r3[48] = 1;

     label43:
        r3[49] = 1;
        return 1;

     label44:
        $r91 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r91.<com.zoffcc.applications.aagtl.GCacheView: int show_field> = 5;
        $r92 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r93 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r92.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean need_repaint> = $r93;
        $r94 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r94.<com.zoffcc.applications.aagtl.GCacheView: void invalidate()>();
        r3[50] = 1;
        return 1;

     label45:
        $z4 = specialinvoke r0.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);
        r3[51] = 1;
        return $z4;
    }

    public void toast_me(java.lang.String, int)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.String r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        android.content.Context $r4;
        android.widget.Toast $r5;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];
        $r4 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r4, r1, i0);
        virtualinvoke $r5.<android.widget.Toast: void show()>();
        r3[0] = 1;
        return;
    }

    public com.zoffcc.applications.aagtl.Coordinate pixmappoint2coord(int[])
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        int[] r1;
        boolean[][] $r2;
        boolean[] r3;
        null_type n0;
        com.zoffcc.applications.aagtl.Rose $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.zoffcc.applications.aagtl.Coordinate r13;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: int[];
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        n0 = null;
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i0 = r1[0];
        $d0 = (double) $i0;
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $d1 = $r5.<com.zoffcc.applications.aagtl.Rose: double map_center_x>;
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i1 = $r6.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d2 = (double) $i1;
        $d3 = $d1 * $d2;
        $d4 = $d0 + $d3;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i2 = $r7.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i3 = $i2 / 2;
        $d5 = (double) $i3;
        $d6 = $d4 - $d5;
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i4 = $r8.<com.zoffcc.applications.aagtl.Rose: int tile_size_x>;
        $d7 = (double) $i4;
        $d8 = $d6 / $d7;
        $i5 = r1[1];
        $d9 = (double) $i5;
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $d10 = $r9.<com.zoffcc.applications.aagtl.Rose: double map_center_y>;
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i6 = $r10.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d11 = (double) $i6;
        $d12 = $d10 * $d11;
        $d13 = $d9 + $d12;
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i7 = $r11.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $i8 = $i7 / 2;
        $d14 = (double) $i8;
        $d15 = $d13 - $d14;
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i9 = $r12.<com.zoffcc.applications.aagtl.Rose: int tile_size_y>;
        $d16 = (double) $i9;
        $d17 = $d15 / $d16;
        r13 = virtualinvoke $r4.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.Coordinate num2deg(double,double)>($d8, $d17);
        r3[0] = 1;
        return r13;
    }

    public void set_display_screen(int)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.aagtl$settings $r3;
        java.lang.Boolean $r4, $r27, $r31;
        boolean $z0;
        com.zoffcc.applications.aagtl.ArrowView $r5, $r22, $r44, $r46, $r47;
        com.zoffcc.applications.aagtl.GCacheView $r6, $r25, $r26, $r28, $r30, $r32, $r33, $r35, $r36, $r41;
        com.zoffcc.applications.aagtl.Rose $r7, $r12, $r19, $r38;
        com.zoffcc.applications.aagtl.GeocachesView $r8, $r13, $r17, $r20, $r39;
        com.zoffcc.applications.aagtl.CrossHair $r9, $r14, $r16, $r21, $r40;
        android.widget.TextView $r10, $r15, $r18, $r24, $r34, $r37, $r43, $r45, $r48;
        android.webkit.WebView $r11, $r23, $r42;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r29;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        i0 := @parameter0: int;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        r2[0] = 1;
        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $r3 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r4 = $r3.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_use_compass_heading>;
        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();
        r2[1] = 1;
        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_off_compass()>();
        r2[2] = 1;
        goto label3;

     label2:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_on_compass()>();
        r2[3] = 1;

     label3:
        r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view> = 1;
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r5.<com.zoffcc.applications.aagtl.ArrowView: void setVisibility(int)>(4);
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r6.<com.zoffcc.applications.aagtl.GCacheView: void setVisibility(int)>(4);
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r7.<com.zoffcc.applications.aagtl.Rose: void setVisibility(int)>(0);
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r8.<com.zoffcc.applications.aagtl.GeocachesView: void setVisibility(int)>(0);
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r9.<com.zoffcc.applications.aagtl.CrossHair: void setVisibility(int)>(0);
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(0);
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r11.<android.webkit.WebView: void setVisibility(int)>(0);
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r12.<com.zoffcc.applications.aagtl.Rose: void bringToFront()>();
        $r13 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r13.<com.zoffcc.applications.aagtl.GeocachesView: void bringToFront()>();
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r14.<com.zoffcc.applications.aagtl.CrossHair: void bringToFront()>();
        $r15 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r15.<android.widget.TextView: void bringToFront()>();
        $r16 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r16.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        $r17 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r17.<com.zoffcc.applications.aagtl.GeocachesView: void invalidate()>();
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r18.<android.widget.TextView: void invalidate()>();
        r2[4] = 1;
        goto label6;

     label4:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_off_compass()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view> = 2;
        $r19 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r19.<com.zoffcc.applications.aagtl.Rose: void setVisibility(int)>(4);
        $r20 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r20.<com.zoffcc.applications.aagtl.GeocachesView: void setVisibility(int)>(4);
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r21.<com.zoffcc.applications.aagtl.CrossHair: void setVisibility(int)>(4);
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r22.<com.zoffcc.applications.aagtl.ArrowView: void setVisibility(int)>(4);
        $r23 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r23.<android.webkit.WebView: void setVisibility(int)>(4);
        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r24.<android.widget.TextView: void setVisibility(int)>(0);
        $r25 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r25.<com.zoffcc.applications.aagtl.GCacheView: void setVisibility(int)>(0);
        $r26 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r26.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean override_download> = $r27;
        $r28 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r29 = $r28.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r29.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String desc> = "please update details!!";
        $r30 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $r30.<com.zoffcc.applications.aagtl.GCacheView: java.lang.Boolean download_details_thread_finished> = $r31;
        $r32 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r32.<com.zoffcc.applications.aagtl.GCacheView: int details_loaded> = 2;
        $r33 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r33.<com.zoffcc.applications.aagtl.GCacheView: int get_gc_from_db> = 1;
        $r34 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r34.<android.widget.TextView: void bringToFront()>();
        $r35 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r35.<com.zoffcc.applications.aagtl.GCacheView: void bringToFront()>();
        $r36 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r36.<com.zoffcc.applications.aagtl.GCacheView: void invalidate()>();
        $r37 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r37.<android.widget.TextView: void invalidate()>();
        r2[5] = 1;
        goto label6;

     label5:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_on_compass()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view> = 3;
        $r38 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r38.<com.zoffcc.applications.aagtl.Rose: void setVisibility(int)>(4);
        $r39 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r39.<com.zoffcc.applications.aagtl.GeocachesView: void setVisibility(int)>(4);
        $r40 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r40.<com.zoffcc.applications.aagtl.CrossHair: void setVisibility(int)>(4);
        $r41 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        virtualinvoke $r41.<com.zoffcc.applications.aagtl.GCacheView: void setVisibility(int)>(4);
        $r42 = r0.<com.zoffcc.applications.aagtl.aagtl: android.webkit.WebView wv>;
        virtualinvoke $r42.<android.webkit.WebView: void setVisibility(int)>(4);
        $r43 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r43.<android.widget.TextView: void setVisibility(int)>(0);
        $r44 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r44.<com.zoffcc.applications.aagtl.ArrowView: void setVisibility(int)>(0);
        $r45 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r45.<android.widget.TextView: void bringToFront()>();
        $r46 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r46.<com.zoffcc.applications.aagtl.ArrowView: void bringToFront()>();
        $r47 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r47.<com.zoffcc.applications.aagtl.ArrowView: void invalidate()>();
        $r48 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r48.<android.widget.TextView: void invalidate()>();
        r2[6] = 1;

     label6:
        r2[7] = 1;
        return;
    }

    public com.zoffcc.applications.aagtl.Coordinate[] get_visible_area()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.Coordinate[] r3;
        int[] r4;
        com.zoffcc.applications.aagtl.Coordinate $r5, $r8;
        com.zoffcc.applications.aagtl.Rose $r6, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        r3 = newarray (com.zoffcc.applications.aagtl.Coordinate)[2];
        r4 = newarray (int)[2];
        r4[0] = -10;
        r4[1] = -10;
        $r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Coordinate pixmappoint2coord(int[])>(r4);
        r3[0] = $r5;
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i0 = $r6.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i1 = $i0 + 10;
        r4[0] = $i1;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i2 = $r7.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $i3 = $i2 + 10;
        r4[1] = $i3;
        $r8 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Coordinate pixmappoint2coord(int[])>(r4);
        r3[1] = $r8;
        r2[0] = 1;
        return r3;
    }

    public com.zoffcc.applications.aagtl.Coordinate[] get_visible_area_large()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        com.zoffcc.applications.aagtl.Coordinate[] r3;
        int[] r4;
        com.zoffcc.applications.aagtl.Coordinate $r5, $r8;
        com.zoffcc.applications.aagtl.Rose $r6, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        r3 = newarray (com.zoffcc.applications.aagtl.Coordinate)[2];
        r4 = newarray (int)[2];
        r4[0] = -60;
        r4[1] = -60;
        $r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Coordinate pixmappoint2coord(int[])>(r4);
        r3[0] = $r5;
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i0 = $r6.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i1 = $i0 + 60;
        r4[0] = $i1;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i2 = $r7.<com.zoffcc.applications.aagtl.Rose: int mCanvasHeight>;
        $i3 = $i2 + 60;
        r4[1] = $i3;
        $r8 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Coordinate pixmappoint2coord(int[])>(r4);
        r3[1] = $r8;
        r2[0] = 1;
        return r3;
    }

    public void mLockScreenRotation()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        android.content.res.Resources $r3;
        android.content.res.Configuration $r4;
        int $i0;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $r3 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.res.Resources getResources()>();
        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();
        $i0 = $r4.<android.content.res.Configuration: int orientation>;
        r2[0] = 1;
        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void setRequestedOrientation(int)>(1);
        r2[1] = 1;
        goto label3;

     label2:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void setRequestedOrientation(int)>(0);
        r2[2] = 1;

     label3:
        r2[3] = 1;
        return;
    }

    public void mUnlockScreenRotation()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void setRequestedOrientation(int)>(-1);
        r2[0] = 1;
        return;
    }

    public void download_caches_in_visible_view(java.lang.Boolean)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.Boolean r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.Boolean;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[24];
        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches> = null;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void showDialog(int)>(2);
        r3[1] = 1;
        goto label2;

     label1:
        r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches> = null;
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void showDialog(int)>(0);
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return;
    }

    public void set_bar(android.os.Handler, java.lang.String, java.lang.String, int, int, java.lang.Boolean)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.os.Handler r1;
        java.lang.String r2, r3;
        int i0, i1;
        java.lang.Boolean r4;
        boolean[][] $r5;
        boolean[] r6;
        android.os.Message r7;
        android.os.Bundle r8, $r9;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.os.Handler;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        i0 := @parameter3: int;
        i1 := @parameter4: int;
        r4 := @parameter5: java.lang.Boolean;
        $r5 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r6 = $r5[25];
        r7 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage()>();
        $r9 = new android.os.Bundle;
        specialinvoke $r9.<android.os.Bundle: void <init>()>();
        r8 = $r9;
        virtualinvoke r8.<android.os.Bundle: void putInt(java.lang.String,int)>("max", i1);
        virtualinvoke r8.<android.os.Bundle: void putInt(java.lang.String,int)>("cur", i0);
        virtualinvoke r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("title", r2);
        virtualinvoke r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("text", r3);
        virtualinvoke r8.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("show", 1);
        virtualinvoke r7.<android.os.Message: void setData(android.os.Bundle)>(r8);
        virtualinvoke r1.<android.os.Handler: boolean sendMessage(android.os.Message)>(r7);
        staticinvoke <android.os.SystemClock: void sleep(long)>(1L);
        r6[0] = 1;
        return;
    }

    public void set_bar_slow(android.os.Handler, java.lang.String, java.lang.String, int, int, java.lang.Boolean)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.os.Handler r1;
        java.lang.String r2, r3;
        int i0, i1;
        java.lang.Boolean r4;
        boolean[][] $r5;
        boolean[] r6;
        android.os.Message r7;
        android.os.Bundle r8, $r9;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.os.Handler;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        i0 := @parameter3: int;
        i1 := @parameter4: int;
        r4 := @parameter5: java.lang.Boolean;
        $r5 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r6 = $r5[26];
        r7 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage()>();
        $r9 = new android.os.Bundle;
        specialinvoke $r9.<android.os.Bundle: void <init>()>();
        r8 = $r9;
        virtualinvoke r8.<android.os.Bundle: void putInt(java.lang.String,int)>("max", i1);
        virtualinvoke r8.<android.os.Bundle: void putInt(java.lang.String,int)>("cur", i0);
        virtualinvoke r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("title", r2);
        virtualinvoke r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("text", r3);
        virtualinvoke r8.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("show", 1);
        virtualinvoke r7.<android.os.Message: void setData(android.os.Bundle)>(r8);
        virtualinvoke r1.<android.os.Handler: boolean sendMessage(android.os.Message)>(r7);
        staticinvoke <android.os.SystemClock: void sleep(long)>(50L);
        r6[0] = 1;
        return;
    }

    public void download_caches_from_route_file(android.os.Handler)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.os.Handler r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean z0;
        int i0, i2, i3, $i4;
        null_type n0;
        byte b1;
        java.lang.Throwable r4, $r24;
        java.util.List $r5, $r7, $r10, $r11;
        android.os.PowerManager$WakeLock $r6;
        java.lang.Boolean $r8, $r14, $r26;
        com.zoffcc.applications.aagtl.PointProvider $r9, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r25;
        java.lang.Object $r12;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r13;
        com.zoffcc.applications.aagtl.CacheDownloader $r16;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.os.Handler;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[27];
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches>;
        r3[0] = 1;
        if $r5 != null goto label1;

        r3[1] = 1;
        return;

     label1:
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.PowerManager$WakeLock wl>;
        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void acquire()>();
        z0 = 0;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches>;
        i0 = interfaceinvoke $r7.<java.util.List: int size()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void mLockScreenRotation()>();
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "downloading caches from route file", 0, i0, $r8);
        n0 = null;
        b1 = 30;
        i2 = 0;
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r9.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();

     label2:
        i3 = 0;
        r3[2] = 1;

     label3:
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches>;
        $i4 = interfaceinvoke $r10.<java.util.List: int size()>();
        r3[3] = 1;
        if i3 >= $i4 goto label5;

        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List route_file_caches>;
        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i3);
        r13 = (com.zoffcc.applications.aagtl.GeocacheCoordinate) $r12;
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "downloading caches from route file", i3, i0, $r14);
        $r15 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r15.<com.zoffcc.applications.aagtl.PointProvider: void add_point(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r13);
        $r16 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CacheDownloader cdol>;
        virtualinvoke $r16.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.GeocacheCoordinate update_coordinate(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r13);
        i2 = i2 + 1;
        r3[4] = 1;
        if i2 <= b1 goto label4;

        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r18.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();
        $r19 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r19.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        $r20 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r20.<com.zoffcc.applications.aagtl.PointProvider: void reopen_db()>();
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r21.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();
        i2 = 0;
        r3[5] = 1;

     label4:
        i3 = i3 + 1;
        r3[6] = 1;
        goto label3;

     label5:
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r22.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();

     label6:
        $r23 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r23.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r3[7] = 1;
        goto label10;

     label7:
        $r24 := @caughtexception;

     label8:
        r4 = $r24;

     label9:
        $r25 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r25.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r3[8] = 1;
        throw r4;

     label10:
        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "finished", i0, i0, $r26);
        r3[9] = 1;
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void download_caches_in_visible_view_wrapper(android.os.Handler, java.lang.Boolean)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.os.Handler r1;
        java.lang.Boolean r2, $r10, $r14, $r17, $r24, $r35, $r37, $r44, $r47, $r65, $r72, $r75;
        boolean[][] $r3;
        boolean[] r4;
        com.zoffcc.applications.aagtl.Coordinate[] r5;
        byte b0, b1, b2, b20;
        null_type n0, n1;
        int i3, i4, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, i21, $i24, $i25, $i30, $i33, $i34, $i35, $i39, $i40, $i41, $i42, $i43, $i44;
        java.lang.Throwable r6, r7, $r31, $r68;
        long l5, l22, l23, l26, $l27, $l28, $l29, $l31, $l32, $l36, $l37, $l38;
        float f0, f1, $f2, $f3, $f4, f5, f6;
        com.zoffcc.applications.aagtl.Rose $r8, $r12;
        android.os.PowerManager$WakeLock $r9;
        com.zoffcc.applications.aagtl.HTMLDownloader $r11;
        com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret r13;
        com.zoffcc.applications.aagtl.GeocacheCoordinate[] $r15, $r16, $r19, $r20, $r23, $r33, $r34, $r36, $r39, $r40, $r43, $r73, $r74;
        com.zoffcc.applications.aagtl.PointProvider $r18, $r22, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r45, $r48, $r55, $r56, $r57, $r58, $r66, $r67, $r69;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r21, r41, r52;
        java.util.ArrayList $r38;
        java.util.List $r42, $r46, $r49, $r50, $r59, $r64, $r70, $r71;
        boolean $z1;
        java.lang.Object $r51;
        com.zoffcc.applications.aagtl.CacheDownloader $r53;
        java.lang.Object[] $r60;
        java.lang.Float $r61, $r62;
        java.lang.String $r63;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.os.Handler;
        r2 := @parameter1: java.lang.Boolean;
        $r3 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r4 = $r3[28];
        r5 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Coordinate[] get_visible_area()>();
        b0 = 0;
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i7 = $r8.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r4[0] = 1;
        if $i7 <= 11 goto label1;

        b1 = 20;
        r4[1] = 1;
        goto label2;

     label1:
        b1 = 84;
        r4[2] = 1;

     label2:
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.PowerManager$WakeLock wl>;
        virtualinvoke $r9.<android.os.PowerManager$WakeLock: void acquire()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void mLockScreenRotation()>();
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "downloading ...", 0, b1, $r10);
        n0 = null;
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.HTMLDownloader wdl>;
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i8 = $r12.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        r13 = virtualinvoke $r11.<com.zoffcc.applications.aagtl.HTMLDownloader: com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret get_geocaches(com.zoffcc.applications.aagtl.Coordinate[],int,int,int,android.os.Handler,int)>(r5, b0, b1, 0, r1, $i8);
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "downloading ...", b1, b1, $r14);
        $r15 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        r4[3] = 1;
        if $r15 == null goto label24;

        $r16 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i9 = lengthof $r16;
        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "inserting into DB ...", 0, $i9, $r17);
        n1 = null;
        b2 = 30;
        i3 = 0;
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r18.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();

     label3:
        i4 = 0;
        r4[4] = 1;

     label4:
        $r19 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i10 = lengthof $r19;
        r4[5] = 1;
        if i4 >= $i10 goto label6;

        $r20 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        r21 = $r20[i4];
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r22.<com.zoffcc.applications.aagtl.PointProvider: void add_point(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r21);
        $i11 = i4 + 1;
        $r23 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i12 = lengthof $r23;
        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "inserting into DB ...", $i11, $i12, $r24);
        i3 = i3 + 1;
        r4[6] = 1;
        if i3 <= b2 goto label5;

        $r25 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r25.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();
        $r26 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r26.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        $r27 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r27.<com.zoffcc.applications.aagtl.PointProvider: void reopen_db()>();
        $r28 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r28.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();
        i3 = 0;
        r4[7] = 1;

     label5:
        i4 = i4 + 1;
        r4[8] = 1;
        goto label4;

     label6:
        $r29 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r29.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();

     label7:
        $r30 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r30.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r4[9] = 1;
        goto label11;

     label8:
        $r31 := @caughtexception;

     label9:
        r6 = $r31;

     label10:
        $r32 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r32.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r4[10] = 1;
        throw r6;

     label11:
        $r33 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i13 = lengthof $r33;
        $r34 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i14 = lengthof $r34;
        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "inserting into DB ...", $i13, $i14, $r35);
        $r36 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i15 = lengthof $r36;
        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "parsing ...", 0, $i15, $r37);
        $r38 = new java.util.ArrayList;
        specialinvoke $r38.<java.util.ArrayList: void <init>()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches> = $r38;
        i16 = 0;
        r4[11] = 1;

     label12:
        $r39 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i17 = lengthof $r39;
        r4[12] = 1;
        if i16 >= $i17 goto label13;

        $r40 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        r41 = $r40[i16];
        $r42 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches>;
        interfaceinvoke $r42.<java.util.List: boolean add(java.lang.Object)>(r41);
        $i18 = i16 + 1;
        $r43 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i19 = lengthof $r43;
        $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "parsing ...", $i18, $i19, $r44);
        i16 = i16 + 1;
        r4[13] = 1;
        goto label12;

     label13:
        $z1 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
        r4[14] = 1;
        if $z1 == 0 goto label23;

        b20 = 15;
        i21 = 0;
        l22 = 0L;
        l5 = 0L;
        f0 = 0.0F;
        f1 = 0.0F;
        l23 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        $r45 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r45.<com.zoffcc.applications.aagtl.PointProvider: void compact()>();
        $r46 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches>;
        $i24 = interfaceinvoke $r46.<java.util.List: int size()>();
        $r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "downloading details ...", 0, $i24, $r47);
        $r48 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r48.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();

     label14:
        i6 = 0;
        r4[15] = 1;

     label15:
        $r49 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches>;
        $i25 = interfaceinvoke $r49.<java.util.List: int size()>();
        r4[16] = 1;
        if i6 >= $i25 goto label17;

        l26 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        $r50 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches>;
        $r51 = interfaceinvoke $r50.<java.util.List: java.lang.Object get(int)>(i6);
        r52 = (com.zoffcc.applications.aagtl.GeocacheCoordinate) $r51;
        $r53 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CacheDownloader cdol>;
        virtualinvoke $r53.<com.zoffcc.applications.aagtl.CacheDownloader: com.zoffcc.applications.aagtl.GeocacheCoordinate update_coordinate(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r52);
        i21 = i21 + 1;
        r4[17] = 1;
        if i21 <= b20 goto label16;

        $r55 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r55.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();
        $r56 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r56.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        $r57 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r57.<com.zoffcc.applications.aagtl.PointProvider: void reopen_db()>();
        $r58 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r58.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();
        i21 = 0;
        r4[18] = 1;

     label16:
        $l27 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        $f2 = (float) $l27;
        $f3 = (float) l26;
        $f4 = $f2 - $f3;
        f5 = $f4 / 1000.0F;
        $l28 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        $l29 = $l28 - l23;
        $i30 = i6 + 1;
        $l31 = (long) $i30;
        $l32 = $l29 / $l31;
        $r59 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches>;
        $i33 = interfaceinvoke $r59.<java.util.List: int size()>();
        $i34 = i6 + 1;
        $i35 = $i33 - $i34;
        $l36 = (long) $i35;
        $l37 = $l32 * $l36;
        $l38 = $l37 / 1000L;
        f6 = (float) $l38;
        $r60 = newarray (java.lang.Object)[2];
        $r61 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);
        $r60[0] = $r61;
        $r62 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f6);
        $r60[1] = $r62;
        $r63 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("this: %.1f s, remaining: %.0f s", $r60);
        $i39 = i6 + 1;
        $r64 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches>;
        $i40 = interfaceinvoke $r64.<java.util.List: int size()>();
        $r65 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", $r63, $i39, $i40, $r65);
        i6 = i6 + 1;
        r4[19] = 1;
        goto label15;

     label17:
        $r66 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r66.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();

     label18:
        $r67 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r67.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r4[20] = 1;
        goto label22;

     label19:
        $r68 := @caughtexception;

     label20:
        r7 = $r68;

     label21:
        $r69 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r69.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r4[21] = 1;
        throw r7;

     label22:
        $r70 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches>;
        $i41 = interfaceinvoke $r70.<java.util.List: int size()>();
        $r71 = r0.<com.zoffcc.applications.aagtl.aagtl: java.util.List downloaded_caches>;
        $i42 = interfaceinvoke $r71.<java.util.List: int size()>();
        $r72 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "finished", $i41, $i42, $r72);
        r4[22] = 1;
        goto label24;

     label23:
        $r73 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i43 = lengthof $r73;
        $r74 = r13.<com.zoffcc.applications.aagtl.HTMLDownloader$get_geocaches_ret: com.zoffcc.applications.aagtl.GeocacheCoordinate[] points>;
        $i44 = lengthof $r74;
        $r75 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void set_bar(android.os.Handler,java.lang.String,java.lang.String,int,int,java.lang.Boolean)>(r1, "get geocaches", "finished", $i43, $i44, $r75);
        r4[23] = 1;

     label24:
        r4[24] = 1;
        return;

        catch java.lang.Throwable from label3 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
        catch java.lang.Throwable from label14 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        android.app.ProgressDialog r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r37;
        com.zoffcc.applications.aagtl.aagtl$ProgressThread $r11, $r13, $r23, $r25, $r34, $r36;
        android.os.Handler $r12, $r24, $r35;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        i0 := @parameter0: int;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[29];
        r2[0] = 1;
        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        $r4 = new android.app.ProgressDialog;
        specialinvoke $r4.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog> = $r4;
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r5.<android.app.ProgressDialog: void setProgressStyle(int)>(1);
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r6.<android.app.ProgressDialog: void setTitle(java.lang.CharSequence)>("--");
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r7.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>("--");
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r8.<android.app.ProgressDialog: void setCancelable(boolean)>(1);
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r9.<android.app.ProgressDialog: void setProgress(int)>(0);
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r10.<android.app.ProgressDialog: void setMax(int)>(200);
        $r11 = new com.zoffcc.applications.aagtl.aagtl$ProgressThread;
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler progress_handler>;
        specialinvoke $r11.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: void <init>(com.zoffcc.applications.aagtl.aagtl,android.os.Handler,int)>(r0, $r12, 0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$ProgressThread progressThread> = $r11;
        $r13 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$ProgressThread progressThread>;
        virtualinvoke $r13.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: void start()>();
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        r2[1] = 1;
        return $r14;

     label2:
        $r15 = new android.app.ProgressDialog;
        specialinvoke $r15.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);
        r3 = $r15;
        virtualinvoke r3.<android.app.ProgressDialog: void setTitle(java.lang.CharSequence)>("Geocache");
        virtualinvoke r3.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>("downloading details from internet");
        virtualinvoke r3.<android.app.ProgressDialog: void setCancelable(boolean)>(0);
        virtualinvoke r3.<android.app.ProgressDialog: void setIndeterminate(boolean)>(1);
        r2[2] = 1;
        return r3;

     label3:
        $r16 = new android.app.ProgressDialog;
        specialinvoke $r16.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog> = $r16;
        $r17 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r17.<android.app.ProgressDialog: void setProgressStyle(int)>(1);
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r18.<android.app.ProgressDialog: void setTitle(java.lang.CharSequence)>("--");
        $r19 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r19.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>("--");
        $r20 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r20.<android.app.ProgressDialog: void setCancelable(boolean)>(1);
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r21.<android.app.ProgressDialog: void setProgress(int)>(0);
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r22.<android.app.ProgressDialog: void setMax(int)>(200);
        $r23 = new com.zoffcc.applications.aagtl.aagtl$ProgressThread;
        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler progress_handler>;
        specialinvoke $r23.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: void <init>(com.zoffcc.applications.aagtl.aagtl,android.os.Handler,int)>(r0, $r24, 1);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$ProgressThread progressThread> = $r23;
        $r25 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$ProgressThread progressThread>;
        virtualinvoke $r25.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: void start()>();
        $r26 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        r2[3] = 1;
        return $r26;

     label4:
        $r27 = new android.app.ProgressDialog;
        specialinvoke $r27.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog> = $r27;
        $r28 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r28.<android.app.ProgressDialog: void setProgressStyle(int)>(1);
        $r29 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r29.<android.app.ProgressDialog: void setTitle(java.lang.CharSequence)>("--");
        $r30 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r30.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>("--");
        $r31 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r31.<android.app.ProgressDialog: void setCancelable(boolean)>(1);
        $r32 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r32.<android.app.ProgressDialog: void setProgress(int)>(0);
        $r33 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        virtualinvoke $r33.<android.app.ProgressDialog: void setMax(int)>(200);
        $r34 = new com.zoffcc.applications.aagtl.aagtl$ProgressThread;
        $r35 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler progress_handler>;
        specialinvoke $r34.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: void <init>(com.zoffcc.applications.aagtl.aagtl,android.os.Handler,int)>(r0, $r35, 3);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$ProgressThread progressThread> = $r34;
        $r36 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$ProgressThread progressThread>;
        virtualinvoke $r36.<com.zoffcc.applications.aagtl.aagtl$ProgressThread: void start()>();
        $r37 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.ProgressDialog pbarDialog>;
        r2[4] = 1;
        return $r37;

     label5:
        r2[5] = 1;
        return null;
    }

    public void onResume()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.File r3, r4, r5, $r16, $r18, $r23;
        com.zoffcc.applications.aagtl.HTMLDownloader $r6;
        com.zoffcc.applications.aagtl.MapDownloader $r7, $r9, $r12, $r14, $r22;
        java.lang.Boolean $r8, $r15;
        boolean $z0, $z2;
        java.lang.Thread$State $r10, $r11;
        android.os.Handler $r13;
        java.lang.String $r17, $r19, $r21, $r25, $r28;
        com.zoffcc.applications.aagtl.PointProvider $r20;
        java.lang.StringBuilder $r24, $r26, $r27;
        com.zoffcc.applications.aagtl.Rose $r29;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        specialinvoke r0.<android.app.Activity: void onResume()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void load_settings()>();
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.HTMLDownloader wdl>;
        virtualinvoke $r6.<com.zoffcc.applications.aagtl.HTMLDownloader: void loadCookies()>();
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.Boolean running>;
        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();
        r2[0] = 1;
        if $z0 == 1 goto label1;

        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        $r10 = virtualinvoke $r9.<com.zoffcc.applications.aagtl.MapDownloader: java.lang.Thread$State getState()>();
        $r11 = <java.lang.Thread$State: java.lang.Thread$State TERMINATED>;
        r2[1] = 1;
        if $r10 != $r11 goto label1;

        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl> = null;
        $r12 = new com.zoffcc.applications.aagtl.MapDownloader;
        $r13 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler global_messageHandler>;
        specialinvoke $r12.<com.zoffcc.applications.aagtl.MapDownloader: void <init>(android.os.Handler,com.zoffcc.applications.aagtl.aagtl)>($r13, r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl> = $r12;
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        virtualinvoke $r14.<com.zoffcc.applications.aagtl.MapDownloader: void start()>();
        r2[2] = 1;

     label1:
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix> = $r15;
        $r16 = new java.io.File;
        $r17 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String db_path>;
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17);
        r3 = $r16;
        $r18 = new java.io.File;
        $r19 = virtualinvoke r3.<java.io.File: java.lang.String getParent()>();
        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r19);
        r4 = $r18;
        virtualinvoke r4.<java.io.File: boolean mkdirs()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv> = null;
        $r20 = new com.zoffcc.applications.aagtl.PointProvider;
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String db_path>;
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        specialinvoke $r20.<com.zoffcc.applications.aagtl.PointProvider: void <init>(java.lang.String,java.lang.Object,java.lang.String,java.lang.String)>($r21, $r22, "", "geocaches");
        r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv> = $r20;
        $r23 = new java.io.File;
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/zoff.txt");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>($r28);
        r5 = $r23;
        $z2 = virtualinvoke r5.<java.io.File: boolean exists()>();
        r2[3] = 1;
        if $z2 == 0 goto label2;

        r0.<com.zoffcc.applications.aagtl.aagtl: boolean __ZOFF_PHONE__> = 1;
        r2[4] = 1;

     label2:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_on_locations()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_on_compass()>();
        $r29 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r29.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        r2[5] = 1;
        return;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        int i0, i1, i2, $i3, $i4, $i5;
        android.content.Intent r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, r10, r14, $r18, $r20, $r27, $r29, $r31;
        java.util.Calendar r5;
        java.text.SimpleDateFormat r6, $r21;
        com.zoffcc.applications.aagtl.GeocacheCoordinate r7;
        java.lang.Throwable r8, $r41;
        com.zoffcc.applications.aagtl.aagtl$settings $r9, $r11;
        java.lang.Exception $r12, r13, $r44, r45;
        java.io.PrintStream $r15, $r24, $r46;
        java.lang.StringBuilder $r16, $r17, $r19, $r25, $r26, $r28;
        java.util.TimeZone $r22;
        com.zoffcc.applications.aagtl.Rose $r23;
        java.util.Date $r30;
        java.lang.Boolean $r32, $r33, $r34;
        com.zoffcc.applications.aagtl.PointProvider $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r43;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: android.content.Intent;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[31];
        r3[0] = 1;
        lookupswitch(i0)
        {
            case 7: goto label1;
            case 8: goto label7;
            default: goto label20;
        };

     label1:
        r4 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("username");
        r3[1] = 1;
        if r4 == null goto label2;

        $i3 = virtualinvoke r4.<java.lang.String: int length()>();
        r3[2] = 1;
        if $i3 <= 0 goto label2;

        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r9.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_username> = r4;
        r3[3] = 1;

     label2:
        r10 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("password");
        r3[4] = 1;
        if r10 == null goto label3;

        $i4 = virtualinvoke r10.<java.lang.String: int length()>();
        r3[5] = 1;
        if $i4 <= 0 goto label3;

        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r11.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.String options_password> = r10;
        r3[6] = 1;

     label3:
        r3[7] = 1;

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        r3[8] = 1;

     label6:
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void save_settings()>();
        r3[9] = 1;
        goto label20;

     label7:
        r14 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("msg");
        i2 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("logtype", 1);
        r3[10] = 1;
        if r14 == null goto label17;

        $i5 = virtualinvoke r14.<java.lang.String: int length()>();
        r3[11] = 1;
        if $i5 <= 0 goto label17;

        $r15 = <java.lang.System: java.io.PrintStream out>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fieldnote=");
        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14);
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r20);
        r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
        $r21 = new java.text.SimpleDateFormat;
        specialinvoke $r21.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm\'Z\'");
        r6 = $r21;
        $r22 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
        virtualinvoke r6.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r22);
        $r23 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        r7 = $r23.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("temp_gc=");
        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7);
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String fieldnotes> = r14;
        $r30 = virtualinvoke r5.<java.util.Calendar: java.util.Date getTime()>();
        $r31 = virtualinvoke r6.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r30);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String log_date> = $r31;
        r3[12] = 1;
        if i2 != 1 goto label8;

        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int aagtl_status> = 1;
        $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r32;
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as> = i2;
        r3[13] = 1;
        goto label10;

     label8:
        r3[14] = 1;
        if i2 != 2 goto label9;

        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int aagtl_status> = 0;
        $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r33;
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as> = i2;
        r3[15] = 1;
        goto label10;

     label9:
        r3[16] = 1;
        if i2 != 3 goto label10;

        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int aagtl_status> = 0;
        $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.Boolean found> = $r34;
        r7.<com.zoffcc.applications.aagtl.GeocacheCoordinate: int log_as> = i2;
        r3[17] = 1;

     label10:
        $r35 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r35.<com.zoffcc.applications.aagtl.PointProvider: void reopen_db()>();
        $r36 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r36.<com.zoffcc.applications.aagtl.PointProvider: void compact()>();
        $r37 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r37.<com.zoffcc.applications.aagtl.PointProvider: void begin_trans()>();

     label11:
        $r38 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r38.<com.zoffcc.applications.aagtl.PointProvider: void add_point_fn(com.zoffcc.applications.aagtl.GeocacheCoordinate)>(r7);
        $r39 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r39.<com.zoffcc.applications.aagtl.PointProvider: void commit()>();

     label12:
        $r40 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r40.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r3[18] = 1;
        goto label16;

     label13:
        $r41 := @caughtexception;

     label14:
        r8 = $r41;

     label15:
        $r42 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r42.<com.zoffcc.applications.aagtl.PointProvider: void end_trans()>();
        r3[19] = 1;
        throw r8;

     label16:
        $r43 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r43.<com.zoffcc.applications.aagtl.PointProvider: void close()>();
        r3[20] = 1;

     label17:
        r3[21] = 1;

     label18:
        goto label20;

     label19:
        $r44 := @caughtexception;
        r45 = $r44;
        $r46 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("Error saving fieldnote!");
        virtualinvoke r45.<java.lang.Exception: void printStackTrace()>();
        r3[22] = 1;
        goto label20;

     label20:
        r3[23] = 1;
        return;

        catch java.lang.Exception from label1 to label4 with label5;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Exception from label7 to label18 with label19;
    }

    public void onClickXXX(android.content.DialogInterface, int)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        android.content.DialogInterface r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        java.io.PrintStream $r4;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[32];
        $r4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("button pressed");
        r3[0] = 1;
        return;
    }

    public void turn_on_compass()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r7;
        android.hardware.SensorManager $r4, $r5;
        android.hardware.Sensor $r6;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[33];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.hardware.SensorManager sensorManager>;
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: android.hardware.SensorManager sensorManager>;
        $r6 = virtualinvoke $r5.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(3);
        virtualinvoke $r4.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>(r0, $r6, 3);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void turn_off_compass()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r5;
        android.hardware.SensorManager $r4;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[34];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.hardware.SensorManager sensorManager>;
        virtualinvoke $r4.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>(r0);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r3 = $r5;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void onPause()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.InterruptedException r3, $r9;
        com.zoffcc.applications.aagtl.HTMLDownloader $r4;
        com.zoffcc.applications.aagtl.MapDownloader $r5, $r6, $r7, $r8;
        com.zoffcc.applications.aagtl.PointProvider $r10, $r11;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[35];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_off_locations()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_off_compass()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void save_settings()>();
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.HTMLDownloader wdl>;
        virtualinvoke $r4.<com.zoffcc.applications.aagtl.HTMLDownloader: void saveCookies()>();
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        r2[0] = 1;
        if $r5 == null goto label4;

        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        virtualinvoke $r6.<com.zoffcc.applications.aagtl.MapDownloader: void interrupt()>();
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        virtualinvoke $r7.<com.zoffcc.applications.aagtl.MapDownloader: void request_stop()>();

     label1:
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.MapDownloader mdl>;
        virtualinvoke $r8.<com.zoffcc.applications.aagtl.MapDownloader: void join()>();
        r2[1] = 1;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;
        r3 = $r9;
        virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>();
        r2[2] = 1;

     label4:
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r10.<com.zoffcc.applications.aagtl.PointProvider: void compact()>();
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        virtualinvoke $r11.<com.zoffcc.applications.aagtl.PointProvider: void close()>();
        specialinvoke r0.<android.app.Activity: void onPause()>();
        r2[3] = 1;
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void turn_off_locations()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r7;
        android.location.LocationManager $r4, $r5;
        java.lang.Boolean $r6;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[36];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        virtualinvoke $r4.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r0);
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        virtualinvoke $r5.<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus$Listener)>(r0);
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix> = $r6;
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void turn_on_locations()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[37];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void turn_on_gps()>();
        r2[0] = 1;
        return;
    }

    public void turn_on_follow_mode()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean $r3;
        android.graphics.Bitmap $r4;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[38];
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean follow_mode> = $r3;
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_on>;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_current> = $r4;
        r2[0] = 1;
        return;
    }

    public void turn_off_follow_mode()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Boolean $r3;
        android.graphics.Bitmap $r4;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[39];
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean follow_mode> = $r3;
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_off>;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.graphics.Bitmap follow_current> = $r4;
        r2[0] = 1;
        return;
    }

    public void turn_off_gps()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r10;
        android.location.LocationManager $r4, $r5, $r7;
        java.lang.Boolean $r6;
        android.location.LocationProvider $r8;
        java.lang.String $r9;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[40];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        virtualinvoke $r4.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r0);
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        virtualinvoke $r5.<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus$Listener)>(r0);
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix> = $r6;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationProvider low>;
        $r9 = virtualinvoke $r8.<android.location.LocationProvider: java.lang.String getName()>();
        virtualinvoke $r7.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>($r9, 0L, 0.0F, r0);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r3 = $r10;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void turn_on_gps()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Exception r3, $r10;
        android.location.LocationManager $r4, $r6, $r9;
        java.lang.Boolean $r5;
        android.location.LocationProvider $r7;
        java.lang.String $r8;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[41];

     label1:
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        virtualinvoke $r4.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r0);
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix> = $r5;
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationProvider high>;
        $r8 = virtualinvoke $r7.<android.location.LocationProvider: java.lang.String getName()>();
        virtualinvoke $r6.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>($r8, 0L, 0.0F, r0);
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        virtualinvoke $r9.<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>(r0);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r3 = $r10;
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void onLocationChanged(android.location.Location)
    {
        com.zoffcc.applications.aagtl.aagtl r0, $r19;
        android.location.Location r1, $r7;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Boolean r4, r5, $r6, $r9, $r10, $r23;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1, $l2, $l5;
        byte $b3, $b6, $b7, $b12, $b13;
        int $i4, $i8, $i9, $i10, $i11, $i14, $i15;
        com.zoffcc.applications.aagtl.CrossHair $r11, $r24, $r25, $r26;
        com.zoffcc.applications.aagtl.Rose $r12, $r13, $r14, $r16, $r17, $r18, $r21;
        com.zoffcc.applications.aagtl.Coordinate $r15;
        com.zoffcc.applications.aagtl.GeocachesView $r20;
        com.zoffcc.applications.aagtl.aagtl$settings $r22;
        float $f0, $f1;
        com.zoffcc.applications.aagtl.ArrowView $r27;
        java.lang.StringBuilder $r28, $r32, $r33, $r37;
        java.lang.Object[] $r29, $r34;
        java.lang.Double $r30, $r35;
        java.lang.String $r31, $r36, $r38;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: android.location.Location;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[42];
        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r3[0] = 1;
        if r1 != null goto label1;

        r3[1] = 1;
        return;

     label1:
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean follow_mode>;
        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();
        r3[2] = 1;
        if $z0 != 0 goto label2;

        r3[3] = 1;
        return;

     label2:
        r5 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix>;
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.Location mLastLocation>;
        r3[4] = 1;
        if $r7 == null goto label5;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        $l1 = r0.<com.zoffcc.applications.aagtl.aagtl: long mLastLocationMillis>;
        $l2 = $l0 - $l1;
        $b3 = $l2 cmp 3000L;
        r3[5] = 1;
        if $b3 >= 0 goto label3;

        $z1 = 1;
        r3[6] = 1;
        goto label4;

     label3:
        $z1 = 0;
        r3[7] = 1;

     label4:
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix> = $r9;
        r3[8] = 1;

     label5:
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix>;
        $i4 = virtualinvoke $r10.<java.lang.Boolean: int compareTo(java.lang.Boolean)>(r5);
        r3[9] = 1;
        if $i4 == 0 goto label6;

        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r11.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        r3[10] = 1;

     label6:
        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: long mLastLocationMillis> = $l5;
        r0.<com.zoffcc.applications.aagtl.aagtl: android.location.Location mLastLocation> = r1;
        $d2 = r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lat_gps_save>;
        $b6 = $d2 cmpl -1.0;
        r3[11] = 1;
        if $b6 == 0 goto label7;

        $d3 = r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lon_gps_save>;
        $b7 = $d3 cmpl -1.0;
        r3[12] = 1;
        if $b7 != 0 goto label8;

     label7:
        $d4 = virtualinvoke r1.<android.location.Location: double getLatitude()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lat_gps_save> = $d4;
        $d5 = virtualinvoke r1.<android.location.Location: double getLongitude()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lon_gps_save> = $d5;
        r3[13] = 1;
        goto label10;

     label8:
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i8 = $r12.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $i9 = 20 - $i8;
        $d6 = (double) $i9;
        d0 = 4.0E-4 * $d6;
        $r13 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i10 = $r13.<com.zoffcc.applications.aagtl.Rose: int zoom>;
        $i11 = 20 - $i10;
        $d7 = (double) $i11;
        d1 = 8.0E-4 * $d7;
        $d8 = r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lat_gps_save>;
        $d9 = virtualinvoke r1.<android.location.Location: double getLatitude()>();
        $d10 = $d8 - $d9;
        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);
        $b12 = $d11 cmpl d0;
        r3[14] = 1;
        if $b12 <= 0 goto label9;

        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $d12 = virtualinvoke r1.<android.location.Location: double getLatitude()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lat_gps_save> = $d12;
        $d13 = virtualinvoke r1.<android.location.Location: double getLongitude()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lon_gps_save> = $d13;
        r3[15] = 1;
        goto label10;

     label9:
        $d14 = r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lon_gps_save>;
        $d15 = virtualinvoke r1.<android.location.Location: double getLongitude()>();
        $d16 = $d14 - $d15;
        $d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);
        $b13 = $d17 cmpl d1;
        r3[16] = 1;
        if $b13 <= 0 goto label10;

        r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $d18 = virtualinvoke r1.<android.location.Location: double getLatitude()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lat_gps_save> = $d18;
        $d19 = virtualinvoke r1.<android.location.Location: double getLongitude()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: double cur_lon_gps_save> = $d19;
        r3[17] = 1;

     label10:
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r15 = new com.zoffcc.applications.aagtl.Coordinate;
        $d20 = virtualinvoke r1.<android.location.Location: double getLatitude()>();
        $d21 = virtualinvoke r1.<android.location.Location: double getLongitude()>();
        specialinvoke $r15.<com.zoffcc.applications.aagtl.Coordinate: void <init>(double,double)>($d20, $d21);
        virtualinvoke $r14.<com.zoffcc.applications.aagtl.Rose: void set_center(com.zoffcc.applications.aagtl.Coordinate)>($r15);
        $r16 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r16.<com.zoffcc.applications.aagtl.Rose: void __calc_tiles_on_display()>();
        $z2 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();
        r3[18] = 1;
        if $z2 == 0 goto label11;

        $r17 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r17.<com.zoffcc.applications.aagtl.Rose: void load_caches_from_db()>();
        r3[19] = 1;

     label11:
        $i14 = r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view>;
        r3[20] = 1;
        if $i14 != 1 goto label12;

        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r19 = $r18.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.aagtl main_object>;
        $r20 = $r19.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GeocachesView gcview>;
        virtualinvoke $r20.<com.zoffcc.applications.aagtl.GeocachesView: void invalidate()>();
        r3[21] = 1;

     label12:
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        virtualinvoke $r21.<com.zoffcc.applications.aagtl.Rose: void draw_me()>();
        $r22 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.aagtl$settings global_settings>;
        $r23 = $r22.<com.zoffcc.applications.aagtl.aagtl$settings: java.lang.Boolean options_use_compass_heading>;
        $z3 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();
        r3[22] = 1;
        if $z3 != 0 goto label13;

        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $f0 = virtualinvoke r1.<android.location.Location: float getBearing()>();
        $d22 = (double) $f0;
        virtualinvoke $r24.<com.zoffcc.applications.aagtl.CrossHair: void set_gps_heading(double)>($d22);
        r3[23] = 1;

     label13:
        $r25 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $f1 = virtualinvoke r1.<android.location.Location: float getAccuracy()>();
        $d23 = (double) $f1;
        virtualinvoke $r25.<com.zoffcc.applications.aagtl.CrossHair: void set_gps_acc(double)>($d23);
        $r26 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r26.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        $i15 = r0.<com.zoffcc.applications.aagtl.aagtl: int current_display_view>;
        r3[24] = 1;
        if $i15 != 3 goto label14;

        $r27 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.ArrowView arrowview>;
        virtualinvoke $r27.<com.zoffcc.applications.aagtl.ArrowView: void invalidate()>();
        r3[25] = 1;

     label14:
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = newarray (java.lang.Object)[1];
        $d24 = virtualinvoke r1.<android.location.Location: double getLatitude()>();
        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d24);
        $r29[0] = $r30;
        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("lat %.5f", $r29);
        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r34 = newarray (java.lang.Object)[1];
        $d25 = virtualinvoke r1.<android.location.Location: double getLongitude()>();
        $r35 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d25);
        $r34[0] = $r35;
        $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("lon %.5f", $r34);
        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void change_status_text(java.lang.String)>($r38);
        r3[26] = 1;
        return;
    }

    public void change_status_text(java.lang.String)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        android.os.Message r4;
        android.os.Bundle r5, $r7;
        android.os.Handler $r6, $r8;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[43];
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler handle_status_text>;
        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();
        $r7 = new android.os.Bundle;
        specialinvoke $r7.<android.os.Bundle: void <init>()>();
        r5 = $r7;
        virtualinvoke r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("text", r1);
        virtualinvoke r5.<android.os.Bundle: void putInt(java.lang.String,int)>("id", 0);
        virtualinvoke r4.<android.os.Message: void setData(android.os.Bundle)>(r5);
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler handle_status_text>;
        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);
        r3[0] = 1;
        return;
    }

    public void change_status_text_real(java.lang.String)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.String r1, $r6, $r9, $r11;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.TextView $r4, $r12;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[44];
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String status_text_string> = r1;
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String status_text_string>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String status_append_string>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r12.<android.widget.TextView: void postInvalidate()>();
        r3[0] = 1;
        return;
    }

    public void append_status_text(java.lang.String)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        android.os.Message r4;
        android.os.Bundle r5, $r7;
        android.os.Handler $r6, $r8;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[45];
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler handle_status_text>;
        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();
        $r7 = new android.os.Bundle;
        specialinvoke $r7.<android.os.Bundle: void <init>()>();
        r5 = $r7;
        virtualinvoke r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("text", r1);
        virtualinvoke r5.<android.os.Bundle: void putInt(java.lang.String,int)>("id", 1);
        virtualinvoke r4.<android.os.Message: void setData(android.os.Bundle)>(r5);
        $r8 = r0.<com.zoffcc.applications.aagtl.aagtl: android.os.Handler handle_status_text>;
        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);
        r3[0] = 1;
        return;
    }

    public void append_status_text_real(java.lang.String)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.String r1, $r6, $r9, $r11;
        boolean[][] $r2;
        boolean[] r3;
        android.widget.TextView $r4, $r12;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[46];
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String status_append_string> = r1;
        $r4 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String status_text_string>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String status_append_string>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.TextView status_text>;
        virtualinvoke $r12.<android.widget.TextView: void postInvalidate()>();
        r3[0] = 1;
        return;
    }

    public void onProviderDisabled(java.lang.String)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[47];
        r3[0] = 1;
        return;
    }

    public void onProviderEnabled(java.lang.String)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.String;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[48];
        r3[0] = 1;
        return;
    }

    public void onStatusChanged(java.lang.String, int, android.os.Bundle)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: android.os.Bundle;
        $r3 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r4 = $r3[49];
        r4[0] = 1;
        return;
    }

    public void onGpsStatusChanged(int)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        int i0, i1, $i2, $i3, $i8;
        boolean[][] $r1;
        boolean[] r2;
        android.location.GpsStatus r3;
        java.lang.Iterable r4;
        java.util.Iterator r5;
        android.location.GpsSatellite r6;
        android.location.LocationManager $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8;
        com.zoffcc.applications.aagtl.CrossHair $r9, $r10, $r16;
        java.lang.Boolean r11, $r14, $r15, r17, $r18, $r19;
        android.location.Location $r12;
        long $l4, $l5, $l6;
        byte $b7;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        i0 := @parameter0: int;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[50];
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.LocationManager lm>;
        r3 = virtualinvoke $r7.<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>(null);
        r4 = virtualinvoke r3.<android.location.GpsStatus: java.lang.Iterable getSatellites()>();
        r5 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>();
        i1 = 0;
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (android.location.GpsSatellite) $r8;
        $z1 = virtualinvoke r6.<android.location.GpsSatellite: boolean usedInFix()>();
        r2[2] = 1;
        if $z1 == 0 goto label2;

        i1 = i1 + 1;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        goto label1;

     label3:
        $i2 = r0.<com.zoffcc.applications.aagtl.aagtl: int used_sats>;
        r2[5] = 1;
        if $i2 == i1 goto label4;

        r0.<com.zoffcc.applications.aagtl.aagtl: int used_sats> = i1;
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        $i3 = r0.<com.zoffcc.applications.aagtl.aagtl: int used_sats>;
        virtualinvoke $r9.<com.zoffcc.applications.aagtl.CrossHair: void set_used_sats(int)>($i3);
        $r10 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r10.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        r2[6] = 1;

     label4:
        r11 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix>;
        r2[7] = 1;
        lookupswitch(i0)
        {
            case 3: goto label10;
            case 4: goto label5;
            default: goto label11;
        };

     label5:
        $r12 = r0.<com.zoffcc.applications.aagtl.aagtl: android.location.Location mLastLocation>;
        r2[8] = 1;
        if $r12 == null goto label8;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        $l5 = r0.<com.zoffcc.applications.aagtl.aagtl: long mLastLocationMillis>;
        $l6 = $l4 - $l5;
        $b7 = $l6 cmp 3000L;
        r2[9] = 1;
        if $b7 >= 0 goto label6;

        $z2 = 1;
        r2[10] = 1;
        goto label7;

     label6:
        $z2 = 0;
        r2[11] = 1;

     label7:
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix> = $r14;
        r2[12] = 1;

     label8:
        $r15 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix>;
        $i8 = virtualinvoke $r15.<java.lang.Boolean: int compareTo(java.lang.Boolean)>(r11);
        r2[13] = 1;
        if $i8 == 0 goto label9;

        $r16 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.CrossHair cross>;
        virtualinvoke $r16.<com.zoffcc.applications.aagtl.CrossHair: void invalidate()>();
        r2[14] = 1;

     label9:
        r17 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix>;
        $r18 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix>;
        $z3 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();
        r2[15] = 1;
        if $z3 == 0 goto label11;

        r2[16] = 1;
        goto label11;

     label10:
        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean isGPSFix> = $r19;
        r2[17] = 1;

     label11:
        r2[18] = 1;
        return;
    }

    public void upload_fieldnotes()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List r3;
        com.zoffcc.applications.aagtl.FieldnotesUploader r4, $r8;
        boolean z0;
        com.zoffcc.applications.aagtl.PointProvider $r5;
        int $i0, $i1;
        android.content.Context $r6, $r11, $r18;
        android.widget.Toast $r7, $r17, $r19;
        com.zoffcc.applications.aagtl.HTMLDownloader $r9;
        java.lang.Boolean $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        java.lang.String $r16;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[51];
        $r5 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.PointProvider pv>;
        r3 = virtualinvoke $r5.<com.zoffcc.applications.aagtl.PointProvider: java.util.List get_new_fieldnotes()>();
        r2[0] = 1;
        if r3 == null goto label1;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();
        r2[1] = 1;
        if $i0 != 0 goto label2;

     label1:
        $r6 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r6, "No Fieldnotes to upload", 0);
        virtualinvoke $r7.<android.widget.Toast: void show()>();
        r2[2] = 1;
        goto label4;

     label2:
        $r8 = new com.zoffcc.applications.aagtl.FieldnotesUploader;
        $r9 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.HTMLDownloader wdl>;
        specialinvoke $r8.<com.zoffcc.applications.aagtl.FieldnotesUploader: void <init>(com.zoffcc.applications.aagtl.HTMLDownloader,java.util.List)>($r9, r3);
        r4 = $r8;
        $r10 = virtualinvoke r4.<com.zoffcc.applications.aagtl.FieldnotesUploader: java.lang.Boolean upload()>();
        z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();
        r2[3] = 1;
        if z0 == 0 goto label3;

        $r11 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Fieldnotes uploaded");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        $r17 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r11, $r16, 0);
        virtualinvoke $r17.<android.widget.Toast: void show()>();
        r2[4] = 1;
        goto label4;

     label3:
        $r18 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r19 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r18, "Error while uploading Fieldnotes", 0);
        virtualinvoke $r19.<android.widget.Toast: void show()>();
        r2[5] = 1;

     label4:
        r2[6] = 1;
        return;
    }

    public void get_route_files()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r8, $r9, $r14, $r15, $r18;
        java.io.File r4, $r6, $r12, $r16, $r21, $r23;
        java.io.File[] r5;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r7, $r10, $r17, $r19, $r22;
        java.lang.CharSequence[] $r11, $r20, $r24, $r28;
        boolean $z0, $z1;
        java.io.PrintStream $r13;
        android.app.AlertDialog$Builder $r25, r26;
        com.zoffcc.applications.aagtl.aagtl$8 $r29;
        android.app.AlertDialog $r31, $r32;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[52];
        $r6 = new java.io.File;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String main_dir>;
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/routes/");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r10);
        r4 = $r6;
        r5 = virtualinvoke r4.<java.io.File: java.io.File[] listFiles()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.String current_routefile_name> = null;
        $i1 = lengthof r5;
        $i2 = $i1 + 1;
        $r11 = newarray (java.lang.CharSequence)[$i2];
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.CharSequence[] route_file_items> = $r11;
        i0 = 0;
        r2[0] = 1;

     label1:
        $i3 = lengthof r5;
        r2[1] = 1;
        if i0 >= $i3 goto label4;

        $r12 = r5[i0];
        $z0 = virtualinvoke $r12.<java.io.File: boolean isFile()>();
        r2[2] = 1;
        if $z0 == 0 goto label2;

        $r13 = <java.lang.System: java.io.PrintStream out>;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");
        $r16 = r5[i0];
        $r17 = virtualinvoke $r16.<java.io.File: java.lang.String getName()>();
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r19);
        $r20 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.CharSequence[] route_file_items>;
        $r21 = r5[i0];
        $r22 = virtualinvoke $r21.<java.io.File: java.lang.String getName()>();
        $r20[i0] = $r22;
        r2[3] = 1;
        goto label3;

     label2:
        $r23 = r5[i0];
        $z1 = virtualinvoke $r23.<java.io.File: boolean isDirectory()>();
        r2[4] = 1;
        if $z1 == 0 goto label3;

     label3:
        i0 = i0 + 1;
        r2[5] = 1;
        goto label1;

     label4:
        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.CharSequence[] route_file_items>;
        $i4 = lengthof r5;
        $r24[$i4] = "--None--";
        $r25 = new android.app.AlertDialog$Builder;
        specialinvoke $r25.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r26 = $r25;
        virtualinvoke r26.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Pick a Routefile");
        $r28 = r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.CharSequence[] route_file_items>;
        $r29 = new com.zoffcc.applications.aagtl.aagtl$8;
        specialinvoke $r29.<com.zoffcc.applications.aagtl.aagtl$8: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        virtualinvoke r26.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r28, $r29);
        $r31 = virtualinvoke r26.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        r0.<com.zoffcc.applications.aagtl.aagtl: android.app.AlertDialog alert> = $r31;
        $r32 = r0.<com.zoffcc.applications.aagtl.aagtl: android.app.AlertDialog alert>;
        virtualinvoke $r32.<android.app.AlertDialog: void show()>();
        r2[6] = 1;
        return;
    }

    public void change_target_coords_lat()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0, z1, z2, $z3;
        java.lang.String r4, r5;
        com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m r6;
        com.zoffcc.applications.aagtl.Rose $r7;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r8;
        int i0, i1, i2;
        java.lang.Boolean r9, $r10;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[53];
        z0 = 0;
        z1 = 0;
        z2 = 0;
        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r4 = "N";
        r5 = "S";
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r6 = virtualinvoke $r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m d_to_dm_m()>();
        i0 = r6.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_deg>;
        i1 = r6.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min>;
        i2 = r6.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lat_min_fractions>;
        r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $z3 = r6.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lat_plus_minus>;
        r2[0] = 1;
        if $z3 != 0 goto label1;

        r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r2[1] = 1;

     label1:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void show_geocoord_picker(java.lang.Boolean,int,int,int,java.lang.Boolean,java.lang.String,java.lang.String)>($r10, i0, i1, i2, r9, r4, r5);
        r2[2] = 1;
        return;
    }

    public void change_target_coords_lon()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0, z1, z2, $z3;
        java.lang.String r4, r5;
        com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m r6;
        com.zoffcc.applications.aagtl.Rose $r7;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r8;
        int i0, i1, i2;
        java.lang.Boolean r9, $r10;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[54];
        z0 = 0;
        z1 = 0;
        z2 = 0;
        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        r4 = "E";
        r5 = "W";
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        r6 = virtualinvoke $r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m d_to_dm_m()>();
        i0 = r6.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_deg>;
        i1 = r6.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min>;
        i2 = r6.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: int lon_min_fractions>;
        r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        $z3 = r6.<com.zoffcc.applications.aagtl.Coordinate$coords_d_m_m: boolean lon_plus_minus>;
        r2[0] = 1;
        if $z3 != 0 goto label1;

        r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        r2[1] = 1;

     label1:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void show_geocoord_picker(java.lang.Boolean,int,int,int,java.lang.Boolean,java.lang.String,java.lang.String)>($r10, i0, i1, i2, r9, r4, r5);
        r2[2] = 1;
        return;
    }

    public void show_geocoord_picker(java.lang.Boolean, int, int, int, java.lang.Boolean, java.lang.String, java.lang.String)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        java.lang.Boolean r1, r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        java.lang.String r3, r4;
        boolean[][] $r5;
        boolean[] r6;
        android.widget.RelativeLayout$LayoutParams r7, r8, r9, r10, r11, r12, $r18, $r23, $r36, $r44, $r48, $r56;
        com.example.widget.NumberPicker $r13, $r14, $r16, $r17, $r21, $r31, $r32, $r34, $r35, $r38, $r39, $r40, $r42, $r43, $r47;
        com.example.widget.NumberPicker$Formatter $r15, $r33, $r41;
        com.zoffcc.applications.aagtl.Rose $r19, $r45, $r50, $r58, $r59;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        android.widget.RelativeLayout $r20, $r29, $r37, $r46, $r54, $r63;
        android.widget.ToggleButton $r22, $r24, $r25, $r26, $r27, $r28, $r30;
        boolean $z0, $z1;
        android.widget.Button $r49, $r51, $r52, $r55, $r57, $r60, $r61, $r64;
        com.zoffcc.applications.aagtl.aagtl$9 $r53;
        com.zoffcc.applications.aagtl.aagtl$10 $r62;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        r1 := @parameter0: java.lang.Boolean;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r2 := @parameter4: java.lang.Boolean;
        r3 := @parameter5: java.lang.String;
        r4 := @parameter6: java.lang.String;
        $r5 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r6 = $r5[55];
        r0.<com.zoffcc.applications.aagtl.aagtl: java.lang.Boolean is_lat_current_change_target_coords> = r1;
        $r13 = new com.example.widget.NumberPicker;
        specialinvoke $r13.<com.example.widget.NumberPicker: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1> = $r13;
        $r14 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        $r15 = <com.example.widget.NumberPicker: com.example.widget.NumberPicker$Formatter THREE_DIGIT_FORMATTER>;
        virtualinvoke $r14.<com.example.widget.NumberPicker: void setFormatter(com.example.widget.NumberPicker$Formatter)>($r15);
        $r16 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        virtualinvoke $r16.<com.example.widget.NumberPicker: void setRange(int,int)>(0, 999);
        $r17 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        virtualinvoke $r17.<com.example.widget.NumberPicker: void setCurrent(int)>(i0);
        $r18 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r18.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(150, -1);
        r7 = $r18;
        r7.<android.widget.RelativeLayout$LayoutParams: int topMargin> = 20;
        r7.<android.widget.RelativeLayout$LayoutParams: int leftMargin> = 5;
        r7.<android.widget.RelativeLayout$LayoutParams: int height> = 200;
        $r19 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i3 = $r19.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $d0 = (double) $i3;
        $d1 = $d0 * 0.3;
        $i4 = (int) $d1;
        r7.<android.widget.RelativeLayout$LayoutParams: int width> = $i4;
        virtualinvoke r7.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(10);
        $r20 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r21 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx1>;
        virtualinvoke $r20.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r21, r7);
        $r22 = new android.widget.ToggleButton;
        specialinvoke $r22.<android.widget.ToggleButton: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle> = $r22;
        $r23 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r23.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(150, -1);
        r8 = $r23;
        $r24 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
        virtualinvoke $r24.<android.widget.ToggleButton: void setChecked(boolean)>($z0);
        $z1 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();
        r6[0] = 1;
        if $z1 == 0 goto label1;

        $r25 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        virtualinvoke $r25.<android.widget.ToggleButton: void setText(java.lang.CharSequence)>(r3);
        r6[1] = 1;
        goto label2;

     label1:
        $r26 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        virtualinvoke $r26.<android.widget.ToggleButton: void setText(java.lang.CharSequence)>(r4);
        r6[2] = 1;

     label2:
        $r27 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        virtualinvoke $r27.<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>(r4);
        $r28 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        virtualinvoke $r28.<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>(r3);
        r8.<android.widget.RelativeLayout$LayoutParams: int topMargin> = 22;
        r8.<android.widget.RelativeLayout$LayoutParams: int rightMargin> = 1;
        $i5 = r7.<android.widget.RelativeLayout$LayoutParams: int width>;
        $i6 = 4 + $i5;
        r8.<android.widget.RelativeLayout$LayoutParams: int leftMargin> = $i6;
        r8.<android.widget.RelativeLayout$LayoutParams: int height> = 190;
        r8.<android.widget.RelativeLayout$LayoutParams: int width> = 55;
        virtualinvoke r8.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(10);
        $r29 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r30 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.ToggleButton orient_1_toggle>;
        virtualinvoke $r29.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r30, r8);
        $r31 = new com.example.widget.NumberPicker;
        specialinvoke $r31.<com.example.widget.NumberPicker: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2> = $r31;
        $r32 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        $r33 = <com.example.widget.NumberPicker: com.example.widget.NumberPicker$Formatter TWO_DIGIT_FORMATTER>;
        virtualinvoke $r32.<com.example.widget.NumberPicker: void setFormatter(com.example.widget.NumberPicker$Formatter)>($r33);
        $r34 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        virtualinvoke $r34.<com.example.widget.NumberPicker: void setRange(int,int)>(0, 99);
        $r35 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        virtualinvoke $r35.<com.example.widget.NumberPicker: void setCurrent(int)>(i1);
        $r36 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r36.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(150, -1);
        r9 = $r36;
        r9.<android.widget.RelativeLayout$LayoutParams: int rightMargin> = 5;
        r9.<android.widget.RelativeLayout$LayoutParams: int topMargin> = 20;
        r9.<android.widget.RelativeLayout$LayoutParams: int height> = 200;
        $i7 = r7.<android.widget.RelativeLayout$LayoutParams: int width>;
        $i8 = $i7 + 2;
        $i9 = $i8 + 55;
        r9.<android.widget.RelativeLayout$LayoutParams: int leftMargin> = $i9;
        r9.<android.widget.RelativeLayout$LayoutParams: int width> = 110;
        virtualinvoke r9.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(10);
        $r37 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r38 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx2>;
        virtualinvoke $r37.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r38, r9);
        $r39 = new com.example.widget.NumberPicker;
        specialinvoke $r39.<com.example.widget.NumberPicker: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3> = $r39;
        $r40 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        $r41 = <com.example.widget.NumberPicker: com.example.widget.NumberPicker$Formatter THREE_DIGIT_FORMATTER>;
        virtualinvoke $r40.<com.example.widget.NumberPicker: void setFormatter(com.example.widget.NumberPicker$Formatter)>($r41);
        $r42 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        virtualinvoke $r42.<com.example.widget.NumberPicker: void setRange(int,int)>(0, 999);
        $r43 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        virtualinvoke $r43.<com.example.widget.NumberPicker: void setCurrent(int)>(i2);
        $r44 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r44.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(150, -1);
        r10 = $r44;
        r10.<android.widget.RelativeLayout$LayoutParams: int rightMargin> = 5;
        r10.<android.widget.RelativeLayout$LayoutParams: int topMargin> = 20;
        r10.<android.widget.RelativeLayout$LayoutParams: int height> = 200;
        $i10 = r7.<android.widget.RelativeLayout$LayoutParams: int width>;
        $i11 = r9.<android.widget.RelativeLayout$LayoutParams: int width>;
        $i12 = $i10 + $i11;
        $i13 = $i12 + 2;
        $i14 = $i13 + 55;
        r10.<android.widget.RelativeLayout$LayoutParams: int leftMargin> = $i14;
        $r45 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i15 = $r45.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i16 = r7.<android.widget.RelativeLayout$LayoutParams: int width>;
        $i17 = $i15 - $i16;
        $i18 = r9.<android.widget.RelativeLayout$LayoutParams: int width>;
        $i19 = $i17 - $i18;
        $i20 = $i19 - 5;
        $i21 = $i20 - 55;
        r10.<android.widget.RelativeLayout$LayoutParams: int width> = $i21;
        virtualinvoke r10.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(10);
        $r46 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r47 = r0.<com.zoffcc.applications.aagtl.aagtl: com.example.widget.NumberPicker xx3>;
        virtualinvoke $r46.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r47, r10);
        $r48 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r48.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(150, -1);
        r11 = $r48;
        $r49 = new android.widget.Button;
        specialinvoke $r49.<android.widget.Button: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_ok> = $r49;
        $r50 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i22 = $r50.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $d2 = (double) $i22;
        $d3 = $d2 * 0.4;
        $i23 = (int) $d3;
        r11.<android.widget.RelativeLayout$LayoutParams: int width> = $i23;
        r11.<android.widget.RelativeLayout$LayoutParams: int height> = 70;
        r11.<android.widget.RelativeLayout$LayoutParams: int leftMargin> = 5;
        $i24 = r9.<android.widget.RelativeLayout$LayoutParams: int height>;
        $i25 = 23 + $i24;
        r11.<android.widget.RelativeLayout$LayoutParams: int topMargin> = $i25;
        $r51 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_ok>;
        virtualinvoke $r51.<android.widget.Button: void setText(java.lang.CharSequence)>("OK");
        virtualinvoke r11.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(10);
        $r52 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_ok>;
        $r53 = new com.zoffcc.applications.aagtl.aagtl$9;
        specialinvoke $r53.<com.zoffcc.applications.aagtl.aagtl$9: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        virtualinvoke $r52.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r53);
        $r54 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r55 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_ok>;
        virtualinvoke $r54.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r55, r11);
        $r56 = new android.widget.RelativeLayout$LayoutParams;
        specialinvoke $r56.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(150, -1);
        r12 = $r56;
        $r57 = new android.widget.Button;
        specialinvoke $r57.<android.widget.Button: void <init>(android.content.Context)>(r0);
        r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_cancel> = $r57;
        $r58 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i26 = $r58.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $d4 = (double) $i26;
        $d5 = $d4 * 0.4;
        $i27 = (int) $d5;
        r12.<android.widget.RelativeLayout$LayoutParams: int width> = $i27;
        r12.<android.widget.RelativeLayout$LayoutParams: int height> = 70;
        $i28 = r9.<android.widget.RelativeLayout$LayoutParams: int height>;
        $i29 = 23 + $i28;
        r12.<android.widget.RelativeLayout$LayoutParams: int topMargin> = $i29;
        $r59 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $i30 = $r59.<com.zoffcc.applications.aagtl.Rose: int mCanvasWidth>;
        $i31 = $i30 - 5;
        $i32 = r12.<android.widget.RelativeLayout$LayoutParams: int width>;
        $i33 = $i31 - $i32;
        r12.<android.widget.RelativeLayout$LayoutParams: int leftMargin> = $i33;
        r12.<android.widget.RelativeLayout$LayoutParams: int rightMargin> = 5;
        $r60 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_cancel>;
        virtualinvoke $r60.<android.widget.Button: void setText(java.lang.CharSequence)>("Cancel");
        virtualinvoke r12.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(10);
        $r61 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_cancel>;
        $r62 = new com.zoffcc.applications.aagtl.aagtl$10;
        specialinvoke $r62.<com.zoffcc.applications.aagtl.aagtl$10: void <init>(com.zoffcc.applications.aagtl.aagtl)>(r0);
        virtualinvoke $r61.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r62);
        $r63 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.RelativeLayout mainscreen_map_view>;
        $r64 = r0.<com.zoffcc.applications.aagtl.aagtl: android.widget.Button btn_cancel>;
        virtualinvoke $r63.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r64, r12);
        r6[3] = 1;
        return;
    }

    public void navigate_to_target()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r6, $r9, $r10, $r13;
        java.lang.Exception r4, $r16;
        android.content.Intent $r5;
        com.zoffcc.applications.aagtl.Rose $r7, $r11;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r8, $r12;
        double $d0, $d1;
        java.lang.String $r14;
        android.net.Uri $r15;
        android.content.Context $r17;
        android.widget.Toast $r18;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[56];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void save_settings()>();

     label1:
        $r5 = new android.content.Intent;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("google.navigation:q=");
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $d0 = $r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lat>;
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r11 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.Rose rose>;
        $r12 = $r11.<com.zoffcc.applications.aagtl.Rose: com.zoffcc.applications.aagtl.GeocacheCoordinate current_target>;
        $d1 = $r12.<com.zoffcc.applications.aagtl.GeocacheCoordinate: double lon>;
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r14);
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r15);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void startActivity(android.content.Intent)>($r5);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;
        r4 = $r16;
        $r17 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r18 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r17, "Error starting navigation!", 0);
        virtualinvoke $r18.<android.widget.Toast: void show()>();
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void show_cache_page_in_browser()
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r6, $r10;
        java.lang.Exception r4, $r13;
        android.content.Intent $r5;
        com.zoffcc.applications.aagtl.GCacheView $r7;
        com.zoffcc.applications.aagtl.GeocacheCoordinate $r8;
        java.lang.String $r9, $r11;
        android.net.Uri $r12;
        android.content.Context $r14;
        android.widget.Toast $r15;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        $r1 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[57];
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void save_settings()>();

     label1:
        $r5 = new android.content.Intent;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.geocaching.com/seek/cache_details.aspx?wp=");
        $r7 = r0.<com.zoffcc.applications.aagtl.aagtl: com.zoffcc.applications.aagtl.GCacheView cacheview>;
        $r8 = $r7.<com.zoffcc.applications.aagtl.GCacheView: com.zoffcc.applications.aagtl.GeocacheCoordinate gc>;
        $r9 = $r8.<com.zoffcc.applications.aagtl.GeocacheCoordinate: java.lang.String name>;
        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r12);
        virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: void startActivity(android.content.Intent)>($r5);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;
        r4 = $r13;
        $r14 = virtualinvoke r0.<com.zoffcc.applications.aagtl.aagtl: android.content.Context getApplicationContext()>();
        $r15 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r14, "Error starting Browser!", 0);
        virtualinvoke $r15.<android.widget.Toast: void show()>();
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();
        r2[1] = 1;

     label4:
        r2[2] = 1;
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean XXXXXXXXXXXXXXonKeyDown(int, android.view.KeyEvent)
    {
        com.zoffcc.applications.aagtl.aagtl r0;
        int i0, i1;
        android.view.KeyEvent r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r11, r14, $r19, r20, $r25, $r30;
        java.io.PrintStream $r5, $r15, $r21, $r26;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r16, $r17, $r18, $r22, $r23, $r24, $r27, $r28, $r29;
        char $c2;

        r0 := @this: com.zoffcc.applications.aagtl.aagtl;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.KeyEvent;
        $r2 = <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[58];
        r4 = null;
        i1 = virtualinvoke r1.<android.view.KeyEvent: int getUnicodeChar()>();
        $r5 = <java.lang.System: java.io.PrintStream out>;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onKeyDown ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r11);
        r3[0] = 1;
        if i1 != 0 goto label12;

        r3[1] = 1;
        if i0 != 67 goto label1;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(8);
        r3[2] = 1;
        goto label14;

     label1:
        r3[3] = 1;
        if i0 != 82 goto label2;

        staticinvoke <java.lang.String: java.lang.String valueOf(char)>(1);
        r3[4] = 1;
        return 0;

     label2:
        r3[5] = 1;
        if i0 != 84 goto label3;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(19);
        r3[6] = 1;
        goto label14;

     label3:
        r3[7] = 1;
        if i0 != 4 goto label4;

        staticinvoke <java.lang.String: java.lang.String valueOf(char)>(27);
        r3[8] = 1;
        return 0;

     label4:
        r3[9] = 1;
        if i0 != 5 goto label5;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(3);
        r3[10] = 1;
        goto label14;

     label5:
        r3[11] = 1;
        if i0 != 24 goto label6;

        r14 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(21);
        $r15 = <java.lang.System: java.io.PrintStream out>;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ss ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19);
        r3[12] = 1;
        return 0;

     label6:
        r3[13] = 1;
        if i0 != 25 goto label7;

        r20 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(4);
        $r21 = <java.lang.System: java.io.PrintStream out>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ss ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r25);
        r3[14] = 1;
        return 0;

     label7:
        r3[15] = 1;
        if i0 != 23 goto label8;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(13);
        r3[16] = 1;
        goto label14;

     label8:
        r3[17] = 1;
        if i0 != 20 goto label9;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(16);
        r3[18] = 1;
        goto label14;

     label9:
        r3[19] = 1;
        if i0 != 21 goto label10;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(2);
        r3[20] = 1;
        goto label14;

     label10:
        r3[21] = 1;
        if i0 != 22 goto label11;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(6);
        r3[22] = 1;
        goto label14;

     label11:
        r3[23] = 1;
        if i0 != 19 goto label14;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(14);
        r3[24] = 1;
        goto label14;

     label12:
        r3[25] = 1;
        if i1 != 10 goto label13;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(13);
        r3[26] = 1;
        goto label14;

     label13:
        $c2 = (char) i1;
        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);
        r3[27] = 1;

     label14:
        r3[28] = 1;
        if r4 == null goto label15;

        $r26 = <java.lang.System: java.io.PrintStream out>;
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s: ");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);
        r3[29] = 1;

     label15:
        r3[30] = 1;
        return 1;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRi()>();
        r1 = $r0[59];
        <com.zoffcc.applications.aagtl.aagtl: int TOUCH_CACHES_AFTER_THIS_ZOOM_LEVEL> = 16;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60;

        $r0 = newmultiarray (boolean)[60][];
        <com.zoffcc.applications.aagtl.aagtl: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[33];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[25];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[29];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[14];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[17];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[9];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[8];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[52];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[8];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[4];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[4];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[10];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[25];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[6];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[6];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[24];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[3];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[3];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[4];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[3];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[1];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[38] = $r39;
        $r40 = newarray (boolean)[1];
        $r0[39] = $r40;
        $r41 = newarray (boolean)[3];
        $r0[40] = $r41;
        $r42 = newarray (boolean)[3];
        $r0[41] = $r42;
        $r43 = newarray (boolean)[27];
        $r0[42] = $r43;
        $r44 = newarray (boolean)[1];
        $r0[43] = $r44;
        $r45 = newarray (boolean)[1];
        $r0[44] = $r45;
        $r46 = newarray (boolean)[1];
        $r0[45] = $r46;
        $r47 = newarray (boolean)[1];
        $r0[46] = $r47;
        $r48 = newarray (boolean)[1];
        $r0[47] = $r48;
        $r49 = newarray (boolean)[1];
        $r0[48] = $r49;
        $r50 = newarray (boolean)[1];
        $r0[49] = $r50;
        $r51 = newarray (boolean)[19];
        $r0[50] = $r51;
        $r52 = newarray (boolean)[7];
        $r0[51] = $r52;
        $r53 = newarray (boolean)[7];
        $r0[52] = $r53;
        $r54 = newarray (boolean)[3];
        $r0[53] = $r54;
        $r55 = newarray (boolean)[3];
        $r0[54] = $r55;
        $r56 = newarray (boolean)[4];
        $r0[55] = $r56;
        $r57 = newarray (boolean)[3];
        $r0[56] = $r57;
        $r58 = newarray (boolean)[3];
        $r0[57] = $r58;
        $r59 = newarray (boolean)[31];
        $r0[58] = $r59;
        $r60 = newarray (boolean)[1];
        $r0[59] = $r60;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtl", 3827814630700297348L);
        return $r0;
    }
}
public class com.zoffcc.applications.aagtl.aagtlTextTranslations extends java.lang.Object
{
    static final java.lang.String m;
    static final java.lang.String INFO_BOX_TITLE;
    static final java.lang.String JAVA_MENU_MOREINFO;
    static final java.lang.String INFO_BOX_TEXT;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.zoffcc.applications.aagtl.aagtlTextTranslations r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: com.zoffcc.applications.aagtl.aagtlTextTranslations;
        $r1 = <com.zoffcc.applications.aagtl.aagtlTextTranslations: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <com.zoffcc.applications.aagtl.aagtlTextTranslations: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <com.zoffcc.applications.aagtl.aagtlTextTranslations: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <com.zoffcc.applications.aagtl.aagtlTextTranslations: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "com/zoffcc/applications/aagtl/aagtlTextTranslations", 9251206036812L);
        return $r0;
    }
}
public class moz.http.HttpData extends java.lang.Object
{
    public java.lang.String content;
    public java.util.Hashtable cookies;
    public java.util.Hashtable headers;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        moz.http.HttpData r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Hashtable $r3, $r4;

        r0 := @this: moz.http.HttpData;
        $r1 = <moz.http.HttpData: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <moz.http.HttpData: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.Hashtable;
        specialinvoke $r3.<java.util.Hashtable: void <init>()>();
        r0.<moz.http.HttpData: java.util.Hashtable cookies> = $r3;
        $r4 = new java.util.Hashtable;
        specialinvoke $r4.<java.util.Hashtable: void <init>()>();
        r0.<moz.http.HttpData: java.util.Hashtable headers> = $r4;
        r2[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <moz.http.HttpData: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <moz.http.HttpData: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "moz/http/HttpData", 9257312993074L);
        return $r0;
    }
}
public class moz.http.HttpRequest extends java.lang.Object
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        moz.http.HttpRequest r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: moz.http.HttpRequest;
        $r1 = <moz.http.HttpRequest: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <moz.http.HttpRequest: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static moz.http.HttpData get(java.lang.String)
    {
        java.lang.String r0, r8, $r19, $r21, $r25, $r28, $r33, $r36, $r41, $r45;
        boolean[][] $r1;
        boolean[] r2;
        moz.http.HttpData r3, $r13;
        java.lang.StringBuffer r4, $r14;
        java.net.URL r5, $r15;
        java.net.URLConnection r6;
        java.io.BufferedReader r7, $r16;
        java.util.Map r9;
        java.util.Set r10;
        java.util.Iterator r11;
        java.util.Map$Entry r12;
        java.io.InputStreamReader $r17;
        java.io.InputStream $r18;
        boolean $z0, $z1;
        java.lang.Object $r22, $r24, $r30, $r31, $r35, $r38, $r39;
        java.lang.StringBuilder $r23, $r26, $r27;
        java.util.Hashtable $r29, $r37;
        java.util.List $r32, $r40;
        java.lang.Exception $r43, r44;

        r0 := @parameter0: java.lang.String;
        $r1 = <moz.http.HttpRequest: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <moz.http.HttpRequest: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r13 = new moz.http.HttpData;
        specialinvoke $r13.<moz.http.HttpData: void <init>()>();
        r3 = $r13;
        $r14 = new java.lang.StringBuffer;
        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();
        r4 = $r14;

     label1:
        $r15 = new java.net.URL;
        specialinvoke $r15.<java.net.URL: void <init>(java.lang.String)>(r0);
        r5 = $r15;
        r6 = virtualinvoke r5.<java.net.URL: java.net.URLConnection openConnection()>();
        $r16 = new java.io.BufferedReader;
        $r17 = new java.io.InputStreamReader;
        $r18 = virtualinvoke r6.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        specialinvoke $r17.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r18);
        specialinvoke $r16.<java.io.BufferedReader: void <init>(java.io.Reader)>($r17);
        r7 = $r16;
        r2[0] = 1;

     label2:
        $r19 = virtualinvoke r7.<java.io.BufferedReader: java.lang.String readLine()>();
        r8 = $r19;
        r2[1] = 1;
        if $r19 == null goto label3;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);
        r2[2] = 1;
        goto label2;

     label3:
        $r21 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
        r3.<moz.http.HttpData: java.lang.String content> = $r21;
        r9 = virtualinvoke r6.<java.net.URLConnection: java.util.Map getHeaderFields()>();
        r10 = interfaceinvoke r9.<java.util.Map: java.util.Set entrySet()>();
        r11 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();
        r2[3] = 1;

     label4:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
        r2[4] = 1;
        if $z0 == 0 goto label6;

        $r22 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
        r12 = (java.util.Map$Entry) $r22;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r25 = (java.lang.String) $r24;
        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HEADER_KEY", $r28);
        $r29 = r3.<moz.http.HttpData: java.util.Hashtable headers>;
        $r30 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r31 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r32 = (java.util.List) $r31;
        $r33 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r29.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r33);
        $r35 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r36 = (java.lang.String) $r35;
        $z1 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>("set-cookie");
        r2[5] = 1;
        if $z1 == 0 goto label5;

        $r37 = r3.<moz.http.HttpData: java.util.Hashtable cookies>;
        $r38 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r39 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r40 = (java.util.List) $r39;
        $r41 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r37.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r41);
        r2[6] = 1;

     label5:
        r2[7] = 1;
        goto label4;

     label6:
        r2[8] = 1;

     label7:
        goto label9;

     label8:
        $r43 := @caughtexception;
        r44 = $r43;
        $r45 = virtualinvoke r44.<java.lang.Exception: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("HttpRequest", $r45);
        r2[9] = 1;

     label9:
        r2[10] = 1;
        return r3;

        catch java.lang.Exception from label1 to label7 with label8;
    }

    public static moz.http.HttpData post(java.lang.String, java.util.Hashtable) throws java.lang.Exception
    {
        java.lang.String r0, r6, $r9, $r13, $r14, $r17;
        java.util.Hashtable r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuffer r4, $r7;
        java.util.Enumeration r5;
        boolean $z0;
        java.lang.Object $r8, $r12;
        moz.http.HttpData $r18;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Hashtable;
        $r2 = <moz.http.HttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <moz.http.HttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r7 = new java.lang.StringBuffer;
        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();
        r4 = $r7;
        r5 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r5.<java.util.Enumeration: boolean hasMoreElements()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r5.<java.util.Enumeration: java.lang.Object nextElement()>();
        r6 = (java.lang.String) $r8;
        $r9 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r6, "UTF-8");
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");
        $r12 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r6);
        $r13 = (java.lang.String) $r12;
        $r14 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r13, "UTF-8");
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&amp;");
        r3[2] = 1;
        goto label1;

     label2:
        $r17 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
        $r18 = staticinvoke <moz.http.HttpRequest: moz.http.HttpData post(java.lang.String,java.lang.String)>(r0, $r17);
        r3[3] = 1;
        return $r18;
    }

    public static moz.http.HttpData post(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r21, $r24, $r29, $r32, $r37, $r43, r44, $r50, $r52, $r53;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuffer r4, $r13;
        moz.http.HttpData r5, $r14;
        java.net.URL r6, $r15;
        java.net.URLConnection r7;
        java.io.OutputStreamWriter r8, $r16;
        java.util.Map r9;
        java.util.Set r10;
        java.util.Iterator r11;
        java.util.Map$Entry r12;
        java.io.OutputStream $r17;
        boolean $z0, $z1;
        java.lang.Object $r18, $r20, $r26, $r27, $r31, $r34, $r35;
        java.lang.StringBuilder $r19, $r22, $r23, $r48, $r49, $r51;
        java.util.Hashtable $r25, $r33;
        java.util.List $r28, $r36;
        java.io.BufferedReader $r39, r42;
        java.io.InputStreamReader $r40;
        java.io.InputStream $r41;
        java.lang.Exception $r46, r47;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = <moz.http.HttpRequest: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <moz.http.HttpRequest: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r13 = new java.lang.StringBuffer;
        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();
        r4 = $r13;
        $r14 = new moz.http.HttpData;
        specialinvoke $r14.<moz.http.HttpData: void <init>()>();
        r5 = $r14;

     label1:
        $r15 = new java.net.URL;
        specialinvoke $r15.<java.net.URL: void <init>(java.lang.String)>(r0);
        r6 = $r15;
        r7 = virtualinvoke r6.<java.net.URL: java.net.URLConnection openConnection()>();
        virtualinvoke r7.<java.net.URLConnection: void setDoOutput(boolean)>(1);
        $r16 = new java.io.OutputStreamWriter;
        $r17 = virtualinvoke r7.<java.net.URLConnection: java.io.OutputStream getOutputStream()>();
        specialinvoke $r16.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r17);
        r8 = $r16;
        virtualinvoke r8.<java.io.OutputStreamWriter: void write(java.lang.String)>(r1);
        virtualinvoke r8.<java.io.OutputStreamWriter: void flush()>();
        r9 = virtualinvoke r7.<java.net.URLConnection: java.util.Map getHeaderFields()>();
        r10 = interfaceinvoke r9.<java.util.Map: java.util.Set entrySet()>();
        r11 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();
        r3[0] = 1;

     label2:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label4;

        $r18 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
        r12 = (java.util.Map$Entry) $r18;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r21 = (java.lang.String) $r20;
        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HEADER_KEY", $r24);
        $r25 = r5.<moz.http.HttpData: java.util.Hashtable headers>;
        $r26 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r27 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r28 = (java.util.List) $r27;
        $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r25.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r29);
        $r31 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r32 = (java.lang.String) $r31;
        $z1 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("set-cookie");
        r3[2] = 1;
        if $z1 == 0 goto label3;

        $r33 = r5.<moz.http.HttpData: java.util.Hashtable cookies>;
        $r34 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r35 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r36 = (java.util.List) $r35;
        $r37 = virtualinvoke $r36.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r33.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r37);
        r3[3] = 1;

     label3:
        r3[4] = 1;
        goto label2;

     label4:
        $r39 = new java.io.BufferedReader;
        $r40 = new java.io.InputStreamReader;
        $r41 = virtualinvoke r7.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        specialinvoke $r40.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r41);
        specialinvoke $r39.<java.io.BufferedReader: void <init>(java.io.Reader)>($r40);
        r42 = $r39;
        r3[5] = 1;

     label5:
        $r43 = virtualinvoke r42.<java.io.BufferedReader: java.lang.String readLine()>();
        r44 = $r43;
        r3[6] = 1;
        if $r43 == null goto label6;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r44);
        r3[7] = 1;
        goto label5;

     label6:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ERROR", r44);
        virtualinvoke r8.<java.io.OutputStreamWriter: void close()>();
        virtualinvoke r42.<java.io.BufferedReader: void close()>();
        r3[8] = 1;

     label7:
        goto label9;

     label8:
        $r46 := @caughtexception;
        r47 = $r46;
        $r48 = new java.lang.StringBuilder;
        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR IN CODE:");
        $r50 = virtualinvoke r47.<java.lang.Exception: java.lang.String getMessage()>();
        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ERROR", $r52);
        r3[9] = 1;

     label9:
        $r53 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();
        r5.<moz.http.HttpData: java.lang.String content> = $r53;
        r3[10] = 1;
        return r5;

        catch java.lang.Exception from label1 to label7 with label8;
    }

    public static moz.http.HttpData post(java.lang.String, java.util.ArrayList, java.lang.String)
    {
        java.lang.String r0, r2;
        java.util.ArrayList r1;
        boolean[][] $r3;
        boolean[] r4;
        java.util.Hashtable r5, $r6;
        moz.http.HttpData $r7;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.ArrayList;
        r2 := @parameter2: java.lang.String;
        $r3 = <moz.http.HttpRequest: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <moz.http.HttpRequest: boolean[][] $VRi()>();

     label0:
        r4 = $r3[4];
        $r6 = new java.util.Hashtable;
        specialinvoke $r6.<java.util.Hashtable: void <init>()>();
        r5 = $r6;
        $r7 = staticinvoke <moz.http.HttpRequest: moz.http.HttpData post(java.lang.String,java.util.Hashtable,java.util.ArrayList,java.lang.String)>(r0, r5, r1, r2);
        r4[0] = 1;
        return $r7;
    }

    public static moz.http.HttpData post(java.lang.String, java.util.Hashtable, java.util.ArrayList, java.lang.String)
    {
        java.lang.String r0, r3, r7, r8, r15, r21, $r29, $r33, $r39, $r45, $r50, $r56, r59, r61, $r66, $r74, $r80, $r84, $r87, $r91, $r95, $r98, $r103, $r106, $r111, $r121, $r123;
        java.util.Hashtable r1, $r99, $r107;
        java.util.ArrayList r2;
        boolean[][] $r4;
        boolean[] r5;
        moz.http.HttpData r6, $r20;
        short s0;
        java.net.URL r9, $r22;
        java.net.HttpURLConnection r10;
        java.io.DataOutputStream r11, $r34;
        int i1, i2, i3, i4, $i5, i7;
        java.io.InputStream r12, $r83;
        byte[] r13;
        java.io.BufferedReader r14, $r81;
        java.util.Map r16;
        java.util.Set r17;
        java.util.Iterator r18;
        java.util.Map$Entry r19;
        java.net.URLConnection $r23;
        java.io.PrintStream $r24;
        java.lang.StringBuilder $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r36, $r37, $r38, $r41, $r42, $r43, $r44, $r46, $r47, $r48, $r49, $r51, $r52, $r53, $r54, $r55, $r62, $r63, $r64, $r65, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r75, $r76, $r77, $r78, $r79, $r85, $r88, $r89, $r90, $r93, $r96, $r97, $r119, $r120, $r122;
        java.io.OutputStream $r35;
        java.lang.Object $r40, $r58, $r60, $r92, $r94, $r100, $r101, $r105, $r108, $r109;
        java.util.Enumeration r57;
        boolean $z0, $z1, $z2;
        java.io.InputStreamReader $r82;
        java.util.List $r102, $r110;
        java.net.MalformedURLException $r113, r114;
        java.io.IOException $r115, r116;
        java.lang.Exception $r117, r118;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Hashtable;
        r2 := @parameter2: java.util.ArrayList;
        r3 := @parameter3: java.lang.String;
        $r4 = <moz.http.HttpRequest: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <moz.http.HttpRequest: boolean[][] $VRi()>();

     label0:
        r5 = $r4[5];
        $r20 = new moz.http.HttpData;
        specialinvoke $r20.<moz.http.HttpData: void <init>()>();
        r6 = $r20;

     label1:
        r7 = "*****************************************";
        r21 = "----------ThIs_Is_tHe_bouNdaRY_$";
        r8 = "\r\n";
        s0 = 4096;
        $r22 = new java.net.URL;
        specialinvoke $r22.<java.net.URL: void <init>(java.lang.String)>(r0);
        r9 = $r22;
        $r23 = virtualinvoke r9.<java.net.URL: java.net.URLConnection openConnection()>();
        r10 = (java.net.HttpURLConnection) $r23;
        virtualinvoke r10.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);
        virtualinvoke r10.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);
        virtualinvoke r10.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);
        virtualinvoke r10.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");
        virtualinvoke r10.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cookie", r3);
        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cookie: ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);
        virtualinvoke r10.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)");
        virtualinvoke r10.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Pragma", "no-cache");
        virtualinvoke r10.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "Keep-Alive");
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/form-data; boundary=");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r10.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r33);
        $r34 = new java.io.DataOutputStream;
        $r35 = virtualinvoke r10.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();
        specialinvoke $r34.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r35);
        r11 = $r34;
        i1 = 0;
        r5[0] = 1;

     label2:
        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        r5[1] = 1;
        if i1 >= $i5 goto label5;

        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("HREQ", $r39);
        $r40 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        r12 = (java.io.InputStream) $r40;
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r11.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r45);
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"ctl00$ContentBody$FieldNoteLoader\"; filename=\"geocache_visits.txt\"");
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r11.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r50);
        i2 = virtualinvoke r12.<java.io.InputStream: int available()>();
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, s0);
        r13 = newarray (byte)[i3];
        i4 = virtualinvoke r12.<java.io.InputStream: int read(byte[],int,int)>(r13, 0, i3);
        r5[2] = 1;

     label3:
        r5[3] = 1;
        if i4 <= 0 goto label4;

        virtualinvoke r11.<java.io.DataOutputStream: void write(byte[],int,int)>(r13, 0, i3);
        i7 = virtualinvoke r12.<java.io.InputStream: int available()>();
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i7, s0);
        i4 = virtualinvoke r12.<java.io.InputStream: int read(byte[],int,int)>(r13, 0, i3);
        r5[4] = 1;
        goto label3;

     label4:
        virtualinvoke r11.<java.io.DataOutputStream: void writeBytes(java.lang.String)>(r8);
        $r51 = new java.lang.StringBuilder;
        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);
        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r11.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r56);
        virtualinvoke r12.<java.io.InputStream: void close()>();
        i1 = i1 + 1;
        r5[5] = 1;
        goto label2;

     label5:
        r57 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>();
        r5[6] = 1;

     label6:
        $z0 = interfaceinvoke r57.<java.util.Enumeration: boolean hasMoreElements()>();
        r5[7] = 1;
        if $z0 == 0 goto label7;

        $r58 = interfaceinvoke r57.<java.util.Enumeration: java.lang.Object nextElement()>();
        r59 = virtualinvoke $r58.<java.lang.Object: java.lang.String toString()>();
        $r60 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r59);
        r61 = (java.lang.String) $r60;
        $r62 = new java.lang.StringBuilder;
        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r11.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r66);
        $r67 = new java.lang.StringBuilder;
        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"");
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);
        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);
        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r11.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r74);
        virtualinvoke r11.<java.io.DataOutputStream: void writeBytes(java.lang.String)>(r8);
        $r75 = new java.lang.StringBuilder;
        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);
        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r11.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r80);
        r5[8] = 1;
        goto label6;

     label7:
        virtualinvoke r11.<java.io.DataOutputStream: void flush()>();
        $r81 = new java.io.BufferedReader;
        $r82 = new java.io.InputStreamReader;
        $r83 = virtualinvoke r10.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();
        specialinvoke $r82.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r83);
        specialinvoke $r81.<java.io.BufferedReader: void <init>(java.io.Reader)>($r82);
        r14 = $r81;
        r5[9] = 1;

     label8:
        $r84 = virtualinvoke r14.<java.io.BufferedReader: java.lang.String readLine()>();
        r15 = $r84;
        r5[10] = 1;
        if $r84 == null goto label9;

        $r85 = new java.lang.StringBuilder;
        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();
        $r87 = r6.<moz.http.HttpData: java.lang.String content>;
        $r88 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);
        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);
        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");
        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();
        r6.<moz.http.HttpData: java.lang.String content> = $r91;
        r5[11] = 1;
        goto label8;

     label9:
        r16 = virtualinvoke r10.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();
        r17 = interfaceinvoke r16.<java.util.Map: java.util.Set entrySet()>();
        r18 = interfaceinvoke r17.<java.util.Set: java.util.Iterator iterator()>();
        r5[12] = 1;

     label10:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        r5[13] = 1;
        if $z1 == 0 goto label12;

        $r92 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        r19 = (java.util.Map$Entry) $r92;
        $r93 = new java.lang.StringBuilder;
        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();
        $r94 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r95 = (java.lang.String) $r94;
        $r96 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);
        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HEADER_KEY", $r98);
        $r99 = r6.<moz.http.HttpData: java.util.Hashtable headers>;
        $r100 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r101 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r102 = (java.util.List) $r101;
        $r103 = virtualinvoke $r102.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r99.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r100, $r103);
        $r105 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r106 = (java.lang.String) $r105;
        $z2 = virtualinvoke $r106.<java.lang.String: boolean equals(java.lang.Object)>("set-cookie");
        r5[14] = 1;
        if $z2 == 0 goto label11;

        $r107 = r6.<moz.http.HttpData: java.util.Hashtable cookies>;
        $r108 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r109 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r110 = (java.util.List) $r109;
        $r111 = virtualinvoke $r110.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r107.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r108, $r111);
        r5[15] = 1;

     label11:
        r5[16] = 1;
        goto label10;

     label12:
        virtualinvoke r11.<java.io.DataOutputStream: void close()>();
        virtualinvoke r14.<java.io.BufferedReader: void close()>();
        r5[17] = 1;

     label13:
        goto label17;

     label14:
        $r113 := @caughtexception;
        r114 = $r113;
        r5[18] = 1;
        goto label17;

     label15:
        $r115 := @caughtexception;
        r116 = $r115;
        r5[19] = 1;
        goto label17;

     label16:
        $r117 := @caughtexception;
        r118 = $r117;
        $r119 = new java.lang.StringBuilder;
        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();
        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");
        $r121 = virtualinvoke r118.<java.lang.Exception: java.lang.String toString()>();
        $r122 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);
        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("HREQ", $r123);
        r5[20] = 1;

     label17:
        r5[21] = 1;
        return r6;

        catch java.net.MalformedURLException from label1 to label13 with label14;
        catch java.io.IOException from label1 to label13 with label15;
        catch java.lang.Exception from label1 to label13 with label16;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <moz.http.HttpRequest: boolean[][] $VRi()>();
        r1 = $r0[6];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[7][];
        <moz.http.HttpRequest: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[11];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[11];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[22];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "moz/http/HttpRequest", 5003664041223701320L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.Attribute extends net.htmlparser.jericho.Segment
{
    private final java.lang.String key;
    private final net.htmlparser.jericho.Segment nameSegment;
    private final net.htmlparser.jericho.Segment valueSegment;
    private final net.htmlparser.jericho.Segment valueSegmentIncludingQuotes;
    net.htmlparser.jericho.StartTag startTag;
    static final java.lang.String CHECKED;
    static final java.lang.String CLASS;
    static final java.lang.String DISABLED;
    static final java.lang.String ID;
    static final java.lang.String MULTIPLE;
    static final java.lang.String NAME;
    static final java.lang.String SELECTED;
    static final java.lang.String STYLE;
    static final java.lang.String TYPE;
    static final java.lang.String VALUE;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(net.htmlparser.jericho.Source, java.lang.String, net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Attribute r0;
        net.htmlparser.jericho.Source r1;
        java.lang.String r2;
        net.htmlparser.jericho.Segment r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: net.htmlparser.jericho.Attribute;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: net.htmlparser.jericho.Segment;
        $r4 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<net.htmlparser.jericho.Attribute: void <init>(net.htmlparser.jericho.Source,java.lang.String,net.htmlparser.jericho.Segment,net.htmlparser.jericho.Segment,net.htmlparser.jericho.Segment)>(r1, r2, r3, null, null);
        r5[0] = 1;
        return;
    }

    void <init>(net.htmlparser.jericho.Source, java.lang.String, net.htmlparser.jericho.Segment, net.htmlparser.jericho.Segment, net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Attribute r0;
        net.htmlparser.jericho.Source r1;
        java.lang.String r2;
        net.htmlparser.jericho.Segment r3, r4, r5;
        boolean[][] $r6;
        boolean[] r7;
        int $i0, $i1;
        net.htmlparser.jericho.StartTag $r10;

        r0 := @this: net.htmlparser.jericho.Attribute;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: net.htmlparser.jericho.Segment;
        r4 := @parameter3: net.htmlparser.jericho.Segment;
        r5 := @parameter4: net.htmlparser.jericho.Segment;
        $r6 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r6 != null goto label0;

        $r6 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r7 = $r6[1];
        $i0 = virtualinvoke r3.<net.htmlparser.jericho.Segment: int getBegin()>();
        r7[0] = 1;
        if r5 != null goto label1;

        $i1 = virtualinvoke r3.<net.htmlparser.jericho.Segment: int getEnd()>();
        r7[1] = 1;
        goto label2;

     label1:
        $i1 = virtualinvoke r5.<net.htmlparser.jericho.Segment: int getEnd()>();
        r7[2] = 1;

     label2:
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r1, $i0, $i1);
        $r10 = <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag NOT_CACHED>;
        r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.StartTag startTag> = $r10;
        r0.<net.htmlparser.jericho.Attribute: java.lang.String key> = r2;
        r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment nameSegment> = r3;
        r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment> = r4;
        r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegmentIncludingQuotes> = r5;
        r7[3] = 1;
        return;
    }

    public java.lang.String getKey()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.Attribute: java.lang.String key>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getName()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment nameSegment>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Segment: java.lang.String toString()>();
        r2[0] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Segment getNameSegment()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment nameSegment>;
        r2[0] = 1;
        return $r3;
    }

    public boolean hasValue()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public java.lang.String getValue()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decode(java.lang.CharSequence,boolean)>($r3, 1);
        r2[0] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Segment getValueSegment()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Segment getValueSegmentIncludingQuotes()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegmentIncludingQuotes>;
        r2[0] = 1;
        return $r3;
    }

    public char getQuoteChar()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3, $r4, $r6;
        net.htmlparser.jericho.Source $r5;
        int $i0;
        char $c1;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $r4 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegmentIncludingQuotes>;
        r2[0] = 1;
        if $r3 != $r4 goto label1;

        r2[1] = 1;
        return 32;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Source source>;
        $r6 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegmentIncludingQuotes>;
        $i0 = virtualinvoke $r6.<net.htmlparser.jericho.Segment: int getBegin()>();
        $c1 = virtualinvoke $r5.<net.htmlparser.jericho.Source: char charAt(int)>($i0);
        r2[2] = 1;
        return $c1;
    }

    public net.htmlparser.jericho.StartTag getStartTag()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        net.htmlparser.jericho.StartTag $r4, $r5, $r8, $r9;
        net.htmlparser.jericho.Source $r6;
        int $i0;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r4 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.StartTag startTag>;
        $r5 = <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag NOT_CACHED>;
        r2[0] = 1;
        if $r4 != $r5 goto label4;

        $r6 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Attribute: int begin>;
        r3 = virtualinvoke $r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getEnclosingTag(int)>($i0);
        r2[1] = 1;
        if r3 == null goto label1;

        $z0 = r3 instanceof net.htmlparser.jericho.EndTag;
        r2[2] = 1;
        if $z0 == 0 goto label2;

     label1:
        $r8 = null;
        r2[3] = 1;
        goto label3;

     label2:
        $r8 = (net.htmlparser.jericho.StartTag) r3;
        r2[4] = 1;

     label3:
        r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.StartTag startTag> = $r8;
        r2[5] = 1;

     label4:
        $r9 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.StartTag startTag>;
        r2[6] = 1;
        return $r9;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.Attribute r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r4, $r6, $r8, $r9, $r12, $r15, $r16, $r18, $r19, $r22;
        java.lang.String $r5, $r7, $r11, $r14, $r20, $r23, $r25;
        net.htmlparser.jericho.Segment $r10, $r13, $r17;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Attribute;
        $r1 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = r0.<net.htmlparser.jericho.Attribute: java.lang.String key>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = specialinvoke r0.<net.htmlparser.jericho.Segment: java.lang.String getDebugInfo()>();
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",name=");
        $r10 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment nameSegment>;
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.Segment: java.lang.String getDebugInfo()>();
        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.Attribute: boolean hasValue()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",value=");
        $r13 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $r14 = virtualinvoke $r13.<net.htmlparser.jericho.Segment: java.lang.String getDebugInfo()>();
        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);
        $r17 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);
        $r20 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        r2[1] = 1;
        goto label2;

     label1:
        $r22 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",NO VALUE");
        $r23 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        r2[2] = 1;

     label2:
        $r25 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;
        return $r25;
    }

    net.htmlparser.jericho.Tag appendTidy(java.lang.Appendable, net.htmlparser.jericho.Tag) throws java.io.IOException
    {
        net.htmlparser.jericho.Attribute r0;
        java.lang.Appendable r1, $r5;
        net.htmlparser.jericho.Tag r2;
        boolean[][] $r3;
        boolean[] r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        net.htmlparser.jericho.Segment $r6, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r23, $r24, $r26;
        net.htmlparser.jericho.Source $r16, $r19, $r25;

        r0 := @this: net.htmlparser.jericho.Attribute;
        r1 := @parameter0: java.lang.Appendable;
        r2 := @parameter1: net.htmlparser.jericho.Tag;
        $r3 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r4 = $r3[12];
        $r5 = interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        $r6 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment nameSegment>;
        interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);
        $r8 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        r4[0] = 1;
        if $r8 == null goto label9;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("=\"");
        r4[1] = 1;

     label1:
        r4[2] = 1;
        if r2 == null goto label2;

        $i1 = r2.<net.htmlparser.jericho.Tag: int begin>;
        $r10 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $i2 = $r10.<net.htmlparser.jericho.Segment: int begin>;
        r4[3] = 1;
        if $i1 >= $i2 goto label2;

        r2 = virtualinvoke r2.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag()>();
        r4[4] = 1;
        goto label1;

     label2:
        r4[5] = 1;
        if r2 == null goto label3;

        $i3 = r2.<net.htmlparser.jericho.Tag: int begin>;
        $r11 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $i4 = $r11.<net.htmlparser.jericho.Segment: int end>;
        r4[6] = 1;
        if $i3 < $i4 goto label4;

     label3:
        $r12 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        staticinvoke <net.htmlparser.jericho.Attribute: void appendTidyValue(java.lang.Appendable,java.lang.CharSequence)>(r1, $r12);
        r4[7] = 1;
        goto label8;

     label4:
        $r13 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        i0 = $r13.<net.htmlparser.jericho.Segment: int begin>;
        r4[8] = 1;

     label5:
        r4[9] = 1;
        if r2 == null goto label7;

        $i5 = r2.<net.htmlparser.jericho.Tag: int begin>;
        $r14 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $i6 = $r14.<net.htmlparser.jericho.Segment: int end>;
        r4[10] = 1;
        if $i5 >= $i6 goto label7;

        $r15 = new net.htmlparser.jericho.Segment;
        $r16 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Source source>;
        $i7 = r2.<net.htmlparser.jericho.Tag: int begin>;
        specialinvoke $r15.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r16, i0, $i7);
        staticinvoke <net.htmlparser.jericho.Attribute: void appendTidyValue(java.lang.Appendable,java.lang.CharSequence)>(r1, $r15);
        $i8 = r2.<net.htmlparser.jericho.Tag: int end>;
        $r17 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $i9 = $r17.<net.htmlparser.jericho.Segment: int end>;
        r4[11] = 1;
        if $i8 <= $i9 goto label6;

        $r18 = new net.htmlparser.jericho.Segment;
        $r19 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Source source>;
        $i10 = r2.<net.htmlparser.jericho.Tag: int begin>;
        $r20 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $i11 = $r20.<net.htmlparser.jericho.Segment: int end>;
        i0 = $i11;
        specialinvoke $r18.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r19, $i10, $i11);
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r18);
        r4[12] = 1;
        goto label7;

     label6:
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r2);
        i0 = r2.<net.htmlparser.jericho.Tag: int end>;
        r2 = virtualinvoke r2.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag()>();
        r4[13] = 1;
        goto label5;

     label7:
        $r23 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $i12 = $r23.<net.htmlparser.jericho.Segment: int end>;
        r4[14] = 1;
        if i0 >= $i12 goto label8;

        $r24 = new net.htmlparser.jericho.Segment;
        $r25 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Source source>;
        $r26 = r0.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment valueSegment>;
        $i13 = $r26.<net.htmlparser.jericho.Segment: int end>;
        specialinvoke $r24.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r25, i0, $i13);
        staticinvoke <net.htmlparser.jericho.Attribute: void appendTidyValue(java.lang.Appendable,java.lang.CharSequence)>(r1, $r24);
        r4[15] = 1;

     label8:
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(34);
        r4[16] = 1;

     label9:
        r4[17] = 1;
        return r2;
    }

    private static void appendTidyValue(java.lang.Appendable, java.lang.CharSequence) throws java.io.IOException
    {
        java.lang.Appendable r0;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.Appendable;
        r1 := @parameter1: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decode(java.lang.CharSequence,boolean)>(r1, 1);
        staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendEncode(java.lang.Appendable,java.lang.CharSequence,boolean)>(r0, $r4, 0);
        r3[0] = 1;
        return;
    }

    static java.lang.Appendable appendHTML(java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence) throws java.io.IOException
    {
        java.lang.Appendable r0, $r5;
        java.lang.CharSequence r1, r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @parameter0: java.lang.Appendable;
        r1 := @parameter1: java.lang.CharSequence;
        r2 := @parameter2: java.lang.CharSequence;
        $r3 = <net.htmlparser.jericho.Attribute: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();

     label0:
        r4 = $r3[14];
        $r5 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r1);
        r4[0] = 1;
        if r2 == null goto label1;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("=\"");
        staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendEncode(java.lang.Appendable,java.lang.CharSequence,boolean)>(r0, r2, 0);
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(34);
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return r0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.Attribute: boolean[][] $VRi()>();
        r1 = $r0[15];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        $r0 = newmultiarray (boolean)[16][];
        <net.htmlparser.jericho.Attribute: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[7];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[4];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[18];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[3];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Attribute", 8036902094972081419L);
        return $r0;
    }
}
class net.htmlparser.jericho.Attributes$1 extends java.lang.Object
{
    static final int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState;
    private static final boolean[][] $VRc;

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.NoSuchFieldError r2, $r7, $r10, r11, $r14, r15, $r18, r19, $r22, r23, $r26, r27;
        net.htmlparser.jericho.Attributes$ParsingState[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r4, $r5, $r8, $r12, $r16, $r20, $r24;
        net.htmlparser.jericho.Attributes$ParsingState $r6, $r9, $r13, $r17, $r21, $r25;

        $r0 = staticinvoke <net.htmlparser.jericho.Attributes$1: boolean[][] $VRi()>();
        r1 = $r0[0];
        $r3 = staticinvoke <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState[] values()>();
        $i0 = lengthof $r3;
        $r4 = newarray (int)[$i0];
        <net.htmlparser.jericho.Attributes$1: int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState> = $r4;

     label0:
        $r5 = <net.htmlparser.jericho.Attributes$1: int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState>;
        $r6 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_VALUE>;
        $i1 = virtualinvoke $r6.<net.htmlparser.jericho.Attributes$ParsingState: int ordinal()>();
        $r5[$i1] = 1;
        r1[0] = 1;

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r2 = $r7;
        r1[1] = 1;

     label3:
        $r8 = <net.htmlparser.jericho.Attributes$1: int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState>;
        $r9 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_NAME>;
        $i2 = virtualinvoke $r9.<net.htmlparser.jericho.Attributes$ParsingState: int ordinal()>();
        $r8[$i2] = 2;
        r1[2] = 1;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;
        r11 = $r10;
        r1[3] = 1;

     label6:
        $r12 = <net.htmlparser.jericho.Attributes$1: int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState>;
        $r13 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_NAME>;
        $i3 = virtualinvoke $r13.<net.htmlparser.jericho.Attributes$ParsingState: int ordinal()>();
        $r12[$i3] = 3;
        r1[4] = 1;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;
        r15 = $r14;
        r1[5] = 1;

     label9:
        $r16 = <net.htmlparser.jericho.Attributes$1: int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState>;
        $r17 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES>;
        $i4 = virtualinvoke $r17.<net.htmlparser.jericho.Attributes$ParsingState: int ordinal()>();
        $r16[$i4] = 4;
        r1[6] = 1;

     label10:
        goto label12;

     label11:
        $r18 := @caughtexception;
        r19 = $r18;
        r1[7] = 1;

     label12:
        $r20 = <net.htmlparser.jericho.Attributes$1: int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState>;
        $r21 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState START_VALUE>;
        $i5 = virtualinvoke $r21.<net.htmlparser.jericho.Attributes$ParsingState: int ordinal()>();
        $r20[$i5] = 5;
        r1[8] = 1;

     label13:
        goto label15;

     label14:
        $r22 := @caughtexception;
        r23 = $r22;
        r1[9] = 1;

     label15:
        $r24 = <net.htmlparser.jericho.Attributes$1: int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState>;
        $r25 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_TAG_NAME>;
        $i6 = virtualinvoke $r25.<net.htmlparser.jericho.Attributes$ParsingState: int ordinal()>();
        $r24[$i6] = 6;
        r1[10] = 1;

     label16:
        goto label18;

     label17:
        $r26 := @caughtexception;
        r27 = $r26;
        r1[11] = 1;

     label18:
        r1[12] = 1;
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
        catch java.lang.NoSuchFieldError from label15 to label16 with label17;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1;

        $r0 = newmultiarray (boolean)[1][];
        <net.htmlparser.jericho.Attributes$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[13];
        $r0[0] = $r1;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Attributes$1", -1199995280441165943L);
        return $r0;
    }
}
final enum class net.htmlparser.jericho.Attributes$ParsingState extends java.lang.Enum
{
    public static final enum net.htmlparser.jericho.Attributes$ParsingState AFTER_TAG_NAME;
    public static final enum net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES;
    public static final enum net.htmlparser.jericho.Attributes$ParsingState IN_NAME;
    public static final enum net.htmlparser.jericho.Attributes$ParsingState AFTER_NAME;
    public static final enum net.htmlparser.jericho.Attributes$ParsingState START_VALUE;
    public static final enum net.htmlparser.jericho.Attributes$ParsingState IN_VALUE;
    public static final enum net.htmlparser.jericho.Attributes$ParsingState AFTER_VALUE_FINAL_QUOTE;
    private static final net.htmlparser.jericho.Attributes$ParsingState[] $VALUES;
    private static final boolean[][] $VRc;

    public static net.htmlparser.jericho.Attributes$ParsingState[] values()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Attributes$ParsingState[] $r2, $r4;
        java.lang.Object $r3;

        $r0 = <net.htmlparser.jericho.Attributes$ParsingState: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Attributes$ParsingState: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState[] $VALUES>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (net.htmlparser.jericho.Attributes$ParsingState[]) $r3;
        r1[0] = 1;
        return $r4;
    }

    public static net.htmlparser.jericho.Attributes$ParsingState valueOf(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        net.htmlparser.jericho.Attributes$ParsingState $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.Attributes$ParsingState: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attributes$ParsingState: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "net/htmlparser/jericho/Attributes$ParsingState", r0);
        $r4 = (net.htmlparser.jericho.Attributes$ParsingState) $r3;
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int)
    {
        net.htmlparser.jericho.Attributes$ParsingState r0;
        java.lang.String r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.Attributes$ParsingState;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.Attributes$ParsingState: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Attributes$ParsingState: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Attributes$ParsingState $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        net.htmlparser.jericho.Attributes$ParsingState[] $r9;

        $r0 = staticinvoke <net.htmlparser.jericho.Attributes$ParsingState: boolean[][] $VRi()>();
        r1 = $r0[3];
        $r2 = new net.htmlparser.jericho.Attributes$ParsingState;
        specialinvoke $r2.<net.htmlparser.jericho.Attributes$ParsingState: void <init>(java.lang.String,int)>("AFTER_TAG_NAME", 0);
        <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_TAG_NAME> = $r2;
        $r3 = new net.htmlparser.jericho.Attributes$ParsingState;
        specialinvoke $r3.<net.htmlparser.jericho.Attributes$ParsingState: void <init>(java.lang.String,int)>("BETWEEN_ATTRIBUTES", 1);
        <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES> = $r3;
        $r4 = new net.htmlparser.jericho.Attributes$ParsingState;
        specialinvoke $r4.<net.htmlparser.jericho.Attributes$ParsingState: void <init>(java.lang.String,int)>("IN_NAME", 2);
        <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_NAME> = $r4;
        $r5 = new net.htmlparser.jericho.Attributes$ParsingState;
        specialinvoke $r5.<net.htmlparser.jericho.Attributes$ParsingState: void <init>(java.lang.String,int)>("AFTER_NAME", 3);
        <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_NAME> = $r5;
        $r6 = new net.htmlparser.jericho.Attributes$ParsingState;
        specialinvoke $r6.<net.htmlparser.jericho.Attributes$ParsingState: void <init>(java.lang.String,int)>("START_VALUE", 4);
        <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState START_VALUE> = $r6;
        $r7 = new net.htmlparser.jericho.Attributes$ParsingState;
        specialinvoke $r7.<net.htmlparser.jericho.Attributes$ParsingState: void <init>(java.lang.String,int)>("IN_VALUE", 5);
        <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_VALUE> = $r7;
        $r8 = new net.htmlparser.jericho.Attributes$ParsingState;
        specialinvoke $r8.<net.htmlparser.jericho.Attributes$ParsingState: void <init>(java.lang.String,int)>("AFTER_VALUE_FINAL_QUOTE", 6);
        <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_VALUE_FINAL_QUOTE> = $r8;
        $r9 = newarray (net.htmlparser.jericho.Attributes$ParsingState)[7];
        $r10 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_TAG_NAME>;
        $r9[0] = $r10;
        $r11 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES>;
        $r9[1] = $r11;
        $r12 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_NAME>;
        $r9[2] = $r12;
        $r13 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_NAME>;
        $r9[3] = $r13;
        $r14 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState START_VALUE>;
        $r9[4] = $r14;
        $r15 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_VALUE>;
        $r9[5] = $r15;
        $r16 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_VALUE_FINAL_QUOTE>;
        $r9[6] = $r16;
        <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState[] $VALUES> = $r9;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.Attributes$ParsingState: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Attributes$ParsingState", 8394644511464601176L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.Attributes extends net.htmlparser.jericho.nodoc.SequentialListSegment
{
    private final java.util.LinkedList attributeList;
    final boolean containsServerTagOutsideOfAttributeValue;
    private static int defaultMaxErrorCount;
    private static final boolean[][] $VRc;

    private void <init>(net.htmlparser.jericho.Source, int, int, java.util.LinkedList, boolean)
    {
        net.htmlparser.jericho.Attributes r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        java.util.LinkedList r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.Attributes;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: java.util.LinkedList;
        z0 := @parameter4: boolean;
        $r3 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: void <init>(net.htmlparser.jericho.Source,int,int)>(r1, i0, i1);
        r0.<net.htmlparser.jericho.Attributes: java.util.LinkedList attributeList> = r2;
        r0.<net.htmlparser.jericho.Attributes: boolean containsServerTagOutsideOfAttributeValue> = z0;
        r4[0] = 1;
        return;
    }

    static net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.StartTagType, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0, $i1;
        net.htmlparser.jericho.StartTagType r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Attributes$ParsingState $r5;
        net.htmlparser.jericho.Attributes $r6;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.StartTagType;
        r2 := @parameter3: java.lang.String;
        $r3 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_TAG_NAME>;
        $i1 = <net.htmlparser.jericho.Attributes: int defaultMaxErrorCount>;
        $r6 = staticinvoke <net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source,java.lang.String,net.htmlparser.jericho.Attributes$ParsingState,int,int,int,net.htmlparser.jericho.StartTagType,java.lang.String,int)>(r0, "StartTag", $r5, i0, -1, -1, r1, r2, $i1);
        r4[0] = 1;
        return $r6;
    }

    static net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source, int, int, int, net.htmlparser.jericho.StartTagType, java.lang.String, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2, i3;
        net.htmlparser.jericho.StartTagType r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Attributes$ParsingState $r5;
        net.htmlparser.jericho.Attributes $r6;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r1 := @parameter4: net.htmlparser.jericho.StartTagType;
        r2 := @parameter5: java.lang.String;
        i3 := @parameter6: int;
        $r3 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $r5 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES>;
        $r6 = staticinvoke <net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source,java.lang.String,net.htmlparser.jericho.Attributes$ParsingState,int,int,int,net.htmlparser.jericho.StartTagType,java.lang.String,int)>(r0, "Attributes for StartTag", $r5, i0, i1, i2, r1, r2, i3);
        r4[0] = 1;
        return $r6;
    }

    static net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source, int, int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Attributes$ParsingState $r3;
        net.htmlparser.jericho.StartTagType $r4;
        net.htmlparser.jericho.Attributes $r5;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r1 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES>;
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        $r5 = staticinvoke <net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source,java.lang.String,net.htmlparser.jericho.Attributes$ParsingState,int,int,int,net.htmlparser.jericho.StartTagType,java.lang.String,int)>(r0, "Attributes", $r3, i0, -1, i1, $r4, null, i2);
        r2[0] = 1;
        return $r5;
    }

    private static net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source, java.lang.String, net.htmlparser.jericho.Attributes$ParsingState, int, int, int, net.htmlparser.jericho.StartTagType, java.lang.String, int)
    {
        net.htmlparser.jericho.Source r0;
        java.lang.String r1, r4, r10, $r28;
        net.htmlparser.jericho.Attributes$ParsingState r2, $r15, $r16, $r30;
        int i0, i1, i2, i3, i4, i5, i7, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        net.htmlparser.jericho.StartTagType r3, $r13, $r37;
        boolean[][] $r5;
        boolean[] r6;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z12, $z13, $z14, $z15, $z16, $z17, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z33, $z34, $z35, $z36, $z37, $z38;
        java.util.LinkedList r7, $r14;
        net.htmlparser.jericho.ParseText r8;
        char c6, c9;
        net.htmlparser.jericho.Segment r9, r12, $r18, r19, $r21, $r22, $r23, $r24, $r27, $r41, r42;
        net.htmlparser.jericho.Tag r11;
        int[] $r17;
        net.htmlparser.jericho.Logger $r20, $r26, $r31, $r32, $r34, $r35, $r36, $r38, $r39, $r40, $r44, $r45, $r49;
        null_type $n0, $n1, $n2, $n3, $n4, $n5, $n6, $n7, $n8, $n9, $n10;
        net.htmlparser.jericho.Attribute $r25, $r29, $r33, $r43;
        net.htmlparser.jericho.Attributes $r46;
        java.lang.IndexOutOfBoundsException $r47, r48;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: net.htmlparser.jericho.Attributes$ParsingState;
        i0 := @parameter3: int;
        i1 := @parameter4: int;
        i2 := @parameter5: int;
        r3 := @parameter6: net.htmlparser.jericho.StartTagType;
        r4 := @parameter7: java.lang.String;
        i3 := @parameter8: int;
        $r5 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r6 = $r5[4];
        z0 = 0;
        r6[0] = 1;
        if r4 == null goto label2;

        r6[1] = 1;
        if i1 != -1 goto label1;

        $i10 = i0 + 1;
        $i11 = virtualinvoke r4.<java.lang.String: int length()>();
        i1 = $i10 + $i11;
        r6[2] = 1;

     label1:
        $r13 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r6[3] = 1;
        if r3 != $r13 goto label3;

        $z3 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean isClosingSlashIgnored(java.lang.String)>(r4);
        r6[4] = 1;
        if $z3 == 0 goto label3;

        z0 = 1;
        r6[5] = 1;
        goto label3;

     label2:
        i1 = i0;
        r6[6] = 1;

     label3:
        i4 = i1;
        $r14 = new java.util.LinkedList;
        specialinvoke $r14.<java.util.LinkedList: void <init>()>();
        r7 = $r14;
        z1 = 0;
        r8 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i5 = i1;
        c6 = 32;
        r9 = null;
        r10 = null;
        i7 = -1;
        z2 = 0;
        i8 = 0;
        r6[7] = 1;

     label4:
        r6[8] = 1;
        if z2 != 0 goto label71;

        r6[9] = 1;
        if i5 == i2 goto label5;

        $z4 = virtualinvoke r3.<net.htmlparser.jericho.StartTagType: boolean atEndOfAttributes(net.htmlparser.jericho.Source,int,boolean)>(r0, i5, z0);
        r6[10] = 1;
        if $z4 == 0 goto label6;

     label5:
        z2 = 1;
        r6[11] = 1;

     label6:
        c9 = interfaceinvoke r8.<net.htmlparser.jericho.ParseText: char charAt(int)>(i5);
        r6[12] = 1;
        if c9 != 60 goto label8;

        r11 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean)>(r0, i5, 1);
        r6[13] = 1;
        if r11 == null goto label8;

        $r15 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState START_VALUE>;
        r6[14] = 1;
        if r2 != $r15 goto label7;

        i7 = i5;
        c6 = 32;
        r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_VALUE>;
        r6[15] = 1;

     label7:
        $i12 = r11.<net.htmlparser.jericho.Tag: int end>;
        i4 = $i12;
        i5 = $i12;
        $r16 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_VALUE>;
        r6[16] = 1;
        if r2 == $r16 goto label4;

        z1 = 1;
        r6[17] = 1;
        goto label4;

     label8:
        $r17 = <net.htmlparser.jericho.Attributes$1: int[] $SwitchMap$net$htmlparser$jericho$Attributes$ParsingState>;
        $i13 = virtualinvoke r2.<net.htmlparser.jericho.Attributes$ParsingState: int ordinal()>();
        $i14 = $r17[$i13];
        r6[18] = 1;
        tableswitch($i14)
        {
            case 1: goto label9;
            case 2: goto label21;
            case 3: goto label33;
            case 4: goto label40;
            case 5: goto label53;
            case 6: goto label65;
            default: goto label70;
        };

     label9:
        r6[19] = 1;
        if z2 != 0 goto label10;

        r6[20] = 1;
        if c9 == c6 goto label10;

        r6[21] = 1;
        if c6 != 32 goto label18;

        $z5 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isWhiteSpace(char)>(c9);
        r6[22] = 1;
        if $z5 == 0 goto label18;

     label10:
        r6[23] = 1;
        if c6 != 32 goto label11;

        $r18 = new net.htmlparser.jericho.Segment;
        specialinvoke $r18.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r0, i7, i5);
        r12 = $r18;
        r19 = $r18;
        r6[24] = 1;
        goto label17;

     label11:
        r6[25] = 1;
        if z2 == 0 goto label16;

        r6[26] = 1;
        if i5 != i2 goto label15;

        $r20 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z6 = interfaceinvoke $r20.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[27] = 1;
        if $z6 == 0 goto label12;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "terminated in the middle of a quoted attribute value", i5);
        r6[28] = 1;

     label12:
        i8 = i8 + 1;
        $z7 = staticinvoke <net.htmlparser.jericho.Attributes: boolean reachedMaxErrorCount(int,net.htmlparser.jericho.Source,java.lang.String,java.lang.String,int,int)>(i8, r0, r1, r4, i0, i3);
        r6[29] = 1;
        if $z7 == 0 goto label14;

        $n0 = null;
        r6[30] = 1;

     label13:
        return $n0;

     label14:
        $r21 = new net.htmlparser.jericho.Segment;
        specialinvoke $r21.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r0, i7, i5);
        r19 = $r21;
        $r22 = new net.htmlparser.jericho.Segment;
        $i15 = i7 - 1;
        specialinvoke $r22.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r0, $i15, i5);
        r12 = $r22;
        r6[31] = 1;
        goto label17;

     label15:
        z2 = 0;
        r6[32] = 1;
        goto label70;

     label16:
        $r23 = new net.htmlparser.jericho.Segment;
        specialinvoke $r23.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r0, i7, i5);
        r19 = $r23;
        $r24 = new net.htmlparser.jericho.Segment;
        $i16 = i7 - 1;
        $i17 = i5 + 1;
        specialinvoke $r24.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r0, $i16, $i17);
        r12 = $r24;
        r6[33] = 1;

     label17:
        $r25 = new net.htmlparser.jericho.Attribute;
        specialinvoke $r25.<net.htmlparser.jericho.Attribute: void <init>(net.htmlparser.jericho.Source,java.lang.String,net.htmlparser.jericho.Segment,net.htmlparser.jericho.Segment,net.htmlparser.jericho.Segment)>(r0, r10, r9, r19, r12);
        virtualinvoke r7.<java.util.LinkedList: boolean add(java.lang.Object)>($r25);
        i4 = virtualinvoke r12.<net.htmlparser.jericho.Segment: int getEnd()>();
        r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES>;
        r6[34] = 1;
        goto label70;

     label18:
        r6[35] = 1;
        if c9 != 60 goto label70;

        r6[36] = 1;
        if c6 != 32 goto label70;

        $r26 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z9 = interfaceinvoke $r26.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[37] = 1;
        if $z9 == 0 goto label19;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "rejected because of \'<\' character in unquoted attribute value", i5);
        r6[38] = 1;

     label19:
        $n1 = null;
        r6[39] = 1;

     label20:
        return $n1;

     label21:
        r6[40] = 1;
        if z2 != 0 goto label22;

        r6[41] = 1;
        if c9 == 61 goto label22;

        $z10 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isWhiteSpace(char)>(c9);
        r6[42] = 1;
        if $z10 == 0 goto label26;

     label22:
        $r27 = new net.htmlparser.jericho.Segment;
        specialinvoke $r27.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r0, i7, i5);
        r9 = $r27;
        $r28 = virtualinvoke r9.<net.htmlparser.jericho.Segment: java.lang.String toString()>();
        r10 = virtualinvoke $r28.<java.lang.String: java.lang.String toLowerCase()>();
        r6[43] = 1;
        if z2 == 0 goto label23;

        $r29 = new net.htmlparser.jericho.Attribute;
        specialinvoke $r29.<net.htmlparser.jericho.Attribute: void <init>(net.htmlparser.jericho.Source,java.lang.String,net.htmlparser.jericho.Segment)>(r0, r10, r9);
        virtualinvoke r7.<java.util.LinkedList: boolean add(java.lang.Object)>($r29);
        i4 = i5;
        r6[44] = 1;
        goto label70;

     label23:
        r6[45] = 1;
        if c9 != 61 goto label24;

        $r30 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState START_VALUE>;
        r6[46] = 1;
        goto label25;

     label24:
        $r30 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState AFTER_NAME>;
        r6[47] = 1;

     label25:
        r2 = $r30;
        r6[48] = 1;
        goto label70;

     label26:
        $z12 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLNameChar(char)>(c9);
        r6[49] = 1;
        if $z12 != 0 goto label70;

        r6[50] = 1;
        if c9 != 60 goto label29;

        $r31 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z13 = interfaceinvoke $r31.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[51] = 1;
        if $z13 == 0 goto label27;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "rejected because of \'<\' character in attribute name", i5);
        r6[52] = 1;

     label27:
        $n2 = null;
        r6[53] = 1;

     label28:
        return $n2;

     label29:
        $z14 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isInvalidEmptyElementTag(net.htmlparser.jericho.StartTagType,net.htmlparser.jericho.Source,int,java.lang.String,java.lang.String,int)>(r3, r0, i5, r1, r4, i0);
        r6[54] = 1;
        if $z14 == 0 goto label30;

        r6[55] = 1;
        goto label70;

     label30:
        $r32 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z15 = interfaceinvoke $r32.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[56] = 1;
        if $z15 == 0 goto label31;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "contains attribute name with invalid character", i5);
        r6[57] = 1;

     label31:
        i8 = i8 + 1;
        $z16 = staticinvoke <net.htmlparser.jericho.Attributes: boolean reachedMaxErrorCount(int,net.htmlparser.jericho.Source,java.lang.String,java.lang.String,int,int)>(i8, r0, r1, r4, i0, i3);
        r6[58] = 1;
        if $z16 == 0 goto label70;

        $n3 = null;
        r6[59] = 1;

     label32:
        return $n3;

     label33:
        r6[60] = 1;
        if z2 != 0 goto label34;

        r6[61] = 1;
        if c9 == 61 goto label36;

        $z17 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isWhiteSpace(char)>(c9);
        r6[62] = 1;
        if $z17 != 0 goto label36;

     label34:
        $r33 = new net.htmlparser.jericho.Attribute;
        specialinvoke $r33.<net.htmlparser.jericho.Attribute: void <init>(net.htmlparser.jericho.Source,java.lang.String,net.htmlparser.jericho.Segment)>(r0, r10, r9);
        virtualinvoke r7.<java.util.LinkedList: boolean add(java.lang.Object)>($r33);
        i4 = virtualinvoke r9.<net.htmlparser.jericho.Segment: int getEnd()>();
        r6[63] = 1;
        if z2 == 0 goto label35;

        r6[64] = 1;
        goto label70;

     label35:
        r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES>;
        i5 = i5 + -1;
        r6[65] = 1;
        goto label70;

     label36:
        r6[66] = 1;
        if c9 != 61 goto label37;

        r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState START_VALUE>;
        r6[67] = 1;
        goto label70;

     label37:
        r6[68] = 1;
        if c9 != 60 goto label70;

        $r34 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z19 = interfaceinvoke $r34.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[69] = 1;
        if $z19 == 0 goto label38;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "rejected because of \'<\' character after attribute name", i5);
        r6[70] = 1;

     label38:
        $n4 = null;
        r6[71] = 1;

     label39:
        return $n4;

     label40:
        r6[72] = 1;
        if z2 != 0 goto label70;

        $z20 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isWhiteSpace(char)>(c9);
        r6[73] = 1;
        if $z20 == 0 goto label41;

        c6 = 32;
        r6[74] = 1;
        goto label70;

     label41:
        r6[75] = 1;
        if c6 == 32 goto label44;

        $r35 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z21 = interfaceinvoke $r35.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[76] = 1;
        if $z21 == 0 goto label42;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "has missing whitespace after quoted attribute value", i5);
        r6[77] = 1;

     label42:
        r6[78] = 1;
        if i8 <= 0 goto label44;

        i8 = i8 + 1;
        $z22 = staticinvoke <net.htmlparser.jericho.Attributes: boolean reachedMaxErrorCount(int,net.htmlparser.jericho.Source,java.lang.String,java.lang.String,int,int)>(i8, r0, r1, r4, i0, i3);
        r6[79] = 1;
        if $z22 == 0 goto label44;

        $n5 = null;
        r6[80] = 1;

     label43:
        return $n5;

     label44:
        $z23 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLNameStartChar(char)>(c9);
        r6[81] = 1;
        if $z23 != 0 goto label52;

        r6[82] = 1;
        if c9 != 60 goto label47;

        $r36 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z24 = interfaceinvoke $r36.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[83] = 1;
        if $z24 == 0 goto label45;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "rejected because of \'<\' character", i5);
        r6[84] = 1;

     label45:
        $n6 = null;
        r6[85] = 1;

     label46:
        return $n6;

     label47:
        $z25 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isInvalidEmptyElementTag(net.htmlparser.jericho.StartTagType,net.htmlparser.jericho.Source,int,java.lang.String,java.lang.String,int)>(r3, r0, i5, r1, r4, i0);
        r6[86] = 1;
        if $z25 == 0 goto label48;

        r6[87] = 1;
        goto label70;

     label48:
        $r37 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r6[88] = 1;
        if r3 != $r37 goto label49;

        $z26 = virtualinvoke r3.<net.htmlparser.jericho.StartTagType: boolean atEndOfAttributes(net.htmlparser.jericho.Source,int,boolean)>(r0, i5, 0);
        r6[89] = 1;
        if $z26 == 0 goto label49;

        $r38 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z27 = interfaceinvoke $r38.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[90] = 1;
        if $z27 == 0 goto label70;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String)>(r0, r1, r4, i0, "contains a \'/\' character before the closing \'>\', which is ignored because tags of this name cannot be empty-element tags");
        r6[91] = 1;
        goto label70;

     label49:
        $r39 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z28 = interfaceinvoke $r39.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[92] = 1;
        if $z28 == 0 goto label50;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "contains attribute name with invalid first character", i5);
        r6[93] = 1;

     label50:
        i8 = i8 + 1;
        $z29 = staticinvoke <net.htmlparser.jericho.Attributes: boolean reachedMaxErrorCount(int,net.htmlparser.jericho.Source,java.lang.String,java.lang.String,int,int)>(i8, r0, r1, r4, i0, i3);
        r6[94] = 1;
        if $z29 == 0 goto label52;

        $n7 = null;
        r6[95] = 1;

     label51:
        return $n7;

     label52:
        r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_NAME>;
        i7 = i5;
        r6[96] = 1;
        goto label70;

     label53:
        i7 = i5;
        r6[97] = 1;
        if z2 == 0 goto label57;

        $r40 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z30 = interfaceinvoke $r40.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[98] = 1;
        if $z30 == 0 goto label54;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "has missing attribute value after \'=\' sign", i5);
        r6[99] = 1;

     label54:
        r6[100] = 1;
        if i8 <= 0 goto label56;

        i8 = i8 + 1;
        $z31 = staticinvoke <net.htmlparser.jericho.Attributes: boolean reachedMaxErrorCount(int,net.htmlparser.jericho.Source,java.lang.String,java.lang.String,int,int)>(i8, r0, r1, r4, i0, i3);
        r6[101] = 1;
        if $z31 == 0 goto label56;

        $n8 = null;
        r6[102] = 1;

     label55:
        return $n8;

     label56:
        $r41 = new net.htmlparser.jericho.Segment;
        specialinvoke $r41.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r0, i5, i5);
        r42 = $r41;
        $r43 = new net.htmlparser.jericho.Attribute;
        specialinvoke $r43.<net.htmlparser.jericho.Attribute: void <init>(net.htmlparser.jericho.Source,java.lang.String,net.htmlparser.jericho.Segment,net.htmlparser.jericho.Segment,net.htmlparser.jericho.Segment)>(r0, r10, r9, r42, r42);
        virtualinvoke r7.<java.util.LinkedList: boolean add(java.lang.Object)>($r43);
        i4 = i5;
        r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES>;
        r6[103] = 1;
        goto label70;

     label57:
        r6[104] = 1;
        if c9 == 39 goto label58;

        r6[105] = 1;
        if c9 != 34 goto label59;

     label58:
        c6 = c9;
        i7 = i7 + 1;
        r6[106] = 1;
        goto label64;

     label59:
        $z33 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isWhiteSpace(char)>(c9);
        r6[107] = 1;
        if $z33 == 0 goto label60;

        r6[108] = 1;
        goto label70;

     label60:
        r6[109] = 1;
        if c9 != 60 goto label63;

        $r44 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z34 = interfaceinvoke $r44.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[110] = 1;
        if $z34 == 0 goto label61;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "rejected because of \'<\' character at the start of an attribute value", i5);
        r6[111] = 1;

     label61:
        $n9 = null;
        r6[112] = 1;

     label62:
        return $n9;

     label63:
        c6 = 32;
        r6[113] = 1;

     label64:
        r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState IN_VALUE>;
        r6[114] = 1;
        goto label70;

     label65:
        r6[115] = 1;
        if z2 != 0 goto label70;

        $z35 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isWhiteSpace(char)>(c9);
        r6[116] = 1;
        if $z35 != 0 goto label69;

        $z36 = staticinvoke <net.htmlparser.jericho.Attributes: boolean isInvalidEmptyElementTag(net.htmlparser.jericho.StartTagType,net.htmlparser.jericho.Source,int,java.lang.String,java.lang.String,int)>(r3, r0, i5, r1, r4, i0);
        r6[117] = 1;
        if $z36 == 0 goto label66;

        r6[118] = 1;
        goto label70;

     label66:
        $r45 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z37 = interfaceinvoke $r45.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[119] = 1;
        if $z37 == 0 goto label67;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String,int)>(r0, r1, r4, i0, "rejected because the name contains an invalid character", i5);
        r6[120] = 1;

     label67:
        $n10 = null;
        r6[121] = 1;

     label68:
        return $n10;

     label69:
        r2 = <net.htmlparser.jericho.Attributes$ParsingState: net.htmlparser.jericho.Attributes$ParsingState BETWEEN_ATTRIBUTES>;
        r6[122] = 1;

     label70:
        i5 = i5 + 1;
        r6[123] = 1;
        goto label4;

     label71:
        $r46 = new net.htmlparser.jericho.Attributes;
        specialinvoke $r46.<net.htmlparser.jericho.Attributes: void <init>(net.htmlparser.jericho.Source,int,int,java.util.LinkedList,boolean)>(r0, i1, i4, r7, z1);
        r6[124] = 1;

     label72:
        return $r46;

     label73:
        $r47 := @caughtexception;
        r48 = $r47;
        $r49 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z38 = interfaceinvoke $r49.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r6[125] = 1;
        if $z38 == 0 goto label74;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String)>(r0, r1, r4, i0, "rejected because it has no closing \'>\' character");
        r6[126] = 1;

     label74:
        r6[127] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label4 to label13 with label73;
        catch java.lang.IndexOutOfBoundsException from label14 to label20 with label73;
        catch java.lang.IndexOutOfBoundsException from label21 to label28 with label73;
        catch java.lang.IndexOutOfBoundsException from label29 to label32 with label73;
        catch java.lang.IndexOutOfBoundsException from label33 to label39 with label73;
        catch java.lang.IndexOutOfBoundsException from label40 to label43 with label73;
        catch java.lang.IndexOutOfBoundsException from label44 to label46 with label73;
        catch java.lang.IndexOutOfBoundsException from label47 to label51 with label73;
        catch java.lang.IndexOutOfBoundsException from label52 to label55 with label73;
        catch java.lang.IndexOutOfBoundsException from label56 to label62 with label73;
        catch java.lang.IndexOutOfBoundsException from label63 to label68 with label73;
        catch java.lang.IndexOutOfBoundsException from label69 to label72 with label73;
    }

    private static boolean reachedMaxErrorCount(int, net.htmlparser.jericho.Source, java.lang.String, java.lang.String, int, int)
    {
        int i0, i1, i2;
        net.htmlparser.jericho.Source r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Logger $r5;
        boolean $z0;

        i0 := @parameter0: int;
        r0 := @parameter1: net.htmlparser.jericho.Source;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: java.lang.String;
        i1 := @parameter4: int;
        i2 := @parameter5: int;
        $r3 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r4 = $r3[5];
        r4[0] = 1;
        if i0 > i2 goto label1;

        r4[1] = 1;
        return 0;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z0 = interfaceinvoke $r5.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r4[2] = 1;
        if $z0 == 0 goto label2;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String)>(r0, r1, r2, i1, "rejected because it contains too many errors");
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return 1;
    }

    private static boolean isInvalidEmptyElementTag(net.htmlparser.jericho.StartTagType, net.htmlparser.jericho.Source, int, java.lang.String, java.lang.String, int)
    {
        net.htmlparser.jericho.StartTagType r0, $r6;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        java.lang.String r2, r3;
        boolean[][] $r4;
        boolean[] r5;
        boolean $z0, $z1;
        net.htmlparser.jericho.Logger $r7;

        r0 := @parameter0: net.htmlparser.jericho.StartTagType;
        r1 := @parameter1: net.htmlparser.jericho.Source;
        i0 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        r3 := @parameter4: java.lang.String;
        i1 := @parameter5: int;
        $r4 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r5 = $r4[6];
        $r6 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r5[0] = 1;
        if r0 != $r6 goto label1;

        $z0 = virtualinvoke r0.<net.htmlparser.jericho.StartTagType: boolean atEndOfAttributes(net.htmlparser.jericho.Source,int,boolean)>(r1, i0, 0);
        r5[1] = 1;
        if $z0 != 0 goto label2;

     label1:
        r5[2] = 1;
        return 0;

     label2:
        $r7 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z1 = interfaceinvoke $r7.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r5[3] = 1;
        if $z1 == 0 goto label3;

        staticinvoke <net.htmlparser.jericho.Attributes: void log(net.htmlparser.jericho.Source,java.lang.String,java.lang.CharSequence,int,java.lang.String)>(r1, r2, r3, i1, "contains a \'/\' character before the closing \'>\', which is ignored because tags of this name cannot be empty-element tags");
        r5[4] = 1;

     label3:
        r5[5] = 1;
        return 1;
    }

    public net.htmlparser.jericho.Attribute get(java.lang.String)
    {
        net.htmlparser.jericho.Attributes r0;
        java.lang.String r1, $r6;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2;
        net.htmlparser.jericho.Attribute r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Attributes;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $i1 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: int size()>();
        r3[0] = 1;
        if $i1 != 0 goto label1;

        r3[1] = 1;
        return null;

     label1:
        i0 = 0;
        r3[2] = 1;

     label2:
        $i2 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: int size()>();
        r3[3] = 1;
        if i0 >= $i2 goto label4;

        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: java.lang.Object get(int)>(i0);
        r4 = (net.htmlparser.jericho.Attribute) $r5;
        $r6 = virtualinvoke r4.<net.htmlparser.jericho.Attribute: java.lang.String getKey()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);
        r3[4] = 1;
        if $z0 == 0 goto label3;

        r3[5] = 1;
        return r4;

     label3:
        i0 = i0 + 1;
        r3[6] = 1;
        goto label2;

     label4:
        r3[7] = 1;
        return null;
    }

    public java.lang.String getValue(java.lang.String)
    {
        net.htmlparser.jericho.Attributes r0;
        java.lang.String r1, $r5;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Attribute r4;

        r0 := @this: net.htmlparser.jericho.Attributes;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>(r1);
        r3[0] = 1;
        if r4 != null goto label1;

        $r5 = null;
        r3[1] = 1;
        goto label2;

     label1:
        $r5 = virtualinvoke r4.<net.htmlparser.jericho.Attribute: java.lang.String getValue()>();
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $r5;
    }

    java.lang.String getRawValue(java.lang.String)
    {
        net.htmlparser.jericho.Attributes r0;
        java.lang.String r1, $r5;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Attribute r4;
        boolean $z0;
        net.htmlparser.jericho.Segment $r6;

        r0 := @this: net.htmlparser.jericho.Attributes;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>(r1);
        r3[0] = 1;
        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<net.htmlparser.jericho.Attribute: boolean hasValue()>();
        r3[1] = 1;
        if $z0 != 0 goto label2;

     label1:
        $r5 = null;
        r3[2] = 1;
        goto label3;

     label2:
        $r6 = virtualinvoke r4.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment getValueSegment()>();
        $r5 = virtualinvoke $r6.<net.htmlparser.jericho.Segment: java.lang.String toString()>();
        r3[3] = 1;

     label3:
        r3[4] = 1;
        return $r5;
    }

    public int getCount()
    {
        net.htmlparser.jericho.Attributes r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedList $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Attributes;
        $r1 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<net.htmlparser.jericho.Attributes: java.util.LinkedList attributeList>;
        $i0 = virtualinvoke $r3.<java.util.LinkedList: int size()>();
        r2[0] = 1;
        return $i0;
    }

    public java.util.Iterator iterator()
    {
        net.htmlparser.jericho.Attributes r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ListIterator $r3;

        r0 := @this: net.htmlparser.jericho.Attributes;
        $r1 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: java.util.ListIterator listIterator()>();
        r2[0] = 1;
        return $r3;
    }

    public java.util.ListIterator listIterator(int)
    {
        net.htmlparser.jericho.Attributes r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedList $r3;
        java.util.ListIterator $r4;

        r0 := @this: net.htmlparser.jericho.Attributes;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = r0.<net.htmlparser.jericho.Attributes: java.util.LinkedList attributeList>;
        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.util.ListIterator listIterator(int)>(i0);
        r2[0] = 1;
        return $r4;
    }

    public java.util.Map populateMap(java.util.Map, boolean)
    {
        net.htmlparser.jericho.Attributes r0;
        java.util.Map r1;
        boolean z0, $z1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.Attribute r5;
        java.lang.Object $r6;
        java.lang.String $r8, $r9;

        r0 := @this: net.htmlparser.jericho.Attributes;
        r1 := @parameter0: java.util.Map;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.Attribute) $r6;
        r3[2] = 1;
        if z0 == 0 goto label2;

        $r8 = virtualinvoke r5.<net.htmlparser.jericho.Attribute: java.lang.String getKey()>();
        r3[3] = 1;
        goto label3;

     label2:
        $r8 = virtualinvoke r5.<net.htmlparser.jericho.Attribute: java.lang.String getName()>();
        r3[4] = 1;

     label3:
        $r9 = virtualinvoke r5.<net.htmlparser.jericho.Attribute: java.lang.String getValue()>();
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);
        r3[5] = 1;
        goto label1;

     label4:
        r3[6] = 1;
        return r1;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.Attributes r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r6, $r7, $r9, $r15;
        java.util.Iterator r4;
        net.htmlparser.jericho.Attribute r5;
        java.lang.String $r8, $r12, $r16, $r18;
        boolean $z0, $z1;
        java.lang.Object $r14;

        r0 := @this: net.htmlparser.jericho.Attributes;
        $r1 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        r3 = $r6;
        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attributes ");
        $r8 = specialinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: java.lang.String getDebugInfo()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: boolean isEmpty()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EMPTY");
        r2[1] = 1;
        goto label3;

     label1:
        $r12 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: java.util.Iterator iterator()>();
        r2[2] = 1;

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[3] = 1;
        if $z1 == 0 goto label3;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.Attribute) $r14;
        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");
        $r16 = virtualinvoke r5.<net.htmlparser.jericho.Attribute: java.lang.String getDebugInfo()>();
        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        r2[4] = 1;
        goto label2;

     label3:
        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[5] = 1;
        return $r18;
    }

    public static int getDefaultMaxErrorCount()
    {
        boolean[][] $r0;
        boolean[] r1;
        int $i0;

        $r0 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[15];
        $i0 = <net.htmlparser.jericho.Attributes: int defaultMaxErrorCount>;
        r1[0] = 1;
        return $i0;
    }

    public static void setDefaultMaxErrorCount(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[16];
        <net.htmlparser.jericho.Attributes: int defaultMaxErrorCount> = i0;
        r1[0] = 1;
        return;
    }

    public static java.lang.String generateHTML(java.util.Map)
    {
        java.util.Map r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r5;
        java.io.IOException r4, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.util.Map;
        $r1 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r3 = $r5;

     label1:
        staticinvoke <net.htmlparser.jericho.Attributes: void appendHTML(java.lang.Appendable,java.util.Map)>(r3, r0);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r4 = $r6;
        r2[1] = 1;

     label4:
        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[2] = 1;
        return $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void appendHTML(java.lang.Appendable, java.util.Map) throws java.io.IOException
    {
        java.lang.Appendable r0;
        java.util.Map r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r8, $r10;
        java.lang.CharSequence $r9, $r11;

        r0 := @parameter0: java.lang.Appendable;
        r1 := @parameter1: java.util.Map;
        $r2 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r7;
        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r9 = (java.lang.CharSequence) $r8;
        $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r11 = (java.lang.CharSequence) $r10;
        staticinvoke <net.htmlparser.jericho.Attribute: java.lang.Appendable appendHTML(java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence)>(r0, $r9, $r11);
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    java.lang.Appendable appendTidy(java.lang.Appendable, net.htmlparser.jericho.Tag) throws java.io.IOException
    {
        net.htmlparser.jericho.Attributes r0;
        java.lang.Appendable r1;
        net.htmlparser.jericho.Tag r2;
        boolean[][] $r3;
        boolean[] r4;
        java.util.Iterator r5;
        net.htmlparser.jericho.Attribute r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: net.htmlparser.jericho.Attributes;
        r1 := @parameter0: java.lang.Appendable;
        r2 := @parameter1: net.htmlparser.jericho.Tag;
        $r3 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r4 = $r3[19];
        r5 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: java.util.Iterator iterator()>();
        r4[0] = 1;

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        r4[1] = 1;
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (net.htmlparser.jericho.Attribute) $r7;
        r2 = virtualinvoke r6.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Tag appendTidy(java.lang.Appendable,net.htmlparser.jericho.Tag)>(r1, r2);
        r4[2] = 1;
        goto label1;

     label2:
        r4[3] = 1;
        return r1;
    }

    java.util.Map getMap(boolean)
    {
        net.htmlparser.jericho.Attributes r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedHashMap $r3;
        int $i0, $i1;
        java.util.Map $r4;

        r0 := @this: net.htmlparser.jericho.Attributes;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $r3 = new java.util.LinkedHashMap;
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: int getCount()>();
        $i1 = $i0 * 2;
        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(int,float)>($i1, 1.0F);
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Attributes: java.util.Map populateMap(java.util.Map,boolean)>($r3, z0);
        r2[0] = 1;
        return $r4;
    }

    void setStartTag(net.htmlparser.jericho.StartTag)
    {
        net.htmlparser.jericho.Attributes r0;
        net.htmlparser.jericho.StartTag r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.Attribute r5;
        java.util.LinkedList $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: net.htmlparser.jericho.Attributes;
        r1 := @parameter0: net.htmlparser.jericho.StartTag;
        $r2 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r3 = $r2[21];
        $r6 = r0.<net.htmlparser.jericho.Attributes: java.util.LinkedList attributeList>;
        r4 = virtualinvoke $r6.<java.util.LinkedList: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.Attribute) $r7;
        r5.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.StartTag startTag> = r1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    private static void log(net.htmlparser.jericho.Source, java.lang.String, java.lang.CharSequence, int, java.lang.String, int)
    {
        net.htmlparser.jericho.Source r0;
        java.lang.String r1, r3, $r19;
        java.lang.CharSequence r2;
        int i0, i1;
        boolean[][] $r4;
        boolean[] r5;
        net.htmlparser.jericho.Logger $r6;
        net.htmlparser.jericho.RowColumnVector $r7, $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.CharSequence;
        i0 := @parameter3: int;
        r3 := @parameter4: java.lang.String;
        i1 := @parameter5: int;
        $r4 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r5 = $r4[22];
        $r6 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r7 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i1);
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>(200);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");
        $r14 = virtualinvoke $r8.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at position ");
        $r18 = virtualinvoke $r7.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r19);
        r5[0] = 1;
        return;
    }

    private static void log(net.htmlparser.jericho.Source, java.lang.String, java.lang.CharSequence, int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        java.lang.String r1, r3, $r16;
        java.lang.CharSequence r2;
        int i0;
        boolean[][] $r4;
        boolean[] r5;
        net.htmlparser.jericho.Logger $r6;
        net.htmlparser.jericho.RowColumnVector $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.CharSequence;
        i0 := @parameter3: int;
        r3 := @parameter4: java.lang.String;
        $r4 = <net.htmlparser.jericho.Attributes: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();

     label0:
        r5 = $r4[23];
        $r6 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r7 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(200);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");
        $r13 = virtualinvoke $r7.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r16);
        r5[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.Attributes: boolean[][] $VRi()>();
        r1 = $r0[24];
        <net.htmlparser.jericho.Attributes: int defaultMaxErrorCount> = 2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;

        $r0 = newmultiarray (boolean)[25][];
        <net.htmlparser.jericho.Attributes: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[128];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[5];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[8];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[4];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[5];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[7];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[6];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[3];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[4];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[4];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[4];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Attributes", 6266186125400769353L);
        return $r0;
    }
}
class net.htmlparser.jericho.AttributesOutputSegment extends java.lang.Object implements net.htmlparser.jericho.OutputSegment
{
    private final int begin;
    private final int end;
    private final java.util.Map map;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Attributes, boolean)
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        net.htmlparser.jericho.Attributes r1;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Map $r4;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        r1 := @parameter0: net.htmlparser.jericho.Attributes;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        $r4 = virtualinvoke r1.<net.htmlparser.jericho.Attributes: java.util.Map getMap(boolean)>(z0);
        specialinvoke r0.<net.htmlparser.jericho.AttributesOutputSegment: void <init>(net.htmlparser.jericho.Attributes,java.util.Map)>(r1, $r4);
        r3[0] = 1;
        return;
    }

    public void <init>(net.htmlparser.jericho.Attributes, java.util.Map)
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        net.htmlparser.jericho.Attributes r1;
        java.util.Map r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.IllegalArgumentException $r5;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        r1 := @parameter0: net.htmlparser.jericho.Attributes;
        r2 := @parameter1: java.util.Map;
        $r3 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r4[0] = 1;
        if r2 == null goto label1;

        r4[1] = 1;
        if r1 != null goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("both arguments must be non-null");
        r4[2] = 1;
        throw $r5;

     label2:
        $i0 = virtualinvoke r1.<net.htmlparser.jericho.Attributes: int getBegin()>();
        r0.<net.htmlparser.jericho.AttributesOutputSegment: int begin> = $i0;
        $i1 = virtualinvoke r1.<net.htmlparser.jericho.Attributes: int getEnd()>();
        r0.<net.htmlparser.jericho.AttributesOutputSegment: int end> = $i1;
        r0.<net.htmlparser.jericho.AttributesOutputSegment: java.util.Map map> = r2;
        r4[3] = 1;
        return;
    }

    public int getBegin()
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        $r1 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<net.htmlparser.jericho.AttributesOutputSegment: int begin>;
        r2[0] = 1;
        return $i0;
    }

    public int getEnd()
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        $r1 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<net.htmlparser.jericho.AttributesOutputSegment: int end>;
        r2[0] = 1;
        return $i0;
    }

    public java.util.Map getMap()
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Map $r3;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        $r1 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.AttributesOutputSegment: java.util.Map map>;
        r2[0] = 1;
        return $r3;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Map $r4;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = r0.<net.htmlparser.jericho.AttributesOutputSegment: java.util.Map map>;
        staticinvoke <net.htmlparser.jericho.Attributes: void appendHTML(java.lang.Appendable,java.util.Map)>(r1, $r4);
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Map $r4;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $r4 = r0.<net.htmlparser.jericho.AttributesOutputSegment: java.util.Map map>;
        staticinvoke <net.htmlparser.jericho.Attributes: void appendHTML(java.lang.Appendable,java.util.Map)>(r1, $r4);
        r3[0] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2, $i3;
        long $l4;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        $r1 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $i0 = r0.<net.htmlparser.jericho.AttributesOutputSegment: int end>;
        $i1 = r0.<net.htmlparser.jericho.AttributesOutputSegment: int begin>;
        $i2 = $i0 - $i1;
        $i3 = $i2 * 2;
        $l4 = (long) $i3;
        r2[0] = 1;
        return $l4;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Map $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        $r1 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.AttributesOutputSegment: java.util.Map map>;
        $r4 = staticinvoke <net.htmlparser.jericho.Attributes: java.lang.String generateHTML(java.util.Map)>($r3);
        r2[0] = 1;
        return $r4;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.AttributesOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r5, $r6, $r7, $r8, $r9;
        java.io.IOException r4, $r11;
        int $i0, $i1;
        java.lang.RuntimeException $r12;
        java.lang.String $r13;

        r0 := @this: net.htmlparser.jericho.AttributesOutputSegment;
        $r1 = <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r3 = $r5;
        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(p");
        $i0 = r0.<net.htmlparser.jericho.AttributesOutputSegment: int begin>;
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-p");
        $i1 = r0.<net.htmlparser.jericho.AttributesOutputSegment: int end>;
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

     label1:
        virtualinvoke r0.<net.htmlparser.jericho.AttributesOutputSegment: void appendTo(java.lang.Appendable)>(r3);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;
        r4 = $r11;
        $r12 = new java.lang.RuntimeException;
        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);
        r2[1] = 1;
        throw $r12;

     label4:
        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[2] = 1;
        return $r13;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRi()>();
        r1 = $r0[10];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = newmultiarray (boolean)[11][];
        <net.htmlparser.jericho.AttributesOutputSegment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/AttributesOutputSegment", -3494493936613280516L);
        return $r0;
    }
}
public class net.htmlparser.jericho.BasicLogFormatter extends java.util.logging.Formatter
{
    public static boolean OutputLevel;
    public static boolean OutputName;
    static final java.util.logging.Formatter INSTANCE;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        net.htmlparser.jericho.BasicLogFormatter r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.BasicLogFormatter;
        $r1 = <net.htmlparser.jericho.BasicLogFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.BasicLogFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.util.logging.Formatter: void <init>()>();
        r2[0] = 1;
        return;
    }

    public java.lang.String format(java.util.logging.LogRecord)
    {
        net.htmlparser.jericho.BasicLogFormatter r0;
        java.util.logging.LogRecord r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.logging.Level $r4;
        java.lang.String $r5, $r6, $r7, $r8;

        r0 := @this: net.htmlparser.jericho.BasicLogFormatter;
        r1 := @parameter0: java.util.logging.LogRecord;
        $r2 = <net.htmlparser.jericho.BasicLogFormatter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.BasicLogFormatter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();
        $r5 = virtualinvoke $r4.<java.util.logging.Level: java.lang.String getName()>();
        $r6 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();
        $r7 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();
        $r8 = staticinvoke <net.htmlparser.jericho.BasicLogFormatter: java.lang.String format(java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7);
        r3[0] = 1;
        return $r8;
    }

    public static java.lang.String format(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r13, $r15;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.StringBuilder r5, $r6, $r7, $r9, $r10;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        $r3 = <net.htmlparser.jericho.BasicLogFormatter: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.BasicLogFormatter: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $r6 = new java.lang.StringBuilder;
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = $i0 + 40;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i1);
        r5 = $r6;
        $z0 = <net.htmlparser.jericho.BasicLogFormatter: boolean OutputLevel>;
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        r4[1] = 1;

     label1:
        $z1 = <net.htmlparser.jericho.BasicLogFormatter: boolean OutputName>;
        r4[2] = 1;
        if $z1 == 0 goto label2;

        r4[3] = 1;
        if r2 == null goto label2;

        $r9 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");
        r4[4] = 1;

     label2:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r13 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        r4[5] = 1;
        return $r15;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.BasicLogFormatter $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.BasicLogFormatter: boolean[][] $VRi()>();
        r1 = $r0[3];
        <net.htmlparser.jericho.BasicLogFormatter: boolean OutputLevel> = 1;
        <net.htmlparser.jericho.BasicLogFormatter: boolean OutputName> = 0;
        $r2 = new net.htmlparser.jericho.BasicLogFormatter;
        specialinvoke $r2.<net.htmlparser.jericho.BasicLogFormatter: void <init>()>();
        <net.htmlparser.jericho.BasicLogFormatter: java.util.logging.Formatter INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.BasicLogFormatter: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/BasicLogFormatter", -3250446347979287098L);
        return $r0;
    }
}
final class net.htmlparser.jericho.BlankOutputSegment extends java.lang.Object implements net.htmlparser.jericho.OutputSegment
{
    private final int begin;
    private final int end;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(int, int)
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.BlankOutputSegment: int begin> = i0;
        r0.<net.htmlparser.jericho.BlankOutputSegment: int end> = i1;
        r2[0] = 1;
        return;
    }

    public void <init>(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $i0 = virtualinvoke r1.<net.htmlparser.jericho.Segment: int getBegin()>();
        $i1 = virtualinvoke r1.<net.htmlparser.jericho.Segment: int getEnd()>();
        specialinvoke r0.<net.htmlparser.jericho.BlankOutputSegment: void <init>(int,int)>($i0, $i1);
        r3[0] = 1;
        return;
    }

    public int getBegin()
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        $r1 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<net.htmlparser.jericho.BlankOutputSegment: int begin>;
        r2[0] = 1;
        return $i0;
    }

    public int getEnd()
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        $r1 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<net.htmlparser.jericho.BlankOutputSegment: int end>;
        r2[0] = 1;
        return $i0;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        virtualinvoke r0.<net.htmlparser.jericho.BlankOutputSegment: void appendTo(java.lang.Appendable)>(r1);
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        i0 = r0.<net.htmlparser.jericho.BlankOutputSegment: int begin>;
        r3[0] = 1;

     label1:
        $i1 = r0.<net.htmlparser.jericho.BlankOutputSegment: int end>;
        r3[1] = 1;
        if i0 >= $i1 goto label2;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        i0 = i0 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;
        long $l3;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        $r1 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $i0 = r0.<net.htmlparser.jericho.BlankOutputSegment: int end>;
        $i1 = r0.<net.htmlparser.jericho.BlankOutputSegment: int begin>;
        $i2 = $i0 - $i1;
        $l3 = (long) $i2;
        r2[0] = 1;
        return $l3;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r4;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        $r1 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r4 = new java.lang.StringBuilder;
        $i1 = r0.<net.htmlparser.jericho.BlankOutputSegment: int end>;
        $i2 = r0.<net.htmlparser.jericho.BlankOutputSegment: int begin>;
        $i3 = $i1 - $i2;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i3);
        r3 = $r4;
        i0 = r0.<net.htmlparser.jericho.BlankOutputSegment: int begin>;
        r2[0] = 1;

     label1:
        $i4 = r0.<net.htmlparser.jericho.BlankOutputSegment: int end>;
        r2[1] = 1;
        if i0 >= $i4 goto label2;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        i0 = i0 + 1;
        r2[2] = 1;
        goto label1;

     label2:
        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;
        return $r6;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.BlankOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1;
        java.lang.String $r9;

        r0 := @this: net.htmlparser.jericho.BlankOutputSegment;
        $r1 = <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replace with Spaces: (p");
        $i0 = r0.<net.htmlparser.jericho.BlankOutputSegment: int begin>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-p");
        $i1 = r0.<net.htmlparser.jericho.BlankOutputSegment: int end>;
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r9;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.BlankOutputSegment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/BlankOutputSegment", 716987196197474674L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Cache extends java.lang.Object
{
    public final net.htmlparser.jericho.Source source;
    private final net.htmlparser.jericho.SubCache allTagTypesSubCache;
    private final net.htmlparser.jericho.SubCache[] subCaches;
    static final net.htmlparser.jericho.Cache STREAMED_SOURCE_MARKER;
    private static final boolean[][] $VRc;

    public void <init>(net.htmlparser.jericho.Source)
    {
        net.htmlparser.jericho.Cache r0;
        net.htmlparser.jericho.Source r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.TagType[] r4;
        int i0, $i1, $i2, $i3, $i4;
        net.htmlparser.jericho.SubCache $r5, $r8, $r10;
        net.htmlparser.jericho.SubCache[] $r6, $r7, $r9;
        net.htmlparser.jericho.TagType $r11;

        r0 := @this: net.htmlparser.jericho.Cache;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        $r2 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source> = r1;
        $r5 = new net.htmlparser.jericho.SubCache;
        specialinvoke $r5.<net.htmlparser.jericho.SubCache: void <init>(net.htmlparser.jericho.Cache,net.htmlparser.jericho.TagType)>(r0, null);
        r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache> = $r5;
        r4 = staticinvoke <net.htmlparser.jericho.Cache: net.htmlparser.jericho.TagType[] getSeparatelyCachedTagTypes()>();
        $i1 = lengthof r4;
        $i2 = $i1 + 1;
        $r6 = newarray (net.htmlparser.jericho.SubCache)[$i2];
        r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches> = $r6;
        $r7 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r8 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        $r7[0] = $r8;
        i0 = 0;
        r3[0] = 1;

     label1:
        $i3 = lengthof r4;
        r3[1] = 1;
        if i0 >= $i3 goto label2;

        $r9 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $i4 = i0 + 1;
        $r10 = new net.htmlparser.jericho.SubCache;
        $r11 = r4[i0];
        specialinvoke $r10.<net.htmlparser.jericho.SubCache: void <init>(net.htmlparser.jericho.Cache,net.htmlparser.jericho.TagType)>(r0, $r11);
        $r9[$i4] = $r10;
        i0 = i0 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    private void <init>()
    {
        net.htmlparser.jericho.Cache r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Cache;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source> = null;
        r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache> = null;
        r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches> = null;
        r2[0] = 1;
        return;
    }

    public void clear()
    {
        net.htmlparser.jericho.Cache r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        net.htmlparser.jericho.SubCache $r4, $r9;
        boolean $z0;
        java.lang.Object $r5;
        net.htmlparser.jericho.Tag $r6;
        int i0, $i1;
        net.htmlparser.jericho.SubCache[] $r7, $r8;

        r0 := @this: net.htmlparser.jericho.Cache;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        r3 = virtualinvoke $r4.<net.htmlparser.jericho.SubCache: java.util.Iterator getTagIterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        $r6 = (net.htmlparser.jericho.Tag) $r5;
        virtualinvoke $r6.<net.htmlparser.jericho.Tag: void orphan()>();
        r2[2] = 1;
        goto label1;

     label2:
        i0 = 0;
        r2[3] = 1;

     label3:
        $r7 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $i1 = lengthof $r7;
        r2[4] = 1;
        if i0 >= $i1 goto label4;

        $r8 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r9 = $r8[i0];
        virtualinvoke $r9.<net.htmlparser.jericho.SubCache: void clear()>();
        i0 = i0 + 1;
        r2[5] = 1;
        goto label3;

     label4:
        r2[6] = 1;
        return;
    }

    public net.htmlparser.jericho.Tag getTagAt(int, boolean)
    {
        net.htmlparser.jericho.Cache r0;
        int i0;
        boolean z0, $z1;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3, $r6;
        net.htmlparser.jericho.SubCache $r4;
        net.htmlparser.jericho.Tag $r5;

        r0 := @this: net.htmlparser.jericho.Cache;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $z1 = $r3.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;
        r2[0] = 1;
        if $z1 == 0 goto label1;

        $r4 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Tag getTagAt(int,boolean)>(i0, z0);
        r2[1] = 1;
        goto label2;

     label1:
        $r6 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $r5 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAtUncached(net.htmlparser.jericho.Source,int,boolean)>($r6, i0, z0);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.Tag getPreviousTag(int)
    {
        net.htmlparser.jericho.Cache r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache $r3;
        net.htmlparser.jericho.Tag $r4;

        r0 := @this: net.htmlparser.jericho.Cache;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Tag getPreviousTag(int)>(i0);
        r2[0] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Tag getNextTag(int)
    {
        net.htmlparser.jericho.Cache r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache $r3;
        net.htmlparser.jericho.Tag $r4;

        r0 := @this: net.htmlparser.jericho.Cache;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Tag getNextTag(int)>(i0);
        r2[0] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Tag getPreviousTag(int, net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Cache r0;
        int i0, i1, $i3;
        net.htmlparser.jericho.TagType r1, $r8;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source $r4, $r12;
        boolean $z0;
        byte $b2;
        net.htmlparser.jericho.SubCache[] $r5, $r6, $r9;
        net.htmlparser.jericho.SubCache $r7, $r10;
        net.htmlparser.jericho.Tag $r11, $r13;

        r0 := @this: net.htmlparser.jericho.Cache;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $r4 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $z0 = $r4.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $b2 = 0;
        r3[1] = 1;
        goto label2;

     label1:
        $b2 = 1;
        r3[2] = 1;

     label2:
        i1 = $b2;
        r3[3] = 1;

     label3:
        $r5 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $i3 = lengthof $r5;
        r3[4] = 1;
        if i1 >= $i3 goto label5;

        $r6 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r7 = $r6[i1];
        $r8 = $r7.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        r3[5] = 1;
        if r1 != $r8 goto label4;

        $r9 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r10 = $r9[i1];
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Tag getPreviousTag(int)>(i0);
        r3[6] = 1;
        return $r11;

     label4:
        i1 = i1 + 1;
        r3[7] = 1;
        goto label3;

     label5:
        $r12 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $r13 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTagUncached(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType,int)>($r12, i0, r1, -1);
        r3[8] = 1;
        return $r13;
    }

    public net.htmlparser.jericho.Tag getNextTag(int, net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Cache r0;
        int i0, i1, $i3;
        net.htmlparser.jericho.TagType r1, $r8;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source $r4, $r12;
        boolean $z0;
        byte $b2;
        net.htmlparser.jericho.SubCache[] $r5, $r6, $r9;
        net.htmlparser.jericho.SubCache $r7, $r10;
        net.htmlparser.jericho.Tag $r11, $r13;

        r0 := @this: net.htmlparser.jericho.Cache;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $r4 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $z0 = $r4.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $b2 = 0;
        r3[1] = 1;
        goto label2;

     label1:
        $b2 = 1;
        r3[2] = 1;

     label2:
        i1 = $b2;
        r3[3] = 1;

     label3:
        $r5 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $i3 = lengthof $r5;
        r3[4] = 1;
        if i1 >= $i3 goto label5;

        $r6 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r7 = $r6[i1];
        $r8 = $r7.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        r3[5] = 1;
        if r1 != $r8 goto label4;

        $r9 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r10 = $r9[i1];
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Tag getNextTag(int)>(i0);
        r3[6] = 1;
        return $r11;

     label4:
        i1 = i1 + 1;
        r3[7] = 1;
        goto label3;

     label5:
        $r12 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $r13 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTagUncached(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType,int)>($r12, i0, r1, -1);
        r3[8] = 1;
        return $r13;
    }

    public net.htmlparser.jericho.Tag addTagAt(int, boolean)
    {
        net.htmlparser.jericho.Cache r0;
        int i0, i1, $i2;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        net.htmlparser.jericho.TagType r4, $r10;
        net.htmlparser.jericho.Source $r5;
        net.htmlparser.jericho.SubCache $r6, $r9, $r12;
        net.htmlparser.jericho.SubCache[] $r7, $r8, $r11;

        r0 := @this: net.htmlparser.jericho.Cache;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r5 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAtUncached(net.htmlparser.jericho.Source,int,boolean)>($r5, i0, z0);
        r2[0] = 1;
        if z0 == 0 goto label1;

        r2[1] = 1;
        if r3 != null goto label1;

        r2[2] = 1;
        return null;

     label1:
        $r6 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        virtualinvoke $r6.<net.htmlparser.jericho.SubCache: void addTagAt(int,net.htmlparser.jericho.Tag)>(i0, r3);
        r2[3] = 1;
        if r3 != null goto label2;

        r2[4] = 1;
        return null;

     label2:
        r4 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        i1 = 1;
        r2[5] = 1;

     label3:
        $r7 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $i2 = lengthof $r7;
        r2[6] = 1;
        if i1 >= $i2 goto label5;

        $r8 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r9 = $r8[i1];
        $r10 = $r9.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        r2[7] = 1;
        if r4 != $r10 goto label4;

        $r11 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r12 = $r11[i1];
        virtualinvoke $r12.<net.htmlparser.jericho.SubCache: void addTagAt(int,net.htmlparser.jericho.Tag)>(i0, r3);
        r2[8] = 1;
        return r3;

     label4:
        i1 = i1 + 1;
        r2[9] = 1;
        goto label3;

     label5:
        r2[10] = 1;
        return r3;
    }

    public int getTagCount()
    {
        net.htmlparser.jericho.Cache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache $r3;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.Cache;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        $i0 = virtualinvoke $r3.<net.htmlparser.jericho.SubCache: int size()>();
        $i1 = $i0 - 2;
        r2[0] = 1;
        return $i1;
    }

    public java.util.Iterator getTagIterator()
    {
        net.htmlparser.jericho.Cache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache $r3;
        java.util.Iterator $r4;

        r0 := @this: net.htmlparser.jericho.Cache;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.SubCache: java.util.Iterator getTagIterator()>();
        r2[0] = 1;
        return $r4;
    }

    public void loadAllTags(java.util.List, net.htmlparser.jericho.Tag[], net.htmlparser.jericho.StartTag[])
    {
        net.htmlparser.jericho.Cache r0;
        java.util.List r1;
        net.htmlparser.jericho.Tag[] r2;
        net.htmlparser.jericho.StartTag[] r3;
        boolean[][] $r4;
        boolean[] r5;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8, $i9;
        net.htmlparser.jericho.Tag r6;
        net.htmlparser.jericho.SubCache $r7, $r10, $r14, $r17, $r20;
        java.lang.Object $r8;
        boolean $z0, $z1;
        net.htmlparser.jericho.StartTag $r9;
        net.htmlparser.jericho.SubCache[] $r11, $r13, $r16, $r18, $r19;
        net.htmlparser.jericho.TagType $r12, $r15;

        r0 := @this: net.htmlparser.jericho.Cache;
        r1 := @parameter0: java.util.List;
        r2 := @parameter1: net.htmlparser.jericho.Tag[];
        r3 := @parameter2: net.htmlparser.jericho.StartTag[];
        $r4 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r5 = $r4[11];
        i0 = interfaceinvoke r1.<java.util.List: int size()>();
        $r7 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        virtualinvoke $r7.<net.htmlparser.jericho.SubCache: void bulkLoad_Init(int)>(i0);
        i1 = 0;
        i2 = 0;
        i3 = 0;
        r5[0] = 1;

     label1:
        r5[1] = 1;
        if i3 >= i0 goto label6;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);
        r6 = (net.htmlparser.jericho.Tag) $r8;
        $z0 = virtualinvoke r6.<net.htmlparser.jericho.Tag: boolean isUnregistered()>();
        r5[2] = 1;
        if $z0 != 0 goto label2;

        $i5 = i1;
        i1 = i1 + 1;
        r2[$i5] = r6;
        $z1 = r6 instanceof net.htmlparser.jericho.StartTag;
        r5[3] = 1;
        if $z1 == 0 goto label2;

        $i6 = i2;
        i2 = i2 + 1;
        $r9 = (net.htmlparser.jericho.StartTag) r6;
        r3[$i6] = $r9;
        r5[4] = 1;

     label2:
        $r10 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache allTagTypesSubCache>;
        virtualinvoke $r10.<net.htmlparser.jericho.SubCache: void bulkLoad_Set(int,net.htmlparser.jericho.Tag)>(i3, r6);
        i4 = 1;
        r5[5] = 1;

     label3:
        $r11 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $i7 = lengthof $r11;
        r5[6] = 1;
        if i4 >= $i7 goto label5;

        $r12 = virtualinvoke r6.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r13 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r14 = $r13[i4];
        $r15 = $r14.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        r5[7] = 1;
        if $r12 != $r15 goto label4;

        $r16 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r17 = $r16[i4];
        virtualinvoke $r17.<net.htmlparser.jericho.SubCache: void bulkLoad_AddToTypeSpecificCache(net.htmlparser.jericho.Tag)>(r6);
        r5[8] = 1;
        goto label5;

     label4:
        i4 = i4 + 1;
        r5[9] = 1;
        goto label3;

     label5:
        i3 = i3 + 1;
        r5[10] = 1;
        goto label1;

     label6:
        i8 = 1;
        r5[11] = 1;

     label7:
        $r18 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $i9 = lengthof $r18;
        r5[12] = 1;
        if i8 >= $i9 goto label8;

        $r19 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r20 = $r19[i8];
        virtualinvoke $r20.<net.htmlparser.jericho.SubCache: void bulkLoad_FinaliseTypeSpecificCache()>();
        i8 = i8 + 1;
        r5[13] = 1;
        goto label7;

     label8:
        r5[14] = 1;
        return;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.Cache r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r4;
        int i0, $i1;
        net.htmlparser.jericho.SubCache[] $r5, $r6;
        net.htmlparser.jericho.SubCache $r7;
        java.lang.String $r9;

        r0 := @this: net.htmlparser.jericho.Cache;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        i0 = 0;
        r2[0] = 1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $i1 = lengthof $r5;
        r2[1] = 1;
        if i0 >= $i1 goto label2;

        $r6 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.SubCache[] subCaches>;
        $r7 = $r6[i0];
        virtualinvoke $r7.<net.htmlparser.jericho.SubCache: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>(r3);
        i0 = i0 + 1;
        r2[2] = 1;
        goto label1;

     label2:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;
        return $r9;
    }

    protected int getSourceLength()
    {
        net.htmlparser.jericho.Cache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Cache;
        $r1 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = r0.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $i0 = $r3.<net.htmlparser.jericho.Source: int end>;
        r2[0] = 1;
        return $i0;
    }

    private static net.htmlparser.jericho.TagType[] getSeparatelyCachedTagTypes()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] $r2;

        $r0 = <net.htmlparser.jericho.Cache: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();

     label0:
        r1 = $r0[14];
        $r2 = staticinvoke <net.htmlparser.jericho.TagType: net.htmlparser.jericho.TagType[] getTagTypesIgnoringEnclosedMarkup()>();
        r1[0] = 1;
        return $r2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Cache $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Cache: boolean[][] $VRi()>();
        r1 = $r0[15];
        $r2 = new net.htmlparser.jericho.Cache;
        specialinvoke $r2.<net.htmlparser.jericho.Cache: void <init>()>();
        <net.htmlparser.jericho.Cache: net.htmlparser.jericho.Cache STREAMED_SOURCE_MARKER> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        $r0 = newmultiarray (boolean)[16][];
        <net.htmlparser.jericho.Cache: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[4];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[9];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[9];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[11];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[15];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[4];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Cache", -7633065119901825791L);
        return $r0;
    }
}
final class net.htmlparser.jericho.CharOutputSegment extends java.lang.Object implements net.htmlparser.jericho.OutputSegment
{
    private final int begin;
    private final int end;
    private final char ch;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(int, int, char)
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        int i0, i1;
        char c2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        c2 := @parameter2: char;
        $r1 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.CharOutputSegment: int begin> = i0;
        r0.<net.htmlparser.jericho.CharOutputSegment: int end> = i1;
        r0.<net.htmlparser.jericho.CharOutputSegment: char ch> = c2;
        r2[0] = 1;
        return;
    }

    public void <init>(net.htmlparser.jericho.Segment, char)
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        net.htmlparser.jericho.Segment r1;
        char c0;
        boolean[][] $r2;
        boolean[] r3;
        int $i1, $i2;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        c0 := @parameter1: char;
        $r2 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $i1 = r1.<net.htmlparser.jericho.Segment: int begin>;
        r0.<net.htmlparser.jericho.CharOutputSegment: int begin> = $i1;
        $i2 = r1.<net.htmlparser.jericho.Segment: int end>;
        r0.<net.htmlparser.jericho.CharOutputSegment: int end> = $i2;
        r0.<net.htmlparser.jericho.CharOutputSegment: char ch> = c0;
        r3[0] = 1;
        return;
    }

    public int getBegin()
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        $r1 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<net.htmlparser.jericho.CharOutputSegment: int begin>;
        r2[0] = 1;
        return $i0;
    }

    public int getEnd()
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        $r1 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<net.htmlparser.jericho.CharOutputSegment: int end>;
        r2[0] = 1;
        return $i0;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        virtualinvoke r0.<net.htmlparser.jericho.CharOutputSegment: void appendTo(java.lang.Appendable)>(r1);
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        char $c0;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $c0 = r0.<net.htmlparser.jericho.CharOutputSegment: char ch>;
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c0);
        r3[0] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        $r1 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        return 1L;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        char $c0;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        $r1 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $c0 = r0.<net.htmlparser.jericho.CharOutputSegment: char ch>;
        $r3 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.CharOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1;
        char $c2;
        java.lang.String $r10;

        r0 := @this: net.htmlparser.jericho.CharOutputSegment;
        $r1 = <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replace: (p");
        $i0 = r0.<net.htmlparser.jericho.CharOutputSegment: int begin>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-p");
        $i1 = r0.<net.htmlparser.jericho.CharOutputSegment: int end>;
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");
        $c2 = r0.<net.htmlparser.jericho.CharOutputSegment: char ch>;
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r10;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.CharOutputSegment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/CharOutputSegment", -3991439343884043206L);
        return $r0;
    }
}
class net.htmlparser.jericho.CharSequenceParseText extends java.lang.Object implements net.htmlparser.jericho.ParseText
{
    private final java.lang.CharSequence charSequence;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(java.lang.CharSequence)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        r1 := @parameter0: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.CharSequenceParseText: java.lang.CharSequence charSequence> = r1;
        r3[0] = 1;
        return;
    }

    public final char charAt(int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        char c1, $c2, $c3;
        java.lang.CharSequence $r3;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.CharSequenceParseText: java.lang.CharSequence charSequence>;
        c1 = interfaceinvoke $r3.<java.lang.CharSequence: char charAt(int)>(i0);
        r2[0] = 1;
        if c1 < 65 goto label1;

        r2[1] = 1;
        if c1 > 90 goto label1;

        $c2 = c1 ^ 32;
        $c3 = (char) $c2;
        r2[2] = 1;
        goto label2;

     label1:
        $c3 = c1;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return $c3;
    }

    public final boolean containsAt(java.lang.String, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        java.lang.String r1;
        int i0, i1, $i2, $i4;
        boolean[][] $r2;
        boolean[] r3;
        char $c3, $c5;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        i1 = 0;
        r3[0] = 1;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if i1 >= $i2 goto label3;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        $i4 = i0 + i1;
        $c5 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: char charAt(int)>($i4);
        r3[2] = 1;
        if $c3 == $c5 goto label2;

        r3[3] = 1;
        return 0;

     label2:
        i1 = i1 + 1;
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return 1;
    }

    public final int indexOf(char, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        char c0;
        int i1, $i2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        c0 := @parameter0: char;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i2 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int indexOf(char,int,int)>(c0, i1, -1);
        r2[0] = 1;
        return $i2;
    }

    public final int indexOf(char, int, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        char c0, $c8;
        int i1, i2, i3, i4, $i5, $i6, $i7;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IndexOutOfBoundsException $r3, r4;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        c0 := @parameter0: char;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r2[0] = 1;
        if i2 == -1 goto label1;

        $i5 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int getEnd()>();
        r2[1] = 1;
        if i2 <= $i5 goto label2;

     label1:
        $i6 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int getEnd()>();
        r2[2] = 1;
        goto label3;

     label2:
        $i6 = i2;
        r2[3] = 1;

     label3:
        i3 = $i6;

     label4:
        r2[4] = 1;
        if i1 >= 0 goto label5;

        $i7 = 0;
        r2[5] = 1;
        goto label6;

     label5:
        $i7 = i1;
        r2[6] = 1;

     label6:
        i4 = $i7;
        r2[7] = 1;

     label7:
        r2[8] = 1;
        if i4 >= i3 goto label10;

        $c8 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: char charAt(int)>(i4);
        r2[9] = 1;
        if $c8 != c0 goto label9;

        r2[10] = 1;

     label8:
        return i4;

     label9:
        i4 = i4 + 1;
        r2[11] = 1;
        goto label7;

     label10:
        r2[12] = 1;

     label11:
        goto label13;

     label12:
        $r3 := @caughtexception;
        r4 = $r3;
        r2[13] = 1;

     label13:
        r2[14] = 1;
        return -1;

        catch java.lang.IndexOutOfBoundsException from label4 to label8 with label12;
        catch java.lang.IndexOutOfBoundsException from label9 to label11 with label12;
    }

    public final int indexOf(java.lang.String, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        java.lang.String r1;
        int i0, $i1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $i1 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int indexOf(java.lang.String,int,int)>(r1, i0, -1);
        r3[0] = 1;
        return $i1;
    }

    public final int indexOf(java.lang.String, int, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        java.lang.String r1;
        int i0, i1, i3, i4, i5, i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i19;
        boolean[][] $r2;
        boolean[] r3;
        char c2, $c8, $c16, $c18, $c20;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $i7 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[0] = 1;
        if $i7 != 1 goto label1;

        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        $i9 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int indexOf(char,int,int)>($c8, i0, i1);
        r3[1] = 1;
        return $i9;

     label1:
        $i10 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[2] = 1;
        if $i10 != 0 goto label2;

        r3[3] = 1;
        return i0;

     label2:
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        $i11 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int getEnd()>();
        $i12 = virtualinvoke r1.<java.lang.String: int length()>();
        $i13 = $i11 - $i12;
        i3 = $i13 + 1;
        r3[4] = 1;
        if i1 == -1 goto label3;

        r3[5] = 1;
        if i1 <= i3 goto label4;

     label3:
        $i14 = i3;
        r3[6] = 1;
        goto label5;

     label4:
        $i14 = i1;
        r3[7] = 1;

     label5:
        i4 = $i14;
        r3[8] = 1;
        if i0 >= 0 goto label6;

        $i15 = 0;
        r3[9] = 1;
        goto label7;

     label6:
        $i15 = i0;
        r3[10] = 1;

     label7:
        i5 = $i15;
        r3[11] = 1;

     label8:
        r3[12] = 1;
        if i5 >= i4 goto label13;

        $c16 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: char charAt(int)>(i5);
        r3[13] = 1;
        if $c16 != c2 goto label12;

        i6 = 1;
        r3[14] = 1;

     label9:
        $i17 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[15] = 1;
        if i6 >= $i17 goto label11;

        $c18 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);
        $i19 = i6 + i5;
        $c20 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: char charAt(int)>($i19);
        r3[16] = 1;
        if $c18 == $c20 goto label10;

        r3[17] = 1;
        goto label12;

     label10:
        i6 = i6 + 1;
        r3[18] = 1;
        goto label9;

     label11:
        r3[19] = 1;
        return i5;

     label12:
        i5 = i5 + 1;
        r3[20] = 1;
        goto label8;

     label13:
        r3[21] = 1;
        return -1;
    }

    public final int lastIndexOf(char, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        char c0;
        int i1, $i2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        c0 := @parameter0: char;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $i2 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int lastIndexOf(char,int,int)>(c0, i1, -1);
        r2[0] = 1;
        return $i2;
    }

    public final int lastIndexOf(char, int, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        char c0, $c6;
        int i1, i2, i3, $i4, $i5;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        c0 := @parameter0: char;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $i4 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int getEnd()>();
        r2[0] = 1;
        if i1 <= $i4 goto label1;

        $i5 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int getEnd()>();
        r2[1] = 1;
        goto label2;

     label1:
        $i5 = i1;
        r2[2] = 1;

     label2:
        i3 = $i5;
        r2[3] = 1;

     label3:
        r2[4] = 1;
        if i3 <= i2 goto label5;

        $c6 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: char charAt(int)>(i3);
        r2[5] = 1;
        if $c6 != c0 goto label4;

        r2[6] = 1;
        return i3;

     label4:
        i3 = i3 + -1;
        r2[7] = 1;
        goto label3;

     label5:
        r2[8] = 1;
        return -1;
    }

    public final int lastIndexOf(java.lang.String, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        java.lang.String r1;
        int i0, $i1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $i1 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int lastIndexOf(java.lang.String,int,int)>(r1, i0, -1);
        r3[0] = 1;
        return $i1;
    }

    public final int lastIndexOf(java.lang.String, int, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i5, i6, i7, i8, $i9, $i11, $i12, $i13, $i14, $i15, $i18;
        boolean[][] $r2;
        boolean[] r3;
        char c4, $c10, $c16, $c17, $c19;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $i9 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[0] = 1;
        if $i9 != 1 goto label1;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        $i11 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int lastIndexOf(char,int,int)>($c10, i0, i1);
        r3[1] = 1;
        return $i11;

     label1:
        $i12 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[2] = 1;
        if $i12 != 0 goto label2;

        r3[3] = 1;
        return i0;

     label2:
        $i13 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: int getEnd()>();
        $i14 = virtualinvoke r1.<java.lang.String: int length()>();
        i2 = $i13 - $i14;
        r3[4] = 1;
        if i1 <= i2 goto label3;

        r3[5] = 1;
        return -1;

     label3:
        r3[6] = 1;
        if i0 <= i2 goto label4;

        i0 = i2;
        r3[7] = 1;

     label4:
        $i15 = virtualinvoke r1.<java.lang.String: int length()>();
        i3 = $i15 - 1;
        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);
        i5 = i1 + i3;
        i6 = i0 + i3;
        r3[8] = 1;

     label5:
        r3[9] = 1;
        if i6 <= i5 goto label10;

        $c16 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: char charAt(int)>(i6);
        r3[10] = 1;
        if $c16 != c4 goto label9;

        i7 = i6 - i3;
        i8 = i3 - 1;
        r3[11] = 1;

     label6:
        r3[12] = 1;
        if i8 < 0 goto label8;

        $c17 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i8);
        $i18 = i8 + i7;
        $c19 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: char charAt(int)>($i18);
        r3[13] = 1;
        if $c17 == $c19 goto label7;

        r3[14] = 1;
        goto label9;

     label7:
        i8 = i8 + -1;
        r3[15] = 1;
        goto label6;

     label8:
        r3[16] = 1;
        return i7;

     label9:
        i6 = i6 + -1;
        r3[17] = 1;
        goto label5;

     label10:
        r3[18] = 1;
        return -1;
    }

    public final int length()
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = r0.<net.htmlparser.jericho.CharSequenceParseText: java.lang.CharSequence charSequence>;
        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();
        r2[0] = 1;
        return $i0;
    }

    public final java.lang.CharSequence subSequence(int, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: java.lang.String substring(int,int)>(i0, i1);
        r2[0] = 1;
        return $r3;
    }

    public final java.lang.String toString()
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = r0.<net.htmlparser.jericho.CharSequenceParseText: java.lang.CharSequence charSequence>;
        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();
        r2[0] = 1;
        return $r4;
    }

    protected int getEnd()
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = r0.<net.htmlparser.jericho.CharSequenceParseText: java.lang.CharSequence charSequence>;
        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();
        r2[0] = 1;
        return $i0;
    }

    protected java.lang.String substring(int, int)
    {
        net.htmlparser.jericho.CharSequenceParseText r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3, $r4;
        java.lang.String $r5, $r6;

        r0 := @this: net.htmlparser.jericho.CharSequenceParseText;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = r0.<net.htmlparser.jericho.CharSequenceParseText: java.lang.CharSequence charSequence>;
        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);
        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        r2[0] = 1;
        return $r6;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRi()>();
        r1 = $r0[16];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        $r0 = newmultiarray (boolean)[17][];
        <net.htmlparser.jericho.CharSequenceParseText: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[15];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[22];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[9];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[19];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/CharSequenceParseText", -6261193522535443385L);
        return $r0;
    }
}
public interface  net.htmlparser.jericho.CharStreamSource extends java.lang.Object
{

    public abstract void writeTo(java.io.Writer) throws java.io.IOException;

    public abstract void appendTo(java.lang.Appendable) throws java.io.IOException;

    public abstract long getEstimatedMaximumOutputLength();

    public abstract java.lang.String toString();
}
public final class net.htmlparser.jericho.CharStreamSourceUtil extends java.lang.Object
{
    private static final int DEFAULT_ESTIMATED_MAXIMUM_OUTPUT_LENGTH;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>()
    {
        net.htmlparser.jericho.CharStreamSourceUtil r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.CharStreamSourceUtil;
        $r1 = <net.htmlparser.jericho.CharStreamSourceUtil: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static java.io.Reader getReader(net.htmlparser.jericho.CharStreamSource)
    {
        net.htmlparser.jericho.CharStreamSource r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.StringReader $r3;
        java.lang.String $r4;

        r0 := @parameter0: net.htmlparser.jericho.CharStreamSource;
        $r1 = <net.htmlparser.jericho.CharStreamSourceUtil: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = new java.io.StringReader;
        $r4 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: java.lang.String toString(net.htmlparser.jericho.CharStreamSource)>(r0);
        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r4);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String toString(net.htmlparser.jericho.CharStreamSource)
    {
        net.htmlparser.jericho.CharStreamSource r0;
        boolean[][] $r1;
        boolean[] r2;
        long l0;
        java.lang.StringBuilder r3, $r5;
        java.io.IOException r4, $r6;
        byte $b1;
        int $i2;
        java.lang.RuntimeException $r7;
        java.lang.String $r8;

        r0 := @parameter0: net.htmlparser.jericho.CharStreamSource;
        $r1 = <net.htmlparser.jericho.CharStreamSourceUtil: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        l0 = interfaceinvoke r0.<net.htmlparser.jericho.CharStreamSource: long getEstimatedMaximumOutputLength()>();
        $b1 = l0 cmp -1L;
        r2[0] = 1;
        if $b1 > 0 goto label1;

        l0 = 2048L;
        r2[1] = 1;

     label1:
        $r5 = new java.lang.StringBuilder;
        $i2 = (int) l0;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i2);
        r3 = $r5;

     label2:
        interfaceinvoke r0.<net.htmlparser.jericho.CharStreamSource: void appendTo(java.lang.Appendable)>(r3);
        r2[2] = 1;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;
        r4 = $r6;
        $r7 = new java.lang.RuntimeException;
        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);
        r2[3] = 1;
        throw $r7;

     label5:
        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[4] = 1;
        return $r8;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.CharStreamSourceUtil: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/CharStreamSourceUtil", -3755951231983956586L);
        return $r0;
    }
}
public class net.htmlparser.jericho.CharacterEntityReference extends net.htmlparser.jericho.CharacterReference
{
    private java.lang.String name;
    public static final char _nbsp;
    public static final char _iexcl;
    public static final char _cent;
    public static final char _pound;
    public static final char _curren;
    public static final char _yen;
    public static final char _brvbar;
    public static final char _sect;
    public static final char _uml;
    public static final char _copy;
    public static final char _ordf;
    public static final char _laquo;
    public static final char _not;
    public static final char _shy;
    public static final char _reg;
    public static final char _macr;
    public static final char _deg;
    public static final char _plusmn;
    public static final char _sup2;
    public static final char _sup3;
    public static final char _acute;
    public static final char _micro;
    public static final char _para;
    public static final char _middot;
    public static final char _cedil;
    public static final char _sup1;
    public static final char _ordm;
    public static final char _raquo;
    public static final char _frac14;
    public static final char _frac12;
    public static final char _frac34;
    public static final char _iquest;
    public static final char _Agrave;
    public static final char _Aacute;
    public static final char _Acirc;
    public static final char _Atilde;
    public static final char _Auml;
    public static final char _Aring;
    public static final char _AElig;
    public static final char _Ccedil;
    public static final char _Egrave;
    public static final char _Eacute;
    public static final char _Ecirc;
    public static final char _Euml;
    public static final char _Igrave;
    public static final char _Iacute;
    public static final char _Icirc;
    public static final char _Iuml;
    public static final char _ETH;
    public static final char _Ntilde;
    public static final char _Ograve;
    public static final char _Oacute;
    public static final char _Ocirc;
    public static final char _Otilde;
    public static final char _Ouml;
    public static final char _times;
    public static final char _Oslash;
    public static final char _Ugrave;
    public static final char _Uacute;
    public static final char _Ucirc;
    public static final char _Uuml;
    public static final char _Yacute;
    public static final char _THORN;
    public static final char _szlig;
    public static final char _agrave;
    public static final char _aacute;
    public static final char _acirc;
    public static final char _atilde;
    public static final char _auml;
    public static final char _aring;
    public static final char _aelig;
    public static final char _ccedil;
    public static final char _egrave;
    public static final char _eacute;
    public static final char _ecirc;
    public static final char _euml;
    public static final char _igrave;
    public static final char _iacute;
    public static final char _icirc;
    public static final char _iuml;
    public static final char _eth;
    public static final char _ntilde;
    public static final char _ograve;
    public static final char _oacute;
    public static final char _ocirc;
    public static final char _otilde;
    public static final char _ouml;
    public static final char _divide;
    public static final char _oslash;
    public static final char _ugrave;
    public static final char _uacute;
    public static final char _ucirc;
    public static final char _uuml;
    public static final char _yacute;
    public static final char _thorn;
    public static final char _yuml;
    public static final char _fnof;
    public static final char _Alpha;
    public static final char _Beta;
    public static final char _Gamma;
    public static final char _Delta;
    public static final char _Epsilon;
    public static final char _Zeta;
    public static final char _Eta;
    public static final char _Theta;
    public static final char _Iota;
    public static final char _Kappa;
    public static final char _Lambda;
    public static final char _Mu;
    public static final char _Nu;
    public static final char _Xi;
    public static final char _Omicron;
    public static final char _Pi;
    public static final char _Rho;
    public static final char _Sigma;
    public static final char _Tau;
    public static final char _Upsilon;
    public static final char _Phi;
    public static final char _Chi;
    public static final char _Psi;
    public static final char _Omega;
    public static final char _alpha;
    public static final char _beta;
    public static final char _gamma;
    public static final char _delta;
    public static final char _epsilon;
    public static final char _zeta;
    public static final char _eta;
    public static final char _theta;
    public static final char _iota;
    public static final char _kappa;
    public static final char _lambda;
    public static final char _mu;
    public static final char _nu;
    public static final char _xi;
    public static final char _omicron;
    public static final char _pi;
    public static final char _rho;
    public static final char _sigmaf;
    public static final char _sigma;
    public static final char _tau;
    public static final char _upsilon;
    public static final char _phi;
    public static final char _chi;
    public static final char _psi;
    public static final char _omega;
    public static final char _thetasym;
    public static final char _upsih;
    public static final char _piv;
    public static final char _bull;
    public static final char _hellip;
    public static final char _prime;
    public static final char _Prime;
    public static final char _oline;
    public static final char _frasl;
    public static final char _weierp;
    public static final char _image;
    public static final char _real;
    public static final char _trade;
    public static final char _alefsym;
    public static final char _larr;
    public static final char _uarr;
    public static final char _rarr;
    public static final char _darr;
    public static final char _harr;
    public static final char _crarr;
    public static final char _lArr;
    public static final char _uArr;
    public static final char _rArr;
    public static final char _dArr;
    public static final char _hArr;
    public static final char _forall;
    public static final char _part;
    public static final char _exist;
    public static final char _empty;
    public static final char _nabla;
    public static final char _isin;
    public static final char _notin;
    public static final char _ni;
    public static final char _prod;
    public static final char _sum;
    public static final char _minus;
    public static final char _lowast;
    public static final char _radic;
    public static final char _prop;
    public static final char _infin;
    public static final char _ang;
    public static final char _and;
    public static final char _or;
    public static final char _cap;
    public static final char _cup;
    public static final char _int;
    public static final char _there4;
    public static final char _sim;
    public static final char _cong;
    public static final char _asymp;
    public static final char _ne;
    public static final char _equiv;
    public static final char _le;
    public static final char _ge;
    public static final char _sub;
    public static final char _sup;
    public static final char _nsub;
    public static final char _sube;
    public static final char _supe;
    public static final char _oplus;
    public static final char _otimes;
    public static final char _perp;
    public static final char _sdot;
    public static final char _lceil;
    public static final char _rceil;
    public static final char _lfloor;
    public static final char _rfloor;
    public static final char _lang;
    public static final char _rang;
    public static final char _loz;
    public static final char _spades;
    public static final char _clubs;
    public static final char _hearts;
    public static final char _diams;
    public static final char _quot;
    public static final char _amp;
    public static final char _lt;
    public static final char _gt;
    public static final char _OElig;
    public static final char _oelig;
    public static final char _Scaron;
    public static final char _scaron;
    public static final char _Yuml;
    public static final char _circ;
    public static final char _tilde;
    public static final char _ensp;
    public static final char _emsp;
    public static final char _thinsp;
    public static final char _zwnj;
    public static final char _zwj;
    public static final char _lrm;
    public static final char _rlm;
    public static final char _ndash;
    public static final char _mdash;
    public static final char _lsquo;
    public static final char _rsquo;
    public static final char _sbquo;
    public static final char _ldquo;
    public static final char _rdquo;
    public static final char _bdquo;
    public static final char _dagger;
    public static final char _Dagger;
    public static final char _permil;
    public static final char _lsaquo;
    public static final char _rsaquo;
    public static final char _euro;
    public static final char _apos;
    private static java.util.Map NAME_TO_CODE_POINT_MAP;
    private static net.htmlparser.jericho.IntStringHashMap CODE_POINT_TO_NAME_MAP;
    private static int MAX_NAME_LENGTH;
    private static final boolean[][] $VRc;

    private void <init>(net.htmlparser.jericho.Source, int, int, int)
    {
        net.htmlparser.jericho.CharacterEntityReference r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, i2;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.CharacterEntityReference;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r2 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<net.htmlparser.jericho.CharacterReference: void <init>(net.htmlparser.jericho.Source,int,int,int)>(r1, i0, i1, i2);
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.String getName(int)>(i2);
        r0.<net.htmlparser.jericho.CharacterEntityReference: java.lang.String name> = $r4;
        r3[0] = 1;
        return;
    }

    public java.lang.String getName()
    {
        net.htmlparser.jericho.CharacterEntityReference r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.CharacterEntityReference;
        $r1 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.CharacterEntityReference: java.lang.String name>;
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String getName(char)
    {
        char c0;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        c0 := @parameter0: char;
        $r0 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        $r2 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.String getName(int)>(c0);
        r1[0] = 1;
        return $r2;
    }

    public static java.lang.String getName(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.IntStringHashMap $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $r2 = <net.htmlparser.jericho.CharacterEntityReference: net.htmlparser.jericho.IntStringHashMap CODE_POINT_TO_NAME_MAP>;
        $r3 = virtualinvoke $r2.<net.htmlparser.jericho.IntStringHashMap: java.lang.String get(int)>(i0);
        r1[0] = 1;
        return $r3;
    }

    public static int getCodePointFromName(java.lang.String)
    {
        java.lang.String r0, r4;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Integer r3;
        java.util.Map $r5, $r7;
        java.lang.Object $r6, $r8;
        int $i0;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r5 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r3 = (java.lang.Integer) $r6;
        r2[0] = 1;
        if r3 != null goto label1;

        r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        r2[1] = 1;
        if r4 == r0 goto label1;

        $r7 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        r3 = (java.lang.Integer) $r8;
        r2[2] = 1;

     label1:
        r2[3] = 1;
        if r3 == null goto label2;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();
        r2[4] = 1;
        goto label3;

     label2:
        $i0 = -1;
        r2[5] = 1;

     label3:
        r2[6] = 1;
        return $i0;
    }

    public java.lang.String getCharacterReferenceString()
    {
        net.htmlparser.jericho.CharacterEntityReference r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: net.htmlparser.jericho.CharacterEntityReference;
        $r1 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.CharacterEntityReference: java.lang.String name>;
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.String getCharacterReferenceString(java.lang.String)>($r3);
        r2[0] = 1;
        return $r4;
    }

    public static java.lang.String getCharacterReferenceString(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String r2, $r3;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        r1[0] = 1;
        if i0 <= 65535 goto label1;

        r1[1] = 1;
        return null;

     label1:
        r2 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.String getName(int)>(i0);
        r1[2] = 1;
        if r2 == null goto label2;

        $r3 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.String getCharacterReferenceString(java.lang.String)>(r2);
        r1[3] = 1;
        goto label3;

     label2:
        $r3 = null;
        r1[4] = 1;

     label3:
        r1[5] = 1;
        return $r3;
    }

    public static java.util.Map getNameToCodePointMap()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.Map $r2;

        $r0 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];
        $r2 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        r1[0] = 1;
        return $r2;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.CharacterEntityReference r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r5, $r13;
        java.io.IOException r4, $r11;
        java.lang.String $r7, $r14, $r16;
        int $i0;
        java.lang.RuntimeException $r12;

        r0 := @this: net.htmlparser.jericho.CharacterEntityReference;
        $r1 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r3 = $r5;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label1:
        $r7 = r0.<net.htmlparser.jericho.CharacterEntityReference: java.lang.String name>;
        staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.Appendable appendCharacterReferenceString(java.lang.Appendable,java.lang.String)>(r3, $r7);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");
        $i0 = r0.<net.htmlparser.jericho.CharacterEntityReference: int codePoint>;
        staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.Appendable appendUnicodeText(java.lang.Appendable,int)>(r3, $i0);
        r2[0] = 1;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;
        r4 = $r11;
        $r12 = new java.lang.RuntimeException;
        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);
        r2[1] = 1;
        throw $r12;

     label4:
        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r14 = specialinvoke r0.<net.htmlparser.jericho.CharacterReference: java.lang.String getDebugInfo()>();
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[2] = 1;
        return $r16;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static java.lang.String getCharacterReferenceString(java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r7;
        java.lang.StringBuilder $r4;
        java.lang.Appendable $r5;
        java.lang.RuntimeException $r8;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];

     label1:
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.Appendable appendCharacterReferenceString(java.lang.Appendable,java.lang.String)>($r4, r0);
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        r2[0] = 1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);
        r2[1] = 1;
        throw $r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static final java.lang.Appendable appendCharacterReferenceString(java.lang.Appendable, java.lang.String) throws java.io.IOException
    {
        java.lang.Appendable r0, $r4, $r5, $r6;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: java.lang.Appendable;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r4 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(38);
        $r5 = interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r1);
        $r6 = interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(char)>(59);
        r3[0] = 1;
        return $r6;
    }

    static net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source, int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2, i3, i4, i5, i7, $i8, $i9, i10;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0, $z1;
        char c6;
        java.lang.String r3;
        java.lang.CharSequence $r4, $r5;
        net.htmlparser.jericho.CharacterEntityReference $r6;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        i2 = i0 + 1;
        $i8 = <net.htmlparser.jericho.CharacterEntityReference: int MAX_NAME_LENGTH>;
        i3 = i2 + $i8;
        $i9 = r0.<net.htmlparser.jericho.Source: int end>;
        i4 = $i9 - 1;
        i5 = i2;
        z0 = 0;
        r2[0] = 1;

     label1:
        c6 = virtualinvoke r0.<net.htmlparser.jericho.Source: char charAt(int)>(i5);
        r2[1] = 1;
        if c6 != 59 goto label2;

        i7 = i5 + 1;
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.CharSequence subSequence(int,int)>(i2, i5);
        r3 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();
        r2[2] = 1;
        goto label8;

     label2:
        $z1 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean isValidReferenceNameChar(char)>(c6);
        r2[3] = 1;
        if $z1 != 0 goto label3;

        z0 = 1;
        r2[4] = 1;
        goto label4;

     label3:
        r2[5] = 1;
        if i5 != i4 goto label4;

        z0 = 1;
        i5 = i5 + 1;
        r2[6] = 1;

     label4:
        r2[7] = 1;
        if z0 == 0 goto label6;

        r2[8] = 1;
        if i1 != -1 goto label5;

        r2[9] = 1;
        return null;

     label5:
        i7 = i5;
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.CharSequence subSequence(int,int)>(i2, i5);
        r3 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();
        r2[10] = 1;
        goto label8;

     label6:
        i5 = i5 + 1;
        r2[11] = 1;
        if i5 <= i3 goto label7;

        r2[12] = 1;
        return null;

     label7:
        r2[13] = 1;
        goto label1;

     label8:
        i10 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: int getCodePointFromName(java.lang.String)>(r3);
        r2[14] = 1;
        if i10 == -1 goto label9;

        r2[15] = 1;
        if z0 == 0 goto label10;

        r2[16] = 1;
        if i10 <= i1 goto label10;

     label9:
        r2[17] = 1;
        return null;

     label10:
        $r6 = new net.htmlparser.jericho.CharacterEntityReference;
        specialinvoke $r6.<net.htmlparser.jericho.CharacterEntityReference: void <init>(net.htmlparser.jericho.Source,int,int,int)>(r0, i0, i7, i10);
        r2[18] = 1;
        return $r6;
    }

    private static final boolean isValidReferenceNameChar(char)
    {
        char c0;
        boolean[][] $r0;
        boolean[] r1;
        boolean $z0;

        c0 := @parameter0: char;
        $r0 = <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[12];
        r1[0] = 1;
        if c0 < 65 goto label2;

        r1[1] = 1;
        if c0 > 122 goto label2;

        r1[2] = 1;
        if c0 <= 90 goto label1;

        r1[3] = 1;
        if c0 < 97 goto label2;

     label1:
        $z0 = 1;
        r1[4] = 1;
        goto label3;

     label2:
        $z0 = 0;
        r1[5] = 1;

     label3:
        r1[6] = 1;
        return $z0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.String r4;
        java.util.HashMap $r5;
        java.util.Map $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r120, $r123, $r126, $r129, $r132, $r135, $r138, $r141, $r144, $r147, $r150, $r153, $r156, $r159, $r162, $r165, $r168, $r171, $r174, $r177, $r180, $r183, $r186, $r189, $r192, $r195, $r198, $r201, $r204, $r207, $r210, $r213, $r216, $r219, $r222, $r225, $r228, $r231, $r234, $r237, $r240, $r243, $r246, $r249, $r252, $r255, $r258, $r261, $r264, $r267, $r270, $r273, $r276, $r279, $r282, $r285, $r288, $r291, $r294, $r297, $r300, $r303, $r306, $r309, $r312, $r315, $r318, $r321, $r324, $r327, $r330, $r333, $r336, $r339, $r342, $r345, $r348, $r351, $r354, $r357, $r360, $r363, $r366, $r369, $r372, $r375, $r378, $r381, $r384, $r387, $r390, $r393, $r396, $r399, $r402, $r405, $r408, $r411, $r414, $r417, $r420, $r423, $r426, $r429, $r432, $r435, $r438, $r441, $r444, $r447, $r450, $r453, $r456, $r459, $r462, $r465, $r468, $r471, $r474, $r477, $r480, $r483, $r486, $r489, $r492, $r495, $r498, $r501, $r504, $r507, $r510, $r513, $r516, $r519, $r522, $r525, $r528, $r531, $r534, $r537, $r540, $r543, $r546, $r549, $r552, $r555, $r558, $r561, $r564, $r567, $r570, $r573, $r576, $r579, $r582, $r585, $r588, $r591, $r594, $r597, $r600, $r603, $r606, $r609, $r612, $r615, $r618, $r621, $r624, $r627, $r630, $r633, $r636, $r639, $r642, $r645, $r648, $r651, $r654, $r657, $r660, $r663, $r666, $r669, $r672, $r675, $r678, $r681, $r684, $r687, $r690, $r693, $r696, $r699, $r702, $r705, $r708, $r711, $r714, $r717, $r720, $r723, $r726, $r729, $r732, $r735, $r738, $r741, $r744, $r747, $r750, $r753, $r756, $r759, $r762, $r766, $r767;
        java.lang.Integer $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94, $r97, $r100, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r124, $r127, $r130, $r133, $r136, $r139, $r142, $r145, $r148, $r151, $r154, $r157, $r160, $r163, $r166, $r169, $r172, $r175, $r178, $r181, $r184, $r187, $r190, $r193, $r196, $r199, $r202, $r205, $r208, $r211, $r214, $r217, $r220, $r223, $r226, $r229, $r232, $r235, $r238, $r241, $r244, $r247, $r250, $r253, $r256, $r259, $r262, $r265, $r268, $r271, $r274, $r277, $r280, $r283, $r286, $r289, $r292, $r295, $r298, $r301, $r304, $r307, $r310, $r313, $r316, $r319, $r322, $r325, $r328, $r331, $r334, $r337, $r340, $r343, $r346, $r349, $r352, $r355, $r358, $r361, $r364, $r367, $r370, $r373, $r376, $r379, $r382, $r385, $r388, $r391, $r394, $r397, $r400, $r403, $r406, $r409, $r412, $r415, $r418, $r421, $r424, $r427, $r430, $r433, $r436, $r439, $r442, $r445, $r448, $r451, $r454, $r457, $r460, $r463, $r466, $r469, $r472, $r475, $r478, $r481, $r484, $r487, $r490, $r493, $r496, $r499, $r502, $r505, $r508, $r511, $r514, $r517, $r520, $r523, $r526, $r529, $r532, $r535, $r538, $r541, $r544, $r547, $r550, $r553, $r556, $r559, $r562, $r565, $r568, $r571, $r574, $r577, $r580, $r583, $r586, $r589, $r592, $r595, $r598, $r601, $r604, $r607, $r610, $r613, $r616, $r619, $r622, $r625, $r628, $r631, $r634, $r637, $r640, $r643, $r646, $r649, $r652, $r655, $r658, $r661, $r664, $r667, $r670, $r673, $r676, $r679, $r682, $r685, $r688, $r691, $r694, $r697, $r700, $r703, $r706, $r709, $r712, $r715, $r718, $r721, $r724, $r727, $r730, $r733, $r736, $r739, $r742, $r745, $r748, $r751, $r754, $r757, $r760, $r763, $r773;
        net.htmlparser.jericho.IntStringHashMap $r765, $r771;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1;
        java.util.Set $r768;
        boolean $z0;
        java.lang.Object $r769, $r770, $r772;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRi()>();
        r1 = $r0[13];
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>(int,float)>(512, 1.0F);
        <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP> = $r5;
        <net.htmlparser.jericho.CharacterEntityReference: int MAX_NAME_LENGTH> = 0;
        $r6 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r7 = new java.lang.Integer;
        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(160);
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nbsp", $r7);
        $r9 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r10 = new java.lang.Integer;
        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(161);
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("iexcl", $r10);
        $r12 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r13 = new java.lang.Integer;
        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(162);
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cent", $r13);
        $r15 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r16 = new java.lang.Integer;
        specialinvoke $r16.<java.lang.Integer: void <init>(int)>(163);
        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pound", $r16);
        $r18 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r19 = new java.lang.Integer;
        specialinvoke $r19.<java.lang.Integer: void <init>(int)>(164);
        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("curren", $r19);
        $r21 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r22 = new java.lang.Integer;
        specialinvoke $r22.<java.lang.Integer: void <init>(int)>(165);
        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yen", $r22);
        $r24 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r25 = new java.lang.Integer;
        specialinvoke $r25.<java.lang.Integer: void <init>(int)>(166);
        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("brvbar", $r25);
        $r27 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r28 = new java.lang.Integer;
        specialinvoke $r28.<java.lang.Integer: void <init>(int)>(167);
        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sect", $r28);
        $r30 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r31 = new java.lang.Integer;
        specialinvoke $r31.<java.lang.Integer: void <init>(int)>(168);
        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uml", $r31);
        $r33 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r34 = new java.lang.Integer;
        specialinvoke $r34.<java.lang.Integer: void <init>(int)>(169);
        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("copy", $r34);
        $r36 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r37 = new java.lang.Integer;
        specialinvoke $r37.<java.lang.Integer: void <init>(int)>(170);
        interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ordf", $r37);
        $r39 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r40 = new java.lang.Integer;
        specialinvoke $r40.<java.lang.Integer: void <init>(int)>(171);
        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("laquo", $r40);
        $r42 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r43 = new java.lang.Integer;
        specialinvoke $r43.<java.lang.Integer: void <init>(int)>(172);
        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("not", $r43);
        $r45 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r46 = new java.lang.Integer;
        specialinvoke $r46.<java.lang.Integer: void <init>(int)>(173);
        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("shy", $r46);
        $r48 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r49 = new java.lang.Integer;
        specialinvoke $r49.<java.lang.Integer: void <init>(int)>(174);
        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("reg", $r49);
        $r51 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r52 = new java.lang.Integer;
        specialinvoke $r52.<java.lang.Integer: void <init>(int)>(175);
        interfaceinvoke $r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("macr", $r52);
        $r54 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r55 = new java.lang.Integer;
        specialinvoke $r55.<java.lang.Integer: void <init>(int)>(176);
        interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deg", $r55);
        $r57 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r58 = new java.lang.Integer;
        specialinvoke $r58.<java.lang.Integer: void <init>(int)>(177);
        interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("plusmn", $r58);
        $r60 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r61 = new java.lang.Integer;
        specialinvoke $r61.<java.lang.Integer: void <init>(int)>(178);
        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sup2", $r61);
        $r63 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r64 = new java.lang.Integer;
        specialinvoke $r64.<java.lang.Integer: void <init>(int)>(179);
        interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sup3", $r64);
        $r66 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r67 = new java.lang.Integer;
        specialinvoke $r67.<java.lang.Integer: void <init>(int)>(180);
        interfaceinvoke $r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("acute", $r67);
        $r69 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r70 = new java.lang.Integer;
        specialinvoke $r70.<java.lang.Integer: void <init>(int)>(181);
        interfaceinvoke $r69.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("micro", $r70);
        $r72 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r73 = new java.lang.Integer;
        specialinvoke $r73.<java.lang.Integer: void <init>(int)>(182);
        interfaceinvoke $r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("para", $r73);
        $r75 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r76 = new java.lang.Integer;
        specialinvoke $r76.<java.lang.Integer: void <init>(int)>(183);
        interfaceinvoke $r75.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("middot", $r76);
        $r78 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r79 = new java.lang.Integer;
        specialinvoke $r79.<java.lang.Integer: void <init>(int)>(184);
        interfaceinvoke $r78.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cedil", $r79);
        $r81 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r82 = new java.lang.Integer;
        specialinvoke $r82.<java.lang.Integer: void <init>(int)>(185);
        interfaceinvoke $r81.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sup1", $r82);
        $r84 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r85 = new java.lang.Integer;
        specialinvoke $r85.<java.lang.Integer: void <init>(int)>(186);
        interfaceinvoke $r84.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ordm", $r85);
        $r87 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r88 = new java.lang.Integer;
        specialinvoke $r88.<java.lang.Integer: void <init>(int)>(187);
        interfaceinvoke $r87.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("raquo", $r88);
        $r90 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r91 = new java.lang.Integer;
        specialinvoke $r91.<java.lang.Integer: void <init>(int)>(188);
        interfaceinvoke $r90.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("frac14", $r91);
        $r93 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r94 = new java.lang.Integer;
        specialinvoke $r94.<java.lang.Integer: void <init>(int)>(189);
        interfaceinvoke $r93.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("frac12", $r94);
        $r96 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r97 = new java.lang.Integer;
        specialinvoke $r97.<java.lang.Integer: void <init>(int)>(190);
        interfaceinvoke $r96.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("frac34", $r97);
        $r99 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r100 = new java.lang.Integer;
        specialinvoke $r100.<java.lang.Integer: void <init>(int)>(191);
        interfaceinvoke $r99.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("iquest", $r100);
        $r102 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r103 = new java.lang.Integer;
        specialinvoke $r103.<java.lang.Integer: void <init>(int)>(192);
        interfaceinvoke $r102.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Agrave", $r103);
        $r105 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r106 = new java.lang.Integer;
        specialinvoke $r106.<java.lang.Integer: void <init>(int)>(193);
        interfaceinvoke $r105.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Aacute", $r106);
        $r108 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r109 = new java.lang.Integer;
        specialinvoke $r109.<java.lang.Integer: void <init>(int)>(194);
        interfaceinvoke $r108.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Acirc", $r109);
        $r111 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r112 = new java.lang.Integer;
        specialinvoke $r112.<java.lang.Integer: void <init>(int)>(195);
        interfaceinvoke $r111.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Atilde", $r112);
        $r114 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r115 = new java.lang.Integer;
        specialinvoke $r115.<java.lang.Integer: void <init>(int)>(196);
        interfaceinvoke $r114.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Auml", $r115);
        $r117 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r118 = new java.lang.Integer;
        specialinvoke $r118.<java.lang.Integer: void <init>(int)>(197);
        interfaceinvoke $r117.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Aring", $r118);
        $r120 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r121 = new java.lang.Integer;
        specialinvoke $r121.<java.lang.Integer: void <init>(int)>(198);
        interfaceinvoke $r120.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AElig", $r121);
        $r123 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r124 = new java.lang.Integer;
        specialinvoke $r124.<java.lang.Integer: void <init>(int)>(199);
        interfaceinvoke $r123.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Ccedil", $r124);
        $r126 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r127 = new java.lang.Integer;
        specialinvoke $r127.<java.lang.Integer: void <init>(int)>(200);
        interfaceinvoke $r126.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Egrave", $r127);
        $r129 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r130 = new java.lang.Integer;
        specialinvoke $r130.<java.lang.Integer: void <init>(int)>(201);
        interfaceinvoke $r129.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Eacute", $r130);
        $r132 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r133 = new java.lang.Integer;
        specialinvoke $r133.<java.lang.Integer: void <init>(int)>(202);
        interfaceinvoke $r132.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Ecirc", $r133);
        $r135 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r136 = new java.lang.Integer;
        specialinvoke $r136.<java.lang.Integer: void <init>(int)>(203);
        interfaceinvoke $r135.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Euml", $r136);
        $r138 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r139 = new java.lang.Integer;
        specialinvoke $r139.<java.lang.Integer: void <init>(int)>(204);
        interfaceinvoke $r138.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Igrave", $r139);
        $r141 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r142 = new java.lang.Integer;
        specialinvoke $r142.<java.lang.Integer: void <init>(int)>(205);
        interfaceinvoke $r141.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Iacute", $r142);
        $r144 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r145 = new java.lang.Integer;
        specialinvoke $r145.<java.lang.Integer: void <init>(int)>(206);
        interfaceinvoke $r144.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Icirc", $r145);
        $r147 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r148 = new java.lang.Integer;
        specialinvoke $r148.<java.lang.Integer: void <init>(int)>(207);
        interfaceinvoke $r147.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Iuml", $r148);
        $r150 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r151 = new java.lang.Integer;
        specialinvoke $r151.<java.lang.Integer: void <init>(int)>(208);
        interfaceinvoke $r150.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ETH", $r151);
        $r153 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r154 = new java.lang.Integer;
        specialinvoke $r154.<java.lang.Integer: void <init>(int)>(209);
        interfaceinvoke $r153.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Ntilde", $r154);
        $r156 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r157 = new java.lang.Integer;
        specialinvoke $r157.<java.lang.Integer: void <init>(int)>(210);
        interfaceinvoke $r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Ograve", $r157);
        $r159 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r160 = new java.lang.Integer;
        specialinvoke $r160.<java.lang.Integer: void <init>(int)>(211);
        interfaceinvoke $r159.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Oacute", $r160);
        $r162 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r163 = new java.lang.Integer;
        specialinvoke $r163.<java.lang.Integer: void <init>(int)>(212);
        interfaceinvoke $r162.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Ocirc", $r163);
        $r165 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r166 = new java.lang.Integer;
        specialinvoke $r166.<java.lang.Integer: void <init>(int)>(213);
        interfaceinvoke $r165.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Otilde", $r166);
        $r168 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r169 = new java.lang.Integer;
        specialinvoke $r169.<java.lang.Integer: void <init>(int)>(214);
        interfaceinvoke $r168.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Ouml", $r169);
        $r171 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r172 = new java.lang.Integer;
        specialinvoke $r172.<java.lang.Integer: void <init>(int)>(215);
        interfaceinvoke $r171.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("times", $r172);
        $r174 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r175 = new java.lang.Integer;
        specialinvoke $r175.<java.lang.Integer: void <init>(int)>(216);
        interfaceinvoke $r174.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Oslash", $r175);
        $r177 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r178 = new java.lang.Integer;
        specialinvoke $r178.<java.lang.Integer: void <init>(int)>(217);
        interfaceinvoke $r177.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Ugrave", $r178);
        $r180 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r181 = new java.lang.Integer;
        specialinvoke $r181.<java.lang.Integer: void <init>(int)>(218);
        interfaceinvoke $r180.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Uacute", $r181);
        $r183 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r184 = new java.lang.Integer;
        specialinvoke $r184.<java.lang.Integer: void <init>(int)>(219);
        interfaceinvoke $r183.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Ucirc", $r184);
        $r186 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r187 = new java.lang.Integer;
        specialinvoke $r187.<java.lang.Integer: void <init>(int)>(220);
        interfaceinvoke $r186.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Uuml", $r187);
        $r189 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r190 = new java.lang.Integer;
        specialinvoke $r190.<java.lang.Integer: void <init>(int)>(221);
        interfaceinvoke $r189.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Yacute", $r190);
        $r192 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r193 = new java.lang.Integer;
        specialinvoke $r193.<java.lang.Integer: void <init>(int)>(222);
        interfaceinvoke $r192.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THORN", $r193);
        $r195 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r196 = new java.lang.Integer;
        specialinvoke $r196.<java.lang.Integer: void <init>(int)>(223);
        interfaceinvoke $r195.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("szlig", $r196);
        $r198 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r199 = new java.lang.Integer;
        specialinvoke $r199.<java.lang.Integer: void <init>(int)>(224);
        interfaceinvoke $r198.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("agrave", $r199);
        $r201 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r202 = new java.lang.Integer;
        specialinvoke $r202.<java.lang.Integer: void <init>(int)>(225);
        interfaceinvoke $r201.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aacute", $r202);
        $r204 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r205 = new java.lang.Integer;
        specialinvoke $r205.<java.lang.Integer: void <init>(int)>(226);
        interfaceinvoke $r204.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("acirc", $r205);
        $r207 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r208 = new java.lang.Integer;
        specialinvoke $r208.<java.lang.Integer: void <init>(int)>(227);
        interfaceinvoke $r207.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("atilde", $r208);
        $r210 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r211 = new java.lang.Integer;
        specialinvoke $r211.<java.lang.Integer: void <init>(int)>(228);
        interfaceinvoke $r210.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("auml", $r211);
        $r213 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r214 = new java.lang.Integer;
        specialinvoke $r214.<java.lang.Integer: void <init>(int)>(229);
        interfaceinvoke $r213.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aring", $r214);
        $r216 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r217 = new java.lang.Integer;
        specialinvoke $r217.<java.lang.Integer: void <init>(int)>(230);
        interfaceinvoke $r216.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("aelig", $r217);
        $r219 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r220 = new java.lang.Integer;
        specialinvoke $r220.<java.lang.Integer: void <init>(int)>(231);
        interfaceinvoke $r219.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ccedil", $r220);
        $r222 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r223 = new java.lang.Integer;
        specialinvoke $r223.<java.lang.Integer: void <init>(int)>(232);
        interfaceinvoke $r222.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("egrave", $r223);
        $r225 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r226 = new java.lang.Integer;
        specialinvoke $r226.<java.lang.Integer: void <init>(int)>(233);
        interfaceinvoke $r225.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("eacute", $r226);
        $r228 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r229 = new java.lang.Integer;
        specialinvoke $r229.<java.lang.Integer: void <init>(int)>(234);
        interfaceinvoke $r228.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ecirc", $r229);
        $r231 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r232 = new java.lang.Integer;
        specialinvoke $r232.<java.lang.Integer: void <init>(int)>(235);
        interfaceinvoke $r231.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("euml", $r232);
        $r234 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r235 = new java.lang.Integer;
        specialinvoke $r235.<java.lang.Integer: void <init>(int)>(236);
        interfaceinvoke $r234.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("igrave", $r235);
        $r237 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r238 = new java.lang.Integer;
        specialinvoke $r238.<java.lang.Integer: void <init>(int)>(237);
        interfaceinvoke $r237.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("iacute", $r238);
        $r240 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r241 = new java.lang.Integer;
        specialinvoke $r241.<java.lang.Integer: void <init>(int)>(238);
        interfaceinvoke $r240.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("icirc", $r241);
        $r243 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r244 = new java.lang.Integer;
        specialinvoke $r244.<java.lang.Integer: void <init>(int)>(239);
        interfaceinvoke $r243.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("iuml", $r244);
        $r246 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r247 = new java.lang.Integer;
        specialinvoke $r247.<java.lang.Integer: void <init>(int)>(240);
        interfaceinvoke $r246.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("eth", $r247);
        $r249 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r250 = new java.lang.Integer;
        specialinvoke $r250.<java.lang.Integer: void <init>(int)>(241);
        interfaceinvoke $r249.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ntilde", $r250);
        $r252 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r253 = new java.lang.Integer;
        specialinvoke $r253.<java.lang.Integer: void <init>(int)>(242);
        interfaceinvoke $r252.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ograve", $r253);
        $r255 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r256 = new java.lang.Integer;
        specialinvoke $r256.<java.lang.Integer: void <init>(int)>(243);
        interfaceinvoke $r255.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oacute", $r256);
        $r258 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r259 = new java.lang.Integer;
        specialinvoke $r259.<java.lang.Integer: void <init>(int)>(244);
        interfaceinvoke $r258.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ocirc", $r259);
        $r261 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r262 = new java.lang.Integer;
        specialinvoke $r262.<java.lang.Integer: void <init>(int)>(245);
        interfaceinvoke $r261.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("otilde", $r262);
        $r264 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r265 = new java.lang.Integer;
        specialinvoke $r265.<java.lang.Integer: void <init>(int)>(246);
        interfaceinvoke $r264.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ouml", $r265);
        $r267 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r268 = new java.lang.Integer;
        specialinvoke $r268.<java.lang.Integer: void <init>(int)>(247);
        interfaceinvoke $r267.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("divide", $r268);
        $r270 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r271 = new java.lang.Integer;
        specialinvoke $r271.<java.lang.Integer: void <init>(int)>(248);
        interfaceinvoke $r270.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oslash", $r271);
        $r273 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r274 = new java.lang.Integer;
        specialinvoke $r274.<java.lang.Integer: void <init>(int)>(249);
        interfaceinvoke $r273.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ugrave", $r274);
        $r276 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r277 = new java.lang.Integer;
        specialinvoke $r277.<java.lang.Integer: void <init>(int)>(250);
        interfaceinvoke $r276.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uacute", $r277);
        $r279 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r280 = new java.lang.Integer;
        specialinvoke $r280.<java.lang.Integer: void <init>(int)>(251);
        interfaceinvoke $r279.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ucirc", $r280);
        $r282 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r283 = new java.lang.Integer;
        specialinvoke $r283.<java.lang.Integer: void <init>(int)>(252);
        interfaceinvoke $r282.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uuml", $r283);
        $r285 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r286 = new java.lang.Integer;
        specialinvoke $r286.<java.lang.Integer: void <init>(int)>(253);
        interfaceinvoke $r285.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yacute", $r286);
        $r288 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r289 = new java.lang.Integer;
        specialinvoke $r289.<java.lang.Integer: void <init>(int)>(254);
        interfaceinvoke $r288.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("thorn", $r289);
        $r291 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r292 = new java.lang.Integer;
        specialinvoke $r292.<java.lang.Integer: void <init>(int)>(255);
        interfaceinvoke $r291.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yuml", $r292);
        $r294 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r295 = new java.lang.Integer;
        specialinvoke $r295.<java.lang.Integer: void <init>(int)>(402);
        interfaceinvoke $r294.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fnof", $r295);
        $r297 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r298 = new java.lang.Integer;
        specialinvoke $r298.<java.lang.Integer: void <init>(int)>(913);
        interfaceinvoke $r297.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Alpha", $r298);
        $r300 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r301 = new java.lang.Integer;
        specialinvoke $r301.<java.lang.Integer: void <init>(int)>(914);
        interfaceinvoke $r300.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Beta", $r301);
        $r303 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r304 = new java.lang.Integer;
        specialinvoke $r304.<java.lang.Integer: void <init>(int)>(915);
        interfaceinvoke $r303.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Gamma", $r304);
        $r306 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r307 = new java.lang.Integer;
        specialinvoke $r307.<java.lang.Integer: void <init>(int)>(916);
        interfaceinvoke $r306.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Delta", $r307);
        $r309 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r310 = new java.lang.Integer;
        specialinvoke $r310.<java.lang.Integer: void <init>(int)>(917);
        interfaceinvoke $r309.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Epsilon", $r310);
        $r312 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r313 = new java.lang.Integer;
        specialinvoke $r313.<java.lang.Integer: void <init>(int)>(918);
        interfaceinvoke $r312.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Zeta", $r313);
        $r315 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r316 = new java.lang.Integer;
        specialinvoke $r316.<java.lang.Integer: void <init>(int)>(919);
        interfaceinvoke $r315.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Eta", $r316);
        $r318 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r319 = new java.lang.Integer;
        specialinvoke $r319.<java.lang.Integer: void <init>(int)>(920);
        interfaceinvoke $r318.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Theta", $r319);
        $r321 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r322 = new java.lang.Integer;
        specialinvoke $r322.<java.lang.Integer: void <init>(int)>(921);
        interfaceinvoke $r321.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Iota", $r322);
        $r324 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r325 = new java.lang.Integer;
        specialinvoke $r325.<java.lang.Integer: void <init>(int)>(922);
        interfaceinvoke $r324.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Kappa", $r325);
        $r327 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r328 = new java.lang.Integer;
        specialinvoke $r328.<java.lang.Integer: void <init>(int)>(923);
        interfaceinvoke $r327.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Lambda", $r328);
        $r330 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r331 = new java.lang.Integer;
        specialinvoke $r331.<java.lang.Integer: void <init>(int)>(924);
        interfaceinvoke $r330.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Mu", $r331);
        $r333 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r334 = new java.lang.Integer;
        specialinvoke $r334.<java.lang.Integer: void <init>(int)>(925);
        interfaceinvoke $r333.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Nu", $r334);
        $r336 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r337 = new java.lang.Integer;
        specialinvoke $r337.<java.lang.Integer: void <init>(int)>(926);
        interfaceinvoke $r336.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Xi", $r337);
        $r339 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r340 = new java.lang.Integer;
        specialinvoke $r340.<java.lang.Integer: void <init>(int)>(927);
        interfaceinvoke $r339.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Omicron", $r340);
        $r342 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r343 = new java.lang.Integer;
        specialinvoke $r343.<java.lang.Integer: void <init>(int)>(928);
        interfaceinvoke $r342.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Pi", $r343);
        $r345 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r346 = new java.lang.Integer;
        specialinvoke $r346.<java.lang.Integer: void <init>(int)>(929);
        interfaceinvoke $r345.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Rho", $r346);
        $r348 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r349 = new java.lang.Integer;
        specialinvoke $r349.<java.lang.Integer: void <init>(int)>(931);
        interfaceinvoke $r348.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Sigma", $r349);
        $r351 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r352 = new java.lang.Integer;
        specialinvoke $r352.<java.lang.Integer: void <init>(int)>(932);
        interfaceinvoke $r351.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Tau", $r352);
        $r354 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r355 = new java.lang.Integer;
        specialinvoke $r355.<java.lang.Integer: void <init>(int)>(933);
        interfaceinvoke $r354.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Upsilon", $r355);
        $r357 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r358 = new java.lang.Integer;
        specialinvoke $r358.<java.lang.Integer: void <init>(int)>(934);
        interfaceinvoke $r357.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Phi", $r358);
        $r360 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r361 = new java.lang.Integer;
        specialinvoke $r361.<java.lang.Integer: void <init>(int)>(935);
        interfaceinvoke $r360.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Chi", $r361);
        $r363 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r364 = new java.lang.Integer;
        specialinvoke $r364.<java.lang.Integer: void <init>(int)>(936);
        interfaceinvoke $r363.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Psi", $r364);
        $r366 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r367 = new java.lang.Integer;
        specialinvoke $r367.<java.lang.Integer: void <init>(int)>(937);
        interfaceinvoke $r366.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Omega", $r367);
        $r369 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r370 = new java.lang.Integer;
        specialinvoke $r370.<java.lang.Integer: void <init>(int)>(945);
        interfaceinvoke $r369.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("alpha", $r370);
        $r372 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r373 = new java.lang.Integer;
        specialinvoke $r373.<java.lang.Integer: void <init>(int)>(946);
        interfaceinvoke $r372.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("beta", $r373);
        $r375 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r376 = new java.lang.Integer;
        specialinvoke $r376.<java.lang.Integer: void <init>(int)>(947);
        interfaceinvoke $r375.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gamma", $r376);
        $r378 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r379 = new java.lang.Integer;
        specialinvoke $r379.<java.lang.Integer: void <init>(int)>(948);
        interfaceinvoke $r378.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("delta", $r379);
        $r381 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r382 = new java.lang.Integer;
        specialinvoke $r382.<java.lang.Integer: void <init>(int)>(949);
        interfaceinvoke $r381.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("epsilon", $r382);
        $r384 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r385 = new java.lang.Integer;
        specialinvoke $r385.<java.lang.Integer: void <init>(int)>(950);
        interfaceinvoke $r384.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zeta", $r385);
        $r387 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r388 = new java.lang.Integer;
        specialinvoke $r388.<java.lang.Integer: void <init>(int)>(951);
        interfaceinvoke $r387.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("eta", $r388);
        $r390 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r391 = new java.lang.Integer;
        specialinvoke $r391.<java.lang.Integer: void <init>(int)>(952);
        interfaceinvoke $r390.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("theta", $r391);
        $r393 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r394 = new java.lang.Integer;
        specialinvoke $r394.<java.lang.Integer: void <init>(int)>(953);
        interfaceinvoke $r393.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("iota", $r394);
        $r396 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r397 = new java.lang.Integer;
        specialinvoke $r397.<java.lang.Integer: void <init>(int)>(954);
        interfaceinvoke $r396.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kappa", $r397);
        $r399 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r400 = new java.lang.Integer;
        specialinvoke $r400.<java.lang.Integer: void <init>(int)>(955);
        interfaceinvoke $r399.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lambda", $r400);
        $r402 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r403 = new java.lang.Integer;
        specialinvoke $r403.<java.lang.Integer: void <init>(int)>(956);
        interfaceinvoke $r402.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mu", $r403);
        $r405 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r406 = new java.lang.Integer;
        specialinvoke $r406.<java.lang.Integer: void <init>(int)>(957);
        interfaceinvoke $r405.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nu", $r406);
        $r408 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r409 = new java.lang.Integer;
        specialinvoke $r409.<java.lang.Integer: void <init>(int)>(958);
        interfaceinvoke $r408.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("xi", $r409);
        $r411 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r412 = new java.lang.Integer;
        specialinvoke $r412.<java.lang.Integer: void <init>(int)>(959);
        interfaceinvoke $r411.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("omicron", $r412);
        $r414 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r415 = new java.lang.Integer;
        specialinvoke $r415.<java.lang.Integer: void <init>(int)>(960);
        interfaceinvoke $r414.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pi", $r415);
        $r417 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r418 = new java.lang.Integer;
        specialinvoke $r418.<java.lang.Integer: void <init>(int)>(961);
        interfaceinvoke $r417.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rho", $r418);
        $r420 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r421 = new java.lang.Integer;
        specialinvoke $r421.<java.lang.Integer: void <init>(int)>(962);
        interfaceinvoke $r420.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sigmaf", $r421);
        $r423 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r424 = new java.lang.Integer;
        specialinvoke $r424.<java.lang.Integer: void <init>(int)>(963);
        interfaceinvoke $r423.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sigma", $r424);
        $r426 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r427 = new java.lang.Integer;
        specialinvoke $r427.<java.lang.Integer: void <init>(int)>(964);
        interfaceinvoke $r426.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tau", $r427);
        $r429 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r430 = new java.lang.Integer;
        specialinvoke $r430.<java.lang.Integer: void <init>(int)>(965);
        interfaceinvoke $r429.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("upsilon", $r430);
        $r432 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r433 = new java.lang.Integer;
        specialinvoke $r433.<java.lang.Integer: void <init>(int)>(966);
        interfaceinvoke $r432.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("phi", $r433);
        $r435 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r436 = new java.lang.Integer;
        specialinvoke $r436.<java.lang.Integer: void <init>(int)>(967);
        interfaceinvoke $r435.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("chi", $r436);
        $r438 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r439 = new java.lang.Integer;
        specialinvoke $r439.<java.lang.Integer: void <init>(int)>(968);
        interfaceinvoke $r438.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("psi", $r439);
        $r441 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r442 = new java.lang.Integer;
        specialinvoke $r442.<java.lang.Integer: void <init>(int)>(969);
        interfaceinvoke $r441.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("omega", $r442);
        $r444 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r445 = new java.lang.Integer;
        specialinvoke $r445.<java.lang.Integer: void <init>(int)>(977);
        interfaceinvoke $r444.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("thetasym", $r445);
        $r447 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r448 = new java.lang.Integer;
        specialinvoke $r448.<java.lang.Integer: void <init>(int)>(978);
        interfaceinvoke $r447.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("upsih", $r448);
        $r450 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r451 = new java.lang.Integer;
        specialinvoke $r451.<java.lang.Integer: void <init>(int)>(982);
        interfaceinvoke $r450.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("piv", $r451);
        $r453 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r454 = new java.lang.Integer;
        specialinvoke $r454.<java.lang.Integer: void <init>(int)>(8226);
        interfaceinvoke $r453.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bull", $r454);
        $r456 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r457 = new java.lang.Integer;
        specialinvoke $r457.<java.lang.Integer: void <init>(int)>(8230);
        interfaceinvoke $r456.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hellip", $r457);
        $r459 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r460 = new java.lang.Integer;
        specialinvoke $r460.<java.lang.Integer: void <init>(int)>(8242);
        interfaceinvoke $r459.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prime", $r460);
        $r462 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r463 = new java.lang.Integer;
        specialinvoke $r463.<java.lang.Integer: void <init>(int)>(8243);
        interfaceinvoke $r462.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Prime", $r463);
        $r465 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r466 = new java.lang.Integer;
        specialinvoke $r466.<java.lang.Integer: void <init>(int)>(8254);
        interfaceinvoke $r465.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oline", $r466);
        $r468 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r469 = new java.lang.Integer;
        specialinvoke $r469.<java.lang.Integer: void <init>(int)>(8260);
        interfaceinvoke $r468.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("frasl", $r469);
        $r471 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r472 = new java.lang.Integer;
        specialinvoke $r472.<java.lang.Integer: void <init>(int)>(8472);
        interfaceinvoke $r471.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("weierp", $r472);
        $r474 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r475 = new java.lang.Integer;
        specialinvoke $r475.<java.lang.Integer: void <init>(int)>(8465);
        interfaceinvoke $r474.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("image", $r475);
        $r477 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r478 = new java.lang.Integer;
        specialinvoke $r478.<java.lang.Integer: void <init>(int)>(8476);
        interfaceinvoke $r477.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("real", $r478);
        $r480 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r481 = new java.lang.Integer;
        specialinvoke $r481.<java.lang.Integer: void <init>(int)>(8482);
        interfaceinvoke $r480.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("trade", $r481);
        $r483 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r484 = new java.lang.Integer;
        specialinvoke $r484.<java.lang.Integer: void <init>(int)>(8501);
        interfaceinvoke $r483.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("alefsym", $r484);
        $r486 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r487 = new java.lang.Integer;
        specialinvoke $r487.<java.lang.Integer: void <init>(int)>(8592);
        interfaceinvoke $r486.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("larr", $r487);
        $r489 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r490 = new java.lang.Integer;
        specialinvoke $r490.<java.lang.Integer: void <init>(int)>(8593);
        interfaceinvoke $r489.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uarr", $r490);
        $r492 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r493 = new java.lang.Integer;
        specialinvoke $r493.<java.lang.Integer: void <init>(int)>(8594);
        interfaceinvoke $r492.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rarr", $r493);
        $r495 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r496 = new java.lang.Integer;
        specialinvoke $r496.<java.lang.Integer: void <init>(int)>(8595);
        interfaceinvoke $r495.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("darr", $r496);
        $r498 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r499 = new java.lang.Integer;
        specialinvoke $r499.<java.lang.Integer: void <init>(int)>(8596);
        interfaceinvoke $r498.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("harr", $r499);
        $r501 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r502 = new java.lang.Integer;
        specialinvoke $r502.<java.lang.Integer: void <init>(int)>(8629);
        interfaceinvoke $r501.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("crarr", $r502);
        $r504 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r505 = new java.lang.Integer;
        specialinvoke $r505.<java.lang.Integer: void <init>(int)>(8656);
        interfaceinvoke $r504.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lArr", $r505);
        $r507 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r508 = new java.lang.Integer;
        specialinvoke $r508.<java.lang.Integer: void <init>(int)>(8657);
        interfaceinvoke $r507.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uArr", $r508);
        $r510 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r511 = new java.lang.Integer;
        specialinvoke $r511.<java.lang.Integer: void <init>(int)>(8658);
        interfaceinvoke $r510.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rArr", $r511);
        $r513 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r514 = new java.lang.Integer;
        specialinvoke $r514.<java.lang.Integer: void <init>(int)>(8659);
        interfaceinvoke $r513.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dArr", $r514);
        $r516 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r517 = new java.lang.Integer;
        specialinvoke $r517.<java.lang.Integer: void <init>(int)>(8660);
        interfaceinvoke $r516.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hArr", $r517);
        $r519 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r520 = new java.lang.Integer;
        specialinvoke $r520.<java.lang.Integer: void <init>(int)>(8704);
        interfaceinvoke $r519.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("forall", $r520);
        $r522 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r523 = new java.lang.Integer;
        specialinvoke $r523.<java.lang.Integer: void <init>(int)>(8706);
        interfaceinvoke $r522.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("part", $r523);
        $r525 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r526 = new java.lang.Integer;
        specialinvoke $r526.<java.lang.Integer: void <init>(int)>(8707);
        interfaceinvoke $r525.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("exist", $r526);
        $r528 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r529 = new java.lang.Integer;
        specialinvoke $r529.<java.lang.Integer: void <init>(int)>(8709);
        interfaceinvoke $r528.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("empty", $r529);
        $r531 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r532 = new java.lang.Integer;
        specialinvoke $r532.<java.lang.Integer: void <init>(int)>(8711);
        interfaceinvoke $r531.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nabla", $r532);
        $r534 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r535 = new java.lang.Integer;
        specialinvoke $r535.<java.lang.Integer: void <init>(int)>(8712);
        interfaceinvoke $r534.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("isin", $r535);
        $r537 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r538 = new java.lang.Integer;
        specialinvoke $r538.<java.lang.Integer: void <init>(int)>(8713);
        interfaceinvoke $r537.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("notin", $r538);
        $r540 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r541 = new java.lang.Integer;
        specialinvoke $r541.<java.lang.Integer: void <init>(int)>(8715);
        interfaceinvoke $r540.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ni", $r541);
        $r543 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r544 = new java.lang.Integer;
        specialinvoke $r544.<java.lang.Integer: void <init>(int)>(8719);
        interfaceinvoke $r543.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prod", $r544);
        $r546 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r547 = new java.lang.Integer;
        specialinvoke $r547.<java.lang.Integer: void <init>(int)>(8721);
        interfaceinvoke $r546.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sum", $r547);
        $r549 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r550 = new java.lang.Integer;
        specialinvoke $r550.<java.lang.Integer: void <init>(int)>(8722);
        interfaceinvoke $r549.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("minus", $r550);
        $r552 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r553 = new java.lang.Integer;
        specialinvoke $r553.<java.lang.Integer: void <init>(int)>(8727);
        interfaceinvoke $r552.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lowast", $r553);
        $r555 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r556 = new java.lang.Integer;
        specialinvoke $r556.<java.lang.Integer: void <init>(int)>(8730);
        interfaceinvoke $r555.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("radic", $r556);
        $r558 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r559 = new java.lang.Integer;
        specialinvoke $r559.<java.lang.Integer: void <init>(int)>(8733);
        interfaceinvoke $r558.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prop", $r559);
        $r561 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r562 = new java.lang.Integer;
        specialinvoke $r562.<java.lang.Integer: void <init>(int)>(8734);
        interfaceinvoke $r561.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("infin", $r562);
        $r564 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r565 = new java.lang.Integer;
        specialinvoke $r565.<java.lang.Integer: void <init>(int)>(8736);
        interfaceinvoke $r564.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ang", $r565);
        $r567 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r568 = new java.lang.Integer;
        specialinvoke $r568.<java.lang.Integer: void <init>(int)>(8743);
        interfaceinvoke $r567.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("and", $r568);
        $r570 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r571 = new java.lang.Integer;
        specialinvoke $r571.<java.lang.Integer: void <init>(int)>(8744);
        interfaceinvoke $r570.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("or", $r571);
        $r573 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r574 = new java.lang.Integer;
        specialinvoke $r574.<java.lang.Integer: void <init>(int)>(8745);
        interfaceinvoke $r573.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cap", $r574);
        $r576 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r577 = new java.lang.Integer;
        specialinvoke $r577.<java.lang.Integer: void <init>(int)>(8746);
        interfaceinvoke $r576.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cup", $r577);
        $r579 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r580 = new java.lang.Integer;
        specialinvoke $r580.<java.lang.Integer: void <init>(int)>(8747);
        interfaceinvoke $r579.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("int", $r580);
        $r582 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r583 = new java.lang.Integer;
        specialinvoke $r583.<java.lang.Integer: void <init>(int)>(8756);
        interfaceinvoke $r582.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("there4", $r583);
        $r585 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r586 = new java.lang.Integer;
        specialinvoke $r586.<java.lang.Integer: void <init>(int)>(8764);
        interfaceinvoke $r585.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sim", $r586);
        $r588 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r589 = new java.lang.Integer;
        specialinvoke $r589.<java.lang.Integer: void <init>(int)>(8773);
        interfaceinvoke $r588.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cong", $r589);
        $r591 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r592 = new java.lang.Integer;
        specialinvoke $r592.<java.lang.Integer: void <init>(int)>(8776);
        interfaceinvoke $r591.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("asymp", $r592);
        $r594 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r595 = new java.lang.Integer;
        specialinvoke $r595.<java.lang.Integer: void <init>(int)>(8800);
        interfaceinvoke $r594.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ne", $r595);
        $r597 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r598 = new java.lang.Integer;
        specialinvoke $r598.<java.lang.Integer: void <init>(int)>(8801);
        interfaceinvoke $r597.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("equiv", $r598);
        $r600 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r601 = new java.lang.Integer;
        specialinvoke $r601.<java.lang.Integer: void <init>(int)>(8804);
        interfaceinvoke $r600.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("le", $r601);
        $r603 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r604 = new java.lang.Integer;
        specialinvoke $r604.<java.lang.Integer: void <init>(int)>(8805);
        interfaceinvoke $r603.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ge", $r604);
        $r606 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r607 = new java.lang.Integer;
        specialinvoke $r607.<java.lang.Integer: void <init>(int)>(8834);
        interfaceinvoke $r606.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sub", $r607);
        $r609 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r610 = new java.lang.Integer;
        specialinvoke $r610.<java.lang.Integer: void <init>(int)>(8835);
        interfaceinvoke $r609.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sup", $r610);
        $r612 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r613 = new java.lang.Integer;
        specialinvoke $r613.<java.lang.Integer: void <init>(int)>(8836);
        interfaceinvoke $r612.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nsub", $r613);
        $r615 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r616 = new java.lang.Integer;
        specialinvoke $r616.<java.lang.Integer: void <init>(int)>(8838);
        interfaceinvoke $r615.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sube", $r616);
        $r618 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r619 = new java.lang.Integer;
        specialinvoke $r619.<java.lang.Integer: void <init>(int)>(8839);
        interfaceinvoke $r618.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("supe", $r619);
        $r621 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r622 = new java.lang.Integer;
        specialinvoke $r622.<java.lang.Integer: void <init>(int)>(8853);
        interfaceinvoke $r621.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oplus", $r622);
        $r624 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r625 = new java.lang.Integer;
        specialinvoke $r625.<java.lang.Integer: void <init>(int)>(8855);
        interfaceinvoke $r624.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("otimes", $r625);
        $r627 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r628 = new java.lang.Integer;
        specialinvoke $r628.<java.lang.Integer: void <init>(int)>(8869);
        interfaceinvoke $r627.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("perp", $r628);
        $r630 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r631 = new java.lang.Integer;
        specialinvoke $r631.<java.lang.Integer: void <init>(int)>(8901);
        interfaceinvoke $r630.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sdot", $r631);
        $r633 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r634 = new java.lang.Integer;
        specialinvoke $r634.<java.lang.Integer: void <init>(int)>(8968);
        interfaceinvoke $r633.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lceil", $r634);
        $r636 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r637 = new java.lang.Integer;
        specialinvoke $r637.<java.lang.Integer: void <init>(int)>(8969);
        interfaceinvoke $r636.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rceil", $r637);
        $r639 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r640 = new java.lang.Integer;
        specialinvoke $r640.<java.lang.Integer: void <init>(int)>(8970);
        interfaceinvoke $r639.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lfloor", $r640);
        $r642 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r643 = new java.lang.Integer;
        specialinvoke $r643.<java.lang.Integer: void <init>(int)>(8971);
        interfaceinvoke $r642.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rfloor", $r643);
        $r645 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r646 = new java.lang.Integer;
        specialinvoke $r646.<java.lang.Integer: void <init>(int)>(9001);
        interfaceinvoke $r645.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lang", $r646);
        $r648 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r649 = new java.lang.Integer;
        specialinvoke $r649.<java.lang.Integer: void <init>(int)>(9002);
        interfaceinvoke $r648.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rang", $r649);
        $r651 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r652 = new java.lang.Integer;
        specialinvoke $r652.<java.lang.Integer: void <init>(int)>(9674);
        interfaceinvoke $r651.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("loz", $r652);
        $r654 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r655 = new java.lang.Integer;
        specialinvoke $r655.<java.lang.Integer: void <init>(int)>(9824);
        interfaceinvoke $r654.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("spades", $r655);
        $r657 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r658 = new java.lang.Integer;
        specialinvoke $r658.<java.lang.Integer: void <init>(int)>(9827);
        interfaceinvoke $r657.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clubs", $r658);
        $r660 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r661 = new java.lang.Integer;
        specialinvoke $r661.<java.lang.Integer: void <init>(int)>(9829);
        interfaceinvoke $r660.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hearts", $r661);
        $r663 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r664 = new java.lang.Integer;
        specialinvoke $r664.<java.lang.Integer: void <init>(int)>(9830);
        interfaceinvoke $r663.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("diams", $r664);
        $r666 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r667 = new java.lang.Integer;
        specialinvoke $r667.<java.lang.Integer: void <init>(int)>(34);
        interfaceinvoke $r666.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("quot", $r667);
        $r669 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r670 = new java.lang.Integer;
        specialinvoke $r670.<java.lang.Integer: void <init>(int)>(38);
        interfaceinvoke $r669.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("amp", $r670);
        $r672 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r673 = new java.lang.Integer;
        specialinvoke $r673.<java.lang.Integer: void <init>(int)>(60);
        interfaceinvoke $r672.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lt", $r673);
        $r675 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r676 = new java.lang.Integer;
        specialinvoke $r676.<java.lang.Integer: void <init>(int)>(62);
        interfaceinvoke $r675.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gt", $r676);
        $r678 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r679 = new java.lang.Integer;
        specialinvoke $r679.<java.lang.Integer: void <init>(int)>(338);
        interfaceinvoke $r678.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("OElig", $r679);
        $r681 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r682 = new java.lang.Integer;
        specialinvoke $r682.<java.lang.Integer: void <init>(int)>(339);
        interfaceinvoke $r681.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oelig", $r682);
        $r684 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r685 = new java.lang.Integer;
        specialinvoke $r685.<java.lang.Integer: void <init>(int)>(352);
        interfaceinvoke $r684.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Scaron", $r685);
        $r687 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r688 = new java.lang.Integer;
        specialinvoke $r688.<java.lang.Integer: void <init>(int)>(353);
        interfaceinvoke $r687.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("scaron", $r688);
        $r690 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r691 = new java.lang.Integer;
        specialinvoke $r691.<java.lang.Integer: void <init>(int)>(376);
        interfaceinvoke $r690.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Yuml", $r691);
        $r693 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r694 = new java.lang.Integer;
        specialinvoke $r694.<java.lang.Integer: void <init>(int)>(710);
        interfaceinvoke $r693.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("circ", $r694);
        $r696 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r697 = new java.lang.Integer;
        specialinvoke $r697.<java.lang.Integer: void <init>(int)>(732);
        interfaceinvoke $r696.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tilde", $r697);
        $r699 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r700 = new java.lang.Integer;
        specialinvoke $r700.<java.lang.Integer: void <init>(int)>(8194);
        interfaceinvoke $r699.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ensp", $r700);
        $r702 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r703 = new java.lang.Integer;
        specialinvoke $r703.<java.lang.Integer: void <init>(int)>(8195);
        interfaceinvoke $r702.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("emsp", $r703);
        $r705 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r706 = new java.lang.Integer;
        specialinvoke $r706.<java.lang.Integer: void <init>(int)>(8201);
        interfaceinvoke $r705.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("thinsp", $r706);
        $r708 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r709 = new java.lang.Integer;
        specialinvoke $r709.<java.lang.Integer: void <init>(int)>(8204);
        interfaceinvoke $r708.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zwnj", $r709);
        $r711 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r712 = new java.lang.Integer;
        specialinvoke $r712.<java.lang.Integer: void <init>(int)>(8205);
        interfaceinvoke $r711.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zwj", $r712);
        $r714 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r715 = new java.lang.Integer;
        specialinvoke $r715.<java.lang.Integer: void <init>(int)>(8206);
        interfaceinvoke $r714.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lrm", $r715);
        $r717 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r718 = new java.lang.Integer;
        specialinvoke $r718.<java.lang.Integer: void <init>(int)>(8207);
        interfaceinvoke $r717.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rlm", $r718);
        $r720 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r721 = new java.lang.Integer;
        specialinvoke $r721.<java.lang.Integer: void <init>(int)>(8211);
        interfaceinvoke $r720.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ndash", $r721);
        $r723 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r724 = new java.lang.Integer;
        specialinvoke $r724.<java.lang.Integer: void <init>(int)>(8212);
        interfaceinvoke $r723.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mdash", $r724);
        $r726 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r727 = new java.lang.Integer;
        specialinvoke $r727.<java.lang.Integer: void <init>(int)>(8216);
        interfaceinvoke $r726.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lsquo", $r727);
        $r729 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r730 = new java.lang.Integer;
        specialinvoke $r730.<java.lang.Integer: void <init>(int)>(8217);
        interfaceinvoke $r729.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rsquo", $r730);
        $r732 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r733 = new java.lang.Integer;
        specialinvoke $r733.<java.lang.Integer: void <init>(int)>(8218);
        interfaceinvoke $r732.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sbquo", $r733);
        $r735 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r736 = new java.lang.Integer;
        specialinvoke $r736.<java.lang.Integer: void <init>(int)>(8220);
        interfaceinvoke $r735.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ldquo", $r736);
        $r738 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r739 = new java.lang.Integer;
        specialinvoke $r739.<java.lang.Integer: void <init>(int)>(8221);
        interfaceinvoke $r738.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rdquo", $r739);
        $r741 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r742 = new java.lang.Integer;
        specialinvoke $r742.<java.lang.Integer: void <init>(int)>(8222);
        interfaceinvoke $r741.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bdquo", $r742);
        $r744 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r745 = new java.lang.Integer;
        specialinvoke $r745.<java.lang.Integer: void <init>(int)>(8224);
        interfaceinvoke $r744.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dagger", $r745);
        $r747 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r748 = new java.lang.Integer;
        specialinvoke $r748.<java.lang.Integer: void <init>(int)>(8225);
        interfaceinvoke $r747.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Dagger", $r748);
        $r750 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r751 = new java.lang.Integer;
        specialinvoke $r751.<java.lang.Integer: void <init>(int)>(8240);
        interfaceinvoke $r750.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("permil", $r751);
        $r753 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r754 = new java.lang.Integer;
        specialinvoke $r754.<java.lang.Integer: void <init>(int)>(8249);
        interfaceinvoke $r753.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lsaquo", $r754);
        $r756 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r757 = new java.lang.Integer;
        specialinvoke $r757.<java.lang.Integer: void <init>(int)>(8250);
        interfaceinvoke $r756.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rsaquo", $r757);
        $r759 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r760 = new java.lang.Integer;
        specialinvoke $r760.<java.lang.Integer: void <init>(int)>(8364);
        interfaceinvoke $r759.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("euro", $r760);
        $r762 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r763 = new java.lang.Integer;
        specialinvoke $r763.<java.lang.Integer: void <init>(int)>(39);
        interfaceinvoke $r762.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("apos", $r763);
        $r765 = new net.htmlparser.jericho.IntStringHashMap;
        $r766 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $i0 = interfaceinvoke $r766.<java.util.Map: int size()>();
        $f0 = (float) $i0;
        $f1 = $f0 / 0.75F;
        $i1 = (int) $f1;
        specialinvoke $r765.<net.htmlparser.jericho.IntStringHashMap: void <init>(int,float)>($i1, 1.0F);
        <net.htmlparser.jericho.CharacterEntityReference: net.htmlparser.jericho.IntStringHashMap CODE_POINT_TO_NAME_MAP> = $r765;
        $r767 = <net.htmlparser.jericho.CharacterEntityReference: java.util.Map NAME_TO_CODE_POINT_MAP>;
        $r768 = interfaceinvoke $r767.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r768.<java.util.Set: java.util.Iterator iterator()>();
        r1[0] = 1;

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        r1[1] = 1;
        if $z0 == 0 goto label2;

        $r769 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r769;
        $r770 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        r4 = (java.lang.String) $r770;
        $i2 = <net.htmlparser.jericho.CharacterEntityReference: int MAX_NAME_LENGTH>;
        $i3 = virtualinvoke r4.<java.lang.String: int length()>();
        r1[2] = 1;
        if $i2 >= $i3 goto label1;

        $i4 = virtualinvoke r4.<java.lang.String: int length()>();
        <net.htmlparser.jericho.CharacterEntityReference: int MAX_NAME_LENGTH> = $i4;
        r1[3] = 1;

     label1:
        $r771 = <net.htmlparser.jericho.CharacterEntityReference: net.htmlparser.jericho.IntStringHashMap CODE_POINT_TO_NAME_MAP>;
        $r772 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r773 = (java.lang.Integer) $r772;
        $i5 = virtualinvoke $r773.<java.lang.Integer: int intValue()>();
        virtualinvoke $r771.<net.htmlparser.jericho.IntStringHashMap: java.lang.String put(int,java.lang.String)>($i5, r4);
        r1[4] = 1;
        goto label0;

     label2:
        $i6 = <net.htmlparser.jericho.CharacterEntityReference: int MAX_NAME_LENGTH>;
        $i7 = $i6 + 2;
        <net.htmlparser.jericho.CharacterEntityReference: int MAX_ENTITY_REFERENCE_LENGTH> = $i7;
        r1[5] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = newmultiarray (boolean)[14][];
        <net.htmlparser.jericho.CharacterEntityReference: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[7];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[3];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[2];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[19];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[7];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[6];
        $r0[13] = $r14;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/CharacterEntityReference", -8325879597538409565L);
        return $r0;
    }
}
final class net.htmlparser.jericho.CharacterReference$EncodingFilterWriter extends java.io.FilterWriter
{
    java.lang.StringBuilder sb;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.io.Writer)
    {
        net.htmlparser.jericho.CharacterReference$EncodingFilterWriter r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        java.lang.StringBuilder $r4;

        r0 := @this: net.htmlparser.jericho.CharacterReference$EncodingFilterWriter;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.io.FilterWriter: void <init>(java.io.Writer)>(r1);
        $r4 = new java.lang.StringBuilder;
        $i0 = <net.htmlparser.jericho.CharacterReference: int MAX_ENTITY_REFERENCE_LENGTH>;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0);
        r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: java.lang.StringBuilder sb> = $r4;
        r3[0] = 1;
        return;
    }

    public void write(char) throws java.io.IOException
    {
        net.htmlparser.jericho.CharacterReference$EncodingFilterWriter r0;
        char c0, $c2;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r10;
        int $i1;
        java.io.Writer $r7, $r9;

        r0 := @this: net.htmlparser.jericho.CharacterReference$EncodingFilterWriter;
        c0 := @parameter0: char;
        $r1 = <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: java.lang.StringBuilder sb>;
        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);
        $r4 = r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: java.lang.StringBuilder sb>;
        staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable access$000(java.lang.Appendable,char)>($r4, c0);
        $r6 = r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: java.lang.StringBuilder sb>;
        $i1 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();
        r2[0] = 1;
        if $i1 != 1 goto label1;

        $r7 = r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: java.io.Writer out>;
        $r8 = r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: java.lang.StringBuilder sb>;
        $c2 = virtualinvoke $r8.<java.lang.StringBuilder: char charAt(int)>(0);
        virtualinvoke $r7.<java.io.Writer: void write(int)>($c2);
        r2[1] = 1;
        goto label2;

     label1:
        $r9 = r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: java.io.Writer out>;
        $r10 = r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: java.lang.StringBuilder sb>;
        virtualinvoke $r9.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r10);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return;
    }

    public void write(int) throws java.io.IOException
    {
        net.htmlparser.jericho.CharacterReference$EncodingFilterWriter r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        char $c1;

        r0 := @this: net.htmlparser.jericho.CharacterReference$EncodingFilterWriter;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $c1 = (char) i0;
        virtualinvoke r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: void write(char)>($c1);
        r2[0] = 1;
        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.CharacterReference$EncodingFilterWriter r0;
        char[] r1;
        int i0, i1, i2, i3;
        boolean[][] $r2;
        boolean[] r3;
        char $c4;

        r0 := @this: net.htmlparser.jericho.CharacterReference$EncodingFilterWriter;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        i2 = i0 + i1;
        i3 = i0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i3 >= i2 goto label2;

        $c4 = r1[i3];
        virtualinvoke r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: void write(char)>($c4);
        i3 = i3 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.CharacterReference$EncodingFilterWriter r0;
        java.lang.String r1;
        int i0, i1, i2, i3;
        boolean[][] $r2;
        boolean[] r3;
        char $c4;

        r0 := @this: net.htmlparser.jericho.CharacterReference$EncodingFilterWriter;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        i2 = i0 + i1;
        i3 = i0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i3 >= i2 goto label2;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);
        virtualinvoke r0.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: void write(char)>($c4);
        i3 = i3 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/CharacterReference$EncodingFilterWriter", -3817724092118781834L);
        return $r0;
    }
}
public abstract class net.htmlparser.jericho.CharacterReference extends net.htmlparser.jericho.Segment
{
    int codePoint;
    public static final int INVALID_CODE_POINT;
    static int MAX_ENTITY_REFERENCE_LENGTH;
    private static final int TAB_LENGTH;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(net.htmlparser.jericho.Source, int, int, int)
    {
        net.htmlparser.jericho.CharacterReference r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, i2;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r2 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r1, i0, i1);
        r0.<net.htmlparser.jericho.CharacterReference: int codePoint> = i2;
        r3[0] = 1;
        return;
    }

    public int getCodePoint()
    {
        net.htmlparser.jericho.CharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $i0 = r0.<net.htmlparser.jericho.CharacterReference: int codePoint>;
        r2[0] = 1;
        return $i0;
    }

    public char getChar()
    {
        net.htmlparser.jericho.CharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        char $c1;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<net.htmlparser.jericho.CharacterReference: int codePoint>;
        $c1 = (char) $i0;
        r2[0] = 1;
        return $c1;
    }

    public final void appendCharTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.CharacterReference r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $z0 = <net.htmlparser.jericho.Config: boolean ConvertNonBreakingSpaces>;
        specialinvoke r0.<net.htmlparser.jericho.CharacterReference: void appendCharTo(java.lang.Appendable,boolean)>(r1, $z0);
        r3[0] = 1;
        return;
    }

    private void appendCharTo(java.lang.Appendable, boolean) throws java.io.IOException
    {
        net.htmlparser.jericho.CharacterReference r0;
        java.lang.Appendable r1;
        boolean z0, $z1;
        boolean[][] $r2;
        boolean[] r3;
        char c0, $c3, $c5;
        int $i1, $i2, $i4;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        r1 := @parameter0: java.lang.Appendable;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $i1 = r0.<net.htmlparser.jericho.CharacterReference: int codePoint>;
        $z1 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>($i1);
        r3[0] = 1;
        if $z1 == 0 goto label1;

        $i2 = r0.<net.htmlparser.jericho.CharacterReference: int codePoint>;
        $c3 = staticinvoke <net.htmlparser.jericho.CharacterReference: char getHighSurrogate(int)>($i2);
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c3);
        $i4 = r0.<net.htmlparser.jericho.CharacterReference: int codePoint>;
        $c5 = staticinvoke <net.htmlparser.jericho.CharacterReference: char getLowSurrogate(int)>($i4);
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c5);
        r3[1] = 1;
        goto label3;

     label1:
        c0 = virtualinvoke r0.<net.htmlparser.jericho.CharacterReference: char getChar()>();
        r3[2] = 1;
        if c0 != 160 goto label2;

        r3[3] = 1;
        if z0 == 0 goto label2;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        r3[4] = 1;
        goto label3;

     label2:
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(c0);
        r3[5] = 1;

     label3:
        r3[6] = 1;
        return;
    }

    public boolean isTerminated()
    {
        net.htmlparser.jericho.CharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        int $i0, $i1;
        char $c2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.CharacterReference: int end>;
        $i1 = $i0 - 1;
        $c2 = virtualinvoke $r3.<net.htmlparser.jericho.Source: char charAt(int)>($i1);
        r2[0] = 1;
        if $c2 != 59 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public static java.lang.String encode(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r7;
        java.lang.StringBuilder $r4;
        int $i0, $i1;
        java.lang.Appendable $r5;
        java.lang.String $r6;
        java.lang.RuntimeException $r8;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r4 = new java.lang.StringBuilder;
        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        $i1 = $i0 * 2;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);
        $r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendEncode(java.lang.Appendable,java.lang.CharSequence,boolean)>($r4, r0, 0);
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        r2[2] = 1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);
        r2[3] = 1;
        throw $r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String encode(char)
    {
        char c0;
        boolean[][] $r0;
        boolean[] r1;
        int $i1;
        java.io.IOException r2, $r6;
        java.lang.StringBuilder $r3;
        java.lang.Appendable $r4;
        java.lang.String $r5;
        java.lang.RuntimeException $r7;

        c0 := @parameter0: char;
        $r0 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];

     label1:
        $r3 = new java.lang.StringBuilder;
        $i1 = <net.htmlparser.jericho.CharacterReference: int MAX_ENTITY_REFERENCE_LENGTH>;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendEncode(java.lang.Appendable,char)>($r3, c0);
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        r1[0] = 1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new java.lang.RuntimeException;
        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);
        r1[1] = 1;
        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String encodeWithWhiteSpaceFormatting(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r7;
        java.lang.StringBuilder $r4;
        int $i0, $i1;
        java.lang.Appendable $r5;
        java.lang.String $r6;
        java.lang.RuntimeException $r8;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r4 = new java.lang.StringBuilder;
        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        $i1 = $i0 * 2;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);
        $r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendEncode(java.lang.Appendable,java.lang.CharSequence,boolean)>($r4, r0, 1);
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        r2[2] = 1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);
        r2[3] = 1;
        throw $r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String decode(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $z0 = <net.htmlparser.jericho.Config: boolean ConvertNonBreakingSpaces>;
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decode(java.lang.CharSequence,boolean,boolean)>(r0, 0, $z0);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String decode(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0, $z1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.CharSequence;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $z1 = <net.htmlparser.jericho.Config: boolean ConvertNonBreakingSpaces>;
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decode(java.lang.CharSequence,boolean,boolean)>(r0, z0, $z1);
        r2[0] = 1;
        return $r3;
    }

    static java.lang.String decode(java.lang.CharSequence, boolean, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0, z1;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1, $i3;
        java.io.IOException r3, $r7;
        char $c2;
        java.lang.StringBuilder $r4;
        java.lang.Appendable $r5;
        java.lang.String $r6, $r9;
        java.lang.RuntimeException $r8;

        r0 := @parameter0: java.lang.CharSequence;
        z0 := @parameter1: boolean;
        z1 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        i0 = 0;
        r2[2] = 1;

     label2:
        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        r2[3] = 1;
        if i0 >= $i1 goto label7;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);
        r2[4] = 1;
        if $c2 != 38 goto label6;

     label3:
        $r4 = new java.lang.StringBuilder;
        $i3 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i3);
        $r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendDecode(java.lang.Appendable,java.lang.CharSequence,int,boolean,boolean)>($r4, r0, i0, z0, z1);
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        r2[5] = 1;

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);
        r2[6] = 1;
        throw $r8;

     label6:
        i0 = i0 + 1;
        r2[7] = 1;
        goto label2;

     label7:
        $r9 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();
        r2[8] = 1;
        return $r9;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public static java.lang.String decodeCollapseWhiteSpace(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $z0 = <net.htmlparser.jericho.Config: boolean ConvertNonBreakingSpaces>;
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decodeCollapseWhiteSpace(java.lang.CharSequence,boolean)>(r0, $z0);
        r2[0] = 1;
        return $r3;
    }

    static java.lang.String decodeCollapseWhiteSpace(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.CharSequence;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = new java.lang.StringBuilder;
        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i0);
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.StringBuilder appendCollapseWhiteSpace(java.lang.StringBuilder,java.lang.CharSequence)>($r3, r0);
        $r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decode(java.lang.CharSequence,boolean,boolean)>($r4, 0, z0);
        r2[0] = 1;
        return $r5;
    }

    public static java.lang.String reencode(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decode(java.lang.CharSequence,boolean)>(r0, 1);
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String encode(java.lang.CharSequence)>($r3);
        r2[0] = 1;
        return $r4;
    }

    public abstract java.lang.String getCharacterReferenceString();

    public static java.lang.String getCharacterReferenceString(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String r2;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[16];
        r2 = null;
        r1[0] = 1;
        if i0 == 39 goto label1;

        r2 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.String getCharacterReferenceString(int)>(i0);
        r1[1] = 1;

     label1:
        r1[2] = 1;
        if r2 != null goto label2;

        r2 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.String getCharacterReferenceString(int)>(i0);
        r1[3] = 1;

     label2:
        r1[4] = 1;
        return r2;
    }

    public java.lang.String getDecimalCharacterReferenceString()
    {
        net.htmlparser.jericho.CharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $i0 = r0.<net.htmlparser.jericho.CharacterReference: int codePoint>;
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String getDecimalCharacterReferenceString(int)>($i0);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String getDecimalCharacterReferenceString(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        java.io.IOException r2, $r6;
        java.lang.StringBuilder $r3;
        java.lang.Appendable $r4;
        java.lang.String $r5;
        java.lang.RuntimeException $r7;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[18];

     label1:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendDecimalCharacterReferenceString(java.lang.Appendable,int)>($r3, i0);
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        r1[0] = 1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new java.lang.RuntimeException;
        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);
        r1[1] = 1;
        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getHexadecimalCharacterReferenceString()
    {
        net.htmlparser.jericho.CharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $i0 = r0.<net.htmlparser.jericho.CharacterReference: int codePoint>;
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String getHexadecimalCharacterReferenceString(int)>($i0);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String getHexadecimalCharacterReferenceString(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        java.io.IOException r2, $r6;
        java.lang.StringBuilder $r3;
        java.lang.Appendable $r4;
        java.lang.String $r5;
        java.lang.RuntimeException $r7;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[20];

     label1:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendHexadecimalCharacterReferenceString(java.lang.Appendable,int)>($r3, i0);
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        r1[0] = 1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new java.lang.RuntimeException;
        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);
        r1[1] = 1;
        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getUnicodeText()
    {
        net.htmlparser.jericho.CharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.CharacterReference;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $i0 = r0.<net.htmlparser.jericho.CharacterReference: int codePoint>;
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String getUnicodeText(int)>($i0);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String getUnicodeText(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        java.io.IOException r2, $r6;
        java.lang.StringBuilder $r3;
        java.lang.Appendable $r4;
        java.lang.String $r5;
        java.lang.RuntimeException $r7;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[22];

     label1:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendUnicodeText(java.lang.Appendable,int)>($r3, i0);
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        r1[0] = 1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r2 = $r6;
        $r7 = new java.lang.RuntimeException;
        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);
        r1[1] = 1;
        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static final java.lang.Appendable appendUnicodeText(java.lang.Appendable, int) throws java.io.IOException
    {
        java.lang.Appendable r0;
        int i0, i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r5;

        r0 := @parameter0: java.lang.Appendable;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("U+");
        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 16);
        r3 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>();
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();
        i1 = 4 - $i2;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i1 <= 0 goto label2;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(48);
        i1 = i1 + -1;
        r2[2] = 1;
        goto label1;

     label2:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r3);
        r2[3] = 1;
        return r0;
    }

    public static net.htmlparser.jericho.CharacterReference parse(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r4;
        net.htmlparser.jericho.CharacterReference $r5;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $r3 = new net.htmlparser.jericho.Source;
        specialinvoke $r3.<net.htmlparser.jericho.Source: void <init>(java.lang.CharSequence,boolean)>(r0, 1);
        $r4 = <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings ACCEPT_ALL>;
        $r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>($r3, 0, $r4);
        r2[0] = 1;
        return $r5;
    }

    public static int getCodePointFromCharacterReferenceString(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.CharacterReference r3;
        int $i0;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference parse(java.lang.CharSequence)>(r0);
        r2[0] = 1;
        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<net.htmlparser.jericho.CharacterReference: int getCodePoint()>();
        r2[1] = 1;
        goto label2;

     label1:
        $i0 = -1;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $i0;
    }

    public static final boolean requiresEncoding(char)
    {
        char c0;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        c0 := @parameter0: char;
        $r0 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[26];
        r1[0] = 1;
        if c0 > 127 goto label1;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.String getName(char)>(c0);
        r1[1] = 1;
        if $r2 == null goto label2;

        r1[2] = 1;
        if c0 != 39 goto label1;

        $z0 = <net.htmlparser.jericho.Config: boolean IsApostropheEncoded>;
        r1[3] = 1;
        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;
        r1[4] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r1[5] = 1;

     label3:
        r1[6] = 1;
        return $z1;
    }

    public static java.io.Writer getEncodingFilterWriter(java.io.Writer)
    {
        java.io.Writer r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.CharacterReference$EncodingFilterWriter $r3;

        r0 := @parameter0: java.io.Writer;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[27];
        $r3 = new net.htmlparser.jericho.CharacterReference$EncodingFilterWriter;
        specialinvoke $r3.<net.htmlparser.jericho.CharacterReference$EncodingFilterWriter: void <init>(java.io.Writer)>(r0);
        r2[0] = 1;
        return $r3;
    }

    private static java.lang.Appendable appendEncode(java.lang.Appendable, char) throws java.io.IOException
    {
        java.lang.Appendable r0, $r3;
        char c0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Appendable;
        c0 := @parameter1: char;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $z0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean appendEncodeCheckForWhiteSpaceFormatting(java.lang.Appendable,char,boolean)>(r0, c0, 0);
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r2[1] = 1;
        return r0;

     label1:
        $r3 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(c0);
        r2[2] = 1;
        return $r3;
    }

    static java.lang.Appendable appendEncode(java.lang.Appendable, java.lang.CharSequence, boolean) throws java.io.IOException
    {
        java.lang.Appendable r0;
        java.lang.CharSequence r1;
        boolean z0, $z1, z2, $z3;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, i2, i4, i5, i6, $i9;
        net.htmlparser.jericho.Segment r4;
        char c3, $c7, c8;

        r0 := @parameter0: java.lang.Appendable;
        r1 := @parameter1: java.lang.CharSequence;
        z0 := @parameter2: boolean;
        $r2 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[29];
        r3[0] = 1;
        if r1 != null goto label1;

        r3[1] = 1;
        return r0;

     label1:
        i0 = 0;
        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        $z1 = r1 instanceof net.htmlparser.jericho.Segment;
        r3[2] = 1;
        if $z1 == 0 goto label2;

        r4 = (net.htmlparser.jericho.Segment) r1;
        i2 = virtualinvoke r4.<net.htmlparser.jericho.Segment: int getBegin()>();
        i0 = i2;
        i1 = i1 + i2;
        r1 = r4.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r3[3] = 1;

     label2:
        z2 = <net.htmlparser.jericho.Config: boolean IsApostropheEncoded>;
        i6 = i0;
        r3[4] = 1;

     label3:
        r3[5] = 1;
        if i6 >= i1 goto label16;

        c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i6);
        $z3 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean appendEncodeCheckForWhiteSpaceFormatting(java.lang.Appendable,char,boolean)>(r0, c3, z0);
        r3[6] = 1;
        if $z3 == 0 goto label4;

        r3[7] = 1;
        goto label15;

     label4:
        i4 = i6 + 1;
        r3[8] = 1;
        if c3 == 32 goto label7;

        r3[9] = 1;
        if c3 == 9 goto label6;

        r3[10] = 1;
        if c3 != 13 goto label5;

        r3[11] = 1;
        if i4 >= i1 goto label5;

        $c7 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i4);
        r3[12] = 1;
        if $c7 != 10 goto label5;

        i6 = i6 + 1;
        r3[13] = 1;

     label5:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("<br />");
        r3[14] = 1;
        goto label15;

     label6:
        i5 = 4;
        r3[15] = 1;
        goto label8;

     label7:
        i5 = 1;
        r3[16] = 1;

     label8:
        r3[17] = 1;
        if i4 >= i1 goto label11;

        c8 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i4);
        r3[18] = 1;
        if c8 != 32 goto label9;

        i5 = i5 + 1;
        r3[19] = 1;
        goto label10;

     label9:
        r3[20] = 1;
        if c8 != 9 goto label11;

        i5 = i5 + 4;
        r3[21] = 1;

     label10:
        i4 = i4 + 1;
        r3[22] = 1;
        goto label8;

     label11:
        r3[23] = 1;
        if i5 != 1 goto label12;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        r3[24] = 1;
        goto label15;

     label12:
        $i9 = i5 % 2;
        r3[25] = 1;
        if $i9 != 1 goto label13;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        r3[26] = 1;

     label13:
        r3[27] = 1;
        if i5 < 2 goto label14;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("&nbsp; ");
        i5 = i5 + -2;
        r3[28] = 1;
        goto label13;

     label14:
        i6 = i4 - 1;
        r3[29] = 1;

     label15:
        i6 = i6 + 1;
        r3[30] = 1;
        goto label3;

     label16:
        r3[31] = 1;
        return r0;
    }

    private static final boolean appendEncodeCheckForWhiteSpaceFormatting(java.lang.Appendable, char, boolean) throws java.io.IOException
    {
        java.lang.Appendable r0;
        char c0;
        boolean z0, $z1, $z2;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3;

        r0 := @parameter0: java.lang.Appendable;
        c0 := @parameter1: char;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        r3 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.String getName(char)>(c0);
        r2[0] = 1;
        if r3 == null goto label3;

        r2[1] = 1;
        if c0 != 39 goto label2;

        $z1 = <net.htmlparser.jericho.Config: boolean IsApostropheEncoded>;
        r2[2] = 1;
        if $z1 == 0 goto label1;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("&#39;");
        r2[3] = 1;
        goto label7;

     label1:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(c0);
        r2[4] = 1;
        goto label7;

     label2:
        staticinvoke <net.htmlparser.jericho.CharacterEntityReference: java.lang.Appendable appendCharacterReferenceString(java.lang.Appendable,java.lang.String)>(r0, r3);
        r2[5] = 1;
        goto label7;

     label3:
        r2[6] = 1;
        if c0 <= 127 goto label4;

        staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendDecimalCharacterReferenceString(java.lang.Appendable,int)>(r0, c0);
        r2[7] = 1;
        goto label7;

     label4:
        r2[8] = 1;
        if z0 == 0 goto label5;

        $z2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean isWhiteSpace(char)>(c0);
        r2[9] = 1;
        if $z2 != 0 goto label6;

     label5:
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(c0);
        r2[10] = 1;
        goto label7;

     label6:
        r2[11] = 1;
        return 0;

     label7:
        r2[12] = 1;
        return 1;
    }

    static net.htmlparser.jericho.CharacterReference getPrevious(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;
        net.htmlparser.jericho.CharacterReference $r4;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[31];
        $r3 = <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings ACCEPT_ALL>;
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference getPrevious(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>(r0, i0, $r3);
        r2[0] = 1;
        return $r4;
    }

    static net.htmlparser.jericho.CharacterReference getNext(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;
        net.htmlparser.jericho.CharacterReference $r4;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        $r3 = <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings ACCEPT_ALL>;
        $r4 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference getNext(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>(r0, i0, $r3);
        r2[0] = 1;
        return $r4;
    }

    private static net.htmlparser.jericho.CharacterReference getPrevious(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, $i2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        net.htmlparser.jericho.CharacterReference r5;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        $r2 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[33];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: int lastIndexOf(char,int)>(38, i0);
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i1 == -1 goto label3;

        r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>(r0, i1, r1);
        r3[2] = 1;
        if r5 == null goto label2;

        r3[3] = 1;
        return r5;

     label2:
        $i2 = i1 - 1;
        i1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: int lastIndexOf(char,int)>(38, $i2);
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return null;
    }

    private static net.htmlparser.jericho.CharacterReference getNext(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, $i2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        net.htmlparser.jericho.CharacterReference r5;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        $r2 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[34];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: int indexOf(char,int)>(38, i0);
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i1 == -1 goto label3;

        r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>(r0, i1, r1);
        r3[2] = 1;
        if r5 == null goto label2;

        r3[3] = 1;
        return r5;

     label2:
        $i2 = i1 + 1;
        i1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: int indexOf(char,int)>(38, $i2);
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return null;
    }

    static final java.lang.Appendable appendHexadecimalCharacterReferenceString(java.lang.Appendable, int) throws java.io.IOException
    {
        java.lang.Appendable r0, $r3, $r5, $r6;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.Appendable;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[35];
        $r3 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("&#x");
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 16);
        $r5 = interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        $r6 = interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(char)>(59);
        r2[0] = 1;
        return $r6;
    }

    static final java.lang.Appendable appendDecimalCharacterReferenceString(java.lang.Appendable, int) throws java.io.IOException
    {
        java.lang.Appendable r0, $r3, $r5, $r6;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.Appendable;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[36];
        $r3 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("&#");
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);
        $r5 = interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        $r6 = interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(char)>(59);
        r2[0] = 1;
        return $r6;
    }

    static net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)
    {
        net.htmlparser.jericho.Source r0;
        int i0, $i2, $i4;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.IndexOutOfBoundsException r4, $r8;
        net.htmlparser.jericho.ParseText $r5, $r6;
        char $c1, $c3;
        null_type $n0;
        net.htmlparser.jericho.CharacterReference $r7;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        $r2 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[37];

     label1:
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $c1 = interfaceinvoke $r5.<net.htmlparser.jericho.ParseText: char charAt(int)>(i0);
        r3[0] = 1;
        if $c1 == 38 goto label3;

        $n0 = null;
        r3[1] = 1;

     label2:
        return $n0;

     label3:
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $i2 = i0 + 1;
        $c3 = interfaceinvoke $r6.<net.htmlparser.jericho.ParseText: char charAt(int)>($i2);
        r3[2] = 1;
        if $c3 != 35 goto label4;

        $r7 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>(r0, i0, r1);
        r3[3] = 1;
        goto label5;

     label4:
        $i4 = r1.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int characterEntityReferenceMaxCodePoint>;
        $r7 = staticinvoke <net.htmlparser.jericho.CharacterEntityReference: net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source,int,int)>(r0, i0, $i4);
        r3[4] = 1;

     label5:
        r3[5] = 1;
        return $r7;

     label6:
        $r8 := @caughtexception;
        r4 = $r8;
        r3[6] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label6;
        catch java.lang.IndexOutOfBoundsException from label3 to label5 with label6;
    }

    private static java.lang.Appendable appendDecode(java.lang.Appendable, java.lang.CharSequence, int, boolean, boolean) throws java.io.IOException
    {
        java.lang.Appendable r0;
        java.lang.CharSequence r1;
        int i0;
        boolean z0, z1, z2, $z3, $z4;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r4;
        net.htmlparser.jericho.StreamedSource r5, $r9, $r10, $r11;
        java.util.Iterator r6;
        net.htmlparser.jericho.Segment r7;
        net.htmlparser.jericho.Config$CompatibilityMode $r8;
        java.lang.Object $r12;
        net.htmlparser.jericho.CharacterReference $r13;
        java.lang.String $r14;

        r0 := @parameter0: java.lang.Appendable;
        r1 := @parameter1: java.lang.CharSequence;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        $r2 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[38];
        $r8 = <net.htmlparser.jericho.Config: net.htmlparser.jericho.Config$CompatibilityMode CurrentCompatibilityMode>;
        r4 = virtualinvoke $r8.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(z0);
        z2 = 0;
        $r9 = new net.htmlparser.jericho.StreamedSource;
        specialinvoke $r9.<net.htmlparser.jericho.StreamedSource: void <init>(java.lang.CharSequence)>(r1);
        $r10 = virtualinvoke $r9.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedSource setHandleTags(boolean)>(0);
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedSource setUnterminatedCharacterReferenceSettings(net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>(r4);
        r5 = virtualinvoke $r11.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedSource setSearchBegin(int)>(i0);
        r6 = virtualinvoke r5.<net.htmlparser.jericho.StreamedSource: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z3 == 0 goto label4;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (net.htmlparser.jericho.Segment) $r12;
        $z4 = r7 instanceof net.htmlparser.jericho.CharacterReference;
        r3[2] = 1;
        if $z4 == 0 goto label2;

        $r13 = (net.htmlparser.jericho.CharacterReference) r7;
        specialinvoke $r13.<net.htmlparser.jericho.CharacterReference: void appendCharTo(java.lang.Appendable,boolean)>(r0, z1);
        r3[3] = 1;
        goto label3;

     label2:
        $r14 = virtualinvoke r7.<net.htmlparser.jericho.Segment: java.lang.String toString()>();
        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r14);
        r3[4] = 1;

     label3:
        r3[5] = 1;
        goto label1;

     label4:
        r3[6] = 1;
        return r0;
    }

    private static char getHighSurrogate(int)
    {
        int i0, $i1, $i2;
        boolean[][] $r0;
        boolean[] r1;
        char $c3;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[39];
        $i1 = i0 >> 10;
        $i2 = 55232 + $i1;
        $c3 = (char) $i2;
        r1[0] = 1;
        return $c3;
    }

    private static char getLowSurrogate(int)
    {
        int i0, $i1, $i2;
        boolean[][] $r0;
        boolean[] r1;
        char $c3;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[40];
        $i1 = i0 & 1023;
        $i2 = 56320 + $i1;
        $c3 = (char) $i2;
        r1[0] = 1;
        return $c3;
    }

    static java.lang.Appendable access$000(java.lang.Appendable, char) throws java.io.IOException
    {
        java.lang.Appendable r0, $r3;
        char c0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: java.lang.Appendable;
        c0 := @parameter1: char;
        $r1 = <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[41];
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendEncode(java.lang.Appendable,char)>(r0, c0);
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.CharacterReference: boolean[][] $VRi()>();
        r1 = $r0[42];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42;

        $r0 = newmultiarray (boolean)[43][];
        <net.htmlparser.jericho.CharacterReference: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[7];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[2];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[4];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[9];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[5];
        $r0[16] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[17] = $r17;
        $r18 = newarray (boolean)[2];
        $r0[18] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[19] = $r19;
        $r20 = newarray (boolean)[2];
        $r0[20] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[21] = $r21;
        $r22 = newarray (boolean)[2];
        $r0[22] = $r22;
        $r23 = newarray (boolean)[4];
        $r0[23] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[24] = $r24;
        $r25 = newarray (boolean)[4];
        $r0[25] = $r25;
        $r26 = newarray (boolean)[7];
        $r0[26] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[27] = $r27;
        $r28 = newarray (boolean)[3];
        $r0[28] = $r28;
        $r29 = newarray (boolean)[32];
        $r0[29] = $r29;
        $r30 = newarray (boolean)[13];
        $r0[30] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[31] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[32] = $r32;
        $r33 = newarray (boolean)[6];
        $r0[33] = $r33;
        $r34 = newarray (boolean)[6];
        $r0[34] = $r34;
        $r35 = newarray (boolean)[1];
        $r0[35] = $r35;
        $r36 = newarray (boolean)[1];
        $r0[36] = $r36;
        $r37 = newarray (boolean)[7];
        $r0[37] = $r37;
        $r38 = newarray (boolean)[7];
        $r0[38] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[39] = $r39;
        $r40 = newarray (boolean)[1];
        $r0[40] = $r40;
        $r41 = newarray (boolean)[1];
        $r0[41] = $r41;
        $r42 = newarray (boolean)[1];
        $r0[42] = $r42;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/CharacterReference", 5691124803189350830L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.Config$CompatibilityMode extends java.lang.Object
{
    private java.lang.String name;
    private volatile boolean formFieldNameCaseInsensitive;
    volatile net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettingsInsideAttributeValue;
    volatile net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettingsOutsideAttributeValue;
    public static final int CODE_POINTS_ALL;
    public static final int CODE_POINTS_NONE;
    public static final net.htmlparser.jericho.Config$CompatibilityMode IE;
    public static final net.htmlparser.jericho.Config$CompatibilityMode MOZILLA;
    public static final net.htmlparser.jericho.Config$CompatibilityMode OPERA;
    public static final net.htmlparser.jericho.Config$CompatibilityMode XHTML;
    private static final boolean[][] $VRc;

    public void <init>(java.lang.String)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r4, $r5;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        $r4 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r4.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>()>();
        $r5 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r5.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>()>();
        specialinvoke r0.<net.htmlparser.jericho.Config$CompatibilityMode: void <init>(java.lang.String,boolean,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>(r1, 0, $r4, $r5);
        r3[0] = 1;
        return;
    }

    private void <init>(java.lang.String, boolean, net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings, net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        java.lang.String r1;
        boolean z0;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r2, r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r2 := @parameter2: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        r3 := @parameter3: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        $r4 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r5 = $r4[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Config$CompatibilityMode: java.lang.String name> = r1;
        r0.<net.htmlparser.jericho.Config$CompatibilityMode: boolean formFieldNameCaseInsensitive> = z0;
        r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettingsInsideAttributeValue> = r2;
        r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettingsOutsideAttributeValue> = r3;
        r5[0] = 1;
        return;
    }

    public java.lang.String getName()
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.Config$CompatibilityMode: java.lang.String name>;
        r2[0] = 1;
        return $r3;
    }

    public boolean isFormFieldNameCaseInsensitive()
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $z0 = r0.<net.htmlparser.jericho.Config$CompatibilityMode: boolean formFieldNameCaseInsensitive>;
        r2[0] = 1;
        return $z0;
    }

    public void setFormFieldNameCaseInsensitive(boolean)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r0.<net.htmlparser.jericho.Config$CompatibilityMode: boolean formFieldNameCaseInsensitive> = z0;
        r2[0] = 1;
        return;
    }

    public int getUnterminatedCharacterEntityReferenceMaxCodePoint(boolean)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(z0);
        $i0 = $r3.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int characterEntityReferenceMaxCodePoint>;
        r2[0] = 1;
        return $i0;
    }

    public void setUnterminatedCharacterEntityReferenceMaxCodePoint(boolean, int)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean z0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(z0);
        $r3.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int characterEntityReferenceMaxCodePoint> = i0;
        r2[0] = 1;
        return;
    }

    public int getUnterminatedDecimalCharacterReferenceMaxCodePoint(boolean)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(z0);
        $i0 = $r3.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int decimalCharacterReferenceMaxCodePoint>;
        r2[0] = 1;
        return $i0;
    }

    public void setUnterminatedDecimalCharacterReferenceMaxCodePoint(boolean, int)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean z0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(z0);
        $r3.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int decimalCharacterReferenceMaxCodePoint> = i0;
        r2[0] = 1;
        return;
    }

    public int getUnterminatedHexadecimalCharacterReferenceMaxCodePoint(boolean)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(z0);
        $i0 = $r3.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int hexadecimalCharacterReferenceMaxCodePoint>;
        r2[0] = 1;
        return $i0;
    }

    public void setUnterminatedHexadecimalCharacterReferenceMaxCodePoint(boolean, int)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean z0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(z0);
        $r3.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int hexadecimalCharacterReferenceMaxCodePoint> = i0;
        r2[0] = 1;
        return;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r15, $r16, $r18;
        boolean $z0;
        java.lang.String $r6, $r9, $r14, $r19;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r12, $r17;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Form field name case insensitive: ");
        $z0 = r0.<net.htmlparser.jericho.Config$CompatibilityMode: boolean formFieldNameCaseInsensitive>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
        $r6 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum codepoints in unterminated character references:");
        $r9 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Inside attribute values:");
        $r12 = r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettingsInsideAttributeValue>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);
        $r14 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Outside attribute values:");
        $r17 = r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettingsOutsideAttributeValue>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r19;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Config$CompatibilityMode: java.lang.String getName()>();
        r2[0] = 1;
        return $r3;
    }

    net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)
    {
        net.htmlparser.jericho.Config$CompatibilityMode r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;

        r0 := @this: net.htmlparser.jericho.Config$CompatibilityMode;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        r2[0] = 1;
        if z0 == 0 goto label1;

        $r3 = r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettingsInsideAttributeValue>;
        r2[1] = 1;
        goto label2;

     label1:
        $r3 = r0.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettingsOutsideAttributeValue>;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r2, $r4, $r6, $r7, $r9, $r10;
        net.htmlparser.jericho.Config$CompatibilityMode $r3, $r5, $r8, $r11;

        $r0 = staticinvoke <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRi()>();
        r1 = $r0[14];
        $r3 = new net.htmlparser.jericho.Config$CompatibilityMode;
        $r2 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r2.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>(int,int,int)>(255, 1114111, 1114111);
        $r4 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r4.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>(int,int,int)>(255, 1114111, -1);
        specialinvoke $r3.<net.htmlparser.jericho.Config$CompatibilityMode: void <init>(java.lang.String,boolean,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>("IE", 1, $r2, $r4);
        <net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$CompatibilityMode IE> = $r3;
        $r5 = new net.htmlparser.jericho.Config$CompatibilityMode;
        $r6 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r6.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>(int,int,int)>(255, 1114111, 1114111);
        $r7 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r7.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>(int,int,int)>(1114111, 1114111, 1114111);
        specialinvoke $r5.<net.htmlparser.jericho.Config$CompatibilityMode: void <init>(java.lang.String,boolean,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>("Mozilla", 0, $r6, $r7);
        <net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$CompatibilityMode MOZILLA> = $r5;
        $r8 = new net.htmlparser.jericho.Config$CompatibilityMode;
        $r9 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r9.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>(int,int,int)>(62, 1114111, 1114111);
        $r10 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r10.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>(int,int,int)>(1114111, 1114111, 1114111);
        specialinvoke $r8.<net.htmlparser.jericho.Config$CompatibilityMode: void <init>(java.lang.String,boolean,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>("Opera", 1, $r9, $r10);
        <net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$CompatibilityMode OPERA> = $r8;
        $r11 = new net.htmlparser.jericho.Config$CompatibilityMode;
        specialinvoke $r11.<net.htmlparser.jericho.Config$CompatibilityMode: void <init>(java.lang.String)>("XHTML");
        <net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$CompatibilityMode XHTML> = $r11;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        $r0 = newmultiarray (boolean)[15][];
        <net.htmlparser.jericho.Config$CompatibilityMode: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[4];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Config$CompatibilityMode", 1577301744693973231L);
        return $r0;
    }
}
class net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings extends java.lang.Object
{
    public volatile int characterEntityReferenceMaxCodePoint;
    public volatile int decimalCharacterReferenceMaxCodePoint;
    public volatile int hexadecimalCharacterReferenceMaxCodePoint;
    public static net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings ACCEPT_ALL;
    private static final boolean[][] $VRc;

    public void <init>()
    {
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        $r1 = <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>(int,int,int)>(-1, -1, -1);
        r2[0] = 1;
        return;
    }

    public void <init>(int, int, int)
    {
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r0;
        int i0, i1, i2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int characterEntityReferenceMaxCodePoint> = i0;
        r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int decimalCharacterReferenceMaxCodePoint> = i1;
        r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int hexadecimalCharacterReferenceMaxCodePoint> = i2;
        r2[0] = 1;
        return;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r10, $r11, $r13, $r15, $r16, $r18;
        java.lang.String $r4, $r7, $r9, $r12, $r14, $r17, $r19;
        int $i0, $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        $r1 = <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Character entity reference: ");
        $i0 = r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int characterEntityReferenceMaxCodePoint>;
        $r7 = specialinvoke r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: java.lang.String getDescription(int)>($i0);
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Decimal character reference: ");
        $i1 = r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int decimalCharacterReferenceMaxCodePoint>;
        $r12 = specialinvoke r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: java.lang.String getDescription(int)>($i1);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Haxadecimal character reference: ");
        $i2 = r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int hexadecimalCharacterReferenceMaxCodePoint>;
        $r17 = specialinvoke r0.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: java.lang.String getDescription(int)>($i2);
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r19;
    }

    private java.lang.String getDescription(int)
    {
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r2[0] = 1;
        if i0 != -1 goto label1;

        r2[1] = 1;
        return "None";

     label1:
        r2[2] = 1;
        if i0 != 1114111 goto label2;

        r2[3] = 1;
        return "All";

     label2:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");
        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 16);
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[4] = 1;
        return $r7;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r2 = new net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        specialinvoke $r2.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: void <init>(int,int,int)>(1114111, 1114111, 1114111);
        <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings ACCEPT_ALL> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Config$UnterminatedCharacterReferenceSettings", 5875878479357316026L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.Config extends java.lang.Object
{
    public static java.lang.String ColumnMultipleValueSeparator;
    public static java.lang.String ColumnValueTrue;
    public static java.lang.String ColumnValueFalse;
    public static boolean ConvertNonBreakingSpaces;
    public static net.htmlparser.jericho.Config$CompatibilityMode CurrentCompatibilityMode;
    public static boolean IsApostropheEncoded;
    public static boolean IsHTMLEmptyElementTagRecognised;
    public static net.htmlparser.jericho.LoggerProvider LoggerProvider;
    public static java.lang.String NewLine;
    static final boolean IncludeServerTagsInElementHierarchy;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Config r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Config;
        $r1 = <net.htmlparser.jericho.Config: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Config: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2, $r4;
        net.htmlparser.jericho.Config$CompatibilityMode $r3;

        $r0 = staticinvoke <net.htmlparser.jericho.Config: boolean[][] $VRi()>();
        r1 = $r0[1];
        <net.htmlparser.jericho.Config: java.lang.String ColumnMultipleValueSeparator> = ",";
        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(1);
        <net.htmlparser.jericho.Config: java.lang.String ColumnValueTrue> = $r2;
        <net.htmlparser.jericho.Config: java.lang.String ColumnValueFalse> = null;
        <net.htmlparser.jericho.Config: boolean ConvertNonBreakingSpaces> = 1;
        $r3 = <net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$CompatibilityMode IE>;
        <net.htmlparser.jericho.Config: net.htmlparser.jericho.Config$CompatibilityMode CurrentCompatibilityMode> = $r3;
        <net.htmlparser.jericho.Config: boolean IsApostropheEncoded> = 0;
        <net.htmlparser.jericho.Config: boolean IsHTMLEmptyElementTagRecognised> = 0;
        <net.htmlparser.jericho.Config: net.htmlparser.jericho.LoggerProvider LoggerProvider> = null;
        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");
        <net.htmlparser.jericho.Config: java.lang.String NewLine> = $r4;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.Config: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Config", 9251206036858L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.Element extends net.htmlparser.jericho.Segment
{
    private final net.htmlparser.jericho.StartTag startTag;
    private final net.htmlparser.jericho.EndTag endTag;
    private net.htmlparser.jericho.Segment content;
    net.htmlparser.jericho.Element parentElement;
    private int depth;
    private java.util.List childElements;
    static final net.htmlparser.jericho.Element NOT_CACHED;
    private static final boolean INCLUDE_INCORRECTLY_NESTED_CHILDREN_IN_HIERARCHY;
    private static final boolean[][] $VRc;

    void <init>(net.htmlparser.jericho.Source, net.htmlparser.jericho.StartTag, net.htmlparser.jericho.EndTag)
    {
        net.htmlparser.jericho.Element r0, $r8;
        net.htmlparser.jericho.Source r1;
        net.htmlparser.jericho.StartTag r2;
        net.htmlparser.jericho.EndTag r3, $r11;
        boolean[][] $r4;
        boolean[] r5;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.UnsupportedOperationException $r9;

        r0 := @this: net.htmlparser.jericho.Element;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        r2 := @parameter1: net.htmlparser.jericho.StartTag;
        r3 := @parameter2: net.htmlparser.jericho.EndTag;
        $r4 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        $i0 = r2.<net.htmlparser.jericho.StartTag: int begin>;
        r5[0] = 1;
        if r3 != null goto label1;

        $i1 = r2.<net.htmlparser.jericho.StartTag: int end>;
        r5[1] = 1;
        goto label2;

     label1:
        $i1 = r3.<net.htmlparser.jericho.EndTag: int end>;
        r5[2] = 1;

     label2:
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r1, $i0, $i1);
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment content> = null;
        $r8 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement> = $r8;
        r0.<net.htmlparser.jericho.Element: int depth> = -1;
        r0.<net.htmlparser.jericho.Element: java.util.List childElements> = null;
        $z0 = virtualinvoke r1.<net.htmlparser.jericho.Source: boolean isStreamed()>();
        r5[3] = 1;
        if $z0 == 0 goto label3;

        $r9 = new java.lang.UnsupportedOperationException;
        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Elements are not supported when using StreamedSource");
        r5[4] = 1;
        throw $r9;

     label3:
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag> = r2;
        r5[5] = 1;
        if r3 == null goto label4;

        $i2 = virtualinvoke r3.<net.htmlparser.jericho.EndTag: int length()>();
        r5[6] = 1;
        if $i2 != 0 goto label5;

     label4:
        $r11 = null;
        r5[7] = 1;
        goto label6;

     label5:
        $r11 = r3;
        r5[8] = 1;

     label6:
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag> = $r11;
        r5[9] = 1;
        return;
    }

    private void <init>()
    {
        net.htmlparser.jericho.Element r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>()>();
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment content> = null;
        $r3 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement> = $r3;
        r0.<net.htmlparser.jericho.Element: int depth> = -1;
        r0.<net.htmlparser.jericho.Element: java.util.List childElements> = null;
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag> = null;
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag> = null;
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Element getParentElement()
    {
        net.htmlparser.jericho.Element r0, $r3, $r4, $r11, $r12, $r13;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r5, $r9;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r6, $r8;
        net.htmlparser.jericho.StartTag $r7;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement>;
        $r4 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r2[0] = 1;
        if $r3 != $r4 goto label3;

        $r5 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $z0 = virtualinvoke $r5.<net.htmlparser.jericho.Source: boolean wasFullSequentialParseCalled()>();
        r2[1] = 1;
        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;
        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This operation is only possible after a full sequential parse has been performed");
        r2[2] = 1;
        throw $r6;

     label1:
        $r7 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        $z1 = virtualinvoke $r7.<net.htmlparser.jericho.StartTag: boolean isOrphaned()>();
        r2[3] = 1;
        if $z1 == 0 goto label2;

        $r8 = new java.lang.IllegalStateException;
        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This operation is only possible if a full sequential parse was performed immediately after construction of the Source object");
        r2[4] = 1;
        throw $r8;

     label2:
        $r9 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        virtualinvoke $r9.<net.htmlparser.jericho.Source: java.util.List getChildElements()>();
        $r11 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement>;
        $r12 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r2[5] = 1;
        if $r11 != $r12 goto label3;

        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement> = null;
        r2[6] = 1;

     label3:
        $r13 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement>;
        r2[7] = 1;
        return $r13;
    }

    public final java.util.List getChildElements()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3, $r4;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.Element: java.util.List childElements>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = r0.<net.htmlparser.jericho.Element: java.util.List childElements>;
        r2[1] = 1;
        goto label2;

     label1:
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Element: java.util.List getChildElements(int)>(-1);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r4;
    }

    final java.util.List getChildElements(int)
    {
        net.htmlparser.jericho.Element r0, r4, $r27, $r28;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag r3, $r6, $r9;
        java.util.List $r5, $r7, $r29, $r30;
        java.util.ArrayList $r8;
        net.htmlparser.jericho.EndTag $r10, $r11;
        net.htmlparser.jericho.Source $r12, $r14, $r16;
        net.htmlparser.jericho.TagType $r13;
        boolean $z0, $z1;
        net.htmlparser.jericho.Logger $r15, $r17;
        java.lang.StringBuilder $r18, $r19, $r21, $r22, $r24;
        java.lang.String $r20, $r23, $r25;

        r0 := @this: net.htmlparser.jericho.Element;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        r2[0] = 1;
        if i0 == -1 goto label1;

        r0.<net.htmlparser.jericho.Element: int depth> = i0;
        r2[1] = 1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Element: java.util.List childElements>;
        r2[2] = 1;
        if $r5 != null goto label12;

        $i4 = r0.<net.htmlparser.jericho.Element: int end>;
        $r6 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        $i5 = $r6.<net.htmlparser.jericho.StartTag: int end>;
        r2[3] = 1;
        if $i4 != $i5 goto label2;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r0.<net.htmlparser.jericho.Element: java.util.List childElements> = $r7;
        r2[4] = 1;
        goto label12;

     label2:
        r2[5] = 1;
        if i0 != -1 goto label3;

        $i6 = -1;
        r2[6] = 1;
        goto label4;

     label3:
        $i6 = i0 + 1;
        r2[7] = 1;

     label4:
        i1 = $i6;
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r0.<net.htmlparser.jericho.Element: java.util.List childElements> = $r8;
        $r9 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        i2 = $r9.<net.htmlparser.jericho.StartTag: int end>;
        $r10 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag>;
        r2[8] = 1;
        if $r10 != null goto label5;

        $i7 = r0.<net.htmlparser.jericho.Element: int end>;
        r2[9] = 1;
        goto label6;

     label5:
        $r11 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag>;
        $i7 = $r11.<net.htmlparser.jericho.EndTag: int begin>;
        r2[10] = 1;

     label6:
        i3 = $i7;
        r2[11] = 1;

     label7:
        $r12 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        r3 = virtualinvoke $r12.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int)>(i2);
        r2[12] = 1;
        if r3 == null goto label12;

        $i8 = r3.<net.htmlparser.jericho.StartTag: int begin>;
        r2[13] = 1;
        if $i8 < i3 goto label8;

        r2[14] = 1;
        goto label12;

     label8:
        $r13 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.TagType getTagType()>();
        $z0 = virtualinvoke $r13.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r2[15] = 1;
        if $z0 == 0 goto label9;

        i2 = r3.<net.htmlparser.jericho.StartTag: int end>;
        r2[16] = 1;
        goto label7;

     label9:
        r4 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i9 = r4.<net.htmlparser.jericho.Element: int end>;
        $i10 = r0.<net.htmlparser.jericho.Element: int end>;
        r2[17] = 1;
        if $i9 <= $i10 goto label10;

        $r14 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r15 = $r14.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z1 = interfaceinvoke $r15.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r2[18] = 1;
        if $z1 == 0 goto label10;

        $r16 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r17 = $r16.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child ");
        $r20 = virtualinvoke r4.<net.htmlparser.jericho.Element: java.lang.String getDebugInfo()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extends beyond end of parent ");
        $r23 = virtualinvoke r0.<net.htmlparser.jericho.Element: java.lang.String getDebugInfo()>();
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r17.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r25);
        r2[19] = 1;

     label10:
        virtualinvoke r4.<net.htmlparser.jericho.Element: java.util.List getChildElements(int)>(i1);
        $r27 = r4.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement>;
        $r28 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r2[20] = 1;
        if $r27 != $r28 goto label11;

        r4.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement> = r0;
        $r29 = r0.<net.htmlparser.jericho.Element: java.util.List childElements>;
        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>(r4);
        r2[21] = 1;

     label11:
        i2 = r4.<net.htmlparser.jericho.Element: int end>;
        r2[22] = 1;
        goto label7;

     label12:
        $r30 = r0.<net.htmlparser.jericho.Element: java.util.List childElements>;
        r2[23] = 1;
        return $r30;
    }

    public int getDepth()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $i0 = r0.<net.htmlparser.jericho.Element: int depth>;
        r2[0] = 1;
        if $i0 != -1 goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element getParentElement()>();
        $i1 = r0.<net.htmlparser.jericho.Element: int depth>;
        r2[1] = 1;
        if $i1 != -1 goto label1;

        r0.<net.htmlparser.jericho.Element: int depth> = 0;
        r2[2] = 1;

     label1:
        $i2 = r0.<net.htmlparser.jericho.Element: int depth>;
        r2[3] = 1;
        return $i2;
    }

    public net.htmlparser.jericho.Segment getContent()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3, $r4, $r7;
        net.htmlparser.jericho.Source $r5;
        net.htmlparser.jericho.StartTag $r6;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment content>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = new net.htmlparser.jericho.Segment;
        $r5 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r6 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        $i0 = $r6.<net.htmlparser.jericho.StartTag: int end>;
        $i1 = virtualinvoke r0.<net.htmlparser.jericho.Element: int getContentEnd()>();
        specialinvoke $r4.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r5, $i0, $i1);
        r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment content> = $r4;
        r2[1] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment content>;
        r2[2] = 1;
        return $r7;
    }

    public net.htmlparser.jericho.StartTag getStartTag()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag $r3;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.EndTag getEndTag()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTag $r3;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getName()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.StartTag: java.lang.String getName()>();
        r2[0] = 1;
        return $r4;
    }

    public boolean isEmpty()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        $i0 = $r3.<net.htmlparser.jericho.StartTag: int end>;
        $i1 = virtualinvoke r0.<net.htmlparser.jericho.Element: int getContentEnd()>();
        r2[0] = 1;
        if $i0 != $i1 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public boolean isEmptyElementTag()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        $z0 = virtualinvoke $r3.<net.htmlparser.jericho.StartTag: boolean isEmptyElementTag()>();
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.Attributes getAttributes()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag $r3;
        net.htmlparser.jericho.Attributes $r4;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r2[0] = 1;
        return $r4;
    }

    public java.lang.String getAttributeValue(java.lang.String)
    {
        net.htmlparser.jericho.Element r0;
        java.lang.String r1, $r5;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTag $r4;

        r0 := @this: net.htmlparser.jericho.Element;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.StartTag: java.lang.String getAttributeValue(java.lang.String)>(r1);
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.FormControl getFormControl()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl $r3;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = staticinvoke <net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl construct(net.htmlparser.jericho.Element)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.Element r0, $r4;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r5;
        net.htmlparser.jericho.StartTag $r7, $r14;
        boolean $z0;
        net.htmlparser.jericho.EndTag $r10, $r11;
        java.lang.String $r16, $r18;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r4 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r2[0] = 1;
        if r0 != $r4 goto label1;

        r2[1] = 1;
        return "NOT_CACHED";

     label1:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r3 = $r5;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Element ");
        $r7 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        virtualinvoke $r7.<net.htmlparser.jericho.StartTag: java.lang.StringBuilder appendDebugTag(java.lang.StringBuilder)>(r3);
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.Element: boolean isEmpty()>();
        r2[2] = 1;
        if $z0 != 0 goto label2;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        r2[3] = 1;

     label2:
        $r10 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag>;
        r2[4] = 1;
        if $r10 == null goto label3;

        $r11 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag>;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r11);
        r2[5] = 1;

     label3:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r14 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag startTag>;
        virtualinvoke $r14.<net.htmlparser.jericho.StartTag: java.lang.StringBuilder appendDebugTagType(java.lang.StringBuilder)>(r3);
        $r16 = specialinvoke r0.<net.htmlparser.jericho.Segment: java.lang.String getDebugInfo()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[6] = 1;
        return $r18;
    }

    int getContentEnd()
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTag $r3, $r4;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Element: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag endTag>;
        $i0 = $r4.<net.htmlparser.jericho.EndTag: int begin>;
        r2[1] = 1;
        goto label2;

     label1:
        $i0 = r0.<net.htmlparser.jericho.Element: int end>;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $i0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Element $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Element: boolean[][] $VRi()>();
        r1 = $r0[17];
        $r2 = new net.htmlparser.jericho.Element;
        specialinvoke $r2.<net.htmlparser.jericho.Element: void <init>()>();
        <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        $r0 = newmultiarray (boolean)[18][];
        <net.htmlparser.jericho.Element: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[10];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[8];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[24];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[4];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[7];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[4];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Element", 5407591419886632952L);
        return $r0;
    }
}
final class net.htmlparser.jericho.EncodingDetector extends java.lang.Object
{
    private final java.io.InputStream inputStream;
    private java.lang.String encoding;
    private java.lang.String encodingSpecificationInfo;
    private final java.lang.String preliminaryEncoding;
    private final java.lang.String preliminaryEncodingSpecificationInfo;
    private final java.lang.String alternativePreliminaryEncoding;
    private net.htmlparser.jericho.LoggerQueue logger;
    private static final int PREVIEW_BYTE_COUNT;
    private static final java.lang.String UTF_8;
    private static final java.lang.String ISO_8859_1;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.net.URLConnection) throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        java.net.URLConnection r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StreamEncodingDetector $r4;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        r1 := @parameter0: java.net.URLConnection;
        $r2 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        $r4 = new net.htmlparser.jericho.StreamEncodingDetector;
        specialinvoke $r4.<net.htmlparser.jericho.StreamEncodingDetector: void <init>(java.net.URLConnection)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: void <init>(net.htmlparser.jericho.StreamEncodingDetector)>($r4);
        r3[0] = 1;
        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        java.io.InputStream r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StreamEncodingDetector $r4;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = new net.htmlparser.jericho.StreamEncodingDetector;
        specialinvoke $r4.<net.htmlparser.jericho.StreamEncodingDetector: void <init>(java.io.InputStream)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: void <init>(net.htmlparser.jericho.StreamEncodingDetector)>($r4);
        r3[0] = 1;
        return;
    }

    public void <init>(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        java.io.InputStream r1;
        java.lang.String r2, $r10;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.LoggerQueue $r5;
        boolean $z0;
        java.io.UnsupportedEncodingException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: void <init>(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "preliminary encoding set explicitly", null);
        $r5 = new net.htmlparser.jericho.LoggerQueue;
        specialinvoke $r5.<net.htmlparser.jericho.LoggerQueue: void <init>()>();
        r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger> = $r5;
        $z0 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean isEncodingSupported(java.lang.String)>(r2);
        r4[0] = 1;
        if $z0 != 0 goto label1;

        $r6 = new java.io.UnsupportedEncodingException;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified as preliminaryEncoding constructor argument");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r10);
        r4[1] = 1;
        throw $r6;

     label1:
        specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: boolean detectDocumentSpecifiedEncoding()>();
        r4[2] = 1;
        return;
    }

    private void <init>(net.htmlparser.jericho.StreamEncodingDetector) throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        net.htmlparser.jericho.StreamEncodingDetector r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        r1 := @parameter0: net.htmlparser.jericho.StreamEncodingDetector;
        $r2 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: void <init>(net.htmlparser.jericho.StreamEncodingDetector,java.lang.String)>(r1, "ISO-8859-1");
        r3[0] = 1;
        return;
    }

    private void <init>(net.htmlparser.jericho.StreamEncodingDetector, java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        net.htmlparser.jericho.StreamEncodingDetector r1;
        java.lang.String r2, $r6, $r7, $r9, $r10;
        boolean[][] $r3;
        boolean[] r4;
        java.io.InputStream $r5;
        net.htmlparser.jericho.LoggerQueue $r8;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        r1 := @parameter0: net.htmlparser.jericho.StreamEncodingDetector;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[4];
        $r5 = virtualinvoke r1.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream getInputStream()>();
        $r6 = virtualinvoke r1.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String getEncoding()>();
        $r7 = virtualinvoke r1.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String getEncodingSpecificationInfo()>();
        specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: void <init>(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7, r2);
        $r8 = virtualinvoke r1.<net.htmlparser.jericho.StreamEncodingDetector: net.htmlparser.jericho.LoggerQueue getLoggerQueue()>();
        r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger> = $r8;
        $z0 = virtualinvoke r1.<net.htmlparser.jericho.StreamEncodingDetector: boolean isDifinitive()>();
        r4[0] = 1;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<net.htmlparser.jericho.StreamEncodingDetector: boolean isDocumentSpecifiedEncodingPossible()>();
        r4[1] = 1;
        if $z1 != 0 goto label2;

     label1:
        $r9 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        $r10 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncodingSpecificationInfo>;
        specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: boolean setEncoding(java.lang.String,java.lang.String)>($r9, $r10);
        r4[2] = 1;
        goto label3;

     label2:
        specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: boolean detectDocumentSpecifiedEncoding()>();
        r4[3] = 1;

     label3:
        r4[4] = 1;
        return;
    }

    private void <init>(java.io.InputStream, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        java.io.InputStream r1, $r9;
        java.lang.String r2, r3, r4, $r14;
        boolean[][] $r5;
        boolean[] r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r12, $r13, r17;
        net.htmlparser.jericho.LoggerQueue r15;
        java.io.BufferedInputStream r16;
        java.io.UnsupportedEncodingException r18;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        r1 := @parameter0: java.io.InputStream;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        $r5 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r6 = $r5[5];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encoding> = null;
        r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encodingSpecificationInfo> = null;
        r15 = new net.htmlparser.jericho.LoggerQueue;
        specialinvoke r15.<net.htmlparser.jericho.LoggerQueue: void <init>()>();
        r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger> = r15;
        $z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();
        r6[0] = 1;
        if $z0 == 0 goto label1;

        $r9 = r1;
        r6[1] = 1;
        goto label2;

     label1:
        r16 = new java.io.BufferedInputStream;
        $r9 = r16;
        specialinvoke r16.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);
        r6[2] = 1;

     label2:
        r0.<net.htmlparser.jericho.EncodingDetector: java.io.InputStream inputStream> = $r9;
        r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding> = r2;
        r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncodingSpecificationInfo> = r3;
        r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String alternativePreliminaryEncoding> = r4;
        r6[3] = 1;
        if r4 == null goto label3;

        $z1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean isEncodingSupported(java.lang.String)>(r4);
        r6[4] = 1;
        if $z1 != 0 goto label3;

        r18 = new java.io.UnsupportedEncodingException;
        r17 = new java.lang.StringBuilder;
        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified as alternativePreliminaryEncoding constructor argument");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r18.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r14);
        r6[5] = 1;
        throw r18;

     label3:
        r6[6] = 1;
        return;
    }

    public java.io.InputStream getInputStream()
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.InputStream $r3;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.EncodingDetector: java.io.InputStream inputStream>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getEncoding()
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encoding>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getEncodingSpecificationInfo()
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encodingSpecificationInfo>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getPreliminaryEncoding()
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getPreliminaryEncodingSpecificationInfo()
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncodingSpecificationInfo>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.LoggerQueue getLoggerQueue()
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.LoggerQueue $r3;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        r2[0] = 1;
        return $r3;
    }

    public java.io.Reader openReader() throws java.io.UnsupportedEncodingException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r6, $r9, $r12, $r14, $r17;
        java.io.InputStreamReader $r4, $r15;
        java.io.InputStream $r5, $r16;
        boolean $z0;
        java.io.UnsupportedEncodingException $r7;
        java.lang.StringBuilder $r8, $r10, $r11, $r13;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encoding>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = new java.io.InputStreamReader;
        $r5 = r0.<net.htmlparser.jericho.EncodingDetector: java.io.InputStream inputStream>;
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r5, "ISO-8859-1");
        r2[1] = 1;
        return $r4;

     label1:
        $r6 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encoding>;
        $z0 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean isEncodingSupported(java.lang.String)>($r6);
        r2[2] = 1;
        if $z0 != 0 goto label2;

        $r7 = new java.io.UnsupportedEncodingException;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encoding>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r12 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encodingSpecificationInfo>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r14);
        r2[3] = 1;
        throw $r7;

     label2:
        $r15 = new java.io.InputStreamReader;
        $r16 = r0.<net.htmlparser.jericho.EncodingDetector: java.io.InputStream inputStream>;
        $r17 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encoding>;
        specialinvoke $r15.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r16, $r17);
        r2[4] = 1;
        return $r15;
    }

    private boolean setEncoding(java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.EncodingDetector r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[13];
        r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encoding> = r1;
        r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String encodingSpecificationInfo> = r2;
        r4[0] = 1;
        return 1;
    }

    private boolean detectDocumentSpecifiedEncoding() throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r5, $r8, $r9, $r12, $r15, $r17, $r19, $r26, $r29, $r31, $r32, $r33, $r34, $r35, $r38, $r45, $r50, $r54, $r61, $r66, $r67, $r70, $r73, $r77, $r78, $r80, $r84;
        net.htmlparser.jericho.Source r4;
        java.nio.charset.IllegalCharsetNameException r6, $r51;
        java.io.InputStream $r7, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.io.UnsupportedEncodingException $r10;
        java.lang.StringBuilder $r11, $r13, $r14, $r16, $r22, $r23, $r24, $r25, $r27, $r28, $r30, $r36, $r37, $r39, $r40, $r43, $r44, $r46, $r47, $r48, $r49, $r52, $r53, $r55, $r56, $r59, $r60, $r62, $r63, $r64, $r65, $r68, $r69, $r71, $r72, $r74, $r75, $r76, $r79, $r81, $r82, $r83;
        net.htmlparser.jericho.LoggerQueue $r20, $r21, $r41, $r42, $r57, $r58;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r7 = r0.<net.htmlparser.jericho.EncodingDetector: java.io.InputStream inputStream>;
        virtualinvoke $r7.<java.io.InputStream: void mark(int)>(2048);
        $r8 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        $z0 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean isEncodingSupported(java.lang.String)>($r8);
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r3 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        r2[1] = 1;
        goto label3;

     label1:
        $r9 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String alternativePreliminaryEncoding>;
        r2[2] = 1;
        if $r9 != null goto label2;

        $r10 = new java.io.UnsupportedEncodingException;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r15 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncodingSpecificationInfo>;
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r17);
        r2[3] = 1;
        throw $r10;

     label2:
        r3 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String alternativePreliminaryEncoding>;
        r2[4] = 1;

     label3:
        r4 = specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.Source getPreviewSource(java.lang.String)>(r3);
        $r18 = r0.<net.htmlparser.jericho.EncodingDetector: java.io.InputStream inputStream>;
        virtualinvoke $r18.<java.io.InputStream: void reset()>();
        virtualinvoke r4.<net.htmlparser.jericho.Source: void setLogger(net.htmlparser.jericho.Logger)>(null);
        $r19 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        r2[5] = 1;
        if $r19 == r3 goto label4;

        $r20 = r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        $z1 = virtualinvoke $r20.<net.htmlparser.jericho.LoggerQueue: boolean isWarnEnabled()>();
        r2[6] = 1;
        if $z1 == 0 goto label4;

        $r21 = r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alternative encoding ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" substituted for unsupported preliminary encoding ");
        $r26 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r29 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncodingSpecificationInfo>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r21.<net.htmlparser.jericho.LoggerQueue: void warn(java.lang.String)>($r31);
        r2[7] = 1;

     label4:
        $r32 = virtualinvoke r4.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        r2[8] = 1;
        if $r32 != null goto label6;

        $z2 = virtualinvoke r4.<net.htmlparser.jericho.Source: boolean isXML()>();
        r2[9] = 1;
        if $z2 == 0 goto label5;

        $z3 = specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: boolean setEncoding(java.lang.String,java.lang.String)>("UTF-8", "mandatory XML encoding when no BOM or encoding declaration is present");
        r2[10] = 1;
        return $z3;

     label5:
        r5 = "no encoding specified in document";
        r2[11] = 1;
        goto label11;

     label6:
        $r33 = virtualinvoke r4.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        $z4 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean isEncodingSupported(java.lang.String)>($r33);
        r2[12] = 1;
        if $z4 == 0 goto label8;

        $r34 = virtualinvoke r4.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        $r35 = virtualinvoke r4.<net.htmlparser.jericho.Source: java.lang.String getEncodingSpecificationInfo()>();
        $z5 = specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: boolean setEncoding(java.lang.String,java.lang.String)>($r34, $r35);
        r2[13] = 1;

     label7:
        return $z5;

     label8:
        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoding ");
        $r38 = virtualinvoke r4.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in document is not supported");
        r5 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        $r41 = r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        $z6 = virtualinvoke $r41.<net.htmlparser.jericho.LoggerQueue: boolean isWarnEnabled()>();
        r2[14] = 1;
        if $z6 == 0 goto label9;

        $r42 = r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported encoding ");
        $r45 = virtualinvoke r4.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in document, using preliminary encoding ");
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead");
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r42.<net.htmlparser.jericho.LoggerQueue: void warn(java.lang.String)>($r50);
        r2[15] = 1;

     label9:
        r2[16] = 1;
        goto label11;

     label10:
        $r51 := @caughtexception;
        r6 = $r51;
        $r52 = new java.lang.StringBuilder;
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal encoding ");
        $r54 = virtualinvoke r4.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in document");
        r5 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
        $r57 = r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        $z7 = virtualinvoke $r57.<net.htmlparser.jericho.LoggerQueue: boolean isWarnEnabled()>();
        r2[17] = 1;
        if $z7 == 0 goto label11;

        $r58 = r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal encoding ");
        $r61 = virtualinvoke r4.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in document, using preliminary encoding ");
        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead");
        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r58.<net.htmlparser.jericho.LoggerQueue: void warn(java.lang.String)>($r66);
        r2[18] = 1;

     label11:
        $r67 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        r2[19] = 1;
        if $r67 == r3 goto label12;

        $r68 = new java.lang.StringBuilder;
        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();
        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("alternative encoding substituted for unsupported preliminary encoding ");
        $r70 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r73 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncodingSpecificationInfo>;
        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);
        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();
        $z8 = specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: boolean setEncoding(java.lang.String,java.lang.String)>(r3, $r77);
        r2[20] = 1;
        return $z8;

     label12:
        $r78 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncoding>;
        $r79 = new java.lang.StringBuilder;
        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();
        $r80 = r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String preliminaryEncodingSpecificationInfo>;
        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);
        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();
        $z9 = specialinvoke r0.<net.htmlparser.jericho.EncodingDetector: boolean setEncoding(java.lang.String,java.lang.String)>($r78, $r84);
        r2[21] = 1;
        return $z9;

        catch java.nio.charset.IllegalCharsetNameException from label6 to label7 with label10;
        catch java.nio.charset.IllegalCharsetNameException from label8 to label9 with label10;
    }

    private net.htmlparser.jericho.Source getPreviewSource(java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        byte[] r4;
        int i0, i1;
        java.io.InputStream $r5;
        byte $b2;
        net.htmlparser.jericho.Source $r6;
        java.io.InputStreamReader $r7;
        java.io.ByteArrayInputStream $r8;

        r0 := @this: net.htmlparser.jericho.EncodingDetector;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[15];
        r4 = newarray (byte)[2048];
        i0 = 0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i0 >= 2048 goto label3;

        $r5 = r0.<net.htmlparser.jericho.EncodingDetector: java.io.InputStream inputStream>;
        i1 = virtualinvoke $r5.<java.io.InputStream: int read()>();
        r3[2] = 1;
        if i1 != -1 goto label2;

        r3[3] = 1;
        goto label3;

     label2:
        $b2 = (byte) i1;
        r4[i0] = $b2;
        i0 = i0 + 1;
        r3[4] = 1;
        goto label1;

     label3:
        $r6 = new net.htmlparser.jericho.Source;
        $r7 = new java.io.InputStreamReader;
        $r8 = new java.io.ByteArrayInputStream;
        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r4, 0, i0);
        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r8, r1);
        specialinvoke $r6.<net.htmlparser.jericho.Source: void <init>(java.io.Reader,java.lang.String)>($r7, null);
        r3[5] = 1;
        return $r6;
    }

    static boolean isEncodingSupported(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.nio.charset.IllegalCharsetNameException r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];

     label1:
        $z0 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>(r0);
        r2[0] = 1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;
        r3 = $r4;
        r2[1] = 1;
        return 0;

        catch java.nio.charset.IllegalCharsetNameException from label1 to label2 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRi()>();
        r1 = $r0[17];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        $r0 = newmultiarray (boolean)[18][];
        <net.htmlparser.jericho.EncodingDetector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[7];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[5];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[22];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[6];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[2];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/EncodingDetector", 3170885157996698045L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.EndTag extends net.htmlparser.jericho.Tag
{
    private final net.htmlparser.jericho.EndTagType endTagType;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(net.htmlparser.jericho.Source, int, int, net.htmlparser.jericho.EndTagType, java.lang.String)
    {
        net.htmlparser.jericho.EndTag r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        net.htmlparser.jericho.EndTagType r2;
        java.lang.String r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: net.htmlparser.jericho.EndTag;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: net.htmlparser.jericho.EndTagType;
        r3 := @parameter4: java.lang.String;
        $r4 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<net.htmlparser.jericho.Tag: void <init>(net.htmlparser.jericho.Source,int,int,java.lang.String)>(r1, i0, i1, r3);
        r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType endTagType> = r2;
        r5[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Element getElement()
    {
        net.htmlparser.jericho.EndTag r0, $r9;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1;
        net.htmlparser.jericho.StartTag r3;
        net.htmlparser.jericho.Element r4, $r5, $r6, $r7;
        net.htmlparser.jericho.Source $r8;
        null_type $n0;

        r0 := @this: net.htmlparser.jericho.EndTag;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r5 = r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.Element element>;
        $r6 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r2[0] = 1;
        if $r5 == $r6 goto label1;

        $r7 = r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.Element element>;
        r2[1] = 1;
        return $r7;

     label1:
        i0 = r0.<net.htmlparser.jericho.EndTag: int begin>;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        if i0 == 0 goto label5;

        $r8 = r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.Source source>;
        $i1 = i0 - 1;
        r3 = virtualinvoke $r8.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getPreviousStartTag(int)>($i1);
        r2[4] = 1;
        if r3 != null goto label3;

        r2[5] = 1;
        goto label5;

     label3:
        r4 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $r9 = virtualinvoke r4.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag getEndTag()>();
        r2[6] = 1;
        if $r9 != r0 goto label4;

        r2[7] = 1;
        return r4;

     label4:
        i0 = r3.<net.htmlparser.jericho.StartTag: int begin>;
        r2[8] = 1;
        goto label2;

     label5:
        $n0 = null;
        r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.Element element> = $n0;
        r2[9] = 1;
        return $n0;
    }

    public net.htmlparser.jericho.EndTagType getEndTagType()
    {
        net.htmlparser.jericho.EndTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagType $r3;

        r0 := @this: net.htmlparser.jericho.EndTag;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType endTagType>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.TagType getTagType()
    {
        net.htmlparser.jericho.EndTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagType $r3;

        r0 := @this: net.htmlparser.jericho.EndTag;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType endTagType>;
        r2[0] = 1;
        return $r3;
    }

    public boolean isUnregistered()
    {
        net.htmlparser.jericho.EndTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagType $r3, $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.EndTag;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType endTagType>;
        $r4 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType UNREGISTERED>;
        r2[0] = 1;
        if $r3 != $r4 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public java.lang.String tidy()
    {
        net.htmlparser.jericho.EndTag r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.EndTag;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.EndTag: java.lang.String toString()>();
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String generateHTML(java.lang.String)
    {
        java.lang.String r0, $r4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagType $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.EndTagType: java.lang.String generateHTML(java.lang.String)>(r0);
        r2[0] = 1;
        return $r4;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.EndTag r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r4, $r5, $r9, $r12;
        net.htmlparser.jericho.EndTagType $r7, $r8, $r10;
        java.lang.String $r11, $r14, $r16;

        r0 := @this: net.htmlparser.jericho.EndTag;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r0);
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r7 = r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType endTagType>;
        $r8 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        r2[0] = 1;
        if $r7 == $r8 goto label1;

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
        $r10 = r0.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType endTagType>;
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.EndTagType: java.lang.String getDescription()>();
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");
        r2[1] = 1;

     label1:
        $r14 = specialinvoke r0.<net.htmlparser.jericho.Tag: java.lang.String getDebugInfo()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[2] = 1;
        return $r16;
    }

    static net.htmlparser.jericho.EndTag getPrevious(net.htmlparser.jericho.Source, int, java.lang.String, net.htmlparser.jericho.EndTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, $i2, i3;
        java.lang.String r1, r5, $r17;
        net.htmlparser.jericho.EndTagType r2, $r16;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.ParseText r6;
        net.htmlparser.jericho.EndTag r7, $r9;
        net.htmlparser.jericho.Tag $r8, $r15;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r13, $r14;
        null_type $n0;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r19, r20;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: net.htmlparser.jericho.EndTagType;
        $r3 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[8];
        r4[0] = 1;
        if r1 != null goto label1;

        $r8 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>(r0, i0, r2);
        $r9 = (net.htmlparser.jericho.EndTag) $r8;
        r4[1] = 1;
        return $r9;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        r4[2] = 1;
        if $i2 != 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;
        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name argument must not be zero length");
        r4[3] = 1;
        throw $r10;

     label2:
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r6 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = i0;
        r4[4] = 1;

     label4:
        i3 = interfaceinvoke r6.<net.htmlparser.jericho.ParseText: int lastIndexOf(java.lang.String,int)>(r5, i1);
        r4[5] = 1;
        if i3 != -1 goto label6;

        $n0 = null;
        r4[6] = 1;

     label5:
        return $n0;

     label6:
        $r15 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getTagAt(int)>(i3);
        r7 = (net.htmlparser.jericho.EndTag) $r15;
        r4[7] = 1;
        if r7 == null goto label8;

        $r16 = virtualinvoke r7.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType getEndTagType()>();
        r4[8] = 1;
        if $r16 != r2 goto label8;

        $r17 = virtualinvoke r7.<net.htmlparser.jericho.EndTag: java.lang.String getName()>();
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r17);
        r4[9] = 1;
        if $z0 == 0 goto label8;

        r4[10] = 1;

     label7:
        return r7;

     label8:
        i1 = i3 + -1;
        r4[11] = 1;
        if i1 >= 0 goto label4;

        r4[12] = 1;

     label9:
        goto label11;

     label10:
        $r19 := @caughtexception;
        r20 = $r19;
        r4[13] = 1;
        throw r20;

     label11:
        r4[14] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label3 to label5 with label10;
        catch java.lang.IndexOutOfBoundsException from label6 to label7 with label10;
        catch java.lang.IndexOutOfBoundsException from label8 to label9 with label10;
    }

    static net.htmlparser.jericho.EndTag getNext(net.htmlparser.jericho.Source, int, java.lang.String, net.htmlparser.jericho.EndTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, $i2, i3, $i4;
        java.lang.String r1, r5, $r17;
        net.htmlparser.jericho.EndTagType r2, $r16;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.ParseText r6;
        net.htmlparser.jericho.EndTag r7, $r9;
        net.htmlparser.jericho.Tag $r8, $r15;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r13, $r14;
        null_type $n0;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r19, r20;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: net.htmlparser.jericho.EndTagType;
        $r3 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[9];
        r4[0] = 1;
        if r1 != null goto label1;

        $r8 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>(r0, i0, r2);
        $r9 = (net.htmlparser.jericho.EndTag) $r8;
        r4[1] = 1;
        return $r9;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        r4[2] = 1;
        if $i2 != 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;
        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name argument must not be zero length");
        r4[3] = 1;
        throw $r10;

     label2:
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r6 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = i0;
        r4[4] = 1;

     label4:
        i3 = interfaceinvoke r6.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int)>(r5, i1);
        r4[5] = 1;
        if i3 != -1 goto label6;

        $n0 = null;
        r4[6] = 1;

     label5:
        return $n0;

     label6:
        $r15 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getTagAt(int)>(i3);
        r7 = (net.htmlparser.jericho.EndTag) $r15;
        r4[7] = 1;
        if r7 == null goto label8;

        $r16 = virtualinvoke r7.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType getEndTagType()>();
        r4[8] = 1;
        if $r16 != r2 goto label8;

        $r17 = virtualinvoke r7.<net.htmlparser.jericho.EndTag: java.lang.String getName()>();
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r17);
        r4[9] = 1;
        if $z0 == 0 goto label8;

        r4[10] = 1;

     label7:
        return r7;

     label8:
        i1 = i3 + 1;
        $i4 = r0.<net.htmlparser.jericho.Source: int end>;
        r4[11] = 1;
        if i1 < $i4 goto label4;

        r4[12] = 1;

     label9:
        goto label11;

     label10:
        $r19 := @caughtexception;
        r20 = $r19;
        r4[13] = 1;

     label11:
        r4[14] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label3 to label5 with label10;
        catch java.lang.IndexOutOfBoundsException from label6 to label7 with label10;
        catch java.lang.IndexOutOfBoundsException from label8 to label9 with label10;
    }

    static net.htmlparser.jericho.EndTag getPrevious(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        boolean $z0;
        net.htmlparser.jericho.EndTag $r4;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];

     label1:
        r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        if r3 != null goto label2;

        r2[1] = 1;
        return null;

     label2:
        $z0 = r3 instanceof net.htmlparser.jericho.EndTag;
        r2[2] = 1;
        if $z0 == 0 goto label3;

        $r4 = (net.htmlparser.jericho.EndTag) r3;
        r2[3] = 1;
        return $r4;

     label3:
        i0 = i0 + -1;
        r2[4] = 1;
        goto label1;
    }

    static net.htmlparser.jericho.EndTag getNext(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        boolean $z0;
        net.htmlparser.jericho.EndTag $r4;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.EndTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];

     label1:
        r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        if r3 != null goto label2;

        r2[1] = 1;
        return null;

     label2:
        $z0 = r3 instanceof net.htmlparser.jericho.EndTag;
        r2[2] = 1;
        if $z0 == 0 goto label3;

        $r4 = (net.htmlparser.jericho.EndTag) r3;
        r2[3] = 1;
        return $r4;

     label3:
        i0 = i0 + 1;
        r2[4] = 1;
        goto label1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.EndTag: boolean[][] $VRi()>();
        r1 = $r0[12];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = newmultiarray (boolean)[13][];
        <net.htmlparser.jericho.EndTag: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[10];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[15];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[15];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[5];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/EndTag", 6617853459979752028L);
        return $r0;
    }
}
public abstract class net.htmlparser.jericho.EndTagType extends net.htmlparser.jericho.TagType
{
    static final java.lang.String START_DELIMITER_PREFIX;
    public static final net.htmlparser.jericho.EndTagType UNREGISTERED;
    public static final net.htmlparser.jericho.EndTagType NORMAL;
    private static final boolean[][] $VRc;

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.EndTagType r0;
        java.lang.String r1, r2, r3, $r6, $r7;
        boolean z0, $z1;
        boolean[][] $r4;
        boolean[] r5;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: net.htmlparser.jericho.EndTagType;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        $r4 = <net.htmlparser.jericho.EndTagType: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.EndTagType: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke r0.<net.htmlparser.jericho.TagType: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, $r6, r3, z0, "</");
        $r7 = virtualinvoke r0.<net.htmlparser.jericho.EndTagType: java.lang.String getStartDelimiter()>();
        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("</");
        r5[0] = 1;
        if $z1 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("startDelimiter of an end tag must start with \"</\"");
        r5[1] = 1;
        throw $r8;

     label1:
        r5[2] = 1;
        return;
    }

    public net.htmlparser.jericho.StartTagType getCorrespondingStartTagType()
    {
        net.htmlparser.jericho.EndTagType r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.EndTagType;
        $r1 = <net.htmlparser.jericho.EndTagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r2[0] = 1;
        return null;
    }

    public java.lang.String getEndTagName(java.lang.String)
    {
        net.htmlparser.jericho.EndTagType r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.EndTagType;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.EndTagType: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EndTagType: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r3[0] = 1;
        return r1;
    }

    public java.lang.String generateHTML(java.lang.String)
    {
        net.htmlparser.jericho.EndTagType r0;
        java.lang.String r1, $r6, $r8, $r10;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r9;

        r0 := @this: net.htmlparser.jericho.EndTagType;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.EndTagType: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EndTagType: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.EndTagType: java.lang.String getEndTagName(java.lang.String)>(r1);
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.EndTagType: java.lang.String getClosingDelimiter()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[0] = 1;
        return $r10;
    }

    protected final net.htmlparser.jericho.EndTag constructEndTag(net.htmlparser.jericho.Source, int, int, java.lang.String)
    {
        net.htmlparser.jericho.EndTagType r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.EndTag $r5;

        r0 := @this: net.htmlparser.jericho.EndTagType;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        $r3 = <net.htmlparser.jericho.EndTagType: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.EndTagType: boolean[][] $VRi()>();

     label0:
        r4 = $r3[4];
        $r5 = new net.htmlparser.jericho.EndTag;
        specialinvoke $r5.<net.htmlparser.jericho.EndTag: void <init>(net.htmlparser.jericho.Source,int,int,net.htmlparser.jericho.EndTagType,java.lang.String)>(r1, i0, i1, r0, r2);
        r4[0] = 1;
        return $r5;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.EndTagTypeUnregistered $r2;
        net.htmlparser.jericho.EndTagTypeNormal $r3;

        $r0 = staticinvoke <net.htmlparser.jericho.EndTagType: boolean[][] $VRi()>();
        r1 = $r0[5];
        $r2 = <net.htmlparser.jericho.EndTagTypeUnregistered: net.htmlparser.jericho.EndTagTypeUnregistered INSTANCE>;
        <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType UNREGISTERED> = $r2;
        $r3 = <net.htmlparser.jericho.EndTagTypeNormal: net.htmlparser.jericho.EndTagTypeNormal INSTANCE>;
        <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.EndTagType: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[3];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/EndTagType", -7853217209963507627L);
        return $r0;
    }
}
public class net.htmlparser.jericho.EndTagTypeGenericImplementation extends net.htmlparser.jericho.EndTagType
{
    private final java.lang.String staticString;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        net.htmlparser.jericho.EndTagTypeGenericImplementation r0;
        java.lang.String r1, r2, r3, $r10;
        boolean z0, z1;
        boolean[][] $r4;
        boolean[] r5;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: net.htmlparser.jericho.EndTagTypeGenericImplementation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        $r4 = <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<net.htmlparser.jericho.EndTagType: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, z0);
        r5[0] = 1;
        if z1 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        r5[1] = 1;
        goto label2;

     label1:
        $r10 = null;
        r5[2] = 1;

     label2:
        r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String staticString> = $r10;
        r5[3] = 1;
        return;
    }

    protected final boolean isStatic()
    {
        net.htmlparser.jericho.EndTagTypeGenericImplementation r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.EndTagTypeGenericImplementation;
        $r1 = <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String staticString>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public java.lang.String getEndTagName(java.lang.String)
    {
        net.htmlparser.jericho.EndTagTypeGenericImplementation r0;
        java.lang.String r1, $r4;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.EndTagTypeGenericImplementation;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean isStatic()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getNamePrefix()>();
        r3[1] = 1;
        goto label2;

     label1:
        $r4 = r1;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $r4;
    }

    public java.lang.String generateHTML(java.lang.String)
    {
        net.htmlparser.jericho.EndTagTypeGenericImplementation r0;
        java.lang.String r1, $r4;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.EndTagTypeGenericImplementation;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean isStatic()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String staticString>;
        r3[1] = 1;
        goto label2;

     label1:
        $r4 = specialinvoke r0.<net.htmlparser.jericho.EndTagType: java.lang.String generateHTML(java.lang.String)>(r1);
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $r4;
    }

    protected net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.EndTagTypeGenericImplementation r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, i2, i4, i5, $i6, $i7, $i8, i9, $i11;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        null_type n0;
        byte b3;
        java.lang.String $r5, $r6, r7, $r8, $r14, $r19, $r22, $r23, $r24, $r34, $r37, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.htmlparser.jericho.Logger $r9, $r10, $r25, $r26;
        net.htmlparser.jericho.RowColumnVector $r11, $r27;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r18, $r20, $r21, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r36;
        char $c10;
        net.htmlparser.jericho.EndTag $r39;

        r0 := @this: net.htmlparser.jericho.EndTagTypeGenericImplementation;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $r5 = "</";
        $i6 = virtualinvoke $r5.<java.lang.String: int length()>();
        i1 = i0 + $i6;
        n0 = null;
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getStartDelimiter()>();
        $i7 = virtualinvoke $r6.<java.lang.String: int length()>();
        i2 = i0 + $i7;
        b3 = -1;
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean isStatic()>();
        r3[0] = 1;
        if $z0 == 0 goto label3;

        r7 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getNamePrefix()>();
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getClosingDelimiter()>();
        $z1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: boolean containsAt(java.lang.String,int)>($r8, i2);
        r3[1] = 1;
        if $z1 != 0 goto label2;

        $r9 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z2 = interfaceinvoke $r9.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r3[2] = 1;
        if $z2 == 0 goto label1;

        $r10 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r11 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>(200);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EndTag of expected format ");
        $r14 = r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String staticString>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");
        $r17 = virtualinvoke $r11.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recognised as type \'");
        $r19 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getDescription()>();
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' because it is missing the closing delimiter");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r22);
        r3[3] = 1;

     label1:
        r3[4] = 1;
        return null;

     label2:
        $r23 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getClosingDelimiter()>();
        $i8 = virtualinvoke $r23.<java.lang.String: int length()>();
        i9 = i2 + $i8;
        r3[5] = 1;
        goto label9;

     label3:
        i4 = virtualinvoke r1.<net.htmlparser.jericho.Source: int getNameEnd(int)>(i2);
        r3[6] = 1;
        if i4 != -1 goto label4;

        r3[7] = 1;
        return null;

     label4:
        r7 = virtualinvoke r1.<net.htmlparser.jericho.Source: java.lang.String getName(int,int)>(i1, i4);
        i5 = i4;
        r3[8] = 1;

     label5:
        $c10 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: char charAt(int)>(i5);
        $z3 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c10);
        r3[9] = 1;
        if $z3 == 0 goto label6;

        i5 = i5 + 1;
        r3[10] = 1;
        goto label5;

     label6:
        $r24 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getClosingDelimiter()>();
        $z4 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: boolean containsAt(java.lang.String,int)>($r24, i5);
        r3[11] = 1;
        if $z4 != 0 goto label8;

        $r25 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z5 = interfaceinvoke $r25.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r3[12] = 1;
        if $z5 == 0 goto label7;

        $r26 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r27 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(int)>(200);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EndTag ");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");
        $r32 = virtualinvoke $r27.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r31);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recognised as type \'");
        $r34 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getDescription()>();
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' because its name and closing delimiter are separated by characters other than white space");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r26.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r37);
        r3[13] = 1;

     label7:
        r3[14] = 1;
        return null;

     label8:
        $r38 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: java.lang.String getClosingDelimiter()>();
        $i11 = virtualinvoke $r38.<java.lang.String: int length()>();
        i9 = i5 + $i11;
        r3[15] = 1;

     label9:
        $r39 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: net.htmlparser.jericho.EndTag constructEndTag(net.htmlparser.jericho.Source,int,int,java.lang.String)>(r1, i0, i9, r7);
        r3[16] = 1;
        return $r39;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.EndTagTypeGenericImplementation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[4];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[17];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/EndTagTypeGenericImplementation", -9150100523329406890L);
        return $r0;
    }
}
final class net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent extends net.htmlparser.jericho.EndTagTypeGenericImplementation
{
    protected static final net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent;
        $r1 = <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>("/mason component called with content", "</&", ">", 1, 1);
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.StartTagType getCorrespondingStartTagType()
    {
        net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3;

        r0 := @this: net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent;
        $r1 = <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.StartTagType MASON_COMPONENT_CALLED_WITH_CONTENT>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent;
        specialinvoke $r2.<net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: void <init>()>();
        <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/EndTagTypeMasonComponentCalledWithContent", 4551320335030105896L);
        return $r0;
    }
}
final class net.htmlparser.jericho.EndTagTypeMasonNamedBlock extends net.htmlparser.jericho.EndTagTypeGenericImplementation
{
    protected static final net.htmlparser.jericho.EndTagTypeMasonNamedBlock INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.EndTagTypeMasonNamedBlock r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.EndTagTypeMasonNamedBlock;
        $r1 = <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>("/mason named block", "</%", ">", 1, 0);
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.StartTagType getCorrespondingStartTagType()
    {
        net.htmlparser.jericho.EndTagTypeMasonNamedBlock r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3;

        r0 := @this: net.htmlparser.jericho.EndTagTypeMasonNamedBlock;
        $r1 = <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.StartTagType MASON_NAMED_BLOCK>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.EndTagTypeMasonNamedBlock $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.EndTagTypeMasonNamedBlock;
        specialinvoke $r2.<net.htmlparser.jericho.EndTagTypeMasonNamedBlock: void <init>()>();
        <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: net.htmlparser.jericho.EndTagTypeMasonNamedBlock INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/EndTagTypeMasonNamedBlock", 4551320335030105896L);
        return $r0;
    }
}
final class net.htmlparser.jericho.EndTagTypeNormal extends net.htmlparser.jericho.EndTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.EndTagTypeNormal INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.EndTagTypeNormal r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.EndTagTypeNormal;
        $r1 = <net.htmlparser.jericho.EndTagTypeNormal: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagTypeNormal: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.EndTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>("/normal", "</", ">", 0, 0);
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.StartTagType getCorrespondingStartTagType()
    {
        net.htmlparser.jericho.EndTagTypeNormal r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3;

        r0 := @this: net.htmlparser.jericho.EndTagTypeNormal;
        $r1 = <net.htmlparser.jericho.EndTagTypeNormal: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagTypeNormal: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.EndTagTypeNormal $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.EndTagTypeNormal: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.EndTagTypeNormal;
        specialinvoke $r2.<net.htmlparser.jericho.EndTagTypeNormal: void <init>()>();
        <net.htmlparser.jericho.EndTagTypeNormal: net.htmlparser.jericho.EndTagTypeNormal INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.EndTagTypeNormal: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/EndTagTypeNormal", 4551320335030105896L);
        return $r0;
    }
}
final class net.htmlparser.jericho.EndTagTypeUnregistered extends net.htmlparser.jericho.EndTagType
{
    static final net.htmlparser.jericho.EndTagTypeUnregistered INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.EndTagTypeUnregistered r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.EndTagTypeUnregistered;
        $r1 = <net.htmlparser.jericho.EndTagTypeUnregistered: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.EndTagTypeUnregistered: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.EndTagType: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>("/unregistered", "</", ">", 0);
        r2[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.EndTagTypeUnregistered r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        java.lang.String r5, $r7, $r8, $r9, $r17;
        net.htmlparser.jericho.EndTag r6;
        net.htmlparser.jericho.Logger $r10, $r11;
        boolean $z0;
        net.htmlparser.jericho.RowColumnVector $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;

        r0 := @this: net.htmlparser.jericho.EndTagTypeUnregistered;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.EndTagTypeUnregistered: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.EndTagTypeUnregistered: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $r7 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeUnregistered: java.lang.String getStartDelimiter()>();
        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();
        i1 = i0 + $i3;
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeUnregistered: java.lang.String getClosingDelimiter()>();
        i2 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int)>($r8, i1);
        r5 = virtualinvoke r1.<net.htmlparser.jericho.Source: java.lang.String getName(int,int)>(i1, i2);
        $r9 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeUnregistered: java.lang.String getClosingDelimiter()>();
        $i4 = virtualinvoke $r9.<java.lang.String: int length()>();
        $i5 = i2 + $i4;
        r6 = virtualinvoke r0.<net.htmlparser.jericho.EndTagTypeUnregistered: net.htmlparser.jericho.EndTag constructEndTag(net.htmlparser.jericho.Source,int,int,java.lang.String)>(r1, i0, $i5, r5);
        $r10 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z0 = interfaceinvoke $r10.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r11 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r12 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(int)>(200);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encountered possible EndTag at ");
        $r15 = virtualinvoke $r12.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" whose content does not match a registered EndTagType");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r11.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r17);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return r6;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.EndTagTypeUnregistered $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.EndTagTypeUnregistered: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.EndTagTypeUnregistered;
        specialinvoke $r2.<net.htmlparser.jericho.EndTagTypeUnregistered: void <init>()>();
        <net.htmlparser.jericho.EndTagTypeUnregistered: net.htmlparser.jericho.EndTagTypeUnregistered INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.EndTagTypeUnregistered: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/EndTagTypeUnregistered", 1020767826358537578L);
        return $r0;
    }
}
class net.htmlparser.jericho.FormControl$1 extends java.lang.Object
{
    static final int[] $SwitchMap$net$htmlparser$jericho$FormControlType;
    private static final boolean[][] $VRc;

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.NoSuchFieldError r2, $r7, $r10, r11, $r14, r15, $r18, r19, $r22, r23, $r26, r27, $r30, r31, $r34, r35;
        net.htmlparser.jericho.FormControlType[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r4, $r5, $r8, $r12, $r16, $r20, $r24, $r28, $r32;
        net.htmlparser.jericho.FormControlType $r6, $r9, $r13, $r17, $r21, $r25, $r29, $r33;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$1: boolean[][] $VRi()>();
        r1 = $r0[0];
        $r3 = staticinvoke <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType[] values()>();
        $i0 = lengthof $r3;
        $r4 = newarray (int)[$i0];
        <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType> = $r4;

     label0:
        $r5 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $r6 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXT>;
        $i1 = virtualinvoke $r6.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $r5[$i1] = 1;
        r1[0] = 1;

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r2 = $r7;
        r1[1] = 1;

     label3:
        $r8 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $r9 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType CHECKBOX>;
        $i2 = virtualinvoke $r9.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $r8[$i2] = 2;
        r1[2] = 1;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;
        r11 = $r10;
        r1[3] = 1;

     label6:
        $r12 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $r13 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType RADIO>;
        $i3 = virtualinvoke $r13.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $r12[$i3] = 3;
        r1[4] = 1;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;
        r15 = $r14;
        r1[5] = 1;

     label9:
        $r16 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $r17 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SUBMIT>;
        $i4 = virtualinvoke $r17.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $r16[$i4] = 4;
        r1[6] = 1;

     label10:
        goto label12;

     label11:
        $r18 := @caughtexception;
        r19 = $r18;
        r1[7] = 1;

     label12:
        $r20 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $r21 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType IMAGE>;
        $i5 = virtualinvoke $r21.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $r20[$i5] = 5;
        r1[8] = 1;

     label13:
        goto label15;

     label14:
        $r22 := @caughtexception;
        r23 = $r22;
        r1[9] = 1;

     label15:
        $r24 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $r25 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType HIDDEN>;
        $i6 = virtualinvoke $r25.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $r24[$i6] = 6;
        r1[10] = 1;

     label16:
        goto label18;

     label17:
        $r26 := @caughtexception;
        r27 = $r26;
        r1[11] = 1;

     label18:
        $r28 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $r29 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType PASSWORD>;
        $i7 = virtualinvoke $r29.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $r28[$i7] = 7;
        r1[12] = 1;

     label19:
        goto label21;

     label20:
        $r30 := @caughtexception;
        r31 = $r30;
        r1[13] = 1;

     label21:
        $r32 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $r33 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType FILE>;
        $i8 = virtualinvoke $r33.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $r32[$i8] = 8;
        r1[14] = 1;

     label22:
        goto label24;

     label23:
        $r34 := @caughtexception;
        r35 = $r34;
        r1[15] = 1;

     label24:
        r1[16] = 1;
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
        catch java.lang.NoSuchFieldError from label15 to label16 with label17;
        catch java.lang.NoSuchFieldError from label18 to label19 with label20;
        catch java.lang.NoSuchFieldError from label21 to label22 with label23;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1;

        $r0 = newmultiarray (boolean)[1][];
        <net.htmlparser.jericho.FormControl$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[17];
        $r0[0] = $r1;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$1", 4618059581617450787L);
        return $r0;
    }
}
final class net.htmlparser.jericho.FormControl$ElementContainer extends java.lang.Object
{
    public final net.htmlparser.jericho.Element element;
    public java.util.Map attributesMap;
    public java.lang.String predefinedValue;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Element, boolean)
    {
        net.htmlparser.jericho.FormControl$ElementContainer r0;
        net.htmlparser.jericho.Element r1;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Attributes $r5;
        java.lang.String $r6;

        r0 := @this: net.htmlparser.jericho.FormControl$ElementContainer;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap> = null;
        r0.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element> = r1;
        r3[0] = 1;
        if z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Attributes: java.lang.String getValue(java.lang.String)>("value");
        r3[1] = 1;
        goto label2;

     label1:
        $r6 = null;
        r3[2] = 1;

     label2:
        r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue> = $r6;
        r3[3] = 1;
        return;
    }

    public java.util.Map getAttributesMap()
    {
        net.htmlparser.jericho.FormControl$ElementContainer r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Map $r3, $r6, $r7;
        net.htmlparser.jericho.Element $r4;
        net.htmlparser.jericho.Attributes $r5;

        r0 := @this: net.htmlparser.jericho.FormControl$ElementContainer;
        $r1 = <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Attributes: java.util.Map getMap(boolean)>(1);
        r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap> = $r6;
        r2[1] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        r2[2] = 1;
        return $r7;
    }

    public boolean setSelected(java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.FormControl$ElementContainer r0;
        java.lang.String r1, r2, $r5, $r6;
        boolean z0, $z1;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.FormControl$ElementContainer;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r3 = <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        r4[0] = 1;
        if r1 == null goto label1;

        $r5 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toString()>();
        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        r4[1] = 1;
        if $z1 == 0 goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.FormControl$ElementContainer: void setBooleanAttribute(java.lang.String,boolean)>(r2, 1);
        r4[2] = 1;
        return 1;

     label1:
        r4[3] = 1;
        if z0 != 0 goto label2;

        virtualinvoke r0.<net.htmlparser.jericho.FormControl$ElementContainer: void setBooleanAttribute(java.lang.String,boolean)>(r2, 0);
        r4[4] = 1;

     label2:
        r4[5] = 1;
        return 0;
    }

    public java.lang.String getAttributeValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$ElementContainer r0;
        java.lang.String r1, $r7, $r10;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Map $r4, $r5;
        java.lang.Object $r6;
        net.htmlparser.jericho.Element $r8;
        net.htmlparser.jericho.Attributes $r9;

        r0 := @this: net.htmlparser.jericho.FormControl$ElementContainer;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        r3[0] = 1;
        if $r4 == null goto label1;

        $r5 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r7 = (java.lang.String) $r6;
        r3[1] = 1;
        return $r7;

     label1:
        $r8 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element>;
        $r9 = virtualinvoke $r8.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        $r10 = virtualinvoke $r9.<net.htmlparser.jericho.Attributes: java.lang.String getValue(java.lang.String)>(r1);
        r3[2] = 1;
        return $r10;
    }

    public void setAttributeValue(java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.FormControl$ElementContainer r0;
        java.lang.String r1, r2, r5;
        boolean[][] $r3;
        boolean[] r4;
        java.util.Map $r6, $r7, $r9;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControl$ElementContainer;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();

     label0:
        r4 = $r3[4];
        r4[0] = 1;
        if r2 != null goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.FormControl$ElementContainer: void setBooleanAttribute(java.lang.String,boolean)>(r1, 0);
        r4[1] = 1;
        return;

     label1:
        $r6 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        r4[2] = 1;
        if $r6 == null goto label2;

        $r7 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        r4[3] = 1;
        return;

     label2:
        r5 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String getAttributeValue(java.lang.String)>(r1);
        r4[4] = 1;
        if r5 == null goto label3;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        r4[5] = 1;
        if $z0 == 0 goto label3;

        r4[6] = 1;
        return;

     label3:
        $r9 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map getAttributesMap()>();
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);
        r4[7] = 1;
        return;
    }

    public boolean getBooleanAttribute(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$ElementContainer r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Map $r4, $r5;
        boolean $z0, $z1;
        net.htmlparser.jericho.Element $r6;
        net.htmlparser.jericho.Attributes $r7;
        net.htmlparser.jericho.Attribute $r8;

        r0 := @this: net.htmlparser.jericho.FormControl$ElementContainer;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        r3[0] = 1;
        if $r4 == null goto label1;

        $r5 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);
        r3[1] = 1;
        return $z0;

     label1:
        $r6 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>(r1);
        r3[2] = 1;
        if $r8 == null goto label2;

        $z1 = 1;
        r3[3] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return $z1;
    }

    public void setBooleanAttribute(java.lang.String, boolean)
    {
        net.htmlparser.jericho.FormControl$ElementContainer r0;
        java.lang.String r1;
        boolean z0, z1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Map $r4, $r6;

        r0 := @this: net.htmlparser.jericho.FormControl$ElementContainer;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        z1 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$ElementContainer: boolean getBooleanAttribute(java.lang.String)>(r1);
        r3[0] = 1;
        if z0 != z1 goto label1;

        r3[1] = 1;
        return;

     label1:
        r3[2] = 1;
        if z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map getAttributesMap()>();
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r1);
        r3[3] = 1;
        goto label3;

     label2:
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map getAttributesMap()>();
        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return;
    }

    public void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)
    {
        net.htmlparser.jericho.FormControl$ElementContainer r0;
        net.htmlparser.jericho.OutputDocument r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Map $r4, $r7;
        net.htmlparser.jericho.Element $r5;
        net.htmlparser.jericho.Attributes $r6;

        r0 := @this: net.htmlparser.jericho.FormControl$ElementContainer;
        r1 := @parameter0: net.htmlparser.jericho.OutputDocument;
        $r2 = <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $r4 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        r3[0] = 1;
        if $r4 == null goto label1;

        $r5 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element>;
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        $r7 = r0.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map attributesMap>;
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void replace(net.htmlparser.jericho.Attributes,java.util.Map)>($r6, $r7);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRi()>();
        r1 = $r0[8];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <net.htmlparser.jericho.FormControl$ElementContainer: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[4];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[8];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[6];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$ElementContainer", 5675891065726861074L);
        return $r0;
    }
}
final class net.htmlparser.jericho.FormControl$ImageSubmitFormControl extends net.htmlparser.jericho.FormControl$SubmitFormControl
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.FormControl$ImageSubmitFormControl r0;
        net.htmlparser.jericho.Element r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControlType $r4;

        r0 := @this: net.htmlparser.jericho.FormControl$ImageSubmitFormControl;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        $r2 = <net.htmlparser.jericho.FormControl$ImageSubmitFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$ImageSubmitFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        $r4 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType IMAGE>;
        specialinvoke r0.<net.htmlparser.jericho.FormControl$SubmitFormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType)>(r1, $r4);
        r3[0] = 1;
        return;
    }

    void addToFormFields(net.htmlparser.jericho.FormFields)
    {
        net.htmlparser.jericho.FormControl$ImageSubmitFormControl r0;
        net.htmlparser.jericho.FormFields r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r11, $r12;
        java.lang.String $r5, $r8, $r10, $r13;

        r0 := @this: net.htmlparser.jericho.FormControl$ImageSubmitFormControl;
        r1 := @parameter0: net.htmlparser.jericho.FormFields;
        $r2 = <net.htmlparser.jericho.FormControl$ImageSubmitFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$ImageSubmitFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<net.htmlparser.jericho.FormControl$SubmitFormControl: void addToFormFields(net.htmlparser.jericho.FormFields)>(r1);
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = r0.<net.htmlparser.jericho.FormControl$ImageSubmitFormControl: java.lang.String name>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".x");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<net.htmlparser.jericho.FormFields: void addName(net.htmlparser.jericho.FormControl,java.lang.String)>(r0, $r8);
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = r0.<net.htmlparser.jericho.FormControl$ImageSubmitFormControl: java.lang.String name>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".y");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<net.htmlparser.jericho.FormFields: void addName(net.htmlparser.jericho.FormControl,java.lang.String)>(r0, $r13);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$ImageSubmitFormControl: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.FormControl$ImageSubmitFormControl: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$ImageSubmitFormControl", 4243097914327308498L);
        return $r0;
    }
}
final class net.htmlparser.jericho.FormControl$InputFormControl extends net.htmlparser.jericho.FormControl
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Element, net.htmlparser.jericho.FormControlType)
    {
        net.htmlparser.jericho.FormControl$InputFormControl r0;
        net.htmlparser.jericho.Element r1;
        net.htmlparser.jericho.FormControlType r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.FormControl$InputFormControl;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        r2 := @parameter1: net.htmlparser.jericho.FormControlType;
        $r3 = <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<net.htmlparser.jericho.FormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType,boolean,net.htmlparser.jericho.FormControl$1)>(r1, r2, 0, null);
        r4[0] = 1;
        return;
    }

    public boolean setValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$InputFormControl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControl$ElementContainer $r4;

        r0 := @this: net.htmlparser.jericho.FormControl$InputFormControl;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        virtualinvoke $r4.<net.htmlparser.jericho.FormControl$ElementContainer: void setAttributeValue(java.lang.String,java.lang.String)>("value", r1);
        r3[0] = 1;
        return 1;
    }

    void addValuesTo(java.util.Collection)
    {
        net.htmlparser.jericho.FormControl$InputFormControl r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControl$ElementContainer $r4;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.FormControl$InputFormControl;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String getAttributeValue(java.lang.String)>("value");
        staticinvoke <net.htmlparser.jericho.FormControl: void access$200(java.util.Collection,java.lang.String)>(r1, $r5);
        r3[0] = 1;
        return;
    }

    void addToFormFields(net.htmlparser.jericho.FormFields)
    {
        net.htmlparser.jericho.FormControl$InputFormControl r0;
        net.htmlparser.jericho.FormFields r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl$InputFormControl;
        r1 := @parameter0: net.htmlparser.jericho.FormFields;
        $r2 = <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        virtualinvoke r1.<net.htmlparser.jericho.FormFields: void add(net.htmlparser.jericho.FormControl)>(r0);
        r3[0] = 1;
        return;
    }

    void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument)
    {
        net.htmlparser.jericho.FormControl$InputFormControl r0;
        net.htmlparser.jericho.OutputDocument r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, r5;
        net.htmlparser.jericho.FormControlOutputStyle $r6, $r7, $r9, $r10;
        net.htmlparser.jericho.Element $r8, $r16;
        net.htmlparser.jericho.FormControlType $r11, $r12, $r14, $r15;
        net.htmlparser.jericho.FormControl$ElementContainer $r13;
        char $c0;
        int $i1;

        r0 := @this: net.htmlparser.jericho.FormControl$InputFormControl;
        r1 := @parameter0: net.htmlparser.jericho.OutputDocument;
        $r2 = <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r6 = r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r7 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle REMOVE>;
        r3[0] = 1;
        if $r6 != $r7 goto label1;

        $r8 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.Element getElement()>();
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void remove(net.htmlparser.jericho.Segment)>($r8);
        r3[1] = 1;
        goto label5;

     label1:
        $r9 = r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r10 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle DISPLAY_VALUE>;
        r3[2] = 1;
        if $r9 != $r10 goto label4;

        r4 = null;
        $r11 = r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.FormControlType formControlType>;
        $r12 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType HIDDEN>;
        r3[3] = 1;
        if $r11 == $r12 goto label3;

        $r13 = r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        r5 = virtualinvoke $r13.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String getAttributeValue(java.lang.String)>("value");
        $r14 = r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.FormControlType formControlType>;
        $r15 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType PASSWORD>;
        r3[4] = 1;
        if $r14 != $r15 goto label2;

        r3[5] = 1;
        if r5 == null goto label2;

        $c0 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: char PasswordChar>;
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();
        r5 = staticinvoke <net.htmlparser.jericho.FormControl: java.lang.String access$300(char,int)>($c0, $i1);
        r3[6] = 1;

     label2:
        r4 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$InputFormControl: java.lang.String getDisplayValueHTML(java.lang.CharSequence,boolean)>(r5, 0);
        r3[7] = 1;

     label3:
        $r16 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$InputFormControl: net.htmlparser.jericho.Element getElement()>();
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void replace(net.htmlparser.jericho.Segment,java.lang.CharSequence)>($r16, r4);
        r3[8] = 1;
        goto label5;

     label4:
        virtualinvoke r0.<net.htmlparser.jericho.FormControl$InputFormControl: void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)>(r1);
        r3[9] = 1;

     label5:
        r3[10] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.FormControl$InputFormControl: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[11];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$InputFormControl", -2379737695757981270L);
        return $r0;
    }
}
final class net.htmlparser.jericho.FormControl$PositionComparator extends java.lang.Object implements java.util.Comparator
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>()
    {
        net.htmlparser.jericho.FormControl$PositionComparator r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.FormControl$PositionComparator;
        $r1 = <net.htmlparser.jericho.FormControl$PositionComparator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$PositionComparator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public int compare(net.htmlparser.jericho.FormControl, net.htmlparser.jericho.FormControl)
    {
        net.htmlparser.jericho.FormControl$PositionComparator r0;
        net.htmlparser.jericho.FormControl r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        int i0, i1;
        net.htmlparser.jericho.Element $r5, $r6;

        r0 := @this: net.htmlparser.jericho.FormControl$PositionComparator;
        r1 := @parameter0: net.htmlparser.jericho.FormControl;
        r2 := @parameter1: net.htmlparser.jericho.FormControl;
        $r3 = <net.htmlparser.jericho.FormControl$PositionComparator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl$PositionComparator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = virtualinvoke r1.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.Element getElement()>();
        i0 = virtualinvoke $r5.<net.htmlparser.jericho.Element: int getBegin()>();
        $r6 = virtualinvoke r2.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.Element getElement()>();
        i1 = virtualinvoke $r6.<net.htmlparser.jericho.Element: int getBegin()>();
        r4[0] = 1;
        if i0 >= i1 goto label1;

        r4[1] = 1;
        return -1;

     label1:
        r4[2] = 1;
        if i0 <= i1 goto label2;

        r4[3] = 1;
        return 1;

     label2:
        r4[4] = 1;
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        net.htmlparser.jericho.FormControl$PositionComparator r0;
        java.lang.Object r1, r2;
        net.htmlparser.jericho.FormControl $r3, $r4;
        int $i0;

        r0 := @this: net.htmlparser.jericho.FormControl$PositionComparator;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (net.htmlparser.jericho.FormControl) r1;
        $r4 = (net.htmlparser.jericho.FormControl) r2;
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$PositionComparator: int compare(net.htmlparser.jericho.FormControl,net.htmlparser.jericho.FormControl)>($r3, $r4);
        return $i0;
    }

    void <init>(net.htmlparser.jericho.FormControl$1)
    {
        net.htmlparser.jericho.FormControl$PositionComparator r0;
        net.htmlparser.jericho.FormControl$1 r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl$PositionComparator;
        r1 := @parameter0: net.htmlparser.jericho.FormControl$1;
        $r2 = <net.htmlparser.jericho.FormControl$PositionComparator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$PositionComparator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        specialinvoke r0.<net.htmlparser.jericho.FormControl$PositionComparator: void <init>()>();
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$PositionComparator: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.FormControl$PositionComparator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[3] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[4] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$PositionComparator", 4156050967185985542L);
        return $r0;
    }
}
final class net.htmlparser.jericho.FormControl$RadioCheckboxFormControl extends net.htmlparser.jericho.FormControl
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Element, net.htmlparser.jericho.FormControlType)
    {
        net.htmlparser.jericho.FormControl$RadioCheckboxFormControl r0;
        net.htmlparser.jericho.Element r1;
        net.htmlparser.jericho.FormControlType r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.FormControl$ElementContainer $r5, $r7;
        java.lang.String $r6, $r19, $r24;
        net.htmlparser.jericho.Source $r8, $r10, $r12;
        net.htmlparser.jericho.Logger $r9, $r11;
        boolean $z0;
        int $i0;
        net.htmlparser.jericho.RowColumnVector $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23;

        r0 := @this: net.htmlparser.jericho.FormControl$RadioCheckboxFormControl;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        r2 := @parameter1: net.htmlparser.jericho.FormControlType;
        $r3 = <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<net.htmlparser.jericho.FormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType,boolean,net.htmlparser.jericho.FormControl$1)>(r1, r2, 1, null);
        $r5 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r6 = $r5.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        r4[0] = 1;
        if $r6 != null goto label1;

        $r7 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r7.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue> = "on";
        $r8 = r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r9 = $r8.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z0 = interfaceinvoke $r9.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r4[1] = 1;
        if $z0 == 0 goto label1;

        $r10 = r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r11 = $r10.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r12 = r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $i0 = r1.<net.htmlparser.jericho.Element: int begin>;
        $r13 = virtualinvoke $r12.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i0);
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(int)>(200);
        $r15 = virtualinvoke $r13.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": compulsory \"value\" attribute of ");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" control \"");
        $r19 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: java.lang.String name>;
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is missing, assuming the value \"");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("on");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r11.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r24);
        r4[2] = 1;

     label1:
        r4[3] = 1;
        return;
    }

    public boolean setValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$RadioCheckboxFormControl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControl$ElementContainer $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControl$RadioCheckboxFormControl;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $z0 = virtualinvoke $r4.<net.htmlparser.jericho.FormControl$ElementContainer: boolean setSelected(java.lang.String,java.lang.String,boolean)>(r1, "checked", 0);
        r3[0] = 1;
        return $z0;
    }

    public boolean addValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$RadioCheckboxFormControl r0;
        java.lang.String r1, $r4;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControlType $r5, $r8;
        net.htmlparser.jericho.FormControl$ElementContainer $r6;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.FormControl$RadioCheckboxFormControl;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r6 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r4 = "checked";
        $r8 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.FormControlType formControlType>;
        $r5 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType CHECKBOX>;
        r3[0] = 1;
        if $r8 != $r5 goto label1;

        $z0 = 1;
        r3[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r3[2] = 1;

     label2:
        $z1 = virtualinvoke $r6.<net.htmlparser.jericho.FormControl$ElementContainer: boolean setSelected(java.lang.String,java.lang.String,boolean)>(r1, $r4, $z0);
        r3[3] = 1;
        return $z1;
    }

    void addValuesTo(java.util.Collection)
    {
        net.htmlparser.jericho.FormControl$RadioCheckboxFormControl r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.FormControl$RadioCheckboxFormControl;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean isChecked()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: java.lang.String getPredefinedValue()>();
        staticinvoke <net.htmlparser.jericho.FormControl: void access$200(java.util.Collection,java.lang.String)>(r1, $r4);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    public boolean isChecked()
    {
        net.htmlparser.jericho.FormControl$RadioCheckboxFormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl$ElementContainer $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControl$RadioCheckboxFormControl;
        $r1 = <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $z0 = virtualinvoke $r3.<net.htmlparser.jericho.FormControl$ElementContainer: boolean getBooleanAttribute(java.lang.String)>("checked");
        r2[0] = 1;
        return $z0;
    }

    void addToFormFields(net.htmlparser.jericho.FormFields)
    {
        net.htmlparser.jericho.FormControl$RadioCheckboxFormControl r0;
        net.htmlparser.jericho.FormFields r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl$RadioCheckboxFormControl;
        r1 := @parameter0: net.htmlparser.jericho.FormFields;
        $r2 = <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        virtualinvoke r1.<net.htmlparser.jericho.FormFields: void add(net.htmlparser.jericho.FormControl)>(r0);
        r3[0] = 1;
        return;
    }

    void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument)
    {
        net.htmlparser.jericho.FormControl$RadioCheckboxFormControl r0;
        net.htmlparser.jericho.OutputDocument r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r10;
        net.htmlparser.jericho.FormControlOutputStyle $r5, $r6, $r8, $r9;
        net.htmlparser.jericho.Element $r7, $r11;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControl$RadioCheckboxFormControl;
        r1 := @parameter0: net.htmlparser.jericho.OutputDocument;
        $r2 = <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $r5 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r6 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle REMOVE>;
        r3[0] = 1;
        if $r5 != $r6 goto label1;

        $r7 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.Element getElement()>();
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void remove(net.htmlparser.jericho.Segment)>($r7);
        r3[1] = 1;
        goto label6;

     label1:
        $r8 = r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r9 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle DISPLAY_VALUE>;
        r3[2] = 1;
        if $r8 != $r9 goto label5;

        $z0 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean isChecked()>();
        r3[3] = 1;
        if $z0 == 0 goto label2;

        $r10 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String CheckedHTML>;
        r3[4] = 1;
        goto label3;

     label2:
        $r10 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String UncheckedHTML>;
        r3[5] = 1;

     label3:
        r4 = $r10;
        r3[6] = 1;
        if r4 == null goto label4;

        $r11 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: net.htmlparser.jericho.Element getElement()>();
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void replace(net.htmlparser.jericho.Segment,java.lang.CharSequence)>($r11, r4);
        r3[7] = 1;
        return;

     label4:
        virtualinvoke r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: void setDisabled(boolean)>(1);
        r3[8] = 1;

     label5:
        virtualinvoke r0.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)>(r1);
        r3[9] = 1;

     label6:
        r3[10] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[4];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[11];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$RadioCheckboxFormControl", 3807016250811444675L);
        return $r0;
    }
}
final class net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator extends java.lang.Object implements java.util.Iterator
{
    private int i;
    final net.htmlparser.jericho.FormControl$SelectFormControl this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(net.htmlparser.jericho.FormControl$SelectFormControl)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator r0;
        net.htmlparser.jericho.FormControl$SelectFormControl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator;
        r1 := @parameter0: net.htmlparser.jericho.FormControl$SelectFormControl;
        $r2 = <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: net.htmlparser.jericho.FormControl$SelectFormControl this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: int i> = 0;
        r3[0] = 1;
        return;
    }

    public boolean hasNext()
    {
        net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;
        net.htmlparser.jericho.FormControl$SelectFormControl $r3;
        net.htmlparser.jericho.FormControl$ElementContainer[] $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator;
        $r1 = <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $i0 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: int i>;
        $r3 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: net.htmlparser.jericho.FormControl$SelectFormControl this$0>;
        $r4 = $r3.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i1 = lengthof $r4;
        r2[0] = 1;
        if $i0 >= $i1 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.Element next()
    {
        net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.util.NoSuchElementException $r3;
        net.htmlparser.jericho.FormControl$SelectFormControl $r4;
        net.htmlparser.jericho.FormControl$ElementContainer[] $r5;
        int $i0, $i1;
        net.htmlparser.jericho.FormControl$ElementContainer $r7;
        net.htmlparser.jericho.Element $r8;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator;
        $r1 = <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean hasNext()>();
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        r2[1] = 1;
        throw $r3;

     label1:
        $r4 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: net.htmlparser.jericho.FormControl$SelectFormControl this$0>;
        $r5 = $r4.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i0 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: int i>;
        $i1 = $i0 + 1;
        r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: int i> = $i1;
        $r7 = $r5[$i0];
        $r8 = $r7.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element>;
        r2[2] = 1;
        return $r8;
    }

    public void remove()
    {
        net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator;
        $r1 = <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public volatile java.lang.Object next()
    {
        net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator r0;
        net.htmlparser.jericho.Element $r1;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator;
        $r1 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: net.htmlparser.jericho.Element next()>();
        return $r1;
    }

    void <init>(net.htmlparser.jericho.FormControl$SelectFormControl, net.htmlparser.jericho.FormControl$1)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator r0;
        net.htmlparser.jericho.FormControl$SelectFormControl r1;
        net.htmlparser.jericho.FormControl$1 r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator;
        r1 := @parameter0: net.htmlparser.jericho.FormControl$SelectFormControl;
        r2 := @parameter1: net.htmlparser.jericho.FormControl$1;
        $r3 = <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[5];
        specialinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: void <init>(net.htmlparser.jericho.FormControl$SelectFormControl)>(r1);
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRi()>();
        r1 = $r0[6];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[7][];
        <net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[5] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[6] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$SelectFormControl$OptionElementIterator", 1151058381083998243L);
        return $r0;
    }
}
final class net.htmlparser.jericho.FormControl$SelectFormControl extends net.htmlparser.jericho.FormControl
{
    public net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        net.htmlparser.jericho.Element r1, r6, $r17;
        boolean[][] $r2;
        boolean[] r3;
        java.util.List r4;
        int i0, $i1, $i2;
        java.util.Iterator r5;
        net.htmlparser.jericho.FormControl$ElementContainer r7, $r15;
        net.htmlparser.jericho.Attributes $r10;
        net.htmlparser.jericho.Attribute $r11;
        net.htmlparser.jericho.FormControlType $r12;
        net.htmlparser.jericho.FormControl$ElementContainer[] $r13, $r20;
        boolean $z0;
        java.lang.Object $r14;
        java.lang.String $r16, $r19;
        net.htmlparser.jericho.Segment $r18;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        $r2 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        $r10 = virtualinvoke r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>("multiple");
        r3[0] = 1;
        if $r11 == null goto label1;

        $r12 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SELECT_MULTIPLE>;
        r3[1] = 1;
        goto label2;

     label1:
        $r12 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SELECT_SINGLE>;
        r3[2] = 1;

     label2:
        specialinvoke r0.<net.htmlparser.jericho.FormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType,boolean,net.htmlparser.jericho.FormControl$1)>(r1, $r12, 0, null);
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Element: java.util.List getAllElements(java.lang.String)>("option");
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();
        $r13 = newarray (net.htmlparser.jericho.FormControl$ElementContainer)[$i1];
        r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers> = $r13;
        i0 = 0;
        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();
        r3[3] = 1;

     label3:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        r3[4] = 1;
        if $z0 == 0 goto label5;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (net.htmlparser.jericho.Element) $r14;
        $r15 = new net.htmlparser.jericho.FormControl$ElementContainer;
        specialinvoke $r15.<net.htmlparser.jericho.FormControl$ElementContainer: void <init>(net.htmlparser.jericho.Element,boolean)>(r6, 1);
        r7 = $r15;
        $r16 = r7.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        r3[5] = 1;
        if $r16 != null goto label4;

        $r17 = r7.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element>;
        $r18 = virtualinvoke $r17.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment getContent()>();
        $r19 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decodeCollapseWhiteSpace(java.lang.CharSequence)>($r18);
        r7.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue> = $r19;
        r3[6] = 1;

     label4:
        $r20 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i2 = i0;
        i0 = i0 + 1;
        $r20[$i2] = r7;
        r3[7] = 1;
        goto label3;

     label5:
        r3[8] = 1;
        return;
    }

    public java.lang.String getPredefinedValue()
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        $r1 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Use getPredefinedValues() method instead on SELECT controls");
        r2[0] = 1;
        throw $r3;
    }

    public java.util.Collection getPredefinedValues()
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedHashSet r3, $r4;
        int i0, $i1, $i2, $i3;
        net.htmlparser.jericho.FormControl$ElementContainer[] $r5, $r6, $r7;
        net.htmlparser.jericho.FormControl$ElementContainer $r8;
        java.lang.String $r9;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        $r1 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = new java.util.LinkedHashSet;
        $r5 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i1 = lengthof $r5;
        $i2 = $i1 * 2;
        specialinvoke $r4.<java.util.LinkedHashSet: void <init>(int,float)>($i2, 1.0F);
        r3 = $r4;
        i0 = 0;
        r2[0] = 1;

     label1:
        $r6 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i3 = lengthof $r6;
        r2[1] = 1;
        if i0 >= $i3 goto label2;

        $r7 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $r8 = $r7[i0];
        $r9 = $r8.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        virtualinvoke r3.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r9);
        i0 = i0 + 1;
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return r3;
    }

    public java.util.Iterator getOptionElementIterator()
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator $r3;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        $r1 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator;
        specialinvoke $r3.<net.htmlparser.jericho.FormControl$SelectFormControl$OptionElementIterator: void <init>(net.htmlparser.jericho.FormControl$SelectFormControl,net.htmlparser.jericho.FormControl$1)>(r0, null);
        r2[0] = 1;
        return $r3;
    }

    public boolean setValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $z0 = specialinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl: boolean addValue(java.lang.String,boolean)>(r1, 0);
        r3[0] = 1;
        return $z0;
    }

    public boolean addValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControlType $r4, $r7;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r7 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControlType formControlType>;
        $r4 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SELECT_MULTIPLE>;
        r3[0] = 1;
        if $r7 != $r4 goto label1;

        $z0 = 1;
        r3[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r3[2] = 1;

     label2:
        $z1 = specialinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl: boolean addValue(java.lang.String,boolean)>(r1, $z0);
        r3[3] = 1;
        return $z1;
    }

    private boolean addValue(java.lang.String, boolean)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        java.lang.String r1;
        boolean z0, z1, $z2;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1;
        net.htmlparser.jericho.FormControl$ElementContainer[] $r4, $r5;
        net.htmlparser.jericho.FormControl$ElementContainer $r6;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        z1 = 0;
        i0 = 0;
        r3[0] = 1;

     label1:
        $r4 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i1 = lengthof $r4;
        r3[1] = 1;
        if i0 >= $i1 goto label3;

        $r5 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $r6 = $r5[i0];
        $z2 = virtualinvoke $r6.<net.htmlparser.jericho.FormControl$ElementContainer: boolean setSelected(java.lang.String,java.lang.String,boolean)>(r1, "selected", z0);
        r3[2] = 1;
        if $z2 == 0 goto label2;

        z1 = 1;
        r3[3] = 1;

     label2:
        i0 = i0 + 1;
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return z1;
    }

    void addValuesTo(java.util.Collection)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1;
        net.htmlparser.jericho.FormControl$ElementContainer[] $r4, $r5, $r7;
        net.htmlparser.jericho.FormControl$ElementContainer $r6, $r8;
        boolean $z0;
        java.lang.String $r9;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        i0 = 0;
        r3[0] = 1;

     label1:
        $r4 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i1 = lengthof $r4;
        r3[1] = 1;
        if i0 >= $i1 goto label3;

        $r5 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $r6 = $r5[i0];
        $z0 = virtualinvoke $r6.<net.htmlparser.jericho.FormControl$ElementContainer: boolean getBooleanAttribute(java.lang.String)>("selected");
        r3[2] = 1;
        if $z0 == 0 goto label2;

        $r7 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $r8 = $r7[i0];
        $r9 = $r8.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        staticinvoke <net.htmlparser.jericho.FormControl: void access$200(java.util.Collection,java.lang.String)>(r1, $r9);
        r3[3] = 1;

     label2:
        i0 = i0 + 1;
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return;
    }

    void addToFormFields(net.htmlparser.jericho.FormFields)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        net.htmlparser.jericho.FormFields r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1;
        net.htmlparser.jericho.FormControl$ElementContainer[] $r4, $r5;
        net.htmlparser.jericho.FormControl$ElementContainer $r6;
        java.lang.String $r7;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        r1 := @parameter0: net.htmlparser.jericho.FormFields;
        $r2 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        i0 = 0;
        r3[0] = 1;

     label1:
        $r4 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i1 = lengthof $r4;
        r3[1] = 1;
        if i0 >= $i1 goto label2;

        $r5 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $r6 = $r5[i0];
        $r7 = $r6.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        virtualinvoke r1.<net.htmlparser.jericho.FormFields: void add(net.htmlparser.jericho.FormControl,java.lang.String)>(r0, $r7);
        i0 = i0 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument)
    {
        net.htmlparser.jericho.FormControl$SelectFormControl r0;
        net.htmlparser.jericho.OutputDocument r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder r4, $r10;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        net.htmlparser.jericho.FormControlOutputStyle $r5, $r6, $r8, $r9;
        net.htmlparser.jericho.Element $r7, $r16, $r22;
        net.htmlparser.jericho.FormControl$ElementContainer[] $r11, $r12, $r14, $r24, $r25;
        net.htmlparser.jericho.FormControl$ElementContainer $r13, $r15, $r26;
        boolean $z0;
        java.lang.String $r17, $r19, $r21, $r23;

        r0 := @this: net.htmlparser.jericho.FormControl$SelectFormControl;
        r1 := @parameter0: net.htmlparser.jericho.OutputDocument;
        $r2 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $r5 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r6 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle REMOVE>;
        r3[0] = 1;
        if $r5 != $r6 goto label1;

        $r7 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.Element getElement()>();
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void remove(net.htmlparser.jericho.Segment)>($r7);
        r3[1] = 1;
        goto label8;

     label1:
        $r8 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r9 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle DISPLAY_VALUE>;
        r3[2] = 1;
        if $r8 != $r9 goto label6;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>(100);
        r4 = $r10;
        i0 = 0;
        r3[3] = 1;

     label2:
        $r11 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i1 = lengthof $r11;
        r3[4] = 1;
        if i0 >= $i1 goto label4;

        $r12 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $r13 = $r12[i0];
        $z0 = virtualinvoke $r13.<net.htmlparser.jericho.FormControl$ElementContainer: boolean getBooleanAttribute(java.lang.String)>("selected");
        r3[5] = 1;
        if $z0 == 0 goto label3;

        $r14 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $r15 = $r14[i0];
        $r16 = $r15.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element>;
        $r17 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: java.lang.String getOptionLabel(net.htmlparser.jericho.Element)>($r16);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String MultipleValueSeparator>;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        r3[6] = 1;

     label3:
        i0 = i0 + 1;
        r3[7] = 1;
        goto label2;

     label4:
        $i2 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();
        r3[8] = 1;
        if $i2 <= 0 goto label5;

        $i3 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();
        $r21 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String MultipleValueSeparator>;
        $i4 = virtualinvoke $r21.<java.lang.String: int length()>();
        $i5 = $i3 - $i4;
        virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>($i5);
        r3[9] = 1;

     label5:
        $r22 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.Element getElement()>();
        $r23 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl: java.lang.String getDisplayValueHTML(java.lang.CharSequence,boolean)>(r4, 0);
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void replace(net.htmlparser.jericho.Segment,java.lang.CharSequence)>($r22, $r23);
        r3[10] = 1;
        goto label8;

     label6:
        virtualinvoke r0.<net.htmlparser.jericho.FormControl$SelectFormControl: void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)>(r1);
        i6 = 0;
        r3[11] = 1;

     label7:
        $r24 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $i7 = lengthof $r24;
        r3[12] = 1;
        if i6 >= $i7 goto label8;

        $r25 = r0.<net.htmlparser.jericho.FormControl$SelectFormControl: net.htmlparser.jericho.FormControl$ElementContainer[] optionElementContainers>;
        $r26 = $r25[i6];
        virtualinvoke $r26.<net.htmlparser.jericho.FormControl$ElementContainer: void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)>(r1);
        i6 = i6 + 1;
        r3[13] = 1;
        goto label7;

     label8:
        r3[14] = 1;
        return;
    }

    private static java.lang.String getOptionLabel(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r5;
        net.htmlparser.jericho.Segment $r4;

        r0 := @parameter0: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Element: java.lang.String getAttributeValue(java.lang.String)>("label");
        r2[0] = 1;
        if r3 == null goto label1;

        r2[1] = 1;
        return r3;

     label1:
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment getContent()>();
        $r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decodeCollapseWhiteSpace(java.lang.CharSequence)>($r4);
        r2[2] = 1;
        return $r5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRi()>();
        r1 = $r0[11];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <net.htmlparser.jericho.FormControl$SelectFormControl: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[9];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[6];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[4];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[15];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[3];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$SelectFormControl", -8500247373119083746L);
        return $r0;
    }
}
class net.htmlparser.jericho.FormControl$SubmitFormControl extends net.htmlparser.jericho.FormControl
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Element, net.htmlparser.jericho.FormControlType)
    {
        net.htmlparser.jericho.FormControl$SubmitFormControl r0;
        net.htmlparser.jericho.Element r1;
        net.htmlparser.jericho.FormControlType r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.FormControl$SubmitFormControl;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        r2 := @parameter1: net.htmlparser.jericho.FormControlType;
        $r3 = <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<net.htmlparser.jericho.FormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType,boolean,net.htmlparser.jericho.FormControl$1)>(r1, r2, 1, null);
        r4[0] = 1;
        return;
    }

    public boolean setValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$SubmitFormControl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl$SubmitFormControl;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return 0;
    }

    void addValuesTo(java.util.Collection)
    {
        net.htmlparser.jericho.FormControl$SubmitFormControl r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl$SubmitFormControl;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r3[0] = 1;
        return;
    }

    void addToFormFields(net.htmlparser.jericho.FormFields)
    {
        net.htmlparser.jericho.FormControl$SubmitFormControl r0;
        net.htmlparser.jericho.FormFields r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.FormControl$SubmitFormControl;
        r1 := @parameter0: net.htmlparser.jericho.FormFields;
        $r2 = <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$SubmitFormControl: java.lang.String getPredefinedValue()>();
        r3[0] = 1;
        if $r4 == null goto label1;

        virtualinvoke r1.<net.htmlparser.jericho.FormFields: void add(net.htmlparser.jericho.FormControl)>(r0);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument)
    {
        net.htmlparser.jericho.FormControl$SubmitFormControl r0;
        net.htmlparser.jericho.OutputDocument r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControlOutputStyle $r4, $r5, $r7, $r8;
        net.htmlparser.jericho.Element $r6;

        r0 := @this: net.htmlparser.jericho.FormControl$SubmitFormControl;
        r1 := @parameter0: net.htmlparser.jericho.OutputDocument;
        $r2 = <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = r0.<net.htmlparser.jericho.FormControl$SubmitFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r5 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle REMOVE>;
        r3[0] = 1;
        if $r4 != $r5 goto label1;

        $r6 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$SubmitFormControl: net.htmlparser.jericho.Element getElement()>();
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void remove(net.htmlparser.jericho.Segment)>($r6);
        r3[1] = 1;
        goto label3;

     label1:
        $r7 = r0.<net.htmlparser.jericho.FormControl$SubmitFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r8 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle DISPLAY_VALUE>;
        r3[2] = 1;
        if $r7 != $r8 goto label2;

        virtualinvoke r0.<net.htmlparser.jericho.FormControl$SubmitFormControl: void setDisabled(boolean)>(1);
        r3[3] = 1;

     label2:
        virtualinvoke r0.<net.htmlparser.jericho.FormControl$SubmitFormControl: void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)>(r1);
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.FormControl$SubmitFormControl: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[6];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$SubmitFormControl", 8855886664843323805L);
        return $r0;
    }
}
final class net.htmlparser.jericho.FormControl$TextAreaFormControl extends net.htmlparser.jericho.FormControl
{
    public java.lang.String value;
    private static final java.lang.String UNCHANGED;
    private static final boolean[][] $VRc;

    public void <init>(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.FormControl$TextAreaFormControl r0;
        net.htmlparser.jericho.Element r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControlType $r4;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.FormControl$TextAreaFormControl;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        $r2 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        $r4 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXTAREA>;
        specialinvoke r0.<net.htmlparser.jericho.FormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType,boolean,net.htmlparser.jericho.FormControl$1)>(r1, $r4, 0, null);
        $r5 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String UNCHANGED>;
        r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String value> = $r5;
        r3[0] = 1;
        return;
    }

    public boolean setValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl$TextAreaFormControl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl$TextAreaFormControl;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String value> = r1;
        r3[0] = 1;
        return 1;
    }

    void addValuesTo(java.util.Collection)
    {
        net.htmlparser.jericho.FormControl$TextAreaFormControl r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.FormControl$TextAreaFormControl;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = specialinvoke r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String getValue()>();
        staticinvoke <net.htmlparser.jericho.FormControl: void access$200(java.util.Collection,java.lang.String)>(r1, $r4);
        r3[0] = 1;
        return;
    }

    void addToFormFields(net.htmlparser.jericho.FormFields)
    {
        net.htmlparser.jericho.FormControl$TextAreaFormControl r0;
        net.htmlparser.jericho.FormFields r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl$TextAreaFormControl;
        r1 := @parameter0: net.htmlparser.jericho.FormFields;
        $r2 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        virtualinvoke r1.<net.htmlparser.jericho.FormFields: void add(net.htmlparser.jericho.FormControl)>(r0);
        r3[0] = 1;
        return;
    }

    void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument)
    {
        net.htmlparser.jericho.FormControl$TextAreaFormControl r0;
        net.htmlparser.jericho.OutputDocument r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControlOutputStyle $r4, $r5, $r7, $r8;
        net.htmlparser.jericho.Element $r6, $r9, $r14;
        java.lang.String $r10, $r11, $r12, $r13, $r16, $r17;
        net.htmlparser.jericho.Segment $r15;

        r0 := @this: net.htmlparser.jericho.FormControl$TextAreaFormControl;
        r1 := @parameter0: net.htmlparser.jericho.OutputDocument;
        $r2 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r5 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle REMOVE>;
        r3[0] = 1;
        if $r4 != $r5 goto label1;

        $r6 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: net.htmlparser.jericho.Element getElement()>();
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void remove(net.htmlparser.jericho.Segment)>($r6);
        r3[1] = 1;
        goto label3;

     label1:
        $r7 = r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        $r8 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle DISPLAY_VALUE>;
        r3[2] = 1;
        if $r7 != $r8 goto label2;

        $r9 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: net.htmlparser.jericho.Element getElement()>();
        $r10 = specialinvoke r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String getValue()>();
        $r11 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String getDisplayValueHTML(java.lang.CharSequence,boolean)>($r10, 1);
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void replace(net.htmlparser.jericho.Segment,java.lang.CharSequence)>($r9, $r11);
        r3[3] = 1;
        goto label3;

     label2:
        virtualinvoke r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)>(r1);
        $r12 = r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String value>;
        $r13 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String UNCHANGED>;
        r3[4] = 1;
        if $r12 == $r13 goto label3;

        $r14 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: net.htmlparser.jericho.Element getElement()>();
        $r15 = virtualinvoke $r14.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment getContent()>();
        $r16 = r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String value>;
        $r17 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String encode(java.lang.CharSequence)>($r16);
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void replace(net.htmlparser.jericho.Segment,java.lang.CharSequence)>($r15, $r17);
        r3[5] = 1;

     label3:
        r3[6] = 1;
        return;
    }

    private java.lang.String getValue()
    {
        net.htmlparser.jericho.FormControl$TextAreaFormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4, $r7;
        net.htmlparser.jericho.Element $r5;
        net.htmlparser.jericho.Segment $r6;

        r0 := @this: net.htmlparser.jericho.FormControl$TextAreaFormControl;
        $r1 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String value>;
        $r4 = <net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String UNCHANGED>;
        r2[0] = 1;
        if $r3 != $r4 goto label1;

        $r5 = virtualinvoke r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: net.htmlparser.jericho.Element getElement()>();
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Segment getContent()>();
        $r7 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decode(java.lang.CharSequence)>($r6);
        r2[1] = 1;
        goto label2;

     label1:
        $r7 = r0.<net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String value>;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r7;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRi()>();
        r1 = $r0[6];
        $r2 = new java.lang.String;
        specialinvoke $r2.<java.lang.String: void <init>()>();
        <net.htmlparser.jericho.FormControl$TextAreaFormControl: java.lang.String UNCHANGED> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[7][];
        <net.htmlparser.jericho.FormControl$TextAreaFormControl: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[7];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl$TextAreaFormControl", -4553801540287059661L);
        return $r0;
    }
}
public abstract class net.htmlparser.jericho.FormControl extends net.htmlparser.jericho.Segment
{
    net.htmlparser.jericho.FormControlType formControlType;
    java.lang.String name;
    net.htmlparser.jericho.FormControl$ElementContainer elementContainer;
    net.htmlparser.jericho.FormControlOutputStyle outputStyle;
    private static final java.lang.String CHECKBOX_NULL_DEFAULT_VALUE;
    private static java.util.Comparator COMPARATOR;
    private static final boolean[][] $VRc;

    static net.htmlparser.jericho.FormControl construct(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, r4, $r22, $r32, $r34;
        net.htmlparser.jericho.FormControlType r5, $r9, $r36;
        net.htmlparser.jericho.StartTag $r6;
        net.htmlparser.jericho.Attributes $r7, $r33;
        net.htmlparser.jericho.FormControl$InputFormControl $r8, $r24, $r28;
        boolean $z0, $z1, $z2;
        net.htmlparser.jericho.Source $r11, $r13, $r15;
        net.htmlparser.jericho.Logger $r12, $r14;
        int $i0, $i1, $i2;
        net.htmlparser.jericho.RowColumnVector $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21;
        int[] $r23;
        net.htmlparser.jericho.FormControl$RadioCheckboxFormControl $r25;
        net.htmlparser.jericho.FormControl$SubmitFormControl $r26, $r35;
        net.htmlparser.jericho.FormControl$ImageSubmitFormControl $r27;
        java.lang.AssertionError $r29;
        net.htmlparser.jericho.FormControl$SelectFormControl $r30;
        net.htmlparser.jericho.FormControl$TextAreaFormControl $r31;

        r0 := @parameter0: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        r3 = virtualinvoke $r6.<net.htmlparser.jericho.StartTag: java.lang.String getName()>();
        r2[0] = 1;
        if r3 != "input" goto label11;

        $r7 = virtualinvoke r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        r4 = virtualinvoke $r7.<net.htmlparser.jericho.Attributes: java.lang.String getRawValue(java.lang.String)>("type");
        r2[1] = 1;
        if r4 != null goto label1;

        $r8 = new net.htmlparser.jericho.FormControl$InputFormControl;
        $r9 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXT>;
        specialinvoke $r8.<net.htmlparser.jericho.FormControl$InputFormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType)>(r0, $r9);
        r2[2] = 1;
        return $r8;

     label1:
        r5 = staticinvoke <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType getFromInputElementType(java.lang.String)>(r4);
        r2[3] = 1;
        if r5 != null goto label4;

        $z0 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean isNonFormControl(java.lang.String)>(r4);
        r2[4] = 1;
        if $z0 == 0 goto label2;

        r2[5] = 1;
        return null;

     label2:
        $r11 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r12 = $r11.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z1 = interfaceinvoke $r12.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r2[6] = 1;
        if $z1 == 0 goto label3;

        $r13 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r14 = $r13.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r15 = r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Element: int begin>;
        $r16 = virtualinvoke $r15.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i0);
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(int)>(200);
        $r18 = virtualinvoke $r16.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": INPUT control with unrecognised type \"");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" assumed to be type \"text\"");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r14.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r22);
        r2[7] = 1;

     label3:
        r5 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXT>;
        r2[8] = 1;

     label4:
        $r23 = <net.htmlparser.jericho.FormControl$1: int[] $SwitchMap$net$htmlparser$jericho$FormControlType>;
        $i1 = virtualinvoke r5.<net.htmlparser.jericho.FormControlType: int ordinal()>();
        $i2 = $r23[$i1];
        r2[9] = 1;
        tableswitch($i2)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            case 6: goto label9;
            case 7: goto label9;
            case 8: goto label9;
            default: goto label10;
        };

     label5:
        $r24 = new net.htmlparser.jericho.FormControl$InputFormControl;
        specialinvoke $r24.<net.htmlparser.jericho.FormControl$InputFormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType)>(r0, r5);
        r2[10] = 1;
        return $r24;

     label6:
        $r25 = new net.htmlparser.jericho.FormControl$RadioCheckboxFormControl;
        specialinvoke $r25.<net.htmlparser.jericho.FormControl$RadioCheckboxFormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType)>(r0, r5);
        r2[11] = 1;
        return $r25;

     label7:
        $r26 = new net.htmlparser.jericho.FormControl$SubmitFormControl;
        specialinvoke $r26.<net.htmlparser.jericho.FormControl$SubmitFormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType)>(r0, r5);
        r2[12] = 1;
        return $r26;

     label8:
        $r27 = new net.htmlparser.jericho.FormControl$ImageSubmitFormControl;
        specialinvoke $r27.<net.htmlparser.jericho.FormControl$ImageSubmitFormControl: void <init>(net.htmlparser.jericho.Element)>(r0);
        r2[13] = 1;
        return $r27;

     label9:
        $r28 = new net.htmlparser.jericho.FormControl$InputFormControl;
        specialinvoke $r28.<net.htmlparser.jericho.FormControl$InputFormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType)>(r0, r5);
        r2[14] = 1;
        return $r28;

     label10:
        $r29 = new java.lang.AssertionError;
        specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>(r5);
        r2[15] = 1;
        throw $r29;

     label11:
        r2[16] = 1;
        if r3 != "select" goto label12;

        $r30 = new net.htmlparser.jericho.FormControl$SelectFormControl;
        specialinvoke $r30.<net.htmlparser.jericho.FormControl$SelectFormControl: void <init>(net.htmlparser.jericho.Element)>(r0);
        r2[17] = 1;
        return $r30;

     label12:
        r2[18] = 1;
        if r3 != "textarea" goto label13;

        $r31 = new net.htmlparser.jericho.FormControl$TextAreaFormControl;
        specialinvoke $r31.<net.htmlparser.jericho.FormControl$TextAreaFormControl: void <init>(net.htmlparser.jericho.Element)>(r0);
        r2[19] = 1;
        return $r31;

     label13:
        r2[20] = 1;
        if r3 != "button" goto label16;

        $r32 = "submit";
        $r33 = virtualinvoke r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        $r34 = virtualinvoke $r33.<net.htmlparser.jericho.Attributes: java.lang.String getRawValue(java.lang.String)>("type");
        $z2 = virtualinvoke $r32.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r34);
        r2[21] = 1;
        if $z2 == 0 goto label14;

        $r35 = new net.htmlparser.jericho.FormControl$SubmitFormControl;
        $r36 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType BUTTON>;
        specialinvoke $r35.<net.htmlparser.jericho.FormControl$SubmitFormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType)>(r0, $r36);
        r2[22] = 1;
        goto label15;

     label14:
        $r35 = null;
        r2[23] = 1;

     label15:
        r2[24] = 1;
        return $r35;

     label16:
        r2[25] = 1;
        return null;
    }

    private void <init>(net.htmlparser.jericho.Element, net.htmlparser.jericho.FormControlType, boolean)
    {
        net.htmlparser.jericho.FormControl r0;
        net.htmlparser.jericho.Element r1;
        net.htmlparser.jericho.FormControlType r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Source $r5;
        int $i0, $i1;
        net.htmlparser.jericho.FormControlOutputStyle $r6;
        net.htmlparser.jericho.FormControl$ElementContainer $r7;
        net.htmlparser.jericho.Attributes $r8;
        java.lang.String $r9;

        r0 := @this: net.htmlparser.jericho.FormControl;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        r2 := @parameter1: net.htmlparser.jericho.FormControlType;
        z0 := @parameter2: boolean;
        $r3 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $i0 = r1.<net.htmlparser.jericho.Element: int begin>;
        $i1 = r1.<net.htmlparser.jericho.Element: int end>;
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r5, $i0, $i1);
        $r6 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle NORMAL>;
        r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle> = $r6;
        $r7 = new net.htmlparser.jericho.FormControl$ElementContainer;
        specialinvoke $r7.<net.htmlparser.jericho.FormControl$ElementContainer: void <init>(net.htmlparser.jericho.Element,boolean)>(r1, z0);
        r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer> = $r7;
        r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType formControlType> = r2;
        $r8 = virtualinvoke r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Attributes getAttributes()>();
        $r9 = virtualinvoke $r8.<net.htmlparser.jericho.Attributes: java.lang.String getValue(java.lang.String)>("name");
        r0.<net.htmlparser.jericho.FormControl: java.lang.String name> = $r9;
        specialinvoke r0.<net.htmlparser.jericho.FormControl: void verifyName()>();
        r4[0] = 1;
        return;
    }

    public final net.htmlparser.jericho.FormControlType getFormControlType()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControlType $r3;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType formControlType>;
        r2[0] = 1;
        return $r3;
    }

    public final java.lang.String getName()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.FormControl: java.lang.String name>;
        r2[0] = 1;
        return $r3;
    }

    public final net.htmlparser.jericho.Element getElement()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl$ElementContainer $r3;
        net.htmlparser.jericho.Element $r4;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r4 = $r3.<net.htmlparser.jericho.FormControl$ElementContainer: net.htmlparser.jericho.Element element>;
        r2[0] = 1;
        return $r4;
    }

    public java.util.Iterator getOptionElementIterator()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Only SELECT controls contain OPTION elements");
        r2[0] = 1;
        throw $r3;
    }

    public net.htmlparser.jericho.FormControlOutputStyle getOutputStyle()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControlOutputStyle $r3;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle>;
        r2[0] = 1;
        return $r3;
    }

    public void setOutputStyle(net.htmlparser.jericho.FormControlOutputStyle)
    {
        net.htmlparser.jericho.FormControl r0;
        net.htmlparser.jericho.FormControlOutputStyle r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControl;
        r1 := @parameter0: net.htmlparser.jericho.FormControlOutputStyle;
        $r2 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlOutputStyle outputStyle> = r1;
        r3[0] = 1;
        return;
    }

    public final java.util.Map getAttributesMap()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl$ElementContainer $r3;
        java.util.Map $r4;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.FormControl$ElementContainer: java.util.Map getAttributesMap()>();
        r2[0] = 1;
        return $r4;
    }

    public final boolean isDisabled()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl$ElementContainer $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $z0 = virtualinvoke $r3.<net.htmlparser.jericho.FormControl$ElementContainer: boolean getBooleanAttribute(java.lang.String)>("disabled");
        r2[0] = 1;
        return $z0;
    }

    public final void setDisabled(boolean)
    {
        net.htmlparser.jericho.FormControl r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl$ElementContainer $r3;

        r0 := @this: net.htmlparser.jericho.FormControl;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        virtualinvoke $r3.<net.htmlparser.jericho.FormControl$ElementContainer: void setBooleanAttribute(java.lang.String,boolean)>("disabled", z0);
        r2[0] = 1;
        return;
    }

    public boolean isChecked()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This property is only relevant for CHECKBOX and RADIO controls");
        r2[0] = 1;
        throw $r3;
    }

    public java.lang.String getPredefinedValue()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl$ElementContainer $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r4 = $r3.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        r2[0] = 1;
        return $r4;
    }

    public java.util.Collection getPredefinedValues()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r5;
        java.util.Set $r6;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.FormControl: java.lang.String getPredefinedValue()>();
        r2[0] = 1;
        if $r3 != null goto label1;

        staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        r2[1] = 1;

     label1:
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.FormControl: java.lang.String getPredefinedValue()>();
        $r6 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r5);
        r2[2] = 1;
        return $r6;
    }

    public java.util.List getValues()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList r3, $r4;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r3 = $r4;
        virtualinvoke r0.<net.htmlparser.jericho.FormControl: void addValuesTo(java.util.Collection)>(r3);
        r2[0] = 1;
        return r3;
    }

    public final void clearValues()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        virtualinvoke r0.<net.htmlparser.jericho.FormControl: boolean setValue(java.lang.String)>(null);
        r2[0] = 1;
        return;
    }

    public abstract boolean setValue(java.lang.String);

    public boolean addValue(java.lang.String)
    {
        net.htmlparser.jericho.FormControl r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControl;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.FormControl: boolean setValue(java.lang.String)>(r1);
        r3[0] = 1;
        return $z0;
    }

    abstract void addValuesTo(java.util.Collection);

    abstract void addToFormFields(net.htmlparser.jericho.FormFields);

    abstract void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument);

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r4, $r6, $r7, $r9, $r13, $r16, $r18;
        net.htmlparser.jericho.FormControlType $r5;
        java.lang.String $r8, $r12, $r15, $r20, $r22;
        net.htmlparser.jericho.FormControl$ElementContainer $r11, $r14;
        net.htmlparser.jericho.Element $r19;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        $r5 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType formControlType>;
        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=\"");
        $r8 = r0.<net.htmlparser.jericho.FormControl: java.lang.String name>;
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);
        $r11 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r12 = $r11.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        r2[0] = 1;
        if $r12 == null goto label1;

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PredefinedValue=\"");
        $r14 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        $r15 = $r14.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String predefinedValue>;
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);
        r2[1] = 1;

     label1:
        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");
        $r19 = virtualinvoke r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.Element getElement()>();
        $r20 = virtualinvoke $r19.<net.htmlparser.jericho.Element: java.lang.String getDebugInfo()>();
        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[2] = 1;
        return $r22;
    }

    final java.lang.String getDisplayValueHTML(java.lang.CharSequence, boolean)
    {
        net.htmlparser.jericho.FormControl r0;
        java.lang.CharSequence r1;
        boolean z0, $z1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder r4, $r8, $r10, $r24, $r26;
        java.util.Iterator r5;
        java.lang.String r6, r7, $r11, $r18, $r25, $r28;
        int $i0, $i1, $i2, $i3;
        java.util.List $r13;
        java.lang.Object $r14;
        net.htmlparser.jericho.FormControl$ElementContainer $r15;
        java.io.IOException $r21, r22;
        java.lang.RuntimeException $r23;

        r0 := @this: net.htmlparser.jericho.FormControl;
        r1 := @parameter0: java.lang.CharSequence;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[22];
        $r8 = new java.lang.StringBuilder;
        r3[0] = 1;
        if r1 != null goto label1;

        $i0 = 0;
        r3[1] = 1;
        goto label2;

     label1:
        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        $i0 = $i1 * 2;
        r3[2] = 1;

     label2:
        $i2 = $i0 + 50;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>($i2);
        r4 = $r8;
        $r10 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
        $r11 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String ElementName>;
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label3:
        $r13 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.util.List AttributeNames>;
        r5 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();
        r3[3] = 1;

     label4:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        r3[4] = 1;
        if $z1 == 0 goto label6;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (java.lang.String) $r14;
        $r15 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        r7 = virtualinvoke $r15.<net.htmlparser.jericho.FormControl$ElementContainer: java.lang.String getAttributeValue(java.lang.String)>(r6);
        r3[5] = 1;
        if r7 != null goto label5;

        r3[6] = 1;
        goto label4;

     label5:
        staticinvoke <net.htmlparser.jericho.Attribute: java.lang.Appendable appendHTML(java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence)>(r4, r6, r7);
        r3[7] = 1;
        goto label4;

     label6:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
        r3[8] = 1;
        if r1 == null goto label7;

        $i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        r3[9] = 1;
        if $i3 != 0 goto label8;

     label7:
        $r18 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String EmptyHTML>;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        r3[10] = 1;
        goto label9;

     label8:
        staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.Appendable appendEncode(java.lang.Appendable,java.lang.CharSequence,boolean)>(r4, r1, z0);
        r3[11] = 1;

     label9:
        r3[12] = 1;

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;
        r22 = $r21;
        $r23 = new java.lang.RuntimeException;
        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r22);
        r3[13] = 1;
        throw $r23;

     label12:
        $r24 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");
        $r25 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String ElementName>;
        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
        $r28 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[14] = 1;
        return $r28;

        catch java.io.IOException from label3 to label10 with label11;
    }

    final void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)
    {
        net.htmlparser.jericho.FormControl r0;
        net.htmlparser.jericho.OutputDocument r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControl$ElementContainer $r4;

        r0 := @this: net.htmlparser.jericho.FormControl;
        r1 := @parameter0: net.htmlparser.jericho.OutputDocument;
        $r2 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        $r4 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControl$ElementContainer elementContainer>;
        virtualinvoke $r4.<net.htmlparser.jericho.FormControl$ElementContainer: void replaceAttributesInOutputDocumentIfModified(net.htmlparser.jericho.OutputDocument)>(r1);
        r3[0] = 1;
        return;
    }

    static java.util.List getAll(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList r3, $r4;
        java.util.Comparator $r5;

        r0 := @parameter0: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r3 = $r4;
        staticinvoke <net.htmlparser.jericho.FormControl: void getAll(net.htmlparser.jericho.Segment,java.util.ArrayList,java.lang.String)>(r0, r3, "input");
        staticinvoke <net.htmlparser.jericho.FormControl: void getAll(net.htmlparser.jericho.Segment,java.util.ArrayList,java.lang.String)>(r0, r3, "textarea");
        staticinvoke <net.htmlparser.jericho.FormControl: void getAll(net.htmlparser.jericho.Segment,java.util.ArrayList,java.lang.String)>(r0, r3, "select");
        staticinvoke <net.htmlparser.jericho.FormControl: void getAll(net.htmlparser.jericho.Segment,java.util.ArrayList,java.lang.String)>(r0, r3, "button");
        $r5 = <net.htmlparser.jericho.FormControl: java.util.Comparator COMPARATOR>;
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r3, $r5);
        r2[0] = 1;
        return r3;
    }

    private static void getAll(net.htmlparser.jericho.Segment, java.util.ArrayList, java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.util.ArrayList r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        java.util.Iterator r5;
        net.htmlparser.jericho.Element r6;
        net.htmlparser.jericho.FormControl r7;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @parameter0: net.htmlparser.jericho.Segment;
        r1 := @parameter1: java.util.ArrayList;
        r2 := @parameter2: java.lang.String;
        $r3 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r4 = $r3[25];
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.lang.String)>(r2);
        r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();
        r4[0] = 1;

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        r4[1] = 1;
        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (net.htmlparser.jericho.Element) $r9;
        r7 = virtualinvoke r6.<net.htmlparser.jericho.Element: net.htmlparser.jericho.FormControl getFormControl()>();
        r4[2] = 1;
        if r7 == null goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);
        r4[3] = 1;

     label2:
        r4[4] = 1;
        goto label1;

     label3:
        r4[5] = 1;
        return;
    }

    private static java.lang.String getString(char, int)
    {
        char c0;
        int i1, i2;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.StringBuilder r2, $r3;
        java.lang.String $r5;

        c0 := @parameter0: char;
        i1 := @parameter1: int;
        $r0 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r1 = $r0[26];
        r1[0] = 1;
        if i1 != 0 goto label1;

        r1[1] = 1;
        return "";

     label1:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(i1);
        r2 = $r3;
        i2 = 0;
        r1[2] = 1;

     label2:
        r1[3] = 1;
        if i2 >= i1 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        i2 = i2 + 1;
        r1[4] = 1;
        goto label2;

     label3:
        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        r1[5] = 1;
        return $r5;
    }

    private void verifyName()
    {
        net.htmlparser.jericho.FormControl r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r6, $r7, $r22;
        net.htmlparser.jericho.Source r4, $r12;
        net.htmlparser.jericho.FormControlType $r5, $r18;
        boolean $z0, $z1;
        int $i0, $i1;
        net.htmlparser.jericho.Element $r8, $r11, $r13;
        net.htmlparser.jericho.Logger $r9, $r10;
        net.htmlparser.jericho.RowColumnVector $r14;
        java.lang.StringBuilder $r15, $r16, $r17, $r19, $r20, $r21;

        r0 := @this: net.htmlparser.jericho.FormControl;
        $r1 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r2 = $r1[27];
        $r5 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType formControlType>;
        $z0 = virtualinvoke $r5.<net.htmlparser.jericho.FormControlType: boolean isSubmit()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r2[1] = 1;
        return;

     label1:
        $r6 = r0.<net.htmlparser.jericho.FormControl: java.lang.String name>;
        r2[2] = 1;
        if $r6 != null goto label2;

        r3 = "missing";
        r2[3] = 1;
        goto label4;

     label2:
        $r7 = r0.<net.htmlparser.jericho.FormControl: java.lang.String name>;
        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();
        r2[4] = 1;
        if $i0 == 0 goto label3;

        r2[5] = 1;
        return;

     label3:
        r3 = "blank";
        r2[6] = 1;

     label4:
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.Element getElement()>();
        r4 = $r8.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r9 = r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z1 = interfaceinvoke $r9.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r2[7] = 1;
        if $z1 == 0 goto label5;

        $r10 = r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r11 = virtualinvoke r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.Element getElement()>();
        $r12 = $r11.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Source source>;
        $r13 = virtualinvoke r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.Element getElement()>();
        $i1 = $r13.<net.htmlparser.jericho.Element: int begin>;
        $r14 = virtualinvoke $r12.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i1);
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(int)>(200);
        $r16 = virtualinvoke $r14.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": compulsory \"name\" attribute of ");
        $r18 = r0.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType formControlType>;
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" control is ");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r22);
        r2[8] = 1;

     label5:
        r2[9] = 1;
        return;
    }

    private static final void addValueTo(java.util.Collection, java.lang.String)
    {
        java.util.Collection r0;
        java.lang.String r1, $r5;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: java.util.Collection;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[28];
        r3[0] = 1;
        if r1 == null goto label1;

        $r5 = r1;
        r3[1] = 1;
        goto label2;

     label1:
        $r5 = "";
        r3[2] = 1;

     label2:
        interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r5);
        r3[3] = 1;
        return;
    }

    void <init>(net.htmlparser.jericho.Element, net.htmlparser.jericho.FormControlType, boolean, net.htmlparser.jericho.FormControl$1)
    {
        net.htmlparser.jericho.FormControl r0;
        net.htmlparser.jericho.Element r1;
        net.htmlparser.jericho.FormControlType r2;
        boolean z0;
        net.htmlparser.jericho.FormControl$1 r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: net.htmlparser.jericho.FormControl;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        r2 := @parameter1: net.htmlparser.jericho.FormControlType;
        z0 := @parameter2: boolean;
        r3 := @parameter3: net.htmlparser.jericho.FormControl$1;
        $r4 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r5 = $r4[29];
        specialinvoke r0.<net.htmlparser.jericho.FormControl: void <init>(net.htmlparser.jericho.Element,net.htmlparser.jericho.FormControlType,boolean)>(r1, r2, z0);
        r5[0] = 1;
        return;
    }

    static void access$200(java.util.Collection, java.lang.String)
    {
        java.util.Collection r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: java.util.Collection;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r3 = $r2[30];
        staticinvoke <net.htmlparser.jericho.FormControl: void addValueTo(java.util.Collection,java.lang.String)>(r0, r1);
        r3[0] = 1;
        return;
    }

    static java.lang.String access$300(char, int)
    {
        char c0;
        int i1;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        c0 := @parameter0: char;
        i1 := @parameter1: int;
        $r0 = <net.htmlparser.jericho.FormControl: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();

     label0:
        r1 = $r0[31];
        $r2 = staticinvoke <net.htmlparser.jericho.FormControl: java.lang.String getString(char,int)>(c0, i1);
        r1[0] = 1;
        return $r2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.FormControl$PositionComparator $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControl: boolean[][] $VRi()>();
        r1 = $r0[32];
        $r2 = new net.htmlparser.jericho.FormControl$PositionComparator;
        specialinvoke $r2.<net.htmlparser.jericho.FormControl$PositionComparator: void <init>(net.htmlparser.jericho.FormControl$1)>(null);
        <net.htmlparser.jericho.FormControl: java.util.Comparator COMPARATOR> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;

        $r0 = newmultiarray (boolean)[33][];
        <net.htmlparser.jericho.FormControl: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[26];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[3];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[17] = $r17;
        $r18 = newarray (boolean)[3];
        $r0[21] = $r18;
        $r19 = newarray (boolean)[15];
        $r0[22] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[23] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[24] = $r21;
        $r22 = newarray (boolean)[6];
        $r0[25] = $r22;
        $r23 = newarray (boolean)[6];
        $r0[26] = $r23;
        $r24 = newarray (boolean)[10];
        $r0[27] = $r24;
        $r25 = newarray (boolean)[4];
        $r0[28] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[29] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[30] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[31] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[32] = $r29;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControl", 5582425566863112918L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue extends java.lang.Object
{
    public static volatile java.lang.String MultipleValueSeparator;
    public static volatile java.lang.String ElementName;
    public static volatile java.util.List AttributeNames;
    public static volatile java.lang.String EmptyHTML;
    public static volatile char PasswordChar;
    public static volatile java.lang.String CheckedHTML;
    public static volatile java.lang.String UncheckedHTML;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue;
        $r1 = <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.ArrayList $r2;
        java.lang.String[] $r3;
        java.util.List $r4;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: boolean[][] $VRi()>();
        r1 = $r0[1];
        <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String MultipleValueSeparator> = ", ";
        <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String ElementName> = "div";
        $r2 = new java.util.ArrayList;
        $r3 = newarray (java.lang.String)[3];
        $r3[0] = "id";
        $r3[1] = "class";
        $r3[2] = "style";
        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);
        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);
        <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.util.List AttributeNames> = $r2;
        <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String EmptyHTML> = "&nbsp;";
        <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: char PasswordChar> = 42;
        <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String CheckedHTML> = null;
        <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: java.lang.String UncheckedHTML> = null;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.FormControlOutputStyle$ConfigDisplayValue: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControlOutputStyle$ConfigDisplayValue", 9251206036872L);
        return $r0;
    }
}
public final enum class net.htmlparser.jericho.FormControlOutputStyle extends java.lang.Enum
{
    public static final enum net.htmlparser.jericho.FormControlOutputStyle NORMAL;
    public static final enum net.htmlparser.jericho.FormControlOutputStyle REMOVE;
    public static final enum net.htmlparser.jericho.FormControlOutputStyle DISPLAY_VALUE;
    private static final net.htmlparser.jericho.FormControlOutputStyle[] $VALUES;
    private static final boolean[][] $VRc;

    public static net.htmlparser.jericho.FormControlOutputStyle[] values()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.FormControlOutputStyle[] $r2, $r4;
        java.lang.Object $r3;

        $r0 = <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $r2 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle[] $VALUES>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (net.htmlparser.jericho.FormControlOutputStyle[]) $r3;
        r1[0] = 1;
        return $r4;
    }

    public static net.htmlparser.jericho.FormControlOutputStyle valueOf(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        net.htmlparser.jericho.FormControlOutputStyle $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "net/htmlparser/jericho/FormControlOutputStyle", r0);
        $r4 = (net.htmlparser.jericho.FormControlOutputStyle) $r3;
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int)
    {
        net.htmlparser.jericho.FormControlOutputStyle r0;
        java.lang.String r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormControlOutputStyle;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r3[0] = 1;
        return;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.FormControlOutputStyle r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.FormControlOutputStyle;
        $r1 = <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.FormControlOutputStyle: java.lang.String toString()>();
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.FormControlOutputStyle $r2, $r3, $r4, $r6, $r7, $r8;
        net.htmlparser.jericho.FormControlOutputStyle[] $r5;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r2 = new net.htmlparser.jericho.FormControlOutputStyle;
        specialinvoke $r2.<net.htmlparser.jericho.FormControlOutputStyle: void <init>(java.lang.String,int)>("NORMAL", 0);
        <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle NORMAL> = $r2;
        $r3 = new net.htmlparser.jericho.FormControlOutputStyle;
        specialinvoke $r3.<net.htmlparser.jericho.FormControlOutputStyle: void <init>(java.lang.String,int)>("REMOVE", 1);
        <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle REMOVE> = $r3;
        $r4 = new net.htmlparser.jericho.FormControlOutputStyle;
        specialinvoke $r4.<net.htmlparser.jericho.FormControlOutputStyle: void <init>(java.lang.String,int)>("DISPLAY_VALUE", 2);
        <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle DISPLAY_VALUE> = $r4;
        $r5 = newarray (net.htmlparser.jericho.FormControlOutputStyle)[3];
        $r6 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle NORMAL>;
        $r5[0] = $r6;
        $r7 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle REMOVE>;
        $r5[1] = $r7;
        $r8 = <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle DISPLAY_VALUE>;
        $r5[2] = $r8;
        <net.htmlparser.jericho.FormControlOutputStyle: net.htmlparser.jericho.FormControlOutputStyle[] $VALUES> = $r5;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.FormControlOutputStyle: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControlOutputStyle", -6591989974083314888L);
        return $r0;
    }
}
public final enum class net.htmlparser.jericho.FormControlType extends java.lang.Enum
{
    public static final enum net.htmlparser.jericho.FormControlType BUTTON;
    public static final enum net.htmlparser.jericho.FormControlType CHECKBOX;
    public static final enum net.htmlparser.jericho.FormControlType FILE;
    public static final enum net.htmlparser.jericho.FormControlType HIDDEN;
    public static final enum net.htmlparser.jericho.FormControlType IMAGE;
    public static final enum net.htmlparser.jericho.FormControlType PASSWORD;
    public static final enum net.htmlparser.jericho.FormControlType RADIO;
    public static final enum net.htmlparser.jericho.FormControlType SELECT_MULTIPLE;
    public static final enum net.htmlparser.jericho.FormControlType SELECT_SINGLE;
    public static final enum net.htmlparser.jericho.FormControlType SUBMIT;
    public static final enum net.htmlparser.jericho.FormControlType TEXT;
    public static final enum net.htmlparser.jericho.FormControlType TEXTAREA;
    private java.lang.String elementName;
    private boolean hasPredefinedValue;
    private boolean submit;
    private static final java.util.HashMap INPUT_ELEMENT_TYPE_MAP;
    private static final java.util.HashSet NON_FORM_CONTROL_TYPE_ATTRIBUTE_SET;
    private static final net.htmlparser.jericho.FormControlType[] $VALUES;
    private static final boolean[][] $VRc;

    public static net.htmlparser.jericho.FormControlType[] values()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.FormControlType[] $r2, $r4;
        java.lang.Object $r3;

        $r0 = <net.htmlparser.jericho.FormControlType: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $r2 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType[] $VALUES>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (net.htmlparser.jericho.FormControlType[]) $r3;
        r1[0] = 1;
        return $r4;
    }

    public static net.htmlparser.jericho.FormControlType valueOf(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        net.htmlparser.jericho.FormControlType $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.FormControlType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "net/htmlparser/jericho/FormControlType", r0);
        $r4 = (net.htmlparser.jericho.FormControlType) $r3;
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int, java.lang.String, boolean, boolean)
    {
        net.htmlparser.jericho.FormControlType r0;
        java.lang.String r1, r2;
        int i0;
        boolean z0, z1;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.FormControlType;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        $r3 = <net.htmlparser.jericho.FormControlType: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r0.<net.htmlparser.jericho.FormControlType: java.lang.String elementName> = r2;
        r0.<net.htmlparser.jericho.FormControlType: boolean hasPredefinedValue> = z0;
        r0.<net.htmlparser.jericho.FormControlType: boolean submit> = z1;
        r4[0] = 1;
        return;
    }

    public java.lang.String getElementName()
    {
        net.htmlparser.jericho.FormControlType r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.FormControlType;
        $r1 = <net.htmlparser.jericho.FormControlType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.FormControlType: java.lang.String elementName>;
        r2[0] = 1;
        return $r3;
    }

    public boolean hasPredefinedValue()
    {
        net.htmlparser.jericho.FormControlType r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControlType;
        $r1 = <net.htmlparser.jericho.FormControlType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $z0 = r0.<net.htmlparser.jericho.FormControlType: boolean hasPredefinedValue>;
        r2[0] = 1;
        return $z0;
    }

    public boolean isSubmit()
    {
        net.htmlparser.jericho.FormControlType r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormControlType;
        $r1 = <net.htmlparser.jericho.FormControlType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $z0 = r0.<net.htmlparser.jericho.FormControlType: boolean submit>;
        r2[0] = 1;
        return $z0;
    }

    static net.htmlparser.jericho.FormControlType getFromInputElementType(java.lang.String)
    {
        java.lang.String r0, $r4;
        boolean[][] $r1;
        boolean[] r2;
        java.util.HashMap $r3;
        java.lang.Object $r5;
        net.htmlparser.jericho.FormControlType $r6;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.FormControlType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);
        $r6 = (net.htmlparser.jericho.FormControlType) $r5;
        r2[0] = 1;
        return $r6;
    }

    static boolean isNonFormControl(java.lang.String)
    {
        java.lang.String r0, $r4;
        boolean[][] $r1;
        boolean[] r2;
        java.util.HashSet $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.FormControlType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = <net.htmlparser.jericho.FormControlType: java.util.HashSet NON_FORM_CONTROL_TYPE_ATTRIBUTE_SET>;
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>($r4);
        r2[0] = 1;
        return $z0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.FormControlType $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51;
        net.htmlparser.jericho.FormControlType[] $r14;
        java.util.HashMap $r27, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50;
        java.util.HashSet $r28, $r53, $r54;

        $r0 = staticinvoke <net.htmlparser.jericho.FormControlType: boolean[][] $VRi()>();
        r1 = $r0[8];
        $r2 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r2.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("BUTTON", 0, "button", 1, 1);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType BUTTON> = $r2;
        $r3 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r3.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("CHECKBOX", 1, "input", 1, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType CHECKBOX> = $r3;
        $r4 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r4.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("FILE", 2, "input", 0, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType FILE> = $r4;
        $r5 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r5.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("HIDDEN", 3, "input", 0, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType HIDDEN> = $r5;
        $r6 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r6.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("IMAGE", 4, "input", 1, 1);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType IMAGE> = $r6;
        $r7 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r7.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("PASSWORD", 5, "input", 0, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType PASSWORD> = $r7;
        $r8 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r8.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("RADIO", 6, "input", 1, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType RADIO> = $r8;
        $r9 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r9.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("SELECT_MULTIPLE", 7, "select", 1, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SELECT_MULTIPLE> = $r9;
        $r10 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r10.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("SELECT_SINGLE", 8, "select", 1, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SELECT_SINGLE> = $r10;
        $r11 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r11.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("SUBMIT", 9, "input", 1, 1);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SUBMIT> = $r11;
        $r12 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r12.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("TEXT", 10, "input", 0, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXT> = $r12;
        $r13 = new net.htmlparser.jericho.FormControlType;
        specialinvoke $r13.<net.htmlparser.jericho.FormControlType: void <init>(java.lang.String,int,java.lang.String,boolean,boolean)>("TEXTAREA", 11, "textarea", 0, 0);
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXTAREA> = $r13;
        $r14 = newarray (net.htmlparser.jericho.FormControlType)[12];
        $r15 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType BUTTON>;
        $r14[0] = $r15;
        $r16 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType CHECKBOX>;
        $r14[1] = $r16;
        $r17 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType FILE>;
        $r14[2] = $r17;
        $r18 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType HIDDEN>;
        $r14[3] = $r18;
        $r19 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType IMAGE>;
        $r14[4] = $r19;
        $r20 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType PASSWORD>;
        $r14[5] = $r20;
        $r21 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType RADIO>;
        $r14[6] = $r21;
        $r22 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SELECT_MULTIPLE>;
        $r14[7] = $r22;
        $r23 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SELECT_SINGLE>;
        $r14[8] = $r23;
        $r24 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SUBMIT>;
        $r14[9] = $r24;
        $r25 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXT>;
        $r14[10] = $r25;
        $r26 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXTAREA>;
        $r14[11] = $r26;
        <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType[] $VALUES> = $r14;
        $r27 = new java.util.HashMap;
        specialinvoke $r27.<java.util.HashMap: void <init>(int,float)>(11, 1.0F);
        <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP> = $r27;
        $r28 = new java.util.HashSet;
        specialinvoke $r28.<java.util.HashSet: void <init>(int,float)>(3, 1.0F);
        <net.htmlparser.jericho.FormControlType: java.util.HashSet NON_FORM_CONTROL_TYPE_ATTRIBUTE_SET> = $r28;
        $r29 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r30 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType CHECKBOX>;
        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("checkbox", $r30);
        $r32 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r33 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType FILE>;
        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("file", $r33);
        $r35 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r36 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType HIDDEN>;
        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("hidden", $r36);
        $r38 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r39 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType IMAGE>;
        virtualinvoke $r38.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("image", $r39);
        $r41 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r42 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType PASSWORD>;
        virtualinvoke $r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("password", $r42);
        $r44 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r45 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType RADIO>;
        virtualinvoke $r44.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("radio", $r45);
        $r47 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r48 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SUBMIT>;
        virtualinvoke $r47.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("submit", $r48);
        $r50 = <net.htmlparser.jericho.FormControlType: java.util.HashMap INPUT_ELEMENT_TYPE_MAP>;
        $r51 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType TEXT>;
        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("text", $r51);
        $r53 = <net.htmlparser.jericho.FormControlType: java.util.HashSet NON_FORM_CONTROL_TYPE_ATTRIBUTE_SET>;
        virtualinvoke $r53.<java.util.HashSet: boolean add(java.lang.Object)>("button");
        $r54 = <net.htmlparser.jericho.FormControlType: java.util.HashSet NON_FORM_CONTROL_TYPE_ATTRIBUTE_SET>;
        virtualinvoke $r54.<java.util.HashSet: boolean add(java.lang.Object)>("reset");
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <net.htmlparser.jericho.FormControlType: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormControlType", 6584349319810507627L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.FormField extends java.lang.Object
{
    private final java.lang.String name;
    private int userValueCount;
    private boolean allowsMultipleValues;
    private java.util.LinkedHashSet predefinedValues;
    private final java.util.LinkedHashSet formControls;
    private transient net.htmlparser.jericho.FormControl firstFormControl;
    int columnIndex;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(java.lang.String)
    {
        net.htmlparser.jericho.FormField r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.LinkedHashSet $r4;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.FormField: int userValueCount> = 0;
        r0.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues> = 0;
        r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues> = null;
        $r4 = new java.util.LinkedHashSet;
        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();
        r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls> = $r4;
        r0.<net.htmlparser.jericho.FormField: net.htmlparser.jericho.FormControl firstFormControl> = null;
        r0.<net.htmlparser.jericho.FormField: java.lang.String name> = r1;
        r3[0] = 1;
        return;
    }

    public java.lang.String getName()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.FormField: java.lang.String name>;
        r2[0] = 1;
        return $r3;
    }

    public java.util.Collection getFormControls()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedHashSet $r3;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.FormControl getFormControl(java.lang.String)
    {
        net.htmlparser.jericho.FormField r0;
        java.lang.String r1, $r10, $r11, $r17, $r19;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4, r13;
        net.htmlparser.jericho.FormControl r5, r15;
        java.util.LinkedHashSet $r6, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r7, $r14;
        net.htmlparser.jericho.FormControlType $r8, $r9, $r16;
        java.util.Collection $r18;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r3[0] = 1;
        if r1 != null goto label5;

        $r6 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        r4 = virtualinvoke $r6.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        r3[1] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[2] = 1;
        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.FormControl) $r7;
        $r8 = virtualinvoke r5.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType getFormControlType()>();
        $z1 = virtualinvoke $r8.<net.htmlparser.jericho.FormControlType: boolean hasPredefinedValue()>();
        r3[3] = 1;
        if $z1 != 0 goto label2;

        r3[4] = 1;
        return r5;

     label2:
        $r9 = virtualinvoke r5.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType getFormControlType()>();
        $r10 = virtualinvoke $r9.<net.htmlparser.jericho.FormControlType: java.lang.String getElementName()>();
        r3[5] = 1;
        if $r10 == "select" goto label3;

        $r11 = virtualinvoke r5.<net.htmlparser.jericho.FormControl: java.lang.String getPredefinedValue()>();
        r3[6] = 1;
        if $r11 != null goto label3;

        r3[7] = 1;
        return r5;

     label3:
        r3[8] = 1;
        goto label1;

     label4:
        r3[9] = 1;
        goto label9;

     label5:
        $r12 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        r13 = virtualinvoke $r12.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        r3[10] = 1;

     label6:
        $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();
        r3[11] = 1;
        if $z2 == 0 goto label9;

        $r14 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();
        r15 = (net.htmlparser.jericho.FormControl) $r14;
        $r16 = virtualinvoke r15.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType getFormControlType()>();
        $r17 = virtualinvoke $r16.<net.htmlparser.jericho.FormControlType: java.lang.String getElementName()>();
        r3[12] = 1;
        if $r17 != "select" goto label7;

        $r18 = virtualinvoke r15.<net.htmlparser.jericho.FormControl: java.util.Collection getPredefinedValues()>();
        $z3 = interfaceinvoke $r18.<java.util.Collection: boolean contains(java.lang.Object)>(r1);
        r3[13] = 1;
        if $z3 == 0 goto label8;

        r3[14] = 1;
        return r15;

     label7:
        $r19 = virtualinvoke r15.<net.htmlparser.jericho.FormControl: java.lang.String getPredefinedValue()>();
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r19);
        r3[15] = 1;
        if $z4 == 0 goto label8;

        r3[16] = 1;
        return r15;

     label8:
        r3[17] = 1;
        goto label6;

     label9:
        r3[18] = 1;
        return null;
    }

    public net.htmlparser.jericho.FormControl getFormControl()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedHashSet $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        net.htmlparser.jericho.FormControl $r6;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        $r4 = virtualinvoke $r3.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
        $r6 = (net.htmlparser.jericho.FormControl) $r5;
        r2[0] = 1;
        return $r6;
    }

    public boolean allowsMultipleValues()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $z0 = r0.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues>;
        r2[0] = 1;
        return $z0;
    }

    public int getUserValueCount()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $i0 = r0.<net.htmlparser.jericho.FormField: int userValueCount>;
        r2[0] = 1;
        return $i0;
    }

    public java.util.Collection getPredefinedValues()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedHashSet $r3, $r5;
        java.util.Set $r4;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
        r2[1] = 1;
        return $r4;

     label1:
        $r5 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r2[2] = 1;
        return $r5;
    }

    public java.util.List getValues()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList r3, $r6;
        java.util.Iterator r4;
        net.htmlparser.jericho.FormControl r5;
        java.util.LinkedHashSet $r7;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r3 = $r6;
        $r7 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        r4 = virtualinvoke $r7.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.FormControl) $r8;
        virtualinvoke r5.<net.htmlparser.jericho.FormControl: void addValuesTo(java.util.Collection)>(r3);
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return r3;
    }

    public void clearValues()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        net.htmlparser.jericho.FormControl r4;
        java.util.LinkedHashSet $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r5 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        r3 = virtualinvoke $r5.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (net.htmlparser.jericho.FormControl) $r6;
        virtualinvoke r4.<net.htmlparser.jericho.FormControl: void clearValues()>();
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return;
    }

    public void setValues(java.util.Collection)
    {
        net.htmlparser.jericho.FormField r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        virtualinvoke r0.<net.htmlparser.jericho.FormField: void clearValues()>();
        virtualinvoke r0.<net.htmlparser.jericho.FormField: void addValues(java.util.Collection)>(r1);
        r3[0] = 1;
        return;
    }

    public boolean setValue(java.lang.String)
    {
        net.htmlparser.jericho.FormField r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        virtualinvoke r0.<net.htmlparser.jericho.FormField: void clearValues()>();
        r3[0] = 1;
        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<net.htmlparser.jericho.FormField: boolean addValue(java.lang.String)>(r1);
        r3[1] = 1;
        goto label2;

     label1:
        $z0 = 1;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $z0;
    }

    public boolean addValue(java.lang.String)
    {
        net.htmlparser.jericho.FormField r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.LinkedList r4, $r13;
        java.util.Iterator r5, r14;
        net.htmlparser.jericho.FormControl r6, $r9, r16;
        java.lang.IllegalArgumentException $r7;
        java.util.LinkedHashSet $r8, $r10;
        int $i0;
        boolean $z0, $z1, $z2, $z4, $z5, $z6;
        java.lang.Object $r11, $r15;
        net.htmlparser.jericho.FormControlType $r12;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        r3[0] = 1;
        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value argument must not be null");
        r3[1] = 1;
        throw $r7;

     label1:
        $r8 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        $i0 = virtualinvoke $r8.<java.util.LinkedHashSet: int size()>();
        r3[2] = 1;
        if $i0 != 1 goto label2;

        $r9 = virtualinvoke r0.<net.htmlparser.jericho.FormField: net.htmlparser.jericho.FormControl getFirstFormControl()>();
        $z0 = virtualinvoke $r9.<net.htmlparser.jericho.FormControl: boolean addValue(java.lang.String)>(r1);
        r3[3] = 1;
        return $z0;

     label2:
        r4 = null;
        $r10 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        r5 = virtualinvoke $r10.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        r3[4] = 1;

     label3:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        r3[5] = 1;
        if $z1 == 0 goto label7;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (net.htmlparser.jericho.FormControl) $r11;
        $r12 = virtualinvoke r6.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType getFormControlType()>();
        $z2 = virtualinvoke $r12.<net.htmlparser.jericho.FormControlType: boolean hasPredefinedValue()>();
        r3[6] = 1;
        if $z2 != 0 goto label5;

        r3[7] = 1;
        if r4 != null goto label4;

        $r13 = new java.util.LinkedList;
        specialinvoke $r13.<java.util.LinkedList: void <init>()>();
        r4 = $r13;
        r3[8] = 1;

     label4:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);
        r3[9] = 1;
        goto label3;

     label5:
        $z4 = virtualinvoke r6.<net.htmlparser.jericho.FormControl: boolean addValue(java.lang.String)>(r1);
        r3[10] = 1;
        if $z4 == 0 goto label6;

        r3[11] = 1;
        return 1;

     label6:
        r3[12] = 1;
        goto label3;

     label7:
        r3[13] = 1;
        if r4 != null goto label8;

        r3[14] = 1;
        return 0;

     label8:
        r14 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();
        r3[15] = 1;

     label9:
        $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
        r3[16] = 1;
        if $z5 == 0 goto label11;

        $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
        r16 = (net.htmlparser.jericho.FormControl) $r15;
        $z6 = virtualinvoke r16.<net.htmlparser.jericho.FormControl: boolean addValue(java.lang.String)>(r1);
        r3[17] = 1;
        if $z6 == 0 goto label10;

        r3[18] = 1;
        return 1;

     label10:
        r3[19] = 1;
        goto label9;

     label11:
        r3[20] = 1;
        return 0;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r6, $r7, $r9, $r10, $r11, $r12, $r18, $r19, $r26, $r27, $r31;
        java.util.Iterator r4, r22;
        java.lang.String r5, $r8, $r17, $r25, $r28, $r30, $r32, $r34;
        int $i0;
        boolean $z0, $z1, $z2;
        java.util.LinkedHashSet $r14, $r15, $r21;
        java.lang.Object $r16, $r23;
        net.htmlparser.jericho.FormControl r24;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        r3 = $r6;
        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field: ");
        $r8 = r0.<net.htmlparser.jericho.FormField: java.lang.String name>;
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", UserValueCount=");
        $i0 = r0.<net.htmlparser.jericho.FormField: int userValueCount>;
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", AllowsMultipleValues=");
        $z0 = r0.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues>;
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
        $r14 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r2[0] = 1;
        if $r14 == null goto label2;

        $r15 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r4 = virtualinvoke $r15.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        r2[1] = 1;

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[2] = 1;
        if $z1 == 0 goto label2;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.String) $r16;
        $r17 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PredefinedValue: ");
        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        r2[3] = 1;
        goto label1;

     label2:
        $r21 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        r22 = virtualinvoke $r21.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        r2[4] = 1;

     label3:
        $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();
        r2[5] = 1;
        if $z2 == 0 goto label4;

        $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();
        r24 = (net.htmlparser.jericho.FormControl) $r23;
        $r25 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r26 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FormControl: ");
        $r28 = virtualinvoke r24.<net.htmlparser.jericho.FormControl: java.lang.String getDebugInfo()>();
        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        r2[6] = 1;
        goto label3;

     label4:
        $r30 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        $r31 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[7] = 1;
        return $r34;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.FormField: java.lang.String getDebugInfo()>();
        r2[0] = 1;
        return $r3;
    }

    void addValues(java.util.Collection)
    {
        net.htmlparser.jericho.FormField r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        java.lang.String r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[15];
        r3[0] = 1;
        if r1 == null goto label2;

        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        r3[1] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[2] = 1;
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.String) $r6;
        virtualinvoke r0.<net.htmlparser.jericho.FormField: boolean addValue(java.lang.String)>(r5);
        r3[3] = 1;
        goto label1;

     label2:
        r3[4] = 1;
        return;
    }

    void addValues(java.lang.String[])
    {
        net.htmlparser.jericho.FormField r0;
        java.lang.String[] r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1;
        java.lang.String r5;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: java.lang.String[];
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        r3[0] = 1;
        if r1 == null goto label2;

        r4 = r1;
        i0 = lengthof r4;
        i1 = 0;
        r3[1] = 1;

     label1:
        r3[2] = 1;
        if i1 >= i0 goto label2;

        r5 = r4[i1];
        virtualinvoke r0.<net.htmlparser.jericho.FormField: boolean addValue(java.lang.String)>(r5);
        i1 = i1 + 1;
        r3[3] = 1;
        goto label1;

     label2:
        r3[4] = 1;
        return;
    }

    void addFormControl(net.htmlparser.jericho.FormControl, java.lang.String)
    {
        net.htmlparser.jericho.FormField r0;
        net.htmlparser.jericho.FormControl r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        int $i0, $i1;
        java.util.LinkedHashSet $r6, $r7, $r8, $r9;
        boolean $z2;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: net.htmlparser.jericho.FormControl;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r4 = $r3[17];
        r4[0] = 1;
        if r2 != null goto label1;

        $i0 = r0.<net.htmlparser.jericho.FormField: int userValueCount>;
        $i1 = $i0 + 1;
        r0.<net.htmlparser.jericho.FormField: int userValueCount> = $i1;
        r4[1] = 1;
        goto label3;

     label1:
        $r6 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r4[2] = 1;
        if $r6 != null goto label2;

        $r7 = new java.util.LinkedHashSet;
        specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>();
        r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues> = $r7;
        r4[3] = 1;

     label2:
        $r8 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        virtualinvoke $r8.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r2);
        r4[4] = 1;

     label3:
        $r9 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        virtualinvoke $r9.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r1);
        $z2 = specialinvoke r0.<net.htmlparser.jericho.FormField: boolean calculateAllowsMultipleValues(net.htmlparser.jericho.FormControl)>(r1);
        r0.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues> = $z2;
        r4[5] = 1;
        return;
    }

    private boolean calculateAllowsMultipleValues(net.htmlparser.jericho.FormControl)
    {
        net.htmlparser.jericho.FormField r0;
        net.htmlparser.jericho.FormControl r1, $r10;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormControlType r4, r5, $r9, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3;
        java.util.LinkedHashSet $r6, $r7, $r8;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: net.htmlparser.jericho.FormControl;
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        $z0 = r0.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues>;
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $i0 = r0.<net.htmlparser.jericho.FormField: int userValueCount>;
        r3[1] = 1;
        if $i0 <= 1 goto label2;

     label1:
        r3[2] = 1;
        return 1;

     label2:
        $i1 = r0.<net.htmlparser.jericho.FormField: int userValueCount>;
        r3[3] = 1;
        if $i1 != 1 goto label5;

        $r6 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r3[4] = 1;
        if $r6 == null goto label3;

        $z1 = 1;
        r3[5] = 1;
        goto label4;

     label3:
        $z1 = 0;
        r3[6] = 1;

     label4:
        r3[7] = 1;
        return $z1;

     label5:
        $r7 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        $i2 = virtualinvoke $r7.<java.util.LinkedHashSet: int size()>();
        r3[8] = 1;
        if $i2 != 1 goto label6;

        r3[9] = 1;
        return 0;

     label6:
        r4 = virtualinvoke r1.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType getFormControlType()>();
        $r8 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        $i3 = virtualinvoke $r8.<java.util.LinkedHashSet: int size()>();
        r3[10] = 1;
        if $i3 != 1 goto label9;

        $r9 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType SELECT_MULTIPLE>;
        r3[11] = 1;
        if r4 != $r9 goto label7;

        $z2 = 1;
        r3[12] = 1;
        goto label8;

     label7:
        $z2 = 0;
        r3[13] = 1;

     label8:
        r3[14] = 1;
        return $z2;

     label9:
        $r10 = virtualinvoke r0.<net.htmlparser.jericho.FormField: net.htmlparser.jericho.FormControl getFirstFormControl()>();
        r5 = virtualinvoke $r10.<net.htmlparser.jericho.FormControl: net.htmlparser.jericho.FormControlType getFormControlType()>();
        $r11 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType RADIO>;
        r3[15] = 1;
        if r4 != $r11 goto label10;

        $r12 = <net.htmlparser.jericho.FormControlType: net.htmlparser.jericho.FormControlType RADIO>;
        r3[16] = 1;
        if r5 != $r12 goto label10;

        r3[17] = 1;
        return 0;

     label10:
        $z3 = virtualinvoke r4.<net.htmlparser.jericho.FormControlType: boolean isSubmit()>();
        r3[18] = 1;
        if $z3 == 0 goto label11;

        $z4 = virtualinvoke r5.<net.htmlparser.jericho.FormControlType: boolean isSubmit()>();
        r3[19] = 1;
        if $z4 == 0 goto label11;

        r3[20] = 1;
        return 0;

     label11:
        r3[21] = 1;
        return 1;
    }

    net.htmlparser.jericho.FormControl getFirstFormControl()
    {
        net.htmlparser.jericho.FormField r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormControl $r3, $r7, $r8;
        java.util.LinkedHashSet $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;

        r0 := @this: net.htmlparser.jericho.FormField;
        $r1 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $r3 = r0.<net.htmlparser.jericho.FormField: net.htmlparser.jericho.FormControl firstFormControl>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        $r5 = virtualinvoke $r4.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
        $r7 = (net.htmlparser.jericho.FormControl) $r6;
        r0.<net.htmlparser.jericho.FormField: net.htmlparser.jericho.FormControl firstFormControl> = $r7;
        r2[1] = 1;

     label1:
        $r8 = r0.<net.htmlparser.jericho.FormField: net.htmlparser.jericho.FormControl firstFormControl>;
        r2[2] = 1;
        return $r8;
    }

    void merge(net.htmlparser.jericho.FormField)
    {
        net.htmlparser.jericho.FormField r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4, r14;
        java.lang.String r5;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z5;
        java.util.LinkedHashSet $r7, $r8, $r9, $r10, $r12, $r17;
        java.lang.Object $r11, $r15;
        java.util.Collection $r13;
        net.htmlparser.jericho.FormControl r16;

        r0 := @this: net.htmlparser.jericho.FormField;
        r1 := @parameter0: net.htmlparser.jericho.FormField;
        $r2 = <net.htmlparser.jericho.FormField: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();

     label0:
        r3 = $r2[20];
        $i0 = r1.<net.htmlparser.jericho.FormField: int userValueCount>;
        $i1 = r0.<net.htmlparser.jericho.FormField: int userValueCount>;
        r3[0] = 1;
        if $i0 <= $i1 goto label1;

        $i2 = r1.<net.htmlparser.jericho.FormField: int userValueCount>;
        r0.<net.htmlparser.jericho.FormField: int userValueCount> = $i2;
        r3[1] = 1;

     label1:
        $z0 = r0.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues>;
        r3[2] = 1;
        if $z0 != 0 goto label2;

        $z1 = r1.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues>;
        r3[3] = 1;
        if $z1 == 0 goto label3;

     label2:
        $z2 = 1;
        r3[4] = 1;
        goto label4;

     label3:
        $z2 = 0;
        r3[5] = 1;

     label4:
        r0.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues> = $z2;
        $r7 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r3[6] = 1;
        if $r7 != null goto label5;

        $r8 = r1.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues> = $r8;
        r3[7] = 1;
        goto label7;

     label5:
        $r9 = r1.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r3[8] = 1;
        if $r9 == null goto label7;

        $r10 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        r4 = virtualinvoke $r10.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        r3[9] = 1;

     label6:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[10] = 1;
        if $z3 == 0 goto label7;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.String) $r11;
        $r12 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet predefinedValues>;
        virtualinvoke $r12.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r5);
        r3[11] = 1;
        goto label6;

     label7:
        $r13 = virtualinvoke r1.<net.htmlparser.jericho.FormField: java.util.Collection getFormControls()>();
        r14 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();
        r3[12] = 1;

     label8:
        $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
        r3[13] = 1;
        if $z5 == 0 goto label9;

        $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
        r16 = (net.htmlparser.jericho.FormControl) $r15;
        $r17 = r0.<net.htmlparser.jericho.FormField: java.util.LinkedHashSet formControls>;
        virtualinvoke $r17.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r16);
        r3[14] = 1;
        goto label8;

     label9:
        r3[15] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormField: boolean[][] $VRi()>();
        r1 = $r0[21];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        $r0 = newmultiarray (boolean)[22][];
        <net.htmlparser.jericho.FormField: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[19];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[4];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[4];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[4];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[21];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[8];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[5];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[5];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[6];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[22];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[3];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[16];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormField", 8309769248740175459L);
        return $r0;
    }
}
class net.htmlparser.jericho.FormFields$Column extends java.lang.Object
{
    public net.htmlparser.jericho.FormField formField;
    public boolean isBoolean;
    public java.lang.String predefinedValue;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.FormField, boolean, java.lang.String)
    {
        net.htmlparser.jericho.FormFields$Column r0;
        net.htmlparser.jericho.FormField r1;
        boolean z0;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.FormFields$Column;
        r1 := @parameter0: net.htmlparser.jericho.FormField;
        z0 := @parameter1: boolean;
        r2 := @parameter2: java.lang.String;
        $r3 = <net.htmlparser.jericho.FormFields$Column: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormFields$Column: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.FormFields$Column: net.htmlparser.jericho.FormField formField> = r1;
        r0.<net.htmlparser.jericho.FormFields$Column: boolean isBoolean> = z0;
        r0.<net.htmlparser.jericho.FormFields$Column: java.lang.String predefinedValue> = r2;
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormFields$Column: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.FormFields$Column: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormFields$Column", 9255369870627L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.FormFields extends java.util.AbstractCollection
{
    private final java.util.LinkedHashMap map;
    private final java.util.ArrayList formControls;
    private net.htmlparser.jericho.FormFields$Column[] columns;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.util.Collection)
    {
        net.htmlparser.jericho.FormFields r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.FormControl r5;
        java.util.LinkedHashMap $r6;
        java.util.ArrayList $r7, $r11;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.String $r9, $r10;
        int $i0;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();
        $r6 = new java.util.LinkedHashMap;
        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();
        r0.<net.htmlparser.jericho.FormFields: java.util.LinkedHashMap map> = $r6;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r0.<net.htmlparser.jericho.FormFields: java.util.ArrayList formControls> = $r7;
        r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns> = null;
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.FormControl) $r8;
        $r9 = virtualinvoke r5.<net.htmlparser.jericho.FormControl: java.lang.String getName()>();
        r3[2] = 1;
        if $r9 == null goto label2;

        $r10 = virtualinvoke r5.<net.htmlparser.jericho.FormControl: java.lang.String getName()>();
        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();
        r3[3] = 1;
        if $i0 == 0 goto label2;

        virtualinvoke r5.<net.htmlparser.jericho.FormControl: void addToFormFields(net.htmlparser.jericho.FormFields)>(r0);
        $r11 = r0.<net.htmlparser.jericho.FormFields: java.util.ArrayList formControls>;
        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        r3[4] = 1;

     label2:
        r3[5] = 1;
        goto label1;

     label3:
        r3[6] = 1;
        return;
    }

    public int getCount()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedHashMap $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.FormFields: java.util.LinkedHashMap map>;
        $i0 = virtualinvoke $r3.<java.util.LinkedHashMap: int size()>();
        r2[0] = 1;
        return $i0;
    }

    public int size()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: int getCount()>();
        r2[0] = 1;
        return $i0;
    }

    public net.htmlparser.jericho.FormField get(java.lang.String)
    {
        net.htmlparser.jericho.FormFields r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Config$CompatibilityMode $r4;
        boolean $z0;
        java.util.LinkedHashMap $r5;
        java.lang.Object $r6;
        net.htmlparser.jericho.FormField $r7;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = <net.htmlparser.jericho.Config: net.htmlparser.jericho.Config$CompatibilityMode CurrentCompatibilityMode>;
        $z0 = virtualinvoke $r4.<net.htmlparser.jericho.Config$CompatibilityMode: boolean isFormFieldNameCaseInsensitive()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r3[1] = 1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.FormFields: java.util.LinkedHashMap map>;
        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r7 = (net.htmlparser.jericho.FormField) $r6;
        r3[2] = 1;
        return $r7;
    }

    public java.util.Iterator iterator()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedHashMap $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.FormFields: java.util.LinkedHashMap map>;
        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.util.Collection values()>();
        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();
        r2[0] = 1;
        return $r5;
    }

    public java.util.List getValues(java.lang.String)
    {
        net.htmlparser.jericho.FormFields r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.FormField r4;
        java.util.List $r5;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormField get(java.lang.String)>(r1);
        r3[0] = 1;
        if r4 != null goto label1;

        $r5 = null;
        r3[1] = 1;
        goto label2;

     label1:
        $r5 = virtualinvoke r4.<net.htmlparser.jericho.FormField: java.util.List getValues()>();
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $r5;
    }

    public java.util.Map getDataSet()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedHashMap r3, $r7;
        java.util.Iterator r4;
        net.htmlparser.jericho.FormField r5;
        java.util.List r6;
        int $i0, $i1, $i2;
        double $d0, $d1;
        boolean $z0, $z1;
        java.lang.Object $r8;
        java.lang.String $r9;
        java.lang.String[] $r10;
        java.lang.Object[] $r11;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r7 = new java.util.LinkedHashMap;
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: int getCount()>();
        $d0 = (double) $i0;
        $d1 = $d0 / 0.7;
        $i1 = (int) $d1;
        specialinvoke $r7.<java.util.LinkedHashMap: void <init>(int)>($i1);
        r3 = $r7;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.FormField) $r8;
        r6 = virtualinvoke r5.<net.htmlparser.jericho.FormField: java.util.List getValues()>();
        $z1 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();
        r2[2] = 1;
        if $z1 == 0 goto label2;

        r2[3] = 1;
        goto label1;

     label2:
        $r9 = virtualinvoke r5.<net.htmlparser.jericho.FormField: java.lang.String getName()>();
        $i2 = interfaceinvoke r6.<java.util.List: int size()>();
        $r10 = newarray (java.lang.String)[$i2];
        $r11 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);
        virtualinvoke r3.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);
        r2[4] = 1;
        goto label1;

     label3:
        r2[5] = 1;
        return r3;
    }

    public void clearValues()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator r3;
        net.htmlparser.jericho.FormControl r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r5 = r0.<net.htmlparser.jericho.FormFields: java.util.ArrayList formControls>;
        r3 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (net.htmlparser.jericho.FormControl) $r6;
        virtualinvoke r4.<net.htmlparser.jericho.FormControl: void clearValues()>();
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return;
    }

    public void setDataSet(java.util.Map)
    {
        net.htmlparser.jericho.FormFields r0;
        java.util.Map r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.String r6;
        net.htmlparser.jericho.FormField r7;
        java.util.LinkedHashMap $r8;
        java.util.Set $r9;
        boolean $z0;
        java.lang.Object $r10, $r11, $r12;
        java.lang.String[] $r13;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: java.util.Map;
        $r2 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        virtualinvoke r0.<net.htmlparser.jericho.FormFields: void clearValues()>();
        $r8 = r0.<net.htmlparser.jericho.FormFields: java.util.LinkedHashMap map>;
        r3[0] = 1;
        if $r8 != null goto label1;

        r3[1] = 1;
        return;

     label1:
        $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();
        r3[2] = 1;

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[3] = 1;
        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r10;
        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        r6 = (java.lang.String) $r11;
        r7 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormField get(java.lang.String)>(r6);
        r3[4] = 1;
        if r7 == null goto label3;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r13 = (java.lang.String[]) $r12;
        virtualinvoke r7.<net.htmlparser.jericho.FormField: void addValues(java.lang.String[])>($r13);
        r3[5] = 1;

     label3:
        r3[6] = 1;
        goto label2;

     label4:
        r3[7] = 1;
        return;
    }

    public boolean setValue(java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.FormFields r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.FormField r5;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r4 = $r3[9];
        r5 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormField get(java.lang.String)>(r1);
        r4[0] = 1;
        if r5 != null goto label1;

        $z0 = 0;
        r4[1] = 1;
        goto label2;

     label1:
        $z0 = virtualinvoke r5.<net.htmlparser.jericho.FormField: boolean setValue(java.lang.String)>(r2);
        r4[2] = 1;

     label2:
        r4[3] = 1;
        return $z0;
    }

    public boolean addValue(java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.FormFields r0;
        java.lang.String r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.FormField r5;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r4 = $r3[10];
        r5 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormField get(java.lang.String)>(r1);
        r4[0] = 1;
        if r5 != null goto label1;

        $z0 = 0;
        r4[1] = 1;
        goto label2;

     label1:
        $z0 = virtualinvoke r5.<net.htmlparser.jericho.FormField: boolean addValue(java.lang.String)>(r2);
        r4[2] = 1;

     label2:
        r4[3] = 1;
        return $z0;
    }

    public java.lang.String[] getColumnLabels()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String[] r3;
        int i0, $i1, $i2, $i3;
        net.htmlparser.jericho.FormFields$Column r4;
        java.lang.String r5, $r12, $r16, $r18;
        net.htmlparser.jericho.FormFields$Column[] $r6, $r7, $r8;
        net.htmlparser.jericho.FormField $r9;
        net.htmlparser.jericho.FormControl $r10;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        specialinvoke r0.<net.htmlparser.jericho.FormFields: void initColumns()>();
        $r6 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        $i1 = lengthof $r6;
        r3 = newarray (java.lang.String)[$i1];
        i0 = 0;
        r2[0] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        $i2 = lengthof $r7;
        r2[1] = 1;
        if i0 >= $i2 goto label4;

        $r8 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        r4 = $r8[i0];
        $r9 = r4.<net.htmlparser.jericho.FormFields$Column: net.htmlparser.jericho.FormField formField>;
        $r10 = virtualinvoke $r9.<net.htmlparser.jericho.FormField: net.htmlparser.jericho.FormControl getFirstFormControl()>();
        r5 = virtualinvoke $r10.<net.htmlparser.jericho.FormControl: java.lang.String getName()>();
        $i3 = i0;
        $r12 = r4.<net.htmlparser.jericho.FormFields$Column: java.lang.String predefinedValue>;
        r2[2] = 1;
        if $r12 == null goto label2;

        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
        $r16 = r4.<net.htmlparser.jericho.FormFields$Column: java.lang.String predefinedValue>;
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;
        goto label3;

     label2:
        $r18 = r5;
        r2[4] = 1;

     label3:
        r3[$i3] = $r18;
        i0 = i0 + 1;
        r2[5] = 1;
        goto label1;

     label4:
        r2[6] = 1;
        return r3;
    }

    public java.lang.String[] getColumnValues(java.util.Map)
    {
        net.htmlparser.jericho.FormFields r0;
        java.util.Map r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4, r8;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.util.Map$Entry r5;
        java.lang.String r6, r9, $r12, $r16, $r25, $r26, $r27, $r28, $r29, $r31, $r33, $r36;
        net.htmlparser.jericho.FormField r7, $r24;
        net.htmlparser.jericho.FormFields$Column r10, $r15;
        net.htmlparser.jericho.FormFields$Column[] $r11, $r13, $r14, $r22, $r23;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r17;
        java.util.Iterator r18;
        java.lang.Object $r19, $r20, $r21;
        java.lang.StringBuilder $r30, $r32, $r34, $r35;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: java.util.Map;
        $r2 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        specialinvoke r0.<net.htmlparser.jericho.FormFields: void initColumns()>();
        $r11 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        $i5 = lengthof $r11;
        r4 = newarray (java.lang.String)[$i5];
        $r12 = <net.htmlparser.jericho.Config: java.lang.String ColumnValueFalse>;
        r3[0] = 1;
        if $r12 == null goto label3;

        i0 = 0;
        r3[1] = 1;

     label1:
        $r13 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        $i6 = lengthof $r13;
        r3[2] = 1;
        if i0 >= $i6 goto label3;

        $r14 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        $r15 = $r14[i0];
        $z0 = $r15.<net.htmlparser.jericho.FormFields$Column: boolean isBoolean>;
        r3[3] = 1;
        if $z0 == 0 goto label2;

        $r16 = <net.htmlparser.jericho.Config: java.lang.String ColumnValueFalse>;
        r4[i0] = $r16;
        r3[4] = 1;

     label2:
        i0 = i0 + 1;
        r3[5] = 1;
        goto label1;

     label3:
        $r17 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();
        r3[6] = 1;

     label4:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        r3[7] = 1;
        if $z1 == 0 goto label15;

        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.Map$Entry) $r19;
        $r20 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        r6 = (java.lang.String) $r20;
        r7 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormField get(java.lang.String)>(r6);
        r3[8] = 1;
        if r7 == null goto label14;

        i1 = r7.<net.htmlparser.jericho.FormField: int columnIndex>;
        $r21 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();
        r8 = (java.lang.String[]) $r21;
        i2 = lengthof r8;
        i3 = 0;
        r3[9] = 1;

     label5:
        r3[10] = 1;
        if i3 >= i2 goto label14;

        r9 = r8[i3];
        i4 = i1;
        r3[11] = 1;

     label6:
        $r22 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        $i7 = lengthof $r22;
        r3[12] = 1;
        if i4 >= $i7 goto label13;

        $r23 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        r10 = $r23[i4];
        $r24 = r10.<net.htmlparser.jericho.FormFields$Column: net.htmlparser.jericho.FormField formField>;
        r3[13] = 1;
        if $r24 == r7 goto label7;

        r3[14] = 1;
        goto label13;

     label7:
        $r25 = r10.<net.htmlparser.jericho.FormFields$Column: java.lang.String predefinedValue>;
        r3[15] = 1;
        if $r25 == null goto label9;

        $r26 = r10.<net.htmlparser.jericho.FormFields$Column: java.lang.String predefinedValue>;
        $z2 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r9);
        r3[16] = 1;
        if $z2 != 0 goto label8;

        r3[17] = 1;
        goto label12;

     label8:
        $r27 = <net.htmlparser.jericho.Config: java.lang.String ColumnValueTrue>;
        r4[i4] = $r27;
        r3[18] = 1;
        goto label13;

     label9:
        $z3 = r10.<net.htmlparser.jericho.FormFields$Column: boolean isBoolean>;
        r3[19] = 1;
        if $z3 == 0 goto label10;

        r3[20] = 1;
        if r9 == null goto label13;

        $r28 = <net.htmlparser.jericho.Config: java.lang.String ColumnValueTrue>;
        r4[i4] = $r28;
        r3[21] = 1;
        goto label13;

     label10:
        $r29 = r4[i4];
        r3[22] = 1;
        if $r29 != null goto label11;

        r4[i4] = r9;
        r3[23] = 1;
        goto label13;

     label11:
        $r30 = new java.lang.StringBuilder;
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();
        $r31 = r4[i4];
        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = <net.htmlparser.jericho.Config: java.lang.String ColumnMultipleValueSeparator>;
        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();
        r4[i4] = $r36;
        r3[24] = 1;
        goto label13;

     label12:
        i4 = i4 + 1;
        r3[25] = 1;
        goto label6;

     label13:
        i3 = i3 + 1;
        r3[26] = 1;
        goto label5;

     label14:
        r3[27] = 1;
        goto label4;

     label15:
        r3[28] = 1;
        return r4;
    }

    public java.lang.String[] getColumnValues()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Map $r3;
        java.lang.String[] $r4;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: java.util.Map getDataSet()>();
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: java.lang.String[] getColumnValues(java.util.Map)>($r3);
        r2[0] = 1;
        return $r4;
    }

    private void initColumns()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList r3, $r9;
        java.util.Iterator r4, r6;
        net.htmlparser.jericho.FormField r5;
        java.lang.String r7;
        net.htmlparser.jericho.FormFields$Column[] $r8, $r21, $r23;
        boolean $z0, $z1, $z2, $z3, $z5;
        java.lang.Object $r10, $r18;
        int $i0, $i1, $i2, $i3;
        java.util.Collection $r11, $r16, $r17;
        net.htmlparser.jericho.FormFields$Column $r13, $r19, $r20;
        java.lang.Object[] $r22;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r8 = r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns>;
        r2[0] = 1;
        if $r8 == null goto label1;

        r2[1] = 1;
        return;

     label1:
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r3 = $r9;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: java.util.Iterator iterator()>();
        r2[2] = 1;

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[3] = 1;
        if $z0 == 0 goto label10;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.FormField) $r10;
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        r5.<net.htmlparser.jericho.FormField: int columnIndex> = $i0;
        $z1 = virtualinvoke r5.<net.htmlparser.jericho.FormField: boolean allowsMultipleValues()>();
        r2[4] = 1;
        if $z1 == 0 goto label3;

        $r11 = virtualinvoke r5.<net.htmlparser.jericho.FormField: java.util.Collection getPredefinedValues()>();
        $z2 = interfaceinvoke $r11.<java.util.Collection: boolean isEmpty()>();
        r2[5] = 1;
        if $z2 == 0 goto label6;

     label3:
        $r13 = new net.htmlparser.jericho.FormFields$Column;
        $r16 = virtualinvoke r5.<net.htmlparser.jericho.FormField: java.util.Collection getPredefinedValues()>();
        $i1 = interfaceinvoke $r16.<java.util.Collection: int size()>();
        r2[6] = 1;
        if $i1 != 1 goto label4;

        $z3 = 1;
        r2[7] = 1;
        goto label5;

     label4:
        $z3 = 0;
        r2[8] = 1;

     label5:
        specialinvoke $r13.<net.htmlparser.jericho.FormFields$Column: void <init>(net.htmlparser.jericho.FormField,boolean,java.lang.String)>(r5, $z3, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);
        r2[9] = 1;
        goto label9;

     label6:
        $r17 = virtualinvoke r5.<net.htmlparser.jericho.FormField: java.util.Collection getPredefinedValues()>();
        r6 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();
        r2[10] = 1;

     label7:
        $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        r2[11] = 1;
        if $z5 == 0 goto label8;

        $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r18;
        $r19 = new net.htmlparser.jericho.FormFields$Column;
        specialinvoke $r19.<net.htmlparser.jericho.FormFields$Column: void <init>(net.htmlparser.jericho.FormField,boolean,java.lang.String)>(r5, 1, r7);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);
        r2[12] = 1;
        goto label7;

     label8:
        $i2 = virtualinvoke r5.<net.htmlparser.jericho.FormField: int getUserValueCount()>();
        r2[13] = 1;
        if $i2 <= 0 goto label9;

        $r20 = new net.htmlparser.jericho.FormFields$Column;
        specialinvoke $r20.<net.htmlparser.jericho.FormFields$Column: void <init>(net.htmlparser.jericho.FormField,boolean,java.lang.String)>(r5, 0, null);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);
        r2[14] = 1;

     label9:
        r2[15] = 1;
        goto label2;

     label10:
        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        $r21 = newarray (net.htmlparser.jericho.FormFields$Column)[$i3];
        $r22 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r21);
        $r23 = (net.htmlparser.jericho.FormFields$Column[]) $r22;
        r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormFields$Column[] columns> = $r23;
        r2[16] = 1;
        return;
    }

    public java.util.List getFormControls()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList $r3;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = r0.<net.htmlparser.jericho.FormFields: java.util.ArrayList formControls>;
        r2[0] = 1;
        return $r3;
    }

    public void merge(net.htmlparser.jericho.FormFields)
    {
        net.htmlparser.jericho.FormFields r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.FormField r5, r7;
        java.lang.String r6, $r10;
        boolean $z0;
        java.lang.Object $r8;
        java.util.LinkedHashMap $r9;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: net.htmlparser.jericho.FormFields;
        $r2 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.FormFields: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.FormField) $r8;
        r6 = virtualinvoke r5.<net.htmlparser.jericho.FormField: java.lang.String getName()>();
        r7 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: net.htmlparser.jericho.FormField get(java.lang.String)>(r6);
        r3[2] = 1;
        if r7 != null goto label2;

        $r9 = r0.<net.htmlparser.jericho.FormFields: java.util.LinkedHashMap map>;
        $r10 = virtualinvoke r5.<net.htmlparser.jericho.FormField: java.lang.String getName()>();
        virtualinvoke $r9.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r5);
        r3[3] = 1;
        goto label3;

     label2:
        virtualinvoke r7.<net.htmlparser.jericho.FormField: void merge(net.htmlparser.jericho.FormField)>(r5);
        r3[4] = 1;

     label3:
        r3[5] = 1;
        goto label1;

     label4:
        r3[6] = 1;
        return;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r6;
        java.util.Iterator r4;
        net.htmlparser.jericho.FormField r5;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.String $r9;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        r3 = $r6;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.FormField) $r7;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);
        r2[2] = 1;
        goto label1;

     label2:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;
        return $r9;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.FormFields r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.FormFields;
        $r1 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.FormFields: java.lang.String getDebugInfo()>();
        r2[0] = 1;
        return $r3;
    }

    void add(net.htmlparser.jericho.FormControl)
    {
        net.htmlparser.jericho.FormFields r0;
        net.htmlparser.jericho.FormControl r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: net.htmlparser.jericho.FormControl;
        $r2 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r3 = $r2[19];
        $r4 = virtualinvoke r1.<net.htmlparser.jericho.FormControl: java.lang.String getPredefinedValue()>();
        virtualinvoke r0.<net.htmlparser.jericho.FormFields: void add(net.htmlparser.jericho.FormControl,java.lang.String)>(r1, $r4);
        r3[0] = 1;
        return;
    }

    void add(net.htmlparser.jericho.FormControl, java.lang.String)
    {
        net.htmlparser.jericho.FormFields r0;
        net.htmlparser.jericho.FormControl r1;
        java.lang.String r2, $r5;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: net.htmlparser.jericho.FormControl;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r4 = $r3[20];
        $r5 = r1.<net.htmlparser.jericho.FormControl: java.lang.String name>;
        virtualinvoke r0.<net.htmlparser.jericho.FormFields: void add(net.htmlparser.jericho.FormControl,java.lang.String,java.lang.String)>(r1, r2, $r5);
        r4[0] = 1;
        return;
    }

    void addName(net.htmlparser.jericho.FormControl, java.lang.String)
    {
        net.htmlparser.jericho.FormFields r0;
        net.htmlparser.jericho.FormControl r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: net.htmlparser.jericho.FormControl;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r4 = $r3[21];
        virtualinvoke r0.<net.htmlparser.jericho.FormFields: void add(net.htmlparser.jericho.FormControl,java.lang.String,java.lang.String)>(r1, null, r2);
        r4[0] = 1;
        return;
    }

    void add(net.htmlparser.jericho.FormControl, java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.FormFields r0;
        net.htmlparser.jericho.FormControl r1;
        java.lang.String r2, r3, $r12;
        boolean[][] $r4;
        boolean[] r5;
        net.htmlparser.jericho.FormField r6, $r10;
        net.htmlparser.jericho.Config$CompatibilityMode $r7;
        boolean $z0;
        java.util.LinkedHashMap $r8, $r11;
        java.lang.Object $r9;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: net.htmlparser.jericho.FormControl;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r5 = $r4[22];
        $r7 = <net.htmlparser.jericho.Config: net.htmlparser.jericho.Config$CompatibilityMode CurrentCompatibilityMode>;
        $z0 = virtualinvoke $r7.<net.htmlparser.jericho.Config$CompatibilityMode: boolean isFormFieldNameCaseInsensitive()>();
        r5[0] = 1;
        if $z0 == 0 goto label1;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase()>();
        r5[1] = 1;

     label1:
        $r8 = r0.<net.htmlparser.jericho.FormFields: java.util.LinkedHashMap map>;
        $r9 = virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);
        r6 = (net.htmlparser.jericho.FormField) $r9;
        r5[2] = 1;
        if r6 != null goto label2;

        $r10 = new net.htmlparser.jericho.FormField;
        specialinvoke $r10.<net.htmlparser.jericho.FormField: void <init>(java.lang.String)>(r3);
        r6 = $r10;
        $r11 = r0.<net.htmlparser.jericho.FormFields: java.util.LinkedHashMap map>;
        $r12 = virtualinvoke r6.<net.htmlparser.jericho.FormField: java.lang.String getName()>();
        virtualinvoke $r11.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r6);
        r5[3] = 1;

     label2:
        virtualinvoke r6.<net.htmlparser.jericho.FormField: void addFormControl(net.htmlparser.jericho.FormControl,java.lang.String)>(r1, r2);
        r5[4] = 1;
        return;
    }

    void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument)
    {
        net.htmlparser.jericho.FormFields r0;
        net.htmlparser.jericho.OutputDocument r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.FormControl r5;
        java.util.ArrayList $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: net.htmlparser.jericho.FormFields;
        r1 := @parameter0: net.htmlparser.jericho.OutputDocument;
        $r2 = <net.htmlparser.jericho.FormFields: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        $r6 = r0.<net.htmlparser.jericho.FormFields: java.util.ArrayList formControls>;
        r4 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.FormControl) $r7;
        virtualinvoke r1.<net.htmlparser.jericho.OutputDocument: void replace(net.htmlparser.jericho.FormControl)>(r5);
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.FormFields: boolean[][] $VRi()>();
        r1 = $r0[24];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;

        $r0 = newmultiarray (boolean)[25][];
        <net.htmlparser.jericho.FormFields: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[7];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[8];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[4];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[4];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[7];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[29];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[17];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[7];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[4];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[5];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[4];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/FormFields", 3399607009508323171L);
        return $r0;
    }
}
public interface  net.htmlparser.jericho.HTMLElementName extends java.lang.Object
{
    public static final java.lang.String A;
    public static final java.lang.String ABBR;
    public static final java.lang.String ACRONYM;
    public static final java.lang.String ADDRESS;
    public static final java.lang.String APPLET;
    public static final java.lang.String AREA;
    public static final java.lang.String ARTICLE;
    public static final java.lang.String ASIDE;
    public static final java.lang.String AUDIO;
    public static final java.lang.String B;
    public static final java.lang.String BASE;
    public static final java.lang.String BASEFONT;
    public static final java.lang.String BDI;
    public static final java.lang.String BDO;
    public static final java.lang.String BIG;
    public static final java.lang.String BLOCKQUOTE;
    public static final java.lang.String BODY;
    public static final java.lang.String BR;
    public static final java.lang.String BUTTON;
    public static final java.lang.String CANVAS;
    public static final java.lang.String CAPTION;
    public static final java.lang.String CENTER;
    public static final java.lang.String CITE;
    public static final java.lang.String CODE;
    public static final java.lang.String COL;
    public static final java.lang.String COLGROUP;
    public static final java.lang.String COMMAND;
    public static final java.lang.String DATALIST;
    public static final java.lang.String DD;
    public static final java.lang.String DEL;
    public static final java.lang.String DETAILS;
    public static final java.lang.String DFN;
    public static final java.lang.String DIR;
    public static final java.lang.String DIV;
    public static final java.lang.String DL;
    public static final java.lang.String DT;
    public static final java.lang.String EM;
    public static final java.lang.String EMBED;
    public static final java.lang.String FIELDSET;
    public static final java.lang.String FIGCAPTION;
    public static final java.lang.String FIGURE;
    public static final java.lang.String FONT;
    public static final java.lang.String FOOTER;
    public static final java.lang.String FORM;
    public static final java.lang.String FRAME;
    public static final java.lang.String FRAMESET;
    public static final java.lang.String H1;
    public static final java.lang.String H2;
    public static final java.lang.String H3;
    public static final java.lang.String H4;
    public static final java.lang.String H5;
    public static final java.lang.String H6;
    public static final java.lang.String HEAD;
    public static final java.lang.String HEADER;
    public static final java.lang.String HGROUP;
    public static final java.lang.String HR;
    public static final java.lang.String HTML;
    public static final java.lang.String I;
    public static final java.lang.String IFRAME;
    public static final java.lang.String IMG;
    public static final java.lang.String INPUT;
    public static final java.lang.String INS;
    public static final java.lang.String ISINDEX;
    public static final java.lang.String KBD;
    public static final java.lang.String KEYGEN;
    public static final java.lang.String LABEL;
    public static final java.lang.String LEGEND;
    public static final java.lang.String LI;
    public static final java.lang.String LINK;
    public static final java.lang.String MAP;
    public static final java.lang.String MARK;
    public static final java.lang.String MENU;
    public static final java.lang.String META;
    public static final java.lang.String METER;
    public static final java.lang.String NAV;
    public static final java.lang.String NOFRAMES;
    public static final java.lang.String NOSCRIPT;
    public static final java.lang.String OBJECT;
    public static final java.lang.String OL;
    public static final java.lang.String OPTGROUP;
    public static final java.lang.String OPTION;
    public static final java.lang.String OUTPUT;
    public static final java.lang.String P;
    public static final java.lang.String PARAM;
    public static final java.lang.String PRE;
    public static final java.lang.String PROGRESS;
    public static final java.lang.String Q;
    public static final java.lang.String RP;
    public static final java.lang.String RT;
    public static final java.lang.String RUBY;
    public static final java.lang.String S;
    public static final java.lang.String SAMP;
    public static final java.lang.String SCRIPT;
    public static final java.lang.String SECTION;
    public static final java.lang.String SELECT;
    public static final java.lang.String SMALL;
    public static final java.lang.String SOURCE;
    public static final java.lang.String SPAN;
    public static final java.lang.String STRIKE;
    public static final java.lang.String STRONG;
    public static final java.lang.String STYLE;
    public static final java.lang.String SUB;
    public static final java.lang.String SUMMARY;
    public static final java.lang.String SUP;
    public static final java.lang.String TABLE;
    public static final java.lang.String TBODY;
    public static final java.lang.String TD;
    public static final java.lang.String TEXTAREA;
    public static final java.lang.String TFOOT;
    public static final java.lang.String TH;
    public static final java.lang.String THEAD;
    public static final java.lang.String TIME;
    public static final java.lang.String TITLE;
    public static final java.lang.String TR;
    public static final java.lang.String TT;
    public static final java.lang.String U;
    public static final java.lang.String UL;
    public static final java.lang.String VAR;
    public static final java.lang.String VIDEO;
    public static final java.lang.String WBR;
}
final class net.htmlparser.jericho.HTMLElementNameSet extends java.util.HashSet
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>()
    {
        net.htmlparser.jericho.HTMLElementNameSet r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.HTMLElementNameSet;
        $r1 = <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.util.HashSet: void <init>(int)>(1);
        r2[0] = 1;
        return;
    }

    public transient void <init>(java.lang.String[])
    {
        net.htmlparser.jericho.HTMLElementNameSet r0;
        java.lang.String[] r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.HTMLElementNameSet;
        r1 := @parameter0: java.lang.String[];
        $r2 = <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $i1 = lengthof r1;
        $i2 = $i1 * 2;
        specialinvoke r0.<java.util.HashSet: void <init>(int)>($i2);
        i0 = 0;
        r3[0] = 1;

     label1:
        $i3 = lengthof r1;
        r3[1] = 1;
        if i0 >= $i3 goto label2;

        $r4 = r1[i0];
        virtualinvoke r0.<net.htmlparser.jericho.HTMLElementNameSet: boolean add(java.lang.Object)>($r4);
        i0 = i0 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    public void <init>(java.util.Collection)
    {
        net.htmlparser.jericho.HTMLElementNameSet r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.HTMLElementNameSet;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();
        $i1 = $i0 * 2;
        specialinvoke r0.<java.util.HashSet: void <init>(int)>($i1);
        virtualinvoke r0.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>(r1);
        r3[0] = 1;
        return;
    }

    public void <init>(java.lang.String)
    {
        net.htmlparser.jericho.HTMLElementNameSet r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.HTMLElementNameSet;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        specialinvoke r0.<java.util.HashSet: void <init>(int)>(2);
        virtualinvoke r0.<net.htmlparser.jericho.HTMLElementNameSet: boolean add(java.lang.Object)>(r1);
        r3[0] = 1;
        return;
    }

    net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)
    {
        net.htmlparser.jericho.HTMLElementNameSet r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.HTMLElementNameSet;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        virtualinvoke r0.<net.htmlparser.jericho.HTMLElementNameSet: boolean add(java.lang.Object)>(r1);
        r3[0] = 1;
        return r0;
    }

    net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)
    {
        net.htmlparser.jericho.HTMLElementNameSet r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        java.lang.String r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: net.htmlparser.jericho.HTMLElementNameSet;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.String) $r6;
        virtualinvoke r0.<net.htmlparser.jericho.HTMLElementNameSet: boolean add(java.lang.Object)>(r5);
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return r0;
    }

    net.htmlparser.jericho.HTMLElementNameSet minus(java.lang.String)
    {
        net.htmlparser.jericho.HTMLElementNameSet r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.HTMLElementNameSet;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        virtualinvoke r0.<net.htmlparser.jericho.HTMLElementNameSet: boolean remove(java.lang.Object)>(r1);
        r3[0] = 1;
        return r0;
    }

    net.htmlparser.jericho.HTMLElementNameSet minus(java.util.Collection)
    {
        net.htmlparser.jericho.HTMLElementNameSet r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        java.lang.String r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: net.htmlparser.jericho.HTMLElementNameSet;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.lang.String) $r6;
        virtualinvoke r0.<net.htmlparser.jericho.HTMLElementNameSet: boolean remove(java.lang.Object)>(r5);
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return r0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRi()>();
        r1 = $r0[8];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <net.htmlparser.jericho.HTMLElementNameSet: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[4];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/HTMLElementNameSet", -6363178421137424583L);
        return $r0;
    }
}
final class net.htmlparser.jericho.HTMLElementTerminatingTagNameSets extends java.lang.Object
{
    public final java.util.Set TerminatingStartTagNameSet;
    public final java.util.Set TerminatingEndTagNameSet;
    public final java.util.Set NonterminatingElementNameSet;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.util.Set, java.util.Set, java.util.Set)
    {
        net.htmlparser.jericho.HTMLElementTerminatingTagNameSets r0;
        java.util.Set r1, r2, r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        r1 := @parameter0: java.util.Set;
        r2 := @parameter1: java.util.Set;
        r3 := @parameter2: java.util.Set;
        $r4 = <net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set TerminatingStartTagNameSet> = r1;
        r0.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set TerminatingEndTagNameSet> = r2;
        r0.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set NonterminatingElementNameSet> = r3;
        r5[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/HTMLElementTerminatingTagNameSets", 9255369870627L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.HTMLElements extends java.lang.Object
{
    private static final java.util.List ALL;
    private static final net.htmlparser.jericho.HTMLElementNameSet BLOCK;
    private static final net.htmlparser.jericho.HTMLElementNameSet INLINE;
    private static final net.htmlparser.jericho.HTMLElementNameSet END_TAG_FORBIDDEN_SET;
    private static final net.htmlparser.jericho.HTMLElementNameSet _UL_OL;
    private static final net.htmlparser.jericho.HTMLElementNameSet _DD_DT;
    private static final net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR;
    private static final net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR_TD_TH;
    private static final net.htmlparser.jericho.HTMLElementNameSet DEPRECATED;
    private static final net.htmlparser.jericho.HTMLElementNameSet START_TAG_OPTIONAL_SET;
    private static final java.util.HashMap CONSTANT_NAME_MAP;
    private static final java.util.HashMap TERMINATING_TAG_NAME_SETS_MAP;
    private static final java.util.Set END_TAG_OPTIONAL_SET;
    private static final net.htmlparser.jericho.HTMLElementNameSet END_TAG_REQUIRED_SET;
    private static final net.htmlparser.jericho.HTMLElementNameSet CLOSING_SLASH_IGNORED_SET;
    static final net.htmlparser.jericho.HTMLElementNameSet END_TAG_REQUIRED_NESTING_FORBIDDEN_SET;
    private static final net.htmlparser.jericho.HTMLElementNameSet END_TAG_OPTIONAL_NESTING_FORBIDDEN_SET;
    private static final net.htmlparser.jericho.HTMLElementNameSet NESTING_FORBIDDEN_SET;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.HTMLElements r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.HTMLElements;
        $r1 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static final java.util.List getElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.List $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        $r2 = <net.htmlparser.jericho.HTMLElements: java.util.List ALL>;
        r1[0] = 1;
        return $r2;
    }

    public static java.util.Set getBlockLevelElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.HTMLElementNameSet $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        $r2 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet BLOCK>;
        r1[0] = 1;
        return $r2;
    }

    public static java.util.Set getInlineLevelElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.HTMLElementNameSet $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $r2 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet INLINE>;
        r1[0] = 1;
        return $r2;
    }

    public static java.util.Set getDeprecatedElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.HTMLElementNameSet $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        $r2 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet DEPRECATED>;
        r1[0] = 1;
        return $r2;
    }

    public static java.util.Set getEndTagForbiddenElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.HTMLElementNameSet $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        $r2 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_FORBIDDEN_SET>;
        r1[0] = 1;
        return $r2;
    }

    public static java.util.Set getEndTagOptionalElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.Set $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        $r2 = <net.htmlparser.jericho.HTMLElements: java.util.Set END_TAG_OPTIONAL_SET>;
        r1[0] = 1;
        return $r2;
    }

    public static java.util.Set getEndTagRequiredElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.HTMLElementNameSet $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];
        $r2 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_REQUIRED_SET>;
        r1[0] = 1;
        return $r2;
    }

    public static java.util.Set getStartTagOptionalElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.HTMLElementNameSet $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[8];
        $r2 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet START_TAG_OPTIONAL_SET>;
        r1[0] = 1;
        return $r2;
    }

    public static java.util.Set getTerminatingStartTagNames(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.HTMLElementTerminatingTagNameSets r3;
        java.util.Set $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r3 = staticinvoke <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementTerminatingTagNameSets getTerminatingTagNameSets(java.lang.String)>(r0);
        r2[0] = 1;
        if r3 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r4 = r3.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set TerminatingStartTagNameSet>;
        r2[2] = 1;
        return $r4;
    }

    public static java.util.Set getTerminatingEndTagNames(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.HTMLElementTerminatingTagNameSets r3;
        java.util.Set $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        r3 = staticinvoke <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementTerminatingTagNameSets getTerminatingTagNameSets(java.lang.String)>(r0);
        r2[0] = 1;
        if r3 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r4 = r3.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set TerminatingEndTagNameSet>;
        r2[2] = 1;
        return $r4;
    }

    public static java.util.Set getNonterminatingElementNames(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.HTMLElementTerminatingTagNameSets r3;
        java.util.Set $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r3 = staticinvoke <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementTerminatingTagNameSets getTerminatingTagNameSets(java.lang.String)>(r0);
        r2[0] = 1;
        if r3 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r4 = r3.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set NonterminatingElementNameSet>;
        r2[2] = 1;
        return $r4;
    }

    public static java.util.Set getNestingForbiddenElementNames()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.HTMLElementNameSet $r2;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[12];
        $r2 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet NESTING_FORBIDDEN_SET>;
        r1[0] = 1;
        return $r2;
    }

    static final java.lang.String getConstantElementName(java.lang.String)
    {
        java.lang.String r0, r3, $r6;
        boolean[][] $r1;
        boolean[] r2;
        java.util.HashMap $r4;
        java.lang.Object $r5;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r4 = <net.htmlparser.jericho.HTMLElements: java.util.HashMap CONSTANT_NAME_MAP>;
        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);
        r3 = (java.lang.String) $r5;
        r2[0] = 1;
        if r3 == null goto label1;

        $r6 = r3;
        r2[1] = 1;
        goto label2;

     label1:
        $r6 = r0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r6;
    }

    static final boolean isClosingSlashIgnored(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1;
        net.htmlparser.jericho.HTMLElementNameSet $r3;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $z0 = <net.htmlparser.jericho.Config: boolean IsHTMLEmptyElementTagRecognised>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        r2[1] = 1;
        return 0;

     label1:
        $r3 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet CLOSING_SLASH_IGNORED_SET>;
        $z1 = virtualinvoke $r3.<net.htmlparser.jericho.HTMLElementNameSet: boolean contains(java.lang.Object)>(r0);
        r2[2] = 1;
        return $z1;
    }

    static final net.htmlparser.jericho.HTMLElementTerminatingTagNameSets getTerminatingTagNameSets(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        net.htmlparser.jericho.HTMLElementTerminatingTagNameSets $r5;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = <net.htmlparser.jericho.HTMLElements: java.util.HashMap TERMINATING_TAG_NAME_SETS_MAP>;
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);
        $r5 = (net.htmlparser.jericho.HTMLElementTerminatingTagNameSets) $r4;
        r2[0] = 1;
        return $r5;
    }

    private static java.util.HashMap buildTerminatingTagNameSetsMap()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.HashMap r2, $r4;
        net.htmlparser.jericho.HTMLElementNameSet $r3, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r19, $r20, $r21, $r22, $r23, $r26, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36, $r37, $r40, $r41, $r42, $r45, $r46, $r47, $r48, $r49, $r50, $r53, $r54, $r55, $r56, $r57, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r80, $r81, $r82, $r83, $r86, $r87, $r88, $r89, $r92, $r93, $r94, $r95, $r96, $r97, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r109, $r110, $r111, $r112, $r113, $r114, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r126, $r127, $r128, $r129, $r130, $r131, $r134, $r135, $r136, $r137, $r138, $r139;
        net.htmlparser.jericho.HTMLElementTerminatingTagNameSets $r5, $r10, $r18, $r25, $r32, $r39, $r44, $r52, $r59, $r79, $r85, $r91, $r99, $r108, $r116, $r125, $r133;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[16];
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>(int,float)>(20, 1.0F);
        r2 = $r4;
        $r5 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r3 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r3.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r6 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r6.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("html");
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("body");
        $r8 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r8.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("html");
        specialinvoke $r5.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r3, $r7, $r8);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("body", $r5);
        $r10 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r11 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r12 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR>;
        specialinvoke $r11.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r12);
        $r13 = virtualinvoke $r11.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("colgroup");
        $r14 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r14.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        $r15 = virtualinvoke $r14.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("colgroup");
        $r16 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r16.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        specialinvoke $r10.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r13, $r15, $r16);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("colgroup", $r10);
        $r18 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r19 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r20 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _DD_DT>;
        specialinvoke $r19.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r20);
        $r21 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r21.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("dl");
        $r22 = virtualinvoke $r21.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("dd");
        $r23 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r23.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("dl");
        specialinvoke $r18.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r19, $r22, $r23);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("dd", $r18);
        $r25 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r26 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r27 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _DD_DT>;
        specialinvoke $r26.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r27);
        $r28 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r28.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("dl");
        $r29 = virtualinvoke $r28.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("dt");
        $r30 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r30.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("dl");
        specialinvoke $r25.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r26, $r29, $r30);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("dt", $r25);
        $r32 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r33 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r33.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("body");
        $r34 = virtualinvoke $r33.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("frameset");
        $r35 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r35.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("html");
        $r36 = virtualinvoke $r35.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("head");
        $r37 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r37.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        specialinvoke $r32.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r34, $r36, $r37);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("head", $r32);
        $r39 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r40 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r40.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r41 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r41.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("html");
        $r42 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r42.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("html");
        specialinvoke $r39.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r40, $r41, $r42);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("html", $r39);
        $r44 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r45 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r45.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("li");
        $r46 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r47 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _UL_OL>;
        specialinvoke $r46.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r47);
        $r48 = virtualinvoke $r46.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("li");
        $r49 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r50 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _UL_OL>;
        specialinvoke $r49.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r50);
        specialinvoke $r44.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r45, $r48, $r49);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("li", $r44);
        $r52 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r53 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r53.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("option");
        $r54 = virtualinvoke $r53.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("optgroup");
        $r55 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r55.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("select");
        $r56 = virtualinvoke $r55.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("option");
        $r57 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r57.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        specialinvoke $r52.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r54, $r56, $r57);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("option", $r52);
        $r59 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r60 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r61 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet BLOCK>;
        specialinvoke $r60.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r61);
        $r62 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _DD_DT>;
        $r63 = virtualinvoke $r60.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r62);
        $r64 = virtualinvoke $r63.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("th");
        $r65 = virtualinvoke $r64.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("td");
        $r66 = virtualinvoke $r65.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("li");
        $r67 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r68 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet BLOCK>;
        specialinvoke $r67.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r68);
        $r69 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _DD_DT>;
        $r70 = virtualinvoke $r67.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r69);
        $r71 = virtualinvoke $r70.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("body");
        $r72 = virtualinvoke $r71.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("html");
        $r73 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR_TD_TH>;
        $r74 = virtualinvoke $r72.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r73);
        $r75 = virtualinvoke $r74.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("caption");
        $r76 = virtualinvoke $r75.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("legend");
        $r77 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r77.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        specialinvoke $r59.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r66, $r76, $r77);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("p", $r59);
        $r79 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r80 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r80.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("rp");
        $r81 = virtualinvoke $r80.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("rt");
        $r82 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r82.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("ruby");
        $r83 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r83.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        specialinvoke $r79.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r81, $r82, $r83);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("rp", $r79);
        $r85 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r86 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r86.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("rp");
        $r87 = virtualinvoke $r86.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("rt");
        $r88 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r88.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("ruby");
        $r89 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r89.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        specialinvoke $r85.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r87, $r88, $r89);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("rt", $r85);
        $r91 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r92 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r92.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("tbody");
        $r93 = virtualinvoke $r92.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tfoot");
        $r94 = virtualinvoke $r93.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("thead");
        $r95 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r95.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        $r96 = virtualinvoke $r95.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tbody");
        $r97 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r97.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        specialinvoke $r91.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r94, $r96, $r97);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("tbody", $r91);
        $r99 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r100 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r101 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR_TD_TH>;
        specialinvoke $r100.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r101);
        $r102 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r103 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR>;
        specialinvoke $r102.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r103);
        $r104 = virtualinvoke $r102.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("table");
        $r105 = virtualinvoke $r104.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("td");
        $r106 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r106.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        specialinvoke $r99.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r100, $r105, $r106);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("td", $r99);
        $r108 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r109 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r109.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("tbody");
        $r110 = virtualinvoke $r109.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tfoot");
        $r111 = virtualinvoke $r110.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("thead");
        $r112 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r112.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        $r113 = virtualinvoke $r112.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tfoot");
        $r114 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r114.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        specialinvoke $r108.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r111, $r113, $r114);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("tfoot", $r108);
        $r116 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r117 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r118 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR_TD_TH>;
        specialinvoke $r117.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r118);
        $r119 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r120 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR>;
        specialinvoke $r119.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r120);
        $r121 = virtualinvoke $r119.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("table");
        $r122 = virtualinvoke $r121.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("th");
        $r123 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r123.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        specialinvoke $r116.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r117, $r122, $r123);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("th", $r116);
        $r125 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r126 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r126.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("tbody");
        $r127 = virtualinvoke $r126.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tfoot");
        $r128 = virtualinvoke $r127.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("thead");
        $r129 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r129.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        $r130 = virtualinvoke $r129.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("thead");
        $r131 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r131.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        specialinvoke $r125.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r128, $r130, $r131);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("thead", $r125);
        $r133 = new net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r134 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r135 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR>;
        specialinvoke $r134.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r135);
        $r136 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r137 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR>;
        specialinvoke $r136.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r137);
        $r138 = virtualinvoke $r136.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("table");
        $r139 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r139.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("table");
        specialinvoke $r133.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: void <init>(java.util.Set,java.util.Set,java.util.Set)>($r134, $r138, $r139);
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("tr", $r133);
        r1[0] = 1;
        return r2;
    }

    private static java.util.HashMap buildTagMap()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.HashMap r2, $r5;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;

        $r0 = <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();

     label0:
        r1 = $r0[17];
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>(int,float)>(132, 1.0F);
        r2 = $r5;
        $r6 = <net.htmlparser.jericho.HTMLElements: java.util.List ALL>;
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();
        r1[0] = 1;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        r1[1] = 1;
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.String) $r7;
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r4);
        r1[2] = 1;
        goto label1;

     label2:
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("!element", "!element");
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("!attlist", "!attlist");
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("!entity", "!entity");
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("!notation", "!notation");
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("![if", "![if");
        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("![endif", "![endif");
        r1[3] = 1;
        return r2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.ArrayList $r2;
        java.lang.String[] $r3, $r6, $r8, $r10;
        java.util.List $r4, $r44;
        net.htmlparser.jericho.HTMLElementNameSet $r5, $r7, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r43, $r45, $r46, $r47, $r49, $r50, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88;
        java.util.HashMap $r39, $r40, $r41;
        java.util.Set $r42, $r48, $r51;

        $r0 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean[][] $VRi()>();
        r1 = $r0[18];
        $r2 = new java.util.ArrayList;
        $r3 = newarray (java.lang.String)[120];
        $r3[0] = "a";
        $r3[1] = "abbr";
        $r3[2] = "acronym";
        $r3[3] = "address";
        $r3[4] = "applet";
        $r3[5] = "area";
        $r3[6] = "article";
        $r3[7] = "aside";
        $r3[8] = "audio";
        $r3[9] = "b";
        $r3[10] = "base";
        $r3[11] = "basefont";
        $r3[12] = "bdi";
        $r3[13] = "bdo";
        $r3[14] = "big";
        $r3[15] = "blockquote";
        $r3[16] = "body";
        $r3[17] = "br";
        $r3[18] = "button";
        $r3[19] = "canvas";
        $r3[20] = "caption";
        $r3[21] = "center";
        $r3[22] = "cite";
        $r3[23] = "code";
        $r3[24] = "col";
        $r3[25] = "colgroup";
        $r3[26] = "command";
        $r3[27] = "datalist";
        $r3[28] = "dd";
        $r3[29] = "del";
        $r3[30] = "details";
        $r3[31] = "dfn";
        $r3[32] = "dir";
        $r3[33] = "div";
        $r3[34] = "dl";
        $r3[35] = "dt";
        $r3[36] = "em";
        $r3[37] = "embed";
        $r3[38] = "fieldset";
        $r3[39] = "figcaption";
        $r3[40] = "figure";
        $r3[41] = "font";
        $r3[42] = "footer";
        $r3[43] = "form";
        $r3[44] = "frame";
        $r3[45] = "frameset";
        $r3[46] = "h1";
        $r3[47] = "h2";
        $r3[48] = "h3";
        $r3[49] = "h4";
        $r3[50] = "h5";
        $r3[51] = "h6";
        $r3[52] = "head";
        $r3[53] = "header";
        $r3[54] = "hgroup";
        $r3[55] = "hr";
        $r3[56] = "html";
        $r3[57] = "i";
        $r3[58] = "iframe";
        $r3[59] = "img";
        $r3[60] = "input";
        $r3[61] = "ins";
        $r3[62] = "isindex";
        $r3[63] = "kbd";
        $r3[64] = "keygen";
        $r3[65] = "label";
        $r3[66] = "legend";
        $r3[67] = "li";
        $r3[68] = "link";
        $r3[69] = "map";
        $r3[70] = "mark";
        $r3[71] = "menu";
        $r3[72] = "meta";
        $r3[73] = "meter";
        $r3[74] = "nav";
        $r3[75] = "noframes";
        $r3[76] = "noscript";
        $r3[77] = "object";
        $r3[78] = "ol";
        $r3[79] = "optgroup";
        $r3[80] = "option";
        $r3[81] = "output";
        $r3[82] = "p";
        $r3[83] = "param";
        $r3[84] = "pre";
        $r3[85] = "progress";
        $r3[86] = "q";
        $r3[87] = "rp";
        $r3[88] = "rt";
        $r3[89] = "ruby";
        $r3[90] = "s";
        $r3[91] = "samp";
        $r3[92] = "script";
        $r3[93] = "section";
        $r3[94] = "select";
        $r3[95] = "small";
        $r3[96] = "source";
        $r3[97] = "span";
        $r3[98] = "strike";
        $r3[99] = "strong";
        $r3[100] = "style";
        $r3[101] = "sub";
        $r3[102] = "summary";
        $r3[103] = "sup";
        $r3[104] = "table";
        $r3[105] = "tbody";
        $r3[106] = "td";
        $r3[107] = "textarea";
        $r3[108] = "tfoot";
        $r3[109] = "th";
        $r3[110] = "thead";
        $r3[111] = "time";
        $r3[112] = "title";
        $r3[113] = "tr";
        $r3[114] = "tt";
        $r3[115] = "u";
        $r3[116] = "ul";
        $r3[117] = "var";
        $r3[118] = "video";
        $r3[119] = "wbr";
        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);
        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);
        <net.htmlparser.jericho.HTMLElements: java.util.List ALL> = $r2;
        $r5 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r6 = newarray (java.lang.String)[32];
        $r6[0] = "article";
        $r6[1] = "aside";
        $r6[2] = "footer";
        $r6[3] = "details";
        $r6[4] = "section";
        $r6[5] = "header";
        $r6[6] = "hgroup";
        $r6[7] = "nav";
        $r6[8] = "p";
        $r6[9] = "h1";
        $r6[10] = "h2";
        $r6[11] = "h3";
        $r6[12] = "h4";
        $r6[13] = "h5";
        $r6[14] = "h6";
        $r6[15] = "ul";
        $r6[16] = "ol";
        $r6[17] = "dir";
        $r6[18] = "menu";
        $r6[19] = "pre";
        $r6[20] = "dl";
        $r6[21] = "div";
        $r6[22] = "center";
        $r6[23] = "noscript";
        $r6[24] = "noframes";
        $r6[25] = "blockquote";
        $r6[26] = "form";
        $r6[27] = "isindex";
        $r6[28] = "hr";
        $r6[29] = "table";
        $r6[30] = "fieldset";
        $r6[31] = "address";
        specialinvoke $r5.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String[])>($r6);
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet BLOCK> = $r5;
        $r7 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r8 = newarray (java.lang.String)[51];
        $r8[0] = "bdi";
        $r8[1] = "keygen";
        $r8[2] = "mark";
        $r8[3] = "meter";
        $r8[4] = "output";
        $r8[5] = "progress";
        $r8[6] = "rp";
        $r8[7] = "rt";
        $r8[8] = "ruby";
        $r8[9] = "time";
        $r8[10] = "wbr";
        $r8[11] = "tt";
        $r8[12] = "i";
        $r8[13] = "b";
        $r8[14] = "u";
        $r8[15] = "s";
        $r8[16] = "strike";
        $r8[17] = "big";
        $r8[18] = "small";
        $r8[19] = "em";
        $r8[20] = "strong";
        $r8[21] = "dfn";
        $r8[22] = "code";
        $r8[23] = "samp";
        $r8[24] = "kbd";
        $r8[25] = "var";
        $r8[26] = "cite";
        $r8[27] = "abbr";
        $r8[28] = "acronym";
        $r8[29] = "a";
        $r8[30] = "img";
        $r8[31] = "applet";
        $r8[32] = "object";
        $r8[33] = "font";
        $r8[34] = "basefont";
        $r8[35] = "br";
        $r8[36] = "script";
        $r8[37] = "map";
        $r8[38] = "q";
        $r8[39] = "sub";
        $r8[40] = "sup";
        $r8[41] = "span";
        $r8[42] = "bdo";
        $r8[43] = "iframe";
        $r8[44] = "input";
        $r8[45] = "select";
        $r8[46] = "textarea";
        $r8[47] = "label";
        $r8[48] = "button";
        $r8[49] = "ins";
        $r8[50] = "del";
        specialinvoke $r7.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String[])>($r8);
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet INLINE> = $r7;
        $r9 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r10 = newarray (java.lang.String)[13];
        $r10[0] = "area";
        $r10[1] = "base";
        $r10[2] = "basefont";
        $r10[3] = "br";
        $r10[4] = "col";
        $r10[5] = "frame";
        $r10[6] = "hr";
        $r10[7] = "img";
        $r10[8] = "input";
        $r10[9] = "isindex";
        $r10[10] = "link";
        $r10[11] = "meta";
        $r10[12] = "param";
        specialinvoke $r9.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String[])>($r10);
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_FORBIDDEN_SET> = $r9;
        $r11 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r11.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("ul");
        $r12 = virtualinvoke $r11.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("ol");
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _UL_OL> = $r12;
        $r13 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r13.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("dd");
        $r14 = virtualinvoke $r13.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("dt");
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _DD_DT> = $r14;
        $r15 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r15.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.lang.String)>("thead");
        $r16 = virtualinvoke $r15.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tbody");
        $r17 = virtualinvoke $r16.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tfoot");
        $r18 = virtualinvoke $r17.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tr");
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR> = $r18;
        $r19 = new net.htmlparser.jericho.HTMLElementNameSet;
        $r20 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR>;
        specialinvoke $r19.<net.htmlparser.jericho.HTMLElementNameSet: void <init>(java.util.Collection)>($r20);
        $r21 = virtualinvoke $r19.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("td");
        $r22 = virtualinvoke $r21.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("th");
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet _THEAD_TBODY_TFOOT_TR_TD_TH> = $r22;
        $r23 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r23.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r24 = virtualinvoke $r23.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("applet");
        $r25 = virtualinvoke $r24.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("basefont");
        $r26 = virtualinvoke $r25.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("center");
        $r27 = virtualinvoke $r26.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("dir");
        $r28 = virtualinvoke $r27.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("font");
        $r29 = virtualinvoke $r28.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("isindex");
        $r30 = virtualinvoke $r29.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("menu");
        $r31 = virtualinvoke $r30.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("s");
        $r32 = virtualinvoke $r31.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("strike");
        $r33 = virtualinvoke $r32.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("u");
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet DEPRECATED> = $r33;
        $r34 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r34.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r35 = virtualinvoke $r34.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("body");
        $r36 = virtualinvoke $r35.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("head");
        $r37 = virtualinvoke $r36.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("html");
        $r38 = virtualinvoke $r37.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("tbody");
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet START_TAG_OPTIONAL_SET> = $r38;
        $r39 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.HashMap buildTagMap()>();
        <net.htmlparser.jericho.HTMLElements: java.util.HashMap CONSTANT_NAME_MAP> = $r39;
        $r40 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.HashMap buildTerminatingTagNameSetsMap()>();
        <net.htmlparser.jericho.HTMLElements: java.util.HashMap TERMINATING_TAG_NAME_SETS_MAP> = $r40;
        $r41 = <net.htmlparser.jericho.HTMLElements: java.util.HashMap TERMINATING_TAG_NAME_SETS_MAP>;
        $r42 = virtualinvoke $r41.<java.util.HashMap: java.util.Set keySet()>();
        <net.htmlparser.jericho.HTMLElements: java.util.Set END_TAG_OPTIONAL_SET> = $r42;
        $r43 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r43.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r44 = <net.htmlparser.jericho.HTMLElements: java.util.List ALL>;
        $r45 = virtualinvoke $r43.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r44);
        $r46 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_FORBIDDEN_SET>;
        $r47 = virtualinvoke $r45.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet minus(java.util.Collection)>($r46);
        $r48 = <net.htmlparser.jericho.HTMLElements: java.util.Set END_TAG_OPTIONAL_SET>;
        $r49 = virtualinvoke $r47.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet minus(java.util.Collection)>($r48);
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_REQUIRED_SET> = $r49;
        $r50 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r50.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r51 = <net.htmlparser.jericho.HTMLElements: java.util.Set END_TAG_OPTIONAL_SET>;
        $r52 = virtualinvoke $r50.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r51);
        $r53 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_REQUIRED_SET>;
        $r54 = virtualinvoke $r52.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r53);
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet CLOSING_SLASH_IGNORED_SET> = $r54;
        $r55 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r55.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r56 = virtualinvoke $r55.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("a");
        $r57 = virtualinvoke $r56.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("address");
        $r58 = virtualinvoke $r57.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("applet");
        $r59 = virtualinvoke $r58.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("button");
        $r60 = virtualinvoke $r59.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("caption");
        $r61 = virtualinvoke $r60.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("datalist");
        $r62 = virtualinvoke $r61.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("form");
        $r63 = virtualinvoke $r62.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("hgroup");
        $r64 = virtualinvoke $r63.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("iframe");
        $r65 = virtualinvoke $r64.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("label");
        $r66 = virtualinvoke $r65.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("legend");
        $r67 = virtualinvoke $r66.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("optgroup");
        $r68 = virtualinvoke $r67.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("script");
        $r69 = virtualinvoke $r68.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("select");
        $r70 = virtualinvoke $r69.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("style");
        $r71 = virtualinvoke $r70.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("textarea");
        $r72 = virtualinvoke $r71.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("title");
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_REQUIRED_NESTING_FORBIDDEN_SET> = $r72;
        $r73 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r73.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r74 = virtualinvoke $r73.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("body");
        $r75 = virtualinvoke $r74.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("colgroup");
        $r76 = virtualinvoke $r75.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("head");
        $r77 = virtualinvoke $r76.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("html");
        $r78 = virtualinvoke $r77.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("option");
        $r79 = virtualinvoke $r78.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("p");
        $r80 = virtualinvoke $r79.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("rp");
        $r81 = virtualinvoke $r80.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.lang.String)>("rt");
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_OPTIONAL_NESTING_FORBIDDEN_SET> = $r81;
        $r82 = new net.htmlparser.jericho.HTMLElementNameSet;
        specialinvoke $r82.<net.htmlparser.jericho.HTMLElementNameSet: void <init>()>();
        $r83 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_REQUIRED_NESTING_FORBIDDEN_SET>;
        $r84 = virtualinvoke $r82.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r83);
        $r85 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_OPTIONAL_NESTING_FORBIDDEN_SET>;
        $r86 = virtualinvoke $r84.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r85);
        $r87 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_FORBIDDEN_SET>;
        $r88 = virtualinvoke $r86.<net.htmlparser.jericho.HTMLElementNameSet: net.htmlparser.jericho.HTMLElementNameSet union(java.util.Collection)>($r87);
        <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet NESTING_FORBIDDEN_SET> = $r88;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        $r0 = newmultiarray (boolean)[19][];
        <net.htmlparser.jericho.HTMLElements: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[3];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[3];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[4];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[3];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[4];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/HTMLElements", 632055130968547886L);
        return $r0;
    }
}
final class net.htmlparser.jericho.IntStringHashMap$Entry extends java.lang.Object
{
    final int key;
    java.lang.String value;
    net.htmlparser.jericho.IntStringHashMap$Entry next;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(int, java.lang.String, net.htmlparser.jericho.IntStringHashMap$Entry)
    {
        net.htmlparser.jericho.IntStringHashMap$Entry r0, r2;
        int i0;
        java.lang.String r1;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap$Entry;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: net.htmlparser.jericho.IntStringHashMap$Entry;
        $r3 = <net.htmlparser.jericho.IntStringHashMap$Entry: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.IntStringHashMap$Entry: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.IntStringHashMap$Entry: int key> = i0;
        r0.<net.htmlparser.jericho.IntStringHashMap$Entry: java.lang.String value> = r1;
        r0.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next> = r2;
        r4[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.IntStringHashMap$Entry: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.IntStringHashMap$Entry: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/IntStringHashMap$Entry", 9255369870627L);
        return $r0;
    }
}
final class net.htmlparser.jericho.IntStringHashMap extends java.lang.Object
{
    private static final int DEFAULT_INITIAL_CAPACITY;
    private static final float DEFAULT_LOAD_FACTOR;
    private transient net.htmlparser.jericho.IntStringHashMap$Entry[] entries;
    private transient int size;
    private int threshold;
    private float loadFactor;
    private int bitmask;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(int, float)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        int i0, i1, $i2, $i3;
        float f0, $f1, $f2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.IntStringHashMap$Entry[] $r3;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        i0 := @parameter0: int;
        f0 := @parameter1: float;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.IntStringHashMap: float loadFactor> = f0;
        i1 = 1;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i1 >= i0 goto label2;

        i1 = i1 << 1;
        r2[2] = 1;
        goto label1;

     label2:
        $f1 = (float) i1;
        $f2 = $f1 * f0;
        $i2 = (int) $f2;
        r0.<net.htmlparser.jericho.IntStringHashMap: int threshold> = $i2;
        $r3 = newarray (net.htmlparser.jericho.IntStringHashMap$Entry)[i1];
        r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries> = $r3;
        $i3 = i1 - 1;
        r0.<net.htmlparser.jericho.IntStringHashMap: int bitmask> = $i3;
        r2[3] = 1;
        return;
    }

    public void <init>(int)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: void <init>(int,float)>(i0, 0.75F);
        r2[0] = 1;
        return;
    }

    public void <init>()
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: void <init>(int,float)>(15, 0.75F);
        r2[0] = 1;
        return;
    }

    public int size()
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<net.htmlparser.jericho.IntStringHashMap: int size>;
        r2[0] = 1;
        return $i0;
    }

    public boolean isEmpty()
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $i0 = r0.<net.htmlparser.jericho.IntStringHashMap: int size>;
        r2[0] = 1;
        if $i0 != 0 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    private int getIndex(int)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $i1 = r0.<net.htmlparser.jericho.IntStringHashMap: int bitmask>;
        $i2 = i0 & $i1;
        r2[0] = 1;
        return $i2;
    }

    public java.lang.String get(int)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.IntStringHashMap$Entry r3;
        net.htmlparser.jericho.IntStringHashMap$Entry[] $r4;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r4 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $i1 = specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: int getIndex(int)>(i0);
        r3 = $r4[$i1];
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if r3 == null goto label3;

        $i2 = r3.<net.htmlparser.jericho.IntStringHashMap$Entry: int key>;
        r2[2] = 1;
        if i0 != $i2 goto label2;

        $r5 = r3.<net.htmlparser.jericho.IntStringHashMap$Entry: java.lang.String value>;
        r2[3] = 1;
        return $r5;

     label2:
        r3 = r3.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        r2[4] = 1;
        goto label1;

     label3:
        r2[5] = 1;
        return null;
    }

    private net.htmlparser.jericho.IntStringHashMap$Entry getEntry(int)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.IntStringHashMap$Entry r3;
        net.htmlparser.jericho.IntStringHashMap$Entry[] $r4;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r4 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $i1 = specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: int getIndex(int)>(i0);
        r3 = $r4[$i1];
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if r3 == null goto label2;

        $i2 = r3.<net.htmlparser.jericho.IntStringHashMap$Entry: int key>;
        r2[2] = 1;
        if i0 == $i2 goto label2;

        r3 = r3.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        r2[3] = 1;
        goto label1;

     label2:
        r2[4] = 1;
        return r3;
    }

    public boolean containsKey(int)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.IntStringHashMap$Entry $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry getEntry(int)>(i0);
        r2[0] = 1;
        if $r3 == null goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public java.lang.String put(int, java.lang.String)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r1, r5;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.IntStringHashMap$Entry r4, $r8, $r10;
        net.htmlparser.jericho.IntStringHashMap$Entry[] $r6, $r7, $r9;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        i1 = specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: int getIndex(int)>(i0);
        $r6 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        r4 = $r6[i1];
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if r4 == null goto label3;

        $i2 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: int key>;
        r3[2] = 1;
        if i0 != $i2 goto label2;

        r5 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: java.lang.String value>;
        r4.<net.htmlparser.jericho.IntStringHashMap$Entry: java.lang.String value> = r1;
        r3[3] = 1;
        return r5;

     label2:
        r4 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        r3[4] = 1;
        goto label1;

     label3:
        $r7 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $r8 = new net.htmlparser.jericho.IntStringHashMap$Entry;
        $r9 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $r10 = $r9[i1];
        specialinvoke $r8.<net.htmlparser.jericho.IntStringHashMap$Entry: void <init>(int,java.lang.String,net.htmlparser.jericho.IntStringHashMap$Entry)>(i0, r1, $r10);
        $r7[i1] = $r8;
        $i3 = r0.<net.htmlparser.jericho.IntStringHashMap: int size>;
        $i4 = $i3 + 1;
        r0.<net.htmlparser.jericho.IntStringHashMap: int size> = $i4;
        $i5 = r0.<net.htmlparser.jericho.IntStringHashMap: int threshold>;
        r3[5] = 1;
        if $i3 < $i5 goto label4;

        specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: void increaseCapacity()>();
        r3[6] = 1;

     label4:
        r3[7] = 1;
        return null;
    }

    private void increaseCapacity()
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        net.htmlparser.jericho.IntStringHashMap$Entry[] r3, r4, $r7, $r8, $r9, $r10, $r12, $r13;
        net.htmlparser.jericho.IntStringHashMap$Entry r5, r6, $r11;
        float $f0, $f1, $f2;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r7 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        i0 = lengthof $r7;
        r3 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $i4 = i0 << 1;
        $r8 = newarray (net.htmlparser.jericho.IntStringHashMap$Entry)[$i4];
        r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries> = $r8;
        $r9 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $i5 = lengthof $r9;
        $i6 = $i5 - 1;
        r0.<net.htmlparser.jericho.IntStringHashMap: int bitmask> = $i6;
        r4 = r3;
        i1 = lengthof r4;
        i2 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i2 >= i1 goto label4;

        r5 = r4[i2];
        r2[2] = 1;

     label2:
        r2[3] = 1;
        if r5 == null goto label3;

        r6 = r5.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        $i7 = r5.<net.htmlparser.jericho.IntStringHashMap$Entry: int key>;
        i3 = specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: int getIndex(int)>($i7);
        $r10 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $r11 = $r10[i3];
        r5.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next> = $r11;
        $r12 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $r12[i3] = r5;
        r5 = r6;
        r2[4] = 1;
        goto label2;

     label3:
        i2 = i2 + 1;
        r2[5] = 1;
        goto label1;

     label4:
        $r13 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $i8 = lengthof $r13;
        $f0 = (float) $i8;
        $f1 = r0.<net.htmlparser.jericho.IntStringHashMap: float loadFactor>;
        $f2 = $f0 * $f1;
        $i9 = (int) $f2;
        r0.<net.htmlparser.jericho.IntStringHashMap: int threshold> = $i9;
        r2[6] = 1;
        return;
    }

    public java.lang.String remove(int)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        int i0, i1, $i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.IntStringHashMap$Entry r3, r4, $r7, $r8;
        net.htmlparser.jericho.IntStringHashMap$Entry[] $r5, $r6;
        java.lang.String $r10;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        i1 = specialinvoke r0.<net.htmlparser.jericho.IntStringHashMap: int getIndex(int)>(i0);
        r3 = null;
        $r5 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        r4 = $r5[i1];
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if r4 == null goto label5;

        $i2 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: int key>;
        r2[2] = 1;
        if i0 != $i2 goto label4;

        r2[3] = 1;
        if r3 != null goto label2;

        $r6 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $r7 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        $r6[i1] = $r7;
        r2[4] = 1;
        goto label3;

     label2:
        $r8 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        r3.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next> = $r8;
        r2[5] = 1;

     label3:
        $i3 = r0.<net.htmlparser.jericho.IntStringHashMap: int size>;
        $i4 = $i3 - 1;
        r0.<net.htmlparser.jericho.IntStringHashMap: int size> = $i4;
        $r10 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: java.lang.String value>;
        r2[6] = 1;
        return $r10;

     label4:
        r3 = r4;
        r4 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        r2[7] = 1;
        goto label1;

     label5:
        r2[8] = 1;
        return null;
    }

    public void clear()
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0;
        net.htmlparser.jericho.IntStringHashMap$Entry[] $r3;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        $r1 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        i0 = r0.<net.htmlparser.jericho.IntStringHashMap: int bitmask>;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i0 < 0 goto label2;

        $r3 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        $r3[i0] = null;
        i0 = i0 + -1;
        r2[2] = 1;
        goto label1;

     label2:
        r0.<net.htmlparser.jericho.IntStringHashMap: int size> = 0;
        r2[3] = 1;
        return;
    }

    public boolean containsValue(java.lang.String)
    {
        net.htmlparser.jericho.IntStringHashMap r0;
        java.lang.String r1, $r6, $r9;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1;
        net.htmlparser.jericho.IntStringHashMap$Entry r4, r8;
        net.htmlparser.jericho.IntStringHashMap$Entry[] $r5, $r7;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.IntStringHashMap;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        r3[0] = 1;
        if r1 != null goto label6;

        i0 = r0.<net.htmlparser.jericho.IntStringHashMap: int bitmask>;
        r3[1] = 1;

     label1:
        r3[2] = 1;
        if i0 < 0 goto label5;

        $r5 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        r4 = $r5[i0];
        r3[3] = 1;

     label2:
        r3[4] = 1;
        if r4 == null goto label4;

        $r6 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: java.lang.String value>;
        r3[5] = 1;
        if $r6 != null goto label3;

        r3[6] = 1;
        return 1;

     label3:
        r4 = r4.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        r3[7] = 1;
        goto label2;

     label4:
        i0 = i0 + -1;
        r3[8] = 1;
        goto label1;

     label5:
        r3[9] = 1;
        goto label11;

     label6:
        i1 = r0.<net.htmlparser.jericho.IntStringHashMap: int bitmask>;
        r3[10] = 1;

     label7:
        r3[11] = 1;
        if i1 < 0 goto label11;

        $r7 = r0.<net.htmlparser.jericho.IntStringHashMap: net.htmlparser.jericho.IntStringHashMap$Entry[] entries>;
        r8 = $r7[i1];
        r3[12] = 1;

     label8:
        r3[13] = 1;
        if r8 == null goto label10;

        $r9 = r8.<net.htmlparser.jericho.IntStringHashMap$Entry: java.lang.String value>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        r3[14] = 1;
        if $z0 == 0 goto label9;

        r3[15] = 1;
        return 1;

     label9:
        r8 = r8.<net.htmlparser.jericho.IntStringHashMap$Entry: net.htmlparser.jericho.IntStringHashMap$Entry next>;
        r3[16] = 1;
        goto label8;

     label10:
        i1 = i1 + -1;
        r3[17] = 1;
        goto label7;

     label11:
        r3[18] = 1;
        return 0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRi()>();
        r1 = $r0[14];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        $r0 = newmultiarray (boolean)[15][];
        <net.htmlparser.jericho.IntStringHashMap: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[4];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[5];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[4];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[8];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[7];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[9];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[4];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[19];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/IntStringHashMap", -5773269384485979625L);
        return $r0;
    }
}
public interface  net.htmlparser.jericho.Logger extends java.lang.Object
{

    public abstract void error(java.lang.String);

    public abstract void warn(java.lang.String);

    public abstract void info(java.lang.String);

    public abstract void debug(java.lang.String);

    public abstract boolean isErrorEnabled();

    public abstract boolean isWarnEnabled();

    public abstract boolean isInfoEnabled();

    public abstract boolean isDebugEnabled();
}
final class net.htmlparser.jericho.LoggerDisabled extends java.lang.Object implements net.htmlparser.jericho.Logger
{
    public static final net.htmlparser.jericho.LoggerDisabled INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        $r1 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void error(java.lang.String)
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return;
    }

    public void warn(java.lang.String)
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r3[0] = 1;
        return;
    }

    public void info(java.lang.String)
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r3[0] = 1;
        return;
    }

    public void debug(java.lang.String)
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r3[0] = 1;
        return;
    }

    public boolean isErrorEnabled()
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        $r1 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r2[0] = 1;
        return 0;
    }

    public boolean isWarnEnabled()
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        $r1 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        return 0;
    }

    public boolean isInfoEnabled()
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        $r1 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r2[0] = 1;
        return 0;
    }

    public boolean isDebugEnabled()
    {
        net.htmlparser.jericho.LoggerDisabled r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerDisabled;
        $r1 = <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r2[0] = 1;
        return 0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerDisabled $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRi()>();
        r1 = $r0[9];
        $r2 = new net.htmlparser.jericho.LoggerDisabled;
        specialinvoke $r2.<net.htmlparser.jericho.LoggerDisabled: void <init>()>();
        <net.htmlparser.jericho.LoggerDisabled: net.htmlparser.jericho.LoggerDisabled INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.LoggerDisabled: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerDisabled", 890979481321884666L);
        return $r0;
    }
}
final class net.htmlparser.jericho.LoggerFactory extends java.lang.Object
{
    private static net.htmlparser.jericho.LoggerProvider defaultLoggerProvider;
    private static final boolean[][] $VRc;

    void <init>()
    {
        net.htmlparser.jericho.LoggerFactory r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerFactory;
        $r1 = <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static net.htmlparser.jericho.Logger getLogger(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.LoggerProvider $r3;
        net.htmlparser.jericho.Logger $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.LoggerProvider getLoggerProvider()>();
        $r4 = interfaceinvoke $r3.<net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.Logger getLogger(java.lang.String)>(r0);
        r2[0] = 1;
        return $r4;
    }

    public static net.htmlparser.jericho.Logger getLogger(java.lang.Class)
    {
        java.lang.Class r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        net.htmlparser.jericho.Logger $r4;

        r0 := @parameter0: java.lang.Class;
        $r1 = <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();
        $r4 = staticinvoke <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.Logger getLogger(java.lang.String)>($r3);
        r2[0] = 1;
        return $r4;
    }

    public static net.htmlparser.jericho.LoggerProvider getLoggerProvider()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerProvider $r2, $r3;

        $r0 = <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $r2 = <net.htmlparser.jericho.Config: net.htmlparser.jericho.LoggerProvider LoggerProvider>;
        r1[0] = 1;
        if $r2 == null goto label1;

        $r3 = <net.htmlparser.jericho.Config: net.htmlparser.jericho.LoggerProvider LoggerProvider>;
        r1[1] = 1;
        goto label2;

     label1:
        $r3 = staticinvoke <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.LoggerProvider getDefaultLoggerProvider()>();
        r1[2] = 1;

     label2:
        r1[3] = 1;
        return $r3;
    }

    private static net.htmlparser.jericho.LoggerProvider getDefaultLoggerProvider()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerProvider $r2, $r3, $r4;

        $r0 = <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        $r2 = <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.LoggerProvider defaultLoggerProvider>;
        r1[0] = 1;
        if $r2 != null goto label1;

        $r3 = staticinvoke <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.LoggerProvider determineDefaultLoggerProvider()>();
        <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.LoggerProvider defaultLoggerProvider> = $r3;
        r1[1] = 1;

     label1:
        $r4 = <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.LoggerProvider defaultLoggerProvider>;
        r1[2] = 1;
        return $r4;
    }

    private static net.htmlparser.jericho.LoggerProvider determineDefaultLoggerProvider()
    {
        boolean[][] $r0;
        boolean[] r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.htmlparser.jericho.LoggerProvider $r2, $r3, $r4, $r5, $r6;

        $r0 = <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRi()>();

     label0:
        r1 = $r0[5];
        $z0 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean isClassAvailable(java.lang.String)>("org.slf4j.impl.StaticLoggerBinder");
        r1[0] = 1;
        if $z0 == 0 goto label3;

        $z1 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean isClassAvailable(java.lang.String)>("org.slf4j.impl.JDK14LoggerFactory");
        r1[1] = 1;
        if $z1 == 0 goto label1;

        $r2 = <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider JAVA>;
        r1[2] = 1;
        return $r2;

     label1:
        $z2 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean isClassAvailable(java.lang.String)>("org.slf4j.impl.Log4jLoggerFactory");
        r1[3] = 1;
        if $z2 == 0 goto label2;

        $r3 = <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider LOG4J>;
        r1[4] = 1;
        return $r3;

     label2:
        $z3 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean isClassAvailable(java.lang.String)>("org.slf4j.impl.JCLLoggerFactory");
        r1[5] = 1;
        if $z3 != 0 goto label3;

        $r4 = <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider SLF4J>;
        r1[6] = 1;
        return $r4;

     label3:
        $z4 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean isClassAvailable(java.lang.String)>("org.apache.log4j.Logger");
        r1[7] = 1;
        if $z4 == 0 goto label4;

        $r5 = <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider LOG4J>;
        r1[8] = 1;
        return $r5;

     label4:
        $r6 = <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider JAVA>;
        r1[9] = 1;
        return $r6;
    }

    private static boolean isClassAvailable(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Throwable r3, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);
        $z0 = 1;
        r2[0] = 1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;
        r3 = $r5;
        r2[1] = 1;
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRi()>();
        r1 = $r0[7];
        <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.LoggerProvider defaultLoggerProvider> = null;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <net.htmlparser.jericho.LoggerFactory: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[10];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[2];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerFactory", 6624028152058988027L);
        return $r0;
    }
}
public interface  net.htmlparser.jericho.LoggerProvider extends java.lang.Object
{
    public static final net.htmlparser.jericho.LoggerProvider DISABLED;
    public static final net.htmlparser.jericho.LoggerProvider STDERR;
    public static final net.htmlparser.jericho.LoggerProvider JAVA;
    public static final net.htmlparser.jericho.LoggerProvider JCL;
    public static final net.htmlparser.jericho.LoggerProvider LOG4J;
    public static final net.htmlparser.jericho.LoggerProvider SLF4J;

    public abstract net.htmlparser.jericho.Logger getLogger(java.lang.String);

    static void <clinit>()
    {
        net.htmlparser.jericho.LoggerProvider $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = <net.htmlparser.jericho.LoggerProviderDisabled: net.htmlparser.jericho.LoggerProvider INSTANCE>;
        <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider DISABLED> = $r0;
        $r1 = <net.htmlparser.jericho.LoggerProviderSTDERR: net.htmlparser.jericho.LoggerProvider INSTANCE>;
        <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider STDERR> = $r1;
        $r2 = <net.htmlparser.jericho.LoggerProviderJava: net.htmlparser.jericho.LoggerProvider INSTANCE>;
        <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider JAVA> = $r2;
        $r3 = <net.htmlparser.jericho.LoggerProviderJCL: net.htmlparser.jericho.LoggerProvider INSTANCE>;
        <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider JCL> = $r3;
        $r4 = <net.htmlparser.jericho.LoggerProviderLog4J: net.htmlparser.jericho.LoggerProvider INSTANCE>;
        <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider LOG4J> = $r4;
        $r5 = <net.htmlparser.jericho.LoggerProviderSLF4J: net.htmlparser.jericho.LoggerProvider INSTANCE>;
        <net.htmlparser.jericho.LoggerProvider: net.htmlparser.jericho.LoggerProvider SLF4J> = $r5;
        return;
    }
}
final class net.htmlparser.jericho.LoggerProviderDisabled extends java.lang.Object implements net.htmlparser.jericho.LoggerProvider
{
    public static final net.htmlparser.jericho.LoggerProvider INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerProviderDisabled r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderDisabled;
        $r1 = <net.htmlparser.jericho.LoggerProviderDisabled: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderDisabled: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Logger getLogger(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderDisabled r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderDisabled;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderDisabled: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderDisabled: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return null;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerProviderDisabled $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderDisabled: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.LoggerProviderDisabled;
        specialinvoke $r2.<net.htmlparser.jericho.LoggerProviderDisabled: void <init>()>();
        <net.htmlparser.jericho.LoggerProviderDisabled: net.htmlparser.jericho.LoggerProvider INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.LoggerProviderDisabled: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderDisabled", 3934875461979374126L);
        return $r0;
    }
}
class net.htmlparser.jericho.LoggerProviderJCL$JCLLogger extends java.lang.Object implements net.htmlparser.jericho.Logger
{
    private final org.apache.commons.logging.Log jclLog;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(org.apache.commons.logging.Log)
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        org.apache.commons.logging.Log r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        r1 := @parameter0: org.apache.commons.logging.Log;
        $r2 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog> = r1;
        r3[0] = 1;
        return;
    }

    public void error(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        org.apache.commons.logging.Log $r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>(r1);
        r3[0] = 1;
        return;
    }

    public void warn(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        org.apache.commons.logging.Log $r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(r1);
        r3[0] = 1;
        return;
    }

    public void info(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        org.apache.commons.logging.Log $r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void info(java.lang.Object)>(r1);
        r3[0] = 1;
        return;
    }

    public void debug(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        org.apache.commons.logging.Log $r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(r1);
        r3[0] = 1;
        return;
    }

    public boolean isErrorEnabled()
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        org.apache.commons.logging.Log $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog>;
        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();
        r2[0] = 1;
        return $z0;
    }

    public boolean isWarnEnabled()
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        org.apache.commons.logging.Log $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog>;
        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();
        r2[0] = 1;
        return $z0;
    }

    public boolean isInfoEnabled()
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        org.apache.commons.logging.Log $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog>;
        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();
        r2[0] = 1;
        return $z0;
    }

    public boolean isDebugEnabled()
    {
        net.htmlparser.jericho.LoggerProviderJCL$JCLLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        org.apache.commons.logging.Log $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL$JCLLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: org.apache.commons.logging.Log jclLog>;
        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        r2[0] = 1;
        return $z0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.LoggerProviderJCL$JCLLogger: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderJCL$JCLLogger", -1838545708283168267L);
        return $r0;
    }
}
final class net.htmlparser.jericho.LoggerProviderJCL extends java.lang.Object implements net.htmlparser.jericho.LoggerProvider
{
    public static final net.htmlparser.jericho.LoggerProvider INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerProviderJCL r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL;
        $r1 = <net.htmlparser.jericho.LoggerProviderJCL: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Logger getLogger(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJCL r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJCL;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJCL: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return null;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerProviderJCL $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderJCL: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.LoggerProviderJCL;
        specialinvoke $r2.<net.htmlparser.jericho.LoggerProviderJCL: void <init>()>();
        <net.htmlparser.jericho.LoggerProviderJCL: net.htmlparser.jericho.LoggerProvider INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.LoggerProviderJCL: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderJCL", 3934875461979374126L);
        return $r0;
    }
}
class net.htmlparser.jericho.LoggerProviderJava$JavaLogger extends java.lang.Object implements net.htmlparser.jericho.Logger
{
    private final java.util.logging.Logger javaLogger;
    final net.htmlparser.jericho.LoggerProviderJava this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.LoggerProviderJava, java.util.logging.Logger)
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        net.htmlparser.jericho.LoggerProviderJava r1;
        java.util.logging.Logger r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        r1 := @parameter0: net.htmlparser.jericho.LoggerProviderJava;
        r2 := @parameter1: java.util.logging.Logger;
        $r3 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: net.htmlparser.jericho.LoggerProviderJava this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger> = r2;
        r4[0] = 1;
        return;
    }

    public void error(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.logging.Logger $r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger>;
        virtualinvoke $r4.<java.util.logging.Logger: void severe(java.lang.String)>(r1);
        r3[0] = 1;
        return;
    }

    public void warn(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.logging.Logger $r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger>;
        virtualinvoke $r4.<java.util.logging.Logger: void warning(java.lang.String)>(r1);
        r3[0] = 1;
        return;
    }

    public void info(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.logging.Logger $r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger>;
        virtualinvoke $r4.<java.util.logging.Logger: void info(java.lang.String)>(r1);
        r3[0] = 1;
        return;
    }

    public void debug(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.logging.Logger $r4;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger>;
        virtualinvoke $r4.<java.util.logging.Logger: void fine(java.lang.String)>(r1);
        r3[0] = 1;
        return;
    }

    public boolean isErrorEnabled()
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger>;
        $r4 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);
        r2[0] = 1;
        return $z0;
    }

    public boolean isWarnEnabled()
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger>;
        $r4 = <java.util.logging.Level: java.util.logging.Level WARNING>;
        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);
        r2[0] = 1;
        return $z0;
    }

    public boolean isInfoEnabled()
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger>;
        $r4 = <java.util.logging.Level: java.util.logging.Level INFO>;
        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);
        r2[0] = 1;
        return $z0;
    }

    public boolean isDebugEnabled()
    {
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: java.util.logging.Logger javaLogger>;
        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;
        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);
        r2[0] = 1;
        return $z0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.LoggerProviderJava$JavaLogger: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderJava$JavaLogger", 4027583314317336990L);
        return $r0;
    }
}
final class net.htmlparser.jericho.LoggerProviderJava extends java.lang.Object implements net.htmlparser.jericho.LoggerProvider
{
    public static final net.htmlparser.jericho.LoggerProvider INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerProviderJava r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava;
        $r1 = <net.htmlparser.jericho.LoggerProviderJava: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Logger getLogger(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderJava r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.LoggerProviderJava$JavaLogger $r4;
        java.util.logging.Logger $r5;

        r0 := @this: net.htmlparser.jericho.LoggerProviderJava;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderJava: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = new net.htmlparser.jericho.LoggerProviderJava$JavaLogger;
        $r5 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(r1);
        specialinvoke $r4.<net.htmlparser.jericho.LoggerProviderJava$JavaLogger: void <init>(net.htmlparser.jericho.LoggerProviderJava,java.util.logging.Logger)>(r0, $r5);
        r3[0] = 1;
        return $r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerProviderJava $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderJava: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.LoggerProviderJava;
        specialinvoke $r2.<net.htmlparser.jericho.LoggerProviderJava: void <init>()>();
        <net.htmlparser.jericho.LoggerProviderJava: net.htmlparser.jericho.LoggerProvider INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.LoggerProviderJava: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderJava", 3934875465032852257L);
        return $r0;
    }
}
class net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger extends java.lang.Object implements net.htmlparser.jericho.Logger
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void error(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return;
    }

    public void warn(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r3[0] = 1;
        return;
    }

    public void info(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r3[0] = 1;
        return;
    }

    public void debug(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r3[0] = 1;
        return;
    }

    public boolean isErrorEnabled()
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r2[0] = 1;
        return 0;
    }

    public boolean isWarnEnabled()
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        return 0;
    }

    public boolean isInfoEnabled()
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r2[0] = 1;
        return 0;
    }

    public boolean isDebugEnabled()
    {
        net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r2[0] = 1;
        return 0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.LoggerProviderLog4J$Log4JLogger: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderLog4J$Log4JLogger", 890979481321884656L);
        return $r0;
    }
}
final class net.htmlparser.jericho.LoggerProviderLog4J extends java.lang.Object implements net.htmlparser.jericho.LoggerProvider
{
    public static final net.htmlparser.jericho.LoggerProvider INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerProviderLog4J r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J;
        $r1 = <net.htmlparser.jericho.LoggerProviderLog4J: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Logger getLogger(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderLog4J r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderLog4J;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderLog4J: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return null;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerProviderLog4J $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderLog4J: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.LoggerProviderLog4J;
        specialinvoke $r2.<net.htmlparser.jericho.LoggerProviderLog4J: void <init>()>();
        <net.htmlparser.jericho.LoggerProviderLog4J: net.htmlparser.jericho.LoggerProvider INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.LoggerProviderLog4J: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderLog4J", 3934875461979374126L);
        return $r0;
    }
}
class net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger extends java.lang.Object implements net.htmlparser.jericho.Logger
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void error(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return;
    }

    public void warn(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r3[0] = 1;
        return;
    }

    public void info(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r3[0] = 1;
        return;
    }

    public void debug(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        r3[0] = 1;
        return;
    }

    public boolean isErrorEnabled()
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r2[0] = 1;
        return 0;
    }

    public boolean isWarnEnabled()
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        return 0;
    }

    public boolean isInfoEnabled()
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r2[0] = 1;
        return 0;
    }

    public boolean isDebugEnabled()
    {
        net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger;
        $r1 = <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        r2[0] = 1;
        return 0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.LoggerProviderSLF4J$SLF4JLogger: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderSLF4J$SLF4JLogger", 890979481321884656L);
        return $r0;
    }
}
final class net.htmlparser.jericho.LoggerProviderSLF4J extends java.lang.Object implements net.htmlparser.jericho.LoggerProvider
{
    public static final net.htmlparser.jericho.LoggerProvider INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerProviderSLF4J r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J;
        $r1 = <net.htmlparser.jericho.LoggerProviderSLF4J: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Logger getLogger(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderSLF4J r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSLF4J;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderSLF4J: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r3[0] = 1;
        return null;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerProviderSLF4J $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderSLF4J: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.LoggerProviderSLF4J;
        specialinvoke $r2.<net.htmlparser.jericho.LoggerProviderSLF4J: void <init>()>();
        <net.htmlparser.jericho.LoggerProviderSLF4J: net.htmlparser.jericho.LoggerProvider INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.LoggerProviderSLF4J: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderSLF4J", 3934875461979374126L);
        return $r0;
    }
}
final class net.htmlparser.jericho.LoggerProviderSTDERR extends java.lang.Object implements net.htmlparser.jericho.LoggerProvider
{
    public static final net.htmlparser.jericho.LoggerProvider INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.LoggerProviderSTDERR r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSTDERR;
        $r1 = <net.htmlparser.jericho.LoggerProviderSTDERR: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerProviderSTDERR: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Logger getLogger(java.lang.String)
    {
        net.htmlparser.jericho.LoggerProviderSTDERR r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.io.OutputStreamWriter $r4;
        java.io.PrintStream $r5;
        net.htmlparser.jericho.WriterLogger $r6;

        r0 := @this: net.htmlparser.jericho.LoggerProviderSTDERR;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerProviderSTDERR: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerProviderSTDERR: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r6 = new net.htmlparser.jericho.WriterLogger;
        $r4 = new java.io.OutputStreamWriter;
        $r5 = <java.lang.System: java.io.PrintStream err>;
        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r5);
        specialinvoke $r6.<net.htmlparser.jericho.WriterLogger: void <init>(java.io.Writer,java.lang.String)>($r4, r1);
        r3[0] = 1;
        return $r6;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.LoggerProviderSTDERR $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerProviderSTDERR: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.LoggerProviderSTDERR;
        specialinvoke $r2.<net.htmlparser.jericho.LoggerProviderSTDERR: void <init>()>();
        <net.htmlparser.jericho.LoggerProviderSTDERR: net.htmlparser.jericho.LoggerProvider INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.LoggerProviderSTDERR: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerProviderSTDERR", 3934875466698385783L);
        return $r0;
    }
}
class net.htmlparser.jericho.LoggerQueue extends java.lang.Object implements net.htmlparser.jericho.Logger
{
    private static final java.lang.String ERROR;
    private static final java.lang.String WARN;
    private static final java.lang.String INFO;
    private static final java.lang.String DEBUG;
    private final java.util.Queue queue;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.LinkedList $r3;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.LinkedList;
        specialinvoke $r3.<java.util.LinkedList: void <init>()>();
        r0.<net.htmlparser.jericho.LoggerQueue: java.util.Queue queue> = $r3;
        r2[0] = 1;
        return;
    }

    public void error(java.lang.String)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Queue $r4;
        java.lang.String[] $r5;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = r0.<net.htmlparser.jericho.LoggerQueue: java.util.Queue queue>;
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "ERROR";
        $r5[1] = r1;
        interfaceinvoke $r4.<java.util.Queue: boolean add(java.lang.Object)>($r5);
        r3[0] = 1;
        return;
    }

    public void warn(java.lang.String)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Queue $r4;
        java.lang.String[] $r5;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = r0.<net.htmlparser.jericho.LoggerQueue: java.util.Queue queue>;
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "WARN";
        $r5[1] = r1;
        interfaceinvoke $r4.<java.util.Queue: boolean add(java.lang.Object)>($r5);
        r3[0] = 1;
        return;
    }

    public void info(java.lang.String)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Queue $r4;
        java.lang.String[] $r5;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = r0.<net.htmlparser.jericho.LoggerQueue: java.util.Queue queue>;
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "INFO";
        $r5[1] = r1;
        interfaceinvoke $r4.<java.util.Queue: boolean add(java.lang.Object)>($r5);
        r3[0] = 1;
        return;
    }

    public void debug(java.lang.String)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Queue $r4;
        java.lang.String[] $r5;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = r0.<net.htmlparser.jericho.LoggerQueue: java.util.Queue queue>;
        $r5 = newarray (java.lang.String)[2];
        $r5[0] = "DEBUG";
        $r5[1] = r1;
        interfaceinvoke $r4.<java.util.Queue: boolean add(java.lang.Object)>($r5);
        r3[0] = 1;
        return;
    }

    public boolean isErrorEnabled()
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r2[0] = 1;
        return 1;
    }

    public void setErrorEnabled(boolean)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public boolean isWarnEnabled()
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r2[0] = 1;
        return 1;
    }

    public void setWarnEnabled(boolean)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public boolean isInfoEnabled()
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r2[0] = 1;
        return 1;
    }

    public void setInfoEnabled(boolean)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public boolean isDebugEnabled()
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r2[0] = 1;
        return 1;
    }

    public void setDebugEnabled(boolean)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public void outputTo(net.htmlparser.jericho.Logger)
    {
        net.htmlparser.jericho.LoggerQueue r0;
        net.htmlparser.jericho.Logger r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4;
        java.lang.String r5, r6;
        java.util.Queue $r7;
        java.lang.Object $r8;

        r0 := @this: net.htmlparser.jericho.LoggerQueue;
        r1 := @parameter0: net.htmlparser.jericho.Logger;
        $r2 = <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];

     label1:
        $r7 = r0.<net.htmlparser.jericho.LoggerQueue: java.util.Queue queue>;
        $r8 = interfaceinvoke $r7.<java.util.Queue: java.lang.Object poll()>();
        r4 = (java.lang.String[]) $r8;
        r3[0] = 1;
        if r4 != null goto label2;

        r3[1] = 1;
        return;

     label2:
        r5 = r4[0];
        r6 = r4[1];
        r3[2] = 1;
        if r5 != "ERROR" goto label3;

        interfaceinvoke r1.<net.htmlparser.jericho.Logger: void error(java.lang.String)>(r6);
        r3[3] = 1;
        goto label6;

     label3:
        r3[4] = 1;
        if r5 != "WARN" goto label4;

        interfaceinvoke r1.<net.htmlparser.jericho.Logger: void warn(java.lang.String)>(r6);
        r3[5] = 1;
        goto label6;

     label4:
        r3[6] = 1;
        if r5 != "INFO" goto label5;

        interfaceinvoke r1.<net.htmlparser.jericho.Logger: void info(java.lang.String)>(r6);
        r3[7] = 1;
        goto label6;

     label5:
        r3[8] = 1;
        if r5 != "DEBUG" goto label6;

        interfaceinvoke r1.<net.htmlparser.jericho.Logger: void debug(java.lang.String)>(r6);
        r3[9] = 1;

     label6:
        r3[10] = 1;
        goto label1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRi()>();
        r1 = $r0[14];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        $r0 = newmultiarray (boolean)[15][];
        <net.htmlparser.jericho.LoggerQueue: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[11];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/LoggerQueue", -5611135909506408232L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.MasonTagTypes extends java.lang.Object
{
    public static final net.htmlparser.jericho.StartTagType MASON_COMPONENT_CALL;
    public static final net.htmlparser.jericho.StartTagType MASON_COMPONENT_CALLED_WITH_CONTENT;
    public static final net.htmlparser.jericho.EndTagType MASON_COMPONENT_CALLED_WITH_CONTENT_END;
    public static final net.htmlparser.jericho.StartTagType MASON_NAMED_BLOCK;
    public static final net.htmlparser.jericho.EndTagType MASON_NAMED_BLOCK_END;
    private static final net.htmlparser.jericho.TagType[] TAG_TYPES;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.MasonTagTypes r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.MasonTagTypes;
        $r1 = <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static void register()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] r2;
        int i0, i1;
        net.htmlparser.jericho.TagType r3;

        $r0 = <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        r2 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r2;
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        virtualinvoke r3.<net.htmlparser.jericho.TagType: void register()>();
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        r1[3] = 1;
        return;
    }

    public static void deregister()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] r2;
        int i0, i1;
        net.htmlparser.jericho.TagType r3;

        $r0 = <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        r2 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r2;
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        virtualinvoke r3.<net.htmlparser.jericho.TagType: void deregister()>();
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        r1[3] = 1;
        return;
    }

    public static boolean defines(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagType r0, r4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagType[] r3;
        int i0, i1;

        r0 := @parameter0: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r3;
        i1 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i1 >= i0 goto label3;

        r4 = r3[i1];
        r2[2] = 1;
        if r0 != r4 goto label2;

        r2[3] = 1;
        return 1;

     label2:
        i1 = i1 + 1;
        r2[4] = 1;
        goto label1;

     label3:
        r2[5] = 1;
        return 0;
    }

    public static boolean isParsedByMason(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3;
        boolean $z0, $z1;

        r0 := @parameter0: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON>;
        r2[0] = 1;
        if r0 == $r3 goto label1;

        $z0 = staticinvoke <net.htmlparser.jericho.MasonTagTypes: boolean defines(net.htmlparser.jericho.TagType)>(r0);
        r2[1] = 1;
        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;
        r2[2] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r2[3] = 1;

     label3:
        r2[4] = 1;
        return $z1;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagType $r2, $r9, $r11;
        net.htmlparser.jericho.StartTagTypeMasonComponentCall $r3;
        net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent $r4;
        net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent $r5;
        net.htmlparser.jericho.StartTagTypeMasonNamedBlock $r6;
        net.htmlparser.jericho.EndTagTypeMasonNamedBlock $r7;
        net.htmlparser.jericho.TagType[] $r8;
        net.htmlparser.jericho.EndTagType $r10, $r12;

        $r0 = staticinvoke <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRi()>();
        r1 = $r0[5];
        $r3 = <net.htmlparser.jericho.StartTagTypeMasonComponentCall: net.htmlparser.jericho.StartTagTypeMasonComponentCall INSTANCE>;
        <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.StartTagType MASON_COMPONENT_CALL> = $r3;
        $r4 = <net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent: net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent INSTANCE>;
        <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.StartTagType MASON_COMPONENT_CALLED_WITH_CONTENT> = $r4;
        $r5 = <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent INSTANCE>;
        <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.EndTagType MASON_COMPONENT_CALLED_WITH_CONTENT_END> = $r5;
        $r6 = <net.htmlparser.jericho.StartTagTypeMasonNamedBlock: net.htmlparser.jericho.StartTagTypeMasonNamedBlock INSTANCE>;
        <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.StartTagType MASON_NAMED_BLOCK> = $r6;
        $r7 = <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: net.htmlparser.jericho.EndTagTypeMasonNamedBlock INSTANCE>;
        <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.EndTagType MASON_NAMED_BLOCK_END> = $r7;
        $r8 = newarray (net.htmlparser.jericho.TagType)[5];
        $r2 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.StartTagType MASON_COMPONENT_CALL>;
        $r8[0] = $r2;
        $r9 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.StartTagType MASON_COMPONENT_CALLED_WITH_CONTENT>;
        $r8[1] = $r9;
        $r10 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.EndTagType MASON_COMPONENT_CALLED_WITH_CONTENT_END>;
        $r8[2] = $r10;
        $r11 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.StartTagType MASON_NAMED_BLOCK>;
        $r8[3] = $r11;
        $r12 = <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.EndTagType MASON_NAMED_BLOCK_END>;
        $r8[4] = $r12;
        <net.htmlparser.jericho.MasonTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES> = $r8;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.MasonTagTypes: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/MasonTagTypes", 4091424925321823023L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes extends java.lang.Object
{
    public static final net.htmlparser.jericho.StartTagType DOWNLEVEL_HIDDEN_IF;
    public static final net.htmlparser.jericho.StartTagType DOWNLEVEL_HIDDEN_ENDIF;
    public static final net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_IF;
    public static final net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_ENDIF;
    public static final net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_IF;
    public static final net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_ENDIF;
    public static final net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_SIMPLIFIED_IF;
    private static final net.htmlparser.jericho.TagType[] TAG_TYPES;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes;
        $r1 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static void register()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] r2;
        int i0, i1;
        net.htmlparser.jericho.TagType r3;

        $r0 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        r2 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r2;
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        virtualinvoke r3.<net.htmlparser.jericho.TagType: void register()>();
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        r1[3] = 1;
        return;
    }

    public static void deregister()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] r2;
        int i0, i1;
        net.htmlparser.jericho.TagType r3;

        $r0 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        r2 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r2;
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        virtualinvoke r3.<net.htmlparser.jericho.TagType: void deregister()>();
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        r1[3] = 1;
        return;
    }

    public static boolean defines(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagType r0, r4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagType[] r3;
        int i0, i1;

        r0 := @parameter0: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r3;
        i1 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i1 >= i0 goto label3;

        r4 = r3[i1];
        r2[2] = 1;
        if r0 != r4 goto label2;

        r2[3] = 1;
        return 1;

     label2:
        i1 = i1 + 1;
        r2[4] = 1;
        goto label1;

     label3:
        r2[5] = 1;
        return 0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagType $r2, $r11, $r12, $r13, $r14, $r15, $r16;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf $r3;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif $r4;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf $r5;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif $r6;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf $r7;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif $r8;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf $r9;
        net.htmlparser.jericho.TagType[] $r10;

        $r0 = staticinvoke <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r3 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf INSTANCE>;
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_HIDDEN_IF> = $r3;
        $r4 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif INSTANCE>;
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_HIDDEN_ENDIF> = $r4;
        $r5 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf INSTANCE>;
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_IF> = $r5;
        $r6 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif INSTANCE>;
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_ENDIF> = $r6;
        $r7 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf INSTANCE>;
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_IF> = $r7;
        $r8 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif INSTANCE>;
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_ENDIF> = $r8;
        $r9 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf INSTANCE>;
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_SIMPLIFIED_IF> = $r9;
        $r10 = newarray (net.htmlparser.jericho.TagType)[7];
        $r2 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_HIDDEN_IF>;
        $r10[0] = $r2;
        $r11 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_HIDDEN_ENDIF>;
        $r10[1] = $r11;
        $r12 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_IF>;
        $r10[2] = $r12;
        $r13 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_ENDIF>;
        $r10[3] = $r13;
        $r14 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_IF>;
        $r10[4] = $r14;
        $r15 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_SIMPLIFIED_IF>;
        $r10[5] = $r15;
        $r16 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_VALIDATING_ENDIF>;
        $r10[6] = $r16;
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES> = $r10;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/MicrosoftConditionalCommentTagTypes", -3741404726960095937L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.MicrosoftTagTypes extends java.lang.Object
{
    public static final net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_CONDITIONAL_COMMENT;
    private static final net.htmlparser.jericho.TagType[] TAG_TYPES;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.MicrosoftTagTypes r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.MicrosoftTagTypes;
        $r1 = <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static boolean isConditionalCommentIfTag(net.htmlparser.jericho.Tag)
    {
        net.htmlparser.jericho.Tag r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Tag: java.lang.String getName()>();
        r2[0] = 1;
        if $r3 != "![if" goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public static boolean isConditionalCommentEndifTag(net.htmlparser.jericho.Tag)
    {
        net.htmlparser.jericho.Tag r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Tag: java.lang.String getName()>();
        r2[0] = 1;
        if $r3 != "![endif" goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public static void register()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] r2;
        int i0, i1;
        net.htmlparser.jericho.TagType r3;

        $r0 = <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        r2 = <net.htmlparser.jericho.MicrosoftTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r2;
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        virtualinvoke r3.<net.htmlparser.jericho.TagType: void register()>();
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        r1[3] = 1;
        return;
    }

    public static void deregister()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] r2;
        int i0, i1;
        net.htmlparser.jericho.TagType r3;

        $r0 = <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        r2 = <net.htmlparser.jericho.MicrosoftTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r2;
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        virtualinvoke r3.<net.htmlparser.jericho.TagType: void deregister()>();
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        r1[3] = 1;
        return;
    }

    public static boolean defines(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagType r0, r4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagType[] r3;
        int i0, i1;

        r0 := @parameter0: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r3 = <net.htmlparser.jericho.MicrosoftTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r3;
        i1 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i1 >= i0 goto label3;

        r4 = r3[i1];
        r2[2] = 1;
        if r0 != r4 goto label2;

        r2[3] = 1;
        return 1;

     label2:
        i1 = i1 + 1;
        r2[4] = 1;
        goto label1;

     label3:
        r2[5] = 1;
        return 0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagType $r2;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment $r3;
        net.htmlparser.jericho.TagType[] $r4;

        $r0 = staticinvoke <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRi()>();
        r1 = $r0[6];
        $r3 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment INSTANCE>;
        <net.htmlparser.jericho.MicrosoftTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_CONDITIONAL_COMMENT> = $r3;
        $r4 = newarray (net.htmlparser.jericho.TagType)[1];
        $r2 = <net.htmlparser.jericho.MicrosoftTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_REVEALED_CONDITIONAL_COMMENT>;
        $r4[0] = $r2;
        <net.htmlparser.jericho.MicrosoftTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES> = $r4;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[7][];
        <net.htmlparser.jericho.MicrosoftTagTypes: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[6];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/MicrosoftTagTypes", 2754049040318363194L);
        return $r0;
    }
}
class net.htmlparser.jericho.NodeIterator extends java.lang.Object implements java.util.Iterator
{
    private final net.htmlparser.jericho.Segment segment;
    private final net.htmlparser.jericho.Source source;
    private int pos;
    private net.htmlparser.jericho.Tag nextTag;
    private net.htmlparser.jericho.CharacterReference characterReferenceAtCurrentPosition;
    private final boolean legacyIteratorCompatabilityMode;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.NodeIterator r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        net.htmlparser.jericho.Source $r4, $r5, $r6, $r8;
        int $i0, $i1, $i2, $i3;
        net.htmlparser.jericho.Tag $r9, $r10, $r11;

        r0 := @this: net.htmlparser.jericho.NodeIterator;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.NodeIterator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.NodeIterator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.CharacterReference characterReferenceAtCurrentPosition> = null;
        $z0 = <net.htmlparser.jericho.Source: boolean LegacyIteratorCompatabilityMode>;
        r0.<net.htmlparser.jericho.NodeIterator: boolean legacyIteratorCompatabilityMode> = $z0;
        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Segment segment> = r1;
        $r4 = r1.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source> = $r4;
        $r5 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source>;
        r3[0] = 1;
        if r1 != $r5 goto label1;

        $r6 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source>;
        virtualinvoke $r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] fullSequentialParse()>();
        r3[1] = 1;

     label1:
        $i0 = r1.<net.htmlparser.jericho.Segment: int begin>;
        r0.<net.htmlparser.jericho.NodeIterator: int pos> = $i0;
        $r8 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source>;
        $i1 = r0.<net.htmlparser.jericho.NodeIterator: int pos>;
        $r9 = virtualinvoke $r8.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int)>($i1);
        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag> = $r9;
        $r10 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        r3[2] = 1;
        if $r10 == null goto label2;

        $r11 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        $i2 = $r11.<net.htmlparser.jericho.Tag: int begin>;
        $i3 = r1.<net.htmlparser.jericho.Segment: int end>;
        r3[3] = 1;
        if $i2 < $i3 goto label2;

        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag> = null;
        r3[4] = 1;

     label2:
        r3[5] = 1;
        return;
    }

    public boolean hasNext()
    {
        net.htmlparser.jericho.NodeIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;
        net.htmlparser.jericho.Segment $r3;
        net.htmlparser.jericho.Tag $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.NodeIterator;
        $r1 = <net.htmlparser.jericho.NodeIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NodeIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $i0 = r0.<net.htmlparser.jericho.NodeIterator: int pos>;
        $r3 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Segment segment>;
        $i1 = $r3.<net.htmlparser.jericho.Segment: int end>;
        r2[0] = 1;
        if $i0 < $i1 goto label1;

        $r4 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        r2[1] = 1;
        if $r4 == null goto label2;

     label1:
        $z0 = 1;
        r2[2] = 1;
        goto label3;

     label2:
        $z0 = 0;
        r2[3] = 1;

     label3:
        r2[4] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.Segment next()
    {
        net.htmlparser.jericho.NodeIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        net.htmlparser.jericho.Tag r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11;
        net.htmlparser.jericho.Segment $r7, $r12, $r14, $r15;
        boolean $z0;
        java.util.NoSuchElementException $r13;

        r0 := @this: net.htmlparser.jericho.NodeIterator;
        $r1 = <net.htmlparser.jericho.NodeIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NodeIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        i0 = r0.<net.htmlparser.jericho.NodeIterator: int pos>;
        $r4 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        r2[0] = 1;
        if $r4 == null goto label4;

        $r5 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        $i1 = $r5.<net.htmlparser.jericho.Tag: int begin>;
        r2[1] = 1;
        if i0 >= $i1 goto label1;

        $r6 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        $i2 = $r6.<net.htmlparser.jericho.Tag: int begin>;
        $r7 = specialinvoke r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Segment nextNonTagSegment(int,int)>(i0, $i2);
        r2[2] = 1;
        return $r7;

     label1:
        r3 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        $r8 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        $r9 = virtualinvoke $r8.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag()>();
        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag> = $r9;
        $r10 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        r2[3] = 1;
        if $r10 == null goto label2;

        $r11 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag>;
        $i3 = $r11.<net.htmlparser.jericho.Tag: int begin>;
        $r12 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Segment segment>;
        $i4 = $r12.<net.htmlparser.jericho.Segment: int end>;
        r2[4] = 1;
        if $i3 < $i4 goto label2;

        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag> = null;
        r2[5] = 1;

     label2:
        $i5 = r0.<net.htmlparser.jericho.NodeIterator: int pos>;
        $i6 = r3.<net.htmlparser.jericho.Tag: int end>;
        r2[6] = 1;
        if $i5 >= $i6 goto label3;

        $i7 = r3.<net.htmlparser.jericho.Tag: int end>;
        r0.<net.htmlparser.jericho.NodeIterator: int pos> = $i7;
        r2[7] = 1;

     label3:
        r2[8] = 1;
        return r3;

     label4:
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.NodeIterator: boolean hasNext()>();
        r2[9] = 1;
        if $z0 != 0 goto label5;

        $r13 = new java.util.NoSuchElementException;
        specialinvoke $r13.<java.util.NoSuchElementException: void <init>()>();
        r2[10] = 1;
        throw $r13;

     label5:
        $r14 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Segment segment>;
        $i8 = $r14.<net.htmlparser.jericho.Segment: int end>;
        $r15 = specialinvoke r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Segment nextNonTagSegment(int,int)>(i0, $i8);
        r2[11] = 1;
        return $r15;
    }

    private net.htmlparser.jericho.Segment nextNonTagSegment(int, int)
    {
        net.htmlparser.jericho.NodeIterator r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.CharacterReference r3, r5;
        net.htmlparser.jericho.ParseText r4;
        boolean $z0;
        net.htmlparser.jericho.Source $r6, $r7, $r10, $r12;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r8;
        net.htmlparser.jericho.Segment $r9, $r11;

        r0 := @this: net.htmlparser.jericho.NodeIterator;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.NodeIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NodeIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $z0 = r0.<net.htmlparser.jericho.NodeIterator: boolean legacyIteratorCompatabilityMode>;
        r2[0] = 1;
        if $z0 != 0 goto label5;

        r3 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.CharacterReference characterReferenceAtCurrentPosition>;
        r2[1] = 1;
        if r3 == null goto label1;

        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.CharacterReference characterReferenceAtCurrentPosition> = null;
        $i4 = r3.<net.htmlparser.jericho.CharacterReference: int end>;
        r0.<net.htmlparser.jericho.NodeIterator: int pos> = $i4;
        r2[2] = 1;
        return r3;

     label1:
        $r6 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source>;
        r4 = virtualinvoke $r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i2 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: int indexOf(char,int,int)>(38, i0, i1);
        r2[3] = 1;

     label2:
        r2[4] = 1;
        if i2 == -1 goto label5;

        $r7 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source>;
        $r8 = <net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings ACCEPT_ALL>;
        r5 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>($r7, i2, $r8);
        r2[5] = 1;
        if r5 == null goto label4;

        r2[6] = 1;
        if i2 != i0 goto label3;

        $i5 = r5.<net.htmlparser.jericho.CharacterReference: int end>;
        r0.<net.htmlparser.jericho.NodeIterator: int pos> = $i5;
        r2[7] = 1;
        return r5;

     label3:
        $i6 = r5.<net.htmlparser.jericho.CharacterReference: int begin>;
        r0.<net.htmlparser.jericho.NodeIterator: int pos> = $i6;
        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.CharacterReference characterReferenceAtCurrentPosition> = r5;
        $r9 = new net.htmlparser.jericho.Segment;
        $r10 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source>;
        $i7 = r0.<net.htmlparser.jericho.NodeIterator: int pos>;
        specialinvoke $r9.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r10, i0, $i7);
        r2[8] = 1;
        return $r9;

     label4:
        $i8 = i2 + 1;
        i2 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: int indexOf(char,int,int)>(38, $i8, i1);
        r2[9] = 1;
        goto label2;

     label5:
        $r11 = new net.htmlparser.jericho.Segment;
        $r12 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source>;
        r0.<net.htmlparser.jericho.NodeIterator: int pos> = i1;
        specialinvoke $r11.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r12, i0, i1);
        r2[10] = 1;
        return $r11;
    }

    public void skipToPos(int)
    {
        net.htmlparser.jericho.NodeIterator r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        net.htmlparser.jericho.Tag $r4;

        r0 := @this: net.htmlparser.jericho.NodeIterator;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.NodeIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NodeIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $i1 = r0.<net.htmlparser.jericho.NodeIterator: int pos>;
        r2[0] = 1;
        if i0 >= $i1 goto label1;

        r2[1] = 1;
        return;

     label1:
        r0.<net.htmlparser.jericho.NodeIterator: int pos> = i0;
        $r3 = r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Source source>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int)>(i0);
        r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Tag nextTag> = $r4;
        r2[2] = 1;
        return;
    }

    public void remove()
    {
        net.htmlparser.jericho.NodeIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.NodeIterator;
        $r1 = <net.htmlparser.jericho.NodeIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NodeIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public volatile java.lang.Object next()
    {
        net.htmlparser.jericho.NodeIterator r0;
        net.htmlparser.jericho.Segment $r1;

        r0 := @this: net.htmlparser.jericho.NodeIterator;
        $r1 = virtualinvoke r0.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Segment next()>();
        return $r1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.NodeIterator: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[8][];
        <net.htmlparser.jericho.NodeIterator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[6];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[12];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[11];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[7] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/NodeIterator", -2888541702534271203L);
        return $r0;
    }
}
public class net.htmlparser.jericho.NumericCharacterReference extends net.htmlparser.jericho.CharacterReference
{
    private boolean hex;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    private void <init>(net.htmlparser.jericho.Source, int, int, int, boolean)
    {
        net.htmlparser.jericho.NumericCharacterReference r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, i2;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.NumericCharacterReference;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        z0 := @parameter4: boolean;
        $r2 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<net.htmlparser.jericho.CharacterReference: void <init>(net.htmlparser.jericho.Source,int,int,int)>(r1, i0, i1, i2);
        r0.<net.htmlparser.jericho.NumericCharacterReference: boolean hex> = z0;
        r3[0] = 1;
        return;
    }

    public boolean isDecimal()
    {
        net.htmlparser.jericho.NumericCharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.NumericCharacterReference;
        $r1 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $z0 = r0.<net.htmlparser.jericho.NumericCharacterReference: boolean hex>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $z1 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z1;
    }

    public boolean isHexadecimal()
    {
        net.htmlparser.jericho.NumericCharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.NumericCharacterReference;
        $r1 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $z0 = r0.<net.htmlparser.jericho.NumericCharacterReference: boolean hex>;
        r2[0] = 1;
        return $z0;
    }

    public static java.lang.String encode(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r5;
        int i0, $i2, $i3, $i4;
        char c1;
        java.io.IOException r4, $r7;
        boolean $z0;
        java.lang.RuntimeException $r8;
        java.lang.String $r10;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r5 = new java.lang.StringBuilder;
        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        $i3 = $i2 * 2;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i3);
        r3 = $r5;
        i0 = 0;
        r2[2] = 1;

     label2:
        $i4 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        r2[3] = 1;
        if i0 >= $i4 goto label8;

        c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);
        $z0 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean requiresEncoding(char)>(c1);
        r2[4] = 1;
        if $z0 == 0 goto label6;

     label3:
        staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.Appendable appendDecimalCharacterReferenceString(java.lang.Appendable,int)>(r3, c1);
        r2[5] = 1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;
        r4 = $r7;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);
        r2[6] = 1;
        throw $r8;

     label6:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);
        r2[7] = 1;

     label7:
        i0 = i0 + 1;
        r2[8] = 1;
        goto label2;

     label8:
        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[9] = 1;
        return $r10;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public static java.lang.String encodeDecimal(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.String encode(java.lang.CharSequence)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public static java.lang.String encodeHexadecimal(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r5;
        int i0, $i2, $i3, $i4;
        char c1;
        java.io.IOException r4, $r7;
        boolean $z0;
        java.lang.RuntimeException $r8;
        java.lang.String $r10;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r5 = new java.lang.StringBuilder;
        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        $i3 = $i2 * 2;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i3);
        r3 = $r5;
        i0 = 0;
        r2[2] = 1;

     label2:
        $i4 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        r2[3] = 1;
        if i0 >= $i4 goto label8;

        c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);
        $z0 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean requiresEncoding(char)>(c1);
        r2[4] = 1;
        if $z0 == 0 goto label6;

     label3:
        staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.Appendable appendHexadecimalCharacterReferenceString(java.lang.Appendable,int)>(r3, c1);
        r2[5] = 1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;
        r4 = $r7;
        $r8 = new java.lang.RuntimeException;
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);
        r2[6] = 1;
        throw $r8;

     label6:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);
        r2[7] = 1;

     label7:
        i0 = i0 + 1;
        r2[8] = 1;
        goto label2;

     label8:
        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[9] = 1;
        return $r10;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public java.lang.String getCharacterReferenceString()
    {
        net.htmlparser.jericho.NumericCharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.NumericCharacterReference;
        $r1 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $z0 = r0.<net.htmlparser.jericho.NumericCharacterReference: boolean hex>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $i0 = r0.<net.htmlparser.jericho.NumericCharacterReference: int codePoint>;
        $r3 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.String getHexadecimalCharacterReferenceString(int)>($i0);
        r2[1] = 1;
        goto label2;

     label1:
        $i1 = r0.<net.htmlparser.jericho.NumericCharacterReference: int codePoint>;
        $r3 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.String getDecimalCharacterReferenceString(int)>($i1);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r3;
    }

    public static java.lang.String getCharacterReferenceString(int)
    {
        int i0;
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        i0 := @parameter0: int;
        $r0 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r1 = $r0[7];
        $r2 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.String getDecimalCharacterReferenceString(int)>(i0);
        r1[0] = 1;
        return $r2;
    }

    static net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2, i3, i4, i6, $i8, $i9, $i10, i11;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        boolean z0, z1, $z2;
        char c5, $c7;
        java.lang.String r5, $r7;
        java.lang.NumberFormatException r6, $r8;
        byte $b12;
        null_type $n0;
        net.htmlparser.jericho.NumericCharacterReference $r9;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        $r2 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = i0 + 2;
        $c7 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: char charAt(int)>(i1);
        r3[0] = 1;
        if $c7 != 120 goto label1;

        $z2 = 1;
        r3[1] = 1;
        goto label2;

     label1:
        $z2 = 0;
        r3[2] = 1;

     label2:
        z0 = $z2;
        r3[3] = 1;
        if $z2 == 0 goto label3;

        i1 = i1 + 1;
        r3[4] = 1;

     label3:
        r3[5] = 1;
        if z0 == 0 goto label4;

        $i8 = r1.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int hexadecimalCharacterReferenceMaxCodePoint>;
        r3[6] = 1;
        goto label5;

     label4:
        $i8 = r1.<net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings: int decimalCharacterReferenceMaxCodePoint>;
        r3[7] = 1;

     label5:
        i2 = $i8;
        $i9 = r0.<net.htmlparser.jericho.Source: int end>;
        i3 = $i9 - 1;
        i4 = i1;
        z1 = 0;
        r3[8] = 1;

     label6:
        c5 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: char charAt(int)>(i4);
        r3[9] = 1;
        if c5 != 59 goto label7;

        i6 = i4 + 1;
        r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.String substring(int,int)>(i1, i4);
        r3[10] = 1;
        goto label15;

     label7:
        r3[11] = 1;
        if c5 < 48 goto label8;

        r3[12] = 1;
        if c5 <= 57 goto label10;

     label8:
        r3[13] = 1;
        if z0 == 0 goto label11;

        r3[14] = 1;
        if c5 < 97 goto label9;

        r3[15] = 1;
        if c5 <= 102 goto label10;

     label9:
        r3[16] = 1;
        if c5 < 65 goto label11;

        r3[17] = 1;
        if c5 > 70 goto label11;

     label10:
        r3[18] = 1;
        if i4 != i3 goto label12;

        z1 = 1;
        i4 = i4 + 1;
        r3[19] = 1;
        goto label12;

     label11:
        z1 = 1;
        r3[20] = 1;

     label12:
        r3[21] = 1;
        if z1 == 0 goto label14;

        r3[22] = 1;
        if i2 != -1 goto label13;

        r3[23] = 1;
        return null;

     label13:
        i6 = i4;
        r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.String substring(int,int)>(i1, i4);
        r3[24] = 1;
        goto label15;

     label14:
        i4 = i4 + 1;
        r3[25] = 1;
        goto label6;

     label15:
        $i10 = virtualinvoke r5.<java.lang.String: int length()>();
        r3[26] = 1;
        if $i10 != 0 goto label16;

        r3[27] = 1;
        return null;

     label16:
        i11 = -1;

     label17:
        $r7 = r5;
        r3[28] = 1;
        if z0 == 0 goto label18;

        $b12 = 16;
        r3[29] = 1;
        goto label19;

     label18:
        $b12 = 10;
        r3[30] = 1;

     label19:
        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r7, $b12);
        r3[31] = 1;
        if z1 == 0 goto label21;

        r3[32] = 1;
        if i11 <= i2 goto label21;

        $n0 = null;
        r3[33] = 1;

     label20:
        return $n0;

     label21:
        r3[34] = 1;
        if i11 <= 1114111 goto label22;

        i11 = -1;
        r3[35] = 1;

     label22:
        r3[36] = 1;

     label23:
        goto label25;

     label24:
        $r8 := @caughtexception;
        r6 = $r8;
        r3[37] = 1;
        if z1 == 0 goto label25;

        r3[38] = 1;
        return null;

     label25:
        $r9 = new net.htmlparser.jericho.NumericCharacterReference;
        specialinvoke $r9.<net.htmlparser.jericho.NumericCharacterReference: void <init>(net.htmlparser.jericho.Source,int,int,int,boolean)>(r0, i0, i6, i11, z0);
        r3[39] = 1;
        return $r9;

        catch java.lang.NumberFormatException from label17 to label20 with label24;
        catch java.lang.NumberFormatException from label21 to label23 with label24;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.NumericCharacterReference r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r5, $r13;
        java.io.IOException r4, $r11;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r12;
        java.lang.String $r14, $r16;

        r0 := @this: net.htmlparser.jericho.NumericCharacterReference;
        $r1 = <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        r3 = $r5;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label1:
        $z0 = r0.<net.htmlparser.jericho.NumericCharacterReference: boolean hex>;
        r2[0] = 1;
        if $z0 == 0 goto label2;

        $i0 = r0.<net.htmlparser.jericho.NumericCharacterReference: int codePoint>;
        staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.Appendable appendHexadecimalCharacterReferenceString(java.lang.Appendable,int)>(r3, $i0);
        r2[1] = 1;
        goto label3;

     label2:
        $i1 = r0.<net.htmlparser.jericho.NumericCharacterReference: int codePoint>;
        staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.Appendable appendDecimalCharacterReferenceString(java.lang.Appendable,int)>(r3, $i1);
        r2[2] = 1;

     label3:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");
        $i2 = r0.<net.htmlparser.jericho.NumericCharacterReference: int codePoint>;
        staticinvoke <net.htmlparser.jericho.NumericCharacterReference: java.lang.Appendable appendUnicodeText(java.lang.Appendable,int)>(r3, $i2);
        r2[3] = 1;

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;
        r4 = $r11;
        $r12 = new java.lang.RuntimeException;
        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);
        r2[4] = 1;
        throw $r12;

     label6:
        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r14 = specialinvoke r0.<net.htmlparser.jericho.CharacterReference: java.lang.String getDebugInfo()>();
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[5] = 1;
        return $r16;

        catch java.io.IOException from label1 to label4 with label5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRi()>();
        r1 = $r0[10];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = newmultiarray (boolean)[11][];
        <net.htmlparser.jericho.NumericCharacterReference: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[10];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[10];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[40];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[6];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/NumericCharacterReference", 7219134186066678701L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.OutputDocument extends java.lang.Object implements net.htmlparser.jericho.CharStreamSource
{
    private java.lang.CharSequence sourceText;
    private java.util.ArrayList outputSegments;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Source)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.Source r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.ArrayList $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments> = $r4;
        r3[0] = 1;
        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("source argument must not be null");
        r3[1] = 1;
        throw $r5;

     label1:
        r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText> = r1;
        r3[2] = 1;
        return;
    }

    public void <init>(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.Segment r1, $r7, $r8;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source r4;
        java.util.ArrayList $r5;
        java.lang.IllegalArgumentException $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments> = $r5;
        r3[0] = 1;
        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("segment argument must not be null");
        r3[1] = 1;
        throw $r6;

     label1:
        r4 = r1.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText> = r4;
        $i0 = r1.<net.htmlparser.jericho.Segment: int begin>;
        r3[2] = 1;
        if $i0 <= 0 goto label2;

        $r7 = new net.htmlparser.jericho.Segment;
        $i1 = r1.<net.htmlparser.jericho.Segment: int begin>;
        specialinvoke $r7.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r4, 0, $i1);
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void remove(net.htmlparser.jericho.Segment)>($r7);
        r3[3] = 1;

     label2:
        $i2 = r1.<net.htmlparser.jericho.Segment: int end>;
        $i3 = r4.<net.htmlparser.jericho.Source: int end>;
        r3[4] = 1;
        if $i2 >= $i3 goto label3;

        $r8 = new net.htmlparser.jericho.Segment;
        $i4 = r1.<net.htmlparser.jericho.Segment: int end>;
        $i5 = r4.<net.htmlparser.jericho.Source: int end>;
        specialinvoke $r8.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r4, $i4, $i5);
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void remove(net.htmlparser.jericho.Segment)>($r8);
        r3[5] = 1;

     label3:
        r3[6] = 1;
        return;
    }

    void <init>(net.htmlparser.jericho.ParseText)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.ParseText r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.ArrayList $r4;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.ParseText;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments> = $r4;
        r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText> = r1;
        r3[0] = 1;
        return;
    }

    public java.lang.CharSequence getSourceText()
    {
        net.htmlparser.jericho.OutputDocument r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        $r1 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText>;
        r2[0] = 1;
        return $r3;
    }

    public void remove(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.RemoveOutputSegment $r4;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = new net.htmlparser.jericho.RemoveOutputSegment;
        specialinvoke $r4.<net.htmlparser.jericho.RemoveOutputSegment: void <init>(net.htmlparser.jericho.Segment)>(r1);
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void register(net.htmlparser.jericho.OutputSegment)>($r4);
        r3[0] = 1;
        return;
    }

    public void remove(java.util.Collection)
    {
        net.htmlparser.jericho.OutputDocument r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.Segment r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.Segment) $r6;
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void remove(net.htmlparser.jericho.Segment)>(r5);
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    public void insert(int, java.lang.CharSequence)
    {
        net.htmlparser.jericho.OutputDocument r0;
        int i0;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StringOutputSegment $r4;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $r4 = new net.htmlparser.jericho.StringOutputSegment;
        specialinvoke $r4.<net.htmlparser.jericho.StringOutputSegment: void <init>(int,int,java.lang.CharSequence)>(i0, i0, r1);
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void register(net.htmlparser.jericho.OutputSegment)>($r4);
        r3[0] = 1;
        return;
    }

    public void replace(net.htmlparser.jericho.Segment, java.lang.CharSequence)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.Segment r1;
        java.lang.CharSequence r2;
        boolean[][] $r3;
        boolean[] r4;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        r2 := @parameter1: java.lang.CharSequence;
        $r3 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r4 = $r3[7];
        $i0 = virtualinvoke r1.<net.htmlparser.jericho.Segment: int getBegin()>();
        $i1 = virtualinvoke r1.<net.htmlparser.jericho.Segment: int getEnd()>();
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void replace(int,int,java.lang.CharSequence)>($i0, $i1, r2);
        r4[0] = 1;
        return;
    }

    public void replace(int, int, java.lang.CharSequence)
    {
        net.htmlparser.jericho.OutputDocument r0;
        int i0, i1;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StringOutputSegment $r4;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        $r4 = new net.htmlparser.jericho.StringOutputSegment;
        specialinvoke $r4.<net.htmlparser.jericho.StringOutputSegment: void <init>(int,int,java.lang.CharSequence)>(i0, i1, r1);
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void register(net.htmlparser.jericho.OutputSegment)>($r4);
        r3[0] = 1;
        return;
    }

    public void replace(int, int, char)
    {
        net.htmlparser.jericho.OutputDocument r0;
        int i0, i1;
        char c2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.CharOutputSegment $r3;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        c2 := @parameter2: char;
        $r1 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = new net.htmlparser.jericho.CharOutputSegment;
        specialinvoke $r3.<net.htmlparser.jericho.CharOutputSegment: void <init>(int,int,char)>(i0, i1, c2);
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void register(net.htmlparser.jericho.OutputSegment)>($r3);
        r2[0] = 1;
        return;
    }

    public void replace(net.htmlparser.jericho.FormControl)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.FormControl r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.FormControl;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        virtualinvoke r1.<net.htmlparser.jericho.FormControl: void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument)>(r0);
        r3[0] = 1;
        return;
    }

    public void replace(net.htmlparser.jericho.FormFields)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.FormFields r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.FormFields;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        virtualinvoke r1.<net.htmlparser.jericho.FormFields: void replaceInOutputDocument(net.htmlparser.jericho.OutputDocument)>(r0);
        r3[0] = 1;
        return;
    }

    public java.util.Map replace(net.htmlparser.jericho.Attributes, boolean)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.Attributes r1;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.AttributesOutputSegment r4, $r5;
        java.util.Map $r6;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.Attributes;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        $r5 = new net.htmlparser.jericho.AttributesOutputSegment;
        specialinvoke $r5.<net.htmlparser.jericho.AttributesOutputSegment: void <init>(net.htmlparser.jericho.Attributes,boolean)>(r1, z0);
        r4 = $r5;
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void register(net.htmlparser.jericho.OutputSegment)>(r4);
        $r6 = virtualinvoke r4.<net.htmlparser.jericho.AttributesOutputSegment: java.util.Map getMap()>();
        r3[0] = 1;
        return $r6;
    }

    public void replace(net.htmlparser.jericho.Attributes, java.util.Map)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.Attributes r1;
        java.util.Map r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.AttributesOutputSegment $r5;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.Attributes;
        r2 := @parameter1: java.util.Map;
        $r3 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r4 = $r3[13];
        $r5 = new net.htmlparser.jericho.AttributesOutputSegment;
        specialinvoke $r5.<net.htmlparser.jericho.AttributesOutputSegment: void <init>(net.htmlparser.jericho.Attributes,java.util.Map)>(r1, r2);
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void register(net.htmlparser.jericho.OutputSegment)>($r5);
        r4[0] = 1;
        return;
    }

    public void replaceWithSpaces(int, int)
    {
        net.htmlparser.jericho.OutputDocument r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.BlankOutputSegment $r3;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = new net.htmlparser.jericho.BlankOutputSegment;
        specialinvoke $r3.<net.htmlparser.jericho.BlankOutputSegment: void <init>(int,int)>(i0, i1);
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void register(net.htmlparser.jericho.OutputSegment)>($r3);
        r2[0] = 1;
        return;
    }

    public void register(net.htmlparser.jericho.OutputSegment)
    {
        net.htmlparser.jericho.OutputDocument r0;
        net.htmlparser.jericho.OutputSegment r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.ArrayList $r4;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: net.htmlparser.jericho.OutputSegment;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[15];
        $r4 = r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments>;
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);
        r3[0] = 1;
        return;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.OutputDocument r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Throwable r4, $r5;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];

     label1:
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void appendTo(java.lang.Appendable)>(r1);

     label2:
        virtualinvoke r1.<java.io.Writer: void flush()>();
        r3[0] = 1;
        goto label6;

     label3:
        $r5 := @caughtexception;

     label4:
        r4 = $r5;

     label5:
        virtualinvoke r1.<java.io.Writer: void flush()>();
        r3[1] = 1;
        throw r4;

     label6:
        r3[2] = 1;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void writeTo(java.io.Writer, int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.OutputDocument r0;
        java.io.Writer r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Throwable r4, $r5;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: java.io.Writer;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];

     label1:
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void appendTo(java.lang.Appendable,int,int)>(r1, i0, i1);

     label2:
        virtualinvoke r1.<java.io.Writer: void flush()>();
        r3[0] = 1;
        goto label6;

     label3:
        $r5 := @caughtexception;

     label4:
        r4 = $r5;

     label5:
        virtualinvoke r1.<java.io.Writer: void flush()>();
        r3[1] = 1;
        throw r4;

     label6:
        r3[2] = 1;
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.OutputDocument r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.CharSequence $r4;
        int $i0;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        $r4 = r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText>;
        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();
        virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: void appendTo(java.lang.Appendable,int,int)>(r1, 0, $i0);
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable, int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.OutputDocument r0;
        java.lang.Appendable r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.OutputSegment r5;
        java.util.ArrayList $r6, $r9, $r11;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r7, $r13, $r16;
        java.util.Comparator $r10;
        java.lang.Object $r12;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        r1 := @parameter0: java.lang.Appendable;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r3 = $r2[19];
        $r6 = r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments>;
        $z0 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r7 = r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText>;
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>($r7, i0, i1);
        r3[1] = 1;
        return;

     label1:
        i2 = i0;
        $r9 = r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments>;
        $r10 = <net.htmlparser.jericho.OutputSegment: java.util.Comparator COMPARATOR>;
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r9, $r10);
        $r11 = r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments>;
        r4 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();
        r3[2] = 1;

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[3] = 1;
        if $z1 == 0 goto label12;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.OutputSegment) $r12;
        $i4 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        r3[4] = 1;
        if $i4 >= i2 goto label3;

        r3[5] = 1;
        goto label2;

     label3:
        $i5 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        r3[6] = 1;
        if $i5 != i2 goto label4;

        $i6 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        r3[7] = 1;
        if $i6 >= i2 goto label4;

        r3[8] = 1;
        goto label2;

     label4:
        $i7 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        r3[9] = 1;
        if $i7 <= i1 goto label5;

        r3[10] = 1;
        goto label12;

     label5:
        $i8 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        r3[11] = 1;
        if $i8 != i1 goto label6;

        $i9 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        r3[12] = 1;
        if $i9 <= i1 goto label6;

        r3[13] = 1;
        goto label12;

     label6:
        $i10 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        r3[14] = 1;
        if $i10 <= i2 goto label7;

        $r13 = r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText>;
        $i11 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>($r13, i2, $i11);
        r3[15] = 1;

     label7:
        $i12 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        r3[16] = 1;
        if $i12 >= i2 goto label10;

        $z2 = r5 instanceof net.htmlparser.jericho.BlankOutputSegment;
        r3[17] = 1;
        if $z2 == 0 goto label10;

        i3 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        r3[18] = 1;

     label8:
        r3[19] = 1;
        if i2 >= i3 goto label9;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        i2 = i2 + 1;
        r3[20] = 1;
        goto label8;

     label9:
        r3[21] = 1;
        goto label11;

     label10:
        interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: void appendTo(java.lang.Appendable)>(r1);
        i2 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        r3[22] = 1;

     label11:
        r3[23] = 1;
        goto label2;

     label12:
        r3[24] = 1;
        if i2 >= i1 goto label13;

        $r16 = r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText>;
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>($r16, i2, i1);
        r3[25] = 1;

     label13:
        r3[26] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.OutputDocument r0;
        boolean[][] $r1;
        boolean[] r2;
        long l0, $l5, $l6, $l7, $l9;
        java.util.Iterator r3;
        net.htmlparser.jericho.OutputSegment r4;
        int i1, $i2, $i3, $i4;
        java.lang.CharSequence $r5;
        java.util.ArrayList $r6;
        boolean $z0;
        java.lang.Object $r7;
        byte $b8;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        $r1 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $r5 = r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText>;
        $i2 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();
        l0 = (long) $i2;
        $r6 = r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments>;
        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (net.htmlparser.jericho.OutputSegment) $r7;
        $i3 = interfaceinvoke r4.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        $i4 = interfaceinvoke r4.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        i1 = $i3 - $i4;
        $l5 = interfaceinvoke r4.<net.htmlparser.jericho.OutputSegment: long getEstimatedMaximumOutputLength()>();
        $l6 = (long) i1;
        $l7 = $l5 - $l6;
        l0 = l0 + $l7;
        r2[2] = 1;
        goto label1;

     label2:
        $b8 = l0 cmp 0L;
        r2[3] = 1;
        if $b8 < 0 goto label3;

        $l9 = l0;
        r2[4] = 1;
        goto label4;

     label3:
        $l9 = -1L;
        r2[5] = 1;

     label4:
        r2[6] = 1;
        return $l9;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.OutputDocument r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        $r1 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $r3 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: java.lang.String toString(net.htmlparser.jericho.CharStreamSource)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.OutputDocument r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r7, $r22, $r23, $r24, $r25, $r31;
        java.util.Iterator r4;
        net.htmlparser.jericho.OutputSegment r5;
        net.htmlparser.jericho.Source r6;
        java.util.List $r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r9;
        java.lang.CharSequence $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4;
        net.htmlparser.jericho.RowColumnVector $r16, $r19;
        java.lang.String r28, $r30, $r33, $r35;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        $r1 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r3 = $r7;
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.OutputDocument: java.util.List getRegisteredOutputSegments()>();
        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label9;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.OutputSegment) $r9;
        $z1 = r5 instanceof net.htmlparser.jericho.BlankOutputSegment;
        r2[2] = 1;
        if $z1 == 0 goto label2;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replace with Spaces: ");
        r2[3] = 1;
        goto label4;

     label2:
        $z2 = r5 instanceof net.htmlparser.jericho.RemoveOutputSegment;
        r2[4] = 1;
        if $z2 == 0 goto label3;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove: ");
        r2[5] = 1;
        goto label4;

     label3:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replace: ");
        r2[6] = 1;

     label4:
        $r13 = r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText>;
        $z3 = $r13 instanceof net.htmlparser.jericho.Source;
        r2[7] = 1;
        if $z3 == 0 goto label5;

        $r14 = r0.<net.htmlparser.jericho.OutputDocument: java.lang.CharSequence sourceText>;
        r6 = (net.htmlparser.jericho.Source) $r14;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
        $i0 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        $r16 = virtualinvoke r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i0);
        virtualinvoke $r16.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>(r3);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        $i1 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        $r19 = virtualinvoke r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i1);
        virtualinvoke $r19.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>(r3);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        r2[8] = 1;
        goto label6;

     label5:
        $r22 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(p");
        $i2 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-p");
        $i3 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        r2[9] = 1;

     label6:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        r28 = interfaceinvoke r5.<net.htmlparser.jericho.OutputSegment: java.lang.String toString()>();
        $i4 = virtualinvoke r28.<java.lang.String: int length()>();
        r2[10] = 1;
        if $i4 > 20 goto label7;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);
        r2[11] = 1;
        goto label8;

     label7:
        $r30 = virtualinvoke r28.<java.lang.String: java.lang.String substring(int,int)>(0, 20);
        $r31 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");
        r2[12] = 1;

     label8:
        $r33 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
        r2[13] = 1;
        goto label1;

     label9:
        $r35 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[14] = 1;
        return $r35;
    }

    public java.util.List getRegisteredOutputSegments()
    {
        net.htmlparser.jericho.OutputDocument r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList $r3, $r5;
        java.util.Comparator $r4;

        r0 := @this: net.htmlparser.jericho.OutputDocument;
        $r1 = <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        $r3 = r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments>;
        $r4 = <net.htmlparser.jericho.OutputSegment: java.util.Comparator COMPARATOR>;
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, $r4);
        $r5 = r0.<net.htmlparser.jericho.OutputDocument: java.util.ArrayList outputSegments>;
        r2[0] = 1;
        return $r5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.OutputDocument: boolean[][] $VRi()>();
        r1 = $r0[24];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;

        $r0 = newmultiarray (boolean)[25][];
        <net.htmlparser.jericho.OutputDocument: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[3];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[3];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[3];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[27];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[7];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[15];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/OutputDocument", -1372380191633294138L);
        return $r0;
    }
}
public interface  net.htmlparser.jericho.OutputSegment extends java.lang.Object implements net.htmlparser.jericho.CharStreamSource
{
    public static final java.util.Comparator COMPARATOR;

    public abstract int getBegin();

    public abstract int getEnd();

    public abstract void writeTo(java.io.Writer) throws java.io.IOException;

    public abstract void appendTo(java.lang.Appendable) throws java.io.IOException;

    public abstract java.lang.String toString();

    public abstract java.lang.String getDebugInfo();

    static void <clinit>()
    {
        net.htmlparser.jericho.OutputSegmentComparator $r0;

        $r0 = new net.htmlparser.jericho.OutputSegmentComparator;
        specialinvoke $r0.<net.htmlparser.jericho.OutputSegmentComparator: void <init>()>();
        <net.htmlparser.jericho.OutputSegment: java.util.Comparator COMPARATOR> = $r0;
        return;
    }
}
final class net.htmlparser.jericho.OutputSegmentComparator extends java.lang.Object implements java.util.Comparator
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        net.htmlparser.jericho.OutputSegmentComparator r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.OutputSegmentComparator;
        $r1 = <net.htmlparser.jericho.OutputSegmentComparator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.OutputSegmentComparator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public int compare(net.htmlparser.jericho.OutputSegment, net.htmlparser.jericho.OutputSegment)
    {
        net.htmlparser.jericho.OutputSegmentComparator r0;
        net.htmlparser.jericho.OutputSegment r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: net.htmlparser.jericho.OutputSegmentComparator;
        r1 := @parameter0: net.htmlparser.jericho.OutputSegment;
        r2 := @parameter1: net.htmlparser.jericho.OutputSegment;
        $r3 = <net.htmlparser.jericho.OutputSegmentComparator: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.OutputSegmentComparator: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $i0 = interfaceinvoke r1.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        $i1 = interfaceinvoke r2.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        r4[0] = 1;
        if $i0 >= $i1 goto label1;

        r4[1] = 1;
        return -1;

     label1:
        $i2 = interfaceinvoke r1.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        $i3 = interfaceinvoke r2.<net.htmlparser.jericho.OutputSegment: int getBegin()>();
        r4[2] = 1;
        if $i2 <= $i3 goto label2;

        r4[3] = 1;
        return 1;

     label2:
        $i4 = interfaceinvoke r1.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        $i5 = interfaceinvoke r2.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        r4[4] = 1;
        if $i4 >= $i5 goto label3;

        r4[5] = 1;
        return -1;

     label3:
        $i6 = interfaceinvoke r1.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        $i7 = interfaceinvoke r2.<net.htmlparser.jericho.OutputSegment: int getEnd()>();
        r4[6] = 1;
        if $i6 <= $i7 goto label4;

        r4[7] = 1;
        return 1;

     label4:
        r4[8] = 1;
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        net.htmlparser.jericho.OutputSegmentComparator r0;
        java.lang.Object r1, r2;
        net.htmlparser.jericho.OutputSegment $r3, $r4;
        int $i0;

        r0 := @this: net.htmlparser.jericho.OutputSegmentComparator;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (net.htmlparser.jericho.OutputSegment) r1;
        $r4 = (net.htmlparser.jericho.OutputSegment) r2;
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.OutputSegmentComparator: int compare(net.htmlparser.jericho.OutputSegment,net.htmlparser.jericho.OutputSegment)>($r3, $r4);
        return $i0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.OutputSegmentComparator: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.OutputSegmentComparator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[9];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[3] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/OutputSegmentComparator", -3054727557680608826L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.PHPTagTypes extends java.lang.Object
{
    public static final net.htmlparser.jericho.StartTagType PHP_STANDARD;
    public static final net.htmlparser.jericho.StartTagType PHP_SHORT;
    public static final net.htmlparser.jericho.StartTagType PHP_SCRIPT;
    private static final net.htmlparser.jericho.TagType[] TAG_TYPES;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.PHPTagTypes r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.PHPTagTypes;
        $r1 = <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static void register()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] r2;
        int i0, i1;
        net.htmlparser.jericho.TagType r3;

        $r0 = <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[1];
        r2 = <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r2;
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        virtualinvoke r3.<net.htmlparser.jericho.TagType: void register()>();
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        r1[3] = 1;
        return;
    }

    public static void deregister()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] r2;
        int i0, i1;
        net.htmlparser.jericho.TagType r3;

        $r0 = <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[2];
        r2 = <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r2;
        i1 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i1 >= i0 goto label2;

        r3 = r2[i1];
        virtualinvoke r3.<net.htmlparser.jericho.TagType: void deregister()>();
        i1 = i1 + 1;
        r1[2] = 1;
        goto label1;

     label2:
        r1[3] = 1;
        return;
    }

    public static boolean defines(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagType r0, r4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagType[] r3;
        int i0, i1;

        r0 := @parameter0: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES>;
        i0 = lengthof r3;
        i1 = 0;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i1 >= i0 goto label3;

        r4 = r3[i1];
        r2[2] = 1;
        if r0 != r4 goto label2;

        r2[3] = 1;
        return 1;

     label2:
        i1 = i1 + 1;
        r2[4] = 1;
        goto label1;

     label3:
        r2[5] = 1;
        return 0;
    }

    public static boolean isParsedByPHP(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3;
        boolean $z0, $z1;

        r0 := @parameter0: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON>;
        r2[0] = 1;
        if r0 == $r3 goto label1;

        $z0 = staticinvoke <net.htmlparser.jericho.PHPTagTypes: boolean defines(net.htmlparser.jericho.TagType)>(r0);
        r2[1] = 1;
        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;
        r2[2] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r2[3] = 1;

     label3:
        r2[4] = 1;
        return $z1;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagType $r2, $r7, $r8;
        net.htmlparser.jericho.StartTagTypePHPStandard $r3;
        net.htmlparser.jericho.StartTagTypePHPShort $r4;
        net.htmlparser.jericho.StartTagTypePHPScript $r5;
        net.htmlparser.jericho.TagType[] $r6;

        $r0 = staticinvoke <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRi()>();
        r1 = $r0[5];
        $r3 = <net.htmlparser.jericho.StartTagTypePHPStandard: net.htmlparser.jericho.StartTagTypePHPStandard INSTANCE>;
        <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.StartTagType PHP_STANDARD> = $r3;
        $r4 = <net.htmlparser.jericho.StartTagTypePHPShort: net.htmlparser.jericho.StartTagTypePHPShort INSTANCE>;
        <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.StartTagType PHP_SHORT> = $r4;
        $r5 = <net.htmlparser.jericho.StartTagTypePHPScript: net.htmlparser.jericho.StartTagTypePHPScript INSTANCE>;
        <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.StartTagType PHP_SCRIPT> = $r5;
        $r6 = newarray (net.htmlparser.jericho.TagType)[3];
        $r2 = <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.StartTagType PHP_STANDARD>;
        $r6[0] = $r2;
        $r7 = <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.StartTagType PHP_SHORT>;
        $r6[1] = $r7;
        $r8 = <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.StartTagType PHP_SCRIPT>;
        $r6[2] = $r8;
        <net.htmlparser.jericho.PHPTagTypes: net.htmlparser.jericho.TagType[] TAG_TYPES> = $r6;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.PHPTagTypes: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/PHPTagTypes", 4091424925321822999L);
        return $r0;
    }
}
public interface  net.htmlparser.jericho.ParseText extends java.lang.Object implements java.lang.CharSequence
{
    public static final int NO_BREAK;

    public abstract char charAt(int);

    public abstract boolean containsAt(java.lang.String, int);

    public abstract int indexOf(char, int);

    public abstract int indexOf(char, int, int);

    public abstract int indexOf(java.lang.String, int);

    public abstract int indexOf(java.lang.String, int, int);

    public abstract int lastIndexOf(char, int);

    public abstract int lastIndexOf(char, int, int);

    public abstract int lastIndexOf(java.lang.String, int);

    public abstract int lastIndexOf(java.lang.String, int, int);

    public abstract int length();

    public abstract java.lang.CharSequence subSequence(int, int);

    public abstract java.lang.String toString();
}
final class net.htmlparser.jericho.RemoveOutputSegment extends java.lang.Object implements net.htmlparser.jericho.OutputSegment
{
    private final int begin;
    private final int end;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(int, int)
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.RemoveOutputSegment: int begin> = i0;
        r0.<net.htmlparser.jericho.RemoveOutputSegment: int end> = i1;
        r2[0] = 1;
        return;
    }

    public void <init>(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $i0 = r1.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r1.<net.htmlparser.jericho.Segment: int end>;
        specialinvoke r0.<net.htmlparser.jericho.RemoveOutputSegment: void <init>(int,int)>($i0, $i1);
        r3[0] = 1;
        return;
    }

    public int getBegin()
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        $r1 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<net.htmlparser.jericho.RemoveOutputSegment: int begin>;
        r2[0] = 1;
        return $i0;
    }

    public int getEnd()
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        $r1 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<net.htmlparser.jericho.RemoveOutputSegment: int end>;
        r2[0] = 1;
        return $i0;
    }

    public void writeTo(java.io.Writer)
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        virtualinvoke r0.<net.htmlparser.jericho.RemoveOutputSegment: void appendTo(java.lang.Appendable)>(r1);
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable)
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r3[0] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        $r1 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        return 0L;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        $r1 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r2[0] = 1;
        return "";
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.RemoveOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1;
        java.lang.String $r9;

        r0 := @this: net.htmlparser.jericho.RemoveOutputSegment;
        $r1 = <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove: (p");
        $i0 = r0.<net.htmlparser.jericho.RemoveOutputSegment: int begin>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-p");
        $i1 = r0.<net.htmlparser.jericho.RemoveOutputSegment: int end>;
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r9;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRi()>();
        r1 = $r0[9];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.RemoveOutputSegment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/RemoveOutputSegment", 7693510273015257441L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$A_ElementHandler extends java.lang.Object implements net.htmlparser.jericho.Renderer$ElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$A_ElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$A_ElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$A_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$A_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$A_ElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        net.htmlparser.jericho.Renderer $r6;
        net.htmlparser.jericho.StartTag $r7;

        r0 := @this: net.htmlparser.jericho.Renderer$A_ElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$A_ElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$A_ElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        $z0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$900(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        $r6 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer access$1000(net.htmlparser.jericho.Renderer$Processor)>(r1);
        $r7 = virtualinvoke r2.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        r5 = virtualinvoke $r6.<net.htmlparser.jericho.Renderer: java.lang.String renderHyperlinkURL(net.htmlparser.jericho.StartTag)>($r7);
        r4[2] = 1;
        if r5 != null goto label2;

        r4[3] = 1;
        return;

     label2:
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();
        i0 = $i1 + 1;
        $i2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$1100(net.htmlparser.jericho.Renderer$Processor)>(r1);
        $i3 = $i2 + i0;
        $i4 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$1200(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[4] = 1;
        if $i3 < $i4 goto label3;

        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$1300(net.htmlparser.jericho.Renderer$Processor,int)>(r1, 0);
        r4[5] = 1;
        goto label4;

     label3:
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor access$500(net.htmlparser.jericho.Renderer$Processor,char)>(r1, 32);
        r4[6] = 1;

     label4:
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor access$1400(net.htmlparser.jericho.Renderer$Processor,java.lang.String)>(r1, r5);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$402(net.htmlparser.jericho.Renderer$Processor,boolean)>(r1, 1);
        r4[7] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$A_ElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$A_ElementHandler: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.Renderer$A_ElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$A_ElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$A_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.Renderer$A_ElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$A_ElementHandler", -8343705042007951419L);
        return $r0;
    }
}
abstract class net.htmlparser.jericho.Renderer$AbstractBlockElementHandler extends java.lang.Object implements net.htmlparser.jericho.Renderer$ElementHandler
{
    private final int topMargin;
    private final int bottomMargin;
    private final boolean indent;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    protected void <init>(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler r0;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int topMargin> = i0;
        r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int bottomMargin> = i1;
        r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean indent> = z0;
        r2[0] = 1;
        return;
    }

    public void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        int i0, $i1, $i2, $i3, $i6, $i7;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $i1 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int topMargin>;
        $i2 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getTopMargin(net.htmlparser.jericho.Element,int)>(r2, $i1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$600(net.htmlparser.jericho.Renderer$Processor,int)>(r1, $i2);
        $z0 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean indent>;
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $i3 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$700(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[1] = 1;
        goto label2;

     label1:
        $i3 = 0;
        r4[2] = 1;

     label2:
        i0 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getLeftMargin(net.htmlparser.jericho.Element,int)>(r2, $i3);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$812(net.htmlparser.jericho.Renderer$Processor,int)>(r1, i0);
        virtualinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: void processBlockContent(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$820(net.htmlparser.jericho.Renderer$Processor,int)>(r1, i0);
        $i6 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int bottomMargin>;
        $i7 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getBottomMargin(net.htmlparser.jericho.Element,int)>(r2, $i6);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$600(net.htmlparser.jericho.Renderer$Processor,int)>(r1, $i7);
        r4[3] = 1;
        return;
    }

    public net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newTopMargin(int)
    {
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler r0, $r3;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i1 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int bottomMargin>;
        $z0 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean indent>;
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int,int,boolean)>(i0, $i1, $z0);
        r2[0] = 1;
        return $r3;
    }

    public int getTopMargin()
    {
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int topMargin>;
        r2[0] = 1;
        return $i0;
    }

    public net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newBottomMargin(int)
    {
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler r0, $r3;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $i1 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int topMargin>;
        $z0 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean indent>;
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int,int,boolean)>($i1, i0, $z0);
        r2[0] = 1;
        return $r3;
    }

    public int getBottomMargin()
    {
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $i0 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int bottomMargin>;
        r2[0] = 1;
        return $i0;
    }

    public net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newIndent(boolean)
    {
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler r0, $r3;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $i0 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int topMargin>;
        $i1 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int bottomMargin>;
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int,int,boolean)>($i0, $i1, z0);
        r2[0] = 1;
        return $r3;
    }

    public boolean isIndent()
    {
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $z0 = r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean indent>;
        r2[0] = 1;
        return $z0;
    }

    protected abstract void processBlockContent(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException;

    protected abstract net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int, int, boolean);

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRi()>();
        r1 = $r0[10];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[11][];
        <net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[10] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$AbstractBlockElementHandler", 4924586571879167212L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$AlternateTextElementHandler extends java.lang.Object implements net.htmlparser.jericho.Renderer$ElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$AlternateTextElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$AlternateTextElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$AlternateTextElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.String r5;
        boolean $z0;
        net.htmlparser.jericho.Renderer $r6;
        net.htmlparser.jericho.StartTag $r7;

        r0 := @this: net.htmlparser.jericho.Renderer$AlternateTextElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $z0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$2100(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[0] = 1;
        if $z0 != 0 goto label1;

        r4[1] = 1;
        return;

     label1:
        $r6 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer access$1000(net.htmlparser.jericho.Renderer$Processor)>(r1);
        $r7 = virtualinvoke r2.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        r5 = virtualinvoke $r6.<net.htmlparser.jericho.Renderer: java.lang.String renderAlternateText(net.htmlparser.jericho.StartTag)>($r7);
        r4[2] = 1;
        if r5 != null goto label2;

        r4[3] = 1;
        return;

     label2:
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$2200(net.htmlparser.jericho.Renderer$Processor,java.lang.String)>(r1, r5);
        r4[4] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$AlternateTextElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.Renderer$AlternateTextElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$AlternateTextElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$AlternateTextElementHandler", -1758786753160463201L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$BR_ElementHandler extends java.lang.Object implements net.htmlparser.jericho.Renderer$ElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$BR_ElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$BR_ElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$BR_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$BR_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$BR_ElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1, $z2;

        r0 := @this: net.htmlparser.jericho.Renderer$BR_ElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$BR_ElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$BR_ElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $z0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$1500(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[0] = 1;
        if $z0 == 0 goto label1;

        $z1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$1600(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[1] = 1;
        if $z1 != 0 goto label1;

        $z2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$1700(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[2] = 1;
        if $z2 != 0 goto label1;

        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$1800(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[3] = 1;

     label1:
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$1800(net.htmlparser.jericho.Renderer$Processor)>(r1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$600(net.htmlparser.jericho.Renderer$Processor,int)>(r1, 0);
        r4[4] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$BR_ElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$BR_ElementHandler: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.Renderer$BR_ElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$BR_ElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$BR_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.Renderer$BR_ElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$BR_ElementHandler", 8658783170199031694L);
        return $r0;
    }
}
interface  net.htmlparser.jericho.Renderer$ElementHandler extends java.lang.Object
{

    public abstract void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException;
}
final class net.htmlparser.jericho.Renderer$FontStyleElementHandler extends java.lang.Object implements net.htmlparser.jericho.Renderer$ElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_B;
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_I;
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_U;
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_CODE;
    private final char decorationChar;
    private static final boolean[][] $VRc;

    public void <init>(char)
    {
        net.htmlparser.jericho.Renderer$FontStyleElementHandler r0;
        char c0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$FontStyleElementHandler;
        c0 := @parameter0: char;
        $r1 = <net.htmlparser.jericho.Renderer$FontStyleElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$FontStyleElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Renderer$FontStyleElementHandler: char decorationChar> = c0;
        r2[0] = 1;
        return;
    }

    public void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$FontStyleElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0, $z1, $z3;
        char $c0, $c1;

        r0 := @this: net.htmlparser.jericho.Renderer$FontStyleElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$FontStyleElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$FontStyleElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $z0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$300(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[0] = 1;
        if $z0 == 0 goto label2;

        $z1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$400(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[1] = 1;
        if $z1 == 0 goto label1;

        staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor access$500(net.htmlparser.jericho.Renderer$Processor,char)>(r1, 32);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$402(net.htmlparser.jericho.Renderer$Processor,boolean)>(r1, 0);
        r4[2] = 1;

     label1:
        $c0 = r0.<net.htmlparser.jericho.Renderer$FontStyleElementHandler: char decorationChar>;
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor access$500(net.htmlparser.jericho.Renderer$Processor,char)>(r1, $c0);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        $z3 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$300(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[3] = 1;
        if $z3 == 0 goto label3;

        $c1 = r0.<net.htmlparser.jericho.Renderer$FontStyleElementHandler: char decorationChar>;
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor access$500(net.htmlparser.jericho.Renderer$Processor,char)>(r1, $c1);
        r4[4] = 1;
        goto label3;

     label2:
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        r4[5] = 1;

     label3:
        r4[6] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$FontStyleElementHandler $r2, $r3, $r4, $r5;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$FontStyleElementHandler: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.Renderer$FontStyleElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$FontStyleElementHandler: void <init>(char)>(42);
        <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_B> = $r2;
        $r3 = new net.htmlparser.jericho.Renderer$FontStyleElementHandler;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer$FontStyleElementHandler: void <init>(char)>(47);
        <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_I> = $r3;
        $r4 = new net.htmlparser.jericho.Renderer$FontStyleElementHandler;
        specialinvoke $r4.<net.htmlparser.jericho.Renderer$FontStyleElementHandler: void <init>(char)>(95);
        <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_U> = $r4;
        $r5 = new net.htmlparser.jericho.Renderer$FontStyleElementHandler;
        specialinvoke $r5.<net.htmlparser.jericho.Renderer$FontStyleElementHandler: void <init>(char)>(124);
        <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_CODE> = $r5;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.Renderer$FontStyleElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$FontStyleElementHandler", 4544204284061555054L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$HR_ElementHandler extends net.htmlparser.jericho.Renderer$AbstractBlockElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$HR_ElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$HR_ElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$HR_ElementHandler: void <init>(int,int,boolean)>(0, 0, 0);
        r2[0] = 1;
        return;
    }

    private void <init>(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$HR_ElementHandler r0;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$HR_ElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: void <init>(int,int,boolean)>(i0, i1, z0);
        r2[0] = 1;
        return;
    }

    protected void processBlockContent(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$HR_ElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        int i0, i1, $i2;
        java.lang.Appendable $r6;

        r0 := @this: net.htmlparser.jericho.Renderer$HR_ElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$1900(net.htmlparser.jericho.Renderer$Processor)>(r1);
        $i2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$1200(net.htmlparser.jericho.Renderer$Processor)>(r1);
        i0 = $i2 - 4;
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor access$500(net.htmlparser.jericho.Renderer$Processor,char)>(r1, 45);
        i1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$1100(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[0] = 1;

     label1:
        r4[1] = 1;
        if i1 >= i0 goto label2;

        $r6 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable access$2000(net.htmlparser.jericho.Renderer$Processor)>(r1);
        interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(char)>(45);
        i1 = i1 + 1;
        r4[2] = 1;
        goto label1;

     label2:
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$1102(net.htmlparser.jericho.Renderer$Processor,int)>(r1, i0);
        r4[3] = 1;
        return;
    }

    protected net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$HR_ElementHandler r0, $r3;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$HR_ElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new net.htmlparser.jericho.Renderer$HR_ElementHandler;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer$HR_ElementHandler: void <init>(int,int,boolean)>(i0, i1, z0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$HR_ElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r2 = new net.htmlparser.jericho.Renderer$HR_ElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$HR_ElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$HR_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.Renderer$HR_ElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$HR_ElementHandler", -2720311353374459014L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$LI_ElementHandler extends net.htmlparser.jericho.Renderer$AbstractBlockElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$LI_ElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$LI_ElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$LI_ElementHandler: void <init>(int,int,boolean)>(0, 0, 0);
        r2[0] = 1;
        return;
    }

    private void <init>(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$LI_ElementHandler r0;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$LI_ElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: void <init>(int,int,boolean)>(i0, i1, z0);
        r2[0] = 1;
        return;
    }

    protected void processBlockContent(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$LI_ElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Renderer$LI_ElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $i0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$2300(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[0] = 1;
        if $i0 == -1 goto label1;

        staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$2308(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[1] = 1;

     label1:
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$2502(net.htmlparser.jericho.Renderer$Processor,boolean)>(r1, 1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$1900(net.htmlparser.jericho.Renderer$Processor)>(r1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$2600(net.htmlparser.jericho.Renderer$Processor)>(r1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$1702(net.htmlparser.jericho.Renderer$Processor,boolean)>(r1, 1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$600(net.htmlparser.jericho.Renderer$Processor,int)>(r1, 0);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$2502(net.htmlparser.jericho.Renderer$Processor,boolean)>(r1, 0);
        r4[2] = 1;
        return;
    }

    protected net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$LI_ElementHandler r0, $r3;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$LI_ElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new net.htmlparser.jericho.Renderer$LI_ElementHandler;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer$LI_ElementHandler: void <init>(int,int,boolean)>(i0, i1, z0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$LI_ElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r2 = new net.htmlparser.jericho.Renderer$LI_ElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$LI_ElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$LI_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.Renderer$LI_ElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$LI_ElementHandler", -4915515109382611219L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$ListElementHandler extends net.htmlparser.jericho.Renderer$AbstractBlockElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_OL;
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_UL;
    private final int initialListBulletNumber;
    private static final boolean[][] $VRc;

    private void <init>(int)
    {
        net.htmlparser.jericho.Renderer$ListElementHandler r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$ListElementHandler;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$ListElementHandler: void <init>(int,int,int,boolean)>(i0, 0, 0, 0);
        r2[0] = 1;
        return;
    }

    private void <init>(int, int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$ListElementHandler r0;
        int i0, i1, i2;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$ListElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        z0 := @parameter3: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: void <init>(int,int,boolean)>(i1, i2, z0);
        r0.<net.htmlparser.jericho.Renderer$ListElementHandler: int initialListBulletNumber> = i0;
        r2[0] = 1;
        return;
    }

    protected void processBlockContent(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$ListElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        int i0, $i1;

        r0 := @this: net.htmlparser.jericho.Renderer$ListElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        i0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$2300(net.htmlparser.jericho.Renderer$Processor)>(r1);
        $i1 = r0.<net.htmlparser.jericho.Renderer$ListElementHandler: int initialListBulletNumber>;
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$2302(net.htmlparser.jericho.Renderer$Processor,int)>(r1, $i1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$2408(net.htmlparser.jericho.Renderer$Processor)>(r1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$2410(net.htmlparser.jericho.Renderer$Processor)>(r1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: int access$2302(net.htmlparser.jericho.Renderer$Processor,int)>(r1, i0);
        r4[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$ListElementHandler r0, $r3;
        int i0, i1, $i2;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$ListElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new net.htmlparser.jericho.Renderer$ListElementHandler;
        $i2 = r0.<net.htmlparser.jericho.Renderer$ListElementHandler: int initialListBulletNumber>;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer$ListElementHandler: void <init>(int,int,int,boolean)>($i2, i0, i1, z0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$ListElementHandler $r2, $r3;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r2 = new net.htmlparser.jericho.Renderer$ListElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$ListElementHandler: void <init>(int)>(0);
        <net.htmlparser.jericho.Renderer$ListElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_OL> = $r2;
        $r3 = new net.htmlparser.jericho.Renderer$ListElementHandler;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer$ListElementHandler: void <init>(int)>(-1);
        <net.htmlparser.jericho.Renderer$ListElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_UL> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.Renderer$ListElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$ListElementHandler", 212117092291116207L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$PRE_ElementHandler extends net.htmlparser.jericho.Renderer$AbstractBlockElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$PRE_ElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$PRE_ElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$PRE_ElementHandler: void <init>(int,int,boolean)>(1, 1, 0);
        r2[0] = 1;
        return;
    }

    private void <init>(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$PRE_ElementHandler r0;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$PRE_ElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: void <init>(int,int,boolean)>(i0, i1, z0);
        r2[0] = 1;
        return;
    }

    protected void processBlockContent(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$PRE_ElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean z0;

        r0 := @this: net.htmlparser.jericho.Renderer$PRE_ElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        z0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$2700(net.htmlparser.jericho.Renderer$Processor)>(r1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$2702(net.htmlparser.jericho.Renderer$Processor,boolean)>(r1, 1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$2702(net.htmlparser.jericho.Renderer$Processor,boolean)>(r1, z0);
        r4[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$PRE_ElementHandler r0, $r3;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$PRE_ElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new net.htmlparser.jericho.Renderer$PRE_ElementHandler;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer$PRE_ElementHandler: void <init>(int,int,boolean)>(i0, i1, z0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$PRE_ElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRi()>();
        r1 = $r0[4];
        $r2 = new net.htmlparser.jericho.Renderer$PRE_ElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$PRE_ElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$PRE_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.Renderer$PRE_ElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$PRE_ElementHandler", -2171205559077056021L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$Processor extends java.lang.Object
{
    private final net.htmlparser.jericho.Renderer renderer;
    private final net.htmlparser.jericho.Segment rootSegment;
    private final net.htmlparser.jericho.Source source;
    private final int maxLineLength;
    private final java.lang.String newLine;
    private final boolean includeHyperlinkURLs;
    private final boolean includeAlternateText;
    private final boolean decorateFontStyles;
    private final boolean convertNonBreakingSpaces;
    private final int blockIndentSize;
    private final int listIndentSize;
    private final char[] listBullets;
    private final java.lang.String tableCellSeparator;
    private java.lang.Appendable appendable;
    private int renderedIndex;
    private boolean atStartOfLine;
    private boolean skipInitialNewLines;
    private int col;
    private int listIndentLevel;
    private int indentSize;
    private int blockVerticalMargin;
    private boolean preformatted;
    private boolean lastCharWhiteSpace;
    private final boolean ignoreInitialWhiteSpace;
    private boolean bullet;
    private int listBulletNumber;
    private static final int NO_MARGIN;
    static final boolean $assertionsDisabled;
    private static final boolean[][] $VRc;

    public void <init>(net.htmlparser.jericho.Renderer, net.htmlparser.jericho.Segment, int, java.lang.String, boolean, boolean, boolean, boolean, int, int, char[], java.lang.String)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        net.htmlparser.jericho.Renderer r1;
        net.htmlparser.jericho.Segment r2;
        int i0, i1, i2;
        java.lang.String r3, r5;
        boolean z0, z1, z2, z3;
        char[] r4;
        boolean[][] $r6;
        boolean[] r7;
        net.htmlparser.jericho.Source $r8;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter0: net.htmlparser.jericho.Renderer;
        r2 := @parameter1: net.htmlparser.jericho.Segment;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String;
        z0 := @parameter4: boolean;
        z1 := @parameter5: boolean;
        z2 := @parameter6: boolean;
        z3 := @parameter7: boolean;
        i1 := @parameter8: int;
        i2 := @parameter9: int;
        r4 := @parameter10: char[];
        r5 := @parameter11: java.lang.String;
        $r6 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r6 != null goto label0;

        $r6 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r7 = $r6[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean ignoreInitialWhiteSpace> = 0;
        r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer renderer> = r1;
        r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Segment rootSegment> = r2;
        $r8 = r2.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Source source> = $r8;
        r0.<net.htmlparser.jericho.Renderer$Processor: int maxLineLength> = i0;
        r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.String newLine> = r3;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean includeHyperlinkURLs> = z0;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean includeAlternateText> = z1;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean decorateFontStyles> = z2;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean convertNonBreakingSpaces> = z3;
        r0.<net.htmlparser.jericho.Renderer$Processor: int blockIndentSize> = i1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentSize> = i2;
        r0.<net.htmlparser.jericho.Renderer$Processor: char[] listBullets> = r4;
        r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.String tableCellSeparator> = r5;
        r7[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Segment $r4, $r5, $r6;
        int $i0, $i1;
        java.util.List $r7;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void reset()>();
        r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable> = r1;
        $r4 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Segment rootSegment>;
        $i0 = $r4.<net.htmlparser.jericho.Segment: int begin>;
        $r5 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Segment rootSegment>;
        $i1 = $r5.<net.htmlparser.jericho.Segment: int end>;
        $r6 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Segment rootSegment>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Segment: java.util.List getChildElements()>();
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendSegmentProcessingChildElements(int,int,java.util.List)>($i0, $i1, $r7);
        r3[0] = 1;
        return;
    }

    private void reset()
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Renderer $r4;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex> = 0;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine> = 1;
        $r4 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer renderer>;
        $z0 = staticinvoke <net.htmlparser.jericho.Renderer: boolean access$000(net.htmlparser.jericho.Renderer)>($r4);
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $z1 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r2[2] = 1;

     label2:
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean skipInitialNewLines> = $z1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = 0;
        r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel> = 0;
        r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize> = 0;
        r0.<net.htmlparser.jericho.Renderer$Processor: int blockVerticalMargin> = -1;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean preformatted> = 0;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace> = 0;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean bullet> = 0;
        r2[3] = 1;
        return;
    }

    private void appendElementContent(net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        net.htmlparser.jericho.Element r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;
        net.htmlparser.jericho.StartTag $r4;
        java.util.List $r5;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        i0 = virtualinvoke r1.<net.htmlparser.jericho.Element: int getContentEnd()>();
        $z0 = virtualinvoke r1.<net.htmlparser.jericho.Element: boolean isEmpty()>();
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $i2 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        r3[1] = 1;
        if $i2 < i0 goto label2;

     label1:
        r3[2] = 1;
        return;

     label2:
        $r4 = virtualinvoke r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        i1 = $r4.<net.htmlparser.jericho.StartTag: int end>;
        $i3 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, i1);
        $r5 = virtualinvoke r1.<net.htmlparser.jericho.Element: java.util.List getChildElements()>();
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendSegmentProcessingChildElements(int,int,java.util.List)>($i4, i0, $r5);
        r3[3] = 1;
        return;
    }

    private void appendSegmentProcessingChildElements(int, int, java.util.List) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.Element r5;
        boolean $z0;
        java.lang.Object $r6;
        net.htmlparser.jericho.Renderer$ElementHandler $r7;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.util.List;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        i2 = i0;
        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.Element) $r6;
        $i3 = r5.<net.htmlparser.jericho.Element: int end>;
        r3[2] = 1;
        if i2 < $i3 goto label2;

        r3[3] = 1;
        goto label1;

     label2:
        $i4 = r5.<net.htmlparser.jericho.Element: int begin>;
        r3[4] = 1;
        if i2 >= $i4 goto label3;

        $i5 = r5.<net.htmlparser.jericho.Element: int begin>;
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendSegmentRemovingTags(int,int)>(i2, $i5);
        r3[5] = 1;

     label3:
        $r7 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$ElementHandler getElementHandler(net.htmlparser.jericho.Element)>(r5);
        interfaceinvoke $r7.<net.htmlparser.jericho.Renderer$ElementHandler: void process(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r0, r5);
        $i6 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        $i7 = r5.<net.htmlparser.jericho.Element: int end>;
        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i7);
        r3[6] = 1;
        goto label1;

     label4:
        r3[7] = 1;
        if i2 >= i1 goto label5;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendSegmentRemovingTags(int,int)>(i2, i1);
        r3[8] = 1;

     label5:
        r3[9] = 1;
        return;
    }

    private static net.htmlparser.jericho.Renderer$ElementHandler getElementHandler(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Renderer$ElementHandler r3, $r6, $r10;
        net.htmlparser.jericho.StartTag $r4;
        net.htmlparser.jericho.StartTagType $r5;
        boolean $z0;
        java.util.Map $r7;
        java.lang.String $r8;
        java.lang.Object $r9;

        r0 := @parameter0: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $z0 = virtualinvoke $r5.<net.htmlparser.jericho.StartTagType: boolean isServerTag()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r6 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        r2[1] = 1;
        return $r6;

     label1:
        $r7 = staticinvoke <net.htmlparser.jericho.Renderer: java.util.Map access$100()>();
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.Element: java.lang.String getName()>();
        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);
        r3 = (net.htmlparser.jericho.Renderer$ElementHandler) $r9;
        r2[2] = 1;
        if r3 == null goto label2;

        $r10 = r3;
        r2[3] = 1;
        goto label3;

     label2:
        $r10 = <net.htmlparser.jericho.Renderer$StandardInlineElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        r2[4] = 1;

     label3:
        r2[5] = 1;
        return $r10;
    }

    private void appendSegmentRemovingTags(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, i1, i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        net.htmlparser.jericho.Source $r4;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        i2 = i0;
        r2[0] = 1;

     label1:
        $r4 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Source source>;
        r3 = virtualinvoke $r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int)>(i2);
        r2[1] = 1;
        if r3 == null goto label3;

        $i3 = r3.<net.htmlparser.jericho.Tag: int begin>;
        r2[2] = 1;
        if $i3 < i1 goto label2;

        r2[3] = 1;
        goto label3;

     label2:
        $i4 = r3.<net.htmlparser.jericho.Tag: int begin>;
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendSegment(int,int)>(i2, $i4);
        i2 = r3.<net.htmlparser.jericho.Tag: int end>;
        r2[4] = 1;
        goto label1;

     label3:
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendSegment(int,int)>(i2, i1);
        r2[5] = 1;
        return;
    }

    private void appendSegment(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, i1, $i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Throwable r3, $r5;
        boolean $z0, $z1;
        java.lang.AssertionError $r4;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $z0 = <net.htmlparser.jericho.Renderer$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        r2[1] = 1;
        if i0 <= i1 goto label1;

        $r4 = new java.lang.AssertionError;
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r4;

     label1:
        $i2 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        r2[3] = 1;
        if i0 >= $i2 goto label2;

        i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        r2[4] = 1;

     label2:
        r2[5] = 1;
        if i0 < i1 goto label3;

        r2[6] = 1;
        return;

     label3:
        $z1 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean preformatted>;
        r2[7] = 1;
        if $z1 == 0 goto label4;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendPreformattedSegment(int,int)>(i0, i1);
        r2[8] = 1;
        goto label5;

     label4:
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendNonPreformattedSegment(int,int)>(i0, i1);
        r2[9] = 1;

     label5:
        $i3 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        r2[10] = 1;
        if $i3 >= i1 goto label10;

        r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex> = i1;
        r2[11] = 1;
        goto label10;

     label6:
        $r5 := @caughtexception;

     label7:
        r3 = $r5;

     label8:
        $i4 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        r2[12] = 1;
        if $i4 >= i1 goto label9;

        r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex> = i1;
        r2[13] = 1;

     label9:
        r2[14] = 1;
        throw r3;

     label10:
        r2[15] = 1;
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void appendPreformattedSegment(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, i1, i2, i4, $i5, $i6, $i7;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3;
        char c3, $c8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.AssertionError $r4, $r5;
        net.htmlparser.jericho.Source $r6;
        java.lang.CharSequence $r7;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $z0 = <net.htmlparser.jericho.Renderer$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        r2[1] = 1;
        if i0 < i1 goto label1;

        $r4 = new java.lang.AssertionError;
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r4;

     label1:
        $z1 = <net.htmlparser.jericho.Renderer$Processor: boolean $assertionsDisabled>;
        r2[3] = 1;
        if $z1 != 0 goto label2;

        $i5 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        r2[4] = 1;
        if i0 >= $i5 goto label2;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        r2[5] = 1;
        throw $r5;

     label2:
        $z2 = specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: boolean isBlockBoundary()>();
        r2[6] = 1;
        if $z2 == 0 goto label3;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendBlockVerticalMargin()>();
        r2[7] = 1;

     label3:
        $r6 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Source source>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Source: java.lang.CharSequence subSequence(int,int)>(i0, i1);
        $z3 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean convertNonBreakingSpaces>;
        r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decode(java.lang.CharSequence,boolean,boolean)>($r7, 0, $z3);
        i2 = 0;
        r2[8] = 1;

     label4:
        $i6 = virtualinvoke r3.<java.lang.String: int length()>();
        r2[9] = 1;
        if i2 >= $i6 goto label10;

        c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i2);
        r2[10] = 1;
        if c3 != 10 goto label5;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void newLine()>();
        r2[11] = 1;
        goto label9;

     label5:
        r2[12] = 1;
        if c3 != 13 goto label8;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void newLine()>();
        i4 = i2 + 1;
        $i7 = virtualinvoke r3.<java.lang.String: int length()>();
        r2[13] = 1;
        if i4 != $i7 goto label6;

        r2[14] = 1;
        goto label10;

     label6:
        $c8 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i4);
        r2[15] = 1;
        if $c8 != 10 goto label7;

        i2 = i2 + 1;
        r2[16] = 1;

     label7:
        r2[17] = 1;
        goto label9;

     label8:
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor append(char)>(c3);
        r2[18] = 1;

     label9:
        i2 = i2 + 1;
        r2[19] = 1;
        goto label4;

     label10:
        r2[20] = 1;
        return;
    }

    private void appendNonPreformattedSegment(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, i1, $i2, $i3, $i5;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.AssertionError $r4, $r5;
        net.htmlparser.jericho.Source $r6, $r8, $r9;
        java.lang.CharSequence $r7;
        char $c4, $c6;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $z0 = <net.htmlparser.jericho.Renderer$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        r2[1] = 1;
        if i0 < i1 goto label1;

        $r4 = new java.lang.AssertionError;
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r4;

     label1:
        $z1 = <net.htmlparser.jericho.Renderer$Processor: boolean $assertionsDisabled>;
        r2[3] = 1;
        if $z1 != 0 goto label2;

        $i2 = r0.<net.htmlparser.jericho.Renderer$Processor: int renderedIndex>;
        r2[4] = 1;
        if i0 >= $i2 goto label2;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        r2[5] = 1;
        throw $r5;

     label2:
        $r6 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Source source>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Source: java.lang.CharSequence subSequence(int,int)>(i0, i1);
        $z2 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean convertNonBreakingSpaces>;
        r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decodeCollapseWhiteSpace(java.lang.CharSequence,boolean)>($r7, $z2);
        $i3 = virtualinvoke r3.<java.lang.String: int length()>();
        r2[6] = 1;
        if $i3 != 0 goto label3;

        r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace> = 1;
        r2[7] = 1;
        return;

     label3:
        $r8 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Source source>;
        $c4 = virtualinvoke $r8.<net.htmlparser.jericho.Source: char charAt(int)>(i0);
        $z3 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c4);
        $r9 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Source source>;
        $i5 = i1 - 1;
        $c6 = virtualinvoke $r9.<net.htmlparser.jericho.Source: char charAt(int)>($i5);
        $z4 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c6);
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendNonPreformattedText(java.lang.String,boolean,boolean)>(r3, $z3, $z4);
        r2[8] = 1;
        return;
    }

    private void appendText(java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0, $z1, $z2;
        int $i0, $i2, $i3;
        java.lang.AssertionError $r4;
        char $c1, $c4;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $z0 = <net.htmlparser.jericho.Renderer$Processor: boolean $assertionsDisabled>;
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if $i0 > 0 goto label1;

        $r4 = new java.lang.AssertionError;
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
        r3[2] = 1;
        throw $r4;

     label1:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        $z1 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c1);
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        $i3 = $i2 - 1;
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);
        $z2 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c4);
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendNonPreformattedText(java.lang.String,boolean,boolean)>(r1, $z1, $z2);
        r3[3] = 1;
        return;
    }

    private void appendNonPreformattedText(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        java.lang.String r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i2, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        char $c3, $c7;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        z1 := @parameter2: boolean;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        $z2 = specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: boolean isBlockBoundary()>();
        r3[0] = 1;
        if $z2 == 0 goto label1;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendBlockVerticalMargin()>();
        r3[1] = 1;
        goto label3;

     label1:
        $z3 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace>;
        r3[2] = 1;
        if $z3 != 0 goto label2;

        r3[3] = 1;
        if z0 == 0 goto label3;

     label2:
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor append(char)>(32);
        r3[4] = 1;

     label3:
        i0 = 0;
        i1 = 0;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace> = 0;
        r3[5] = 1;

     label4:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[6] = 1;
        if i1 >= $i2 goto label8;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        r3[7] = 1;
        if $c3 == 32 goto label5;

        r3[8] = 1;
        goto label7;

     label5:
        $i4 = i1 + 1;
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[9] = 1;
        if $i4 >= $i5 goto label6;

        $i6 = i1 + 1;
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);
        r3[10] = 1;
        if $c7 != 62 goto label6;

        r3[11] = 1;
        goto label7;

     label6:
        $i8 = i1 + 6;
        $i9 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[12] = 1;
        if $i8 >= $i9 goto label8;

        $i10 = i1 + 1;
        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>("From ", $i10);
        r3[13] = 1;
        if $z4 == 0 goto label8;

     label7:
        i1 = i1 + 1;
        r3[14] = 1;
        goto label4;

     label8:
        $i11 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        $i12 = $i11 + i1;
        $i13 = $i12 - i0;
        $i14 = $i13 + 1;
        $i15 = r0.<net.htmlparser.jericho.Renderer$Processor: int maxLineLength>;
        r3[15] = 1;
        if $i14 < $i15 goto label10;

        $z5 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace>;
        r3[16] = 1;
        if $z5 == 0 goto label9;

        $i16 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel>;
        $i17 = r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize>;
        $i18 = $i16 | $i17;
        r3[17] = 1;
        if $i18 != 0 goto label9;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor append(char)>(32);
        r3[18] = 1;

     label9:
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void startNewLine(int)>(0);
        r3[19] = 1;
        goto label11;

     label10:
        $z6 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace>;
        r3[20] = 1;
        if $z6 == 0 goto label11;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor append(char)>(32);
        r3[21] = 1;

     label11:
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void append(java.lang.CharSequence,int,int)>(r1, i0, i1);
        $i19 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[22] = 1;
        if i1 != $i19 goto label12;

        r3[23] = 1;
        goto label13;

     label12:
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace> = 1;
        i1 = i1 + 1;
        i0 = i1;
        r3[24] = 1;
        goto label4;

     label13:
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace> = z1;
        r3[25] = 1;
        return;
    }

    private boolean isBlockBoundary()
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int blockVerticalMargin>;
        r2[0] = 1;
        if $i0 == -1 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    private void appendBlockVerticalMargin() throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r3;
        java.lang.Appendable $r4;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $z0 = <net.htmlparser.jericho.Renderer$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $i1 = r0.<net.htmlparser.jericho.Renderer$Processor: int blockVerticalMargin>;
        r2[1] = 1;
        if $i1 != -1 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        $z1 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean skipInitialNewLines>;
        r2[3] = 1;
        if $z1 == 0 goto label7;

        r0.<net.htmlparser.jericho.Renderer$Processor: boolean skipInitialNewLines> = 0;
        $i2 = r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize>;
        $i3 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel>;
        $i4 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentSize>;
        $i5 = $i3 * $i4;
        i0 = $i2 + $i5;
        $i6 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        r2[4] = 1;
        if $i6 != i0 goto label2;

        r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine> = 0;
        r2[5] = 1;
        goto label6;

     label2:
        $z2 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean bullet>;
        r2[6] = 1;
        if $z2 != 0 goto label3;

        $i7 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        r2[7] = 1;
        if $i7 <= i0 goto label4;

     label3:
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void startNewLine(int)>(0);
        r2[8] = 1;
        goto label6;

     label4:
        $i8 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        r2[9] = 1;
        if i0 <= $i8 goto label5;

        $r4 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        $i9 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        $i10 = $i9 + 1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = $i10;
        r2[10] = 1;
        goto label4;

     label5:
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine> = 0;
        r2[11] = 1;

     label6:
        r2[12] = 1;
        goto label8;

     label7:
        $i11 = r0.<net.htmlparser.jericho.Renderer$Processor: int blockVerticalMargin>;
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void startNewLine(int)>($i11);
        r2[13] = 1;

     label8:
        r0.<net.htmlparser.jericho.Renderer$Processor: int blockVerticalMargin> = -1;
        r2[14] = 1;
        return;
    }

    private void blockBoundary(int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $i1 = r0.<net.htmlparser.jericho.Renderer$Processor: int blockVerticalMargin>;
        r2[0] = 1;
        if $i1 >= i0 goto label1;

        r0.<net.htmlparser.jericho.Renderer$Processor: int blockVerticalMargin> = i0;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    private void startNewLine(int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, i1, i2;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        byte $b4;
        java.lang.Appendable $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $b4 = 0;
        r2[1] = 1;
        goto label2;

     label1:
        $b4 = 1;
        r2[2] = 1;

     label2:
        i1 = i0 + $b4;
        i2 = 0;
        r2[3] = 1;

     label3:
        r2[4] = 1;
        if i2 >= i1 goto label4;

        $r3 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        $r4 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.String newLine>;
        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        i2 = i2 + 1;
        r2[5] = 1;
        goto label3;

     label4:
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine> = 1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = 0;
        r2[6] = 1;
        return;
    }

    private void newLine() throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Appendable $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        $r4 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.String newLine>;
        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine> = 1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = 0;
        r2[0] = 1;
        return;
    }

    private void appendTextInit() throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean skipInitialNewLines> = 0;
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendIndent()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    private void appendIndent() throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25;
        java.lang.Appendable $r3, $r5, $r7, $r9, $r12, $r15, $r17, $r18, $r20;
        boolean $z0;
        char[] $r10, $r11;
        char $c13;
        java.lang.String r14;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize>;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i0 <= 0 goto label2;

        $r3 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        i0 = i0 + -1;
        r2[2] = 1;
        goto label1;

     label2:
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean bullet>;
        r2[3] = 1;
        if $z0 == 0 goto label11;

        $i2 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel>;
        $i3 = $i2 - 1;
        $i4 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentSize>;
        i5 = $i3 * $i4;
        r2[4] = 1;

     label3:
        r2[5] = 1;
        if i5 <= 0 goto label4;

        $r5 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        i5 = i5 + -1;
        r2[6] = 1;
        goto label3;

     label4:
        $i6 = r0.<net.htmlparser.jericho.Renderer$Processor: int listBulletNumber>;
        r2[7] = 1;
        if $i6 != -1 goto label7;

        $i7 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentSize>;
        i8 = $i7 - 2;
        r2[8] = 1;

     label5:
        r2[9] = 1;
        if i8 <= 0 goto label6;

        $r7 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r7.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        i8 = i8 + -1;
        r2[10] = 1;
        goto label5;

     label6:
        $r9 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        $r10 = r0.<net.htmlparser.jericho.Renderer$Processor: char[] listBullets>;
        $i9 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel>;
        $i10 = $i9 - 1;
        $r11 = r0.<net.htmlparser.jericho.Renderer$Processor: char[] listBullets>;
        $i11 = lengthof $r11;
        $i12 = $i10 % $i11;
        $c13 = $r10[$i12];
        $r12 = interfaceinvoke $r9.<java.lang.Appendable: java.lang.Appendable append(char)>($c13);
        interfaceinvoke $r12.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        r2[11] = 1;
        goto label10;

     label7:
        $i14 = r0.<net.htmlparser.jericho.Renderer$Processor: int listBulletNumber>;
        r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);
        $i15 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentSize>;
        $i16 = virtualinvoke r14.<java.lang.String: int length()>();
        $i17 = $i15 - $i16;
        i1 = $i17 - 2;
        r2[12] = 1;

     label8:
        r2[13] = 1;
        if i1 <= 0 goto label9;

        $r15 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r15.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        i1 = i1 + -1;
        r2[14] = 1;
        goto label8;

     label9:
        $r17 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        $r18 = interfaceinvoke $r17.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r14);
        interfaceinvoke $r18.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(". ");
        r2[15] = 1;

     label10:
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean bullet> = 0;
        r2[16] = 1;
        goto label13;

     label11:
        $i18 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel>;
        $i19 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentSize>;
        i20 = $i18 * $i19;
        r2[17] = 1;

     label12:
        r2[18] = 1;
        if i20 <= 0 goto label13;

        $r20 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r20.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        i20 = i20 + -1;
        r2[19] = 1;
        goto label12;

     label13:
        $i21 = r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize>;
        $i22 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel>;
        $i23 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentSize>;
        $i24 = $i22 * $i23;
        $i25 = $i21 + $i24;
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = $i25;
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine> = 0;
        r2[20] = 1;
        return;
    }

    private net.htmlparser.jericho.Renderer$Processor append(char) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        char c0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Appendable $r3;
        int $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        c0 := @parameter0: char;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendTextInit()>();
        $r3 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(char)>(c0);
        $i1 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        $i2 = $i1 + 1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = $i2;
        r2[0] = 1;
        return r0;
    }

    private net.htmlparser.jericho.Renderer$Processor append(java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Appendable $r4;
        int $i0, $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[20];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendTextInit()>();
        $r4 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r1);
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = $i0 + $i1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = $i2;
        r3[0] = 1;
        return r0;
    }

    private void append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i4, $i5, $i6;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.Appendable $r4;
        char $c3;

        r0 := @this: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[21];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendTextInit()>();
        i2 = i0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i2 >= i1 goto label2;

        $r4 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        $c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i2);
        interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(char)>($c3);
        i2 = i2 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        $i4 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        $i5 = i1 - i0;
        $i6 = $i4 + $i5;
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = $i6;
        r3[3] = 1;
        return;
    }

    static void access$200(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        net.htmlparser.jericho.Element r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter1: net.htmlparser.jericho.Element;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[22];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendElementContent(net.htmlparser.jericho.Element)>(r1);
        r3[0] = 1;
        return;
    }

    static boolean access$300(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean decorateFontStyles>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$400(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace>;
        r2[0] = 1;
        return $z0;
    }

    static net.htmlparser.jericho.Renderer$Processor access$500(net.htmlparser.jericho.Renderer$Processor, char) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0, $r3;
        char c0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        c0 := @parameter1: char;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        $r3 = specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor append(char)>(c0);
        r2[0] = 1;
        return $r3;
    }

    static boolean access$402(net.htmlparser.jericho.Renderer$Processor, boolean)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[26];
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean lastCharWhiteSpace> = z0;
        r2[0] = 1;
        return z0;
    }

    static void access$600(net.htmlparser.jericho.Renderer$Processor, int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[27];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void blockBoundary(int)>(i0);
        r2[0] = 1;
        return;
    }

    static int access$700(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int blockIndentSize>;
        r2[0] = 1;
        return $i0;
    }

    static int access$812(net.htmlparser.jericho.Renderer$Processor, int)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[29];
        $i1 = r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize>;
        $i2 = $i1 + i0;
        r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize> = $i2;
        r2[0] = 1;
        return $i2;
    }

    static int access$820(net.htmlparser.jericho.Renderer$Processor, int)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        $i1 = r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize>;
        $i2 = $i1 - i0;
        r0.<net.htmlparser.jericho.Renderer$Processor: int indentSize> = $i2;
        r2[0] = 1;
        return $i2;
    }

    static boolean access$900(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[31];
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean includeHyperlinkURLs>;
        r2[0] = 1;
        return $z0;
    }

    static net.htmlparser.jericho.Renderer access$1000(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Renderer $r3;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        $r3 = r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer renderer>;
        r2[0] = 1;
        return $r3;
    }

    static int access$1100(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[33];
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int col>;
        r2[0] = 1;
        return $i0;
    }

    static int access$1200(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[34];
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int maxLineLength>;
        r2[0] = 1;
        return $i0;
    }

    static void access$1300(net.htmlparser.jericho.Renderer$Processor, int) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[35];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void startNewLine(int)>(i0);
        r2[0] = 1;
        return;
    }

    static net.htmlparser.jericho.Renderer$Processor access$1400(net.htmlparser.jericho.Renderer$Processor, java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0, $r4;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[36];
        $r4 = specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor append(java.lang.String)>(r1);
        r3[0] = 1;
        return $r4;
    }

    static boolean access$1500(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[37];
        $z0 = specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: boolean isBlockBoundary()>();
        r2[0] = 1;
        return $z0;
    }

    static boolean access$1600(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[38];
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean atStartOfLine>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$1700(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[39];
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean skipInitialNewLines>;
        r2[0] = 1;
        return $z0;
    }

    static void access$1800(net.htmlparser.jericho.Renderer$Processor) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[40];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void newLine()>();
        r2[0] = 1;
        return;
    }

    static void access$1900(net.htmlparser.jericho.Renderer$Processor) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[41];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendBlockVerticalMargin()>();
        r2[0] = 1;
        return;
    }

    static java.lang.Appendable access$2000(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Appendable $r3;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[42];
        $r3 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.Appendable appendable>;
        r2[0] = 1;
        return $r3;
    }

    static int access$1102(net.htmlparser.jericho.Renderer$Processor, int)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[43];
        r0.<net.htmlparser.jericho.Renderer$Processor: int col> = i0;
        r2[0] = 1;
        return i0;
    }

    static boolean access$2100(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[44];
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean includeAlternateText>;
        r2[0] = 1;
        return $z0;
    }

    static void access$2200(net.htmlparser.jericho.Renderer$Processor, java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[45];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendText(java.lang.String)>(r1);
        r3[0] = 1;
        return;
    }

    static int access$2300(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[46];
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int listBulletNumber>;
        r2[0] = 1;
        return $i0;
    }

    static int access$2302(net.htmlparser.jericho.Renderer$Processor, int)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[47];
        r0.<net.htmlparser.jericho.Renderer$Processor: int listBulletNumber> = i0;
        r2[0] = 1;
        return i0;
    }

    static int access$2408(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[48];
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel>;
        $i1 = $i0 + 1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel> = $i1;
        r2[0] = 1;
        return $i0;
    }

    static int access$2410(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[49];
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel>;
        $i1 = $i0 - 1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int listIndentLevel> = $i1;
        r2[0] = 1;
        return $i0;
    }

    static int access$2308(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[50];
        $i0 = r0.<net.htmlparser.jericho.Renderer$Processor: int listBulletNumber>;
        $i1 = $i0 + 1;
        r0.<net.htmlparser.jericho.Renderer$Processor: int listBulletNumber> = $i1;
        r2[0] = 1;
        return $i0;
    }

    static boolean access$2502(net.htmlparser.jericho.Renderer$Processor, boolean)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[51];
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean bullet> = z0;
        r2[0] = 1;
        return z0;
    }

    static void access$2600(net.htmlparser.jericho.Renderer$Processor) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[52];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$Processor: void appendIndent()>();
        r2[0] = 1;
        return;
    }

    static boolean access$1702(net.htmlparser.jericho.Renderer$Processor, boolean)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[53];
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean skipInitialNewLines> = z0;
        r2[0] = 1;
        return z0;
    }

    static boolean access$2700(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[54];
        $z0 = r0.<net.htmlparser.jericho.Renderer$Processor: boolean preformatted>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$2702(net.htmlparser.jericho.Renderer$Processor, boolean)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[55];
        r0.<net.htmlparser.jericho.Renderer$Processor: boolean preformatted> = z0;
        r2[0] = 1;
        return z0;
    }

    static java.lang.String access$2800(net.htmlparser.jericho.Renderer$Processor)
    {
        net.htmlparser.jericho.Renderer$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        $r1 = <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[56];
        $r3 = r0.<net.htmlparser.jericho.Renderer$Processor: java.lang.String tableCellSeparator>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        boolean $z0, $z1;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRi()>();
        r1 = $r0[57];
        $r2 = class "net/htmlparser/jericho/Renderer";
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();
        r1[0] = 1;
        if $z0 != 0 goto label0;

        $z1 = 1;
        r1[1] = 1;
        goto label1;

     label0:
        $z1 = 0;
        r1[2] = 1;

     label1:
        <net.htmlparser.jericho.Renderer$Processor: boolean $assertionsDisabled> = $z1;
        r1[3] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58;

        $r0 = newmultiarray (boolean)[58][];
        <net.htmlparser.jericho.Renderer$Processor: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[4];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[10];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[6];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[6];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[16];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[21];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[9];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[4];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[26];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[4];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[15];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[3];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[7];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[3];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[21];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[4];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[1];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[1];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[1];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[1];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[1];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[38] = $r39;
        $r40 = newarray (boolean)[1];
        $r0[39] = $r40;
        $r41 = newarray (boolean)[1];
        $r0[40] = $r41;
        $r42 = newarray (boolean)[1];
        $r0[41] = $r42;
        $r43 = newarray (boolean)[1];
        $r0[42] = $r43;
        $r44 = newarray (boolean)[1];
        $r0[43] = $r44;
        $r45 = newarray (boolean)[1];
        $r0[44] = $r45;
        $r46 = newarray (boolean)[1];
        $r0[45] = $r46;
        $r47 = newarray (boolean)[1];
        $r0[46] = $r47;
        $r48 = newarray (boolean)[1];
        $r0[47] = $r48;
        $r49 = newarray (boolean)[1];
        $r0[48] = $r49;
        $r50 = newarray (boolean)[1];
        $r0[49] = $r50;
        $r51 = newarray (boolean)[1];
        $r0[50] = $r51;
        $r52 = newarray (boolean)[1];
        $r0[51] = $r52;
        $r53 = newarray (boolean)[1];
        $r0[52] = $r53;
        $r54 = newarray (boolean)[1];
        $r0[53] = $r54;
        $r55 = newarray (boolean)[1];
        $r0[54] = $r55;
        $r56 = newarray (boolean)[1];
        $r0[55] = $r56;
        $r57 = newarray (boolean)[1];
        $r0[56] = $r57;
        $r58 = newarray (boolean)[4];
        $r0[57] = $r58;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$Processor", -886331300074335955L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$RemoveElementHandler extends java.lang.Object implements net.htmlparser.jericho.Renderer$ElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$RemoveElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$RemoveElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$RemoveElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.Renderer$RemoveElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.Renderer$RemoveElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$RemoveElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r4[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$RemoveElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$RemoveElementHandler: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.Renderer$RemoveElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$RemoveElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.Renderer$RemoveElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$RemoveElementHandler", 3934875461701785205L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$StandardBlockElementHandler extends net.htmlparser.jericho.Renderer$AbstractBlockElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0;
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1;
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_2_1;
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0_INDENT;
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1_INDENT;
    private static final boolean[][] $VRc;

    private void <init>(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$StandardBlockElementHandler r0;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: void <init>(int,int,boolean)>(i0, i1, z0);
        r2[0] = 1;
        return;
    }

    protected void processBlockContent(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$StandardBlockElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        r4[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newInstance(int, int, boolean)
    {
        net.htmlparser.jericho.Renderer$StandardBlockElementHandler r0, $r3;
        int i0, i1;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = new net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer$StandardBlockElementHandler: void <init>(int,int,boolean)>(i0, i1, z0);
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$StandardBlockElementHandler $r2, $r3, $r4, $r5, $r6;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: boolean[][] $VRi()>();
        r1 = $r0[3];
        $r2 = new net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$StandardBlockElementHandler: void <init>(int,int,boolean)>(0, 0, 0);
        <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0> = $r2;
        $r3 = new net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer$StandardBlockElementHandler: void <init>(int,int,boolean)>(1, 1, 0);
        <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1> = $r3;
        $r4 = new net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        specialinvoke $r4.<net.htmlparser.jericho.Renderer$StandardBlockElementHandler: void <init>(int,int,boolean)>(2, 1, 0);
        <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_2_1> = $r4;
        $r5 = new net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        specialinvoke $r5.<net.htmlparser.jericho.Renderer$StandardBlockElementHandler: void <init>(int,int,boolean)>(0, 0, 1);
        <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0_INDENT> = $r5;
        $r6 = new net.htmlparser.jericho.Renderer$StandardBlockElementHandler;
        specialinvoke $r6.<net.htmlparser.jericho.Renderer$StandardBlockElementHandler: void <init>(int,int,boolean)>(1, 1, 1);
        <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1_INDENT> = $r6;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$StandardBlockElementHandler", 8736539334731919015L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$StandardInlineElementHandler extends java.lang.Object implements net.htmlparser.jericho.Renderer$ElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$StandardInlineElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$StandardInlineElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$StandardInlineElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$StandardInlineElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$StandardInlineElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.Renderer$StandardInlineElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$StandardInlineElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$StandardInlineElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        r4[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$StandardInlineElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$StandardInlineElementHandler: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.Renderer$StandardInlineElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$StandardInlineElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$StandardInlineElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.Renderer$StandardInlineElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$StandardInlineElementHandler", 3934875463089729810L);
        return $r0;
    }
}
final class net.htmlparser.jericho.Renderer$TD_ElementHandler extends java.lang.Object implements net.htmlparser.jericho.Renderer$ElementHandler
{
    public static final net.htmlparser.jericho.Renderer$ElementHandler INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Renderer$TD_ElementHandler r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer$TD_ElementHandler;
        $r1 = <net.htmlparser.jericho.Renderer$TD_ElementHandler: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer$TD_ElementHandler: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public void process(net.htmlparser.jericho.Renderer$Processor, net.htmlparser.jericho.Element) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer$TD_ElementHandler r0;
        net.htmlparser.jericho.Renderer$Processor r1;
        net.htmlparser.jericho.Element r2;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.Renderer$TD_ElementHandler;
        r1 := @parameter0: net.htmlparser.jericho.Renderer$Processor;
        r2 := @parameter1: net.htmlparser.jericho.Element;
        $r3 = <net.htmlparser.jericho.Renderer$TD_ElementHandler: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Renderer$TD_ElementHandler: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $z0 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$1500(net.htmlparser.jericho.Renderer$Processor)>(r1);
        r4[0] = 1;
        if $z0 != 0 goto label1;

        $r5 = staticinvoke <net.htmlparser.jericho.Renderer$Processor: java.lang.String access$2800(net.htmlparser.jericho.Renderer$Processor)>(r1);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: net.htmlparser.jericho.Renderer$Processor access$1400(net.htmlparser.jericho.Renderer$Processor,java.lang.String)>(r1, $r5);
        r4[1] = 1;

     label1:
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: boolean access$402(net.htmlparser.jericho.Renderer$Processor,boolean)>(r1, 0);
        staticinvoke <net.htmlparser.jericho.Renderer$Processor: void access$200(net.htmlparser.jericho.Renderer$Processor,net.htmlparser.jericho.Element)>(r1, r2);
        r4[2] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$TD_ElementHandler $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer$TD_ElementHandler: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.Renderer$TD_ElementHandler;
        specialinvoke $r2.<net.htmlparser.jericho.Renderer$TD_ElementHandler: void <init>()>();
        <net.htmlparser.jericho.Renderer$TD_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.Renderer$TD_ElementHandler: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer$TD_ElementHandler", 7780186294904866651L);
        return $r0;
    }
}
public class net.htmlparser.jericho.Renderer extends java.lang.Object implements net.htmlparser.jericho.CharStreamSource
{
    private final net.htmlparser.jericho.Segment rootSegment;
    private int maxLineLength;
    private java.lang.String newLine;
    private boolean includeHyperlinkURLs;
    private boolean includeAlternateText;
    private boolean decorateFontStyles;
    private boolean convertNonBreakingSpaces;
    private int blockIndentSize;
    private int listIndentSize;
    private char[] listBullets;
    private boolean includeFirstElementTopMargin;
    private java.lang.String tableCellSeparator;
    private static final int UNORDERED_LIST;
    private static java.util.Map ELEMENT_HANDLERS;
    private static final boolean[][] $VRc;

    public void <init>(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Renderer r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        char[] $r4;

        r0 := @this: net.htmlparser.jericho.Renderer;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Renderer: int maxLineLength> = 76;
        r0.<net.htmlparser.jericho.Renderer: java.lang.String newLine> = "\r\n";
        r0.<net.htmlparser.jericho.Renderer: boolean includeHyperlinkURLs> = 1;
        r0.<net.htmlparser.jericho.Renderer: boolean includeAlternateText> = 1;
        r0.<net.htmlparser.jericho.Renderer: boolean decorateFontStyles> = 0;
        $z0 = <net.htmlparser.jericho.Config: boolean ConvertNonBreakingSpaces>;
        r0.<net.htmlparser.jericho.Renderer: boolean convertNonBreakingSpaces> = $z0;
        r0.<net.htmlparser.jericho.Renderer: int blockIndentSize> = 4;
        r0.<net.htmlparser.jericho.Renderer: int listIndentSize> = 6;
        $r4 = newarray (char)[4];
        $r4[0] = 42;
        $r4[1] = 111;
        $r4[2] = 43;
        $r4[3] = 35;
        r0.<net.htmlparser.jericho.Renderer: char[] listBullets> = $r4;
        r0.<net.htmlparser.jericho.Renderer: boolean includeFirstElementTopMargin> = 0;
        r0.<net.htmlparser.jericho.Renderer: java.lang.String tableCellSeparator> = " \t";
        r0.<net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Segment rootSegment> = r1;
        r3[0] = 1;
        return;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.Renderer;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        virtualinvoke r0.<net.htmlparser.jericho.Renderer: void appendTo(java.lang.Appendable)>(r1);
        virtualinvoke r1.<java.io.Writer: void flush()>();
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.Renderer r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Renderer$Processor $r4;
        net.htmlparser.jericho.Segment $r5;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r8;
        boolean $z0, $z1, $z2, $z3;
        char[] $r7;

        r0 := @this: net.htmlparser.jericho.Renderer;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = new net.htmlparser.jericho.Renderer$Processor;
        $r5 = r0.<net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Segment rootSegment>;
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: int getMaxLineLength()>();
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: java.lang.String getNewLine()>();
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: boolean getIncludeHyperlinkURLs()>();
        $z1 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: boolean getIncludeAlternateText()>();
        $z2 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: boolean getDecorateFontStyles()>();
        $z3 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: boolean getConvertNonBreakingSpaces()>();
        $i1 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: int getBlockIndentSize()>();
        $i2 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: int getListIndentSize()>();
        $r7 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: char[] getListBullets()>();
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.Renderer: java.lang.String getTableCellSeparator()>();
        specialinvoke $r4.<net.htmlparser.jericho.Renderer$Processor: void <init>(net.htmlparser.jericho.Renderer,net.htmlparser.jericho.Segment,int,java.lang.String,boolean,boolean,boolean,boolean,int,int,char[],java.lang.String)>(r0, $r5, $i0, $r6, $z0, $z1, $z2, $z3, $i1, $i2, $r7, $r8);
        virtualinvoke $r4.<net.htmlparser.jericho.Renderer$Processor: void appendTo(java.lang.Appendable)>(r1);
        r3[0] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;
        int $i0;
        long $l1;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Segment rootSegment>;
        $i0 = virtualinvoke $r3.<net.htmlparser.jericho.Segment: int length()>();
        $l1 = (long) $i0;
        r2[0] = 1;
        return $l1;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: java.lang.String toString(net.htmlparser.jericho.CharStreamSource)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Renderer setMaxLineLength(int)
    {
        net.htmlparser.jericho.Renderer r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r0.<net.htmlparser.jericho.Renderer: int maxLineLength> = i0;
        r2[0] = 1;
        return r0;
    }

    public int getMaxLineLength()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $i0 = r0.<net.htmlparser.jericho.Renderer: int maxLineLength>;
        r2[0] = 1;
        return $i0;
    }

    public net.htmlparser.jericho.Renderer setNewLine(java.lang.String)
    {
        net.htmlparser.jericho.Renderer r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.Renderer;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r0.<net.htmlparser.jericho.Renderer: java.lang.String newLine> = r1;
        r3[0] = 1;
        return r0;
    }

    public java.lang.String getNewLine()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r6, $r7;
        net.htmlparser.jericho.Segment $r4;
        net.htmlparser.jericho.Source $r5;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.Renderer: java.lang.String newLine>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = r0.<net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Segment rootSegment>;
        $r5 = $r4.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Source: java.lang.String getBestGuessNewLine()>();
        r0.<net.htmlparser.jericho.Renderer: java.lang.String newLine> = $r6;
        r2[1] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.Renderer: java.lang.String newLine>;
        r2[2] = 1;
        return $r7;
    }

    public net.htmlparser.jericho.Renderer setIncludeHyperlinkURLs(boolean)
    {
        net.htmlparser.jericho.Renderer r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r0.<net.htmlparser.jericho.Renderer: boolean includeHyperlinkURLs> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getIncludeHyperlinkURLs()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $z0 = r0.<net.htmlparser.jericho.Renderer: boolean includeHyperlinkURLs>;
        r2[0] = 1;
        return $z0;
    }

    public java.lang.String renderHyperlinkURL(net.htmlparser.jericho.StartTag)
    {
        net.htmlparser.jericho.Renderer r0;
        net.htmlparser.jericho.StartTag r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: net.htmlparser.jericho.Renderer;
        r1 := @parameter0: net.htmlparser.jericho.StartTag;
        $r2 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.StartTag: java.lang.String getAttributeValue(java.lang.String)>("href");
        r3[0] = 1;
        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("#");
        r3[1] = 1;
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("javascript:");
        r3[2] = 1;
        if $z1 == 0 goto label2;

     label1:
        r3[3] = 1;
        return null;

     label2:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[4] = 1;
        return $r9;
    }

    public net.htmlparser.jericho.Renderer setIncludeAlternateText(boolean)
    {
        net.htmlparser.jericho.Renderer r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        r0.<net.htmlparser.jericho.Renderer: boolean includeAlternateText> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getIncludeAlternateText()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $z0 = r0.<net.htmlparser.jericho.Renderer: boolean includeAlternateText>;
        r2[0] = 1;
        return $z0;
    }

    public java.lang.String renderAlternateText(net.htmlparser.jericho.StartTag)
    {
        net.htmlparser.jericho.Renderer r0;
        net.htmlparser.jericho.StartTag r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r5, $r10;
        int $i0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: net.htmlparser.jericho.Renderer;
        r1 := @parameter0: net.htmlparser.jericho.StartTag;
        $r2 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];
        $r5 = virtualinvoke r1.<net.htmlparser.jericho.StartTag: java.lang.String getName()>();
        r3[0] = 1;
        if $r5 != "area" goto label1;

        r3[1] = 1;
        return null;

     label1:
        r4 = virtualinvoke r1.<net.htmlparser.jericho.StartTag: java.lang.String getAttributeValue(java.lang.String)>("alt");
        r3[2] = 1;
        if r4 == null goto label2;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        r3[3] = 1;
        if $i0 != 0 goto label3;

     label2:
        r3[4] = 1;
        return null;

     label3:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[5] = 1;
        return $r10;
    }

    public net.htmlparser.jericho.Renderer setDecorateFontStyles(boolean)
    {
        net.htmlparser.jericho.Renderer r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        r0.<net.htmlparser.jericho.Renderer: boolean decorateFontStyles> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getDecorateFontStyles()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $z0 = r0.<net.htmlparser.jericho.Renderer: boolean decorateFontStyles>;
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.Renderer setConvertNonBreakingSpaces(boolean)
    {
        net.htmlparser.jericho.Renderer r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        r0.<net.htmlparser.jericho.Renderer: boolean convertNonBreakingSpaces> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getConvertNonBreakingSpaces()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $z0 = r0.<net.htmlparser.jericho.Renderer: boolean convertNonBreakingSpaces>;
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.Renderer setBlockIndentSize(int)
    {
        net.htmlparser.jericho.Renderer r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        r0.<net.htmlparser.jericho.Renderer: int blockIndentSize> = i0;
        r2[0] = 1;
        return r0;
    }

    public int getBlockIndentSize()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $i0 = r0.<net.htmlparser.jericho.Renderer: int blockIndentSize>;
        r2[0] = 1;
        return $i0;
    }

    public net.htmlparser.jericho.Renderer setListIndentSize(int)
    {
        net.htmlparser.jericho.Renderer r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        r0.<net.htmlparser.jericho.Renderer: int listIndentSize> = i0;
        r2[0] = 1;
        return r0;
    }

    public int getListIndentSize()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $i0 = r0.<net.htmlparser.jericho.Renderer: int listIndentSize>;
        r2[0] = 1;
        return $i0;
    }

    public net.htmlparser.jericho.Renderer setListBullets(char[])
    {
        net.htmlparser.jericho.Renderer r0;
        char[] r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: net.htmlparser.jericho.Renderer;
        r1 := @parameter0: char[];
        $r2 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        r3[0] = 1;
        if r1 == null goto label1;

        $i0 = lengthof r1;
        r3[1] = 1;
        if $i0 != 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listBullets argument must be an array of at least one character");
        r3[2] = 1;
        throw $r4;

     label2:
        r0.<net.htmlparser.jericho.Renderer: char[] listBullets> = r1;
        r3[3] = 1;
        return r0;
    }

    public char[] getListBullets()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        char[] $r3;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $r3 = r0.<net.htmlparser.jericho.Renderer: char[] listBullets>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Renderer setIncludeFirstElementTopMargin(boolean)
    {
        net.htmlparser.jericho.Renderer r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Renderer;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        r0.<net.htmlparser.jericho.Renderer: boolean includeFirstElementTopMargin> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getIncludeFirstElementTopMargin()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[26];
        $z0 = r0.<net.htmlparser.jericho.Renderer: boolean includeFirstElementTopMargin>;
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.Renderer setTableCellSeparator(java.lang.String)
    {
        net.htmlparser.jericho.Renderer r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.Renderer;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r3 = $r2[27];
        r0.<net.htmlparser.jericho.Renderer: java.lang.String tableCellSeparator> = r1;
        r3[0] = 1;
        return r0;
    }

    public java.lang.String getTableCellSeparator()
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $r3 = r0.<net.htmlparser.jericho.Renderer: java.lang.String tableCellSeparator>;
        r2[0] = 1;
        return $r3;
    }

    public static void setDefaultTopMargin(java.lang.String, int)
    {
        java.lang.String r0, $r3, r4;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Map $r5;
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler $r6, $r7;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[29];
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        r4 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.lang.String getConstantElementName(java.lang.String)>($r3);
        $r5 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r6 = staticinvoke <net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler getAbstractBlockElementHandler(java.lang.String)>(r4);
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newTopMargin(int)>(i0);
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r7);
        r2[0] = 1;
        return;
    }

    public static int getDefaultTopMargin(java.lang.String)
    {
        java.lang.String r0, $r3;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler $r4;
        int $i0;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = staticinvoke <net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler getAbstractBlockElementHandler(java.lang.String)>($r3);
        $i0 = virtualinvoke $r4.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int getTopMargin()>();
        r2[0] = 1;
        return $i0;
    }

    public static void setDefaultBottomMargin(java.lang.String, int)
    {
        java.lang.String r0, $r3, r4;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Map $r5;
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler $r6, $r7;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[31];
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        r4 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.lang.String getConstantElementName(java.lang.String)>($r3);
        $r5 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r6 = staticinvoke <net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler getAbstractBlockElementHandler(java.lang.String)>(r4);
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newBottomMargin(int)>(i0);
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r7);
        r2[0] = 1;
        return;
    }

    public static int getDefaultBottomMargin(java.lang.String)
    {
        java.lang.String r0, $r3;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler $r4;
        int $i0;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = staticinvoke <net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler getAbstractBlockElementHandler(java.lang.String)>($r3);
        $i0 = virtualinvoke $r4.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: int getBottomMargin()>();
        r2[0] = 1;
        return $i0;
    }

    public static void setDefaultIndent(java.lang.String, boolean)
    {
        java.lang.String r0, $r3, r4;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r5;
        java.util.Map $r6;
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler $r7, $r8;

        r0 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[33];
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        r4 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.lang.String getConstantElementName(java.lang.String)>($r3);
        r2[0] = 1;
        if r4 != "li" goto label1;

        $r5 = new java.lang.UnsupportedOperationException;
        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[1] = 1;
        throw $r5;

     label1:
        $r6 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r7 = staticinvoke <net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler getAbstractBlockElementHandler(java.lang.String)>(r4);
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler newIndent(boolean)>(z0);
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r8);
        r2[2] = 1;
        return;
    }

    public static boolean isDefaultIndent(java.lang.String)
    {
        java.lang.String r0, $r3, r4, $r6;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r5;
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler $r7;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[34];
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        r4 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.lang.String getConstantElementName(java.lang.String)>($r3);
        r2[0] = 1;
        if r4 != "li" goto label1;

        $r5 = new java.lang.UnsupportedOperationException;
        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[1] = 1;
        throw $r5;

     label1:
        $r6 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();
        $r7 = staticinvoke <net.htmlparser.jericho.Renderer: net.htmlparser.jericho.Renderer$AbstractBlockElementHandler getAbstractBlockElementHandler(java.lang.String)>($r6);
        $z0 = virtualinvoke $r7.<net.htmlparser.jericho.Renderer$AbstractBlockElementHandler: boolean isIndent()>();
        r2[2] = 1;
        return $z0;
    }

    private static net.htmlparser.jericho.Renderer$AbstractBlockElementHandler getAbstractBlockElementHandler(java.lang.String)
    {
        java.lang.String r0, $r10;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Renderer$ElementHandler r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.UnsupportedOperationException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        net.htmlparser.jericho.Renderer$AbstractBlockElementHandler $r11;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[35];
        $r4 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        r3 = (net.htmlparser.jericho.Renderer$ElementHandler) $r5;
        r2[0] = 1;
        if r3 == null goto label1;

        $z0 = r3 instanceof net.htmlparser.jericho.Renderer$AbstractBlockElementHandler;
        r2[1] = 1;
        if $z0 != 0 goto label2;

     label1:
        $r6 = new java.lang.UnsupportedOperationException;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set block properties on element ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);
        r2[2] = 1;
        throw $r6;

     label2:
        $r11 = (net.htmlparser.jericho.Renderer$AbstractBlockElementHandler) r3;
        r2[3] = 1;
        return $r11;
    }

    static boolean access$000(net.htmlparser.jericho.Renderer)
    {
        net.htmlparser.jericho.Renderer r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Renderer;
        $r1 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r2 = $r1[36];
        $z0 = r0.<net.htmlparser.jericho.Renderer: boolean includeFirstElementTopMargin>;
        r2[0] = 1;
        return $z0;
    }

    static java.util.Map access$100()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.Map $r2;

        $r0 = <net.htmlparser.jericho.Renderer: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();

     label0:
        r1 = $r0[37];
        $r2 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        r1[0] = 1;
        return $r2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Renderer$ElementHandler $r2, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94, $r97, $r100, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r124, $r127, $r130, $r133, $r136, $r139, $r142;
        java.util.HashMap $r3;
        java.util.Map $r4, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r120, $r123, $r126, $r129, $r132, $r135, $r138, $r141;

        $r0 = staticinvoke <net.htmlparser.jericho.Renderer: boolean[][] $VRi()>();
        r1 = $r0[38];
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS> = $r3;
        $r4 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r2 = <net.htmlparser.jericho.Renderer$A_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", $r2);
        $r6 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r7 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0>;
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("address", $r7);
        $r9 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r10 = <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("applet", $r10);
        $r12 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r13 = <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_B>;
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", $r13);
        $r15 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r16 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1_INDENT>;
        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("blockquote", $r16);
        $r18 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r19 = <net.htmlparser.jericho.Renderer$BR_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("br", $r19);
        $r21 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r22 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("button", $r22);
        $r24 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r25 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0>;
        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("caption", $r25);
        $r27 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r28 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1>;
        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("center", $r28);
        $r30 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r31 = <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_CODE>;
        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("code", $r31);
        $r33 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r34 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0_INDENT>;
        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dd", $r34);
        $r36 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r37 = <net.htmlparser.jericho.Renderer$ListElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_UL>;
        interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dir", $r37);
        $r39 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r40 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0>;
        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("div", $r40);
        $r42 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r43 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0>;
        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dt", $r43);
        $r45 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r46 = <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_I>;
        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("em", $r46);
        $r48 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r49 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1>;
        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fieldset", $r49);
        $r51 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r52 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1>;
        interfaceinvoke $r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("form", $r52);
        $r54 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r55 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_2_1>;
        interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("h1", $r55);
        $r57 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r58 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_2_1>;
        interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("h2", $r58);
        $r60 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r61 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_2_1>;
        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("h3", $r61);
        $r63 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r64 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_2_1>;
        interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("h4", $r64);
        $r66 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r67 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_2_1>;
        interfaceinvoke $r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("h5", $r67);
        $r69 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r70 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_2_1>;
        interfaceinvoke $r69.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("h6", $r70);
        $r72 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r73 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("head", $r73);
        $r75 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r76 = <net.htmlparser.jericho.Renderer$HR_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r75.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hr", $r76);
        $r78 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r79 = <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_I>;
        interfaceinvoke $r78.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("i", $r79);
        $r81 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r82 = <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r81.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("img", $r82);
        $r84 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r85 = <net.htmlparser.jericho.Renderer$AlternateTextElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r84.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("input", $r85);
        $r87 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r88 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0>;
        interfaceinvoke $r87.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("legend", $r88);
        $r90 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r91 = <net.htmlparser.jericho.Renderer$LI_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r90.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("li", $r91);
        $r93 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r94 = <net.htmlparser.jericho.Renderer$ListElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_UL>;
        interfaceinvoke $r93.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu", $r94);
        $r96 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r97 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r96.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("map", $r97);
        $r99 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r100 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r99.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noframes", $r100);
        $r102 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r103 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r102.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noscript", $r103);
        $r105 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r106 = <net.htmlparser.jericho.Renderer$ListElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_OL>;
        interfaceinvoke $r105.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ol", $r106);
        $r108 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r109 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_1_1>;
        interfaceinvoke $r108.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("p", $r109);
        $r111 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r112 = <net.htmlparser.jericho.Renderer$PRE_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r111.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pre", $r112);
        $r114 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r115 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r114.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script", $r115);
        $r117 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r118 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r117.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("select", $r118);
        $r120 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r121 = <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_B>;
        interfaceinvoke $r120.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("strong", $r121);
        $r123 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r124 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r123.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("style", $r124);
        $r126 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r127 = <net.htmlparser.jericho.Renderer$RemoveElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r126.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("textarea", $r127);
        $r129 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r130 = <net.htmlparser.jericho.Renderer$TD_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r129.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("td", $r130);
        $r132 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r133 = <net.htmlparser.jericho.Renderer$TD_ElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE>;
        interfaceinvoke $r132.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("th", $r133);
        $r135 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r136 = <net.htmlparser.jericho.Renderer$StandardBlockElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_0_0>;
        interfaceinvoke $r135.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tr", $r136);
        $r138 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r139 = <net.htmlparser.jericho.Renderer$FontStyleElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_U>;
        interfaceinvoke $r138.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("u", $r139);
        $r141 = <net.htmlparser.jericho.Renderer: java.util.Map ELEMENT_HANDLERS>;
        $r142 = <net.htmlparser.jericho.Renderer$ListElementHandler: net.htmlparser.jericho.Renderer$ElementHandler INSTANCE_UL>;
        interfaceinvoke $r141.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ul", $r142);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39;

        $r0 = newmultiarray (boolean)[39][];
        <net.htmlparser.jericho.Renderer: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[3];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[5];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[6];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[4];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[3];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[3];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[4];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[1];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[1];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[38] = $r39;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Renderer", 2374443074365165066L);
        return $r0;
    }
}
final enum class net.htmlparser.jericho.RendererCSS$Side extends java.lang.Enum
{
    public static final enum net.htmlparser.jericho.RendererCSS$Side top;
    public static final enum net.htmlparser.jericho.RendererCSS$Side right;
    public static final enum net.htmlparser.jericho.RendererCSS$Side bottom;
    public static final enum net.htmlparser.jericho.RendererCSS$Side left;
    private static final net.htmlparser.jericho.RendererCSS$Side[] $VALUES;
    private static final boolean[][] $VRc;

    public static net.htmlparser.jericho.RendererCSS$Side[] values()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.RendererCSS$Side[] $r2, $r4;
        java.lang.Object $r3;

        $r0 = <net.htmlparser.jericho.RendererCSS$Side: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.RendererCSS$Side: boolean[][] $VRi()>();

     label0:
        r1 = $r0[0];
        $r2 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side[] $VALUES>;
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();
        $r4 = (net.htmlparser.jericho.RendererCSS$Side[]) $r3;
        r1[0] = 1;
        return $r4;
    }

    public static net.htmlparser.jericho.RendererCSS$Side valueOf(java.lang.String)
    {
        java.lang.String r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Enum $r3;
        net.htmlparser.jericho.RendererCSS$Side $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.RendererCSS$Side: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RendererCSS$Side: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "net/htmlparser/jericho/RendererCSS$Side", r0);
        $r4 = (net.htmlparser.jericho.RendererCSS$Side) $r3;
        r2[0] = 1;
        return $r4;
    }

    private void <init>(java.lang.String, int)
    {
        net.htmlparser.jericho.RendererCSS$Side r0;
        java.lang.String r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.RendererCSS$Side;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.RendererCSS$Side: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.RendererCSS$Side: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        r3[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.RendererCSS$Side $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        net.htmlparser.jericho.RendererCSS$Side[] $r6;

        $r0 = staticinvoke <net.htmlparser.jericho.RendererCSS$Side: boolean[][] $VRi()>();
        r1 = $r0[3];
        $r2 = new net.htmlparser.jericho.RendererCSS$Side;
        specialinvoke $r2.<net.htmlparser.jericho.RendererCSS$Side: void <init>(java.lang.String,int)>("top", 0);
        <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side top> = $r2;
        $r3 = new net.htmlparser.jericho.RendererCSS$Side;
        specialinvoke $r3.<net.htmlparser.jericho.RendererCSS$Side: void <init>(java.lang.String,int)>("right", 1);
        <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side right> = $r3;
        $r4 = new net.htmlparser.jericho.RendererCSS$Side;
        specialinvoke $r4.<net.htmlparser.jericho.RendererCSS$Side: void <init>(java.lang.String,int)>("bottom", 2);
        <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side bottom> = $r4;
        $r5 = new net.htmlparser.jericho.RendererCSS$Side;
        specialinvoke $r5.<net.htmlparser.jericho.RendererCSS$Side: void <init>(java.lang.String,int)>("left", 3);
        <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side left> = $r5;
        $r6 = newarray (net.htmlparser.jericho.RendererCSS$Side)[4];
        $r7 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side top>;
        $r6[0] = $r7;
        $r8 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side right>;
        $r6[1] = $r8;
        $r9 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side bottom>;
        $r6[2] = $r9;
        $r10 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side left>;
        $r6[3] = $r10;
        <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side[] $VALUES> = $r6;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.RendererCSS$Side: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/RendererCSS$Side", 8394644511464601116L);
        return $r0;
    }
}
final class net.htmlparser.jericho.RendererCSS extends java.lang.Object
{
    private static java.util.Map UNIT_FACTOR;
    private static final boolean[][] $VRc;

    void <init>()
    {
        net.htmlparser.jericho.RendererCSS r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.RendererCSS;
        $r1 = <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static int getTopMargin(net.htmlparser.jericho.Element, int)
    {
        net.htmlparser.jericho.Element r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        net.htmlparser.jericho.RendererCSS$Side $r4;

        r0 := @parameter0: net.htmlparser.jericho.Element;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <net.htmlparser.jericho.RendererCSS: java.lang.String get(net.htmlparser.jericho.Element)>(r0);
        $r4 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side top>;
        $i1 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getMargin(java.lang.String,net.htmlparser.jericho.RendererCSS$Side,int)>($r3, $r4, i0);
        r2[0] = 1;
        return $i1;
    }

    public static int getBottomMargin(net.htmlparser.jericho.Element, int)
    {
        net.htmlparser.jericho.Element r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        net.htmlparser.jericho.RendererCSS$Side $r4;

        r0 := @parameter0: net.htmlparser.jericho.Element;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = staticinvoke <net.htmlparser.jericho.RendererCSS: java.lang.String get(net.htmlparser.jericho.Element)>(r0);
        $r4 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side bottom>;
        $i1 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getMargin(java.lang.String,net.htmlparser.jericho.RendererCSS$Side,int)>($r3, $r4, i0);
        r2[0] = 1;
        return $i1;
    }

    public static int getLeftMargin(net.htmlparser.jericho.Element, int)
    {
        net.htmlparser.jericho.Element r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        net.htmlparser.jericho.RendererCSS$Side $r4;

        r0 := @parameter0: net.htmlparser.jericho.Element;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = staticinvoke <net.htmlparser.jericho.RendererCSS: java.lang.String get(net.htmlparser.jericho.Element)>(r0);
        $r4 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side left>;
        $i1 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getMargin(java.lang.String,net.htmlparser.jericho.RendererCSS$Side,int)>($r3, $r4, i0);
        r2[0] = 1;
        return $i1;
    }

    public static int getRightMargin(net.htmlparser.jericho.Element, int)
    {
        net.htmlparser.jericho.Element r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        net.htmlparser.jericho.RendererCSS$Side $r4;

        r0 := @parameter0: net.htmlparser.jericho.Element;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = staticinvoke <net.htmlparser.jericho.RendererCSS: java.lang.String get(net.htmlparser.jericho.Element)>(r0);
        $r4 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side right>;
        $i1 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getMargin(java.lang.String,net.htmlparser.jericho.RendererCSS$Side,int)>($r3, $r4, i0);
        r2[0] = 1;
        return $i1;
    }

    private static java.lang.String get(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.Element r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @parameter0: net.htmlparser.jericho.Element;
        $r1 = <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Element: java.lang.String getAttributeValue(java.lang.String)>("style");
        r2[0] = 1;
        return $r3;
    }

    private static int getMargin(java.lang.String, net.htmlparser.jericho.RendererCSS$Side, int)
    {
        java.lang.String r0, $r5, $r6, $r7;
        net.htmlparser.jericho.RendererCSS$Side r1;
        int i0, i1, i2, $i3, i4, $i5, $i6;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String[] r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: net.htmlparser.jericho.RendererCSS$Side;
        i0 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if r0 != null goto label1;

        r3[1] = 1;
        return i0;

     label1:
        r4 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");
        i1 = 0;
        r3[2] = 1;

     label2:
        $i3 = lengthof r4;
        r3[3] = 1;
        if i1 >= $i3 goto label3;

        $r5 = r4[i1];
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();
        r4[i1] = $r7;
        i1 = i1 + 1;
        r3[4] = 1;
        goto label2;

     label3:
        i4 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getStyleValue(java.lang.String[],net.htmlparser.jericho.RendererCSS$Side,java.lang.String)>(r4, r1, "margin");
        i2 = staticinvoke <net.htmlparser.jericho.RendererCSS: int getStyleValue(java.lang.String[],net.htmlparser.jericho.RendererCSS$Side,java.lang.String)>(r4, r1, "padding");
        r3[5] = 1;
        if i4 != -1 goto label6;

        r3[6] = 1;
        if i2 == -1 goto label4;

        $i5 = i2;
        r3[7] = 1;
        goto label5;

     label4:
        $i5 = i0;
        r3[8] = 1;

     label5:
        r3[9] = 1;
        return $i5;

     label6:
        r3[10] = 1;
        if i2 == -1 goto label7;

        $i6 = i4 + i2;
        r3[11] = 1;
        goto label8;

     label7:
        $i6 = i4;
        r3[12] = 1;

     label8:
        r3[13] = 1;
        return $i6;
    }

    private static int getStyleValue(java.lang.String[], net.htmlparser.jericho.RendererCSS$Side, java.lang.String)
    {
        java.lang.String[] r0, r7;
        net.htmlparser.jericho.RendererCSS$Side r1, $r12;
        java.lang.String r2, r5, r6, $r9, $r10, $r11, $r13, $r15, $r18;
        boolean[][] $r3;
        boolean[] r4;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.NumberFormatException r8, $r19;
        char $c13, $c21, $c27;
        java.util.Map $r14;
        java.lang.Object $r16;
        java.lang.Float r17;
        float f0, $f1, $f2;

        r0 := @parameter0: java.lang.String[];
        r1 := @parameter1: net.htmlparser.jericho.RendererCSS$Side;
        r2 := @parameter2: java.lang.String;
        $r3 = <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();

     label0:
        r4 = $r3[7];
        i0 = -1;
        i1 = 0;
        r4[0] = 1;

     label1:
        $i6 = lengthof r0;
        r4[1] = 1;
        if i1 >= $i6 goto label23;

        r5 = r0[i1];
        $i7 = virtualinvoke r5.<java.lang.String: int length()>();
        $i8 = virtualinvoke r2.<java.lang.String: int length()>();
        $i9 = $i8 + 1;
        r4[2] = 1;
        if $i7 <= $i9 goto label22;

        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(r2);
        r4[3] = 1;
        if $z1 != 0 goto label2;

        r4[4] = 1;
        goto label22;

     label2:
        i2 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(58);
        r4[5] = 1;
        if i2 != -1 goto label3;

        r4[6] = 1;
        goto label22;

     label3:
        $i10 = i2 + 1;
        $r9 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i10);
        r6 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();
        $i11 = virtualinvoke r6.<java.lang.String: int length()>();
        r4[7] = 1;
        if $i11 != 0 goto label4;

        r4[8] = 1;
        goto label22;

     label4:
        z0 = 0;
        i3 = virtualinvoke r2.<java.lang.String: int length()>();
        $i12 = virtualinvoke r2.<java.lang.String: int length()>();
        $c13 = virtualinvoke r5.<java.lang.String: char charAt(int)>($i12);
        r4[9] = 1;
        if $c13 != 45 goto label5;

        $r10 = virtualinvoke r1.<net.htmlparser.jericho.RendererCSS$Side: java.lang.String name()>();
        $i14 = virtualinvoke r2.<java.lang.String: int length()>();
        $i15 = $i14 + 1;
        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String,int)>($r10, $i15);
        r4[10] = 1;
        if $z2 == 0 goto label5;

        z0 = 1;
        $i16 = virtualinvoke r2.<java.lang.String: int length()>();
        $i17 = $i16 + 1;
        $r11 = virtualinvoke r1.<net.htmlparser.jericho.RendererCSS$Side: java.lang.String name()>();
        $i18 = virtualinvoke $r11.<java.lang.String: int length()>();
        i3 = $i17 + $i18;
        $i19 = virtualinvoke r5.<java.lang.String: int length()>();
        $i20 = i3 + 1;
        r4[11] = 1;
        if $i19 > $i20 goto label5;

        r4[12] = 1;
        goto label22;

     label5:
        r4[13] = 1;
        if i3 == i2 goto label6;

        $c21 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i3);
        $z3 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c21);
        r4[14] = 1;
        if $z3 != 0 goto label6;

        r4[15] = 1;
        goto label22;

     label6:
        r4[16] = 1;
        if z0 != 0 goto label11;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");
        i4 = virtualinvoke r1.<net.htmlparser.jericho.RendererCSS$Side: int ordinal()>();
        i5 = lengthof r7;
        r4[17] = 1;
        if i5 != 0 goto label7;

        r4[18] = 1;
        goto label22;

     label7:
        r4[19] = 1;
        if i5 != 1 goto label8;

        i4 = 0;
        r4[20] = 1;
        goto label10;

     label8:
        r4[21] = 1;
        if i5 != 2 goto label9;

        $i22 = virtualinvoke r1.<net.htmlparser.jericho.RendererCSS$Side: int ordinal()>();
        i4 = $i22 % 2;
        r4[22] = 1;
        goto label10;

     label9:
        r4[23] = 1;
        if i5 != 3 goto label10;

        $r12 = <net.htmlparser.jericho.RendererCSS$Side: net.htmlparser.jericho.RendererCSS$Side left>;
        r4[24] = 1;
        if r1 != $r12 goto label10;

        i4 = 1;
        r4[25] = 1;

     label10:
        $r13 = r7[i4];
        r6 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();
        r4[26] = 1;

     label11:
        i23 = 0;
        $i24 = virtualinvoke r6.<java.lang.String: int length()>();
        r4[27] = 1;
        if $i24 != 0 goto label12;

        r4[28] = 1;
        goto label22;

     label12:
        $i25 = virtualinvoke r6.<java.lang.String: int length()>();
        $i26 = $i25 - 1;
        $c27 = virtualinvoke r6.<java.lang.String: char charAt(int)>($i26);
        r4[29] = 1;
        if $c27 != 37 goto label13;

        r4[30] = 1;
        goto label22;

     label13:
        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("auto");
        r4[31] = 1;
        if $z4 != 0 goto label22;

        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("inherit");
        r4[32] = 1;
        if $z5 == 0 goto label14;

        r4[33] = 1;
        goto label22;

     label14:
        $i28 = virtualinvoke r6.<java.lang.String: int length()>();
        r4[34] = 1;
        if $i28 >= 3 goto label15;

        $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("0");
        r4[35] = 1;
        if $z6 != 0 goto label20;

        r4[36] = 1;
        goto label22;

     label15:
        $r14 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $i29 = virtualinvoke r6.<java.lang.String: int length()>();
        $i30 = $i29 - 2;
        $r15 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i30);
        $r16 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);
        r17 = (java.lang.Float) $r16;
        r4[37] = 1;
        if r17 != null goto label16;

        r4[38] = 1;
        goto label22;

     label16:
        $i31 = virtualinvoke r6.<java.lang.String: int length()>();
        $i32 = $i31 - 2;
        $r18 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i32);
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r18);
        r4[39] = 1;

     label17:
        goto label19;

     label18:
        $r19 := @caughtexception;
        r8 = $r19;
        r4[40] = 1;
        goto label22;

     label19:
        $f1 = virtualinvoke r17.<java.lang.Float: float floatValue()>();
        $f2 = f0 * $f1;
        i23 = staticinvoke <java.lang.Math: int round(float)>($f2);
        r4[41] = 1;

     label20:
        r4[42] = 1;
        if z0 == 0 goto label21;

        r4[43] = 1;
        return i23;

     label21:
        i0 = i23;
        r4[44] = 1;

     label22:
        i1 = i1 + 1;
        r4[45] = 1;
        goto label1;

     label23:
        r4[46] = 1;
        return i0;

        catch java.lang.NumberFormatException from label16 to label17 with label18;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.HashMap $r2;
        java.util.Map $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24;
        java.lang.Float $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25;

        $r0 = staticinvoke <net.htmlparser.jericho.RendererCSS: boolean[][] $VRi()>();
        r1 = $r0[8];
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR> = $r2;
        $r3 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("em", $r4);
        $r6 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ex", $r7);
        $r9 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.125F);
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("px", $r10);
        $r12 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(8.0F);
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("in", $r13);
        $r15 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(3.0F);
        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cm", $r16);
        $r18 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.3F);
        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mm", $r19);
        $r21 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.1F);
        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pt", $r22);
        $r24 = <net.htmlparser.jericho.RendererCSS: java.util.Map UNIT_FACTOR>;
        $r25 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.2F);
        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pc", $r25);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newmultiarray (boolean)[9][];
        <net.htmlparser.jericho.RendererCSS: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[14];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[47];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/RendererCSS", 7358514099275627710L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.RowColumnVector extends java.lang.Object
{
    private final int row;
    private final int column;
    private final int pos;
    private static final net.htmlparser.jericho.RowColumnVector FIRST;
    private static final net.htmlparser.jericho.RowColumnVector[] STREAMED;
    private static final boolean[][] $VRc;

    private void <init>(int, int, int)
    {
        net.htmlparser.jericho.RowColumnVector r0;
        int i0, i1, i2;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.RowColumnVector;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.RowColumnVector: int row> = i0;
        r0.<net.htmlparser.jericho.RowColumnVector: int column> = i1;
        r0.<net.htmlparser.jericho.RowColumnVector: int pos> = i2;
        r2[0] = 1;
        return;
    }

    private void <init>(int)
    {
        net.htmlparser.jericho.RowColumnVector r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.RowColumnVector;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.RowColumnVector: void <init>(int,int,int)>(-1, -1, i0);
        r2[0] = 1;
        return;
    }

    public int getRow()
    {
        net.htmlparser.jericho.RowColumnVector r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.RowColumnVector;
        $r1 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<net.htmlparser.jericho.RowColumnVector: int row>;
        r2[0] = 1;
        return $i0;
    }

    public int getColumn()
    {
        net.htmlparser.jericho.RowColumnVector r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.RowColumnVector;
        $r1 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<net.htmlparser.jericho.RowColumnVector: int column>;
        r2[0] = 1;
        return $i0;
    }

    public int getPos()
    {
        net.htmlparser.jericho.RowColumnVector r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.RowColumnVector;
        $r1 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $i0 = r0.<net.htmlparser.jericho.RowColumnVector: int pos>;
        r2[0] = 1;
        return $i0;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.RowColumnVector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.RowColumnVector;
        $r1 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(20);
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r5;
    }

    java.lang.StringBuilder appendTo(java.lang.StringBuilder)
    {
        net.htmlparser.jericho.RowColumnVector r0;
        java.lang.StringBuilder r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: net.htmlparser.jericho.RowColumnVector;
        r1 := @parameter0: java.lang.StringBuilder;
        $r2 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $i0 = r0.<net.htmlparser.jericho.RowColumnVector: int row>;
        r3[0] = 1;
        if $i0 == -1 goto label1;

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(r");
        $i1 = r0.<net.htmlparser.jericho.RowColumnVector: int row>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",c");
        $i2 = r0.<net.htmlparser.jericho.RowColumnVector: int column>;
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",p");
        $i3 = r0.<net.htmlparser.jericho.RowColumnVector: int pos>;
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        r3[1] = 1;
        return $r10;

     label1:
        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(p");
        $i4 = r0.<net.htmlparser.jericho.RowColumnVector: int pos>;
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        r3[2] = 1;
        return $r13;
    }

    static net.htmlparser.jericho.RowColumnVector[] getCacheArray(net.htmlparser.jericho.Source)
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, i2, $i4, $i5, $i7, $i8;
        java.util.ArrayList r3, $r5;
        char c3, $c6;
        boolean $z0;
        net.htmlparser.jericho.RowColumnVector[] $r4, $r8, $r10;
        net.htmlparser.jericho.RowColumnVector $r6, $r7;
        java.lang.Object[] $r9;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.Source: boolean isStreamed()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = <net.htmlparser.jericho.RowColumnVector: net.htmlparser.jericho.RowColumnVector[] STREAMED>;
        r2[1] = 1;
        return $r4;

     label1:
        $i4 = r0.<net.htmlparser.jericho.Source: int end>;
        i0 = $i4 - 1;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r3 = $r5;
        i1 = 0;
        $r6 = <net.htmlparser.jericho.RowColumnVector: net.htmlparser.jericho.RowColumnVector FIRST>;
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);
        i2 = 1;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        if i1 > i0 goto label5;

        c3 = virtualinvoke r0.<net.htmlparser.jericho.Source: char charAt(int)>(i1);
        r2[4] = 1;
        if c3 == 10 goto label3;

        r2[5] = 1;
        if c3 != 13 goto label4;

        r2[6] = 1;
        if i1 == i0 goto label3;

        $i5 = i1 + 1;
        $c6 = virtualinvoke r0.<net.htmlparser.jericho.Source: char charAt(int)>($i5);
        r2[7] = 1;
        if $c6 == 10 goto label4;

     label3:
        $r7 = new net.htmlparser.jericho.RowColumnVector;
        i2 = i2 + 1;
        $i7 = i1 + 1;
        specialinvoke $r7.<net.htmlparser.jericho.RowColumnVector: void <init>(int,int,int)>(i2, 1, $i7);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);
        r2[8] = 1;

     label4:
        i1 = i1 + 1;
        r2[9] = 1;
        goto label2;

     label5:
        $i8 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        $r8 = newarray (net.htmlparser.jericho.RowColumnVector)[$i8];
        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);
        $r10 = (net.htmlparser.jericho.RowColumnVector[]) $r9;
        r2[10] = 1;
        return $r10;
    }

    static net.htmlparser.jericho.RowColumnVector get(net.htmlparser.jericho.RowColumnVector[], int)
    {
        net.htmlparser.jericho.RowColumnVector[] r0, $r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.RowColumnVector r3, $r5, $r6;

        r0 := @parameter0: net.htmlparser.jericho.RowColumnVector[];
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r4 = <net.htmlparser.jericho.RowColumnVector: net.htmlparser.jericho.RowColumnVector[] STREAMED>;
        r2[0] = 1;
        if r0 != $r4 goto label1;

        $r5 = new net.htmlparser.jericho.RowColumnVector;
        specialinvoke $r5.<net.htmlparser.jericho.RowColumnVector: void <init>(int)>(i0);
        r2[1] = 1;
        return $r5;

     label1:
        i1 = 0;
        $i4 = lengthof r0;
        i2 = $i4 - 1;
        r2[2] = 1;

     label2:
        $i5 = i1 + i2;
        i3 = $i5 >> 1;
        r3 = r0[i3];
        $i6 = r3.<net.htmlparser.jericho.RowColumnVector: int pos>;
        r2[3] = 1;
        if $i6 >= i0 goto label4;

        r2[4] = 1;
        if i3 != i2 goto label3;

        $r6 = new net.htmlparser.jericho.RowColumnVector;
        $i7 = r3.<net.htmlparser.jericho.RowColumnVector: int row>;
        $i8 = r3.<net.htmlparser.jericho.RowColumnVector: int pos>;
        $i9 = i0 - $i8;
        $i10 = $i9 + 1;
        specialinvoke $r6.<net.htmlparser.jericho.RowColumnVector: void <init>(int,int,int)>($i7, $i10, i0);
        r2[5] = 1;
        return $r6;

     label3:
        i1 = i3 + 1;
        r2[6] = 1;
        goto label6;

     label4:
        $i11 = r3.<net.htmlparser.jericho.RowColumnVector: int pos>;
        r2[7] = 1;
        if $i11 <= i0 goto label5;

        i2 = i3 - 1;
        r2[8] = 1;
        goto label6;

     label5:
        r2[9] = 1;
        return r3;

     label6:
        r2[10] = 1;
        goto label2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.RowColumnVector $r2;
        net.htmlparser.jericho.RowColumnVector[] $r3;

        $r0 = staticinvoke <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRi()>();
        r1 = $r0[9];
        $r2 = new net.htmlparser.jericho.RowColumnVector;
        specialinvoke $r2.<net.htmlparser.jericho.RowColumnVector: void <init>(int,int,int)>(1, 1, 0);
        <net.htmlparser.jericho.RowColumnVector: net.htmlparser.jericho.RowColumnVector FIRST> = $r2;
        $r3 = newarray (net.htmlparser.jericho.RowColumnVector)[0];
        <net.htmlparser.jericho.RowColumnVector: net.htmlparser.jericho.RowColumnVector[] STREAMED> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newmultiarray (boolean)[10][];
        <net.htmlparser.jericho.RowColumnVector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[11];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[11];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/RowColumnVector", -2218917274714431521L);
        return $r0;
    }
}
public class net.htmlparser.jericho.Segment extends java.lang.Object implements java.lang.Comparable, java.lang.CharSequence
{
    final int begin;
    final int end;
    final net.htmlparser.jericho.Source source;
    private static final char[] WHITESPACE;
    private static final boolean[][] $VRc;

    public void <init>(net.htmlparser.jericho.Source, int, int)
    {
        net.htmlparser.jericho.Segment r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r3[0] = 1;
        if i0 == -1 goto label1;

        r3[1] = 1;
        if i1 == -1 goto label1;

        r3[2] = 1;
        if i0 <= i1 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();
        r3[3] = 1;
        throw $r4;

     label2:
        r0.<net.htmlparser.jericho.Segment: int begin> = i0;
        r0.<net.htmlparser.jericho.Segment: int end> = i1;
        r3[4] = 1;
        if r1 != null goto label3;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("source argument must not be null");
        r3[5] = 1;
        throw $r5;

     label3:
        r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source> = r1;
        r3[6] = 1;
        return;
    }

    void <init>(int)
    {
        net.htmlparser.jericho.Segment r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;

        r0 := @this: net.htmlparser.jericho.Segment;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Segment: int begin> = 0;
        r0.<net.htmlparser.jericho.Segment: int end> = i0;
        $r3 = (net.htmlparser.jericho.Source) r0;
        r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source> = $r3;
        r2[0] = 1;
        return;
    }

    void <init>()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(int,int)>(0, 0);
        r2[0] = 1;
        return;
    }

    void <init>(int, int)
    {
        net.htmlparser.jericho.Segment r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Segment;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.Segment: int begin> = i0;
        r0.<net.htmlparser.jericho.Segment: int end> = i1;
        r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source> = null;
        r2[0] = 1;
        return;
    }

    public final net.htmlparser.jericho.Source getSource()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3, $r5;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $z0 = virtualinvoke $r3.<net.htmlparser.jericho.Source: boolean isStreamed()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Source object is not available when using StreamedSource");
        r2[1] = 1;
        throw $r4;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r2[2] = 1;
        return $r5;
    }

    public final int getBegin()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        r2[0] = 1;
        return $i0;
    }

    public final int getEnd()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $i0 = r0.<net.htmlparser.jericho.Segment: int end>;
        r2[0] = 1;
        return $i0;
    }

    public final boolean equals(java.lang.Object)
    {
        net.htmlparser.jericho.Segment r0, r4;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        net.htmlparser.jericho.Source $r5, $r6;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r3[0] = 1;
        if r0 != r1 goto label1;

        r3[1] = 1;
        return 1;

     label1:
        r3[2] = 1;
        if r1 == null goto label2;

        $z0 = r1 instanceof net.htmlparser.jericho.Segment;
        r3[3] = 1;
        if $z0 != 0 goto label3;

     label2:
        r3[4] = 1;
        return 0;

     label3:
        r4 = (net.htmlparser.jericho.Segment) r1;
        $i0 = r4.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int begin>;
        r3[5] = 1;
        if $i0 != $i1 goto label4;

        $i2 = r4.<net.htmlparser.jericho.Segment: int end>;
        $i3 = r0.<net.htmlparser.jericho.Segment: int end>;
        r3[6] = 1;
        if $i2 != $i3 goto label4;

        $r5 = r4.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $r6 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r3[7] = 1;
        if $r5 != $r6 goto label4;

        $z1 = 1;
        r3[8] = 1;
        goto label5;

     label4:
        $z1 = 0;
        r3[9] = 1;

     label5:
        r3[10] = 1;
        return $z1;
    }

    public int hashCode()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int end>;
        $i2 = $i0 + $i1;
        r2[0] = 1;
        return $i2;
    }

    public int length()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $i0 = r0.<net.htmlparser.jericho.Segment: int end>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i2 = $i0 - $i1;
        r2[0] = 1;
        return $i2;
    }

    public final boolean encloses(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Segment r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r1.<net.htmlparser.jericho.Segment: int begin>;
        r3[0] = 1;
        if $i0 > $i1 goto label1;

        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        $i3 = r1.<net.htmlparser.jericho.Segment: int end>;
        r3[1] = 1;
        if $i2 < $i3 goto label1;

        $z0 = 1;
        r3[2] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return $z0;
    }

    public final boolean encloses(int)
    {
        net.htmlparser.jericho.Segment r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Segment;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $i1 = r0.<net.htmlparser.jericho.Segment: int begin>;
        r2[0] = 1;
        if $i1 > i0 goto label1;

        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        r2[1] = 1;
        if i0 >= $i2 goto label1;

        $z0 = 1;
        r2[2] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return $z0;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        int $i0, $i1;
        java.lang.CharSequence $r4;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int end>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: java.lang.CharSequence subSequence(int,int)>($i0, $i1);
        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();
        r2[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.Renderer getRenderer()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Renderer $r3;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = new net.htmlparser.jericho.Renderer;
        specialinvoke $r3.<net.htmlparser.jericho.Renderer: void <init>(net.htmlparser.jericho.Segment)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.TextExtractor getTextExtractor()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TextExtractor $r3;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = new net.htmlparser.jericho.TextExtractor;
        specialinvoke $r3.<net.htmlparser.jericho.TextExtractor: void <init>(net.htmlparser.jericho.Segment)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public java.util.Iterator getNodeIterator()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.NodeIterator $r3;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = new net.htmlparser.jericho.NodeIterator;
        specialinvoke $r3.<net.htmlparser.jericho.NodeIterator: void <init>(net.htmlparser.jericho.Segment)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public java.util.List getAllTags()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllTags(net.htmlparser.jericho.TagType)>(null);
        r2[0] = 1;
        return $r3;
    }

    public java.util.List getAllTags(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Segment r0;
        net.htmlparser.jericho.TagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag r4, $r7, $r10;
        java.util.ArrayList r5, $r9;
        net.htmlparser.jericho.Source $r6;
        int $i0;
        java.util.List $r8;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];
        $r6 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r7 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>($r6, $i0, r1);
        r4 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Tag checkTagEnclosure(net.htmlparser.jericho.Tag)>($r7);
        r3[0] = 1;
        if r4 != null goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r3[1] = 1;
        return $r8;

     label1:
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r5 = $r9;
        r3[2] = 1;

     label2:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);
        $r10 = virtualinvoke r4.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.TagType)>(r1);
        r4 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Tag checkTagEnclosure(net.htmlparser.jericho.Tag)>($r10);
        r3[3] = 1;
        if r4 != null goto label2;

        r3[4] = 1;
        return r5;
    }

    public java.util.List getAllStartTags()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag r3, $r6, $r9;
        java.util.ArrayList r4, $r8;
        net.htmlparser.jericho.Source $r5;
        int $i0;
        java.util.List $r7;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $r5 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r6 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int)>($r5, $i0);
        r3 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r6);
        r2[0] = 1;
        if r3 != null goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r2[1] = 1;
        return $r7;

     label1:
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r4 = $r8;
        r2[2] = 1;

     label2:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);
        $r9 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNextStartTag()>();
        r3 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r9);
        r2[3] = 1;
        if r3 != null goto label2;

        r2[4] = 1;
        return r4;
    }

    public java.util.List getAllStartTags(net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Segment r0;
        net.htmlparser.jericho.StartTagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTag r4;
        java.util.ArrayList r5, $r11;
        java.util.List $r6, $r10;
        net.htmlparser.jericho.Source $r7;
        int $i0;
        net.htmlparser.jericho.Tag $r8, $r9, $r12, $r13;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.StartTagType;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[19];
        r3[0] = 1;
        if r1 != null goto label1;

        $r6 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags()>();
        r3[1] = 1;
        return $r6;

     label1:
        $r7 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r8 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>($r7, $i0, r1);
        $r9 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Tag checkTagEnclosure(net.htmlparser.jericho.Tag)>($r8);
        r4 = (net.htmlparser.jericho.StartTag) $r9;
        r3[2] = 1;
        if r4 != null goto label2;

        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r3[3] = 1;
        return $r10;

     label2:
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r5 = $r11;
        r3[4] = 1;

     label3:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);
        $r12 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.TagType)>(r1);
        $r13 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Tag checkTagEnclosure(net.htmlparser.jericho.Tag)>($r12);
        r4 = (net.htmlparser.jericho.StartTag) $r13;
        r3[5] = 1;
        if r4 != null goto label3;

        r3[6] = 1;
        return r5;
    }

    public java.util.List getAllStartTags(java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean z0;
        net.htmlparser.jericho.StartTagType $r4, $r13;
        net.htmlparser.jericho.StartTag r5, $r9, $r14;
        java.util.ArrayList r6, $r11;
        java.util.List $r7, $r10;
        net.htmlparser.jericho.Source $r8, $r12;
        int $i0, $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[20];
        r3[0] = 1;
        if r1 != null goto label1;

        $r7 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags()>();
        r3[1] = 1;
        return $r7;

     label1:
        z0 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLName(java.lang.CharSequence)>(r1);
        $r8 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        $r9 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>($r8, $i0, r1, $r4, z0);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r9);
        r3[2] = 1;
        if r5 != null goto label2;

        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r3[3] = 1;
        return $r10;

     label2:
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r6 = $r11;
        r3[4] = 1;

     label3:
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        $r12 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i1 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $i2 = $i1 + 1;
        $r13 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        $r14 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>($r12, $i2, r1, $r13, z0);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r14);
        r3[5] = 1;
        if r5 != null goto label3;

        r3[6] = 1;
        return r6;
    }

    public java.util.List getAllStartTags(java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1, r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag r5, $r8, $r12;
        java.util.ArrayList r6, $r10;
        net.htmlparser.jericho.Source $r7, $r11;
        int $i0, $i1, $i2;
        java.util.List $r9;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r3 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[21];
        $r7 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.lang.String,boolean)>($i0, r1, r2, z0);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r8);
        r4[0] = 1;
        if r5 != null goto label1;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r4[1] = 1;
        return $r9;

     label1:
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r6 = $r10;
        r4[2] = 1;

     label2:
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        $r11 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i1 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $i2 = $i1 + 1;
        $r12 = virtualinvoke $r11.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.lang.String,boolean)>($i2, r1, r2, z0);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r12);
        r4[3] = 1;
        if r5 != null goto label2;

        r4[4] = 1;
        return r6;
    }

    public java.util.List getAllStartTags(java.lang.String, java.util.regex.Pattern)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        java.util.regex.Pattern r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag r5, $r8, $r12;
        java.util.ArrayList r6, $r10;
        net.htmlparser.jericho.Source $r7, $r11;
        int $i0, $i1, $i2;
        java.util.List $r9;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.regex.Pattern;
        $r3 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[22];
        $r7 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.util.regex.Pattern)>($i0, r1, r2);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r8);
        r4[0] = 1;
        if r5 != null goto label1;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r4[1] = 1;
        return $r9;

     label1:
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r6 = $r10;
        r4[2] = 1;

     label2:
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        $r11 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i1 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $i2 = $i1 + 1;
        $r12 = virtualinvoke $r11.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.util.regex.Pattern)>($i2, r1, r2);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r12);
        r4[3] = 1;
        if r5 != null goto label2;

        r4[4] = 1;
        return r6;
    }

    public java.util.List getAllStartTagsByClass(java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.regex.Pattern $r4;
        java.util.List $r5;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        $r4 = staticinvoke <net.htmlparser.jericho.Segment: java.util.regex.Pattern getClassPattern(java.lang.String)>(r1);
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags(java.lang.String,java.util.regex.Pattern)>("class", $r4);
        r3[0] = 1;
        return $r5;
    }

    public java.util.List getChildElements()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList r3, $r7;
        int i0, $i1, $i2, $i3;
        net.htmlparser.jericho.StartTag r4;
        net.htmlparser.jericho.Element r5;
        java.util.List $r6;
        net.htmlparser.jericho.Source $r8;
        net.htmlparser.jericho.TagType $r9;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $i1 = virtualinvoke r0.<net.htmlparser.jericho.Segment: int length()>();
        r2[0] = 1;
        if $i1 != 0 goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r2[1] = 1;
        return $r6;

     label1:
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r3 = $r7;
        i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        r2[2] = 1;

     label2:
        $r8 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r4 = virtualinvoke $r8.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int)>(i0);
        r2[3] = 1;
        if r4 == null goto label5;

        $i2 = r4.<net.htmlparser.jericho.StartTag: int begin>;
        $i3 = r0.<net.htmlparser.jericho.Segment: int end>;
        r2[4] = 1;
        if $i2 < $i3 goto label3;

        r2[5] = 1;
        goto label5;

     label3:
        $r9 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.TagType getTagType()>();
        $z0 = virtualinvoke $r9.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r2[6] = 1;
        if $z0 == 0 goto label4;

        i0 = r4.<net.htmlparser.jericho.StartTag: int end>;
        r2[7] = 1;
        goto label2;

     label4:
        r5 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);
        virtualinvoke r5.<net.htmlparser.jericho.Element: java.util.List getChildElements()>();
        i0 = r5.<net.htmlparser.jericho.Element: int end>;
        r2[8] = 1;
        goto label2;

     label5:
        r2[9] = 1;
        return r3;
    }

    public java.util.List getAllElements()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3, $r4;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags()>();
        $r4 = specialinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.util.List)>($r3);
        r2[0] = 1;
        return $r4;
    }

    public java.util.List getAllElements(java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.List $r4, $r5;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[26];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags(java.lang.String)>(r1);
        $r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.util.List)>($r4);
        r3[0] = 1;
        return $r5;
    }

    public java.util.List getAllElements(net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Segment r0;
        net.htmlparser.jericho.StartTagType r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.IllegalArgumentException $r4;
        java.util.List $r5, $r6;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.StartTagType;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[27];
        r3[0] = 1;
        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("startTagType argument must not be null");
        r3[1] = 1;
        throw $r4;

     label1:
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags(net.htmlparser.jericho.StartTagType)>(r1);
        $r6 = specialinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.util.List)>($r5);
        r3[2] = 1;
        return $r6;
    }

    public java.util.List getAllElements(java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1, r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        java.util.List $r5, $r6;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r3 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[28];
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);
        $r6 = specialinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.util.List)>($r5);
        r4[0] = 1;
        return $r6;
    }

    public java.util.List getAllElements(java.lang.String, java.util.regex.Pattern)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        java.util.regex.Pattern r2;
        boolean[][] $r3;
        boolean[] r4;
        java.util.List $r5, $r6;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.regex.Pattern;
        $r3 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[29];
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags(java.lang.String,java.util.regex.Pattern)>(r1, r2);
        $r6 = specialinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.util.List)>($r5);
        r4[0] = 1;
        return $r6;
    }

    public java.util.List getAllElementsByClass(java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.List $r4, $r5;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[30];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTagsByClass(java.lang.String)>(r1);
        $r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllElements(java.util.List)>($r4);
        r3[0] = 1;
        return $r5;
    }

    public java.util.List getAllCharacterReferences()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.CharacterReference r3;
        java.util.ArrayList r4, $r6;
        int $i0, $i1;
        java.util.List $r5;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[31];
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        r3 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.CharacterReference getNextCharacterReference(int)>($i0);
        r2[0] = 1;
        if r3 != null goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r2[1] = 1;
        return $r5;

     label1:
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r4 = $r6;
        r2[2] = 1;

     label2:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);
        $i1 = r3.<net.htmlparser.jericho.CharacterReference: int end>;
        r3 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.CharacterReference getNextCharacterReference(int)>($i1);
        r2[3] = 1;
        if r3 != null goto label2;

        r2[4] = 1;
        return r4;
    }

    public java.util.List getURIAttributes()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        $r3 = staticinvoke <net.htmlparser.jericho.URIAttributes: java.util.List getList(net.htmlparser.jericho.Segment)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public java.util.List getStyleURISegments()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[33];
        $r3 = staticinvoke <net.htmlparser.jericho.URIAttributes: java.util.List getStyleURISegments(net.htmlparser.jericho.Segment)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public final net.htmlparser.jericho.StartTag getFirstStartTag()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        int $i0;
        net.htmlparser.jericho.StartTag $r4, $r5;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[34];
        $r3 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int)>($i0);
        $r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r4);
        r2[0] = 1;
        return $r5;
    }

    public final net.htmlparser.jericho.StartTag getFirstStartTag(net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Segment r0;
        net.htmlparser.jericho.StartTagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source $r4;
        int $i0;
        net.htmlparser.jericho.StartTag $r5, $r6;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.StartTagType;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[35];
        $r4 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,net.htmlparser.jericho.StartTagType)>($i0, r1);
        $r6 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r5);
        r3[0] = 1;
        return $r6;
    }

    public final net.htmlparser.jericho.StartTag getFirstStartTag(java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source $r4;
        int $i0;
        net.htmlparser.jericho.StartTag $r5, $r6;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[36];
        $r4 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String)>($i0, r1);
        $r6 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r5);
        r3[0] = 1;
        return $r6;
    }

    public final net.htmlparser.jericho.StartTag getFirstStartTag(java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1, r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Source $r5;
        int $i0;
        net.htmlparser.jericho.StartTag $r6, $r7;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r3 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[37];
        $r5 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.lang.String,boolean)>($i0, r1, r2, z0);
        $r7 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r6);
        r4[0] = 1;
        return $r7;
    }

    public final net.htmlparser.jericho.StartTag getFirstStartTag(java.lang.String, java.util.regex.Pattern)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        java.util.regex.Pattern r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Source $r5;
        int $i0;
        net.htmlparser.jericho.StartTag $r6, $r7;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.regex.Pattern;
        $r3 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[38];
        $r5 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.util.regex.Pattern)>($i0, r1, r2);
        $r7 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r6);
        r4[0] = 1;
        return $r7;
    }

    public final net.htmlparser.jericho.StartTag getFirstStartTagByClass(java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source $r4;
        int $i0;
        net.htmlparser.jericho.StartTag $r5, $r6;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[39];
        $r4 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTagByClass(int,java.lang.String)>($i0, r1);
        $r6 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r5);
        r3[0] = 1;
        return $r6;
    }

    public final net.htmlparser.jericho.Element getFirstElement()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag r3, $r6, $r7;
        net.htmlparser.jericho.Element r4;
        net.htmlparser.jericho.Source $r5;
        int $i0, $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[40];
        $r5 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r6 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int)>($r5, $i0);
        r3 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r6);
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if r3 == null goto label3;

        r4 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i1 = r4.<net.htmlparser.jericho.Element: int end>;
        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        r2[2] = 1;
        if $i1 > $i2 goto label2;

        r2[3] = 1;
        return r4;

     label2:
        $r7 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNextStartTag()>();
        r3 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r7);
        r2[4] = 1;
        goto label1;

     label3:
        r2[5] = 1;
        return null;
    }

    public final net.htmlparser.jericho.Element getFirstElement(java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean z0;
        net.htmlparser.jericho.StartTagType $r4, $r11;
        net.htmlparser.jericho.StartTag r5, $r9, $r12;
        net.htmlparser.jericho.Element r6, $r7;
        net.htmlparser.jericho.Source $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[41];
        r3[0] = 1;
        if r1 != null goto label1;

        $r7 = virtualinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Element getFirstElement()>();
        r3[1] = 1;
        return $r7;

     label1:
        z0 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLName(java.lang.CharSequence)>(r1);
        $r8 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        $r9 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>($r8, $i0, r1, $r4, z0);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r9);
        r3[2] = 1;

     label2:
        r3[3] = 1;
        if r5 == null goto label4;

        r6 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i1 = r6.<net.htmlparser.jericho.Element: int end>;
        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        r3[4] = 1;
        if $i1 > $i2 goto label3;

        r3[5] = 1;
        return r6;

     label3:
        $r10 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i3 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $i4 = $i3 + 1;
        $r11 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        $r12 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>($r10, $i4, r1, $r11, z0);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r12);
        r3[6] = 1;
        goto label2;

     label4:
        r3[7] = 1;
        return null;
    }

    public final net.htmlparser.jericho.Element getFirstElement(java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1, r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag r5, $r8, $r10;
        net.htmlparser.jericho.Element r6;
        net.htmlparser.jericho.Source $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        $r3 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[42];
        $r7 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.lang.String,boolean)>($i0, r1, r2, z0);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r8);
        r4[0] = 1;

     label1:
        r4[1] = 1;
        if r5 == null goto label3;

        r6 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i1 = r6.<net.htmlparser.jericho.Element: int end>;
        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        r4[2] = 1;
        if $i1 > $i2 goto label2;

        r4[3] = 1;
        return r6;

     label2:
        $r9 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i3 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $i4 = $i3 + 1;
        $r10 = virtualinvoke $r9.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.lang.String,boolean)>($i4, r1, r2, z0);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r10);
        r4[4] = 1;
        goto label1;

     label3:
        r4[5] = 1;
        return null;
    }

    public final net.htmlparser.jericho.Element getFirstElement(java.lang.String, java.util.regex.Pattern)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        java.util.regex.Pattern r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag r5, $r8, $r10;
        net.htmlparser.jericho.Element r6;
        net.htmlparser.jericho.Source $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.regex.Pattern;
        $r3 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[43];
        $r7 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.util.regex.Pattern)>($i0, r1, r2);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r8);
        r4[0] = 1;

     label1:
        r4[1] = 1;
        if r5 == null goto label3;

        r6 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i1 = r6.<net.htmlparser.jericho.Element: int end>;
        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        r4[2] = 1;
        if $i1 > $i2 goto label2;

        r4[3] = 1;
        return r6;

     label2:
        $r9 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i3 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $i4 = $i3 + 1;
        $r10 = virtualinvoke $r9.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.util.regex.Pattern)>($i4, r1, r2);
        r5 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r10);
        r4[4] = 1;
        goto label1;

     label3:
        r4[5] = 1;
        return null;
    }

    public final net.htmlparser.jericho.Element getFirstElementByClass(java.lang.String)
    {
        net.htmlparser.jericho.Segment r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTag r4, $r7, $r9;
        net.htmlparser.jericho.Element r5;
        net.htmlparser.jericho.Source $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[44];
        $r6 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTagByClass(int,java.lang.String)>($i0, r1);
        r4 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r7);
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if r4 == null goto label3;

        r5 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i1 = r5.<net.htmlparser.jericho.Element: int end>;
        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        r3[2] = 1;
        if $i1 > $i2 goto label2;

        r3[3] = 1;
        return r5;

     label2:
        $r8 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i3 = r4.<net.htmlparser.jericho.StartTag: int begin>;
        $i4 = $i3 + 1;
        $r9 = virtualinvoke $r8.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTagByClass(int,java.lang.String)>($i4, r1);
        r4 = specialinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)>($r9);
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return null;
    }

    public java.util.List getFormControls()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[45];
        $r3 = staticinvoke <net.htmlparser.jericho.FormControl: java.util.List getAll(net.htmlparser.jericho.Segment)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.FormFields getFormFields()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.FormFields $r3;
        java.util.List $r4;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[46];
        $r3 = new net.htmlparser.jericho.FormFields;
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getFormControls()>();
        specialinvoke $r3.<net.htmlparser.jericho.FormFields: void <init>(java.util.Collection)>($r4);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Attributes parseAttributes()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        int $i0, $i1;
        net.htmlparser.jericho.Attributes $r4;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[47];
        $r3 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int end>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Attributes parseAttributes(int,int)>($i0, $i1);
        r2[0] = 1;
        return $r4;
    }

    public void ignoreWhenParsing()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[48];
        $r3 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int end>;
        virtualinvoke $r3.<net.htmlparser.jericho.Source: void ignoreWhenParsing(int,int)>($i0, $i1);
        r2[0] = 1;
        return;
    }

    public int compareTo(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Segment r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[49];
        r3[0] = 1;
        if r0 != r1 goto label1;

        r3[1] = 1;
        return 0;

     label1:
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r1.<net.htmlparser.jericho.Segment: int begin>;
        r3[2] = 1;
        if $i0 >= $i1 goto label2;

        r3[3] = 1;
        return -1;

     label2:
        $i2 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i3 = r1.<net.htmlparser.jericho.Segment: int begin>;
        r3[4] = 1;
        if $i2 <= $i3 goto label3;

        r3[5] = 1;
        return 1;

     label3:
        $i4 = r0.<net.htmlparser.jericho.Segment: int end>;
        $i5 = r1.<net.htmlparser.jericho.Segment: int end>;
        r3[6] = 1;
        if $i4 >= $i5 goto label4;

        r3[7] = 1;
        return -1;

     label4:
        $i6 = r0.<net.htmlparser.jericho.Segment: int end>;
        $i7 = r1.<net.htmlparser.jericho.Segment: int end>;
        r3[8] = 1;
        if $i6 <= $i7 goto label5;

        r3[9] = 1;
        return 1;

     label5:
        r3[10] = 1;
        return 0;
    }

    public final boolean isWhiteSpace()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1;
        net.htmlparser.jericho.Source $r3;
        char $c2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[50];
        i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        r2[0] = 1;

     label1:
        $i1 = r0.<net.htmlparser.jericho.Segment: int end>;
        r2[1] = 1;
        if i0 >= $i1 goto label3;

        $r3 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $c2 = virtualinvoke $r3.<net.htmlparser.jericho.Source: char charAt(int)>(i0);
        $z0 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c2);
        r2[2] = 1;
        if $z0 != 0 goto label2;

        r2[3] = 1;
        return 0;

     label2:
        i0 = i0 + 1;
        r2[4] = 1;
        goto label1;

     label3:
        r2[5] = 1;
        return 1;
    }

    public int getMaxDepthIndicator()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1;
        java.util.Iterator r3;
        net.htmlparser.jericho.Tag r4;
        net.htmlparser.jericho.StartTag r5;
        java.util.List $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r7;
        net.htmlparser.jericho.StartTagType $r8;
        net.htmlparser.jericho.EndTagType $r9;
        java.util.Set $r10;
        java.lang.String $r11;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[51];
        i0 = 0;
        i1 = 0;
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllTags()>();
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label8;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (net.htmlparser.jericho.Tag) $r7;
        $z1 = r4 instanceof net.htmlparser.jericho.StartTag;
        r2[2] = 1;
        if $z1 == 0 goto label6;

        r5 = (net.htmlparser.jericho.StartTag) r4;
        $r8 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $r9 = virtualinvoke $r8.<net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.EndTagType getCorrespondingEndTagType()>();
        r2[3] = 1;
        if $r9 != null goto label2;

        r2[4] = 1;
        goto label1;

     label2:
        $r10 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.Set getEndTagForbiddenElementNames()>();
        $r11 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: java.lang.String getName()>();
        $z2 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r11);
        r2[5] = 1;
        if $z2 == 0 goto label3;

        r2[6] = 1;
        goto label1;

     label3:
        $z3 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: boolean isEmptyElementTag()>();
        r2[7] = 1;
        if $z3 == 0 goto label4;

        r2[8] = 1;
        goto label1;

     label4:
        i1 = i1 + 1;
        r2[9] = 1;
        if i1 <= i0 goto label5;

        i0 = i0 + 1;
        r2[10] = 1;

     label5:
        r2[11] = 1;
        goto label7;

     label6:
        i1 = i1 + -1;
        r2[12] = 1;

     label7:
        r2[13] = 1;
        goto label1;

     label8:
        r2[14] = 1;
        return i0;
    }

    public static final boolean isWhiteSpace(char)
    {
        char c0, c3;
        boolean[][] $r0;
        boolean[] r1;
        char[] r2;
        int i1, i2;

        c0 := @parameter0: char;
        $r0 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r1 = $r0[52];
        r2 = <net.htmlparser.jericho.Segment: char[] WHITESPACE>;
        i1 = lengthof r2;
        i2 = 0;
        r1[0] = 1;

     label1:
        r1[1] = 1;
        if i2 >= i1 goto label3;

        c3 = r2[i2];
        r1[2] = 1;
        if c0 != c3 goto label2;

        r1[3] = 1;
        return 1;

     label2:
        i2 = i2 + 1;
        r1[4] = 1;
        goto label1;

     label3:
        r1[5] = 1;
        return 0;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r4;
        net.htmlparser.jericho.Source $r6, $r10;
        int $i0, $i1;
        net.htmlparser.jericho.RowColumnVector $r7, $r11;
        java.lang.String $r14;

        r0 := @this: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[53];
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(50);
        r3 = $r4;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
        $r6 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i0);
        virtualinvoke $r7.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>(r3);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
        $r10 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int end>;
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i1);
        virtualinvoke $r11.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>(r3);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r14;
    }

    public char charAt(int)
    {
        net.htmlparser.jericho.Segment r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        char $c3;

        r0 := @this: net.htmlparser.jericho.Segment;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[54];
        $r3 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i2 = $i1 + i0;
        $c3 = virtualinvoke $r3.<net.htmlparser.jericho.Source: char charAt(int)>($i2);
        r2[0] = 1;
        return $c3;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        net.htmlparser.jericho.Segment r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        java.lang.CharSequence $r4;

        r0 := @this: net.htmlparser.jericho.Segment;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[55];
        $r3 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $i2 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i3 = $i2 + i0;
        $i4 = r0.<net.htmlparser.jericho.Segment: int begin>;
        $i5 = $i4 + i1;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: java.lang.CharSequence subSequence(int,int)>($i3, $i5);
        r2[0] = 1;
        return $r4;
    }

    static final java.lang.StringBuilder appendCollapseWhiteSpace(java.lang.StringBuilder, java.lang.CharSequence)
    {
        java.lang.StringBuilder r0;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i4;
        boolean z0, $z1, $z2;
        char c2, $c3;

        r0 := @parameter0: java.lang.StringBuilder;
        r1 := @parameter1: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[56];
        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        i1 = 0;
        z0 = 0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i1 < i0 goto label2;

        r3[2] = 1;
        return r0;

     label2:
        $c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i1);
        $z1 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c3);
        r3[3] = 1;
        if $z1 != 0 goto label3;

        r3[4] = 1;
        goto label4;

     label3:
        i1 = i1 + 1;
        r3[5] = 1;
        goto label1;

     label4:
        $i4 = i1;
        i1 = i1 + 1;
        c2 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i4);
        $z2 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>(c2);
        r3[6] = 1;
        if $z2 == 0 goto label5;

        z0 = 1;
        r3[7] = 1;
        goto label7;

     label5:
        r3[8] = 1;
        if z0 == 0 goto label6;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        z0 = 0;
        r3[9] = 1;

     label6:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);
        r3[10] = 1;

     label7:
        r3[11] = 1;
        if i1 < i0 goto label4;

        r3[12] = 1;
        return r0;
    }

    static final java.util.regex.Pattern getClassPattern(java.lang.String)
    {
        java.lang.String r0, $r7;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.util.regex.Pattern $r8;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[57];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*(\\s|^)");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\\s|$).*");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r7, 32);
        r2[0] = 1;
        return $r8;
    }

    private java.util.List getAllElements(java.util.List)
    {
        net.htmlparser.jericho.Segment r0;
        java.util.List r1, $r8;
        boolean[][] $r2;
        boolean[] r3;
        java.util.ArrayList r4, $r9;
        java.util.Iterator r5;
        net.htmlparser.jericho.StartTag r6;
        net.htmlparser.jericho.Element r7;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        java.lang.Object $r10;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.util.List;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[58];
        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r3[1] = 1;
        return $r8;

     label1:
        $r9 = new java.util.ArrayList;
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();
        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);
        r4 = $r9;
        r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
        r3[2] = 1;

     label2:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        r3[3] = 1;
        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (net.htmlparser.jericho.StartTag) $r10;
        r7 = virtualinvoke r6.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i1 = r7.<net.htmlparser.jericho.Element: int end>;
        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        r3[4] = 1;
        if $i1 > $i2 goto label3;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);
        r3[5] = 1;

     label3:
        r3[6] = 1;
        goto label2;

     label4:
        r3[7] = 1;
        return r4;
    }

    private net.htmlparser.jericho.StartTag checkEnclosure(net.htmlparser.jericho.StartTag)
    {
        net.htmlparser.jericho.Segment r0;
        net.htmlparser.jericho.StartTag r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.StartTag;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[59];
        r3[0] = 1;
        if r1 == null goto label1;

        $i0 = r1.<net.htmlparser.jericho.StartTag: int end>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int end>;
        r3[1] = 1;
        if $i0 <= $i1 goto label2;

     label1:
        r3[2] = 1;
        return null;

     label2:
        r3[3] = 1;
        return r1;
    }

    private net.htmlparser.jericho.Tag checkTagEnclosure(net.htmlparser.jericho.Tag)
    {
        net.htmlparser.jericho.Segment r0;
        net.htmlparser.jericho.Tag r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: net.htmlparser.jericho.Tag;
        $r2 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[60];
        r3[0] = 1;
        if r1 == null goto label1;

        $i0 = r1.<net.htmlparser.jericho.Tag: int end>;
        $i1 = r0.<net.htmlparser.jericho.Segment: int end>;
        r3[1] = 1;
        if $i0 <= $i1 goto label2;

     label1:
        r3[2] = 1;
        return null;

     label2:
        r3[3] = 1;
        return r1;
    }

    private net.htmlparser.jericho.CharacterReference getNextCharacterReference(int)
    {
        net.htmlparser.jericho.Segment r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.CharacterReference r3;
        net.htmlparser.jericho.Source $r4;

        r0 := @this: net.htmlparser.jericho.Segment;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Segment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[61];
        $r4 = r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r3 = virtualinvoke $r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.CharacterReference getNextCharacterReference(int)>(i0);
        r2[0] = 1;
        if r3 == null goto label1;

        $i1 = r3.<net.htmlparser.jericho.CharacterReference: int end>;
        $i2 = r0.<net.htmlparser.jericho.Segment: int end>;
        r2[1] = 1;
        if $i1 <= $i2 goto label2;

     label1:
        r2[2] = 1;
        return null;

     label2:
        r2[3] = 1;
        return r3;
    }

    public volatile int compareTo(java.lang.Object)
    {
        net.htmlparser.jericho.Segment r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Segment;
        r1 := @parameter0: java.lang.Object;
        $r2 = (net.htmlparser.jericho.Segment) r1;
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.Segment: int compareTo(net.htmlparser.jericho.Segment)>($r2);
        return $i0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        char[] $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Segment: boolean[][] $VRi()>();
        r1 = $r0[63];
        $r2 = newarray (char)[6];
        $r2[0] = 32;
        $r2[1] = 10;
        $r2[2] = 13;
        $r2[3] = 9;
        $r2[4] = 12;
        $r2[5] = 8203;
        <net.htmlparser.jericho.Segment: char[] WHITESPACE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63;

        $r0 = newmultiarray (boolean)[64][];
        <net.htmlparser.jericho.Segment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[7];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[11];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[5];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[5];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[5];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[5];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[7];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[7];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[5];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[5];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[10];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[1];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[3];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[5];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[1];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[1];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[1];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[1];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[1];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[38] = $r39;
        $r40 = newarray (boolean)[1];
        $r0[39] = $r40;
        $r41 = newarray (boolean)[6];
        $r0[40] = $r41;
        $r42 = newarray (boolean)[8];
        $r0[41] = $r42;
        $r43 = newarray (boolean)[6];
        $r0[42] = $r43;
        $r44 = newarray (boolean)[6];
        $r0[43] = $r44;
        $r45 = newarray (boolean)[6];
        $r0[44] = $r45;
        $r46 = newarray (boolean)[1];
        $r0[45] = $r46;
        $r47 = newarray (boolean)[1];
        $r0[46] = $r47;
        $r48 = newarray (boolean)[1];
        $r0[47] = $r48;
        $r49 = newarray (boolean)[1];
        $r0[48] = $r49;
        $r50 = newarray (boolean)[11];
        $r0[49] = $r50;
        $r51 = newarray (boolean)[6];
        $r0[50] = $r51;
        $r52 = newarray (boolean)[15];
        $r0[51] = $r52;
        $r53 = newarray (boolean)[6];
        $r0[52] = $r53;
        $r54 = newarray (boolean)[1];
        $r0[53] = $r54;
        $r55 = newarray (boolean)[1];
        $r0[54] = $r55;
        $r56 = newarray (boolean)[1];
        $r0[55] = $r56;
        $r57 = newarray (boolean)[13];
        $r0[56] = $r57;
        $r58 = newarray (boolean)[1];
        $r0[57] = $r58;
        $r59 = newarray (boolean)[8];
        $r0[58] = $r59;
        $r60 = newarray (boolean)[4];
        $r0[59] = $r60;
        $r61 = newarray (boolean)[4];
        $r0[60] = $r61;
        $r62 = newarray (boolean)[4];
        $r0[61] = $r62;
        $r63 = newarray (boolean)[1];
        $r0[63] = $r63;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Segment", 2866355569311545102L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.Source extends net.htmlparser.jericho.Segment implements java.lang.Iterable
{
    private final java.lang.CharSequence sourceText;
    private java.lang.String documentSpecifiedEncoding;
    private java.lang.String encoding;
    private java.lang.String encodingSpecificationInfo;
    private java.lang.String preliminaryEncodingInfo;
    private java.lang.String newLine;
    private net.htmlparser.jericho.ParseText parseText;
    private net.htmlparser.jericho.OutputDocument parseTextOutputDocument;
    net.htmlparser.jericho.Logger logger;
    private net.htmlparser.jericho.RowColumnVector[] rowColumnVectorCacheArray;
    final net.htmlparser.jericho.Cache cache;
    boolean useAllTypesCache;
    boolean useSpecialTypesCache;
    int[] fullSequentialParseData;
    net.htmlparser.jericho.Tag[] allTagsArray;
    java.util.List allTags;
    java.util.List allStartTags;
    private java.util.List allElements;
    private java.util.List childElements;
    private static volatile java.lang.String lastNewLine;
    private static final java.lang.String UNINITIALISED;
    private static final java.lang.String CR;
    private static final java.lang.String LF;
    private static final java.lang.String CRLF;
    static final java.lang.String PACKAGE_NAME;
    public static boolean LegacyIteratorCompatabilityMode;
    private static final boolean[][] $VRc;

    public void <init>(java.lang.CharSequence)
    {
        net.htmlparser.jericho.Source r0;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        java.lang.String $r4;
        net.htmlparser.jericho.Logger $r5;
        net.htmlparser.jericho.Cache $r6;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(int)>($i0);
        r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding> = "";
        r0.<net.htmlparser.jericho.Source: java.lang.String encoding> = "";
        r0.<net.htmlparser.jericho.Source: java.lang.String preliminaryEncodingInfo> = null;
        r0.<net.htmlparser.jericho.Source: java.lang.String newLine> = "";
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector[] rowColumnVectorCacheArray> = null;
        r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache> = 1;
        r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache> = 1;
        r0.<net.htmlparser.jericho.Source: int[] fullSequentialParseData> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] allTagsArray> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allTags> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allStartTags> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allElements> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List childElements> = null;
        $r4 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();
        r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText> = $r4;
        $r5 = staticinvoke <net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger newLogger()>();
        virtualinvoke r0.<net.htmlparser.jericho.Source: void setLogger(net.htmlparser.jericho.Logger)>($r5);
        $r6 = new net.htmlparser.jericho.Cache;
        specialinvoke $r6.<net.htmlparser.jericho.Cache: void <init>(net.htmlparser.jericho.Source)>(r0);
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache> = $r6;
        r3[0] = 1;
        return;
    }

    private void <init>(net.htmlparser.jericho.EncodingDetector) throws java.io.IOException
    {
        net.htmlparser.jericho.Source r0;
        net.htmlparser.jericho.EncodingDetector r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4, $r5, $r6, $r8, $r11, $r13;
        java.lang.StringBuilder $r7, $r9, $r10, $r12;
        net.htmlparser.jericho.LoggerQueue $r14;
        net.htmlparser.jericho.Logger $r15;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: net.htmlparser.jericho.EncodingDetector;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r4 = staticinvoke <net.htmlparser.jericho.Source: java.lang.String getString(net.htmlparser.jericho.EncodingDetector)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.Source: void <init>(java.lang.CharSequence)>($r4);
        $r5 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.lang.String getEncoding()>();
        r0.<net.htmlparser.jericho.Source: java.lang.String encoding> = $r5;
        $r6 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.lang.String getEncodingSpecificationInfo()>();
        r0.<net.htmlparser.jericho.Source: java.lang.String encodingSpecificationInfo> = $r6;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.lang.String getPreliminaryEncoding()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r11 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.lang.String getPreliminaryEncodingSpecificationInfo()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<net.htmlparser.jericho.Source: java.lang.String preliminaryEncodingInfo> = $r13;
        $r14 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue getLoggerQueue()>();
        $r15 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        virtualinvoke $r14.<net.htmlparser.jericho.LoggerQueue: void outputTo(net.htmlparser.jericho.Logger)>($r15);
        r3[0] = 1;
        return;
    }

    void <init>(java.io.Reader, java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.Source r0;
        java.io.Reader r1;
        java.lang.String r2, $r5;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.io.Reader;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[2];
        $r5 = staticinvoke <net.htmlparser.jericho.Util: java.lang.String getString(java.io.Reader)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.Source: void <init>(java.lang.CharSequence)>($r5);
        r4[0] = 1;
        if r2 == null goto label1;

        r0.<net.htmlparser.jericho.Source: java.lang.String encoding> = r2;
        r0.<net.htmlparser.jericho.Source: java.lang.String encodingSpecificationInfo> = "InputStreamReader.getEncoding() of constructor argument";
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return;
    }

    void <init>(java.lang.CharSequence, net.htmlparser.jericho.StreamedParseText, java.lang.String, java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        java.lang.CharSequence r1;
        net.htmlparser.jericho.StreamedParseText r2;
        java.lang.String r3, r4, r5;
        boolean[][] $r6;
        boolean[] r7;
        int $i0;
        net.htmlparser.jericho.Cache $r8;
        int[] $r9;
        net.htmlparser.jericho.Logger $r10;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.lang.CharSequence;
        r2 := @parameter1: net.htmlparser.jericho.StreamedParseText;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        $r6 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r6 != null goto label0;

        $r6 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r7 = $r6[3];
        $i0 = virtualinvoke r2.<net.htmlparser.jericho.StreamedParseText: int getEnd()>();
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(int)>($i0);
        r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding> = "";
        r0.<net.htmlparser.jericho.Source: java.lang.String encoding> = "";
        r0.<net.htmlparser.jericho.Source: java.lang.String preliminaryEncodingInfo> = null;
        r0.<net.htmlparser.jericho.Source: java.lang.String newLine> = "";
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector[] rowColumnVectorCacheArray> = null;
        r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache> = 1;
        r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache> = 1;
        r0.<net.htmlparser.jericho.Source: int[] fullSequentialParseData> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] allTagsArray> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allTags> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allStartTags> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allElements> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List childElements> = null;
        $r8 = <net.htmlparser.jericho.Cache: net.htmlparser.jericho.Cache STREAMED_SOURCE_MARKER>;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache> = $r8;
        r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache> = 0;
        r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache> = 0;
        $r9 = newarray (int)[1];
        r0.<net.htmlparser.jericho.Source: int[] fullSequentialParseData> = $r9;
        r7[0] = 1;
        if r3 == null goto label1;

        r0.<net.htmlparser.jericho.Source: java.lang.String encoding> = r3;
        r7[1] = 1;

     label1:
        r0.<net.htmlparser.jericho.Source: java.lang.String encodingSpecificationInfo> = r4;
        r0.<net.htmlparser.jericho.Source: java.lang.String preliminaryEncodingInfo> = r5;
        r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText> = r1;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText> = r2;
        $r10 = staticinvoke <net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger newLogger()>();
        virtualinvoke r0.<net.htmlparser.jericho.Source: void setLogger(net.htmlparser.jericho.Logger)>($r10);
        r7[2] = 1;
        return;
    }

    void <init>(java.lang.CharSequence, boolean)
    {
        net.htmlparser.jericho.Source r0;
        java.lang.CharSequence r1;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        net.htmlparser.jericho.LoggerDisabled $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.lang.CharSequence;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(int)>($i0);
        r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding> = "";
        r0.<net.htmlparser.jericho.Source: java.lang.String encoding> = "";
        r0.<net.htmlparser.jericho.Source: java.lang.String preliminaryEncodingInfo> = null;
        r0.<net.htmlparser.jericho.Source: java.lang.String newLine> = "";
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector[] rowColumnVectorCacheArray> = null;
        r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache> = 1;
        r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache> = 1;
        r0.<net.htmlparser.jericho.Source: int[] fullSequentialParseData> = null;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] allTagsArray> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allTags> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allStartTags> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allElements> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List childElements> = null;
        r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText> = r1;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache> = null;
        r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache> = 0;
        r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache> = 0;
        $r4 = <net.htmlparser.jericho.LoggerDisabled: net.htmlparser.jericho.LoggerDisabled INSTANCE>;
        virtualinvoke r0.<net.htmlparser.jericho.Source: void setLogger(net.htmlparser.jericho.Logger)>($r4);
        r3[0] = 1;
        return;
    }

    public void <init>(java.io.Reader) throws java.io.IOException
    {
        net.htmlparser.jericho.Source r0;
        java.io.Reader r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        java.io.InputStreamReader $r6;
        java.lang.String $r7;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.io.Reader;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $z0 = r1 instanceof java.io.InputStreamReader;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r6 = (java.io.InputStreamReader) r1;
        $r7 = virtualinvoke $r6.<java.io.InputStreamReader: java.lang.String getEncoding()>();
        r3[1] = 1;
        goto label2;

     label1:
        $r7 = null;
        r3[2] = 1;

     label2:
        specialinvoke r0.<net.htmlparser.jericho.Source: void <init>(java.io.Reader,java.lang.String)>(r1, $r7);
        r3[3] = 1;
        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        net.htmlparser.jericho.Source r0;
        java.io.InputStream r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.EncodingDetector $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $r4 = new net.htmlparser.jericho.EncodingDetector;
        specialinvoke $r4.<net.htmlparser.jericho.EncodingDetector: void <init>(java.io.InputStream)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.Source: void <init>(net.htmlparser.jericho.EncodingDetector)>($r4);
        r3[0] = 1;
        return;
    }

    public void <init>(java.net.URL) throws java.io.IOException
    {
        net.htmlparser.jericho.Source r0;
        java.net.URL r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.EncodingDetector $r4;
        java.net.URLConnection $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.net.URL;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $r4 = new net.htmlparser.jericho.EncodingDetector;
        $r5 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();
        specialinvoke $r4.<net.htmlparser.jericho.EncodingDetector: void <init>(java.net.URLConnection)>($r5);
        specialinvoke r0.<net.htmlparser.jericho.Source: void <init>(net.htmlparser.jericho.EncodingDetector)>($r4);
        r3[0] = 1;
        return;
    }

    public void <init>(java.net.URLConnection) throws java.io.IOException
    {
        net.htmlparser.jericho.Source r0;
        java.net.URLConnection r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.EncodingDetector $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.net.URLConnection;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        $r4 = new net.htmlparser.jericho.EncodingDetector;
        specialinvoke $r4.<net.htmlparser.jericho.EncodingDetector: void <init>(java.net.URLConnection)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.Source: void <init>(net.htmlparser.jericho.EncodingDetector)>($r4);
        r3[0] = 1;
        return;
    }

    private java.lang.String setEncoding(java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        java.lang.String r1, r2, $r5;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[9];
        $r5 = r0.<net.htmlparser.jericho.Source: java.lang.String encoding>;
        r4[0] = 1;
        if $r5 != "" goto label1;

        r0.<net.htmlparser.jericho.Source: java.lang.String encoding> = r1;
        r0.<net.htmlparser.jericho.Source: java.lang.String encodingSpecificationInfo> = r2;
        r4[1] = 1;

     label1:
        r4[2] = 1;
        return r1;
    }

    public java.lang.String getDocumentSpecifiedEncoding()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.StartTag r5, $r11;
        java.lang.String r6, $r7, $r8, $r12, $r13, $r14, $r15, $r16, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        net.htmlparser.jericho.TagType $r9;
        net.htmlparser.jericho.StartTagType $r10;
        java.util.List $r17;
        boolean $z0, $z1;
        java.lang.Object $r18;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r7 = r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding>;
        r2[0] = 1;
        if $r7 == "" goto label1;

        $r8 = r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding>;
        r2[1] = 1;
        return $r8;

     label1:
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getTagAt(int)>(0);
        r2[2] = 1;
        if r3 == null goto label2;

        $r9 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r10 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType XML_DECLARATION>;
        r2[3] = 1;
        if $r9 != $r10 goto label2;

        $r11 = (net.htmlparser.jericho.StartTag) r3;
        $r12 = virtualinvoke $r11.<net.htmlparser.jericho.StartTag: java.lang.String getAttributeValue(java.lang.String)>("encoding");
        r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding> = $r12;
        $r13 = r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding>;
        r2[4] = 1;
        if $r13 == null goto label2;

        $r14 = r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding>;
        $r15 = virtualinvoke r3.<net.htmlparser.jericho.Tag: java.lang.String toString()>();
        $r16 = specialinvoke r0.<net.htmlparser.jericho.Source: java.lang.String setEncoding(java.lang.String,java.lang.String)>($r14, $r15);
        r2[5] = 1;
        return $r16;

     label2:
        $r17 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.util.List getAllStartTags(java.lang.String)>("meta");
        r4 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();
        r2[6] = 1;

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[7] = 1;
        if $z0 == 0 goto label8;

        $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.StartTag) $r18;
        $r19 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: java.lang.String getAttributeValue(java.lang.String)>("charset");
        r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding> = $r19;
        $r20 = r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding>;
        r2[8] = 1;
        if $r20 != null goto label6;

        $r21 = "content-type";
        $r22 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: java.lang.String getAttributeValue(java.lang.String)>("http-equiv");
        $z1 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r22);
        r2[9] = 1;
        if $z1 != 0 goto label4;

        r2[10] = 1;
        goto label3;

     label4:
        r6 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: java.lang.String getAttributeValue(java.lang.String)>("content");
        r2[11] = 1;
        if r6 != null goto label5;

        r2[12] = 1;
        goto label3;

     label5:
        $r23 = staticinvoke <net.htmlparser.jericho.Source: java.lang.String getCharsetParameterFromHttpHeaderValue(java.lang.String)>(r6);
        r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding> = $r23;
        r2[13] = 1;

     label6:
        $r24 = r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding>;
        r2[14] = 1;
        if $r24 == null goto label7;

        $r25 = r0.<net.htmlparser.jericho.Source: java.lang.String documentSpecifiedEncoding>;
        $r26 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: java.lang.String toString()>();
        $r27 = specialinvoke r0.<net.htmlparser.jericho.Source: java.lang.String setEncoding(java.lang.String,java.lang.String)>($r25, $r26);
        r2[15] = 1;
        return $r27;

     label7:
        r2[16] = 1;
        goto label3;

     label8:
        $r28 = specialinvoke r0.<net.htmlparser.jericho.Source: java.lang.String setEncoding(java.lang.String,java.lang.String)>(null, "No encoding specified in document");
        r2[17] = 1;
        return $r28;
    }

    public java.lang.String getEncoding()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = r0.<net.htmlparser.jericho.Source: java.lang.String encoding>;
        r2[0] = 1;
        if $r3 != "" goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        r2[1] = 1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Source: java.lang.String encoding>;
        r2[2] = 1;
        return $r5;
    }

    public java.lang.String getEncodingSpecificationInfo()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = r0.<net.htmlparser.jericho.Source: java.lang.String encoding>;
        r2[0] = 1;
        if $r3 != "" goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.String getDocumentSpecifiedEncoding()>();
        r2[1] = 1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Source: java.lang.String encodingSpecificationInfo>;
        r2[2] = 1;
        return $r5;
    }

    public java.lang.String getPreliminaryEncodingInfo()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = r0.<net.htmlparser.jericho.Source: java.lang.String preliminaryEncodingInfo>;
        r2[0] = 1;
        return $r3;
    }

    public boolean isXML()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3, r4;
        net.htmlparser.jericho.TagType $r5;
        net.htmlparser.jericho.StartTagType $r6, $r7;
        net.htmlparser.jericho.ParseText $r8;
        int $i0, $i1, $i2;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getTagAt(int)>(0);
        r2[0] = 1;
        if r3 == null goto label1;

        $r5 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r6 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType XML_DECLARATION>;
        r2[1] = 1;
        if $r5 != $r6 goto label1;

        r2[2] = 1;
        return 1;

     label1:
        $r7 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType DOCTYPE_DECLARATION>;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int,net.htmlparser.jericho.TagType)>(0, $r7);
        r2[3] = 1;
        if r4 == null goto label2;

        $r8 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $i0 = r4.<net.htmlparser.jericho.Tag: int begin>;
        $i1 = r4.<net.htmlparser.jericho.Tag: int end>;
        $i2 = interfaceinvoke $r8.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int,int)>("xhtml", $i0, $i1);
        r2[4] = 1;
        if $i2 == -1 goto label2;

        r2[5] = 1;
        return 1;

     label2:
        r2[6] = 1;
        return 0;
    }

    public java.lang.String getNewLine()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i2, i3, $i4;
        char c1, $c5;
        java.lang.String $r3, $r4, $r8, $r9, $r10;
        java.lang.CharSequence $r5, $r7;
        null_type $n0;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = r0.<net.htmlparser.jericho.Source: java.lang.String newLine>;
        r2[0] = 1;
        if $r3 == "" goto label1;

        $r4 = r0.<net.htmlparser.jericho.Source: java.lang.String newLine>;
        r2[1] = 1;
        return $r4;

     label1:
        i0 = 0;
        r2[2] = 1;

     label2:
        $i2 = r0.<net.htmlparser.jericho.Source: int end>;
        r2[3] = 1;
        if i0 >= $i2 goto label8;

        $r5 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        c1 = interfaceinvoke $r5.<java.lang.CharSequence: char charAt(int)>(i0);
        r2[4] = 1;
        if c1 != 10 goto label3;

        r0.<net.htmlparser.jericho.Source: java.lang.String newLine> = "\n";
        r2[5] = 1;
        goto label6;

     label3:
        r2[6] = 1;
        if c1 != 13 goto label7;

        i3 = i0 + 1;
        $i4 = r0.<net.htmlparser.jericho.Source: int end>;
        r2[7] = 1;
        if i3 >= $i4 goto label4;

        $r7 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        $c5 = interfaceinvoke $r7.<java.lang.CharSequence: char charAt(int)>(i3);
        r2[8] = 1;
        if $c5 != 10 goto label4;

        $r8 = "\r\n";
        r2[9] = 1;
        goto label5;

     label4:
        $r8 = "\r";
        r2[10] = 1;

     label5:
        r0.<net.htmlparser.jericho.Source: java.lang.String newLine> = $r8;
        r2[11] = 1;

     label6:
        $r9 = r0.<net.htmlparser.jericho.Source: java.lang.String newLine>;
        <net.htmlparser.jericho.Source: java.lang.String lastNewLine> = $r9;
        $r10 = r0.<net.htmlparser.jericho.Source: java.lang.String newLine>;
        r2[12] = 1;
        return $r10;

     label7:
        i0 = i0 + 1;
        r2[13] = 1;
        goto label2;

     label8:
        $n0 = null;
        r0.<net.htmlparser.jericho.Source: java.lang.String newLine> = $n0;
        r2[14] = 1;
        return $n0;
    }

    java.lang.String getBestGuessNewLine()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r4, $r5, $r6;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.String getNewLine()>();
        r2[0] = 1;
        if r3 == null goto label1;

        r2[1] = 1;
        return r3;

     label1:
        $r4 = <net.htmlparser.jericho.Source: java.lang.String lastNewLine>;
        r2[2] = 1;
        if $r4 == null goto label2;

        $r5 = <net.htmlparser.jericho.Source: java.lang.String lastNewLine>;
        r2[3] = 1;
        return $r5;

     label2:
        $r6 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        r2[4] = 1;
        return $r6;
    }

    public int getRow(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.RowColumnVector $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $i1 = virtualinvoke $r3.<net.htmlparser.jericho.RowColumnVector: int getRow()>();
        r2[0] = 1;
        return $i1;
    }

    public int getColumn(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.RowColumnVector $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $i1 = virtualinvoke $r3.<net.htmlparser.jericho.RowColumnVector: int getColumn()>();
        r2[0] = 1;
        return $i1;
    }

    public net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IndexOutOfBoundsException $r3;
        net.htmlparser.jericho.RowColumnVector[] $r4, $r5, $r6;
        net.htmlparser.jericho.RowColumnVector $r7;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $i1 = r0.<net.htmlparser.jericho.Source: int end>;
        r2[0] = 1;
        if i0 <= $i1 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();
        r2[1] = 1;
        throw $r3;

     label1:
        $r4 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector[] rowColumnVectorCacheArray>;
        r2[2] = 1;
        if $r4 != null goto label2;

        $r5 = staticinvoke <net.htmlparser.jericho.RowColumnVector: net.htmlparser.jericho.RowColumnVector[] getCacheArray(net.htmlparser.jericho.Source)>(r0);
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector[] rowColumnVectorCacheArray> = $r5;
        r2[3] = 1;

     label2:
        $r6 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector[] rowColumnVectorCacheArray>;
        $r7 = staticinvoke <net.htmlparser.jericho.RowColumnVector: net.htmlparser.jericho.RowColumnVector get(net.htmlparser.jericho.RowColumnVector[],int)>($r6, i0);
        r2[4] = 1;
        return $r7;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $r3 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();
        r2[0] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Tag[] fullSequentialParse()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0, z1;
        net.htmlparser.jericho.Tag[] r3, $r5, $r6;
        java.lang.Throwable r4, $r10;
        net.htmlparser.jericho.Cache $r7, $r9;
        int $i0;
        net.htmlparser.jericho.Logger $r8;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $r5 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] allTagsArray>;
        r2[0] = 1;
        if $r5 == null goto label1;

        $r6 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] allTagsArray>;
        r2[1] = 1;
        return $r6;

     label1:
        z0 = 0;
        $r7 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        $i0 = virtualinvoke $r7.<net.htmlparser.jericho.Cache: int getTagCount()>();
        r2[2] = 1;
        if $i0 == 0 goto label2;

        $r8 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        interfaceinvoke $r8.<net.htmlparser.jericho.Logger: void warn(java.lang.String)>("Full sequential parse clearing all tags from cache. Consider calling Source.fullSequentialParse() manually immediately after construction of Source.");
        $r9 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        virtualinvoke $r9.<net.htmlparser.jericho.Cache: void clear()>();
        r2[3] = 1;

     label2:
        z1 = r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;

     label3:
        r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache> = 0;
        r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache> = 0;
        r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag[] parseAll(net.htmlparser.jericho.Source,boolean)>(r0, 0);

     label4:
        r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache> = z1;
        r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache> = 1;
        r2[4] = 1;
        return r3;

     label5:
        $r10 := @caughtexception;

     label6:
        r4 = $r10;

     label7:
        r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache> = z1;
        r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache> = 1;
        r2[5] = 1;
        throw r4;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.util.Iterator iterator()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.Iterator $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.util.Iterator getNodeIterator()>();
        r2[0] = 1;
        return $r3;
    }

    public java.util.List getChildElements()
    {
        net.htmlparser.jericho.Source r0, $r10;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1;
        net.htmlparser.jericho.StartTag r3;
        net.htmlparser.jericho.Element r4, $r13, $r14;
        java.util.List $r5, $r6, $r7, $r15, $r16;
        java.util.ArrayList $r9;
        net.htmlparser.jericho.TagType $r11;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        $r5 = r0.<net.htmlparser.jericho.Source: java.util.List childElements>;
        r2[0] = 1;
        if $r5 != null goto label7;

        $i1 = virtualinvoke r0.<net.htmlparser.jericho.Source: int length()>();
        r2[1] = 1;
        if $i1 != 0 goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r0.<net.htmlparser.jericho.Source: java.util.List childElements> = $r6;
        r2[2] = 1;
        goto label7;

     label1:
        $r7 = r0.<net.htmlparser.jericho.Source: java.util.List allTags>;
        r2[3] = 1;
        if $r7 != null goto label2;

        virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] fullSequentialParse()>();
        r2[4] = 1;

     label2:
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r0.<net.htmlparser.jericho.Source: java.util.List childElements> = $r9;
        i0 = 0;
        r2[5] = 1;

     label3:
        $r10 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Source source>;
        r3 = virtualinvoke $r10.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int)>(i0);
        r2[6] = 1;
        if r3 != null goto label4;

        r2[7] = 1;
        goto label7;

     label4:
        $r11 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.TagType getTagType()>();
        $z0 = virtualinvoke $r11.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r2[8] = 1;
        if $z0 == 0 goto label5;

        i0 = r3.<net.htmlparser.jericho.StartTag: int end>;
        r2[9] = 1;
        goto label3;

     label5:
        r4 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        virtualinvoke r4.<net.htmlparser.jericho.Element: java.util.List getChildElements(int)>(0);
        $r13 = r4.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement>;
        $r14 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r2[10] = 1;
        if $r13 != $r14 goto label6;

        r4.<net.htmlparser.jericho.Element: net.htmlparser.jericho.Element parentElement> = null;
        $r15 = r0.<net.htmlparser.jericho.Source: java.util.List childElements>;
        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r4);
        r2[11] = 1;

     label6:
        i0 = r4.<net.htmlparser.jericho.Element: int end>;
        r2[12] = 1;
        goto label3;

     label7:
        $r16 = r0.<net.htmlparser.jericho.Source: java.util.List childElements>;
        r2[13] = 1;
        return $r16;
    }

    public net.htmlparser.jericho.SourceFormatter getSourceFormatter()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SourceFormatter $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $r3 = new net.htmlparser.jericho.SourceFormatter;
        specialinvoke $r3.<net.htmlparser.jericho.SourceFormatter: void <init>(net.htmlparser.jericho.Segment)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public java.util.List getAllTags()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3, $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        $r3 = r0.<net.htmlparser.jericho.Source: java.util.List allTags>;
        r2[0] = 1;
        if $r3 != null goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] fullSequentialParse()>();
        r2[1] = 1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Source: java.util.List allTags>;
        r2[2] = 1;
        return $r5;
    }

    public java.util.List getAllStartTags()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List r3, $r6, $r9, $r11;
        java.util.Iterator r4;
        net.htmlparser.jericho.Tag r5;
        java.util.ArrayList $r7;
        int $i0;
        boolean $z0, $z1;
        java.lang.Object $r8;
        net.htmlparser.jericho.StartTag $r10;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[26];
        $r6 = r0.<net.htmlparser.jericho.Source: java.util.List allStartTags>;
        r2[0] = 1;
        if $r6 != null goto label3;

        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.util.List getAllTags()>();
        $r7 = new java.util.ArrayList;
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();
        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);
        r0.<net.htmlparser.jericho.Source: java.util.List allStartTags> = $r7;
        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
        r2[1] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[2] = 1;
        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.Tag) $r8;
        $z1 = r5 instanceof net.htmlparser.jericho.StartTag;
        r2[3] = 1;
        if $z1 == 0 goto label2;

        $r9 = r0.<net.htmlparser.jericho.Source: java.util.List allStartTags>;
        $r10 = (net.htmlparser.jericho.StartTag) r5;
        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);
        r2[4] = 1;

     label2:
        r2[5] = 1;
        goto label1;

     label3:
        $r11 = r0.<net.htmlparser.jericho.Source: java.util.List allStartTags>;
        r2[6] = 1;
        return $r11;
    }

    public java.util.List getAllElements()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List r3, $r6, $r7, $r10, $r12;
        java.util.Iterator r4;
        net.htmlparser.jericho.StartTag r5;
        boolean $z0, $z1;
        java.util.ArrayList $r8;
        int $i0;
        java.lang.Object $r9;
        net.htmlparser.jericho.Element $r11;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[27];
        $r6 = r0.<net.htmlparser.jericho.Source: java.util.List allElements>;
        r2[0] = 1;
        if $r6 != null goto label3;

        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.util.List getAllStartTags()>();
        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();
        r2[1] = 1;
        if $z0 == 0 goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r2[2] = 1;
        return $r7;

     label1:
        $r8 = new java.util.ArrayList;
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();
        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);
        r0.<net.htmlparser.jericho.Source: java.util.List allElements> = $r8;
        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();
        r2[3] = 1;

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[4] = 1;
        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.StartTag) $r9;
        $r10 = r0.<net.htmlparser.jericho.Source: java.util.List allElements>;
        $r11 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);
        r2[5] = 1;
        goto label2;

     label3:
        $r12 = r0.<net.htmlparser.jericho.Source: java.util.List allElements>;
        r2[6] = 1;
        return $r12;
    }

    public net.htmlparser.jericho.Element getElementById(java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Element $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[28];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Element getFirstElement(java.lang.String,java.lang.String,boolean)>("id", r1, 1);
        r3[0] = 1;
        return $r4;
    }

    public final net.htmlparser.jericho.Tag getTagAt(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[29];
        $r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean)>(r0, i0, 0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Tag getPreviousTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        $r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Tag getPreviousTag(int, net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        net.htmlparser.jericho.TagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[31];
        $r4 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>(r0, i0, r1);
        r3[0] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Tag getNextTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        $r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    net.htmlparser.jericho.Tag getNextNonServerTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        net.htmlparser.jericho.TagType $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[33];

     label1:
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int)>(i0);
        r2[0] = 1;
        if r3 != null goto label2;

        r2[1] = 1;
        return null;

     label2:
        $r4 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $z0 = virtualinvoke $r4.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r2[2] = 1;
        if $z0 != 0 goto label3;

        r2[3] = 1;
        return r3;

     label3:
        i0 = r3.<net.htmlparser.jericho.Tag: int end>;
        r2[4] = 1;
        goto label1;
    }

    net.htmlparser.jericho.Tag getPreviousNonServerTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        net.htmlparser.jericho.TagType $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[34];

     label1:
        $i1 = i0 - 1;
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getPreviousTag(int)>($i1);
        r2[0] = 1;
        if r3 != null goto label2;

        r2[1] = 1;
        return null;

     label2:
        $r4 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $z0 = virtualinvoke $r4.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r2[2] = 1;
        if $z0 != 0 goto label3;

        r2[3] = 1;
        return r3;

     label3:
        $i2 = r3.<net.htmlparser.jericho.Tag: int begin>;
        i0 = $i2 - 1;
        r2[4] = 1;
        goto label1;
    }

    public net.htmlparser.jericho.Tag getNextTag(int, net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        net.htmlparser.jericho.TagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[35];
        $r4 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>(r0, i0, r1);
        r3[0] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Tag getEnclosingTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[36];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getEnclosingTag(int,net.htmlparser.jericho.TagType)>(i0, null);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Tag getEnclosingTag(int, net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0, $i1;
        net.htmlparser.jericho.TagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag r4;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[37];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getPreviousTag(int,net.htmlparser.jericho.TagType)>(i0, r1);
        r3[0] = 1;
        if r4 == null goto label1;

        $i1 = r4.<net.htmlparser.jericho.Tag: int end>;
        r3[1] = 1;
        if $i1 > i0 goto label2;

     label1:
        r3[2] = 1;
        return null;

     label2:
        r3[3] = 1;
        return r4;
    }

    public net.htmlparser.jericho.Element getNextElement(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag r3;
        net.htmlparser.jericho.Element $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[38];
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int)>(i0);
        r2[0] = 1;
        if r3 != null goto label1;

        $r4 = null;
        r2[1] = 1;
        goto label2;

     label1:
        $r4 = virtualinvoke r3.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Element getNextElement(int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTag r4;
        net.htmlparser.jericho.Element $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[39];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String)>(i0, r1);
        r3[0] = 1;
        if r4 != null goto label1;

        $r5 = null;
        r3[1] = 1;
        goto label2;

     label1:
        $r5 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.Element getNextElement(int, java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1, r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag r5;
        net.htmlparser.jericho.Element $r6;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[40];
        r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.lang.String,boolean)>(i0, r1, r2, z0);
        r4[0] = 1;
        if r5 != null goto label1;

        $r6 = null;
        r4[1] = 1;
        goto label2;

     label1:
        $r6 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        r4[2] = 1;

     label2:
        r4[3] = 1;
        return $r6;
    }

    public net.htmlparser.jericho.Element getNextElement(int, java.lang.String, java.util.regex.Pattern)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        java.util.regex.Pattern r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag r5;
        net.htmlparser.jericho.Element $r6;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.util.regex.Pattern;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[41];
        r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.util.regex.Pattern)>(i0, r1, r2);
        r4[0] = 1;
        if r5 != null goto label1;

        $r6 = null;
        r4[1] = 1;
        goto label2;

     label1:
        $r6 = virtualinvoke r5.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        r4[2] = 1;

     label2:
        r4[3] = 1;
        return $r6;
    }

    public net.htmlparser.jericho.Element getNextElementByClass(int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTag r4;
        net.htmlparser.jericho.Element $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[42];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTagByClass(int,java.lang.String)>(i0, r1);
        r3[0] = 1;
        if r4 != null goto label1;

        $r5 = null;
        r3[1] = 1;
        goto label2;

     label1:
        $r5 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getPreviousStartTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[43];
        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getPrevious(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.StartTag getPreviousStartTag(int, net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        net.htmlparser.jericho.StartTagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag $r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.StartTagType;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[44];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getPreviousTag(int,net.htmlparser.jericho.TagType)>(i0, r1);
        $r5 = (net.htmlparser.jericho.StartTag) $r4;
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getPreviousStartTag(int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTagType $r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[45];
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getPreviousStartTag(int,java.lang.String,net.htmlparser.jericho.StartTagType)>(i0, r1, $r4);
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getPreviousStartTag(int, java.lang.String, net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        net.htmlparser.jericho.StartTagType r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: net.htmlparser.jericho.StartTagType;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[46];
        r4[0] = 1;
        if r1 == null goto label1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r4[1] = 1;

     label1:
        $r5 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getPrevious(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType)>(r0, i0, r1, r2);
        r4[2] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getNextStartTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTag $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[47];
        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.StartTag getNextStartTag(int, net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        net.htmlparser.jericho.StartTagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag $r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.StartTagType;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[48];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int,net.htmlparser.jericho.TagType)>(i0, r1);
        $r5 = (net.htmlparser.jericho.StartTag) $r4;
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getNextStartTag(int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTagType $r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[49];
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,net.htmlparser.jericho.StartTagType)>(i0, r1, $r4);
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getNextStartTag(int, java.lang.String, net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        net.htmlparser.jericho.StartTagType r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: net.htmlparser.jericho.StartTagType;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[50];
        r4[0] = 1;
        if r1 == null goto label1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r4[1] = 1;

     label1:
        $r5 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType)>(r0, i0, r1, r2);
        r4[2] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getNextStartTag(int, java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1, r2;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[51];
        $r5 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,java.lang.String,boolean)>(r0, i0, r1, r2, z0);
        r4[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getNextStartTag(int, java.lang.String, java.util.regex.Pattern)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        java.util.regex.Pattern r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.util.regex.Pattern;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[52];
        $r5 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,java.util.regex.Pattern)>(r0, i0, r1, r2);
        r4[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.StartTag getNextStartTagByClass(int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.regex.Pattern $r4;
        net.htmlparser.jericho.StartTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[53];
        $r4 = staticinvoke <net.htmlparser.jericho.Source: java.util.regex.Pattern getClassPattern(java.lang.String)>(r1);
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String,java.util.regex.Pattern)>(i0, "class", $r4);
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.EndTag getPreviousEndTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTag $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[54];
        $r3 = staticinvoke <net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTag getPrevious(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.EndTag getPreviousEndTag(int, net.htmlparser.jericho.EndTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        net.htmlparser.jericho.EndTagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag $r4;
        net.htmlparser.jericho.EndTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.EndTagType;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[55];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getPreviousTag(int,net.htmlparser.jericho.TagType)>(i0, r1);
        $r5 = (net.htmlparser.jericho.EndTag) $r4;
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.EndTag getPreviousEndTag(int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1, $r5;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.IllegalArgumentException $r4;
        net.htmlparser.jericho.EndTagType $r6;
        net.htmlparser.jericho.EndTag $r7;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[56];
        r3[0] = 1;
        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name argument must not be null");
        r3[1] = 1;
        throw $r4;

     label1:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r6 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        $r7 = staticinvoke <net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTag getPrevious(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.EndTagType)>(r0, i0, $r5, $r6);
        r3[2] = 1;
        return $r7;
    }

    public net.htmlparser.jericho.EndTag getNextEndTag(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTag $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[57];
        $r3 = staticinvoke <net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTag getNext(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.EndTag getNextEndTag(int, net.htmlparser.jericho.EndTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        net.htmlparser.jericho.EndTagType r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag $r4;
        net.htmlparser.jericho.EndTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.EndTagType;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[58];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int,net.htmlparser.jericho.TagType)>(i0, r1);
        $r5 = (net.htmlparser.jericho.EndTag) $r4;
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.EndTag getNextEndTag(int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.EndTagType $r4;
        net.htmlparser.jericho.EndTag $r5;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[59];
        $r4 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.EndTag getNextEndTag(int,java.lang.String,net.htmlparser.jericho.EndTagType)>(i0, r1, $r4);
        r3[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.EndTag getNextEndTag(int, java.lang.String, net.htmlparser.jericho.EndTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1, $r6;
        net.htmlparser.jericho.EndTagType r2;
        boolean[][] $r3;
        boolean[] r4;
        java.lang.IllegalArgumentException $r5;
        net.htmlparser.jericho.EndTag $r7;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: net.htmlparser.jericho.EndTagType;
        $r3 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r4 = $r3[60];
        r4[0] = 1;
        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name argument must not be null");
        r4[1] = 1;
        throw $r5;

     label1:
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r7 = staticinvoke <net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.EndTagType)>(r0, i0, $r6, r2);
        r4[2] = 1;
        return $r7;
    }

    public net.htmlparser.jericho.Element getEnclosingElement(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Element $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[61];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Element getEnclosingElement(int,java.lang.String)>(i0, null);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Element getEnclosingElement(int, java.lang.String)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean z0;
        net.htmlparser.jericho.StartTag r4;
        net.htmlparser.jericho.Element r5;
        net.htmlparser.jericho.StartTagType $r6;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[62];
        i1 = i0;
        r3[0] = 1;
        if r1 == null goto label1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r3[1] = 1;

     label1:
        z0 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLName(java.lang.CharSequence)>(r1);
        r3[2] = 1;

     label2:
        $r6 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r4 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getPrevious(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>(r0, i1, r1, $r6, z0);
        r3[3] = 1;
        if r4 != null goto label3;

        r3[4] = 1;
        return null;

     label3:
        r5 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i2 = r5.<net.htmlparser.jericho.Element: int end>;
        r3[5] = 1;
        if i0 >= $i2 goto label4;

        r3[6] = 1;
        return r5;

     label4:
        $i3 = r4.<net.htmlparser.jericho.StartTag: int begin>;
        i1 = $i3 - 1;
        r3[7] = 1;
        goto label2;
    }

    public net.htmlparser.jericho.CharacterReference getPreviousCharacterReference(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.CharacterReference $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[63];
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference getPrevious(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.CharacterReference getNextCharacterReference(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.CharacterReference $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[64];
        $r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference getNext(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    public int getNameEnd(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IndexOutOfBoundsException r3, $r6;
        java.lang.CharSequence $r4, $r5;
        char $c2, $c3;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[65];
        $r4 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        i1 = i0 + 1;
        $c2 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>(i0);
        $z0 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLNameStartChar(char)>($c2);
        r2[0] = 1;
        if $z0 != 0 goto label1;

        r2[1] = 1;
        return -1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        $c3 = interfaceinvoke $r5.<java.lang.CharSequence: char charAt(int)>(i1);
        $z1 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLNameChar(char)>($c3);
        r2[2] = 1;
        if $z1 == 0 goto label2;

        i1 = i1 + 1;
        r2[3] = 1;
        goto label1;

     label2:
        r2[4] = 1;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;
        r3 = $r6;
        r2[5] = 1;

     label5:
        r2[6] = 1;
        return i1;

        catch java.lang.IndexOutOfBoundsException from label1 to label3 with label4;
    }

    public net.htmlparser.jericho.Attributes parseAttributes(int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Attributes $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[66];
        $i2 = staticinvoke <net.htmlparser.jericho.Attributes: int getDefaultMaxErrorCount()>();
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Attributes parseAttributes(int,int,int)>(i0, i1, $i2);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Attributes parseAttributes(int, int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Attributes $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[67];
        $r3 = staticinvoke <net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source,int,int,int)>(r0, i0, i1, i2);
        r2[0] = 1;
        return $r3;
    }

    public void ignoreWhenParsing(int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        net.htmlparser.jericho.OutputDocument $r4, $r5, $r7;
        net.htmlparser.jericho.ParseText $r6;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[68];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.Source: boolean wasFullSequentialParseCalled()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ignoreWhenParsing can not be used after a full sequential parse has been performed");
        r2[1] = 1;
        throw $r3;

     label1:
        $r4 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument>;
        r2[2] = 1;
        if $r4 != null goto label2;

        $r5 = new net.htmlparser.jericho.OutputDocument;
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        specialinvoke $r5.<net.htmlparser.jericho.OutputDocument: void <init>(net.htmlparser.jericho.ParseText)>($r6);
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument> = $r5;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText> = null;
        r2[3] = 1;

     label2:
        $r7 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument>;
        virtualinvoke $r7.<net.htmlparser.jericho.OutputDocument: void replaceWithSpaces(int,int)>(i0, i1);
        r2[4] = 1;
        return;
    }

    public void ignoreWhenParsing(java.util.Collection)
    {
        net.htmlparser.jericho.Source r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.Segment r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[69];
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.Segment) $r6;
        virtualinvoke r5.<net.htmlparser.jericho.Segment: void ignoreWhenParsing()>();
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    public void setLogger(net.htmlparser.jericho.Logger)
    {
        net.htmlparser.jericho.Source r0;
        net.htmlparser.jericho.Logger r1, $r5;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.Source;
        r1 := @parameter0: net.htmlparser.jericho.Logger;
        $r2 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r3 = $r2[70];
        r3[0] = 1;
        if r1 == null goto label1;

        $r5 = r1;
        r3[1] = 1;
        goto label2;

     label1:
        $r5 = <net.htmlparser.jericho.LoggerDisabled: net.htmlparser.jericho.LoggerDisabled INSTANCE>;
        r3[2] = 1;

     label2:
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger> = $r5;
        r3[3] = 1;
        return;
    }

    public net.htmlparser.jericho.Logger getLogger()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Logger $r3, $r5;
        net.htmlparser.jericho.LoggerDisabled $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[71];
        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r4 = <net.htmlparser.jericho.LoggerDisabled: net.htmlparser.jericho.LoggerDisabled INSTANCE>;
        r2[0] = 1;
        if $r3 == $r4 goto label1;

        $r5 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        r2[1] = 1;
        goto label2;

     label1:
        $r5 = null;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r5;
    }

    public void clearCache()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Cache $r3;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[72];
        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        virtualinvoke $r3.<net.htmlparser.jericho.Cache: void clear()>();
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] allTagsArray> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allTags> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allStartTags> = null;
        r0.<net.htmlparser.jericho.Source: java.util.List allElements> = null;
        r2[0] = 1;
        return;
    }

    public java.lang.String getCacheDebugInfo()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Cache $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[73];
        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Cache: java.lang.String toString()>();
        r2[0] = 1;
        return $r4;
    }

    java.util.List getParsedTags()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList r3, $r5;
        java.util.Iterator r4;
        net.htmlparser.jericho.Cache $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[74];
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r3 = $r5;
        $r6 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        r4 = virtualinvoke $r6.<net.htmlparser.jericho.Cache: java.util.Iterator getTagIterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return r3;
    }

    public final net.htmlparser.jericho.ParseText getParseText()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.ParseText $r3, $r10;
        net.htmlparser.jericho.OutputDocument $r4, $r6;
        net.htmlparser.jericho.CharSequenceParseText $r5, $r8;
        java.lang.String $r7;
        java.lang.CharSequence $r9;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[75];
        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText>;
        r2[0] = 1;
        if $r3 != null goto label2;

        $r4 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument>;
        r2[1] = 1;
        if $r4 == null goto label1;

        $r5 = new net.htmlparser.jericho.CharSequenceParseText;
        $r6 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.OutputDocument: java.lang.String toString()>();
        specialinvoke $r5.<net.htmlparser.jericho.CharSequenceParseText: void <init>(java.lang.CharSequence)>($r7);
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText> = $r5;
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.OutputDocument parseTextOutputDocument> = null;
        r2[2] = 1;
        goto label2;

     label1:
        $r8 = new net.htmlparser.jericho.CharSequenceParseText;
        $r9 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        specialinvoke $r8.<net.htmlparser.jericho.CharSequenceParseText: void <init>(java.lang.CharSequence)>($r9);
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText> = $r8;
        r2[3] = 1;

     label2:
        $r10 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText parseText>;
        r2[4] = 1;
        return $r10;
    }

    public final java.lang.CharSequence subSequence(int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3, $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[76];
        $r3 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);
        r2[0] = 1;
        return $r4;
    }

    final java.lang.String substring(int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[77];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.CharSequence subSequence(int,int)>(i0, i1);
        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();
        r2[0] = 1;
        return $r4;
    }

    final java.lang.String getName(int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[78];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: java.lang.String substring(int,int)>(i0, i1);
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        r2[0] = 1;
        return $r4;
    }

    public final char charAt(int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        char $c1;

        r0 := @this: net.htmlparser.jericho.Source;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[79];
        $r3 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        $c1 = interfaceinvoke $r3.<java.lang.CharSequence: char charAt(int)>(i0);
        r2[0] = 1;
        return $c1;
    }

    public final int length()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[80];
        $r3 = r0.<net.htmlparser.jericho.Source: java.lang.CharSequence sourceText>;
        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();
        r2[0] = 1;
        return $i0;
    }

    boolean wasFullSequentialParseCalled()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag[] $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[81];
        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] allTagsArray>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    static java.lang.String getCharsetParameterFromHttpHeaderValue(java.lang.String)
    {
        java.lang.String r0, r3, $r4, $r5, $r6;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, i2;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[82];
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();
        i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("charset=");
        r2[0] = 1;
        if i0 != -1 goto label1;

        r2[1] = 1;
        return null;

     label1:
        i1 = i0 + 8;
        i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, i1);
        r2[2] = 1;
        if i2 != -1 goto label2;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i1);
        r2[3] = 1;
        goto label3;

     label2:
        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);
        r2[4] = 1;

     label3:
        r3 = $r5;
        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();
        r2[5] = 1;
        return $r6;
    }

    static net.htmlparser.jericho.Logger newLogger()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Logger $r2;

        $r0 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r1 = $r0[83];
        $r2 = staticinvoke <net.htmlparser.jericho.LoggerFactory: net.htmlparser.jericho.Logger getLogger(java.lang.String)>("net.htmlparser.jericho");
        r1[0] = 1;
        return $r2;
    }

    private static java.lang.String getString(net.htmlparser.jericho.EncodingDetector) throws java.io.IOException
    {
        net.htmlparser.jericho.EncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r7;
        net.htmlparser.jericho.Logger r4;
        java.io.Reader $r5;
        java.lang.String $r6, $r11, $r14, $r17, $r20, $r22;
        net.htmlparser.jericho.LoggerQueue $r8;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21;
        java.lang.Exception $r23, r24;

        r0 := @parameter0: net.htmlparser.jericho.EncodingDetector;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[84];

     label1:
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.EncodingDetector: java.io.Reader openReader()>();
        $r6 = staticinvoke <net.htmlparser.jericho.Util: java.lang.String getString(java.io.Reader)>($r5);
        r2[0] = 1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;

     label4:
        r4 = staticinvoke <net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger newLogger()>();
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.EncodingDetector: net.htmlparser.jericho.LoggerQueue getLoggerQueue()>();
        virtualinvoke $r8.<net.htmlparser.jericho.LoggerQueue: void outputTo(net.htmlparser.jericho.Logger)>(r4);
        $z0 = interfaceinvoke r4.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r2[1] = 1;
        if $z0 == 0 goto label5;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException constructing encoded source. Encoding: ");
        $r11 = virtualinvoke r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String getEncoding()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");
        $r14 = virtualinvoke r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String getEncodingSpecificationInfo()>();
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". PreliminaryEncoding: ");
        $r17 = virtualinvoke r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String getPreliminaryEncoding()>();
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");
        $r20 = virtualinvoke r0.<net.htmlparser.jericho.EncodingDetector: java.lang.String getPreliminaryEncodingSpecificationInfo()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke r4.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r22);
        r2[2] = 1;

     label5:
        r2[3] = 1;

     label6:
        goto label8;

     label7:
        $r23 := @caughtexception;
        r24 = $r23;
        r2[4] = 1;

     label8:
        r2[5] = 1;
        throw r3;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label6 with label7;
    }

    final boolean isStreamed()
    {
        net.htmlparser.jericho.Source r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Cache $r3, $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Source;
        $r1 = <net.htmlparser.jericho.Source: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();

     label0:
        r2 = $r1[85];
        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        $r4 = <net.htmlparser.jericho.Cache: net.htmlparser.jericho.Cache STREAMED_SOURCE_MARKER>;
        r2[0] = 1;
        if $r3 != $r4 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.Source: boolean[][] $VRi()>();
        r1 = $r0[86];
        <net.htmlparser.jericho.Source: java.lang.String lastNewLine> = null;
        <net.htmlparser.jericho.Source: boolean LegacyIteratorCompatabilityMode> = 0;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87;

        $r0 = newmultiarray (boolean)[87][];
        <net.htmlparser.jericho.Source: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[3];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[18];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[3];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[3];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[7];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[15];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[5];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[5];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[6];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[14];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[1];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[3];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[7];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[7];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[5];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[5];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[1];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[1];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[4];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[4];
        $r0[38] = $r39;
        $r40 = newarray (boolean)[4];
        $r0[39] = $r40;
        $r41 = newarray (boolean)[4];
        $r0[40] = $r41;
        $r42 = newarray (boolean)[4];
        $r0[41] = $r42;
        $r43 = newarray (boolean)[4];
        $r0[42] = $r43;
        $r44 = newarray (boolean)[1];
        $r0[43] = $r44;
        $r45 = newarray (boolean)[1];
        $r0[44] = $r45;
        $r46 = newarray (boolean)[1];
        $r0[45] = $r46;
        $r47 = newarray (boolean)[3];
        $r0[46] = $r47;
        $r48 = newarray (boolean)[1];
        $r0[47] = $r48;
        $r49 = newarray (boolean)[1];
        $r0[48] = $r49;
        $r50 = newarray (boolean)[1];
        $r0[49] = $r50;
        $r51 = newarray (boolean)[3];
        $r0[50] = $r51;
        $r52 = newarray (boolean)[1];
        $r0[51] = $r52;
        $r53 = newarray (boolean)[1];
        $r0[52] = $r53;
        $r54 = newarray (boolean)[1];
        $r0[53] = $r54;
        $r55 = newarray (boolean)[1];
        $r0[54] = $r55;
        $r56 = newarray (boolean)[1];
        $r0[55] = $r56;
        $r57 = newarray (boolean)[3];
        $r0[56] = $r57;
        $r58 = newarray (boolean)[1];
        $r0[57] = $r58;
        $r59 = newarray (boolean)[1];
        $r0[58] = $r59;
        $r60 = newarray (boolean)[1];
        $r0[59] = $r60;
        $r61 = newarray (boolean)[3];
        $r0[60] = $r61;
        $r62 = newarray (boolean)[1];
        $r0[61] = $r62;
        $r63 = newarray (boolean)[8];
        $r0[62] = $r63;
        $r64 = newarray (boolean)[1];
        $r0[63] = $r64;
        $r65 = newarray (boolean)[1];
        $r0[64] = $r65;
        $r66 = newarray (boolean)[7];
        $r0[65] = $r66;
        $r67 = newarray (boolean)[1];
        $r0[66] = $r67;
        $r68 = newarray (boolean)[1];
        $r0[67] = $r68;
        $r69 = newarray (boolean)[5];
        $r0[68] = $r69;
        $r70 = newarray (boolean)[4];
        $r0[69] = $r70;
        $r71 = newarray (boolean)[4];
        $r0[70] = $r71;
        $r72 = newarray (boolean)[4];
        $r0[71] = $r72;
        $r73 = newarray (boolean)[1];
        $r0[72] = $r73;
        $r74 = newarray (boolean)[1];
        $r0[73] = $r74;
        $r75 = newarray (boolean)[4];
        $r0[74] = $r75;
        $r76 = newarray (boolean)[5];
        $r0[75] = $r76;
        $r77 = newarray (boolean)[1];
        $r0[76] = $r77;
        $r78 = newarray (boolean)[1];
        $r0[77] = $r78;
        $r79 = newarray (boolean)[1];
        $r0[78] = $r79;
        $r80 = newarray (boolean)[1];
        $r0[79] = $r80;
        $r81 = newarray (boolean)[1];
        $r0[80] = $r81;
        $r82 = newarray (boolean)[4];
        $r0[81] = $r82;
        $r83 = newarray (boolean)[6];
        $r0[82] = $r83;
        $r84 = newarray (boolean)[1];
        $r0[83] = $r84;
        $r85 = newarray (boolean)[6];
        $r0[84] = $r85;
        $r86 = newarray (boolean)[4];
        $r0[85] = $r86;
        $r87 = newarray (boolean)[1];
        $r0[86] = $r87;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Source", 549532403581819981L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.SourceCompactor extends java.lang.Object implements net.htmlparser.jericho.CharStreamSource
{
    private final net.htmlparser.jericho.Segment segment;
    private java.lang.String newLine;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.SourceCompactor r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.SourceCompactor;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.SourceCompactor: java.lang.String newLine> = null;
        r0.<net.htmlparser.jericho.SourceCompactor: net.htmlparser.jericho.Segment segment> = r1;
        r3[0] = 1;
        return;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceCompactor r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.SourceCompactor;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        virtualinvoke r0.<net.htmlparser.jericho.SourceCompactor: void appendTo(java.lang.Appendable)>(r1);
        virtualinvoke r1.<java.io.Writer: void flush()>();
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceCompactor r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.SourceFormatter $r4, $r6, $r8, $r9;
        net.htmlparser.jericho.Segment $r5;
        java.lang.String $r7;

        r0 := @this: net.htmlparser.jericho.SourceCompactor;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = new net.htmlparser.jericho.SourceFormatter;
        $r5 = r0.<net.htmlparser.jericho.SourceCompactor: net.htmlparser.jericho.Segment segment>;
        specialinvoke $r4.<net.htmlparser.jericho.SourceFormatter: void <init>(net.htmlparser.jericho.Segment)>($r5);
        $r6 = virtualinvoke $r4.<net.htmlparser.jericho.SourceFormatter: net.htmlparser.jericho.SourceFormatter setTidyTags(boolean)>(1);
        $r7 = r0.<net.htmlparser.jericho.SourceCompactor: java.lang.String newLine>;
        $r8 = virtualinvoke $r6.<net.htmlparser.jericho.SourceFormatter: net.htmlparser.jericho.SourceFormatter setNewLine(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<net.htmlparser.jericho.SourceFormatter: net.htmlparser.jericho.SourceFormatter setRemoveLineBreaks(boolean)>(1);
        virtualinvoke $r9.<net.htmlparser.jericho.SourceFormatter: void appendTo(java.lang.Appendable)>(r1);
        r3[0] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.SourceCompactor r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;
        int $i0;
        long $l1;

        r0 := @this: net.htmlparser.jericho.SourceCompactor;
        $r1 = <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.SourceCompactor: net.htmlparser.jericho.Segment segment>;
        $i0 = virtualinvoke $r3.<net.htmlparser.jericho.Segment: int length()>();
        $l1 = (long) $i0;
        r2[0] = 1;
        return $l1;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.SourceCompactor r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.SourceCompactor;
        $r1 = <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: java.lang.String toString(net.htmlparser.jericho.CharStreamSource)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.SourceCompactor setNewLine(java.lang.String)
    {
        net.htmlparser.jericho.SourceCompactor r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.SourceCompactor;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r0.<net.htmlparser.jericho.SourceCompactor: java.lang.String newLine> = r1;
        r3[0] = 1;
        return r0;
    }

    public java.lang.String getNewLine()
    {
        net.htmlparser.jericho.SourceCompactor r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r6, $r7;
        net.htmlparser.jericho.Segment $r4;
        net.htmlparser.jericho.Source $r5;

        r0 := @this: net.htmlparser.jericho.SourceCompactor;
        $r1 = <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.SourceCompactor: java.lang.String newLine>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = r0.<net.htmlparser.jericho.SourceCompactor: net.htmlparser.jericho.Segment segment>;
        $r5 = $r4.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Source: java.lang.String getBestGuessNewLine()>();
        r0.<net.htmlparser.jericho.SourceCompactor: java.lang.String newLine> = $r6;
        r2[1] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.SourceCompactor: java.lang.String newLine>;
        r2[2] = 1;
        return $r7;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <net.htmlparser.jericho.SourceCompactor: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SourceCompactor", -8575048789092001314L);
        return $r0;
    }
}
final class net.htmlparser.jericho.SourceFormatter$Processor extends java.lang.Object
{
    private final net.htmlparser.jericho.Segment segment;
    private final java.lang.CharSequence sourceText;
    private final java.lang.String indentString;
    private final boolean tidyTags;
    private final boolean collapseWhiteSpace;
    private final boolean removeLineBreaks;
    private final boolean indentAllElements;
    private final boolean indentScriptElements;
    private final java.lang.String newLine;
    private java.lang.Appendable appendable;
    private net.htmlparser.jericho.Tag nextTag;
    private int index;
    static final boolean $assertionsDisabled;
    private static final boolean[][] $VRc;

    public void <init>(net.htmlparser.jericho.Segment, java.lang.String, boolean, boolean, boolean, boolean, boolean, java.lang.String)
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        net.htmlparser.jericho.Segment r1;
        java.lang.String r2, r3, $r7;
        boolean z0, z1, z2, z3, z4, $z5;
        boolean[][] $r4;
        boolean[] r5;
        net.htmlparser.jericho.Source $r6;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        z2 := @parameter4: boolean;
        z3 := @parameter5: boolean;
        z4 := @parameter6: boolean;
        r3 := @parameter7: java.lang.String;
        $r4 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Segment segment> = r1;
        $r6 = r1.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Source: java.lang.String toString()>();
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText> = $r7;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.String indentString> = r2;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean tidyTags> = z0;
        r5[0] = 1;
        if z1 != 0 goto label1;

        r5[1] = 1;
        if z2 == 0 goto label2;

     label1:
        $z5 = 1;
        r5[2] = 1;
        goto label3;

     label2:
        $z5 = 0;
        r5[3] = 1;

     label3:
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean collapseWhiteSpace> = $z5;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean removeLineBreaks> = z2;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean indentAllElements> = z3;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean indentScriptElements> = z4;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.String newLine> = r3;
        r5[4] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Segment $r4, $r5, $r8, $r10, $r12, $r13, $r14;
        boolean $z0;
        net.htmlparser.jericho.Source $r6, $r9;
        int $i0, $i1, $i2;
        net.htmlparser.jericho.Tag $r11;
        java.util.List $r15;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable> = r1;
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Segment segment>;
        $z0 = $r4 instanceof net.htmlparser.jericho.Source;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Segment segment>;
        $r6 = (net.htmlparser.jericho.Source) $r5;
        virtualinvoke $r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] fullSequentialParse()>();
        r3[1] = 1;

     label1:
        $r8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Segment segment>;
        $r9 = $r8.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $r10 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Segment segment>;
        $i0 = $r10.<net.htmlparser.jericho.Segment: int begin>;
        $r11 = virtualinvoke $r9.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int)>($i0);
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag> = $r11;
        $r12 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Segment segment>;
        $i1 = $r12.<net.htmlparser.jericho.Segment: int begin>;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i1;
        $r13 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Segment segment>;
        $i2 = $r13.<net.htmlparser.jericho.Segment: int end>;
        $r14 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Segment segment>;
        $r15 = virtualinvoke $r14.<net.htmlparser.jericho.Segment: java.util.List getChildElements()>();
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendContent(int,java.util.List,int)>($i2, $r15, 0);
        r3[2] = 1;
        return;
    }

    private void appendContent(int, java.util.List, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, i2, $i3, $i6;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        net.htmlparser.jericho.Element r5;
        java.lang.String r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.AssertionError $r7, $r11;
        java.lang.Object $r8;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        r1 := @parameter1: java.util.List;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $z0 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[0] = 1;
        if $z0 != 0 goto label1;

        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[1] = 1;
        if $i3 <= i0 goto label1;

        $r7 = new java.lang.AssertionError;
        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();
        r3[2] = 1;
        throw $r7;

     label1:
        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();
        r3[3] = 1;

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[4] = 1;
        if $z1 == 0 goto label12;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (net.htmlparser.jericho.Element) $r8;
        i2 = r5.<net.htmlparser.jericho.Element: int begin>;
        r3[5] = 1;
        if i2 < i0 goto label3;

        r3[6] = 1;
        goto label12;

     label3:
        $z2 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean indentAllElements>;
        r3[7] = 1;
        if $z2 == 0 goto label4;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendText(int,int)>(i2, i1);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendElement(net.htmlparser.jericho.Element,int,int,boolean,boolean)>(r5, i1, i0, 0, 0);
        r3[8] = 1;
        goto label11;

     label4:
        $z3 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean inlinable(net.htmlparser.jericho.Element)>(r5);
        r3[9] = 1;
        if $z3 == 0 goto label5;

        r3[10] = 1;
        goto label2;

     label5:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendText(int,int)>(i2, i1);
        r6 = virtualinvoke r5.<net.htmlparser.jericho.Element: java.lang.String getName()>();
        r3[11] = 1;
        if r6 == "pre" goto label6;

        r3[12] = 1;
        if r6 != "textarea" goto label7;

     label6:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendElement(net.htmlparser.jericho.Element,int,int,boolean,boolean)>(r5, i1, i0, 1, 1);
        r3[13] = 1;
        goto label11;

     label7:
        r3[14] = 1;
        if r6 != "script" goto label8;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendElement(net.htmlparser.jericho.Element,int,int,boolean,boolean)>(r5, i1, i0, 1, 0);
        r3[15] = 1;
        goto label11;

     label8:
        $z4 = 0;
        $z5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean removeLineBreaks>;
        r3[16] = 1;
        if $z5 != 0 goto label9;

        $z6 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean containsOnlyInlineLevelChildElements(net.htmlparser.jericho.Element)>(r5);
        r3[17] = 1;
        if $z6 == 0 goto label9;

        $z7 = 1;
        r3[18] = 1;
        goto label10;

     label9:
        $z7 = 0;
        r3[19] = 1;

     label10:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendElement(net.htmlparser.jericho.Element,int,int,boolean,boolean)>(r5, i1, i0, $z4, $z7);
        r3[20] = 1;

     label11:
        r3[21] = 1;
        goto label2;

     label12:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendText(int,int)>(i0, i1);
        $z8 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[22] = 1;
        if $z8 != 0 goto label13;

        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[23] = 1;
        if $i6 == i0 goto label13;

        $r11 = new java.lang.AssertionError;
        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();
        r3[24] = 1;
        throw $r11;

     label13:
        r3[25] = 1;
        return;
    }

    private boolean inlinable(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        net.htmlparser.jericho.Element r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTagType r4, $r7;
        java.lang.String r5;
        net.htmlparser.jericho.StartTag $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r8;
        java.util.Set $r9;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        $r2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r6 = virtualinvoke r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        r4 = virtualinvoke $r6.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $r7 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r3[0] = 1;
        if r4 == $r7 goto label1;

        r3[1] = 1;
        return 1;

     label1:
        r5 = virtualinvoke r1.<net.htmlparser.jericho.Element: java.lang.String getName()>();
        r3[2] = 1;
        if r5 != "script" goto label4;

        $z0 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean indentScriptElements>;
        r3[3] = 1;
        if $z0 != 0 goto label2;

        $z1 = 1;
        r3[4] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r3[5] = 1;

     label3:
        r3[6] = 1;
        return $z1;

     label4:
        $z2 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean removeLineBreaks>;
        r3[7] = 1;
        if $z2 == 0 goto label5;

        $r8 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.List getElementNames()>();
        $z3 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>(r5);
        r3[8] = 1;
        if $z3 != 0 goto label5;

        r3[9] = 1;
        return 1;

     label5:
        $r9 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.Set getInlineLevelElementNames()>();
        $z4 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r5);
        r3[10] = 1;
        if $z4 != 0 goto label6;

        r3[11] = 1;
        return 0;

     label6:
        $z5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean removeLineBreaks>;
        r3[12] = 1;
        if $z5 == 0 goto label7;

        r3[13] = 1;
        return 1;

     label7:
        r3[14] = 1;
        if r5 != "textarea" goto label8;

        r3[15] = 1;
        return 0;

     label8:
        $z6 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean containsOnlyInlineLevelChildElements(net.htmlparser.jericho.Element)>(r1);
        r3[16] = 1;
        return $z6;
    }

    private void appendText(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1, $z2, $z4;
        java.lang.AssertionError $r3, $r6;
        java.lang.CharSequence $r4;
        char $c5;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $z0 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $i2 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i2 <= i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[3] = 1;
        if $i3 != i0 goto label2;

        r2[4] = 1;
        return;

     label2:
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $c5 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>($i4);
        $z1 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c5);
        r2[5] = 1;
        if $z1 == 0 goto label3;

        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i7 = $i6 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i7;
        r2[6] = 1;
        if $i7 != i0 goto label2;

        r2[7] = 1;
        return;

     label3:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i1);
        $z2 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean collapseWhiteSpace>;
        r2[8] = 1;
        if $z2 == 0 goto label4;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTextCollapseWhiteSpace(int,int)>(i0, i1);
        r2[9] = 1;
        goto label5;

     label4:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean appendTextInline(int,int,boolean)>(i0, i1, 0);
        r2[10] = 1;

     label5:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendFormattingNewLine()>();
        $z4 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[11] = 1;
        if $z4 != 0 goto label6;

        $i8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[12] = 1;
        if $i8 == i0 goto label6;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        r2[13] = 1;
        throw $r6;

     label6:
        r2[14] = 1;
        return;
    }

    private void appendElement(net.htmlparser.jericho.Element, int, int, boolean, boolean) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        net.htmlparser.jericho.Element r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTag r4;
        net.htmlparser.jericho.EndTag r5;
        java.lang.AssertionError $r6, $r7, $r8, $r10, $r11;
        java.util.List $r9;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        $r2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $z2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[0] = 1;
        if $z2 != 0 goto label1;

        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i4 = r1.<net.htmlparser.jericho.Element: int begin>;
        r3[1] = 1;
        if $i3 == $i4 goto label1;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        r3[2] = 1;
        throw $r6;

     label1:
        $z3 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[3] = 1;
        if $z3 != 0 goto label2;

        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[4] = 1;
        if $i5 < i1 goto label2;

        $r7 = new java.lang.AssertionError;
        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();
        r3[5] = 1;
        throw $r7;

     label2:
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.StartTag getStartTag()>();
        r5 = virtualinvoke r1.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag getEndTag()>();
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i0);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTag(net.htmlparser.jericho.Tag,int,int)>(r4, i0, i1);
        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[6] = 1;
        if $i6 != i1 goto label4;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendFormattingNewLine()>();
        $z4 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[7] = 1;
        if $z4 != 0 goto label3;

        $i7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i8 = r1.<net.htmlparser.jericho.Element: int end>;
        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, i1);
        r3[8] = 1;
        if $i7 == $i9 goto label3;

        $r8 = new java.lang.AssertionError;
        $i10 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        specialinvoke $r8.<java.lang.AssertionError: void <init>(int)>($i10);
        r3[9] = 1;
        throw $r8;

     label3:
        r3[10] = 1;
        return;

     label4:
        r3[11] = 1;
        if z1 != 0 goto label5;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendFormattingNewLine()>();
        r3[12] = 1;

     label5:
        i2 = virtualinvoke r1.<net.htmlparser.jericho.Element: int getContentEnd()>();
        r3[13] = 1;
        if i1 >= i2 goto label6;

        i2 = i1;
        r3[14] = 1;

     label6:
        $i11 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[15] = 1;
        if $i11 >= i2 goto label11;

        r3[16] = 1;
        if z0 == 0 goto label8;

        r3[17] = 1;
        if z1 == 0 goto label7;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendContentPreformatted(int,int)>(i2, i0);
        r3[18] = 1;
        goto label11;

     label7:
        $i12 = i0 + 1;
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndentedScriptContent(int,int)>(i2, $i12);
        r3[19] = 1;
        goto label11;

     label8:
        r3[20] = 1;
        if z1 == 0 goto label10;

        $z5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean collapseWhiteSpace>;
        r3[21] = 1;
        if $z5 == 0 goto label9;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTextCollapseWhiteSpace(int,int)>(i2, i0);
        r3[22] = 1;
        goto label11;

     label9:
        $z6 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean appendTextInline(int,int,boolean)>(i2, i0, 1);
        r3[23] = 1;
        if $z6 != 0 goto label11;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendFormattingNewLine()>();
        z1 = 0;
        r3[24] = 1;
        goto label11;

     label10:
        $r9 = virtualinvoke r1.<net.htmlparser.jericho.Element: java.util.List getChildElements()>();
        $i13 = i0 + 1;
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendContent(int,java.util.List,int)>(i2, $r9, $i13);
        r3[25] = 1;

     label11:
        r3[26] = 1;
        if r5 == null goto label14;

        $i14 = r5.<net.htmlparser.jericho.EndTag: int begin>;
        r3[27] = 1;
        if i1 <= $i14 goto label14;

        r3[28] = 1;
        if z1 != 0 goto label12;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i0);
        r3[29] = 1;

     label12:
        $z7 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[30] = 1;
        if $z7 != 0 goto label13;

        $i15 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i16 = r5.<net.htmlparser.jericho.EndTag: int begin>;
        r3[31] = 1;
        if $i15 == $i16 goto label13;

        $r10 = new java.lang.AssertionError;
        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();
        r3[32] = 1;
        throw $r10;

     label13:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTag(net.htmlparser.jericho.Tag,int,int)>(r5, i0, i1);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendFormattingNewLine()>();
        r3[33] = 1;
        goto label15;

     label14:
        r3[34] = 1;
        if z1 == 0 goto label15;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendFormattingNewLine()>();
        r3[35] = 1;

     label15:
        $z8 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[36] = 1;
        if $z8 != 0 goto label16;

        $i17 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i18 = r1.<net.htmlparser.jericho.Element: int end>;
        $i19 = staticinvoke <java.lang.Math: int min(int,int)>($i18, i1);
        r3[37] = 1;
        if $i17 == $i19 goto label16;

        $r11 = new java.lang.AssertionError;
        $i20 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        specialinvoke $r11.<java.lang.AssertionError: void <init>(int)>($i20);
        r3[38] = 1;
        throw $r11;

     label16:
        r3[39] = 1;
        return;
    }

    private void updateNextTag()
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag $r3, $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];

     label1:
        $r3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        r2[0] = 1;
        if $r3 == null goto label3;

        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        $i0 = $r4.<net.htmlparser.jericho.Tag: int begin>;
        $i1 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i0 < $i1 goto label2;

        r2[2] = 1;
        return;

     label2:
        $r5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag()>();
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag> = $r6;
        r2[3] = 1;
        goto label1;

     label3:
        r2[4] = 1;
        return;
    }

    private void appendIndentedScriptContent(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1, $z3, $z4;
        java.lang.AssertionError $r3, $r4, $r5;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $z0 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i3 < i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        $z1 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean removeLineBreaks>;
        r2[3] = 1;
        if $z1 == 0 goto label3;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean appendTextRemoveIndentation(int)>(i0);
        $z3 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[4] = 1;
        if $z3 != 0 goto label2;

        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[5] = 1;
        if $i4 == i0 goto label2;

        $r4 = new java.lang.AssertionError;
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
        r2[6] = 1;
        throw $r4;

     label2:
        r2[7] = 1;
        return;

     label3:
        i2 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: int getStartOfLinePos(int,boolean)>(i0, 0);
        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[8] = 1;
        if $i5 != i0 goto label4;

        r2[9] = 1;
        return;

     label4:
        r2[10] = 1;
        if i2 != -1 goto label6;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i1);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendLineKeepWhiteSpace(int,int)>(i0, i1);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendEssentialNewLine()>();
        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[11] = 1;
        if $i6 != i0 goto label5;

        r2[12] = 1;
        return;

     label5:
        i2 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: int getStartOfLinePos(int,boolean)>(i0, 1);
        $i7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[13] = 1;
        if $i7 != i0 goto label6;

        r2[14] = 1;
        return;

     label6:
        $i8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i9 = $i8 - i2;
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTextPreserveIndentation(int,int,int)>(i0, i1, $i9);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendEssentialNewLine()>();
        $z4 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[15] = 1;
        if $z4 != 0 goto label7;

        $i10 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[16] = 1;
        if $i10 == i0 goto label7;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        r2[17] = 1;
        throw $r5;

     label7:
        r2[18] = 1;
        return;
    }

    private boolean appendTextPreserveIndentation(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.AssertionError $r3, $r4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $z0 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i3 < i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        $z1 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean removeLineBreaks>;
        r2[3] = 1;
        if $z1 == 0 goto label2;

        $z2 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean appendTextRemoveIndentation(int)>(i0);
        r2[4] = 1;
        return $z2;

     label2:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendLineKeepWhiteSpace(int,int)>(i0, i1);
        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[5] = 1;
        if $i4 != i0 goto label3;

        r2[6] = 1;
        return 1;

     label3:
        i2 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: int getStartOfLinePos(int,boolean)>(i0, 1);
        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[7] = 1;
        if $i5 != i0 goto label4;

        r2[8] = 1;
        return 1;

     label4:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendEssentialNewLine()>();
        $i6 = i1 + 1;
        $i7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i8 = $i7 - i2;
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTextPreserveIndentation(int,int,int)>(i0, $i6, $i8);
        $z3 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[9] = 1;
        if $z3 != 0 goto label5;

        $i9 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[10] = 1;
        if $i9 == i0 goto label5;

        $r4 = new java.lang.AssertionError;
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();
        r2[11] = 1;
        throw $r4;

     label5:
        r2[12] = 1;
        return 0;
    }

    private void appendTextPreserveIndentation(int, int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean[][] $r1;
        boolean[] r2;
        char c4;
        boolean $z0, $z1;
        java.lang.AssertionError $r3, $r6;
        java.lang.CharSequence $r4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $z0 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i5 < i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i1);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendLineKeepWhiteSpace(int,int)>(i0, i1);
        r2[3] = 1;

     label2:
        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[4] = 1;
        if $i6 == i0 goto label7;

        i3 = 0;
        r2[5] = 1;

     label3:
        r2[6] = 1;
        if i3 >= i2 goto label6;

        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $i7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        c4 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>($i7);
        r2[7] = 1;
        if c4 == 32 goto label4;

        r2[8] = 1;
        if c4 == 9 goto label4;

        r2[9] = 1;
        goto label6;

     label4:
        $i8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i9 = $i8 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i9;
        r2[10] = 1;
        if $i9 != i0 goto label5;

        r2[11] = 1;
        return;

     label5:
        i3 = i3 + 1;
        r2[12] = 1;
        goto label3;

     label6:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendEssentialNewLine()>();
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i1);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendLineKeepWhiteSpace(int,int)>(i0, i1);
        r2[13] = 1;
        goto label2;

     label7:
        $z1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[14] = 1;
        if $z1 != 0 goto label8;

        $i10 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[15] = 1;
        if $i10 == i0 goto label8;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        r2[16] = 1;
        throw $r6;

     label8:
        r2[17] = 1;
        return;
    }

    private boolean appendTextRemoveIndentation(int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean[][] $r1;
        boolean[] r2;
        char c1;
        boolean $z0, $z1;
        java.lang.AssertionError $r3, $r6;
        java.lang.CharSequence $r4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $z0 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $i2 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i2 < i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendLineKeepWhiteSpace(int,int)>(i0, 0);
        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[3] = 1;
        if $i3 != i0 goto label2;

        r2[4] = 1;
        return 1;

     label2:
        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[5] = 1;
        if $i4 == i0 goto label7;

     label3:
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        c1 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>($i5);
        r2[6] = 1;
        if c1 == 32 goto label4;

        r2[7] = 1;
        if c1 == 9 goto label4;

        r2[8] = 1;
        goto label6;

     label4:
        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i7 = $i6 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i7;
        r2[9] = 1;
        if $i7 != i0 goto label5;

        r2[10] = 1;
        return 0;

     label5:
        r2[11] = 1;
        goto label3;

     label6:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendEssentialNewLine()>();
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendLineKeepWhiteSpace(int,int)>(i0, 0);
        r2[12] = 1;
        goto label2;

     label7:
        $z1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[13] = 1;
        if $z1 != 0 goto label8;

        $i8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[14] = 1;
        if $i8 == i0 goto label8;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        r2[15] = 1;
        throw $r6;

     label8:
        r2[16] = 1;
        return 0;
    }

    private int getStartOfLinePos(int, boolean)
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        char c2;
        java.lang.CharSequence $r3;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r2[0] = 1;
        if z0 == 0 goto label1;

        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        goto label2;

     label1:
        $i3 = -1;
        r2[2] = 1;

     label2:
        i1 = $i3;
        r2[3] = 1;

     label3:
        $r3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        c2 = interfaceinvoke $r3.<java.lang.CharSequence: char charAt(int)>($i4);
        r2[4] = 1;
        if c2 == 10 goto label4;

        r2[5] = 1;
        if c2 != 13 goto label5;

     label4:
        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        i1 = $i5 + 1;
        r2[6] = 1;
        goto label6;

     label5:
        r2[7] = 1;
        if c2 == 32 goto label6;

        r2[8] = 1;
        if c2 == 9 goto label6;

        r2[9] = 1;
        goto label8;

     label6:
        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i7 = $i6 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i7;
        r2[10] = 1;
        if $i7 != i0 goto label7;

        r2[11] = 1;
        goto label8;

     label7:
        r2[12] = 1;
        goto label3;

     label8:
        r2[13] = 1;
        return i1;
    }

    private void appendSpecifiedTextInline(java.lang.CharSequence, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3;
        boolean[][] $r2;
        boolean[] r3;
        char $c4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        i2 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: int appendSpecifiedLine(java.lang.CharSequence,int)>(r1, 0);
        r3[0] = 1;
        if i2 >= i1 goto label3;

        i3 = i0 + 1;
        r3[1] = 1;

     label1:
        $c4 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i2);
        $z0 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c4);
        r3[2] = 1;
        if $z0 == 0 goto label2;

        i2 = i2 + 1;
        r3[3] = 1;
        if i2 < i1 goto label1;

        r3[4] = 1;
        return;

     label2:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendEssentialNewLine()>();
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i3);
        i2 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: int appendSpecifiedLine(java.lang.CharSequence,int)>(r1, i2);
        r3[5] = 1;
        if i2 < i1 goto label1;

     label3:
        r3[6] = 1;
        return;
    }

    private int appendSpecifiedLine(java.lang.CharSequence, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        java.lang.CharSequence r1;
        int i0, i1, i3, $i5, $i6;
        boolean[][] $r2;
        boolean[] r3;
        char c2, $c4;
        java.lang.Appendable $r4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        r3[0] = 1;

     label1:
        c2 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i0);
        r3[1] = 1;
        if c2 != 13 goto label2;

        i3 = i0 + 1;
        r3[2] = 1;
        if i3 >= i1 goto label2;

        $c4 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i3);
        r3[3] = 1;
        if $c4 != 10 goto label2;

        $i5 = i0 + 2;
        r3[4] = 1;
        return $i5;

     label2:
        r3[5] = 1;
        if c2 != 10 goto label3;

        $i6 = i0 + 1;
        r3[6] = 1;
        return $i6;

     label3:
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(char)>(c2);
        i0 = i0 + 1;
        r3[7] = 1;
        if i0 < i1 goto label4;

        r3[8] = 1;
        return i0;

     label4:
        r3[9] = 1;
        goto label1;
    }

    private boolean appendTextInline(int, int, boolean) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;
        boolean z0, $z1, $z2, $z3;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.AssertionError $r3, $r6;
        java.lang.CharSequence $r4;
        char $c7;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $z1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z1 != 0 goto label1;

        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i3 < i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendLineKeepWhiteSpace(int,int)>(i0, i1);
        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[3] = 1;
        if $i4 != i0 goto label2;

        r2[4] = 1;
        return 1;

     label2:
        r2[5] = 1;
        if z0 == 0 goto label3;

        $i5 = i1 + 1;
        r2[6] = 1;
        goto label4;

     label3:
        $i5 = i1;
        r2[7] = 1;

     label4:
        i2 = $i5;
        r2[8] = 1;

     label5:
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $c7 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>($i6);
        $z2 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c7);
        r2[9] = 1;
        if $z2 == 0 goto label6;

        $i8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i9 = $i8 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i9;
        r2[10] = 1;
        if $i9 != i0 goto label5;

        r2[11] = 1;
        return 0;

     label6:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendEssentialNewLine()>();
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i2);
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendLineKeepWhiteSpace(int,int)>(i0, i2);
        $i10 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[12] = 1;
        if $i10 < i0 goto label5;

        $z3 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[13] = 1;
        if $z3 != 0 goto label7;

        $i11 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[14] = 1;
        if $i11 == i0 goto label7;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        r2[15] = 1;
        throw $r6;

     label7:
        r2[16] = 1;
        return 0;
    }

    private void appendLineKeepWhiteSpace(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean[][] $r1;
        boolean[] r2;
        char c2, $c10;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r3, $r10, $r12;
        net.htmlparser.jericho.Tag $r4, $r5, $r6;
        java.lang.CharSequence $r7, $r8;
        java.lang.Appendable $r13;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $z0 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i4 < i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void updateNextTag()>();
        r2[3] = 1;

     label2:
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        r2[4] = 1;
        if $r4 == null goto label3;

        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $r5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        $i6 = $r5.<net.htmlparser.jericho.Tag: int begin>;
        r2[5] = 1;
        if $i5 != $i6 goto label3;

        $r6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTag(net.htmlparser.jericho.Tag,int,int)>($r6, i1, i0);
        $i7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[6] = 1;
        if $i7 != i0 goto label2;

        r2[7] = 1;
        return;

     label3:
        $r7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $i8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        c2 = interfaceinvoke $r7.<java.lang.CharSequence: char charAt(int)>($i8);
        r2[8] = 1;
        if c2 != 13 goto label5;

        $i9 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        i3 = $i9 + 1;
        r2[9] = 1;
        if i3 >= i0 goto label5;

        $r8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $c10 = interfaceinvoke $r8.<java.lang.CharSequence: char charAt(int)>(i3);
        r2[10] = 1;
        if $c10 != 10 goto label5;

        $i11 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i12 = $i11 + 2;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i12;
        $z1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[11] = 1;
        if $z1 != 0 goto label4;

        $i13 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[12] = 1;
        if $i13 <= i0 goto label4;

        $r10 = new java.lang.AssertionError;
        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();
        r2[13] = 1;
        throw $r10;

     label4:
        r2[14] = 1;
        return;

     label5:
        r2[15] = 1;
        if c2 != 10 goto label7;

        $i14 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i15 = $i14 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i15;
        $z2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[16] = 1;
        if $z2 != 0 goto label6;

        $i16 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[17] = 1;
        if $i16 <= i0 goto label6;

        $r12 = new java.lang.AssertionError;
        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();
        r2[18] = 1;
        throw $r12;

     label6:
        r2[19] = 1;
        return;

     label7:
        $r13 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r13.<java.lang.Appendable: java.lang.Appendable append(char)>(c2);
        $i17 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i18 = $i17 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i18;
        r2[20] = 1;
        if $i18 != i0 goto label8;

        r2[21] = 1;
        return;

     label8:
        r2[22] = 1;
        goto label2;
    }

    private void appendTextCollapseWhiteSpace(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0, $z1, $z2, $z3;
        char c2;
        java.lang.AssertionError $r3, $r17;
        net.htmlparser.jericho.Tag $r4, $r5, $r8;
        java.lang.Appendable $r6, $r11, $r13, $r15;
        java.lang.CharSequence $r9;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $z1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z1 != 0 goto label1;

        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i3 < i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        z0 = 0;
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void updateNextTag()>();
        r2[3] = 1;

     label2:
        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[4] = 1;
        if $i4 >= i0 goto label9;

     label3:
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        r2[5] = 1;
        if $r4 == null goto label5;

        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $r5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        $i6 = $r5.<net.htmlparser.jericho.Tag: int begin>;
        r2[6] = 1;
        if $i5 != $i6 goto label5;

        r2[7] = 1;
        if z0 == 0 goto label4;

        $r6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        z0 = 0;
        r2[8] = 1;

     label4:
        $r8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTag(net.htmlparser.jericho.Tag,int,int)>($r8, i1, i0);
        $i7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[9] = 1;
        if $i7 != i0 goto label3;

        r2[10] = 1;
        return;

     label5:
        $r9 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $i8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i9 = $i8 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i9;
        c2 = interfaceinvoke $r9.<java.lang.CharSequence: char charAt(int)>($i8);
        $z2 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>(c2);
        r2[11] = 1;
        if $z2 == 0 goto label6;

        z0 = 1;
        r2[12] = 1;
        goto label8;

     label6:
        r2[13] = 1;
        if z0 == 0 goto label7;

        $r11 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r11.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        z0 = 0;
        r2[14] = 1;

     label7:
        $r13 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r13.<java.lang.Appendable: java.lang.Appendable append(char)>(c2);
        r2[15] = 1;

     label8:
        r2[16] = 1;
        goto label2;

     label9:
        r2[17] = 1;
        if z0 == 0 goto label10;

        $r15 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r15.<java.lang.Appendable: java.lang.Appendable append(char)>(32);
        r2[18] = 1;

     label10:
        $z3 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[19] = 1;
        if $z3 != 0 goto label11;

        $i10 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[20] = 1;
        if $i10 == i0 goto label11;

        $r17 = new java.lang.AssertionError;
        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();
        r2[21] = 1;
        throw $r17;

     label11:
        r2[22] = 1;
        return;
    }

    private void appendContentPreformatted(int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1;
        java.lang.AssertionError $r3, $r11;
        net.htmlparser.jericho.Tag $r4, $r5, $r6;
        java.lang.Appendable $r7;
        java.lang.CharSequence $r8;
        char $c7;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $z0 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $i2 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[1] = 1;
        if $i2 < i0 goto label1;

        $r3 = new java.lang.AssertionError;
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();
        r2[2] = 1;
        throw $r3;

     label1:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void updateNextTag()>();
        r2[3] = 1;

     label2:
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        r2[4] = 1;
        if $r4 == null goto label3;

        $i3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $r5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        $i4 = $r5.<net.htmlparser.jericho.Tag: int begin>;
        r2[5] = 1;
        if $i3 != $i4 goto label3;

        $r6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag>;
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTag(net.htmlparser.jericho.Tag,int,int)>($r6, i1, i0);
        $i5 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[6] = 1;
        if $i5 != i0 goto label2;

        r2[7] = 1;
        return;

     label3:
        $r7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        $r8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.CharSequence sourceText>;
        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $c7 = interfaceinvoke $r8.<java.lang.CharSequence: char charAt(int)>($i6);
        interfaceinvoke $r7.<java.lang.Appendable: java.lang.Appendable append(char)>($c7);
        $i8 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i9 = $i8 + 1;
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = $i9;
        r2[8] = 1;
        if $i9 < i0 goto label2;

        $z1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r2[9] = 1;
        if $z1 != 0 goto label4;

        $i10 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r2[10] = 1;
        if $i10 == i0 goto label4;

        $r11 = new java.lang.AssertionError;
        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();
        r2[11] = 1;
        throw $r11;

     label4:
        r2[12] = 1;
        return;
    }

    private void appendTag(net.htmlparser.jericho.Tag, int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        net.htmlparser.jericho.Tag r1, $r8;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4, $r20;
        net.htmlparser.jericho.EndTag r5;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z7, $z8, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.lang.AssertionError $r6, $r7, $r9, $r19, $r23, $r24, $r25, $r26;
        net.htmlparser.jericho.TagType $r10, $r12, $r14, $r21;
        net.htmlparser.jericho.StartTagType $r11, $r13;
        net.htmlparser.jericho.StartTag $r15;
        net.htmlparser.jericho.Attributes $r16;
        java.lang.Appendable $r17;
        net.htmlparser.jericho.Element r22;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        r1 := @parameter0: net.htmlparser.jericho.Tag;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        $z2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[0] = 1;
        if $z2 != 0 goto label1;

        $i4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i5 = r1.<net.htmlparser.jericho.Tag: int begin>;
        r3[1] = 1;
        if $i4 == $i5 goto label1;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        r3[2] = 1;
        throw $r6;

     label1:
        $z3 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[3] = 1;
        if $z3 != 0 goto label2;

        $i6 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[4] = 1;
        if $i6 < i1 goto label2;

        $r7 = new java.lang.AssertionError;
        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();
        r3[5] = 1;
        throw $r7;

     label2:
        $r8 = virtualinvoke r1.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag()>();
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: net.htmlparser.jericho.Tag nextTag> = $r8;
        $i7 = r1.<net.htmlparser.jericho.Tag: int end>;
        r3[6] = 1;
        if $i7 >= i1 goto label3;

        $i8 = r1.<net.htmlparser.jericho.Tag: int end>;
        r3[7] = 1;
        goto label4;

     label3:
        $i8 = i1;
        r3[8] = 1;

     label4:
        i2 = $i8;
        $z4 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[9] = 1;
        if $z4 != 0 goto label5;

        $i9 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[10] = 1;
        if $i9 < i2 goto label5;

        $r9 = new java.lang.AssertionError;
        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();
        r3[11] = 1;
        throw $r9;

     label5:
        $r10 = virtualinvoke r1.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r11 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType COMMENT>;
        r3[12] = 1;
        if $r10 == $r11 goto label6;

        $r12 = virtualinvoke r1.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r13 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType CDATA_SECTION>;
        r3[13] = 1;
        if $r12 == $r13 goto label6;

        $r14 = virtualinvoke r1.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $z5 = virtualinvoke $r14.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r3[14] = 1;
        if $z5 == 0 goto label7;

     label6:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean appendTextPreserveIndentation(int,int)>(i2, i0);
        r3[15] = 1;
        goto label11;

     label7:
        $z7 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean tidyTags>;
        r3[16] = 1;
        if $z7 == 0 goto label10;

        r4 = virtualinvoke r1.<net.htmlparser.jericho.Tag: java.lang.String tidy()>();
        $z8 = r1 instanceof net.htmlparser.jericho.StartTag;
        r3[17] = 1;
        if $z8 == 0 goto label8;

        $r15 = (net.htmlparser.jericho.StartTag) r1;
        $r16 = virtualinvoke $r15.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r3[18] = 1;
        if $r16 == null goto label8;

        $r17 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        interfaceinvoke $r17.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r4);
        r3[19] = 1;
        goto label9;

     label8:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendSpecifiedTextInline(java.lang.CharSequence,int)>(r4, i0);
        r3[20] = 1;

     label9:
        r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index> = i2;
        r3[21] = 1;
        goto label11;

     label10:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean appendTextInline(int,int,boolean)>(i2, i0, 1);
        r3[22] = 1;

     label11:
        $i10 = r1.<net.htmlparser.jericho.Tag: int end>;
        r3[23] = 1;
        if i1 <= $i10 goto label12;

        $z10 = r1 instanceof net.htmlparser.jericho.StartTag;
        r3[24] = 1;
        if $z10 != 0 goto label14;

     label12:
        $z11 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[25] = 1;
        if $z11 != 0 goto label13;

        $i11 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[26] = 1;
        if $i11 <= i1 goto label13;

        $r19 = new java.lang.AssertionError;
        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();
        r3[27] = 1;
        throw $r19;

     label13:
        r3[28] = 1;
        return;

     label14:
        $r20 = r1.<net.htmlparser.jericho.Tag: java.lang.String name>;
        r3[29] = 1;
        if $r20 != "script" goto label15;

        $z12 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean indentScriptElements>;
        r3[30] = 1;
        if $z12 == 0 goto label16;

     label15:
        $r21 = virtualinvoke r1.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $z13 = virtualinvoke $r21.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r3[31] = 1;
        if $z13 == 0 goto label26;

     label16:
        r22 = virtualinvoke r1.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Element getElement()>();
        r5 = virtualinvoke r22.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag getEndTag()>();
        r3[32] = 1;
        if r5 != null goto label18;

        $z14 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[33] = 1;
        if $z14 != 0 goto label17;

        $i12 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[34] = 1;
        if $i12 <= i1 goto label17;

        $r23 = new java.lang.AssertionError;
        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();
        r3[35] = 1;
        throw $r23;

     label17:
        r3[36] = 1;
        return;

     label18:
        $i13 = r5.<net.htmlparser.jericho.EndTag: int begin>;
        r3[37] = 1;
        if i1 >= $i13 goto label19;

        $i14 = i1;
        r3[38] = 1;
        goto label20;

     label19:
        $i14 = r5.<net.htmlparser.jericho.EndTag: int begin>;
        r3[39] = 1;

     label20:
        i3 = $i14;
        z0 = 1;
        $i15 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[40] = 1;
        if $i15 == i3 goto label21;

        z1 = 0;
        z0 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean appendTextPreserveIndentation(int,int)>(i3, i0);
        r3[41] = 1;

     label21:
        $i16 = r5.<net.htmlparser.jericho.EndTag: int begin>;
        r3[42] = 1;
        if $i16 < i1 goto label23;

        $z15 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[43] = 1;
        if $z15 != 0 goto label22;

        $i17 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[44] = 1;
        if $i17 <= i1 goto label22;

        $r24 = new java.lang.AssertionError;
        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();
        r3[45] = 1;
        throw $r24;

     label22:
        r3[46] = 1;
        return;

     label23:
        r3[47] = 1;
        if z0 != 0 goto label24;

        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendEssentialNewLine()>();
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendIndent(int)>(i0);
        r3[48] = 1;

     label24:
        $z16 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[49] = 1;
        if $z16 != 0 goto label25;

        $i18 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        $i19 = r5.<net.htmlparser.jericho.EndTag: int begin>;
        r3[50] = 1;
        if $i18 == $i19 goto label25;

        $r25 = new java.lang.AssertionError;
        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();
        r3[51] = 1;
        throw $r25;

     label25:
        specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTag(net.htmlparser.jericho.Tag,int,int)>(r5, i0, i1);
        r3[52] = 1;

     label26:
        $z17 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled>;
        r3[53] = 1;
        if $z17 != 0 goto label27;

        $i20 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: int index>;
        r3[54] = 1;
        if $i20 <= i1 goto label27;

        $r26 = new java.lang.AssertionError;
        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();
        r3[55] = 1;
        throw $r26;

     label27:
        r3[56] = 1;
        return;
    }

    private void appendIndent(int) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.lang.Appendable $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $z0 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean removeLineBreaks>;
        r2[0] = 1;
        if $z0 != 0 goto label2;

        i1 = 0;
        r2[1] = 1;

     label1:
        r2[2] = 1;
        if i1 >= i0 goto label2;

        $r3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.String indentString>;
        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        i1 = i1 + 1;
        r2[3] = 1;
        goto label1;

     label2:
        r2[4] = 1;
        return;
    }

    private void appendFormattingNewLine() throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.lang.Appendable $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $z0 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean removeLineBreaks>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.String newLine>;
        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    private void appendEssentialNewLine() throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Appendable $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        $r1 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $r3 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.Appendable appendable>;
        $r4 = r0.<net.htmlparser.jericho.SourceFormatter$Processor: java.lang.String newLine>;
        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        r2[0] = 1;
        return;
    }

    private boolean containsOnlyInlineLevelChildElements(net.htmlparser.jericho.Element)
    {
        net.htmlparser.jericho.SourceFormatter$Processor r0;
        net.htmlparser.jericho.Element r1, r6;
        boolean[][] $r2;
        boolean[] r3;
        java.util.List r4;
        java.util.Iterator r5;
        java.lang.String r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8;
        java.util.Set $r9;

        r0 := @this: net.htmlparser.jericho.SourceFormatter$Processor;
        r1 := @parameter0: net.htmlparser.jericho.Element;
        $r2 = <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[22];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Element: java.util.List getChildElements()>();
        $z0 = interfaceinvoke r4.<java.util.Collection: boolean isEmpty()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        r3[1] = 1;
        return 1;

     label1:
        r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();
        r3[2] = 1;

     label2:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        r3[3] = 1;
        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (net.htmlparser.jericho.Element) $r8;
        r7 = virtualinvoke r6.<net.htmlparser.jericho.Element: java.lang.String getName()>();
        r3[4] = 1;
        if r7 == "script" goto label3;

        $r9 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.Set getInlineLevelElementNames()>();
        $z2 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r7);
        r3[5] = 1;
        if $z2 != 0 goto label4;

     label3:
        r3[6] = 1;
        return 0;

     label4:
        $z3 = specialinvoke r0.<net.htmlparser.jericho.SourceFormatter$Processor: boolean containsOnlyInlineLevelChildElements(net.htmlparser.jericho.Element)>(r6);
        r3[7] = 1;
        if $z3 != 0 goto label5;

        r3[8] = 1;
        return 0;

     label5:
        r3[9] = 1;
        goto label2;

     label6:
        r3[10] = 1;
        return 1;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        boolean $z0, $z1;

        $r0 = staticinvoke <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRi()>();
        r1 = $r0[23];
        $r2 = class "net/htmlparser/jericho/SourceFormatter";
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();
        r1[0] = 1;
        if $z0 != 0 goto label0;

        $z1 = 1;
        r1[1] = 1;
        goto label1;

     label0:
        $z1 = 0;
        r1[2] = 1;

     label1:
        <net.htmlparser.jericho.SourceFormatter$Processor: boolean $assertionsDisabled> = $z1;
        r1[3] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        $r0 = newmultiarray (boolean)[24][];
        <net.htmlparser.jericho.SourceFormatter$Processor: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[5];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[3];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[26];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[17];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[15];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[40];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[5];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[19];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[13];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[18];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[17];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[14];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[7];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[10];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[17];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[23];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[23];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[13];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[57];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[5];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[3];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[11];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[4];
        $r0[23] = $r24;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SourceFormatter$Processor", -8688825101490558838L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.SourceFormatter extends java.lang.Object implements net.htmlparser.jericho.CharStreamSource
{
    private final net.htmlparser.jericho.Segment segment;
    private java.lang.String indentString;
    private boolean tidyTags;
    private boolean collapseWhiteSpace;
    private boolean removeLineBreaks;
    private boolean indentAllElements;
    private java.lang.String newLine;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.SourceFormatter r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String indentString> = "\t";
        r0.<net.htmlparser.jericho.SourceFormatter: boolean tidyTags> = 0;
        r0.<net.htmlparser.jericho.SourceFormatter: boolean collapseWhiteSpace> = 0;
        r0.<net.htmlparser.jericho.SourceFormatter: boolean removeLineBreaks> = 0;
        r0.<net.htmlparser.jericho.SourceFormatter: boolean indentAllElements> = 0;
        r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String newLine> = null;
        r0.<net.htmlparser.jericho.SourceFormatter: net.htmlparser.jericho.Segment segment> = r1;
        r3[0] = 1;
        return;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        virtualinvoke r0.<net.htmlparser.jericho.SourceFormatter: void appendTo(java.lang.Appendable)>(r1);
        virtualinvoke r1.<java.io.Writer: void flush()>();
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.SourceFormatter r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.SourceFormatter$Processor $r4;
        net.htmlparser.jericho.Segment $r5;
        java.lang.String $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = new net.htmlparser.jericho.SourceFormatter$Processor;
        $r5 = r0.<net.htmlparser.jericho.SourceFormatter: net.htmlparser.jericho.Segment segment>;
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String getIndentString()>();
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.SourceFormatter: boolean getTidyTags()>();
        $z1 = virtualinvoke r0.<net.htmlparser.jericho.SourceFormatter: boolean getCollapseWhiteSpace()>();
        $z2 = virtualinvoke r0.<net.htmlparser.jericho.SourceFormatter: boolean getRemoveLineBreaks()>();
        $z3 = virtualinvoke r0.<net.htmlparser.jericho.SourceFormatter: boolean getIndentAllElements()>();
        $z4 = virtualinvoke r0.<net.htmlparser.jericho.SourceFormatter: boolean getIndentAllElements()>();
        $r7 = virtualinvoke r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String getNewLine()>();
        specialinvoke $r4.<net.htmlparser.jericho.SourceFormatter$Processor: void <init>(net.htmlparser.jericho.Segment,java.lang.String,boolean,boolean,boolean,boolean,boolean,java.lang.String)>($r5, $r6, $z0, $z1, $z2, $z3, $z4, $r7);
        virtualinvoke $r4.<net.htmlparser.jericho.SourceFormatter$Processor: void appendTo(java.lang.Appendable)>(r1);
        r3[0] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;
        int $i0, $i1;
        long $l2;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.SourceFormatter: net.htmlparser.jericho.Segment segment>;
        $i0 = virtualinvoke $r3.<net.htmlparser.jericho.Segment: int length()>();
        $i1 = $i0 * 2;
        $l2 = (long) $i1;
        r2[0] = 1;
        return $l2;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = staticinvoke <net.htmlparser.jericho.CharStreamSourceUtil: java.lang.String toString(net.htmlparser.jericho.CharStreamSource)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.SourceFormatter setIndentString(java.lang.String)
    {
        net.htmlparser.jericho.SourceFormatter r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        r3[0] = 1;
        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("indentString property must not be null");
        r3[1] = 1;
        throw $r4;

     label1:
        r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String indentString> = r1;
        r3[2] = 1;
        return r0;
    }

    public java.lang.String getIndentString()
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String indentString>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.SourceFormatter setTidyTags(boolean)
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r0.<net.htmlparser.jericho.SourceFormatter: boolean tidyTags> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getTidyTags()
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $z0 = r0.<net.htmlparser.jericho.SourceFormatter: boolean tidyTags>;
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.SourceFormatter setCollapseWhiteSpace(boolean)
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r0.<net.htmlparser.jericho.SourceFormatter: boolean collapseWhiteSpace> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getCollapseWhiteSpace()
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $z0 = r0.<net.htmlparser.jericho.SourceFormatter: boolean collapseWhiteSpace>;
        r2[0] = 1;
        return $z0;
    }

    net.htmlparser.jericho.SourceFormatter setRemoveLineBreaks(boolean)
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r0.<net.htmlparser.jericho.SourceFormatter: boolean removeLineBreaks> = z0;
        r2[0] = 1;
        return r0;
    }

    boolean getRemoveLineBreaks()
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $z0 = r0.<net.htmlparser.jericho.SourceFormatter: boolean removeLineBreaks>;
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.SourceFormatter setIndentAllElements(boolean)
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        r0.<net.htmlparser.jericho.SourceFormatter: boolean indentAllElements> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getIndentAllElements()
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $z0 = r0.<net.htmlparser.jericho.SourceFormatter: boolean indentAllElements>;
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.SourceFormatter setNewLine(java.lang.String)
    {
        net.htmlparser.jericho.SourceFormatter r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r3 = $r2[15];
        r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String newLine> = r1;
        r3[0] = 1;
        return r0;
    }

    public java.lang.String getNewLine()
    {
        net.htmlparser.jericho.SourceFormatter r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r6, $r7;
        net.htmlparser.jericho.Segment $r4;
        net.htmlparser.jericho.Source $r5;

        r0 := @this: net.htmlparser.jericho.SourceFormatter;
        $r1 = <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String newLine>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = r0.<net.htmlparser.jericho.SourceFormatter: net.htmlparser.jericho.Segment segment>;
        $r5 = $r4.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Source: java.lang.String getBestGuessNewLine()>();
        r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String newLine> = $r6;
        r2[1] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.SourceFormatter: java.lang.String newLine>;
        r2[2] = 1;
        return $r7;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRi()>();
        r1 = $r0[17];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        $r0 = newmultiarray (boolean)[18][];
        <net.htmlparser.jericho.SourceFormatter: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[3];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SourceFormatter", -3320377105520286991L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.StartTag extends net.htmlparser.jericho.Tag
{
    private final net.htmlparser.jericho.Attributes attributes;
    final net.htmlparser.jericho.StartTagType startTagType;
    static final net.htmlparser.jericho.StartTag NOT_CACHED;
    static final boolean $assertionsDisabled;
    private static final boolean[][] $VRc;

    void <init>(net.htmlparser.jericho.Source, int, int, net.htmlparser.jericho.StartTagType, java.lang.String, net.htmlparser.jericho.Attributes)
    {
        net.htmlparser.jericho.StartTag r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        net.htmlparser.jericho.StartTagType r2;
        java.lang.String r3;
        net.htmlparser.jericho.Attributes r4;
        boolean[][] $r5;
        boolean[] r6;

        r0 := @this: net.htmlparser.jericho.StartTag;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: net.htmlparser.jericho.StartTagType;
        r3 := @parameter4: java.lang.String;
        r4 := @parameter5: net.htmlparser.jericho.Attributes;
        $r5 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r6 = $r5[0];
        specialinvoke r0.<net.htmlparser.jericho.Tag: void <init>(net.htmlparser.jericho.Source,int,int,java.lang.String)>(r1, i0, i1, r3);
        r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes> = r4;
        r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType> = r2;
        r6[0] = 1;
        if r4 == null goto label1;

        virtualinvoke r4.<net.htmlparser.jericho.Attributes: void setStartTag(net.htmlparser.jericho.StartTag)>(r0);
        r6[1] = 1;

     label1:
        r6[2] = 1;
        return;
    }

    void <init>()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.Tag: void <init>()>();
        r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes> = null;
        r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType> = null;
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Element getElement()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTag r3;
        net.htmlparser.jericho.Element $r4, $r5, $r6, $r8, $r9, $r12, $r13, $r25, $r26;
        net.htmlparser.jericho.Source $r7, $r10, $r14, $r16;
        net.htmlparser.jericho.Logger $r11, $r15;
        boolean $z0, $z1;
        int $i0;
        net.htmlparser.jericho.RowColumnVector $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.String $r24;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r4 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element element>;
        $r5 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r2[0] = 1;
        if $r4 != $r5 goto label2;

        r3 = specialinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.EndTag getEndTagInternal()>();
        $r6 = new net.htmlparser.jericho.Element;
        $r7 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        specialinvoke $r6.<net.htmlparser.jericho.Element: void <init>(net.htmlparser.jericho.Source,net.htmlparser.jericho.StartTag,net.htmlparser.jericho.EndTag)>($r7, r0, r3);
        r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element element> = $r6;
        r2[1] = 1;
        if r3 == null goto label2;

        $r8 = r3.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.Element element>;
        $r9 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r2[2] = 1;
        if $r8 == $r9 goto label1;

        $r10 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $r11 = $r10.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z0 = interfaceinvoke $r11.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r2[3] = 1;
        if $z0 == 0 goto label1;

        $r12 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element element>;
        $r13 = r3.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.Element element>;
        $z1 = virtualinvoke $r12.<net.htmlparser.jericho.Element: boolean equals(java.lang.Object)>($r13);
        r2[4] = 1;
        if $z1 != 0 goto label1;

        $r14 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $r15 = $r14.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r16 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i0 = r3.<net.htmlparser.jericho.EndTag: int begin>;
        $r17 = virtualinvoke $r16.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i0);
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(int)>(200);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End tag ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r3);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");
        $r22 = virtualinvoke $r17.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" terminates more than one element");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r15.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r24);
        r2[5] = 1;

     label1:
        $r25 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element element>;
        r3.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.Element element> = $r25;
        r2[6] = 1;

     label2:
        $r26 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element element>;
        r2[7] = 1;
        return $r26;
    }

    public boolean isEmptyElementTag()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: boolean isSyntacticalEmptyElementTag()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean isClosingSlashIgnored(java.lang.String)>($r3);
        r2[1] = 1;
        if $z1 != 0 goto label1;

        $z2 = 1;
        r2[2] = 1;
        goto label2;

     label1:
        $z2 = 0;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return $z2;
    }

    public boolean isSyntacticalEmptyElementTag()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3, $r4;
        net.htmlparser.jericho.Source $r5;
        int $i0, $i1;
        char $c2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[0] = 1;
        if $r3 != $r4 goto label1;

        $r5 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.StartTag: int end>;
        $i1 = $i0 - 2;
        $c2 = virtualinvoke $r5.<net.htmlparser.jericho.Source: char charAt(int)>($i1);
        r2[1] = 1;
        if $c2 != 47 goto label1;

        $z0 = 1;
        r2[2] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.StartTagType getStartTagType()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.TagType getTagType()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Attributes getAttributes()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Attributes $r3;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getAttributeValue(java.lang.String)
    {
        net.htmlparser.jericho.StartTag r0;
        java.lang.String r1, $r5;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Attributes $r4, $r6;

        r0 := @this: net.htmlparser.jericho.StartTag;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        $r4 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes>;
        r3[0] = 1;
        if $r4 != null goto label1;

        $r5 = null;
        r3[1] = 1;
        goto label2;

     label1:
        $r6 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes>;
        $r5 = virtualinvoke $r6.<net.htmlparser.jericho.Attributes: java.lang.String getValue(java.lang.String)>(r1);
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.Attributes parseAttributes()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        net.htmlparser.jericho.Attributes $r3;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $i0 = staticinvoke <net.htmlparser.jericho.Attributes: int getDefaultMaxErrorCount()>();
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes parseAttributes(int)>($i0);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Attributes parseAttributes(int)
    {
        net.htmlparser.jericho.StartTag r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Attributes r3, $r4, $r5;
        net.htmlparser.jericho.StartTagType $r6, $r11;
        java.lang.String $r7, $r8, $r12;
        net.htmlparser.jericho.Source $r9, $r10;
        char $c8;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StartTag;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r4 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes>;
        r2[0] = 1;
        if $r4 == null goto label1;

        $r5 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes>;
        r2[1] = 1;
        return $r5;

     label1:
        $i3 = r0.<net.htmlparser.jericho.StartTag: int end>;
        $r6 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.StartTagType: java.lang.String getClosingDelimiter()>();
        $i4 = virtualinvoke $r7.<java.lang.String: int length()>();
        i1 = $i3 - $i4;
        $i5 = r0.<net.htmlparser.jericho.StartTag: int begin>;
        $i6 = $i5 + 1;
        $r8 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $i7 = virtualinvoke $r8.<java.lang.String: int length()>();
        i2 = $i6 + $i7;
        r2[2] = 1;

     label2:
        $r9 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $c8 = virtualinvoke $r9.<net.htmlparser.jericho.Source: char charAt(int)>(i2);
        $z0 = staticinvoke <net.htmlparser.jericho.StartTag: boolean isXMLNameStartChar(char)>($c8);
        r2[3] = 1;
        if $z0 != 0 goto label3;

        i2 = i2 + 1;
        r2[4] = 1;
        if i2 != i1 goto label2;

        r2[5] = 1;
        return null;

     label3:
        $r10 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i9 = r0.<net.htmlparser.jericho.StartTag: int begin>;
        $r11 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r12 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        r3 = staticinvoke <net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source,int,int,int,net.htmlparser.jericho.StartTagType,java.lang.String,int)>($r10, $i9, i2, i1, $r11, $r12, i0);
        r2[6] = 1;
        if r3 == null goto label4;

        virtualinvoke r3.<net.htmlparser.jericho.Attributes: void setStartTag(net.htmlparser.jericho.StartTag)>(r0);
        r2[7] = 1;

     label4:
        r2[8] = 1;
        return r3;
    }

    public net.htmlparser.jericho.Segment getTagContent()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;
        net.htmlparser.jericho.Source $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r5, $r7;
        net.htmlparser.jericho.StartTagType $r6;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = new net.htmlparser.jericho.Segment;
        $r4 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.StartTag: int begin>;
        $i1 = $i0 + 1;
        $r5 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();
        $i3 = $i1 + $i2;
        $i4 = r0.<net.htmlparser.jericho.StartTag: int end>;
        $r6 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.StartTagType: java.lang.String getClosingDelimiter()>();
        $i5 = virtualinvoke $r7.<java.lang.String: int length()>();
        $i6 = $i4 - $i5;
        specialinvoke $r3.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r4, $i3, $i6);
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.FormControl getFormControl()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Element $r3;
        net.htmlparser.jericho.FormControl $r4;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Element: net.htmlparser.jericho.FormControl getFormControl()>();
        r2[0] = 1;
        return $r4;
    }

    public boolean isEndTagForbidden()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3, $r4, $r5;
        net.htmlparser.jericho.EndTagType $r6;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r7;
        java.lang.String $r8, $r10;
        java.util.List $r9;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[0] = 1;
        if $r3 == $r4 goto label3;

        $r5 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.EndTagType getCorrespondingEndTagType()>();
        r2[1] = 1;
        if $r6 != null goto label1;

        $z0 = 1;
        r2[2] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return $z0;

     label3:
        $r7 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.Set getEndTagForbiddenElementNames()>();
        $r8 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);
        r2[5] = 1;
        if $z1 == 0 goto label4;

        r2[6] = 1;
        return 1;

     label4:
        $r9 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.List getElementNames()>();
        $r10 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z2 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>($r10);
        r2[7] = 1;
        if $z2 == 0 goto label5;

        r2[8] = 1;
        return 0;

     label5:
        $z3 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: boolean isSyntacticalEmptyElementTag()>();
        r2[9] = 1;
        return $z3;
    }

    public boolean isEndTagRequired()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3, $r4, $r5;
        net.htmlparser.jericho.EndTagType $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r7;
        java.lang.String $r8, $r10;
        java.util.List $r9;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[0] = 1;
        if $r3 == $r4 goto label3;

        $r5 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.EndTagType getCorrespondingEndTagType()>();
        r2[1] = 1;
        if $r6 == null goto label1;

        $z0 = 1;
        r2[2] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return $z0;

     label3:
        $r7 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.Set getEndTagRequiredElementNames()>();
        $r8 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);
        r2[5] = 1;
        if $z1 == 0 goto label4;

        r2[6] = 1;
        return 1;

     label4:
        $r9 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.List getElementNames()>();
        $r10 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z2 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>($r10);
        r2[7] = 1;
        if $z2 == 0 goto label5;

        r2[8] = 1;
        return 0;

     label5:
        $z3 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: boolean isSyntacticalEmptyElementTag()>();
        r2[9] = 1;
        if $z3 != 0 goto label6;

        $z4 = 1;
        r2[10] = 1;
        goto label7;

     label6:
        $z4 = 0;
        r2[11] = 1;

     label7:
        r2[12] = 1;
        return $z4;
    }

    public boolean isUnregistered()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StartTagType $r3, $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType UNREGISTERED>;
        r2[0] = 1;
        if $r3 != $r4 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public java.lang.String tidy()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: java.lang.String tidy(boolean)>(0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String tidy(boolean)
    {
        net.htmlparser.jericho.StartTag r0;
        boolean z0, $z1, $z2;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r7;
        int i0, i1, $i2, $i3, $i4;
        net.htmlparser.jericho.Attributes $r4, $r5, $r18;
        java.lang.String $r6, $r11, $r14, $r15, $r29, $r32, $r34;
        net.htmlparser.jericho.StartTagType $r9, $r10, $r13, $r24, $r25, $r31;
        net.htmlparser.jericho.Source $r16;
        char $c5;
        net.htmlparser.jericho.Tag $r19;
        java.io.IOException $r21, r22;
        java.lang.RuntimeException $r23;
        net.htmlparser.jericho.Element $r26;
        net.htmlparser.jericho.EndTag $r27;
        java.util.Set $r28;

        r0 := @this: net.htmlparser.jericho.StartTag;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r4 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes>;
        r2[0] = 1;
        if $r4 == null goto label1;

        $r5 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes>;
        $z1 = $r5.<net.htmlparser.jericho.Attributes: boolean containsServerTagOutsideOfAttributeValue>;
        r2[1] = 1;
        if $z1 == 0 goto label2;

     label1:
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: java.lang.String toString()>();
        r2[2] = 1;
        return $r6;

     label2:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r3 = $r7;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
        r2[3] = 1;
        if z0 == 0 goto label3;

        $r9 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r10 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[4] = 1;
        if $r9 != $r10 goto label3;

        $r11 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        r2[5] = 1;
        goto label5;

     label3:
        $i2 = r0.<net.htmlparser.jericho.StartTag: int begin>;
        $r13 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r14 = $r13.<net.htmlparser.jericho.StartTagType: java.lang.String startDelimiterPrefix>;
        $i3 = virtualinvoke $r14.<java.lang.String: int length()>();
        i0 = $i2 + $i3;
        $r15 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $i4 = virtualinvoke $r15.<java.lang.String: int length()>();
        i1 = i0 + $i4;
        r2[6] = 1;

     label4:
        r2[7] = 1;
        if i0 >= i1 goto label5;

        $r16 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $c5 = virtualinvoke $r16.<net.htmlparser.jericho.Source: char charAt(int)>(i0);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);
        i0 = i0 + 1;
        r2[8] = 1;
        goto label4;

     label5:
        $r18 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes attributes>;
        $r19 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Tag getNextTag()>();
        virtualinvoke $r18.<net.htmlparser.jericho.Attributes: java.lang.Appendable appendTidy(java.lang.Appendable,net.htmlparser.jericho.Tag)>(r3, $r19);
        r2[9] = 1;

     label6:
        goto label8;

     label7:
        $r21 := @caughtexception;
        r22 = $r21;
        $r23 = new java.lang.RuntimeException;
        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r22);
        r2[10] = 1;
        throw $r23;

     label8:
        $r24 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r25 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[11] = 1;
        if $r24 != $r25 goto label9;

        $r26 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $r27 = virtualinvoke $r26.<net.htmlparser.jericho.Element: net.htmlparser.jericho.EndTag getEndTag()>();
        r2[12] = 1;
        if $r27 != null goto label9;

        $r28 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.Set getEndTagOptionalElementNames()>();
        $r29 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z2 = interfaceinvoke $r28.<java.util.Set: boolean contains(java.lang.Object)>($r29);
        r2[13] = 1;
        if $z2 != 0 goto label9;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" /");
        r2[14] = 1;

     label9:
        $r31 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r32 = virtualinvoke $r31.<net.htmlparser.jericho.StartTagType: java.lang.String getClosingDelimiter()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[15] = 1;
        return $r34;

        catch java.io.IOException from label5 to label6 with label7;
    }

    public static java.lang.String generateHTML(java.lang.String, java.util.Map, boolean)
    {
        java.lang.String r0, $r13;
        java.util.Map r1;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder r4, $r6, $r7;
        java.io.IOException r5, $r9;
        java.lang.RuntimeException $r10;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Map;
        z0 := @parameter2: boolean;
        $r2 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        r4 = $r6;
        $r7 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

     label1:
        staticinvoke <net.htmlparser.jericho.Attributes: void appendHTML(java.lang.Appendable,java.util.Map)>(r4, r1);
        r3[0] = 1;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;
        r5 = $r9;
        $r10 = new java.lang.RuntimeException;
        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5);
        r3[1] = 1;
        throw $r10;

     label4:
        r3[2] = 1;
        if z0 == 0 goto label5;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" />");
        r3[3] = 1;
        goto label6;

     label5:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
        r3[4] = 1;

     label6:
        $r13 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r3[5] = 1;
        return $r13;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.StartTag r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r4;
        java.lang.String $r8, $r10;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        virtualinvoke r0.<net.htmlparser.jericho.StartTag: java.lang.StringBuilder appendDebugTag(java.lang.StringBuilder)>(r3);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        virtualinvoke r0.<net.htmlparser.jericho.StartTag: java.lang.StringBuilder appendDebugTagType(java.lang.StringBuilder)>(r3);
        $r8 = specialinvoke r0.<net.htmlparser.jericho.Tag: java.lang.String getDebugInfo()>();
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r10;
    }

    java.lang.StringBuilder appendDebugTag(java.lang.StringBuilder)
    {
        net.htmlparser.jericho.StartTag r0;
        java.lang.StringBuilder r1, $r8, $r10;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTagType $r4, $r5, $r13;
        net.htmlparser.jericho.Attributes $r6;
        boolean $z0, $z1;
        net.htmlparser.jericho.Segment $r9;
        java.lang.String $r14;

        r0 := @this: net.htmlparser.jericho.StartTag;
        r1 := @parameter0: java.lang.StringBuilder;
        $r2 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[20];
        $r4 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r5 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r3[0] = 1;
        if $r4 != $r5 goto label1;

        $r6 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        $z0 = virtualinvoke $r6.<net.htmlparser.jericho.Attributes: boolean isEmpty()>();
        r3[1] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r0);
        r3[2] = 1;
        goto label3;

     label1:
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
        $r9 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Segment getNameSegment()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r9);
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $z1 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: boolean isSyntacticalEmptyElementTag()>();
        r3[3] = 1;
        if $z1 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);
        r3[4] = 1;

     label2:
        $r13 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r14 = virtualinvoke $r13.<net.htmlparser.jericho.StartTagType: java.lang.String getClosingDelimiter()>();
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        r3[5] = 1;

     label3:
        r3[6] = 1;
        return r1;
    }

    java.lang.StringBuilder appendDebugTagType(java.lang.StringBuilder)
    {
        net.htmlparser.jericho.StartTag r0;
        java.lang.StringBuilder r1, $r6, $r9;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTagType $r4, $r5, $r7;
        java.lang.String $r8;

        r0 := @this: net.htmlparser.jericho.StartTag;
        r1 := @parameter0: java.lang.StringBuilder;
        $r2 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[21];
        $r4 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r5 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r3[0] = 1;
        if $r4 == $r5 goto label1;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
        $r7 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.StartTagType: java.lang.String getDescription()>();
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return r1;
    }

    private net.htmlparser.jericho.EndTag getEndTagInternal()
    {
        net.htmlparser.jericho.StartTag r0, r5;
        boolean[][] $r1;
        boolean[] r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        net.htmlparser.jericho.EndTagType r3, $r6;
        net.htmlparser.jericho.HTMLElementTerminatingTagNameSets r4;
        net.htmlparser.jericho.StartTagType $r7, $r8, $r9, $r19, $r20;
        java.lang.String $r10, $r12, $r13, $r16, $r17, $r22, $r24, $r35, $r38, $r39, $r53;
        java.util.Set $r11;
        net.htmlparser.jericho.EndTag $r14, r18, $r36, $r42;
        net.htmlparser.jericho.Source $r15, $r23, $r25, $r27, $r29, $r37, $r43, $r45, $r47;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        net.htmlparser.jericho.HTMLElementNameSet $r21;
        net.htmlparser.jericho.Logger $r26, $r28, $r44, $r46;
        net.htmlparser.jericho.RowColumnVector $r30, $r48;
        java.lang.StringBuilder $r31, $r32, $r33, $r34, $r49, $r50, $r51, $r52;
        net.htmlparser.jericho.Segment[] r40;
        net.htmlparser.jericho.Segment $r41;

        r0 := @this: net.htmlparser.jericho.StartTag;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        z0 = 1;
        $r7 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        r3 = virtualinvoke $r7.<net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.EndTagType getCorrespondingEndTagType()>();
        $r8 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r9 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[0] = 1;
        if $r8 != $r9 goto label6;

        $r10 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z1 = staticinvoke <net.htmlparser.jericho.HTMLElements: boolean isClosingSlashIgnored(java.lang.String)>($r10);
        r2[1] = 1;
        if $z1 != 0 goto label1;

        $z2 = 1;
        r2[2] = 1;
        goto label2;

     label1:
        $z2 = 0;
        r2[3] = 1;

     label2:
        z0 = $z2;
        r2[4] = 1;
        if z0 == 0 goto label3;

        $z3 = virtualinvoke r0.<net.htmlparser.jericho.StartTag: boolean isSyntacticalEmptyElementTag()>();
        r2[5] = 1;
        if $z3 == 0 goto label3;

        r2[6] = 1;
        return null;

     label3:
        $r11 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.Set getEndTagForbiddenElementNames()>();
        $r12 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z4 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r12);
        r2[7] = 1;
        if $z4 == 0 goto label4;

        r2[8] = 1;
        return null;

     label4:
        $r13 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        r4 = staticinvoke <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementTerminatingTagNameSets getTerminatingTagNameSets(java.lang.String)>($r13);
        r2[9] = 1;
        if r4 == null goto label5;

        $r14 = specialinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.EndTag getOptionalEndTag(net.htmlparser.jericho.HTMLElementTerminatingTagNameSets)>(r4);
        r2[10] = 1;
        return $r14;

     label5:
        r2[11] = 1;
        goto label7;

     label6:
        r2[12] = 1;
        if r3 != null goto label7;

        r2[13] = 1;
        return null;

     label7:
        $r15 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.StartTag: int end>;
        $r16 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $r17 = virtualinvoke r3.<net.htmlparser.jericho.EndTagType: java.lang.String getEndTagName(java.lang.String)>($r16);
        r18 = virtualinvoke $r15.<net.htmlparser.jericho.Source: net.htmlparser.jericho.EndTag getNextEndTag(int,java.lang.String,net.htmlparser.jericho.EndTagType)>($i0, $r17, r3);
        r2[14] = 1;
        if r18 == null goto label12;

        $r19 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        $r20 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[15] = 1;
        if $r19 != $r20 goto label11;

        $r21 = <net.htmlparser.jericho.HTMLElements: net.htmlparser.jericho.HTMLElementNameSet END_TAG_REQUIRED_NESTING_FORBIDDEN_SET>;
        $r22 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z5 = virtualinvoke $r21.<net.htmlparser.jericho.HTMLElementNameSet: boolean contains(java.lang.Object)>($r22);
        r2[16] = 1;
        if $z5 == 0 goto label11;

        $r23 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i1 = r0.<net.htmlparser.jericho.StartTag: int end>;
        $r24 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        r5 = virtualinvoke $r23.<net.htmlparser.jericho.Source: net.htmlparser.jericho.StartTag getNextStartTag(int,java.lang.String)>($i1, $r24);
        r2[17] = 1;
        if r5 == null goto label8;

        $i2 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $i3 = r18.<net.htmlparser.jericho.EndTag: int begin>;
        r2[18] = 1;
        if $i2 <= $i3 goto label9;

     label8:
        r2[19] = 1;
        return r18;

     label9:
        $r25 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $r26 = $r25.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z6 = interfaceinvoke $r26.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r2[20] = 1;
        if $z6 == 0 goto label10;

        $r27 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $r28 = $r27.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r29 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i4 = r0.<net.htmlparser.jericho.StartTag: int begin>;
        $r30 = virtualinvoke $r29.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i4);
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>(int)>(200);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartTag at ");
        $r33 = virtualinvoke $r30.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r32);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" missing required end tag - invalid nested start tag encountered before end tag");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r28.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r35);
        r2[21] = 1;

     label10:
        $r36 = new net.htmlparser.jericho.EndTag;
        $r37 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i5 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $i6 = r5.<net.htmlparser.jericho.StartTag: int begin>;
        $r6 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        $r38 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        specialinvoke $r36.<net.htmlparser.jericho.EndTag: void <init>(net.htmlparser.jericho.Source,int,int,net.htmlparser.jericho.EndTagType,java.lang.String)>($r37, $i5, $i6, $r6, $r38);
        r2[22] = 1;
        return $r36;

     label11:
        $r39 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $z7 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLName(java.lang.CharSequence)>($r39);
        r40 = specialinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Segment[] getEndTag(net.htmlparser.jericho.EndTag,boolean,boolean)>(r18, z0, $z7);
        r2[23] = 1;
        if r40 == null goto label12;

        $r41 = r40[0];
        $r42 = (net.htmlparser.jericho.EndTag) $r41;
        r2[24] = 1;
        return $r42;

     label12:
        $r43 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $r44 = $r43.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z8 = interfaceinvoke $r44.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r2[25] = 1;
        if $z8 == 0 goto label13;

        $r45 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $r46 = $r45.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r47 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i7 = r0.<net.htmlparser.jericho.StartTag: int begin>;
        $r48 = virtualinvoke $r47.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i7);
        $r49 = new java.lang.StringBuilder;
        specialinvoke $r49.<java.lang.StringBuilder: void <init>(int)>(200);
        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartTag at ");
        $r51 = virtualinvoke $r48.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r50);
        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" missing required end tag");
        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r46.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r53);
        r2[26] = 1;

     label13:
        r2[27] = 1;
        return null;
    }

    private net.htmlparser.jericho.EndTag getOptionalEndTag(net.htmlparser.jericho.HTMLElementTerminatingTagNameSets)
    {
        net.htmlparser.jericho.StartTag r0, $r15;
        net.htmlparser.jericho.HTMLElementTerminatingTagNameSets r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        net.htmlparser.jericho.Tag r4;
        java.util.Set r5, r13;
        net.htmlparser.jericho.Element r6;
        net.htmlparser.jericho.EndTagType $r7, $r24;
        net.htmlparser.jericho.Source $r8, $r9, $r18, $r21, $r22, $r23;
        boolean $z0, $z1, $z2;
        java.lang.String $r10, $r11, $r14, $r16, $r19, $r25;
        net.htmlparser.jericho.EndTag $r12, $r17, $r20;

        r0 := @this: net.htmlparser.jericho.StartTag;
        r1 := @parameter0: net.htmlparser.jericho.HTMLElementTerminatingTagNameSets;
        $r2 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        i0 = r0.<net.htmlparser.jericho.StartTag: int end>;
        r3[0] = 1;

     label1:
        $r8 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i1 = $r8.<net.htmlparser.jericho.Source: int end>;
        r3[1] = 1;
        if i0 >= $i1 goto label8;

        $r9 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        r4 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int)>($r9, i0);
        r3[2] = 1;
        if r4 != null goto label2;

        r3[3] = 1;
        goto label8;

     label2:
        $z0 = r4 instanceof net.htmlparser.jericho.EndTag;
        r3[4] = 1;
        if $z0 == 0 goto label4;

        $r10 = r4.<net.htmlparser.jericho.Tag: java.lang.String name>;
        $r11 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        r3[5] = 1;
        if $r10 != $r11 goto label3;

        $r12 = (net.htmlparser.jericho.EndTag) r4;
        r3[6] = 1;
        return $r12;

     label3:
        r5 = r1.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set TerminatingEndTagNameSet>;
        r3[7] = 1;
        goto label6;

     label4:
        r13 = r1.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set NonterminatingElementNameSet>;
        r3[8] = 1;
        if r13 == null goto label5;

        $r14 = r4.<net.htmlparser.jericho.Tag: java.lang.String name>;
        $z1 = interfaceinvoke r13.<java.util.Set: boolean contains(java.lang.Object)>($r14);
        r3[9] = 1;
        if $z1 == 0 goto label5;

        $r15 = (net.htmlparser.jericho.StartTag) r4;
        r6 = virtualinvoke $r15.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        i0 = r6.<net.htmlparser.jericho.Element: int end>;
        r3[10] = 1;
        goto label1;

     label5:
        r5 = r1.<net.htmlparser.jericho.HTMLElementTerminatingTagNameSets: java.util.Set TerminatingStartTagNameSet>;
        r3[11] = 1;

     label6:
        r3[12] = 1;
        if r5 == null goto label7;

        $r16 = r4.<net.htmlparser.jericho.Tag: java.lang.String name>;
        $z2 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>($r16);
        r3[13] = 1;
        if $z2 == 0 goto label7;

        $r17 = new net.htmlparser.jericho.EndTag;
        $r18 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i2 = r4.<net.htmlparser.jericho.Tag: int begin>;
        $i3 = r4.<net.htmlparser.jericho.Tag: int begin>;
        $r7 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        $r19 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        specialinvoke $r17.<net.htmlparser.jericho.EndTag: void <init>(net.htmlparser.jericho.Source,int,int,net.htmlparser.jericho.EndTagType,java.lang.String)>($r18, $i2, $i3, $r7, $r19);
        r3[14] = 1;
        return $r17;

     label7:
        $i4 = r4.<net.htmlparser.jericho.Tag: int begin>;
        i0 = $i4 + 1;
        r3[15] = 1;
        goto label1;

     label8:
        $r20 = new net.htmlparser.jericho.EndTag;
        $r21 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $r22 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i5 = $r22.<net.htmlparser.jericho.Source: int end>;
        $r23 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i6 = $r23.<net.htmlparser.jericho.Source: int end>;
        $r24 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        $r25 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        specialinvoke $r20.<net.htmlparser.jericho.EndTag: void <init>(net.htmlparser.jericho.Source,int,int,net.htmlparser.jericho.EndTagType,java.lang.String)>($r21, $i5, $i6, $r24, $r25);
        r3[16] = 1;
        return $r20;
    }

    static java.lang.String getStartDelimiter(java.lang.String)
    {
        java.lang.String r0, r3, $r8, $r14;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        char $c2;

        r0 := @parameter0: java.lang.String;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        r2[0] = 1;
        if $i0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;
        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("searchName argument must not be zero length");
        r2[1] = 1;
        throw $r4;

     label1:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r8 = "<";
        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();
        $c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i1);
        r2[2] = 1;
        if $c2 != 47 goto label2;

        $r9 = new java.lang.IllegalArgumentException;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("searchName argument \"");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" must not start with \'/\'");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);
        r2[3] = 1;
        throw $r9;

     label2:
        r2[4] = 1;
        return r3;
    }

    static net.htmlparser.jericho.StartTag getPrevious(net.htmlparser.jericho.Source, int, java.lang.String, net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        net.htmlparser.jericho.StartTagType r2, $r7;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0;
        net.htmlparser.jericho.StartTag $r9;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: net.htmlparser.jericho.StartTagType;
        $r3 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[25];
        $r7 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r4[0] = 1;
        if r2 != $r7 goto label1;

        $z0 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLName(java.lang.CharSequence)>(r1);
        r4[1] = 1;
        goto label2;

     label1:
        $z0 = 1;
        r4[2] = 1;

     label2:
        $r9 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getPrevious(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>(r0, i0, r1, r2, $z0);
        r4[3] = 1;
        return $r9;
    }

    static net.htmlparser.jericho.StartTag getPrevious(net.htmlparser.jericho.Source, int, java.lang.String, net.htmlparser.jericho.StartTagType, boolean)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, r5, $r14;
        net.htmlparser.jericho.StartTagType r2, $r11, $r12, $r13;
        boolean z0, $z1, $z2, $z3;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.ParseText r6;
        net.htmlparser.jericho.StartTag r7, $r9;
        char c2;
        net.htmlparser.jericho.Tag $r8, $r10;
        null_type $n0;
        java.lang.IndexOutOfBoundsException $r16, r17;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: net.htmlparser.jericho.StartTagType;
        z0 := @parameter4: boolean;
        $r3 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[26];
        r4[0] = 1;
        if r1 != null goto label1;

        $r8 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getPreviousTag(int,net.htmlparser.jericho.TagType)>(i0, r2);
        $r9 = (net.htmlparser.jericho.StartTag) $r8;
        r4[1] = 1;
        return $r9;

     label1:
        r5 = staticinvoke <net.htmlparser.jericho.StartTag: java.lang.String getStartDelimiter(java.lang.String)>(r1);

     label2:
        r6 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = i0;
        r4[2] = 1;

     label3:
        i3 = interfaceinvoke r6.<net.htmlparser.jericho.ParseText: int lastIndexOf(java.lang.String,int)>(r5, i1);
        r4[3] = 1;
        if i3 != -1 goto label5;

        $n0 = null;
        r4[4] = 1;

     label4:
        return $n0;

     label5:
        $r10 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean)>(r0, i3, 0);
        r7 = (net.htmlparser.jericho.StartTag) $r10;
        r4[5] = 1;
        if r7 != null goto label6;

        r4[6] = 1;
        goto label10;

     label6:
        $r11 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        r4[7] = 1;
        if r2 == $r11 goto label7;

        $r12 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r4[8] = 1;
        if r2 != $r12 goto label10;

        r4[9] = 1;
        if z0 != 0 goto label10;

        $z1 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: boolean isUnregistered()>();
        r4[10] = 1;
        if $z1 != 0 goto label7;

        r4[11] = 1;
        goto label10;

     label7:
        $r13 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $z2 = virtualinvoke $r13.<net.htmlparser.jericho.StartTagType: boolean isNameAfterPrefixRequired()>();
        r4[12] = 1;
        if $z2 == 0 goto label8;

        $r14 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: java.lang.String getName()>();
        $i4 = virtualinvoke $r14.<java.lang.String: int length()>();
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();
        r4[13] = 1;
        if $i4 <= $i5 goto label8;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();
        $i7 = $i6 - 1;
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i7);
        r4[14] = 1;
        if c2 == 58 goto label8;

        $z3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean isXMLNameChar(char)>(c2);
        r4[15] = 1;
        if $z3 == 0 goto label8;

        r4[16] = 1;
        goto label10;

     label8:
        r4[17] = 1;

     label9:
        return r7;

     label10:
        i1 = i3 + -2;
        r4[18] = 1;
        if i1 >= 0 goto label3;

        r4[19] = 1;

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;
        r17 = $r16;
        r4[20] = 1;
        throw r17;

     label13:
        r4[21] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label2 to label4 with label12;
        catch java.lang.IndexOutOfBoundsException from label5 to label9 with label12;
        catch java.lang.IndexOutOfBoundsException from label10 to label11 with label12;
    }

    static net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source, int, java.lang.String, net.htmlparser.jericho.StartTagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        java.lang.String r1;
        net.htmlparser.jericho.StartTagType r2, $r7;
        boolean[][] $r3;
        boolean[] r4;
        boolean $z0;
        net.htmlparser.jericho.StartTag $r9;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: net.htmlparser.jericho.StartTagType;
        $r3 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[27];
        $r7 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r4[0] = 1;
        if r2 != $r7 goto label1;

        $z0 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLName(java.lang.CharSequence)>(r1);
        r4[1] = 1;
        goto label2;

     label1:
        $z0 = 1;
        r4[2] = 1;

     label2:
        $r9 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>(r0, i0, r1, r2, $z0);
        r4[3] = 1;
        return $r9;
    }

    static net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source, int, java.lang.String, net.htmlparser.jericho.StartTagType, boolean)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r1, r5, $r14;
        net.htmlparser.jericho.StartTagType r2, $r11, $r12, $r13;
        boolean z0, $z1, $z2, $z3;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.ParseText r6;
        net.htmlparser.jericho.StartTag r7, $r9;
        char c2;
        net.htmlparser.jericho.Tag $r8, $r10;
        null_type $n0;
        java.lang.IndexOutOfBoundsException $r16, r17;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: net.htmlparser.jericho.StartTagType;
        z0 := @parameter4: boolean;
        $r3 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[28];
        r4[0] = 1;
        if r1 != null goto label1;

        $r8 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getNextTag(int,net.htmlparser.jericho.TagType)>(i0, r2);
        $r9 = (net.htmlparser.jericho.StartTag) $r8;
        r4[1] = 1;
        return $r9;

     label1:
        r5 = staticinvoke <net.htmlparser.jericho.StartTag: java.lang.String getStartDelimiter(java.lang.String)>(r1);

     label2:
        r6 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = i0;
        r4[2] = 1;

     label3:
        i3 = interfaceinvoke r6.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int)>(r5, i1);
        r4[3] = 1;
        if i3 != -1 goto label5;

        $n0 = null;
        r4[4] = 1;

     label4:
        return $n0;

     label5:
        $r10 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean)>(r0, i3, 0);
        r7 = (net.htmlparser.jericho.StartTag) $r10;
        r4[5] = 1;
        if r7 != null goto label6;

        r4[6] = 1;
        goto label10;

     label6:
        $r11 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        r4[7] = 1;
        if r2 == $r11 goto label7;

        $r12 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r4[8] = 1;
        if r2 != $r12 goto label10;

        r4[9] = 1;
        if z0 != 0 goto label10;

        $z1 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: boolean isUnregistered()>();
        r4[10] = 1;
        if $z1 != 0 goto label7;

        r4[11] = 1;
        goto label10;

     label7:
        $r13 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType getStartTagType()>();
        $z2 = virtualinvoke $r13.<net.htmlparser.jericho.StartTagType: boolean isNameAfterPrefixRequired()>();
        r4[12] = 1;
        if $z2 == 0 goto label8;

        $r14 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: java.lang.String getName()>();
        $i4 = virtualinvoke $r14.<java.lang.String: int length()>();
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();
        r4[13] = 1;
        if $i4 <= $i5 goto label8;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();
        $i7 = $i6 - 1;
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i7);
        r4[14] = 1;
        if c2 == 58 goto label8;

        $z3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean isXMLNameChar(char)>(c2);
        r4[15] = 1;
        if $z3 == 0 goto label8;

        r4[16] = 1;
        goto label10;

     label8:
        r4[17] = 1;

     label9:
        return r7;

     label10:
        i1 = i3 + 1;
        $i8 = r0.<net.htmlparser.jericho.Source: int end>;
        r4[18] = 1;
        if i1 < $i8 goto label3;

        r4[19] = 1;

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;
        r17 = $r16;
        r4[20] = 1;

     label13:
        r4[21] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label2 to label4 with label12;
        catch java.lang.IndexOutOfBoundsException from label5 to label9 with label12;
        catch java.lang.IndexOutOfBoundsException from label10 to label11 with label12;
    }

    static net.htmlparser.jericho.StartTag getPrevious(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        boolean $z0;
        net.htmlparser.jericho.StartTag $r4, $r5;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[29];
        r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        if r3 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $z0 = r3 instanceof net.htmlparser.jericho.StartTag;
        r2[2] = 1;
        if $z0 == 0 goto label2;

        $r4 = (net.htmlparser.jericho.StartTag) r3;
        r2[3] = 1;
        return $r4;

     label2:
        $r5 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.StartTag getPreviousStartTag()>();
        r2[4] = 1;
        return $r5;
    }

    static net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        boolean $z0;
        net.htmlparser.jericho.StartTag $r4, $r5;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[0] = 1;
        if r3 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $z0 = r3 instanceof net.htmlparser.jericho.StartTag;
        r2[2] = 1;
        if $z0 == 0 goto label2;

        $r4 = (net.htmlparser.jericho.StartTag) r3;
        r2[3] = 1;
        return $r4;

     label2:
        $r5 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.StartTag getNextStartTag()>();
        r2[4] = 1;
        return $r5;
    }

    static net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source, int, java.lang.String, java.lang.String, boolean)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        java.lang.String r1, r2, r5, r9, $r11, $r12, $r27;
        boolean z0, $z1, $z2, $z3, $z4;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.ParseText r6;
        net.htmlparser.jericho.Tag r7;
        net.htmlparser.jericho.StartTag r8;
        java.lang.IllegalArgumentException $r10;
        net.htmlparser.jericho.Attributes $r13, $r14;
        net.htmlparser.jericho.Logger $r15, $r16;
        net.htmlparser.jericho.RowColumnVector $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: java.lang.String;
        z0 := @parameter4: boolean;
        $r3 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[31];
        r4[0] = 1;
        if r2 == null goto label1;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        r4[1] = 1;
        if $i2 != 0 goto label2;

     label1:
        $r10 = new java.lang.IllegalArgumentException;
        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>()>();
        r4[2] = 1;
        throw $r10;

     label2:
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();
        r4[3] = 1;
        if $i3 >= 3 goto label3;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();
        r4[4] = 1;
        if $i4 <= 0 goto label4;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();
        r4[5] = 1;
        if $i5 >= 3 goto label4;

     label3:
        $r11 = r2;
        r4[6] = 1;
        goto label5;

     label4:
        $r11 = r1;
        r4[7] = 1;

     label5:
        r5 = $r11;
        r6 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = i0;
        r4[8] = 1;

     label6:
        $i6 = r0.<net.htmlparser.jericho.Source: int end>;
        r4[9] = 1;
        if i1 >= $i6 goto label13;

        $r12 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase()>();
        i7 = interfaceinvoke r6.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int)>($r12, i1);
        r4[10] = 1;
        if i7 != -1 goto label7;

        r4[11] = 1;
        return null;

     label7:
        r7 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getEnclosingTag(int)>(i7);
        r4[12] = 1;
        if r7 == null goto label8;

        $z1 = r7 instanceof net.htmlparser.jericho.StartTag;
        r4[13] = 1;
        if $z1 != 0 goto label9;

     label8:
        i1 = i7 + 1;
        r4[14] = 1;
        goto label6;

     label9:
        $i8 = r7.<net.htmlparser.jericho.Tag: int begin>;
        r4[15] = 1;
        if $i8 < i0 goto label12;

        r8 = (net.htmlparser.jericho.StartTag) r7;
        $r13 = virtualinvoke r8.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r4[16] = 1;
        if $r13 == null goto label12;

        $r14 = virtualinvoke r8.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r9 = virtualinvoke $r14.<net.htmlparser.jericho.Attributes: java.lang.String getValue(java.lang.String)>(r1);
        r4[17] = 1;
        if r9 == null goto label12;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r9);
        r4[18] = 1;
        if $z2 == 0 goto label10;

        r4[19] = 1;
        return r8;

     label10:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r9);
        r4[20] = 1;
        if $z3 == 0 goto label12;

        r4[21] = 1;
        if z0 != 0 goto label11;

        r4[22] = 1;
        return r8;

     label11:
        $r15 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z4 = interfaceinvoke $r15.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r4[23] = 1;
        if $z4 == 0 goto label12;

        $r16 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r17 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i7);
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(int)>(200);
        $r19 = virtualinvoke $r17.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": StartTag with attribute ");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ignored during search because its case does not match search value \"");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r16.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r27);
        r4[24] = 1;

     label12:
        i1 = r7.<net.htmlparser.jericho.Tag: int end>;
        r4[25] = 1;
        goto label6;

     label13:
        r4[26] = 1;
        return null;
    }

    static net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source, int, java.lang.String, java.util.regex.Pattern)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, $i2, $i3, i4, $i5;
        java.lang.String r1, r5, r10, $r12;
        java.util.regex.Pattern r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.ParseText r6;
        net.htmlparser.jericho.Tag r7;
        net.htmlparser.jericho.StartTag r8;
        net.htmlparser.jericho.Attribute r9;
        java.lang.IllegalArgumentException $r11;
        boolean $z0, $z1;
        net.htmlparser.jericho.Attributes $r13, $r14;
        java.util.regex.Matcher $r15;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: java.util.regex.Pattern;
        $r3 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[32];
        r4[0] = 1;
        if r1 == null goto label1;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        r4[1] = 1;
        if $i2 != 0 goto label2;

     label1:
        $r11 = new java.lang.IllegalArgumentException;
        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>()>();
        r4[2] = 1;
        throw $r11;

     label2:
        r5 = r1;
        r6 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = i0;
        r4[3] = 1;

     label3:
        $i3 = r0.<net.htmlparser.jericho.Source: int end>;
        r4[4] = 1;
        if i1 >= $i3 goto label9;

        $r12 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase()>();
        i4 = interfaceinvoke r6.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int)>($r12, i1);
        r4[5] = 1;
        if i4 != -1 goto label4;

        r4[6] = 1;
        return null;

     label4:
        r7 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getEnclosingTag(int)>(i4);
        r4[7] = 1;
        if r7 == null goto label5;

        $z0 = r7 instanceof net.htmlparser.jericho.StartTag;
        r4[8] = 1;
        if $z0 != 0 goto label6;

     label5:
        i1 = i4 + 1;
        r4[9] = 1;
        goto label3;

     label6:
        $i5 = r7.<net.htmlparser.jericho.Tag: int begin>;
        r4[10] = 1;
        if $i5 < i0 goto label8;

        r8 = (net.htmlparser.jericho.StartTag) r7;
        $r13 = virtualinvoke r8.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r4[11] = 1;
        if $r13 == null goto label8;

        $r14 = virtualinvoke r8.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r9 = virtualinvoke $r14.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>(r1);
        r4[12] = 1;
        if r9 == null goto label8;

        r4[13] = 1;
        if r2 != null goto label7;

        r4[14] = 1;
        return r8;

     label7:
        r10 = virtualinvoke r9.<net.htmlparser.jericho.Attribute: java.lang.String getValue()>();
        r4[15] = 1;
        if r10 == null goto label8;

        $r15 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);
        $z1 = virtualinvoke $r15.<java.util.regex.Matcher: boolean matches()>();
        r4[16] = 1;
        if $z1 == 0 goto label8;

        r4[17] = 1;
        return r8;

     label8:
        i1 = r7.<net.htmlparser.jericho.Tag: int end>;
        r4[18] = 1;
        goto label3;

     label9:
        r4[19] = 1;
        return null;
    }

    private net.htmlparser.jericho.Segment[] getEndTag(net.htmlparser.jericho.EndTag, boolean, boolean)
    {
        net.htmlparser.jericho.StartTag r0, r4;
        net.htmlparser.jericho.EndTag r1;
        boolean z0, z1, $z2, $z3;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.AssertionError $r5;
        net.htmlparser.jericho.Source $r6, $r9;
        int $i0, $i1, $i2;
        java.lang.String $r7, $r10;
        net.htmlparser.jericho.StartTagType $r8, $r11;
        net.htmlparser.jericho.Segment[] $r12;

        r0 := @this: net.htmlparser.jericho.StartTag;
        r1 := @parameter0: net.htmlparser.jericho.EndTag;
        z0 := @parameter1: boolean;
        z1 := @parameter2: boolean;
        $r2 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[33];
        $z2 = <net.htmlparser.jericho.StartTag: boolean $assertionsDisabled>;
        r3[0] = 1;
        if $z2 != 0 goto label1;

        r3[1] = 1;
        if r1 != null goto label1;

        $r5 = new java.lang.AssertionError;
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();
        r3[2] = 1;
        throw $r5;

     label1:
        $r6 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.StartTag: int end>;
        $r7 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $r8 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        r4 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>($r6, $i0, $r7, $r8, z1);
        r3[3] = 1;
        if z0 == 0 goto label3;

     label2:
        r3[4] = 1;
        if r4 == null goto label3;

        $z3 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: boolean isSyntacticalEmptyElementTag()>();
        r3[5] = 1;
        if $z3 == 0 goto label3;

        $r9 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i1 = r4.<net.htmlparser.jericho.StartTag: int end>;
        $r10 = r0.<net.htmlparser.jericho.StartTag: java.lang.String name>;
        $r11 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTagType startTagType>;
        r4 = staticinvoke <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.StartTagType,boolean)>($r9, $i1, $r10, $r11, z1);
        r3[6] = 1;
        goto label2;

     label3:
        $i2 = r0.<net.htmlparser.jericho.StartTag: int end>;
        $r12 = specialinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Segment[] getEndTag(int,net.htmlparser.jericho.StartTag,net.htmlparser.jericho.EndTag,boolean,boolean)>($i2, r4, r1, z0, z1);
        r3[7] = 1;
        return $r12;
    }

    private net.htmlparser.jericho.Segment[] getEndTag(int, net.htmlparser.jericho.StartTag, net.htmlparser.jericho.EndTag, boolean, boolean)
    {
        net.htmlparser.jericho.StartTag r0, r1, $r15;
        int i0, $i1, $i2, $i3, $i4;
        net.htmlparser.jericho.EndTag r2, r7, r8;
        boolean z0, z1;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Segment[] r5, r6, $r9, $r16;
        net.htmlparser.jericho.Segment $r10, $r14;
        net.htmlparser.jericho.Source $r11;
        java.lang.String $r12;
        net.htmlparser.jericho.EndTagType $r13;

        r0 := @this: net.htmlparser.jericho.StartTag;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.StartTag;
        r2 := @parameter2: net.htmlparser.jericho.EndTag;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        $r3 = <net.htmlparser.jericho.StartTag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[34];
        r4[0] = 1;
        if r2 != null goto label1;

        r4[1] = 1;
        return null;

     label1:
        $r9 = newarray (net.htmlparser.jericho.Segment)[2];
        $r9[0] = r2;
        $r9[1] = r1;
        r5 = $r9;
        r4[2] = 1;
        if r1 == null goto label2;

        $i1 = r1.<net.htmlparser.jericho.StartTag: int begin>;
        $i2 = r2.<net.htmlparser.jericho.EndTag: int begin>;
        r4[3] = 1;
        if $i1 <= $i2 goto label3;

     label2:
        r4[4] = 1;
        return r5;

     label3:
        r6 = specialinvoke r1.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Segment[] getEndTag(net.htmlparser.jericho.EndTag,boolean,boolean)>(r2, z0, z1);
        r4[5] = 1;
        if r6 != null goto label4;

        r4[6] = 1;
        return null;

     label4:
        $r10 = r6[0];
        r7 = (net.htmlparser.jericho.EndTag) $r10;
        $r11 = r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Source source>;
        $i3 = r7.<net.htmlparser.jericho.EndTag: int end>;
        $r12 = virtualinvoke r2.<net.htmlparser.jericho.EndTag: java.lang.String getName()>();
        $r13 = virtualinvoke r2.<net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTagType getEndTagType()>();
        r8 = staticinvoke <net.htmlparser.jericho.EndTag: net.htmlparser.jericho.EndTag getNext(net.htmlparser.jericho.Source,int,java.lang.String,net.htmlparser.jericho.EndTagType)>($r11, $i3, $r12, $r13);
        $i4 = r7.<net.htmlparser.jericho.EndTag: int end>;
        $r14 = r6[1];
        $r15 = (net.htmlparser.jericho.StartTag) $r14;
        $r16 = specialinvoke r0.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Segment[] getEndTag(int,net.htmlparser.jericho.StartTag,net.htmlparser.jericho.EndTag,boolean,boolean)>($i4, $r15, r8, z0, z1);
        r4[7] = 1;
        return $r16;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.Class $r2;
        boolean $z0, $z1;
        net.htmlparser.jericho.Tag $r3;
        net.htmlparser.jericho.StartTag $r4;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTag: boolean[][] $VRi()>();
        r1 = $r0[35];
        $r2 = class "net/htmlparser/jericho/StartTag";
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();
        r1[0] = 1;
        if $z0 != 0 goto label0;

        $z1 = 1;
        r1[1] = 1;
        goto label1;

     label0:
        $z1 = 0;
        r1[2] = 1;

     label1:
        <net.htmlparser.jericho.StartTag: boolean $assertionsDisabled> = $z1;
        $r3 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        $r4 = (net.htmlparser.jericho.StartTag) $r3;
        <net.htmlparser.jericho.StartTag: net.htmlparser.jericho.StartTag NOT_CACHED> = $r4;
        r1[3] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;

        $r0 = newmultiarray (boolean)[36][];
        <net.htmlparser.jericho.StartTag: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[3];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[8];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[5];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[4];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[9];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[10];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[13];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[4];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[16];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[6];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[7];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[3];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[28];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[17];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[5];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[4];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[22];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[4];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[22];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[5];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[5];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[27];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[20];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[8];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[8];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[4];
        $r0[35] = $r36;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTag", 8231721213117820104L);
        return $r0;
    }
}
public abstract class net.htmlparser.jericho.StartTagType extends net.htmlparser.jericho.TagType
{
    private final net.htmlparser.jericho.EndTagType correspondingEndTagType;
    private final boolean hasAttributes;
    private final boolean isNameAfterPrefixRequired;
    static final java.lang.String START_DELIMITER_PREFIX;
    public static final net.htmlparser.jericho.StartTagType UNREGISTERED;
    public static final net.htmlparser.jericho.StartTagType NORMAL;
    public static final net.htmlparser.jericho.StartTagType COMMENT;
    public static final net.htmlparser.jericho.StartTagType XML_DECLARATION;
    public static final net.htmlparser.jericho.StartTagType XML_PROCESSING_INSTRUCTION;
    public static final net.htmlparser.jericho.StartTagType DOCTYPE_DECLARATION;
    public static final net.htmlparser.jericho.StartTagType MARKUP_DECLARATION;
    public static final net.htmlparser.jericho.StartTagType CDATA_SECTION;
    public static final net.htmlparser.jericho.StartTagType SERVER_COMMON;
    public static final net.htmlparser.jericho.StartTagType SERVER_COMMON_ESCAPED;
    public static final net.htmlparser.jericho.StartTagType SERVER_COMMON_COMMENT;
    private static final boolean[][] $VRc;

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, net.htmlparser.jericho.EndTagType, boolean, boolean, boolean)
    {
        net.htmlparser.jericho.StartTagType r0;
        java.lang.String r1, r2, r3, $r7, $r8;
        net.htmlparser.jericho.EndTagType r4;
        boolean z0, z1, z2, $z3;
        boolean[][] $r5;
        boolean[] r6;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: net.htmlparser.jericho.StartTagType;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: net.htmlparser.jericho.EndTagType;
        z0 := @parameter4: boolean;
        z1 := @parameter5: boolean;
        z2 := @parameter6: boolean;
        $r5 = <net.htmlparser.jericho.StartTagType: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.StartTagType: boolean[][] $VRi()>();

     label0:
        r6 = $r5[0];
        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        specialinvoke r0.<net.htmlparser.jericho.TagType: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, $r7, r3, z0, "<");
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.StartTagType: java.lang.String getStartDelimiter()>();
        $z3 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("<");
        r6[0] = 1;
        if $z3 != 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("startDelimiter of a start tag must start with \"<\"");
        r6[1] = 1;
        throw $r9;

     label1:
        r0.<net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.EndTagType correspondingEndTagType> = r4;
        r0.<net.htmlparser.jericho.StartTagType: boolean hasAttributes> = z1;
        r0.<net.htmlparser.jericho.StartTagType: boolean isNameAfterPrefixRequired> = z2;
        r6[2] = 1;
        return;
    }

    public final net.htmlparser.jericho.EndTagType getCorrespondingEndTagType()
    {
        net.htmlparser.jericho.StartTagType r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagType $r3;

        r0 := @this: net.htmlparser.jericho.StartTagType;
        $r1 = <net.htmlparser.jericho.StartTagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.EndTagType correspondingEndTagType>;
        r2[0] = 1;
        return $r3;
    }

    public final boolean hasAttributes()
    {
        net.htmlparser.jericho.StartTagType r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StartTagType;
        $r1 = <net.htmlparser.jericho.StartTagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $z0 = r0.<net.htmlparser.jericho.StartTagType: boolean hasAttributes>;
        r2[0] = 1;
        return $z0;
    }

    public final boolean isNameAfterPrefixRequired()
    {
        net.htmlparser.jericho.StartTagType r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StartTagType;
        $r1 = <net.htmlparser.jericho.StartTagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $z0 = r0.<net.htmlparser.jericho.StartTagType: boolean isNameAfterPrefixRequired>;
        r2[0] = 1;
        return $z0;
    }

    public boolean atEndOfAttributes(net.htmlparser.jericho.Source, int, boolean)
    {
        net.htmlparser.jericho.StartTagType r0;
        net.htmlparser.jericho.Source r1;
        int i0;
        boolean z0, $z1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText $r4;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.StartTagType;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r2 = <net.htmlparser.jericho.StartTagType: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagType: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.StartTagType: java.lang.String getClosingDelimiter()>();
        $z1 = interfaceinvoke $r4.<net.htmlparser.jericho.ParseText: boolean containsAt(java.lang.String,int)>($r5, i0);
        r3[0] = 1;
        return $z1;
    }

    protected final net.htmlparser.jericho.StartTag constructStartTag(net.htmlparser.jericho.Source, int, int, java.lang.String, net.htmlparser.jericho.Attributes)
    {
        net.htmlparser.jericho.StartTagType r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        java.lang.String r2;
        net.htmlparser.jericho.Attributes r3;
        boolean[][] $r4;
        boolean[] r5;
        net.htmlparser.jericho.StartTag $r6;

        r0 := @this: net.htmlparser.jericho.StartTagType;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        r3 := @parameter4: net.htmlparser.jericho.Attributes;
        $r4 = <net.htmlparser.jericho.StartTagType: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.StartTagType: boolean[][] $VRi()>();

     label0:
        r5 = $r4[5];
        $r6 = new net.htmlparser.jericho.StartTag;
        specialinvoke $r6.<net.htmlparser.jericho.StartTag: void <init>(net.htmlparser.jericho.Source,int,int,net.htmlparser.jericho.StartTagType,java.lang.String,net.htmlparser.jericho.Attributes)>(r1, i0, i1, r0, r2, r3);
        r5[0] = 1;
        return $r6;
    }

    protected final net.htmlparser.jericho.Attributes parseAttributes(net.htmlparser.jericho.Source, int, java.lang.String)
    {
        net.htmlparser.jericho.StartTagType r0;
        net.htmlparser.jericho.Source r1;
        int i0;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Attributes $r5;

        r0 := @this: net.htmlparser.jericho.StartTagType;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        $r3 = <net.htmlparser.jericho.StartTagType: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StartTagType: boolean[][] $VRi()>();

     label0:
        r4 = $r3[6];
        $r5 = staticinvoke <net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attributes construct(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.StartTagType,java.lang.String)>(r1, i0, r0, r2);
        r4[0] = 1;
        return $r5;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeUnregistered $r2;
        net.htmlparser.jericho.StartTagTypeNormal $r3;
        net.htmlparser.jericho.StartTagTypeComment $r4;
        net.htmlparser.jericho.StartTagTypeXMLDeclaration $r5;
        net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction $r6;
        net.htmlparser.jericho.StartTagTypeDoctypeDeclaration $r7;
        net.htmlparser.jericho.StartTagTypeMarkupDeclaration $r8;
        net.htmlparser.jericho.StartTagTypeCDATASection $r9;
        net.htmlparser.jericho.StartTagTypeServerCommon $r10;
        net.htmlparser.jericho.StartTagTypeServerCommonEscaped $r11;
        net.htmlparser.jericho.StartTagTypeServerCommonComment $r12;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagType: boolean[][] $VRi()>();
        r1 = $r0[7];
        $r2 = <net.htmlparser.jericho.StartTagTypeUnregistered: net.htmlparser.jericho.StartTagTypeUnregistered INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType UNREGISTERED> = $r2;
        $r3 = <net.htmlparser.jericho.StartTagTypeNormal: net.htmlparser.jericho.StartTagTypeNormal INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL> = $r3;
        $r4 = <net.htmlparser.jericho.StartTagTypeComment: net.htmlparser.jericho.StartTagTypeComment INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType COMMENT> = $r4;
        $r5 = <net.htmlparser.jericho.StartTagTypeXMLDeclaration: net.htmlparser.jericho.StartTagTypeXMLDeclaration INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType XML_DECLARATION> = $r5;
        $r6 = <net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction: net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType XML_PROCESSING_INSTRUCTION> = $r6;
        $r7 = <net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: net.htmlparser.jericho.StartTagTypeDoctypeDeclaration INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType DOCTYPE_DECLARATION> = $r7;
        $r8 = <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: net.htmlparser.jericho.StartTagTypeMarkupDeclaration INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType MARKUP_DECLARATION> = $r8;
        $r9 = <net.htmlparser.jericho.StartTagTypeCDATASection: net.htmlparser.jericho.StartTagTypeCDATASection INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType CDATA_SECTION> = $r9;
        $r10 = <net.htmlparser.jericho.StartTagTypeServerCommon: net.htmlparser.jericho.StartTagTypeServerCommon INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON> = $r10;
        $r11 = <net.htmlparser.jericho.StartTagTypeServerCommonEscaped: net.htmlparser.jericho.StartTagTypeServerCommonEscaped INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON_ESCAPED> = $r11;
        $r12 = <net.htmlparser.jericho.StartTagTypeServerCommonComment: net.htmlparser.jericho.StartTagTypeServerCommonComment INSTANCE>;
        <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON_COMMENT> = $r12;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = newmultiarray (boolean)[8][];
        <net.htmlparser.jericho.StartTagType: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[3];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagType", 4193883143266302296L);
        return $r0;
    }
}
class net.htmlparser.jericho.StartTagTypeCDATASection extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeCDATASection INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeCDATASection r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeCDATASection;
        $r1 = <net.htmlparser.jericho.StartTagTypeCDATASection: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeCDATASection: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("CDATA section", "<![cdata[", "]]>", null, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeCDATASection $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeCDATASection: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeCDATASection;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeCDATASection: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeCDATASection: net.htmlparser.jericho.StartTagTypeCDATASection INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeCDATASection: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeCDATASection", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeComment extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeComment INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeComment r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeComment;
        $r1 = <net.htmlparser.jericho.StartTagTypeComment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeComment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("comment", "<!--", "-->", null, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeComment $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeComment: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeComment;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeComment: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeComment: net.htmlparser.jericho.StartTagTypeComment INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeComment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeComment", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeDoctypeDeclaration extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeDoctypeDeclaration INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeDoctypeDeclaration r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeDoctypeDeclaration;
        $r1 = <net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("document type declaration", "<!doctype", ">", null, 0, 0, 0);
        r2[0] = 1;
        return;
    }

    protected int getEnd(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeDoctypeDeclaration r0;
        net.htmlparser.jericho.Source r1;
        int i0, $i2, $i3;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        boolean z0, z1;
        char c1;

        r0 := @this: net.htmlparser.jericho.StartTagTypeDoctypeDeclaration;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        z0 = 0;
        z1 = 0;
        r3[0] = 1;

     label1:
        c1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: char charAt(int)>(i0);
        r3[1] = 1;
        if z0 == 0 goto label2;

        r3[2] = 1;
        if c1 != 34 goto label7;

        z0 = 0;
        r3[3] = 1;
        goto label7;

     label2:
        r3[4] = 1;
        lookupswitch(c1)
        {
            case 34: goto label4;
            case 62: goto label3;
            case 91: goto label5;
            case 93: goto label6;
            default: goto label7;
        };

     label3:
        r3[5] = 1;
        if z1 != 0 goto label7;

        $i2 = i0 + 1;
        r3[6] = 1;
        return $i2;

     label4:
        z0 = 1;
        r3[7] = 1;
        goto label7;

     label5:
        z1 = 1;
        r3[8] = 1;
        goto label7;

     label6:
        z1 = 0;
        r3[9] = 1;

     label7:
        i0 = i0 + 1;
        $i3 = virtualinvoke r1.<net.htmlparser.jericho.Source: int getEnd()>();
        r3[10] = 1;
        if i0 < $i3 goto label1;

        r3[11] = 1;
        return -1;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeDoctypeDeclaration $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.StartTagTypeDoctypeDeclaration;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: net.htmlparser.jericho.StartTagTypeDoctypeDeclaration INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.StartTagTypeDoctypeDeclaration: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[12];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeDoctypeDeclaration", -7580699111865023756L);
        return $r0;
    }
}
public class net.htmlparser.jericho.StartTagTypeGenericImplementation extends net.htmlparser.jericho.StartTagType
{
    final boolean nameCharAfterPrefixAllowed;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, net.htmlparser.jericho.EndTagType, boolean)
    {
        net.htmlparser.jericho.StartTagTypeGenericImplementation r0;
        java.lang.String r1, r2, r3;
        net.htmlparser.jericho.EndTagType r4;
        boolean z0;
        boolean[][] $r5;
        boolean[] r6;

        r0 := @this: net.htmlparser.jericho.StartTagTypeGenericImplementation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: net.htmlparser.jericho.EndTagType;
        z0 := @parameter4: boolean;
        $r5 = <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r6 = $r5[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>(r1, r2, r3, r4, z0, 0, 0);
        r6[0] = 1;
        return;
    }

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, net.htmlparser.jericho.EndTagType, boolean, boolean, boolean)
    {
        net.htmlparser.jericho.StartTagTypeGenericImplementation r0;
        java.lang.String r1, r2, r3, $r8, $r9, $r10;
        net.htmlparser.jericho.EndTagType r4;
        boolean z0, z1, z2, $z3, $z4;
        boolean[][] $r5;
        boolean[] r6;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this: net.htmlparser.jericho.StartTagTypeGenericImplementation;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: net.htmlparser.jericho.EndTagType;
        z0 := @parameter4: boolean;
        z1 := @parameter5: boolean;
        z2 := @parameter6: boolean;
        $r5 = <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r6 = $r5[1];
        specialinvoke r0.<net.htmlparser.jericho.StartTagType: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>(r1, r2, r3, r4, z0, z1, z2);
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: java.lang.String getNamePrefix()>();
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        r6[0] = 1;
        if $i0 == 0 goto label1;

        $r9 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: java.lang.String getNamePrefix()>();
        $r10 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: java.lang.String getNamePrefix()>();
        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();
        $i2 = $i1 - 1;
        $c3 = virtualinvoke $r9.<java.lang.String: char charAt(int)>($i2);
        $z3 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c3);
        r6[1] = 1;
        if $z3 != 0 goto label2;

     label1:
        $z4 = 1;
        r6[2] = 1;
        goto label3;

     label2:
        $z4 = 0;
        r6[3] = 1;

     label3:
        r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean nameCharAfterPrefixAllowed> = $z4;
        r6[4] = 1;
        return;
    }

    protected net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeGenericImplementation r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, i2, i3, $i4, $i6, i7;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        java.lang.String r5, $r7, $r17, $r20;
        net.htmlparser.jericho.Attributes r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        char $c5;
        net.htmlparser.jericho.Logger $r8, $r9;
        net.htmlparser.jericho.RowColumnVector $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19;
        net.htmlparser.jericho.StartTag $r21;

        r0 := @this: net.htmlparser.jericho.StartTagTypeGenericImplementation;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i1 = i0 + 1;
        r5 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: java.lang.String getNamePrefix()>();
        $r7 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: java.lang.String getNamePrefix()>();
        $i4 = virtualinvoke $r7.<java.lang.String: int length()>();
        i2 = i1 + $i4;
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean isNameAfterPrefixRequired()>();
        r3[0] = 1;
        if $z0 == 0 goto label2;

        i3 = virtualinvoke r1.<net.htmlparser.jericho.Source: int getNameEnd(int)>(i2);
        r3[1] = 1;
        if i3 != -1 goto label1;

        r3[2] = 1;
        return null;

     label1:
        r5 = virtualinvoke r1.<net.htmlparser.jericho.Source: java.lang.String getName(int,int)>(i1, i3);
        i2 = i3;
        r3[3] = 1;
        goto label3;

     label2:
        $z1 = r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean nameCharAfterPrefixAllowed>;
        r3[4] = 1;
        if $z1 != 0 goto label3;

        $c5 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: char charAt(int)>(i2);
        $z2 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLNameChar(char)>($c5);
        r3[5] = 1;
        if $z2 == 0 goto label3;

        r3[6] = 1;
        return null;

     label3:
        r6 = null;
        $z3 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean hasAttributes()>();
        r3[7] = 1;
        if $z3 == 0 goto label5;

        r6 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: net.htmlparser.jericho.Attributes parseAttributes(net.htmlparser.jericho.Source,int,java.lang.String)>(r1, i0, r5);
        r3[8] = 1;
        if r6 != null goto label4;

        r3[9] = 1;
        return null;

     label4:
        $i6 = virtualinvoke r6.<net.htmlparser.jericho.Attributes: int getEnd()>();
        i7 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: int getEnd(net.htmlparser.jericho.Source,int)>(r1, $i6);
        r3[10] = 1;
        goto label7;

     label5:
        i7 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: int getEnd(net.htmlparser.jericho.Source,int)>(r1, i2);
        r3[11] = 1;
        if i7 >= 0 goto label7;

        r3[12] = 1;
        if i7 != -1 goto label6;

        $r8 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z4 = interfaceinvoke $r8.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r3[13] = 1;
        if $z4 == 0 goto label6;

        $r9 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r10 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>(200);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartTag ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");
        $r15 = virtualinvoke $r10.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recognised as type \'");
        $r17 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: java.lang.String getDescription()>();
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' because it has no closing delimiter");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r9.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r20);
        r3[14] = 1;

     label6:
        r3[15] = 1;
        return null;

     label7:
        $r21 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: net.htmlparser.jericho.StartTag constructStartTag(net.htmlparser.jericho.Source,int,int,java.lang.String,net.htmlparser.jericho.Attributes)>(r1, i0, i7, r5, r6);
        r3[16] = 1;
        return $r21;
    }

    protected int getEnd(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeGenericImplementation r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, $i2, $i3;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText $r4;
        java.lang.String $r5, $r6;

        r0 := @this: net.htmlparser.jericho.StartTagTypeGenericImplementation;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $r5 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: java.lang.String getClosingDelimiter()>();
        i1 = interfaceinvoke $r4.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int)>($r5, i0);
        r3[0] = 1;
        if i1 != -1 goto label1;

        $i2 = -1;
        r3[1] = 1;
        goto label2;

     label1:
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: java.lang.String getClosingDelimiter()>();
        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();
        $i2 = i1 + $i3;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $i2;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.StartTagTypeGenericImplementation: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[17];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeGenericImplementation", 698718541186769265L);
        return $r0;
    }
}
class net.htmlparser.jericho.StartTagTypeMarkupDeclaration extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeMarkupDeclaration INSTANCE;
    static final java.lang.String ELEMENT;
    static final java.lang.String ATTLIST;
    static final java.lang.String ENTITY;
    static final java.lang.String NOTATION;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMarkupDeclaration r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMarkupDeclaration;
        $r1 = <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("markup declaration", "<!", ">", null, 0, 0, 1);
        r2[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeMarkupDeclaration r0;
        net.htmlparser.jericho.Source r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag r4;
        java.lang.String r5;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMarkupDeclaration;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source,int)>(r1, i0);
        r3[0] = 1;
        if r4 != null goto label1;

        r3[1] = 1;
        return null;

     label1:
        r5 = virtualinvoke r4.<net.htmlparser.jericho.Tag: java.lang.String getName()>();
        r3[2] = 1;
        if r5 == "!element" goto label2;

        r3[3] = 1;
        if r5 == "!attlist" goto label2;

        r3[4] = 1;
        if r5 == "!entity" goto label2;

        r3[5] = 1;
        if r5 == "!notation" goto label2;

        r3[6] = 1;
        return null;

     label2:
        r3[7] = 1;
        return r4;
    }

    protected int getEnd(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeMarkupDeclaration r0;
        net.htmlparser.jericho.Source r1;
        int i0, $i2, $i3;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        boolean z0, $z1;
        char c1;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMarkupDeclaration;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        z0 = 0;
        r3[0] = 1;

     label1:
        c1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: char charAt(int)>(i0);
        r3[1] = 1;
        if c1 != 34 goto label4;

        r3[2] = 1;
        if z0 != 0 goto label2;

        $z1 = 1;
        r3[3] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r3[4] = 1;

     label3:
        z0 = $z1;
        r3[5] = 1;
        goto label5;

     label4:
        r3[6] = 1;
        if c1 != 62 goto label5;

        r3[7] = 1;
        if z0 != 0 goto label5;

        $i2 = i0 + 1;
        r3[8] = 1;
        return $i2;

     label5:
        i0 = i0 + 1;
        $i3 = virtualinvoke r1.<net.htmlparser.jericho.Source: int getEnd()>();
        r3[9] = 1;
        if i0 < $i3 goto label1;

        r3[10] = 1;
        return -1;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMarkupDeclaration $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: boolean[][] $VRi()>();
        r1 = $r0[3];
        $r2 = new net.htmlparser.jericho.StartTagTypeMarkupDeclaration;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMarkupDeclaration: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: net.htmlparser.jericho.StartTagTypeMarkupDeclaration INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.StartTagTypeMarkupDeclaration: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[8];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[11];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMarkupDeclaration", 1006673125954020773L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMasonComponentCall extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    protected static final net.htmlparser.jericho.StartTagTypeMasonComponentCall INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMasonComponentCall r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMasonComponentCall;
        $r1 = <net.htmlparser.jericho.StartTagTypeMasonComponentCall: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMasonComponentCall: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("mason component call", "<&", "&>", null, 1);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMasonComponentCall $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMasonComponentCall: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeMasonComponentCall;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMasonComponentCall: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMasonComponentCall: net.htmlparser.jericho.StartTagTypeMasonComponentCall INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeMasonComponentCall: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMasonComponentCall", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    protected static final net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent $r3;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent;
        $r1 = <net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        $r3 = <net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent: net.htmlparser.jericho.EndTagTypeMasonComponentCalledWithContent INSTANCE>;
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("mason component called with content", "<&|", "&>", $r3, 1);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent: net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeMasonComponentCalledWithContent: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMasonComponentCalledWithContent", 9253981926032L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMasonNamedBlock extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    protected static final net.htmlparser.jericho.StartTagTypeMasonNamedBlock INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMasonNamedBlock r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagTypeMasonNamedBlock $r3;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMasonNamedBlock;
        $r1 = <net.htmlparser.jericho.StartTagTypeMasonNamedBlock: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMasonNamedBlock: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        $r3 = <net.htmlparser.jericho.EndTagTypeMasonNamedBlock: net.htmlparser.jericho.EndTagTypeMasonNamedBlock INSTANCE>;
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("mason named block", "<%", ">", $r3, 1, 0, 1);
        r2[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeMasonNamedBlock r0;
        net.htmlparser.jericho.Source r1;
        int i0, $i1, $i2, $i4;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag r4;
        char $c3;
        java.lang.String $r5;
        net.htmlparser.jericho.EndTagType $r6;
        net.htmlparser.jericho.EndTag $r7;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMasonNamedBlock;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeMasonNamedBlock: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeMasonNamedBlock: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source,int)>(r1, i0);
        r3[0] = 1;
        if r4 != null goto label1;

        r3[1] = 1;
        return null;

     label1:
        $i1 = virtualinvoke r4.<net.htmlparser.jericho.Tag: int getEnd()>();
        $i2 = $i1 - 2;
        $c3 = virtualinvoke r1.<net.htmlparser.jericho.Source: char charAt(int)>($i2);
        r3[2] = 1;
        if $c3 != 37 goto label2;

        r3[3] = 1;
        return null;

     label2:
        $i4 = virtualinvoke r4.<net.htmlparser.jericho.Tag: int getEnd()>();
        $r5 = virtualinvoke r4.<net.htmlparser.jericho.Tag: java.lang.String getName()>();
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeMasonNamedBlock: net.htmlparser.jericho.EndTagType getCorrespondingEndTagType()>();
        $r7 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.EndTag getNextEndTag(int,java.lang.String,net.htmlparser.jericho.EndTagType)>($i4, $r5, $r6);
        r3[4] = 1;
        if $r7 != null goto label3;

        r3[5] = 1;
        return null;

     label3:
        r3[6] = 1;
        return r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMasonNamedBlock $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMasonNamedBlock: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.StartTagTypeMasonNamedBlock;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMasonNamedBlock: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMasonNamedBlock: net.htmlparser.jericho.StartTagTypeMasonNamedBlock INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.StartTagTypeMasonNamedBlock: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMasonNamedBlock", 4324396944071508087L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif;
        $r1 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("Microsoft downlevel-hidden conditional comment ENDIF", "<![endif]-->", "", null, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMicrosoftDownlevelHiddenConditionalCommentEndif", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf;
        $r1 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("Microsoft downlevel-hidden conditional comment IF", "<!--[if", "]>", null, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMicrosoftDownlevelHiddenConditionalCommentIf", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment INSTANCE;
    static final java.lang.String IF;
    static final java.lang.String ENDIF;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment;
        $r1 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("Microsoft downlevel-revealed conditional comment", "<![", "]>", null, 0, 0, 1);
        r2[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment r0;
        net.htmlparser.jericho.Source r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag r4;
        java.lang.String r5;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source,int)>(r1, i0);
        r3[0] = 1;
        if r4 != null goto label1;

        r3[1] = 1;
        return null;

     label1:
        r5 = virtualinvoke r4.<net.htmlparser.jericho.Tag: java.lang.String getName()>();
        r3[2] = 1;
        if r5 == "![if" goto label2;

        r3[3] = 1;
        if r5 == "![endif" goto label2;

        r3[4] = 1;
        return null;

     label2:
        r3[5] = 1;
        return r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalComment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMicrosoftDownlevelRevealedConditionalComment", -3270117795270125137L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif;
        $r1 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("Microsoft downlevel-revealed conditional comment ENDIF", "<![endif]>", "", null, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMicrosoftDownlevelRevealedConditionalCommentEndif", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf;
        $r1 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("Microsoft downlevel-revealed conditional comment IF", "<![if", "]>", null, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMicrosoftDownlevelRevealedConditionalCommentIf", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif;
        $r1 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("Microsoft downlevel-revealed validating conditional comment ENDIF", "<!--<![endif]-->", "", null, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentEndif", 9253426748190L);
        return $r0;
    }
}
class net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf;
        $r1 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: void <init>(java.lang.String,java.lang.String,java.lang.String)>("Microsoft downlevel-revealed validating conditional comment IF", "<!--[if", "]><!-->");
        r2[0] = 1;
        return;
    }

    protected void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf r0;
        java.lang.String r1, r2, r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: boolean[][] $VRi()>();

     label0:
        r5 = $r4[1];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>(r1, r2, r3, null, 0);
        r5[0] = 1;
        return;
    }

    protected int getEnd(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, $i2, $i3;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText $r4, $r7;
        net.htmlparser.jericho.StartTagType $r5;
        java.lang.String $r6, $r8, $r9;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $r5 = <net.htmlparser.jericho.MicrosoftConditionalCommentTagTypes: net.htmlparser.jericho.StartTagType DOWNLEVEL_HIDDEN_IF>;
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.StartTagType: java.lang.String getClosingDelimiter()>();
        i1 = interfaceinvoke $r4.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int)>($r6, i0);
        r3[0] = 1;
        if i1 != -1 goto label1;

        r3[1] = 1;
        return -1;

     label1:
        $r7 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $r8 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: java.lang.String getClosingDelimiter()>();
        $z0 = interfaceinvoke $r7.<net.htmlparser.jericho.ParseText: boolean containsAt(java.lang.String,int)>($r8, i1);
        r3[2] = 1;
        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: java.lang.String getClosingDelimiter()>();
        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();
        $i3 = i1 + $i2;
        r3[3] = 1;
        return $i3;

     label2:
        r3[4] = 1;
        return -2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: boolean[][] $VRi()>();
        r1 = $r0[3];
        $r2 = new net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf", 5461059456811087196L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf extends net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf
{
    static final net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf;
        $r1 = <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingConditionalCommentIf: void <init>(java.lang.String,java.lang.String,java.lang.String)>("Microsoft downlevel-revealed validating simplified conditional comment IF", "<!--[if", "]>-->");
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf: net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeMicrosoftDownlevelRevealedValidatingSimplifiedConditionalCommentIf", 9252871570348L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeNormal extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeNormal INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeNormal r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagType $r3;

        r0 := @this: net.htmlparser.jericho.StartTagTypeNormal;
        $r1 = <net.htmlparser.jericho.StartTagTypeNormal: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeNormal: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        $r3 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("normal", "<", ">", $r3, 0, 1, 1);
        r2[0] = 1;
        return;
    }

    public boolean atEndOfAttributes(net.htmlparser.jericho.Source, int, boolean)
    {
        net.htmlparser.jericho.StartTagTypeNormal r0;
        net.htmlparser.jericho.Source r1;
        int i0;
        boolean z0, $z1, $z2;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        char $c1;

        r0 := @this: net.htmlparser.jericho.StartTagTypeNormal;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r2 = <net.htmlparser.jericho.StartTagTypeNormal: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeNormal: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $c1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: char charAt(int)>(i0);
        r3[0] = 1;
        if $c1 == 62 goto label1;

        r3[1] = 1;
        if z0 != 0 goto label2;

        $z1 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: boolean containsAt(java.lang.String,int)>("/>", i0);
        r3[2] = 1;
        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;
        r3[3] = 1;
        goto label3;

     label2:
        $z2 = 0;
        r3[4] = 1;

     label3:
        r3[5] = 1;
        return $z2;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeNormal $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeNormal: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.StartTagTypeNormal;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeNormal: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeNormal: net.htmlparser.jericho.StartTagTypeNormal INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.StartTagTypeNormal: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeNormal", -2193016860917929905L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypePHPScript extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    protected static final net.htmlparser.jericho.StartTagTypePHPScript INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypePHPScript r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.EndTagType $r3;

        r0 := @this: net.htmlparser.jericho.StartTagTypePHPScript;
        $r1 = <net.htmlparser.jericho.StartTagTypePHPScript: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypePHPScript: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        $r3 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("PHP script", "<script", ">", $r3, 1, 1, 0);
        r2[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypePHPScript r0;
        net.htmlparser.jericho.Source r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTag r4;
        net.htmlparser.jericho.Tag $r5;
        java.lang.String $r6, $r8;
        net.htmlparser.jericho.Attributes $r7;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StartTagTypePHPScript;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypePHPScript: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypePHPScript: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source,int)>(r1, i0);
        r4 = (net.htmlparser.jericho.StartTag) $r5;
        r3[0] = 1;
        if r4 != null goto label1;

        r3[1] = 1;
        return null;

     label1:
        $r6 = "php";
        $r7 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Attributes: java.lang.String getValue(java.lang.String)>("language");
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);
        r3[2] = 1;
        if $z0 != 0 goto label2;

        r3[3] = 1;
        return null;

     label2:
        r3[4] = 1;
        return r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypePHPScript $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypePHPScript: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.StartTagTypePHPScript;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypePHPScript: void <init>()>();
        <net.htmlparser.jericho.StartTagTypePHPScript: net.htmlparser.jericho.StartTagTypePHPScript INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.StartTagTypePHPScript: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypePHPScript", 7228530442889821699L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypePHPShort extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    protected static final net.htmlparser.jericho.StartTagTypePHPShort INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypePHPShort r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypePHPShort;
        $r1 = <net.htmlparser.jericho.StartTagTypePHPShort: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypePHPShort: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("PHP short tag", "<?", "?>", null, 1);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypePHPShort $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypePHPShort: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypePHPShort;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypePHPShort: void <init>()>();
        <net.htmlparser.jericho.StartTagTypePHPShort: net.htmlparser.jericho.StartTagTypePHPShort INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypePHPShort: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypePHPShort", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypePHPStandard extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    protected static final net.htmlparser.jericho.StartTagTypePHPStandard INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypePHPStandard r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypePHPStandard;
        $r1 = <net.htmlparser.jericho.StartTagTypePHPStandard: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypePHPStandard: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("PHP standard tag", "<?php", "?>", null, 1);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypePHPStandard $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypePHPStandard: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypePHPStandard;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypePHPStandard: void <init>()>();
        <net.htmlparser.jericho.StartTagTypePHPStandard: net.htmlparser.jericho.StartTagTypePHPStandard INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypePHPStandard: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypePHPStandard", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeServerCommon extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeServerCommon INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeServerCommon r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeServerCommon;
        $r1 = <net.htmlparser.jericho.StartTagTypeServerCommon: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeServerCommon: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("common server tag", "<%", "%>", null, 1);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeServerCommon $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeServerCommon: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeServerCommon;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeServerCommon: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeServerCommon: net.htmlparser.jericho.StartTagTypeServerCommon INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeServerCommon: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeServerCommon", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeServerCommonComment extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeServerCommonComment INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeServerCommonComment r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeServerCommonComment;
        $r1 = <net.htmlparser.jericho.StartTagTypeServerCommonComment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeServerCommonComment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("common server comment tag", "<%--", "--%>", null, 1);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeServerCommonComment $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeServerCommonComment: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeServerCommonComment;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeServerCommonComment: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeServerCommonComment: net.htmlparser.jericho.StartTagTypeServerCommonComment INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeServerCommonComment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeServerCommonComment", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeServerCommonEscaped extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeServerCommonEscaped INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeServerCommonEscaped r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeServerCommonEscaped;
        $r1 = <net.htmlparser.jericho.StartTagTypeServerCommonEscaped: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeServerCommonEscaped: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean)>("escaped common server tag", "<\\%", "%>", null, 1);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeServerCommonEscaped $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeServerCommonEscaped: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeServerCommonEscaped;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeServerCommonEscaped: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeServerCommonEscaped: net.htmlparser.jericho.StartTagTypeServerCommonEscaped INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeServerCommonEscaped: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeServerCommonEscaped", 9253426748190L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeUnregistered extends net.htmlparser.jericho.StartTagType
{
    static final net.htmlparser.jericho.StartTagTypeUnregistered INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeUnregistered r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeUnregistered;
        $r1 = <net.htmlparser.jericho.StartTagTypeUnregistered: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeUnregistered: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagType: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("unregistered", "<", ">", null, 0, 0, 0);
        r2[0] = 1;
        return;
    }

    protected net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.StartTagTypeUnregistered r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, $i2, $i3, $i4;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTag r4;
        net.htmlparser.jericho.ParseText $r5;
        net.htmlparser.jericho.Logger $r6, $r7;
        boolean $z0;
        net.htmlparser.jericho.RowColumnVector $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: net.htmlparser.jericho.StartTagTypeUnregistered;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StartTagTypeUnregistered: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StartTagTypeUnregistered: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $i2 = i0 + 1;
        i1 = interfaceinvoke $r5.<net.htmlparser.jericho.ParseText: int indexOf(char,int)>(62, $i2);
        r3[0] = 1;
        if i1 != -1 goto label1;

        r3[1] = 1;
        return null;

     label1:
        $i3 = i1 + 1;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.StartTagTypeUnregistered: net.htmlparser.jericho.StartTag constructStartTag(net.htmlparser.jericho.Source,int,int,java.lang.String,net.htmlparser.jericho.Attributes)>(r1, i0, $i3, "", null);
        $r6 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z0 = interfaceinvoke $r6.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r3[2] = 1;
        if $z0 == 0 goto label2;

        $r7 = r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $i4 = virtualinvoke r4.<net.htmlparser.jericho.Tag: int getBegin()>();
        $r8 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>($i4);
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>(200);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encountered possible StartTag at ");
        $r11 = virtualinvoke $r8.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" whose content does not match a registered StartTagType");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r7.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r13);
        r3[3] = 1;

     label2:
        r3[4] = 1;
        return r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeUnregistered $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeUnregistered: boolean[][] $VRi()>();
        r1 = $r0[2];
        $r2 = new net.htmlparser.jericho.StartTagTypeUnregistered;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeUnregistered: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeUnregistered: net.htmlparser.jericho.StartTagTypeUnregistered INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.StartTagTypeUnregistered: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[5];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeUnregistered", -8721134381646942173L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeXMLDeclaration extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeXMLDeclaration INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeXMLDeclaration r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeXMLDeclaration;
        $r1 = <net.htmlparser.jericho.StartTagTypeXMLDeclaration: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeXMLDeclaration: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("XML declaration", "<?xml", "?>", null, 0, 1, 0);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeXMLDeclaration $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeXMLDeclaration: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeXMLDeclaration;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeXMLDeclaration: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeXMLDeclaration: net.htmlparser.jericho.StartTagTypeXMLDeclaration INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeXMLDeclaration: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeXMLDeclaration", 9253981926032L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction extends net.htmlparser.jericho.StartTagTypeGenericImplementation
{
    static final net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction INSTANCE;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction;
        $r1 = <net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<net.htmlparser.jericho.StartTagTypeGenericImplementation: void <init>(java.lang.String,java.lang.String,java.lang.String,net.htmlparser.jericho.EndTagType,boolean,boolean,boolean)>("XML processing instruction", "<?", "?>", null, 0, 0, 1);
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r2 = new net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction;
        specialinvoke $r2.<net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction: void <init>()>();
        <net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction: net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction INSTANCE> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.StartTagTypeXMLProcessingInstruction: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StartTagTypeXMLProcessingInstruction", 9253981926032L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StreamEncodingDetector extends java.lang.Object
{
    private final java.io.InputStream inputStream;
    private java.lang.String encoding;
    private java.lang.String encodingSpecificationInfo;
    private boolean definitive;
    private boolean documentSpecifiedEncodingPossible;
    private boolean endOfFile;
    private final net.htmlparser.jericho.LoggerQueue logger;
    private static final java.lang.String UTF_16;
    private static final java.lang.String UTF_16BE;
    private static final java.lang.String UTF_16LE;
    private static final java.lang.String UTF_8;
    private static final java.lang.String ISO_8859_1;
    private static final java.lang.String EBCDIC;
    private static final java.lang.String WINDOWS_1252;
    private static final java.lang.String DEFAULT_8BIT;
    private static final java.lang.String SCSU;
    private static final java.lang.String UTF_7;
    private static final java.lang.String UTF_EBCDIC;
    private static final java.lang.String BOCU_1;
    private static final java.lang.String UTF_32;
    private static final java.lang.String UTF_32BE;
    private static final java.lang.String UTF_32LE;
    private static final boolean[][] $VRc;

    public void <init>(java.net.URLConnection) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        java.net.URLConnection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.net.HttpURLConnection r4, $r10;
        java.io.InputStream r5, $r44;
        java.lang.String r6, r8, $r11, $r12, $r13, $r14, $r16, $r17, $r21, $r24, $r28, $r31, $r35, $r39, $r42;
        boolean z0, $z1, $z2, $z3, $z4;
        java.nio.charset.IllegalCharsetNameException r7, $r15;
        int $i0;
        char $c1;
        net.htmlparser.jericho.LoggerQueue $r18, $r25, $r36, r45;
        java.lang.StringBuilder $r20, $r22, $r23, $r27, $r29, $r30, $r33, $r34, $r38, $r40, $r41, r46, r47, r48, r49;
        java.io.BufferedInputStream r50;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        r1 := @parameter0: java.net.URLConnection;
        $r2 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding> = null;
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encodingSpecificationInfo> = null;
        r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean definitive> = 1;
        r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean documentSpecifiedEncodingPossible> = 1;
        r45 = new net.htmlparser.jericho.LoggerQueue;
        specialinvoke r45.<net.htmlparser.jericho.LoggerQueue: void <init>()>();
        r0.<net.htmlparser.jericho.StreamEncodingDetector: net.htmlparser.jericho.LoggerQueue logger> = r45;
        $z1 = r1 instanceof java.net.HttpURLConnection;
        r3[0] = 1;
        if $z1 == 0 goto label1;

        $r10 = (java.net.HttpURLConnection) r1;
        r3[1] = 1;
        goto label2;

     label1:
        $r10 = null;
        r3[2] = 1;

     label2:
        r4 = $r10;
        r5 = virtualinvoke r1.<java.net.URLConnection: java.io.InputStream getInputStream()>();
        r6 = virtualinvoke r1.<java.net.URLConnection: java.lang.String getContentType()>();
        r3[3] = 1;
        if r6 == null goto label10;

        $r11 = staticinvoke <net.htmlparser.jericho.Source: java.lang.String getCharsetParameterFromHttpHeaderValue(java.lang.String)>(r6);
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding> = $r11;
        $r12 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        r3[4] = 1;
        if $r12 == null goto label10;

        $r13 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();
        r3[5] = 1;
        if $i0 <= 0 goto label10;

        z0 = 0;

     label3:
        $r14 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        $z2 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>($r14);
        r3[6] = 1;
        if $z2 == 0 goto label4;

        z0 = 1;
        r3[7] = 1;

     label4:
        r3[8] = 1;
        goto label8;

     label5:
        $r15 := @caughtexception;
        r7 = $r15;
        $r16 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        $c1 = virtualinvoke $r16.<java.lang.String: char charAt(int)>(0);
        r3[9] = 1;
        if $c1 != 34 goto label8;

        $r17 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "");
        $z3 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean isEncodingSupported(java.lang.String)>(r8);
        r3[10] = 1;
        if $z3 == 0 goto label6;

        $r18 = r0.<net.htmlparser.jericho.StreamEncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        r46 = new java.lang.StringBuilder;
        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding ");
        $r21 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in HTTP header is illegaly delimited with double quotes, which have been ignored");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r18.<net.htmlparser.jericho.LoggerQueue: void warn(java.lang.String)>($r24);
        z0 = 1;
        r3[11] = 1;
        goto label7;

     label6:
        $r25 = r0.<net.htmlparser.jericho.StreamEncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        r47 = new java.lang.StringBuilder;
        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding ");
        $r28 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in HTTP header is illegaly delimited with double quotes");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r25.<net.htmlparser.jericho.LoggerQueue: void warn(java.lang.String)>($r31);
        r3[12] = 1;

     label7:
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding> = r8;
        r3[13] = 1;

     label8:
        r3[14] = 1;
        if z0 == 0 goto label9;

        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream> = r5;
        r48 = new java.lang.StringBuilder;
        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();
        $r33 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP header Content-Type: ");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encodingSpecificationInfo> = $r35;
        r3[15] = 1;
        return;

     label9:
        $r36 = r0.<net.htmlparser.jericho.StreamEncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        r49 = new java.lang.StringBuilder;
        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();
        $r38 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encoding ");
        $r39 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in HTTP header is not supported, attempting other means of detection");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r36.<net.htmlparser.jericho.LoggerQueue: void warn(java.lang.String)>($r42);
        r3[16] = 1;

     label10:
        $z4 = virtualinvoke r5.<java.io.InputStream: boolean markSupported()>();
        r3[17] = 1;
        if $z4 == 0 goto label11;

        $r44 = r5;
        r3[18] = 1;
        goto label12;

     label11:
        r50 = new java.io.BufferedInputStream;
        $r44 = r50;
        specialinvoke r50.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r5);
        r3[19] = 1;

     label12:
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream> = $r44;
        specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean init()>();
        r3[20] = 1;
        return;

        catch java.nio.charset.IllegalCharsetNameException from label3 to label4 with label5;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        java.io.InputStream r1, $r6;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        net.htmlparser.jericho.LoggerQueue r7;
        java.io.BufferedInputStream r8;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding> = null;
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encodingSpecificationInfo> = null;
        r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean definitive> = 1;
        r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean documentSpecifiedEncodingPossible> = 1;
        r7 = new net.htmlparser.jericho.LoggerQueue;
        specialinvoke r7.<net.htmlparser.jericho.LoggerQueue: void <init>()>();
        r0.<net.htmlparser.jericho.StreamEncodingDetector: net.htmlparser.jericho.LoggerQueue logger> = r7;
        $z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r6 = r1;
        r3[1] = 1;
        goto label2;

     label1:
        r8 = new java.io.BufferedInputStream;
        $r6 = r8;
        specialinvoke r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);
        r3[2] = 1;

     label2:
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream> = $r6;
        specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean init()>();
        r3[3] = 1;
        return;
    }

    public java.io.InputStream getInputStream()
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.InputStream $r3;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getEncoding()
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getEncodingSpecificationInfo()
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encodingSpecificationInfo>;
        r2[0] = 1;
        return $r3;
    }

    public boolean isDifinitive()
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $z0 = r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean definitive>;
        r2[0] = 1;
        return $z0;
    }

    public boolean isEndOfFile()
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $z0 = r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean endOfFile>;
        r2[0] = 1;
        return $z0;
    }

    public boolean isDocumentSpecifiedEncodingPossible()
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $z0 = r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean documentSpecifiedEncodingPossible>;
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.LoggerQueue getLoggerQueue()
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.LoggerQueue $r3;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.StreamEncodingDetector: net.htmlparser.jericho.LoggerQueue logger>;
        r2[0] = 1;
        return $r3;
    }

    public java.io.Reader openReader() throws java.io.UnsupportedEncodingException
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3, $r6, $r7, $r10, $r13, $r15, $r18;
        java.io.InputStreamReader $r4, $r16;
        java.io.InputStream $r5, $r17;
        boolean $z0;
        java.io.UnsupportedEncodingException $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r14;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $r4 = new java.io.InputStreamReader;
        $r5 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        $r6 = <net.htmlparser.jericho.StreamEncodingDetector: java.lang.String DEFAULT_8BIT>;
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r5, $r6);
        r2[1] = 1;
        return $r4;

     label1:
        $r7 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        $z0 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean isEncodingSupported(java.lang.String)>($r7);
        r2[2] = 1;
        if $z0 != 0 goto label2;

        $r8 = new java.io.UnsupportedEncodingException;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");
        $r13 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encodingSpecificationInfo>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r15);
        r2[3] = 1;
        throw $r8;

     label2:
        $r16 = new java.io.InputStreamReader;
        $r17 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        $r18 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding>;
        specialinvoke $r16.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r17, $r18);
        r2[4] = 1;
        return $r16;
    }

    private boolean setEncoding(java.lang.String, java.lang.String, int, boolean) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        java.lang.String r1, r2;
        int i0, i1;
        boolean z0;
        boolean[][] $r3;
        boolean[] r4;
        java.io.InputStream $r5;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        $r3 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r4 = $r3[10];
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encoding> = r1;
        r0.<net.htmlparser.jericho.StreamEncodingDetector: java.lang.String encodingSpecificationInfo> = r2;
        r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean endOfFile> = z0;
        i1 = 0;
        r4[0] = 1;

     label1:
        r4[1] = 1;
        if i1 >= i0 goto label2;

        $r5 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        virtualinvoke $r5.<java.io.InputStream: int read()>();
        i1 = i1 + 1;
        r4[2] = 1;
        goto label1;

     label2:
        r4[3] = 1;
        return 1;
    }

    private boolean init() throws java.io.IOException
    {
        net.htmlparser.jericho.StreamEncodingDetector r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, i2, i3, i4, $i14, $i15, $i16;
        java.io.InputStream $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        java.lang.String $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r37, $r38, $r39;
        byte $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13;

        r0 := @this: net.htmlparser.jericho.StreamEncodingDetector;
        $r1 = <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        virtualinvoke $r3.<java.io.InputStream: void mark(int)>(5);
        $r4 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        i0 = virtualinvoke $r4.<java.io.InputStream: int read()>();
        r2[0] = 1;
        if i0 != -1 goto label1;

        $z0 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>(null, "empty input stream", 0, 1);
        r2[1] = 1;
        return $z0;

     label1:
        $r5 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        i1 = virtualinvoke $r5.<java.io.InputStream: int read()>();
        $r6 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        i2 = virtualinvoke $r6.<java.io.InputStream: int read()>();
        $r7 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        i3 = virtualinvoke $r7.<java.io.InputStream: int read()>();
        $r8 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        i4 = virtualinvoke $r8.<java.io.InputStream: int read()>();
        $r9 = r0.<net.htmlparser.jericho.StreamEncodingDetector: java.io.InputStream inputStream>;
        virtualinvoke $r9.<java.io.InputStream: void reset()>();
        r2[2] = 1;
        if i0 != 239 goto label4;

        r2[3] = 1;
        if i1 != 187 goto label28;

        r2[4] = 1;
        if i2 != 191 goto label28;

        $r11 = "UTF-8";
        $r12 = "UTF-8 Byte Order Mark (EF BB BF)";
        $b5 = 3;
        r2[5] = 1;
        if i3 != -1 goto label2;

        $z1 = 1;
        r2[6] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r2[7] = 1;

     label3:
        $z2 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r11, $r12, $b5, $z1);
        r2[8] = 1;
        return $z2;

     label4:
        r2[9] = 1;
        if i0 != 254 goto label7;

        r2[10] = 1;
        if i1 != 255 goto label28;

        $r14 = "UTF-16";
        $r15 = "UTF-16 big-endian Byte Order Mark (FE FF)";
        $b6 = 2;
        r2[11] = 1;
        if i2 != -1 goto label5;

        $z3 = 1;
        r2[12] = 1;
        goto label6;

     label5:
        $z3 = 0;
        r2[13] = 1;

     label6:
        $z4 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r14, $r15, $b6, $z3);
        r2[14] = 1;
        return $z4;

     label7:
        r2[15] = 1;
        if i0 != 255 goto label13;

        r2[16] = 1;
        if i1 != 254 goto label28;

        r2[17] = 1;
        if i2 != 0 goto label10;

        r2[18] = 1;
        if i3 != 0 goto label10;

        $r17 = "UTF-32";
        $r18 = "UTF-32 little-endian Byte Order Mark (FF EE 00 00)";
        $b7 = 4;
        r2[19] = 1;
        if i4 != -1 goto label8;

        $z5 = 1;
        r2[20] = 1;
        goto label9;

     label8:
        $z5 = 0;
        r2[21] = 1;

     label9:
        $z6 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r17, $r18, $b7, $z5);
        r2[22] = 1;
        return $z6;

     label10:
        $r20 = "UTF-16";
        $r21 = "UTF-16 little-endian Byte Order Mark (FF EE)";
        $b8 = 2;
        r2[23] = 1;
        if i2 != -1 goto label11;

        $z7 = 1;
        r2[24] = 1;
        goto label12;

     label11:
        $z7 = 0;
        r2[25] = 1;

     label12:
        $z8 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r20, $r21, $b8, $z7);
        r2[26] = 1;
        return $z8;

     label13:
        r2[27] = 1;
        if i0 != 0 goto label16;

        r2[28] = 1;
        if i1 != 0 goto label28;

        r2[29] = 1;
        if i2 != 254 goto label28;

        r2[30] = 1;
        if i3 != 255 goto label28;

        $r23 = "UTF-32";
        $r24 = "UTF-32 big-endian Byte Order Mark (00 00 FE FF)";
        $b9 = 4;
        r2[31] = 1;
        if i4 != -1 goto label14;

        $z9 = 1;
        r2[32] = 1;
        goto label15;

     label14:
        $z9 = 0;
        r2[33] = 1;

     label15:
        $z10 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r23, $r24, $b9, $z9);
        r2[34] = 1;
        return $z10;

     label16:
        r2[35] = 1;
        if i0 != 14 goto label19;

        r2[36] = 1;
        if i1 != 254 goto label28;

        r2[37] = 1;
        if i2 != 255 goto label28;

        $r26 = "SCSU";
        $r27 = "SCSU Byte Order Mark (0E FE FF)";
        $b10 = 3;
        r2[38] = 1;
        if i3 != -1 goto label17;

        $z11 = 1;
        r2[39] = 1;
        goto label18;

     label17:
        $z11 = 0;
        r2[40] = 1;

     label18:
        $z12 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r26, $r27, $b10, $z11);
        r2[41] = 1;
        return $z12;

     label19:
        r2[42] = 1;
        if i0 != 43 goto label22;

        r2[43] = 1;
        if i1 != 47 goto label28;

        r2[44] = 1;
        if i2 != 118 goto label28;

        $r29 = "UTF-7";
        $r30 = "UTF-7 Byte Order Mark (2B 2F 76)";
        $b11 = 3;
        r2[45] = 1;
        if i3 != -1 goto label20;

        $z13 = 1;
        r2[46] = 1;
        goto label21;

     label20:
        $z13 = 0;
        r2[47] = 1;

     label21:
        $z14 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r29, $r30, $b11, $z13);
        r2[48] = 1;
        return $z14;

     label22:
        r2[49] = 1;
        if i0 != 221 goto label25;

        r2[50] = 1;
        if i1 != 115 goto label28;

        r2[51] = 1;
        if i2 != 102 goto label28;

        r2[52] = 1;
        if i3 != 115 goto label28;

        $r32 = "UTF-EBCDIC";
        $r33 = "UTF-EBCDIC Byte Order Mark (DD 73 66 73)";
        $b12 = 4;
        r2[53] = 1;
        if i4 != -1 goto label23;

        $z15 = 1;
        r2[54] = 1;
        goto label24;

     label23:
        $z15 = 0;
        r2[55] = 1;

     label24:
        $z16 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r32, $r33, $b12, $z15);
        r2[56] = 1;
        return $z16;

     label25:
        r2[57] = 1;
        if i0 != 251 goto label28;

        r2[58] = 1;
        if i1 != 238 goto label28;

        r2[59] = 1;
        if i2 != 40 goto label28;

        $r35 = "BOCU-1";
        $r36 = "BOCU-1 Byte Order Mark (FB EE 28)";
        $b13 = 3;
        r2[60] = 1;
        if i3 != -1 goto label26;

        $z17 = 1;
        r2[61] = 1;
        goto label27;

     label26:
        $z17 = 0;
        r2[62] = 1;

     label27:
        $z18 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r35, $r36, $b13, $z17);
        r2[63] = 1;
        return $z18;

     label28:
        r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean definitive> = 0;
        r2[64] = 1;
        if i3 != -1 goto label33;

        r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean documentSpecifiedEncodingPossible> = 0;
        r2[65] = 1;
        if i1 == -1 goto label29;

        r2[66] = 1;
        if i2 == -1 goto label30;

     label29:
        $r37 = <net.htmlparser.jericho.StreamEncodingDetector: java.lang.String DEFAULT_8BIT>;
        $z19 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r37, "default 8-bit ASCII-compatible encoding (stream 3 bytes long)", 0, 0);
        r2[67] = 1;
        return $z19;

     label30:
        r2[68] = 1;
        if i0 != 0 goto label31;

        $z20 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("UTF-16BE", "default 16-bit BE encoding (byte stream starts with 00, stream 2 bytes long)", 0, 0);
        r2[69] = 1;
        return $z20;

     label31:
        r2[70] = 1;
        if i1 != 0 goto label32;

        $z21 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("UTF-16LE", "default 16-bit LE encoding (byte stream pattern XX 00, stream 2 bytes long)", 0, 0);
        r2[71] = 1;
        return $z21;

     label32:
        $r38 = <net.htmlparser.jericho.StreamEncodingDetector: java.lang.String DEFAULT_8BIT>;
        $z22 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r38, "default 8-bit ASCII-compatible encoding (no 00 bytes present, stream 2 bytes long)", 0, 0);
        r2[72] = 1;
        return $z22;

     label33:
        r2[73] = 1;
        if i0 != 0 goto label35;

        r2[74] = 1;
        if i1 != 0 goto label34;

        $z23 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("UTF-32BE", "default 32-bit BE encoding (byte stream starts with 00 00)", 0, 0);
        r2[75] = 1;
        return $z23;

     label34:
        $z24 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("UTF-16BE", "default 16-bit BE encoding (byte stream starts with 00)", 0, 0);
        r2[76] = 1;
        return $z24;

     label35:
        r2[77] = 1;
        if i3 != 0 goto label37;

        r2[78] = 1;
        if i2 != 0 goto label36;

        $z25 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("UTF-32LE", "default 32-bit LE encoding (byte stream starts with pattern XX ?? 00 00)", 0, 0);
        r2[79] = 1;
        return $z25;

     label36:
        $z26 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("UTF-16LE", "default 16-bit LE encoding (byte stream stars with pattern XX ?? XX 00)", 0, 0);
        r2[80] = 1;
        return $z26;

     label37:
        r2[81] = 1;
        if i1 != 0 goto label38;

        $z27 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("UTF-16LE", "default 16-bit LE encoding (byte stream starts with pattern XX 00 ?? XX)", 0, 0);
        r2[82] = 1;
        return $z27;

     label38:
        r2[83] = 1;
        if i2 != 0 goto label39;

        $z28 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("UTF-16BE", "default 16-bit BE encoding (byte stream starts with pattern XX XX 00 XX)", 0, 0);
        r2[84] = 1;
        return $z28;

     label39:
        r2[85] = 1;
        if i0 != 76 goto label42;

        r2[86] = 1;
        if i1 != 111 goto label40;

        r2[87] = 1;
        if i2 != 167 goto label40;

        r2[88] = 1;
        if i3 != 148 goto label40;

        $z29 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("Cp037", "default EBCDIC encoding (<?xml...> detected)", 0, 0);
        r2[89] = 1;
        return $z29;

     label40:
        r2[90] = 1;
        if i1 != 90 goto label41;

        r2[91] = 1;
        if i2 != 196 goto label41;

        r2[92] = 1;
        if i3 != 214 goto label41;

        $z30 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("Cp037", "default EBCDIC encoding (<!DOCTYPE...> detected)", 0, 0);
        r2[93] = 1;
        return $z30;

     label41:
        $i14 = i1 & i2;
        $i15 = $i14 & i3;
        $i16 = $i15 & 128;
        r2[94] = 1;
        if $i16 == 0 goto label42;

        $z31 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>("Cp037", "default EBCDIC-compatible encoding (HTML element detected)", 0, 0);
        r2[95] = 1;
        return $z31;

     label42:
        $r39 = <net.htmlparser.jericho.StreamEncodingDetector: java.lang.String DEFAULT_8BIT>;
        $z32 = specialinvoke r0.<net.htmlparser.jericho.StreamEncodingDetector: boolean setEncoding(java.lang.String,java.lang.String,int,boolean)>($r39, "default 8-bit ASCII-compatible encoding (no 00 bytes present in first four bytes of stream)", 0, 0);
        r2[96] = 1;
        return $z32;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        boolean $z0;
        java.lang.String $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRi()>();
        r1 = $r0[12];
        $z0 = staticinvoke <net.htmlparser.jericho.EncodingDetector: boolean isEncodingSupported(java.lang.String)>("Cp1252");
        r1[0] = 1;
        if $z0 == 0 goto label0;

        $r2 = "Cp1252";
        r1[1] = 1;
        goto label1;

     label0:
        $r2 = "ISO-8859-1";
        r1[2] = 1;

     label1:
        <net.htmlparser.jericho.StreamEncodingDetector: java.lang.String DEFAULT_8BIT> = $r2;
        r1[3] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = newmultiarray (boolean)[13][];
        <net.htmlparser.jericho.StreamEncodingDetector: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[21];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[5];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[4];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[97];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[4];
        $r0[12] = $r13;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StreamEncodingDetector", -8360486970557077759L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StreamedParseText extends net.htmlparser.jericho.CharSequenceParseText
{
    private final net.htmlparser.jericho.StreamedText streamedText;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.StreamedText)
    {
        net.htmlparser.jericho.StreamedParseText r0;
        net.htmlparser.jericho.StreamedText r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.StreamedParseText;
        r1 := @parameter0: net.htmlparser.jericho.StreamedText;
        $r2 = <net.htmlparser.jericho.StreamedParseText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedParseText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<net.htmlparser.jericho.CharSequenceParseText: void <init>(java.lang.CharSequence)>(r1);
        r0.<net.htmlparser.jericho.StreamedParseText: net.htmlparser.jericho.StreamedText streamedText> = r1;
        r3[0] = 1;
        return;
    }

    protected int getEnd()
    {
        net.htmlparser.jericho.StreamedParseText r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StreamedText $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedParseText;
        $r1 = <net.htmlparser.jericho.StreamedParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.StreamedParseText: net.htmlparser.jericho.StreamedText streamedText>;
        $i0 = virtualinvoke $r3.<net.htmlparser.jericho.StreamedText: int getEnd()>();
        r2[0] = 1;
        return $i0;
    }

    protected java.lang.String substring(int, int)
    {
        net.htmlparser.jericho.StreamedParseText r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StreamedText $r3;
        java.lang.String $r4, $r5;

        r0 := @this: net.htmlparser.jericho.StreamedParseText;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.StreamedParseText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedParseText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.StreamedParseText: net.htmlparser.jericho.StreamedText streamedText>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.StreamedText: java.lang.String substring(int,int)>(i0, i1);
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();
        r2[0] = 1;
        return $r5;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.StreamedParseText: boolean[][] $VRi()>();
        r1 = $r0[3];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4;

        $r0 = newmultiarray (boolean)[4][];
        <net.htmlparser.jericho.StreamedParseText: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StreamedParseText", -1423480784643815691L);
        return $r0;
    }
}
class net.htmlparser.jericho.StreamedSource$StreamedSourceIterator extends java.lang.Object implements java.util.Iterator
{
    private final boolean coalescing;
    private final boolean handleTags;
    private net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettings;
    private net.htmlparser.jericho.Segment nextSegment;
    private int plainTextSegmentBegin;
    private final char[] charByRef;
    final net.htmlparser.jericho.StreamedSource this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.StreamedSource)
    {
        net.htmlparser.jericho.StreamedSource$StreamedSourceIterator r0;
        net.htmlparser.jericho.StreamedSource r1;
        boolean[][] $r2;
        boolean[] r3;
        char[] $r4;
        boolean $z0, $z1, $z2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r5;
        net.htmlparser.jericho.Segment $r6;

        r0 := @this: net.htmlparser.jericho.StreamedSource$StreamedSourceIterator;
        r1 := @parameter0: net.htmlparser.jericho.StreamedSource;
        $r2 = <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: int plainTextSegmentBegin> = 0;
        $r4 = newarray (char)[1];
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: char[] charByRef> = $r4;
        $z0 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean access$000(net.htmlparser.jericho.StreamedSource)>(r1);
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean coalescing> = $z0;
        $z1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean access$100(net.htmlparser.jericho.StreamedSource)>(r1);
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean handleTags> = $z1;
        $r5 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings access$200(net.htmlparser.jericho.StreamedSource)>(r1);
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettings> = $r5;
        specialinvoke r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: void loadNextParsedSegment()>();
        $r6 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>(r1);
        $z2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean access$500(net.htmlparser.jericho.Segment)>($r6);
        staticinvoke <net.htmlparser.jericho.StreamedSource: boolean access$302(net.htmlparser.jericho.StreamedSource,boolean)>(r1, $z2);
        r3[0] = 1;
        return;
    }

    public boolean hasNext()
    {
        net.htmlparser.jericho.StreamedSource$StreamedSourceIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3, $r5;
        net.htmlparser.jericho.Tag $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StreamedSource$StreamedSourceIterator;
        $r1 = <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Segment nextSegment>;
        $r4 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r2[0] = 1;
        if $r3 != $r4 goto label1;

        specialinvoke r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: void loadNextParsedSegment()>();
        r2[1] = 1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Segment nextSegment>;
        r2[2] = 1;
        if $r5 == null goto label2;

        $z0 = 1;
        r2[3] = 1;
        goto label3;

     label2:
        $z0 = 0;
        r2[4] = 1;

     label3:
        r2[5] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.Segment next()
    {
        net.htmlparser.jericho.StreamedSource$StreamedSourceIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment r3, $r7, $r8;
        boolean $z0;
        java.util.NoSuchElementException $r4;
        net.htmlparser.jericho.StreamedSource $r6, $r9, $r10, $r12;
        net.htmlparser.jericho.StreamedText $r11;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedSource$StreamedSourceIterator;
        $r1 = <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean hasNext()>();
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r4 = new java.util.NoSuchElementException;
        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();
        r2[1] = 1;
        throw $r4;

     label1:
        r3 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Segment nextSegment>;
        $r6 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r7 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r6);
        r2[2] = 1;
        if r3 != $r7 goto label2;

        $r8 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r2[3] = 1;
        goto label3;

     label2:
        $r9 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r8 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r9);
        r2[4] = 1;

     label3:
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Segment nextSegment> = $r8;
        $r10 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r11 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText access$600(net.htmlparser.jericho.StreamedSource)>($r10);
        $i0 = r3.<net.htmlparser.jericho.Segment: int end>;
        virtualinvoke $r11.<net.htmlparser.jericho.StreamedText: void setMinRequiredBufferBegin(int)>($i0);
        $r12 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$702(net.htmlparser.jericho.StreamedSource,net.htmlparser.jericho.Segment)>($r12, r3);
        r2[5] = 1;
        return r3;
    }

    public void remove()
    {
        net.htmlparser.jericho.StreamedSource$StreamedSourceIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.StreamedSource$StreamedSourceIterator;
        $r1 = <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    private final void loadNextParsedSegment()
    {
        net.htmlparser.jericho.StreamedSource$StreamedSourceIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        net.htmlparser.jericho.StreamedSource $r3, $r6, $r8, $r10, $r14, $r16, $r17, $r19, $r21;
        net.htmlparser.jericho.Segment $r4, $r7, $r9, $r13, $r18, $r20, $r22;
        net.htmlparser.jericho.StreamedText $r11;
        net.htmlparser.jericho.Source $r15;

        r0 := @this: net.htmlparser.jericho.StreamedSource$StreamedSourceIterator;
        $r1 = <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r4 = specialinvoke r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Segment findNextParsedSegment()>();
        staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$402(net.htmlparser.jericho.StreamedSource,net.htmlparser.jericho.Segment)>($r3, $r4);
        $r6 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r7 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r6);
        r2[0] = 1;
        if $r7 == null goto label1;

        $r8 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r9 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r8);
        $i1 = $r9.<net.htmlparser.jericho.Segment: int begin>;
        r2[1] = 1;
        goto label2;

     label1:
        $r10 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r11 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText access$600(net.htmlparser.jericho.StreamedSource)>($r10);
        $i1 = virtualinvoke $r11.<net.htmlparser.jericho.StreamedText: int length()>();
        r2[2] = 1;

     label2:
        i0 = $i1;
        $i2 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: int plainTextSegmentBegin>;
        r2[3] = 1;
        if $i2 >= i0 goto label3;

        $r13 = new net.htmlparser.jericho.Segment;
        $r14 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r15 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source access$800(net.htmlparser.jericho.StreamedSource)>($r14);
        $i3 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: int plainTextSegmentBegin>;
        specialinvoke $r13.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r15, $i3, i0);
        r2[4] = 1;
        goto label4;

     label3:
        $r16 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r13 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r16);
        r2[5] = 1;

     label4:
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Segment nextSegment> = $r13;
        $r17 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r18 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r17);
        r2[6] = 1;
        if $r18 == null goto label5;

        $i4 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: int plainTextSegmentBegin>;
        $r19 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r20 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r19);
        $i5 = $r20.<net.htmlparser.jericho.Segment: int end>;
        r2[7] = 1;
        if $i4 >= $i5 goto label5;

        $r21 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r22 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r21);
        $i6 = $r22.<net.htmlparser.jericho.Segment: int end>;
        r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: int plainTextSegmentBegin> = $i6;
        r2[8] = 1;

     label5:
        r2[9] = 1;
        return;
    }

    private final net.htmlparser.jericho.Segment findNextParsedSegment()
    {
        net.htmlparser.jericho.StreamedSource$StreamedSourceIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12;
        char c2;
        net.htmlparser.jericho.CharacterReference r3;
        net.htmlparser.jericho.TagType r4, $r10;
        net.htmlparser.jericho.StreamedSource $r5, $r7, $r12, $r14, $r16, $r18, $r20, $r22, $r25, $r29, $r32, $r36, $r43, $r46, $r50, $r53;
        net.htmlparser.jericho.Segment $r6, $r8, $r13, $r15, $r45;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.htmlparser.jericho.StartTag $r9, $r41;
        net.htmlparser.jericho.StartTagType $r11, $r35, $r39;
        net.htmlparser.jericho.StreamedText $r17, $r19, $r21, $r44;
        net.htmlparser.jericho.Source $r23, $r26, $r30, $r33, $r37, $r47;
        int[] $r24, $r34, $r38;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r27;
        net.htmlparser.jericho.Tag r31;
        byte $b9;
        java.lang.String $r40;
        java.nio.BufferOverflowException $r48, r49;
        java.lang.IndexOutOfBoundsException $r51, r52;

        r0 := @this: net.htmlparser.jericho.StreamedSource$StreamedSourceIterator;
        $r1 = <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];

     label1:
        $r5 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r6 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r5);
        $z0 = $r6 instanceof net.htmlparser.jericho.StartTag;
        r2[0] = 1;
        if $z0 == 0 goto label2;

        $r7 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r8 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r7);
        $r9 = (net.htmlparser.jericho.StartTag) $r8;
        $r10 = virtualinvoke $r9.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.TagType getTagType()>();
        $r11 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON_COMMENT>;
        r2[1] = 1;
        if $r10 != $r11 goto label2;

        $r12 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r13 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r12);
        $i3 = virtualinvoke $r13.<net.htmlparser.jericho.Segment: int getEnd()>();
        r2[2] = 1;
        goto label3;

     label2:
        $r14 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r15 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)>($r14);
        $i4 = virtualinvoke $r15.<net.htmlparser.jericho.Segment: int getBegin()>();
        $i3 = $i4 + 1;
        r2[3] = 1;

     label3:
        i0 = $i3;
        $z1 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean coalescing>;
        r2[4] = 1;
        if $z1 == 0 goto label4;

        $r16 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r17 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText access$600(net.htmlparser.jericho.StreamedSource)>($r16);
        $i5 = virtualinvoke $r17.<net.htmlparser.jericho.StreamedText: int getEnd()>();
        r2[5] = 1;
        goto label5;

     label4:
        $r18 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r19 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText access$600(net.htmlparser.jericho.StreamedSource)>($r18);
        $i5 = virtualinvoke $r19.<net.htmlparser.jericho.StreamedText: int getBufferOverflowPosition()>();
        r2[6] = 1;

     label5:
        i1 = $i5;
        r2[7] = 1;

     label6:
        r2[8] = 1;
        if i0 >= i1 goto label16;

        $r20 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r21 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText access$600(net.htmlparser.jericho.StreamedSource)>($r20);
        c2 = virtualinvoke $r21.<net.htmlparser.jericho.StreamedText: char charAt(int)>(i0);
        r2[9] = 1;
        if c2 != 38 goto label10;

        $r22 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r23 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source access$800(net.htmlparser.jericho.StreamedSource)>($r22);
        $r24 = $r23.<net.htmlparser.jericho.Source: int[] fullSequentialParseData>;
        $i6 = $r24[0];
        r2[10] = 1;
        if i0 < $i6 goto label15;

        $r25 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r26 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source access$800(net.htmlparser.jericho.StreamedSource)>($r25);
        $r27 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettings>;
        r3 = staticinvoke <net.htmlparser.jericho.CharacterReference: net.htmlparser.jericho.CharacterReference construct(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)>($r26, i0, $r27);
        r2[11] = 1;
        if r3 == null goto label8;

        r2[12] = 1;

     label7:
        return r3;

     label8:
        r2[13] = 1;

     label9:
        goto label15;

     label10:
        $z2 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean handleTags>;
        r2[14] = 1;
        if $z2 == 0 goto label15;

        r2[15] = 1;
        if c2 != 60 goto label15;

        $r29 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r30 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source access$800(net.htmlparser.jericho.StreamedSource)>($r29);
        r31 = staticinvoke <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean,boolean)>($r30, i0, 0, 0);
        r2[16] = 1;
        if r31 == null goto label15;

        $z3 = virtualinvoke r31.<net.htmlparser.jericho.Tag: boolean isUnregistered()>();
        r2[17] = 1;
        if $z3 != 0 goto label15;

        r4 = virtualinvoke r31.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $i7 = r31.<net.htmlparser.jericho.Tag: int end>;
        $r32 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r33 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source access$800(net.htmlparser.jericho.StreamedSource)>($r32);
        $r34 = $r33.<net.htmlparser.jericho.Source: int[] fullSequentialParseData>;
        $i8 = $r34[0];
        r2[18] = 1;
        if $i7 <= $i8 goto label13;

        $r35 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType DOCTYPE_DECLARATION>;
        r2[19] = 1;
        if r4 == $r35 goto label13;

        $r36 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r37 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source access$800(net.htmlparser.jericho.StreamedSource)>($r36);
        $r38 = $r37.<net.htmlparser.jericho.Source: int[] fullSequentialParseData>;
        $b9 = 0;
        $r39 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[20] = 1;
        if r4 != $r39 goto label11;

        $r40 = r31.<net.htmlparser.jericho.Tag: java.lang.String name>;
        r2[21] = 1;
        if $r40 != "script" goto label11;

        $r41 = (net.htmlparser.jericho.StartTag) r31;
        $z4 = virtualinvoke $r41.<net.htmlparser.jericho.StartTag: boolean isEmptyElementTag()>();
        r2[22] = 1;
        if $z4 != 0 goto label11;

        $i10 = 2147483647;
        r2[23] = 1;
        goto label12;

     label11:
        $i10 = r31.<net.htmlparser.jericho.Tag: int end>;
        r2[24] = 1;

     label12:
        $r38[$b9] = $i10;
        r2[25] = 1;

     label13:
        r2[26] = 1;

     label14:
        return r31;

     label15:
        i0 = i0 + 1;
        r2[27] = 1;
        goto label6;

     label16:
        $r43 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r44 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText access$600(net.htmlparser.jericho.StreamedSource)>($r43);
        $i11 = virtualinvoke $r44.<net.htmlparser.jericho.StreamedText: int getEnd()>();
        r2[28] = 1;
        if i0 >= $i11 goto label18;

        $r45 = new net.htmlparser.jericho.Segment;
        $r46 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        $r47 = staticinvoke <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source access$800(net.htmlparser.jericho.StreamedSource)>($r46);
        $i12 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: int plainTextSegmentBegin>;
        specialinvoke $r45.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r47, $i12, i0);
        r2[29] = 1;

     label17:
        return $r45;

     label18:
        r2[30] = 1;
        goto label21;

     label19:
        $r48 := @caughtexception;
        r49 = $r48;
        $r50 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        staticinvoke <net.htmlparser.jericho.StreamedSource: void access$900(net.htmlparser.jericho.StreamedSource)>($r50);
        r2[31] = 1;
        throw r49;

     label20:
        $r51 := @caughtexception;
        r52 = $r51;
        r2[32] = 1;

     label21:
        $r53 = r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.StreamedSource this$0>;
        staticinvoke <net.htmlparser.jericho.StreamedSource: void access$900(net.htmlparser.jericho.StreamedSource)>($r53);
        r2[33] = 1;
        return null;

        catch java.nio.BufferOverflowException from label1 to label7 with label19;
        catch java.nio.BufferOverflowException from label9 to label14 with label19;
        catch java.nio.BufferOverflowException from label15 to label17 with label19;
        catch java.lang.IndexOutOfBoundsException from label1 to label7 with label20;
        catch java.lang.IndexOutOfBoundsException from label9 to label14 with label20;
        catch java.lang.IndexOutOfBoundsException from label15 to label17 with label20;
    }

    public volatile java.lang.Object next()
    {
        net.htmlparser.jericho.StreamedSource$StreamedSourceIterator r0;
        net.htmlparser.jericho.Segment $r1;

        r0 := @this: net.htmlparser.jericho.StreamedSource$StreamedSourceIterator;
        $r1 = virtualinvoke r0.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: net.htmlparser.jericho.Segment next()>();
        return $r1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRi()>();
        r1 = $r0[7];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newmultiarray (boolean)[8][];
        <net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[10];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[34];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[7] = $r7;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StreamedSource$StreamedSourceIterator", 2038484204656903359L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.StreamedSource extends java.lang.Object implements java.lang.Iterable, java.io.Closeable
{
    private final net.htmlparser.jericho.StreamedText streamedText;
    private final net.htmlparser.jericho.StreamedParseText streamedParseText;
    private final net.htmlparser.jericho.Source source;
    private final java.io.Closeable closeable;
    private final boolean automaticClose;
    private boolean coalescing;
    private boolean handleTags;
    private net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettings;
    private boolean isInitialised;
    private net.htmlparser.jericho.Segment currentSegment;
    private net.htmlparser.jericho.Segment nextParsedSegment;
    private boolean isXML;
    private static final boolean assumeNoNestedTags;
    private static final net.htmlparser.jericho.Segment START_SEGMENT;
    private static final boolean[][] $VRc;

    private void <init>(java.io.Reader, boolean, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedSource r0;
        java.io.Reader r1;
        boolean z0;
        java.lang.String r2, r3, r4;
        boolean[][] $r5;
        boolean[] r6;
        net.htmlparser.jericho.Config$CompatibilityMode $r7;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r8;
        net.htmlparser.jericho.Segment $r9;
        net.htmlparser.jericho.StreamedText $r10, $r12, $r14;
        net.htmlparser.jericho.StreamedParseText $r11, $r15;
        net.htmlparser.jericho.Source $r13;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: java.io.Reader;
        z0 := @parameter1: boolean;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.String;
        $r5 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r6 = $r5[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.StreamedSource: boolean coalescing> = 0;
        r0.<net.htmlparser.jericho.StreamedSource: boolean handleTags> = 1;
        $r7 = <net.htmlparser.jericho.Config: net.htmlparser.jericho.Config$CompatibilityMode CurrentCompatibilityMode>;
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(0);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettings> = $r8;
        r0.<net.htmlparser.jericho.StreamedSource: boolean isInitialised> = 0;
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment currentSegment> = null;
        $r9 = <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment START_SEGMENT>;
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment nextParsedSegment> = $r9;
        r0.<net.htmlparser.jericho.StreamedSource: java.io.Closeable closeable> = r1;
        r0.<net.htmlparser.jericho.StreamedSource: boolean automaticClose> = z0;
        $r10 = new net.htmlparser.jericho.StreamedText;
        specialinvoke $r10.<net.htmlparser.jericho.StreamedText: void <init>(java.io.Reader)>(r1);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText> = $r10;
        $r11 = new net.htmlparser.jericho.StreamedParseText;
        $r12 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText>;
        specialinvoke $r11.<net.htmlparser.jericho.StreamedParseText: void <init>(net.htmlparser.jericho.StreamedText)>($r12);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedParseText streamedParseText> = $r11;
        $r13 = new net.htmlparser.jericho.Source;
        $r14 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText>;
        $r15 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedParseText streamedParseText>;
        specialinvoke $r13.<net.htmlparser.jericho.Source: void <init>(java.lang.CharSequence,net.htmlparser.jericho.StreamedParseText,java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, r2, r3, r4);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source source> = $r13;
        r6[0] = 1;
        return;
    }

    private void <init>(net.htmlparser.jericho.EncodingDetector, boolean) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedSource r0;
        net.htmlparser.jericho.EncodingDetector r1;
        boolean z0;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.StringBuilder $r4, $r9, $r10, $r12;
        java.io.Reader $r5;
        java.lang.String $r6, $r7, $r8, $r11, $r13;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: net.htmlparser.jericho.EncodingDetector;
        z0 := @parameter1: boolean;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        $r5 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.io.Reader openReader()>();
        $r6 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.lang.String getEncoding()>();
        $r7 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.lang.String getEncodingSpecificationInfo()>();
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.lang.String getPreliminaryEncoding()>();
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r11 = virtualinvoke r1.<net.htmlparser.jericho.EncodingDetector: java.lang.String getPreliminaryEncodingSpecificationInfo()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<net.htmlparser.jericho.StreamedSource: void <init>(java.io.Reader,boolean,java.lang.String,java.lang.String,java.lang.String)>($r5, z0, $r6, $r7, $r13);
        r3[0] = 1;
        return;
    }

    public void <init>(java.io.Reader) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedSource r0;
        java.io.Reader r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0, $z1, $z2;
        java.io.InputStreamReader $r6;
        java.lang.String $r7, $r8;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: java.io.Reader;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $z0 = 0;
        $z1 = r1 instanceof java.io.InputStreamReader;
        r3[0] = 1;
        if $z1 == 0 goto label1;

        $r6 = (java.io.InputStreamReader) r1;
        $r7 = virtualinvoke $r6.<java.io.InputStreamReader: java.lang.String getEncoding()>();
        r3[1] = 1;
        goto label2;

     label1:
        $r7 = null;
        r3[2] = 1;

     label2:
        $z2 = r1 instanceof java.io.InputStreamReader;
        r3[3] = 1;
        if $z2 == 0 goto label3;

        $r8 = "InputStreamReader.getEncoding() of constructor argument";
        r3[4] = 1;
        goto label4;

     label3:
        $r8 = null;
        r3[5] = 1;

     label4:
        specialinvoke r0.<net.htmlparser.jericho.StreamedSource: void <init>(java.io.Reader,boolean,java.lang.String,java.lang.String,java.lang.String)>(r1, $z0, $r7, $r8, null);
        r3[6] = 1;
        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedSource r0;
        java.io.InputStream r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.EncodingDetector $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: java.io.InputStream;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $r4 = new net.htmlparser.jericho.EncodingDetector;
        specialinvoke $r4.<net.htmlparser.jericho.EncodingDetector: void <init>(java.io.InputStream)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.StreamedSource: void <init>(net.htmlparser.jericho.EncodingDetector,boolean)>($r4, 0);
        r3[0] = 1;
        return;
    }

    public void <init>(java.net.URL) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedSource r0;
        java.net.URL r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.EncodingDetector $r4;
        java.net.URLConnection $r5;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: java.net.URL;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = new net.htmlparser.jericho.EncodingDetector;
        $r5 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();
        specialinvoke $r4.<net.htmlparser.jericho.EncodingDetector: void <init>(java.net.URLConnection)>($r5);
        specialinvoke r0.<net.htmlparser.jericho.StreamedSource: void <init>(net.htmlparser.jericho.EncodingDetector,boolean)>($r4, 1);
        r3[0] = 1;
        return;
    }

    public void <init>(java.net.URLConnection) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedSource r0;
        java.net.URLConnection r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.EncodingDetector $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: java.net.URLConnection;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = new net.htmlparser.jericho.EncodingDetector;
        specialinvoke $r4.<net.htmlparser.jericho.EncodingDetector: void <init>(java.net.URLConnection)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.StreamedSource: void <init>(net.htmlparser.jericho.EncodingDetector,boolean)>($r4, 1);
        r3[0] = 1;
        return;
    }

    public void <init>(java.lang.CharSequence)
    {
        net.htmlparser.jericho.StreamedSource r0;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Config$CompatibilityMode $r4;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r5;
        net.htmlparser.jericho.Segment $r6;
        net.htmlparser.jericho.StreamedText $r7, $r9;
        net.htmlparser.jericho.StreamedParseText $r8, $r11;
        net.htmlparser.jericho.Source $r10;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.StreamedSource: boolean coalescing> = 0;
        r0.<net.htmlparser.jericho.StreamedSource: boolean handleTags> = 1;
        $r4 = <net.htmlparser.jericho.Config: net.htmlparser.jericho.Config$CompatibilityMode CurrentCompatibilityMode>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.Config$CompatibilityMode: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings getUnterminatedCharacterReferenceSettings(boolean)>(0);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettings> = $r5;
        r0.<net.htmlparser.jericho.StreamedSource: boolean isInitialised> = 0;
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment currentSegment> = null;
        $r6 = <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment START_SEGMENT>;
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment nextParsedSegment> = $r6;
        r0.<net.htmlparser.jericho.StreamedSource: java.io.Closeable closeable> = null;
        r0.<net.htmlparser.jericho.StreamedSource: boolean automaticClose> = 0;
        $r7 = new net.htmlparser.jericho.StreamedText;
        specialinvoke $r7.<net.htmlparser.jericho.StreamedText: void <init>(java.lang.CharSequence)>(r1);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText> = $r7;
        $r8 = new net.htmlparser.jericho.StreamedParseText;
        $r9 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText>;
        specialinvoke $r8.<net.htmlparser.jericho.StreamedParseText: void <init>(net.htmlparser.jericho.StreamedText)>($r9);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedParseText streamedParseText> = $r8;
        $r10 = new net.htmlparser.jericho.Source;
        $r11 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedParseText streamedParseText>;
        specialinvoke $r10.<net.htmlparser.jericho.Source: void <init>(java.lang.CharSequence,net.htmlparser.jericho.StreamedParseText,java.lang.String,java.lang.String,java.lang.String)>(r1, $r11, null, "Document specified encoding can not be determined automatically from a streamed source", null);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source source> = $r10;
        r3[0] = 1;
        return;
    }

    public net.htmlparser.jericho.StreamedSource setBuffer(char[])
    {
        net.htmlparser.jericho.StreamedSource r0;
        char[] r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        net.htmlparser.jericho.StreamedText $r5;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: char[];
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $z0 = r0.<net.htmlparser.jericho.StreamedSource: boolean isInitialised>;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setBuffer() can only be called before iterator() is called");
        r3[1] = 1;
        throw $r4;

     label1:
        $r5 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText>;
        virtualinvoke $r5.<net.htmlparser.jericho.StreamedText: net.htmlparser.jericho.StreamedText setBuffer(char[])>(r1);
        r3[2] = 1;
        return r0;
    }

    public net.htmlparser.jericho.StreamedSource setCoalescing(boolean)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean z0, $z1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $z1 = r0.<net.htmlparser.jericho.StreamedSource: boolean isInitialised>;
        r2[0] = 1;
        if $z1 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPlainTextWriter() can only be called before iterator() is called");
        r2[1] = 1;
        throw $r3;

     label1:
        r0.<net.htmlparser.jericho.StreamedSource: boolean coalescing> = z0;
        r2[2] = 1;
        return r0;
    }

    public void close() throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.Closeable $r3, $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: java.io.Closeable closeable>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $r4 = r0.<net.htmlparser.jericho.StreamedSource: java.io.Closeable closeable>;
        interfaceinvoke $r4.<java.io.Closeable: void close()>();
        r2[1] = 1;

     label1:
        r2[2] = 1;
        return;
    }

    public java.lang.String getEncoding()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source source>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: java.lang.String getEncoding()>();
        r2[0] = 1;
        return $r4;
    }

    public java.lang.String getEncodingSpecificationInfo()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source source>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: java.lang.String getEncodingSpecificationInfo()>();
        r2[0] = 1;
        return $r4;
    }

    public java.lang.String getPreliminaryEncodingInfo()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source source>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: java.lang.String getPreliminaryEncodingInfo()>();
        r2[0] = 1;
        return $r4;
    }

    public java.util.Iterator iterator()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        net.htmlparser.jericho.StreamedSource$StreamedSourceIterator $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        $z0 = r0.<net.htmlparser.jericho.StreamedSource: boolean isInitialised>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("iterator() can only be called once");
        r2[1] = 1;
        throw $r3;

     label1:
        r0.<net.htmlparser.jericho.StreamedSource: boolean isInitialised> = 1;
        $r4 = new net.htmlparser.jericho.StreamedSource$StreamedSourceIterator;
        specialinvoke $r4.<net.htmlparser.jericho.StreamedSource$StreamedSourceIterator: void <init>(net.htmlparser.jericho.StreamedSource)>(r0);
        r2[2] = 1;
        return $r4;
    }

    public net.htmlparser.jericho.Segment getCurrentSegment()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment currentSegment>;
        r2[0] = 1;
        return $r3;
    }

    public java.nio.CharBuffer getCurrentSegmentCharBuffer()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StreamedText $r3;
        net.htmlparser.jericho.Segment $r4, $r5;
        int $i0, $i1;
        java.nio.CharBuffer $r6;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText>;
        $r4 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment currentSegment>;
        $i0 = virtualinvoke $r4.<net.htmlparser.jericho.Segment: int getBegin()>();
        $r5 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment currentSegment>;
        $i1 = $r5.<net.htmlparser.jericho.Segment: int end>;
        $r6 = virtualinvoke $r3.<net.htmlparser.jericho.StreamedText: java.nio.CharBuffer getCharBuffer(int,int)>($i0, $i1);
        r2[0] = 1;
        return $r6;
    }

    public boolean isXML()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $z0 = r0.<net.htmlparser.jericho.StreamedSource: boolean isInitialised>;
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("isXML() method only available after iterator() has been called");
        r2[1] = 1;
        throw $r3;

     label1:
        $z1 = r0.<net.htmlparser.jericho.StreamedSource: boolean isXML>;
        r2[2] = 1;
        return $z1;
    }

    public void setLogger(net.htmlparser.jericho.Logger)
    {
        net.htmlparser.jericho.StreamedSource r0;
        net.htmlparser.jericho.Logger r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: net.htmlparser.jericho.Logger;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];
        $r4 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source source>;
        virtualinvoke $r4.<net.htmlparser.jericho.Source: void setLogger(net.htmlparser.jericho.Logger)>(r1);
        r3[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Logger getLogger()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        net.htmlparser.jericho.Logger $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source source>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger getLogger()>();
        r2[0] = 1;
        return $r4;
    }

    public int getBufferSize()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StreamedText $r3;
        char[] $r4;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.StreamedText: char[] getBuffer()>();
        $i0 = lengthof $r4;
        r2[0] = 1;
        return $i0;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();
        r2[0] = 1;
        return $r3;
    }

    protected void finalize()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        specialinvoke r0.<net.htmlparser.jericho.StreamedSource: void automaticClose()>();
        r2[0] = 1;
        return;
    }

    net.htmlparser.jericho.StreamedSource setHandleTags(boolean)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        r0.<net.htmlparser.jericho.StreamedSource: boolean handleTags> = z0;
        r2[0] = 1;
        return r0;
    }

    net.htmlparser.jericho.StreamedSource setUnterminatedCharacterReferenceSettings(net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings)
    {
        net.htmlparser.jericho.StreamedSource r0;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter0: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[23];
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettings> = r1;
        r3[0] = 1;
        return r0;
    }

    net.htmlparser.jericho.StreamedSource setSearchBegin(int)
    {
        net.htmlparser.jericho.StreamedSource r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        net.htmlparser.jericho.Segment $r4;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $z0 = r0.<net.htmlparser.jericho.StreamedSource: boolean isInitialised>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setSearchBegin() can only be called before iterator() is called");
        r2[1] = 1;
        throw $r3;

     label1:
        i1 = i0 - 1;
        $r4 = new net.htmlparser.jericho.Segment;
        specialinvoke $r4.<net.htmlparser.jericho.Segment: void <init>(int,int)>(i1, i1);
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment nextParsedSegment> = $r4;
        r2[2] = 1;
        return r0;
    }

    private void automaticClose()
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.IOException r3, $r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        $z0 = r0.<net.htmlparser.jericho.StreamedSource: boolean automaticClose>;
        r2[0] = 1;
        if $z0 == 0 goto label4;

     label1:
        virtualinvoke r0.<net.htmlparser.jericho.StreamedSource: void close()>();
        r2[1] = 1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;
        r3 = $r4;
        r2[2] = 1;

     label4:
        r2[3] = 1;
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static boolean isXML(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;
        boolean $z0;
        net.htmlparser.jericho.TagType $r4;
        net.htmlparser.jericho.StartTagType $r5;
        net.htmlparser.jericho.Source $r6;
        net.htmlparser.jericho.ParseText $r7;
        int $i0, $i1, $i2;

        r0 := @parameter0: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[26];
        r2[0] = 1;
        if r0 == null goto label1;

        $z0 = r0 instanceof net.htmlparser.jericho.Tag;
        r2[1] = 1;
        if $z0 != 0 goto label2;

     label1:
        r2[2] = 1;
        return 0;

     label2:
        r3 = (net.htmlparser.jericho.Tag) r0;
        $r4 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r5 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType XML_DECLARATION>;
        r2[3] = 1;
        if $r4 != $r5 goto label3;

        r2[4] = 1;
        return 1;

     label3:
        $r6 = r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $r7 = virtualinvoke $r6.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $i0 = r3.<net.htmlparser.jericho.Tag: int begin>;
        $i1 = r3.<net.htmlparser.jericho.Tag: int end>;
        $i2 = interfaceinvoke $r7.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int,int)>("xhtml", $i0, $i1);
        r2[5] = 1;
        if $i2 == -1 goto label4;

        r2[6] = 1;
        return 1;

     label4:
        r2[7] = 1;
        return 0;
    }

    static boolean access$000(net.htmlparser.jericho.StreamedSource)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[27];
        $z0 = r0.<net.htmlparser.jericho.StreamedSource: boolean coalescing>;
        r2[0] = 1;
        return $z0;
    }

    static boolean access$100(net.htmlparser.jericho.StreamedSource)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $z0 = r0.<net.htmlparser.jericho.StreamedSource: boolean handleTags>;
        r2[0] = 1;
        return $z0;
    }

    static net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings access$200(net.htmlparser.jericho.StreamedSource)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings $r3;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[29];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Config$UnterminatedCharacterReferenceSettings unterminatedCharacterReferenceSettings>;
        r2[0] = 1;
        return $r3;
    }

    static boolean access$302(net.htmlparser.jericho.StreamedSource, boolean)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        r0.<net.htmlparser.jericho.StreamedSource: boolean isXML> = z0;
        r2[0] = 1;
        return z0;
    }

    static net.htmlparser.jericho.Segment access$400(net.htmlparser.jericho.StreamedSource)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[31];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment nextParsedSegment>;
        r2[0] = 1;
        return $r3;
    }

    static boolean access$500(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @parameter0: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        $z0 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean isXML(net.htmlparser.jericho.Segment)>(r0);
        r2[0] = 1;
        return $z0;
    }

    static net.htmlparser.jericho.StreamedText access$600(net.htmlparser.jericho.StreamedSource)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.StreamedText $r3;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[33];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.StreamedText streamedText>;
        r2[0] = 1;
        return $r3;
    }

    static net.htmlparser.jericho.Segment access$702(net.htmlparser.jericho.StreamedSource, net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.StreamedSource r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter1: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[34];
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment currentSegment> = r1;
        r3[0] = 1;
        return r1;
    }

    static net.htmlparser.jericho.Segment access$402(net.htmlparser.jericho.StreamedSource, net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.StreamedSource r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        r1 := @parameter1: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r3 = $r2[35];
        r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment nextParsedSegment> = r1;
        r3[0] = 1;
        return r1;
    }

    static net.htmlparser.jericho.Source access$800(net.htmlparser.jericho.StreamedSource)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[36];
        $r3 = r0.<net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Source source>;
        r2[0] = 1;
        return $r3;
    }

    static void access$900(net.htmlparser.jericho.StreamedSource)
    {
        net.htmlparser.jericho.StreamedSource r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.StreamedSource;
        $r1 = <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();

     label0:
        r2 = $r1[37];
        specialinvoke r0.<net.htmlparser.jericho.StreamedSource: void automaticClose()>();
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Segment $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.StreamedSource: boolean[][] $VRi()>();
        r1 = $r0[38];
        $r2 = new net.htmlparser.jericho.Segment;
        specialinvoke $r2.<net.htmlparser.jericho.Segment: void <init>(int,int)>(-1, -1);
        <net.htmlparser.jericho.StreamedSource: net.htmlparser.jericho.Segment START_SEGMENT> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39;

        $r0 = newmultiarray (boolean)[39][];
        <net.htmlparser.jericho.StreamedSource: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[7];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[3];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[3];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[3];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[3];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[4];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[8];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        $r32 = newarray (boolean)[1];
        $r0[31] = $r32;
        $r33 = newarray (boolean)[1];
        $r0[32] = $r33;
        $r34 = newarray (boolean)[1];
        $r0[33] = $r34;
        $r35 = newarray (boolean)[1];
        $r0[34] = $r35;
        $r36 = newarray (boolean)[1];
        $r0[35] = $r36;
        $r37 = newarray (boolean)[1];
        $r0[36] = $r37;
        $r38 = newarray (boolean)[1];
        $r0[37] = $r38;
        $r39 = newarray (boolean)[1];
        $r0[38] = $r39;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StreamedSource", -5152281780697805856L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StreamedText extends java.lang.Object implements java.lang.CharSequence
{
    private final java.io.Reader reader;
    private char[] buffer;
    private boolean expandableBuffer;
    private int bufferBegin;
    private int readerPos;
    private int minRequiredBufferBegin;
    private int end;
    public static int INITIAL_EXPANDABLE_BUFFER_SIZE;
    private static final boolean[][] $VRc;

    public void <init>(java.io.Reader, char[])
    {
        net.htmlparser.jericho.StreamedText r0;
        java.io.Reader r1;
        char[] r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: java.io.Reader;
        r2 := @parameter1: char[];
        $r3 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.StreamedText: int bufferBegin> = 0;
        r0.<net.htmlparser.jericho.StreamedText: int readerPos> = 0;
        r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin> = 0;
        r0.<net.htmlparser.jericho.StreamedText: int end> = 2147483647;
        r0.<net.htmlparser.jericho.StreamedText: java.io.Reader reader> = r1;
        virtualinvoke r0.<net.htmlparser.jericho.StreamedText: net.htmlparser.jericho.StreamedText setBuffer(char[])>(r2);
        r4[0] = 1;
        return;
    }

    public void <init>(java.io.Reader)
    {
        net.htmlparser.jericho.StreamedText r0;
        java.io.Reader r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: java.io.Reader;
        $r2 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void <init>(java.io.Reader,char[])>(r1, null);
        r3[0] = 1;
        return;
    }

    private void <init>(char[], int)
    {
        net.htmlparser.jericho.StreamedText r0;
        char[] r1;
        int i0;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.StreamedText: int bufferBegin> = 0;
        r0.<net.htmlparser.jericho.StreamedText: int readerPos> = 0;
        r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin> = 0;
        r0.<net.htmlparser.jericho.StreamedText: int end> = 2147483647;
        r0.<net.htmlparser.jericho.StreamedText: java.io.Reader reader> = null;
        r0.<net.htmlparser.jericho.StreamedText: char[] buffer> = r1;
        r0.<net.htmlparser.jericho.StreamedText: boolean expandableBuffer> = 0;
        r0.<net.htmlparser.jericho.StreamedText: int end> = i0;
        r0.<net.htmlparser.jericho.StreamedText: int readerPos> = 2147483647;
        r3[0] = 1;
        return;
    }

    public void <init>(char[])
    {
        net.htmlparser.jericho.StreamedText r0;
        char[] r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: char[];
        $r2 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        $i0 = lengthof r1;
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void <init>(char[],int)>(r1, $i0);
        r3[0] = 1;
        return;
    }

    public void <init>(java.nio.CharBuffer)
    {
        net.htmlparser.jericho.StreamedText r0;
        java.nio.CharBuffer r1;
        boolean[][] $r2;
        boolean[] r3;
        char[] $r4;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: java.nio.CharBuffer;
        $r2 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $r4 = virtualinvoke r1.<java.nio.CharBuffer: char[] array()>();
        $i0 = virtualinvoke r1.<java.nio.CharBuffer: int length()>();
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void <init>(char[],int)>($r4, $i0);
        r3[0] = 1;
        return;
    }

    public void <init>(java.lang.CharSequence)
    {
        net.htmlparser.jericho.StreamedText r0;
        java.lang.CharSequence r1;
        boolean[][] $r2;
        boolean[] r3;
        char[] $r4;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = staticinvoke <net.htmlparser.jericho.StreamedText: char[] toCharArray(java.lang.CharSequence)>(r1);
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void <init>(char[])>($r4);
        r3[0] = 1;
        return;
    }

    public net.htmlparser.jericho.StreamedText setBuffer(char[])
    {
        net.htmlparser.jericho.StreamedText r0;
        char[] r1, $r4;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: char[];
        $r2 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        r3[0] = 1;
        if r1 == null goto label1;

        r0.<net.htmlparser.jericho.StreamedText: char[] buffer> = r1;
        r0.<net.htmlparser.jericho.StreamedText: boolean expandableBuffer> = 0;
        r3[1] = 1;
        goto label2;

     label1:
        $i0 = <net.htmlparser.jericho.StreamedText: int INITIAL_EXPANDABLE_BUFFER_SIZE>;
        $r4 = newarray (char)[$i0];
        r0.<net.htmlparser.jericho.StreamedText: char[] buffer> = $r4;
        r0.<net.htmlparser.jericho.StreamedText: boolean expandableBuffer> = 1;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return r0;
    }

    public boolean hasExpandableBuffer()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $z0 = r0.<net.htmlparser.jericho.StreamedText: boolean expandableBuffer>;
        r2[0] = 1;
        return $z0;
    }

    public char charAt(int)
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, $i1, $i2, $i3;
        boolean[][] $r1;
        boolean[] r2;
        char[] $r3;
        char $c4;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $i1 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        r2[0] = 1;
        if i0 < $i1 goto label1;

        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void readToPosition(int)>(i0);
        r2[1] = 1;

     label1:
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void checkPos(int)>(i0);
        $r3 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i2 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $i3 = i0 - $i2;
        $c4 = $r3[$i3];
        r2[2] = 1;
        return $c4;
    }

    public void setMinRequiredBufferBegin(int)
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $i1 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        r2[0] = 1;
        if i0 >= $i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set minimum required buffer begin to already discarded position ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);
        r2[1] = 1;
        throw $r3;

     label1:
        r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin> = i0;
        r2[2] = 1;
        return;
    }

    public int getMinRequiredBufferBegin()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $i0 = r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin>;
        r2[0] = 1;
        return $i0;
    }

    public int length()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $i0 = r0.<net.htmlparser.jericho.StreamedText: int end>;
        r2[0] = 1;
        if $i0 != 2147483647 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Length of streamed text cannot be determined until end of file has been reached");
        r2[1] = 1;
        throw $r3;

     label1:
        $i1 = r0.<net.htmlparser.jericho.StreamedText: int end>;
        r2[2] = 1;
        return $i1;
    }

    public int getEnd()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $i0 = r0.<net.htmlparser.jericho.StreamedText: int end>;
        r2[0] = 1;
        return $i0;
    }

    private void prepareBufferRange(int, int)
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, i1, i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IndexOutOfBoundsException $r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        i2 = i1 - 1;
        $i3 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        r2[0] = 1;
        if i2 <= $i3 goto label1;

        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void readToPosition(int)>(i2);
        r2[1] = 1;

     label1:
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void checkPos(int)>(i0);
        $i4 = r0.<net.htmlparser.jericho.StreamedText: int end>;
        r2[2] = 1;
        if i1 <= $i4 goto label2;

        $r3 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();
        r2[3] = 1;
        throw $r3;

     label2:
        r2[4] = 1;
        return;
    }

    public void writeTo(java.io.Writer, int, int) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedText r0;
        java.io.Writer r1;
        int i0, i1, $i2, $i3, $i4;
        boolean[][] $r2;
        boolean[] r3;
        char[] $r4;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: java.io.Writer;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void prepareBufferRange(int,int)>(i0, i1);
        $r4 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i2 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $i3 = i0 - $i2;
        $i4 = i1 - i0;
        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r4, $i3, $i4);
        r3[0] = 1;
        return;
    }

    public java.lang.String substring(int, int)
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, i1, $i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;
        char[] $r4;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void prepareBufferRange(int,int)>(i0, i1);
        $r3 = new java.lang.String;
        $r4 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i2 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $i3 = i0 - $i2;
        $i4 = i1 - i0;
        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, $i3, $i4);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        java.nio.CharBuffer $r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.StreamedText: java.nio.CharBuffer getCharBuffer(int,int)>(i0, i1);
        r2[0] = 1;
        return $r3;
    }

    public java.nio.CharBuffer getCharBuffer(int, int)
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, i1, $i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        char[] $r3;
        java.nio.CharBuffer $r4;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void prepareBufferRange(int,int)>(i0, i1);
        $r3 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i2 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $i3 = i0 - $i2;
        $i4 = i1 - i0;
        $r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r3, $i3, $i4);
        r2[0] = 1;
        return $r4;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Streamed text can not be converted to a string");
        r2[0] = 1;
        throw $r3;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        char[] $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r13;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Buffer size: \"");
        $r5 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i0 = lengthof $r5;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", bufferBegin=");
        $i1 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", minRequiredBufferBegin=");
        $i2 = r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", readerPos=");
        $i3 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r13;
    }

    public char[] getBuffer()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        char[] $r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $r3 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        r2[0] = 1;
        return $r3;
    }

    public int getBufferBegin()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $i0 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        r2[0] = 1;
        return $i0;
    }

    private void checkPos(int)
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.IndexOutOfBoundsException $r9;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $i1 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        r2[0] = 1;
        if i0 >= $i1 goto label1;

        $r3 = new java.lang.IllegalStateException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StreamedText position ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been discarded");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);
        r2[1] = 1;
        throw $r3;

     label1:
        $i2 = r0.<net.htmlparser.jericho.StreamedText: int end>;
        r2[2] = 1;
        if i0 < $i2 goto label2;

        $r9 = new java.lang.IndexOutOfBoundsException;
        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>()>();
        r2[3] = 1;
        throw $r9;

     label2:
        r2[4] = 1;
        return;
    }

    public int getBufferOverflowPosition()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2;
        char[] $r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        $i0 = r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin>;
        $r3 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i1 = lengthof $r3;
        $i2 = $i0 + $i1;
        r2[0] = 1;
        return $i2;
    }

    private void readToPosition(int)
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        boolean[][] $r1;
        boolean[] r2;
        char[] $r3, $r4, $r7, $r8;
        boolean $z0;
        java.nio.BufferOverflowException $r5;
        java.io.Reader $r6;
        java.io.IOException $r10, r11;
        java.lang.RuntimeException $r12;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];

     label1:
        $i2 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $r3 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i3 = lengthof $r3;
        $i4 = $i2 + $i3;
        r2[0] = 1;
        if i0 < $i4 goto label4;

        $i5 = r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin>;
        $r4 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i6 = lengthof $r4;
        $i7 = $i5 + $i6;
        r2[1] = 1;
        if i0 < $i7 goto label3;

        $z0 = r0.<net.htmlparser.jericho.StreamedText: boolean expandableBuffer>;
        r2[2] = 1;
        if $z0 != 0 goto label2;

        $r5 = new java.nio.BufferOverflowException;
        specialinvoke $r5.<java.nio.BufferOverflowException: void <init>()>();
        r2[3] = 1;
        throw $r5;

     label2:
        $i8 = r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin>;
        $i9 = i0 - $i8;
        $i10 = $i9 + 1;
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void expandBuffer(int)>($i10);
        r2[4] = 1;

     label3:
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void discardUsedText()>();
        r2[5] = 1;

     label4:
        $i11 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        r2[6] = 1;
        if $i11 > i0 goto label6;

        $r6 = r0.<net.htmlparser.jericho.StreamedText: java.io.Reader reader>;
        $r7 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i12 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $i13 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $i14 = $i12 - $i13;
        $i15 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $r8 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i16 = lengthof $r8;
        $i17 = $i15 + $i16;
        $i18 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $i19 = $i17 - $i18;
        i1 = virtualinvoke $r6.<java.io.Reader: int read(char[],int,int)>($r7, $i14, $i19);
        r2[7] = 1;
        if i1 != -1 goto label5;

        $i20 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        r0.<net.htmlparser.jericho.StreamedText: int end> = $i20;
        r2[8] = 1;
        goto label6;

     label5:
        $i21 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $i22 = $i21 + i1;
        r0.<net.htmlparser.jericho.StreamedText: int readerPos> = $i22;
        r2[9] = 1;
        goto label4;

     label6:
        r2[10] = 1;

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = new java.lang.RuntimeException;
        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r11);
        r2[11] = 1;
        throw $r12;

     label9:
        r2[12] = 1;
        return;

        catch java.io.IOException from label1 to label7 with label8;
    }

    private void expandBuffer(int) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedText r0;
        int i0, i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        char[] r3, $r4, $r5;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[25];
        $r4 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $i2 = lengthof $r4;
        i1 = $i2 * 2;
        r2[0] = 1;
        if i1 >= i0 goto label1;

        i1 = i0;
        r2[1] = 1;

     label1:
        r3 = newarray (char)[i1];
        $r5 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void shiftBuffer(char[],char[])>($r5, r3);
        r0.<net.htmlparser.jericho.StreamedText: char[] buffer> = r3;
        r2[2] = 1;
        return;
    }

    private void discardUsedText() throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;
        char[] $r3, $r4;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[26];
        $i0 = r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin>;
        $i1 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        r2[0] = 1;
        if $i0 != $i1 goto label1;

        r2[1] = 1;
        return;

     label1:
        $r3 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        $r4 = r0.<net.htmlparser.jericho.StreamedText: char[] buffer>;
        specialinvoke r0.<net.htmlparser.jericho.StreamedText: void shiftBuffer(char[],char[])>($r3, $r4);
        r2[2] = 1;
        return;
    }

    private void shiftBuffer(char[], char[]) throws java.io.IOException
    {
        net.htmlparser.jericho.StreamedText r0;
        char[] r1, r2;
        boolean[][] $r3;
        boolean[] r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i18, $i19, $i22;
        char $c8;
        java.io.Reader $r5;
        long $l15, l16, $l20, $l21;
        byte $b17;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        r1 := @parameter0: char[];
        r2 := @parameter1: char[];
        $r3 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r4 = $r3[27];
        $i3 = r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin>;
        $i4 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        i0 = $i3 - $i4;
        $i5 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $i6 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        i1 = $i5 - $i6;
        i2 = i0;
        r4[0] = 1;

     label1:
        r4[1] = 1;
        if i2 >= i1 goto label2;

        $i7 = i2 - i0;
        $c8 = r1[i2];
        r2[$i7] = $c8;
        i2 = i2 + 1;
        r4[2] = 1;
        goto label1;

     label2:
        $i9 = r0.<net.htmlparser.jericho.StreamedText: int minRequiredBufferBegin>;
        r0.<net.htmlparser.jericho.StreamedText: int bufferBegin> = $i9;
        r4[3] = 1;

     label3:
        $i10 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $i11 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        r4[4] = 1;
        if $i10 >= $i11 goto label5;

        $r5 = r0.<net.htmlparser.jericho.StreamedText: java.io.Reader reader>;
        $i12 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $i13 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $i14 = $i12 - $i13;
        $l15 = (long) $i14;
        l16 = virtualinvoke $r5.<java.io.Reader: long skip(long)>($l15);
        $b17 = l16 cmp 0L;
        r4[5] = 1;
        if $b17 != 0 goto label4;

        $i18 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        r0.<net.htmlparser.jericho.StreamedText: int end> = $i18;
        r4[6] = 1;
        goto label5;

     label4:
        $i19 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $l20 = (long) $i19;
        $l21 = $l20 + l16;
        $i22 = (int) $l21;
        r0.<net.htmlparser.jericho.StreamedText: int readerPos> = $i22;
        r4[7] = 1;
        goto label3;

     label5:
        r4[8] = 1;
        return;
    }

    java.lang.String getCurrentBufferContent()
    {
        net.htmlparser.jericho.StreamedText r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.StreamedText;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $i0 = r0.<net.htmlparser.jericho.StreamedText: int bufferBegin>;
        $i1 = r0.<net.htmlparser.jericho.StreamedText: int end>;
        $i2 = r0.<net.htmlparser.jericho.StreamedText: int readerPos>;
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.StreamedText: java.lang.String substring(int,int)>($i0, $i3);
        r2[0] = 1;
        return $r3;
    }

    private static char[] toCharArray(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        char[] r3, $r5;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r4;
        char $c3;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.StreamedText: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();

     label0:
        r2 = $r1[29];
        $z0 = r0 instanceof java.lang.String;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = (java.lang.String) r0;
        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();
        r2[1] = 1;
        return $r5;

     label1:
        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        r3 = newarray (char)[$i1];
        i0 = 0;
        r2[2] = 1;

     label2:
        $i2 = lengthof r3;
        r2[3] = 1;
        if i0 >= $i2 goto label3;

        $c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);
        r3[i0] = $c3;
        i0 = i0 + 1;
        r2[4] = 1;
        goto label2;

     label3:
        r2[5] = 1;
        return r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.StreamedText: boolean[][] $VRi()>();
        r1 = $r0[30];
        <net.htmlparser.jericho.StreamedText: int INITIAL_EXPANDABLE_BUFFER_SIZE> = 8192;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;

        $r0 = newmultiarray (boolean)[31][];
        <net.htmlparser.jericho.StreamedText: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[3];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[3];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[5];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[5];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[13];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[3];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[3];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[9];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[6];
        $r0[29] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[30] = $r31;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StreamedText", 4188662946905099139L);
        return $r0;
    }
}
final class net.htmlparser.jericho.StringOutputSegment extends java.lang.Object implements net.htmlparser.jericho.OutputSegment
{
    private final int begin;
    private final int end;
    private final java.lang.CharSequence text;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(int, int, java.lang.CharSequence)
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        int i0, i1;
        java.lang.CharSequence r1, $r5;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.lang.CharSequence;
        $r2 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.StringOutputSegment: int begin> = i0;
        r0.<net.htmlparser.jericho.StringOutputSegment: int end> = i1;
        r3[0] = 1;
        if r1 != null goto label1;

        $r5 = "";
        r3[1] = 1;
        goto label2;

     label1:
        $r5 = r1;
        r3[2] = 1;

     label2:
        r0.<net.htmlparser.jericho.StringOutputSegment: java.lang.CharSequence text> = $r5;
        r3[3] = 1;
        return;
    }

    public void <init>(net.htmlparser.jericho.Segment, java.lang.CharSequence)
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        net.htmlparser.jericho.Segment r1;
        java.lang.CharSequence r2;
        boolean[][] $r3;
        boolean[] r4;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        r2 := @parameter1: java.lang.CharSequence;
        $r3 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $i0 = r1.<net.htmlparser.jericho.Segment: int begin>;
        $i1 = r1.<net.htmlparser.jericho.Segment: int end>;
        specialinvoke r0.<net.htmlparser.jericho.StringOutputSegment: void <init>(int,int,java.lang.CharSequence)>($i0, $i1, r2);
        r4[0] = 1;
        return;
    }

    public int getBegin()
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        $r1 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<net.htmlparser.jericho.StringOutputSegment: int begin>;
        r2[0] = 1;
        return $i0;
    }

    public int getEnd()
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        $r1 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = r0.<net.htmlparser.jericho.StringOutputSegment: int end>;
        r2[0] = 1;
        return $i0;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        virtualinvoke r0.<net.htmlparser.jericho.StringOutputSegment: void appendTo(java.lang.Appendable)>(r1);
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.CharSequence $r4;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = r0.<net.htmlparser.jericho.StringOutputSegment: java.lang.CharSequence text>;
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        r3[0] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        int $i0;
        long $l1;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        $r1 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.StringOutputSegment: java.lang.CharSequence text>;
        $i0 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();
        $l1 = (long) $i0;
        r2[0] = 1;
        return $l1;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        $r1 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = r0.<net.htmlparser.jericho.StringOutputSegment: java.lang.CharSequence text>;
        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();
        r2[0] = 1;
        return $r4;
    }

    public java.lang.String getDebugInfo()
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        int $i0, $i1;
        java.lang.CharSequence $r9;
        java.lang.String $r11;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        $r1 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replace: (p");
        $i0 = r0.<net.htmlparser.jericho.StringOutputSegment: int begin>;
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-p");
        $i1 = r0.<net.htmlparser.jericho.StringOutputSegment: int end>;
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");
        $r9 = r0.<net.htmlparser.jericho.StringOutputSegment: java.lang.CharSequence text>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r11;
    }

    public void output(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.StringOutputSegment r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.StringOutputSegment;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        virtualinvoke r0.<net.htmlparser.jericho.StringOutputSegment: void writeTo(java.io.Writer)>(r1);
        r3[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRi()>();
        r1 = $r0[10];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = newmultiarray (boolean)[11][];
        <net.htmlparser.jericho.StringOutputSegment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[4];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/StringOutputSegment", 6024285975557057525L);
        return $r0;
    }
}
final class net.htmlparser.jericho.SubCache$CacheEntry extends java.lang.Object
{
    public int index;
    public final int pos;
    public final net.htmlparser.jericho.Tag tag;
    public boolean previousCached;
    public boolean nextCached;
    public boolean removed;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(int, int, net.htmlparser.jericho.Tag, boolean, boolean)
    {
        net.htmlparser.jericho.SubCache$CacheEntry r0;
        int i0, i1;
        net.htmlparser.jericho.Tag r1;
        boolean z0, z1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.SubCache$CacheEntry;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.Tag;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        $r2 = <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.SubCache$CacheEntry: boolean removed> = 0;
        r0.<net.htmlparser.jericho.SubCache$CacheEntry: int index> = i0;
        r0.<net.htmlparser.jericho.SubCache$CacheEntry: int pos> = i1;
        r0.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag> = r1;
        r0.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = z0;
        r0.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = z1;
        r3[0] = 1;
        return;
    }

    public boolean isRedundant()
    {
        net.htmlparser.jericho.SubCache$CacheEntry r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: net.htmlparser.jericho.SubCache$CacheEntry;
        $r1 = <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r2[0] = 1;
        if $r3 != null goto label1;

        $z0 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached>;
        r2[1] = 1;
        if $z0 == 0 goto label1;

        $z1 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached>;
        r2[2] = 1;
        if $z1 == 0 goto label1;

        $z2 = 1;
        r2[3] = 1;
        goto label2;

     label1:
        $z2 = 0;
        r2[4] = 1;

     label2:
        r2[5] = 1;
        return $z2;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.SubCache$CacheEntry r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r17;
        int $i0, $i1;
        java.lang.String $r4, $r7, $r15, $r18;
        boolean $z0, $z1;
        char $c2, $c3;
        net.htmlparser.jericho.Tag $r14, $r16;

        r0 := @this: net.htmlparser.jericho.SubCache$CacheEntry;
        $r1 = <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $i0 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $r4 = specialinvoke r0.<net.htmlparser.jericho.SubCache$CacheEntry: java.lang.String pad(int,int)>($i0, 4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $i1 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        $r7 = specialinvoke r0.<net.htmlparser.jericho.SubCache$CacheEntry: java.lang.String pad(int,int)>($i1, 5);
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $z0 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $c2 = 124;
        r2[1] = 1;
        goto label2;

     label1:
        $c2 = 45;
        r2[2] = 1;

     label2:
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $z1 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached>;
        r2[3] = 1;
        if $z1 == 0 goto label3;

        $c3 = 124;
        r2[4] = 1;
        goto label4;

     label3:
        $c3 = 45;
        r2[5] = 1;

     label4:
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r14 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r2[6] = 1;
        if $r14 != null goto label5;

        $r15 = "null";
        r2[7] = 1;
        goto label6;

     label5:
        $r16 = r0.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        $r15 = virtualinvoke $r16.<net.htmlparser.jericho.Tag: java.lang.String getDebugInfo()>();
        r2[8] = 1;

     label6:
        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[9] = 1;
        return $r18;
    }

    private java.lang.String pad(int, int)
    {
        net.htmlparser.jericho.SubCache$CacheEntry r0;
        int i0, i1, i2, $i3;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String r3, $r8;
        java.lang.StringBuilder r4, $r5;

        r0 := @this: net.htmlparser.jericho.SubCache$CacheEntry;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(i1);
        r4 = $r5;
        $i3 = virtualinvoke r3.<java.lang.String: int length()>();
        i2 = i1 - $i3;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i2 <= 0 goto label2;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        i2 = i2 + -1;
        r2[2] = 1;
        goto label1;

     label2:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r8 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[3] = 1;
        return $r8;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRi()>();
        r1 = $r0[4];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[5][];
        <net.htmlparser.jericho.SubCache$CacheEntry: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[6];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[10];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SubCache$CacheEntry", -4783630895087443469L);
        return $r0;
    }
}
class net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError extends java.lang.AssertionError
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.TagType, net.htmlparser.jericho.Tag, net.htmlparser.jericho.SubCache, java.lang.String)
    {
        net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError r0;
        net.htmlparser.jericho.TagType r1;
        net.htmlparser.jericho.Tag r2;
        net.htmlparser.jericho.SubCache r3;
        java.lang.String r4, $r13, $r17;
        boolean[][] $r5;
        boolean[] r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16;

        r0 := @this: net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        r2 := @parameter1: net.htmlparser.jericho.Tag;
        r3 := @parameter2: net.htmlparser.jericho.SubCache;
        r4 := @parameter3: java.lang.String;
        $r5 = <net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError: boolean[][] $VRi()>();

     label0:
        r6 = $r5[0];
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERNAL ERROR: Inconsistent Cache State for TagType \"");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" - ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r13 = virtualinvoke r2.<net.htmlparser.jericho.Tag: java.lang.String getDebugInfo()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke r0.<java.lang.AssertionError: void <init>(java.lang.Object)>($r17);
        r6[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SubCache$CacheEntryMissingInternalError", 9265085482862L);
        return $r0;
    }
}
class net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError extends net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.TagType, net.htmlparser.jericho.Tag, net.htmlparser.jericho.SubCache)
    {
        net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError r0;
        net.htmlparser.jericho.TagType r1;
        net.htmlparser.jericho.Tag r2;
        net.htmlparser.jericho.SubCache r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        r2 := @parameter1: net.htmlparser.jericho.Tag;
        r3 := @parameter2: net.htmlparser.jericho.SubCache;
        $r4 = <net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError: void <init>(net.htmlparser.jericho.TagType,net.htmlparser.jericho.Tag,net.htmlparser.jericho.SubCache,java.lang.String)>(r1, r2, r3, "missing cache entry for found tag");
        r5[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SubCache$FoundCacheEntryMissingInternalError", 9252593981417L);
        return $r0;
    }
}
class net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError extends net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.TagType, net.htmlparser.jericho.Tag, net.htmlparser.jericho.SubCache)
    {
        net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError r0;
        net.htmlparser.jericho.TagType r1;
        net.htmlparser.jericho.Tag r2;
        net.htmlparser.jericho.SubCache r3;
        boolean[][] $r4;
        boolean[] r5;

        r0 := @this: net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        r2 := @parameter1: net.htmlparser.jericho.Tag;
        r3 := @parameter2: net.htmlparser.jericho.SubCache;
        $r4 = <net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError: boolean[][] $VRi()>();

     label0:
        r5 = $r4[0];
        specialinvoke r0.<net.htmlparser.jericho.SubCache$CacheEntryMissingInternalError: void <init>(net.htmlparser.jericho.TagType,net.htmlparser.jericho.Tag,net.htmlparser.jericho.SubCache,java.lang.String)>(r1, r2, r3, "cache entry no longer found in source:");
        r5[0] = 1;
        return;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError: boolean[][] $VRi()>();
        r1 = $r0[1];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SubCache$SourceCacheEntryMissingInternalError", 9252593981417L);
        return $r0;
    }
}
final class net.htmlparser.jericho.SubCache$TagIterator extends java.lang.Object implements java.util.Iterator
{
    private int i;
    private net.htmlparser.jericho.Tag nextTag;
    final net.htmlparser.jericho.SubCache this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.SubCache)
    {
        net.htmlparser.jericho.SubCache$TagIterator r0;
        net.htmlparser.jericho.SubCache r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.SubCache$TagIterator;
        r1 := @parameter0: net.htmlparser.jericho.SubCache;
        $r2 = <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<net.htmlparser.jericho.SubCache$TagIterator: net.htmlparser.jericho.SubCache this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.SubCache$TagIterator: int i> = 0;
        specialinvoke r0.<net.htmlparser.jericho.SubCache$TagIterator: void loadNextTag()>();
        r3[0] = 1;
        return;
    }

    public boolean hasNext()
    {
        net.htmlparser.jericho.SubCache$TagIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SubCache$TagIterator;
        $r1 = <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.SubCache$TagIterator: net.htmlparser.jericho.Tag nextTag>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.Tag next()
    {
        net.htmlparser.jericho.SubCache$TagIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag r3;

        r0 := @this: net.htmlparser.jericho.SubCache$TagIterator;
        $r1 = <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r3 = r0.<net.htmlparser.jericho.SubCache$TagIterator: net.htmlparser.jericho.Tag nextTag>;
        specialinvoke r0.<net.htmlparser.jericho.SubCache$TagIterator: void loadNextTag()>();
        r2[0] = 1;
        return r3;
    }

    public void remove()
    {
        net.htmlparser.jericho.SubCache$TagIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.SubCache$TagIterator;
        $r1 = <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    private void loadNextTag()
    {
        net.htmlparser.jericho.SubCache$TagIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1, $i2, $i3;
        net.htmlparser.jericho.SubCache $r4, $r5;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r6;
        net.htmlparser.jericho.SubCache$CacheEntry $r7;
        net.htmlparser.jericho.Tag $r8;

        r0 := @this: net.htmlparser.jericho.SubCache$TagIterator;
        $r1 = <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];

     label1:
        $i0 = r0.<net.htmlparser.jericho.SubCache$TagIterator: int i>;
        $i1 = $i0 + 1;
        r0.<net.htmlparser.jericho.SubCache$TagIterator: int i> = $i1;
        $r4 = r0.<net.htmlparser.jericho.SubCache$TagIterator: net.htmlparser.jericho.SubCache this$0>;
        $i2 = staticinvoke <net.htmlparser.jericho.SubCache: int access$000(net.htmlparser.jericho.SubCache)>($r4);
        r2[0] = 1;
        if $i1 > $i2 goto label2;

        $r5 = r0.<net.htmlparser.jericho.SubCache$TagIterator: net.htmlparser.jericho.SubCache this$0>;
        $r6 = staticinvoke <net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] access$100(net.htmlparser.jericho.SubCache)>($r5);
        $i3 = r0.<net.htmlparser.jericho.SubCache$TagIterator: int i>;
        $r7 = $r6[$i3];
        $r8 = $r7.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r0.<net.htmlparser.jericho.SubCache$TagIterator: net.htmlparser.jericho.Tag nextTag> = $r8;
        r2[1] = 1;
        if $r8 != null goto label2;

        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return;
    }

    public volatile java.lang.Object next()
    {
        net.htmlparser.jericho.SubCache$TagIterator r0;
        net.htmlparser.jericho.Tag $r1;

        r0 := @this: net.htmlparser.jericho.SubCache$TagIterator;
        $r1 = virtualinvoke r0.<net.htmlparser.jericho.SubCache$TagIterator: net.htmlparser.jericho.Tag next()>();
        return $r1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRi()>();
        r1 = $r0[6];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[7][];
        <net.htmlparser.jericho.SubCache$TagIterator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[6] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SubCache$TagIterator", -3859989439805770265L);
        return $r0;
    }
}
final class net.htmlparser.jericho.SubCache extends java.lang.Object
{
    private final net.htmlparser.jericho.Cache cache;
    public final net.htmlparser.jericho.TagType tagType;
    private final net.htmlparser.jericho.SubCache$CacheEntry bof;
    private final net.htmlparser.jericho.SubCache$CacheEntry eof;
    private net.htmlparser.jericho.SubCache$CacheEntry[] array;
    private static final int INITIAL_CAPACITY;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Cache, net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.Cache r1;
        net.htmlparser.jericho.TagType r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.SubCache$CacheEntry $r5, $r10;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r6, $r7, $r9;
        int $i0;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.Cache;
        r2 := @parameter1: net.htmlparser.jericho.TagType;
        $r3 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r6 = newarray (net.htmlparser.jericho.SubCache$CacheEntry)[64];
        r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array> = $r6;
        r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache> = r1;
        r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType> = r2;
        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r5 = new net.htmlparser.jericho.SubCache$CacheEntry;
        specialinvoke $r5.<net.htmlparser.jericho.SubCache$CacheEntry: void <init>(int,int,net.htmlparser.jericho.Tag,boolean,boolean)>(0, -1, null, 0, 0);
        r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry bof> = $r5;
        $r7[0] = $r5;
        $r9 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r10 = new net.htmlparser.jericho.SubCache$CacheEntry;
        $i0 = virtualinvoke r1.<net.htmlparser.jericho.Cache: int getSourceLength()>();
        specialinvoke $r10.<net.htmlparser.jericho.SubCache$CacheEntry: void <init>(int,int,net.htmlparser.jericho.Tag,boolean,boolean)>(1, $i0, null, 0, 0);
        r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof> = $r10;
        $r9[1] = $r10;
        r4[0] = 1;
        return;
    }

    public int size()
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry $r3;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $i0 = $r3.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $i1 = $i0 + 1;
        r2[0] = 1;
        return $i1;
    }

    public void clear()
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry $r3, $r4, $r5, $r7;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r6;

        r0 := @this: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry bof>;
        $r3.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 0;
        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index> = 1;
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $r5.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 0;
        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $r6[1] = $r7;
        r2[0] = 1;
        return;
    }

    public void bulkLoad_Init(int)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, $i1, $i2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r3, $r4, $r7;
        net.htmlparser.jericho.SubCache$CacheEntry $r5, $r6, $r8, $r9, $r10;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i1 = i0 + 2;
        $r3 = newarray (net.htmlparser.jericho.SubCache$CacheEntry)[$i1];
        r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array> = $r3;
        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry bof>;
        $r4[0] = $r5;
        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry bof>;
        $r6.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 1;
        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i2 = i0 + 1;
        $r8 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $r8.<net.htmlparser.jericho.SubCache$CacheEntry: int index> = $i2;
        $r9 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $r7[$i2] = $r9;
        $r10 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $r10.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 1;
        r2[0] = 1;
        return;
    }

    public void bulkLoad_Set(int, net.htmlparser.jericho.Tag)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, $i2;
        net.htmlparser.jericho.Tag r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.SubCache$CacheEntry $r4;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r5;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.Tag;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        i1 = i0 + 1;
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r4 = new net.htmlparser.jericho.SubCache$CacheEntry;
        $i2 = r1.<net.htmlparser.jericho.Tag: int begin>;
        specialinvoke $r4.<net.htmlparser.jericho.SubCache$CacheEntry: void <init>(int,int,net.htmlparser.jericho.Tag,boolean,boolean)>(i1, $i2, r1, 1, 1);
        $r5[i1] = $r4;
        r3[0] = 1;
        return;
    }

    public void bulkLoad_AddToTypeSpecificCache(net.htmlparser.jericho.Tag)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.Tag r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        net.htmlparser.jericho.SubCache$CacheEntry $r4, $r6, $r8, $r9;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r5, $r7;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.Tag;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        i0 = $r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i1 = lengthof $r5;
        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $i2 = $r6.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $i3 = $i2 + 1;
        r3[0] = 1;
        if $i1 != $i3 goto label1;

        specialinvoke r0.<net.htmlparser.jericho.SubCache: void doubleCapacity()>();
        r3[1] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r8 = new net.htmlparser.jericho.SubCache$CacheEntry;
        $i4 = r1.<net.htmlparser.jericho.Tag: int begin>;
        specialinvoke $r8.<net.htmlparser.jericho.SubCache$CacheEntry: void <init>(int,int,net.htmlparser.jericho.Tag,boolean,boolean)>(i0, $i4, r1, 1, 1);
        $r7[i0] = $r8;
        $r9 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $i5 = $r9.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $i6 = $i5 + 1;
        $r9.<net.htmlparser.jericho.SubCache$CacheEntry: int index> = $i6;
        r3[2] = 1;
        return;
    }

    public void bulkLoad_FinaliseTypeSpecificCache()
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry $r3, $r4, $r6, $r7;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r5;
        int $i0;

        r0 := @this: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry bof>;
        $r3.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 1;
        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 1;
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $i0 = $r6.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $r5[$i0] = $r7;
        r2[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Tag getTagAt(int, boolean)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry r3;
        net.htmlparser.jericho.Cache $r4, $r5, $r10;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r6;
        net.htmlparser.jericho.Tag $r7, $r9, $r11;
        net.htmlparser.jericho.TagType $r8;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $i2 = virtualinvoke $r4.<net.htmlparser.jericho.Cache: int getSourceLength()>();
        r2[0] = 1;
        if $i2 != 0 goto label1;

        r2[1] = 1;
        return null;

     label1:
        r2[2] = 1;
        if i0 < 0 goto label2;

        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $i3 = virtualinvoke $r5.<net.htmlparser.jericho.Cache: int getSourceLength()>();
        r2[3] = 1;
        if i0 < $i3 goto label3;

     label2:
        r2[4] = 1;
        return null;

     label3:
        i1 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int getIndexOfPos(int)>(i0);
        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r3 = $r6[i1];
        $i4 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r2[5] = 1;
        if $i4 != i0 goto label5;

        r2[6] = 1;
        if z0 == 0 goto label4;

        $r7 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $z1 = virtualinvoke $r8.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r2[7] = 1;
        if $z1 != 0 goto label4;

        r2[8] = 1;
        return null;

     label4:
        $r9 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r2[9] = 1;
        return $r9;

     label5:
        $z2 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached>;
        r2[10] = 1;
        if $z2 == 0 goto label6;

        r2[11] = 1;
        return null;

     label6:
        $r10 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $r11 = virtualinvoke $r10.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Tag addTagAt(int,boolean)>(i0, z0);
        r2[12] = 1;
        return $r11;
    }

    public void addTagAt(int, net.htmlparser.jericho.Tag)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, $i4, $i5, $i6, $i7;
        net.htmlparser.jericho.Tag r1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.SubCache$CacheEntry r4, r5, $r6;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r9;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.Tag;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        i1 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int getIndexOfPos(int)>(i0);
        $r9 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r4 = $r9[i1];
        r5 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getPrevious(net.htmlparser.jericho.SubCache$CacheEntry)>(r4);
        $r6 = new net.htmlparser.jericho.SubCache$CacheEntry;
        $i4 = r5.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        $i5 = $i4 + 1;
        r3[0] = 1;
        if i0 != $i5 goto label1;

        $z0 = 1;
        r3[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r3[2] = 1;

     label2:
        $i6 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        $i7 = $i6 - 1;
        r3[3] = 1;
        if i0 != $i7 goto label3;

        $z1 = 1;
        r3[4] = 1;
        goto label4;

     label3:
        $z1 = 0;
        r3[5] = 1;

     label4:
        specialinvoke $r6.<net.htmlparser.jericho.SubCache$CacheEntry: void <init>(int,int,net.htmlparser.jericho.Tag,boolean,boolean)>(i1, i0, r1, $z0, $z1);
        specialinvoke r0.<net.htmlparser.jericho.SubCache: void add(net.htmlparser.jericho.SubCache$CacheEntry,net.htmlparser.jericho.SubCache$CacheEntry,net.htmlparser.jericho.SubCache$CacheEntry)>(r5, $r6, r4);
        r3[6] = 1;
        return;
    }

    public net.htmlparser.jericho.Tag getPreviousTag(int)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, $i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry r3, $r11;
        net.htmlparser.jericho.Tag r4, $r8, $r9, $r10;
        net.htmlparser.jericho.Cache $r5, $r6;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r7;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $i2 = virtualinvoke $r5.<net.htmlparser.jericho.Cache: int getSourceLength()>();
        r2[0] = 1;
        if $i2 != 0 goto label1;

        r2[1] = 1;
        return null;

     label1:
        r2[2] = 1;
        if i0 < 0 goto label2;

        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $i3 = virtualinvoke $r6.<net.htmlparser.jericho.Cache: int getSourceLength()>();
        r2[3] = 1;
        if i0 < $i3 goto label3;

     label2:
        r2[4] = 1;
        return null;

     label3:
        i1 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int getIndexOfPos(int)>(i0);
        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r3 = $r7[i1];
        $i4 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r2[5] = 1;
        if $i4 != i0 goto label4;

        $r8 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r2[6] = 1;
        if $r8 == null goto label4;

        $r9 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        $z0 = virtualinvoke $r9.<net.htmlparser.jericho.Tag: boolean includeInSearch()>();
        r2[7] = 1;
        if $z0 == 0 goto label4;

        $r10 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r2[8] = 1;
        return $r10;

     label4:
        $r11 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getPrevious(net.htmlparser.jericho.SubCache$CacheEntry)>(r3);
        r4 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.SubCache$CacheEntry,int,net.htmlparser.jericho.SubCache$CacheEntry)>($r11, i0, r3);
        specialinvoke r0.<net.htmlparser.jericho.SubCache: void addPreviousTag(int,net.htmlparser.jericho.Tag)>(i0, r4);
        r2[9] = 1;
        return r4;
    }

    public net.htmlparser.jericho.Tag getNextTag(int)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, $i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry r3, $r11, $r12;
        net.htmlparser.jericho.Tag r4, $r8, $r9, $r10;
        net.htmlparser.jericho.Cache $r5, $r6;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r7;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $i2 = virtualinvoke $r5.<net.htmlparser.jericho.Cache: int getSourceLength()>();
        r2[0] = 1;
        if $i2 != 0 goto label1;

        r2[1] = 1;
        return null;

     label1:
        r2[2] = 1;
        if i0 < 0 goto label2;

        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $i3 = virtualinvoke $r6.<net.htmlparser.jericho.Cache: int getSourceLength()>();
        r2[3] = 1;
        if i0 < $i3 goto label3;

     label2:
        r2[4] = 1;
        return null;

     label3:
        i1 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int getIndexOfPos(int)>(i0);
        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r3 = $r7[i1];
        $i4 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r2[5] = 1;
        if $i4 != i0 goto label5;

        $r8 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r2[6] = 1;
        if $r8 == null goto label4;

        $r9 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        $z0 = virtualinvoke $r9.<net.htmlparser.jericho.Tag: boolean includeInSearch()>();
        r2[7] = 1;
        if $z0 == 0 goto label4;

        $r10 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r2[8] = 1;
        return $r10;

     label4:
        $r11 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getNext(net.htmlparser.jericho.SubCache$CacheEntry)>(r3);
        r4 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.SubCache$CacheEntry,int,net.htmlparser.jericho.SubCache$CacheEntry)>(r3, i0, $r11);
        r2[9] = 1;
        goto label6;

     label5:
        $r12 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getPrevious(net.htmlparser.jericho.SubCache$CacheEntry)>(r3);
        r4 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.SubCache$CacheEntry,int,net.htmlparser.jericho.SubCache$CacheEntry)>($r12, i0, r3);
        r2[10] = 1;

     label6:
        specialinvoke r0.<net.htmlparser.jericho.SubCache: void addNextTag(int,net.htmlparser.jericho.Tag)>(i0, r4);
        r2[11] = 1;
        return r4;
    }

    public java.util.Iterator getTagIterator()
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$TagIterator $r3;

        r0 := @this: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $r3 = new net.htmlparser.jericho.SubCache$TagIterator;
        specialinvoke $r3.<net.htmlparser.jericho.SubCache$TagIterator: void <init>(net.htmlparser.jericho.SubCache)>(r0);
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.SubCache: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r5;
    }

    protected java.lang.StringBuilder appendTo(java.lang.StringBuilder)
    {
        net.htmlparser.jericho.SubCache r0;
        java.lang.StringBuilder r1, $r4, $r6, $r11;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1;
        net.htmlparser.jericho.TagType $r5;
        java.lang.String $r7, $r12;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r9;
        net.htmlparser.jericho.SubCache$CacheEntry $r10;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: java.lang.StringBuilder;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cache for TagType : ");
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);
        $r7 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        i0 = 0;
        r3[0] = 1;

     label1:
        $i1 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int lastIndex()>();
        r3[1] = 1;
        if i0 > $i1 goto label2;

        $r9 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r10 = $r9[i0];
        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        i0 = i0 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return r1;
    }

    private net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.SubCache$CacheEntry, int, net.htmlparser.jericho.SubCache$CacheEntry)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.SubCache$CacheEntry r1, r2, $r11;
        int i0, $i1, $i2, $i3;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Tag r5, $r12, $r13, $r14;
        boolean $z0, $z1, $z2;
        net.htmlparser.jericho.Cache $r6, $r9;
        net.htmlparser.jericho.Source $r7, $r10;
        net.htmlparser.jericho.TagType $r8;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.SubCache$CacheEntry;
        i0 := @parameter1: int;
        r2 := @parameter2: net.htmlparser.jericho.SubCache$CacheEntry;
        $r3 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r4 = $r3[14];

     label1:
        $z0 = r2.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached>;
        r4[0] = 1;
        if $z0 != 0 goto label3;

        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $r7 = $r6.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $r8 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        $i1 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r5 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTagUncached(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType,int)>($r7, i0, $r8, $i1);
        r4[1] = 1;
        if r5 == null goto label3;

        $r9 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $r10 = $r9.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $z1 = $r10.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;
        r4[2] = 1;
        if $z1 != 0 goto label2;

        $i2 = r5.<net.htmlparser.jericho.Tag: int begin>;
        virtualinvoke r0.<net.htmlparser.jericho.SubCache: void addTagAt(int,net.htmlparser.jericho.Tag)>($i2, r5);
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return r5;

     label3:
        $r11 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry bof>;
        r4[5] = 1;
        if r1 != $r11 goto label4;

        r4[6] = 1;
        return null;

     label4:
        $r12 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r4[7] = 1;
        if $r12 == null goto label5;

        $r13 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        $z2 = virtualinvoke $r13.<net.htmlparser.jericho.Tag: boolean includeInSearch()>();
        r4[8] = 1;
        if $z2 == 0 goto label5;

        $r14 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r4[9] = 1;
        return $r14;

     label5:
        $i3 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        i0 = $i3 - 1;
        r2 = r1;
        r1 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getPrevious(net.htmlparser.jericho.SubCache$CacheEntry)>(r1);
        r4[10] = 1;
        goto label1;
    }

    private net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.SubCache$CacheEntry, int, net.htmlparser.jericho.SubCache$CacheEntry)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.SubCache$CacheEntry r1, r2, $r11;
        int i0, $i1, $i2, $i3;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Tag r5, $r12, $r13, $r14;
        boolean $z0, $z1, $z2;
        net.htmlparser.jericho.Cache $r6, $r9;
        net.htmlparser.jericho.Source $r7, $r10;
        net.htmlparser.jericho.TagType $r8;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.SubCache$CacheEntry;
        i0 := @parameter1: int;
        r2 := @parameter2: net.htmlparser.jericho.SubCache$CacheEntry;
        $r3 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r4 = $r3[15];

     label1:
        $z0 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached>;
        r4[0] = 1;
        if $z0 != 0 goto label3;

        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $r7 = $r6.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $r8 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        $i1 = r2.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r5 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTagUncached(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType,int)>($r7, i0, $r8, $i1);
        r4[1] = 1;
        if r5 == null goto label3;

        $r9 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        $r10 = $r9.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Source source>;
        $z1 = $r10.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;
        r4[2] = 1;
        if $z1 != 0 goto label2;

        $i2 = r5.<net.htmlparser.jericho.Tag: int begin>;
        virtualinvoke r0.<net.htmlparser.jericho.SubCache: void addTagAt(int,net.htmlparser.jericho.Tag)>($i2, r5);
        r4[3] = 1;

     label2:
        r4[4] = 1;
        return r5;

     label3:
        $r11 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        r4[5] = 1;
        if r2 != $r11 goto label4;

        r4[6] = 1;
        return null;

     label4:
        $r12 = r2.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r4[7] = 1;
        if $r12 == null goto label5;

        $r13 = r2.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        $z2 = virtualinvoke $r13.<net.htmlparser.jericho.Tag: boolean includeInSearch()>();
        r4[8] = 1;
        if $z2 == 0 goto label5;

        $r14 = r2.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r4[9] = 1;
        return $r14;

     label5:
        $i3 = r2.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        i0 = $i3 + 1;
        r1 = r2;
        r2 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getNext(net.htmlparser.jericho.SubCache$CacheEntry)>(r2);
        r4[10] = 1;
        goto label1;
    }

    private void addPreviousTag(int, net.htmlparser.jericho.Tag)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        net.htmlparser.jericho.Tag r1, $r14, $r15;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.SubCache$CacheEntry r4, $r5, r11, r13;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r6, $r10, $r12;
        boolean $z0, $z1, $z2, $z3;
        net.htmlparser.jericho.TagType $r7, $r17, $r19;
        net.htmlparser.jericho.Cache $r8;
        net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError $r16;
        net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError $r18;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.Tag;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        r3[0] = 1;
        if r1 != null goto label1;

        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry bof>;
        $i4 = $r5.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[1] = 1;
        goto label2;

     label1:
        $i4 = r1.<net.htmlparser.jericho.Tag: int begin>;
        r3[2] = 1;

     label2:
        i1 = $i4;
        r3[3] = 1;
        if i1 != i0 goto label3;

        r3[4] = 1;
        return;

     label3:
        i2 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int getIndexOfPos(int)>(i0);
        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r4 = $r6[i2];
        i3 = 2147483647;
        $i5 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[5] = 1;
        if $i5 != i0 goto label4;

        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 1;
        $z0 = virtualinvoke r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean isRedundant()>();
        r3[6] = 1;
        if $z0 == 0 goto label7;

        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean removed> = 1;
        $i6 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i6);
        r3[7] = 1;
        goto label7;

     label4:
        $z1 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached>;
        r3[8] = 1;
        if $z1 != 0 goto label7;

        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        r3[9] = 1;
        if $r7 != null goto label5;

        $r8 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        virtualinvoke $r8.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Tag addTagAt(int,boolean)>(i0, 0);
        r3[10] = 1;
        goto label6;

     label5:
        virtualinvoke r0.<net.htmlparser.jericho.SubCache: void addTagAt(int,net.htmlparser.jericho.Tag)>(i0, null);
        r3[11] = 1;

     label6:
        $r10 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i7 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int getIndexOfPos(int)>(i0);
        i2 = $i7;
        r11 = $r10[$i7];
        $i8 = r11.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[12] = 1;
        if $i8 != i0 goto label7;

        r11.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 1;
        $z2 = virtualinvoke r11.<net.htmlparser.jericho.SubCache$CacheEntry: boolean isRedundant()>();
        r3[13] = 1;
        if $z2 == 0 goto label7;

        r11.<net.htmlparser.jericho.SubCache$CacheEntry: boolean removed> = 1;
        $i9 = r11.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i9);
        r3[14] = 1;

     label7:
        $r12 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        i2 = i2 + -1;
        r13 = $r12[i2];
        $i10 = r13.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[15] = 1;
        if $i10 > i1 goto label8;

        r3[16] = 1;
        goto label11;

     label8:
        $r14 = r13.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r3[17] = 1;
        if $r14 == null goto label10;

        $r15 = r13.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        $z3 = virtualinvoke $r15.<net.htmlparser.jericho.Tag: boolean includeInSearch()>();
        r3[18] = 1;
        if $z3 == 0 goto label9;

        $r16 = new net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError;
        $r17 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        specialinvoke $r16.<net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError: void <init>(net.htmlparser.jericho.TagType,net.htmlparser.jericho.Tag,net.htmlparser.jericho.SubCache)>($r17, r1, r0);
        r3[19] = 1;
        throw $r16;

     label9:
        r13.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 1;
        r13.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 1;
        r3[20] = 1;
        goto label7;

     label10:
        r13.<net.htmlparser.jericho.SubCache$CacheEntry: boolean removed> = 1;
        $i11 = r13.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i11);
        r3[21] = 1;
        goto label7;

     label11:
        $i12 = r13.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[22] = 1;
        if $i12 == i1 goto label12;

        $r18 = new net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError;
        $r19 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        specialinvoke $r18.<net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError: void <init>(net.htmlparser.jericho.TagType,net.htmlparser.jericho.Tag,net.htmlparser.jericho.SubCache)>($r19, r1, r0);
        r3[23] = 1;
        throw $r18;

     label12:
        r13.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 1;
        specialinvoke r0.<net.htmlparser.jericho.SubCache: void compact(int)>(i3);
        r3[24] = 1;
        return;
    }

    private void addNextTag(int, net.htmlparser.jericho.Tag)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        net.htmlparser.jericho.Tag r1, $r13, $r14;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.SubCache$CacheEntry r4, $r5, $r7;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r6, $r11, $r12;
        boolean $z0, $z1, $z2, $z3;
        net.htmlparser.jericho.TagType $r8, $r16, $r18;
        net.htmlparser.jericho.Cache $r9;
        net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError $r15;
        net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError $r17;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        r1 := @parameter1: net.htmlparser.jericho.Tag;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];
        r3[0] = 1;
        if r1 != null goto label1;

        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $i4 = $r5.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[1] = 1;
        goto label2;

     label1:
        $i4 = r1.<net.htmlparser.jericho.Tag: int begin>;
        r3[2] = 1;

     label2:
        i1 = $i4;
        r3[3] = 1;
        if i1 != i0 goto label3;

        r3[4] = 1;
        return;

     label3:
        i2 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int getIndexOfPos(int)>(i0);
        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r4 = $r6[i2];
        i3 = 2147483647;
        $i5 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[5] = 1;
        if $i5 != i0 goto label4;

        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 1;
        $z0 = virtualinvoke r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean isRedundant()>();
        r3[6] = 1;
        if $z0 == 0 goto label7;

        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean removed> = 1;
        $i6 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i6);
        r3[7] = 1;
        goto label7;

     label4:
        $r7 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getPrevious(net.htmlparser.jericho.SubCache$CacheEntry)>(r4);
        $z1 = $r7.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached>;
        r3[8] = 1;
        if $z1 != 0 goto label7;

        $r8 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        r3[9] = 1;
        if $r8 != null goto label5;

        $r9 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.Cache cache>;
        virtualinvoke $r9.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Tag addTagAt(int,boolean)>(i0, 0);
        r3[10] = 1;
        goto label6;

     label5:
        virtualinvoke r0.<net.htmlparser.jericho.SubCache: void addTagAt(int,net.htmlparser.jericho.Tag)>(i0, null);
        r3[11] = 1;

     label6:
        $r11 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i7 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int getIndexOfPos(int)>(i0);
        i2 = $i7;
        r4 = $r11[$i7];
        $i8 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[12] = 1;
        if $i8 != i0 goto label7;

        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 1;
        $z2 = virtualinvoke r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean isRedundant()>();
        r3[13] = 1;
        if $z2 == 0 goto label7;

        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean removed> = 1;
        $i9 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i9);
        r3[14] = 1;

     label7:
        $i10 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[15] = 1;
        if $i10 >= i1 goto label13;

     label8:
        $r12 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        i2 = i2 + 1;
        r4 = $r12[i2];
        $i11 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[16] = 1;
        if $i11 < i1 goto label9;

        r3[17] = 1;
        goto label12;

     label9:
        $r13 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        r3[18] = 1;
        if $r13 == null goto label11;

        $r14 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: net.htmlparser.jericho.Tag tag>;
        $z3 = virtualinvoke $r14.<net.htmlparser.jericho.Tag: boolean includeInSearch()>();
        r3[19] = 1;
        if $z3 == 0 goto label10;

        $r15 = new net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError;
        $r16 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        specialinvoke $r15.<net.htmlparser.jericho.SubCache$SourceCacheEntryMissingInternalError: void <init>(net.htmlparser.jericho.TagType,net.htmlparser.jericho.Tag,net.htmlparser.jericho.SubCache)>($r16, r1, r0);
        r3[20] = 1;
        throw $r15;

     label10:
        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 1;
        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 1;
        r3[21] = 1;
        goto label8;

     label11:
        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean removed> = 1;
        $i12 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i12);
        r3[22] = 1;
        goto label8;

     label12:
        $i13 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r3[23] = 1;
        if $i13 == i1 goto label13;

        $r17 = new net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError;
        $r18 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.TagType tagType>;
        specialinvoke $r17.<net.htmlparser.jericho.SubCache$FoundCacheEntryMissingInternalError: void <init>(net.htmlparser.jericho.TagType,net.htmlparser.jericho.Tag,net.htmlparser.jericho.SubCache)>($r18, r1, r0);
        r3[24] = 1;
        throw $r17;

     label13:
        r4.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 1;
        specialinvoke r0.<net.htmlparser.jericho.SubCache: void compact(int)>(i3);
        r3[25] = 1;
        return;
    }

    private void compact(int)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, i2, $i3;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry r3;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r4, $r5;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        i1 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int lastIndex()>();
        i2 = 1;
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i0 >= i1 goto label4;

        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        i0 = i0 + 1;
        r3 = $r4[i0];
        $z0 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: boolean removed>;
        r2[2] = 1;
        if $z0 == 0 goto label2;

        i2 = i2 + 1;
        r2[3] = 1;
        goto label3;

     label2:
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i3 = i0 - i2;
        r3.<net.htmlparser.jericho.SubCache$CacheEntry: int index> = $i3;
        $r5[$i3] = r3;
        r2[4] = 1;

     label3:
        r2[5] = 1;
        goto label1;

     label4:
        r2[6] = 1;
        return;
    }

    private void add(net.htmlparser.jericho.SubCache$CacheEntry, net.htmlparser.jericho.SubCache$CacheEntry, net.htmlparser.jericho.SubCache$CacheEntry)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.SubCache$CacheEntry r1, r2, r3;
        boolean[][] $r4;
        boolean[] r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.SubCache$CacheEntry;
        r2 := @parameter1: net.htmlparser.jericho.SubCache$CacheEntry;
        r3 := @parameter2: net.htmlparser.jericho.SubCache$CacheEntry;
        $r4 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r4 != null goto label0;

        $r4 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r5 = $r4[19];
        $z0 = virtualinvoke r2.<net.htmlparser.jericho.SubCache$CacheEntry: boolean isRedundant()>();
        r5[0] = 1;
        if $z0 != 0 goto label1;

        specialinvoke r0.<net.htmlparser.jericho.SubCache: void insert(net.htmlparser.jericho.SubCache$CacheEntry)>(r2);
        r5[1] = 1;

     label1:
        $z1 = r2.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached>;
        r5[2] = 1;
        if $z1 == 0 goto label2;

        r1.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached> = 1;
        $z2 = virtualinvoke r1.<net.htmlparser.jericho.SubCache$CacheEntry: boolean isRedundant()>();
        r5[3] = 1;
        if $z2 == 0 goto label2;

        specialinvoke r0.<net.htmlparser.jericho.SubCache: void remove(net.htmlparser.jericho.SubCache$CacheEntry)>(r1);
        r5[4] = 1;

     label2:
        $z3 = r2.<net.htmlparser.jericho.SubCache$CacheEntry: boolean nextCached>;
        r5[5] = 1;
        if $z3 == 0 goto label3;

        r3.<net.htmlparser.jericho.SubCache$CacheEntry: boolean previousCached> = 1;
        $z4 = virtualinvoke r3.<net.htmlparser.jericho.SubCache$CacheEntry: boolean isRedundant()>();
        r5[6] = 1;
        if $z4 == 0 goto label3;

        specialinvoke r0.<net.htmlparser.jericho.SubCache: void remove(net.htmlparser.jericho.SubCache$CacheEntry)>(r3);
        r5[7] = 1;

     label3:
        r5[8] = 1;
        return;
    }

    private int getIndexOfPos(int)
    {
        net.htmlparser.jericho.SubCache r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry r3, r4, r6;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r5;

        r0 := @this: net.htmlparser.jericho.SubCache;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        i1 = 0;
        i2 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int lastIndex()>();
        i3 = i2 >> 1;
        r2[0] = 1;

     label1:
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r3 = $r5[i3];
        $i4 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r2[1] = 1;
        if i0 <= $i4 goto label3;

        r4 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getNext(net.htmlparser.jericho.SubCache$CacheEntry)>(r3);
        $i5 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r2[2] = 1;
        if i0 > $i5 goto label2;

        $i6 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        r2[3] = 1;
        return $i6;

     label2:
        i1 = r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        r2[4] = 1;
        goto label7;

     label3:
        $i7 = r3.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r2[5] = 1;
        if i0 >= $i7 goto label6;

        r6 = specialinvoke r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry getPrevious(net.htmlparser.jericho.SubCache$CacheEntry)>(r3);
        $i8 = r6.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r2[6] = 1;
        if i0 != $i8 goto label4;

        $i9 = r6.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        r2[7] = 1;
        return $i9;

     label4:
        $i10 = r6.<net.htmlparser.jericho.SubCache$CacheEntry: int pos>;
        r2[8] = 1;
        if i0 <= $i10 goto label5;

        r2[9] = 1;
        return i3;

     label5:
        i2 = r6.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        r2[10] = 1;
        goto label7;

     label6:
        r2[11] = 1;
        return i3;

     label7:
        $i11 = i1 + i2;
        i3 = $i11 >> 1;
        r2[12] = 1;
        goto label1;
    }

    private net.htmlparser.jericho.SubCache$CacheEntry getNext(net.htmlparser.jericho.SubCache$CacheEntry)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.SubCache$CacheEntry r1, $r5;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r4;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.SubCache$CacheEntry;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[21];
        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i0 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $i1 = $i0 + 1;
        $r5 = $r4[$i1];
        r3[0] = 1;
        return $r5;
    }

    private net.htmlparser.jericho.SubCache$CacheEntry getPrevious(net.htmlparser.jericho.SubCache$CacheEntry)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.SubCache$CacheEntry r1, $r5;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r4;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.SubCache$CacheEntry;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[22];
        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i0 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $i1 = $i0 - 1;
        $r5 = $r4[$i1];
        r3[0] = 1;
        return $r5;
    }

    private int lastIndex()
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry $r3;
        int $i0;

        r0 := @this: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        $r3 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry eof>;
        $i0 = $r3.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        r2[0] = 1;
        return $i0;
    }

    private void insert(net.htmlparser.jericho.SubCache$CacheEntry)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.SubCache$CacheEntry r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i2, $i3, $i4;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r5, $r6, $r7, $r8;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.SubCache$CacheEntry;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[24];
        i0 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i2 = lengthof $r5;
        $i3 = virtualinvoke r0.<net.htmlparser.jericho.SubCache: int size()>();
        r3[0] = 1;
        if $i2 != $i3 goto label1;

        specialinvoke r0.<net.htmlparser.jericho.SubCache: void doubleCapacity()>();
        r3[1] = 1;

     label1:
        i1 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int lastIndex()>();
        r3[2] = 1;

     label2:
        r3[3] = 1;
        if i1 < i0 goto label3;

        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r4 = $r6[i1];
        $r7 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i4 = i1 + 1;
        r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index> = $i4;
        $r7[$i4] = r4;
        i1 = i1 + -1;
        r3[4] = 1;
        goto label2;

     label3:
        $r8 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r8[i0] = r1;
        r3[5] = 1;
        return;
    }

    private void remove(net.htmlparser.jericho.SubCache$CacheEntry)
    {
        net.htmlparser.jericho.SubCache r0;
        net.htmlparser.jericho.SubCache$CacheEntry r1, r4;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i2;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r5, $r6;

        r0 := @this: net.htmlparser.jericho.SubCache;
        r1 := @parameter0: net.htmlparser.jericho.SubCache$CacheEntry;
        $r2 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r3 = $r2[25];
        i0 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int lastIndex()>();
        i1 = r1.<net.htmlparser.jericho.SubCache$CacheEntry: int index>;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i1 >= i0 goto label2;

        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i2 = i1 + 1;
        r4 = $r5[$i2];
        $r6 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r4.<net.htmlparser.jericho.SubCache$CacheEntry: int index> = i1;
        $r6[i1] = r4;
        i1 = i1 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        r3[3] = 1;
        return;
    }

    private void doubleCapacity()
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry[] r3, $r4, $r5;
        int i0, $i1, $i2;
        net.htmlparser.jericho.SubCache$CacheEntry $r6;

        r0 := @this: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[26];
        $r4 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $i1 = lengthof $r4;
        $i2 = $i1 << 1;
        r3 = newarray (net.htmlparser.jericho.SubCache$CacheEntry)[$i2];
        i0 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int lastIndex()>();
        r2[0] = 1;

     label1:
        r2[1] = 1;
        if i0 < 0 goto label2;

        $r5 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        $r6 = $r5[i0];
        r3[i0] = $r6;
        i0 = i0 + -1;
        r2[2] = 1;
        goto label1;

     label2:
        r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array> = r3;
        r2[3] = 1;
        return;
    }

    static int access$000(net.htmlparser.jericho.SubCache)
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @parameter0: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[27];
        $i0 = specialinvoke r0.<net.htmlparser.jericho.SubCache: int lastIndex()>();
        r2[0] = 1;
        return $i0;
    }

    static net.htmlparser.jericho.SubCache$CacheEntry[] access$100(net.htmlparser.jericho.SubCache)
    {
        net.htmlparser.jericho.SubCache r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.SubCache$CacheEntry[] $r3;

        r0 := @parameter0: net.htmlparser.jericho.SubCache;
        $r1 = <net.htmlparser.jericho.SubCache: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $r3 = r0.<net.htmlparser.jericho.SubCache: net.htmlparser.jericho.SubCache$CacheEntry[] array>;
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.SubCache: boolean[][] $VRi()>();
        r1 = $r0[29];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        $r0 = newmultiarray (boolean)[30][];
        <net.htmlparser.jericho.SubCache: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[13];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[7];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[10];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[12];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[4];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[11];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[11];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[25];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[26];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[7];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[9];
        $r0[19] = $r20;
        $r21 = newarray (boolean)[13];
        $r0[20] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[21] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[22] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[23] = $r24;
        $r25 = newarray (boolean)[6];
        $r0[24] = $r25;
        $r26 = newarray (boolean)[4];
        $r0[25] = $r26;
        $r27 = newarray (boolean)[4];
        $r0[26] = $r27;
        $r28 = newarray (boolean)[1];
        $r0[27] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[28] = $r29;
        $r30 = newarray (boolean)[1];
        $r0[29] = $r30;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/SubCache", 2140558535918318227L);
        return $r0;
    }
}
public abstract class net.htmlparser.jericho.Tag extends net.htmlparser.jericho.Segment
{
    java.lang.String name;
    private java.lang.Object userData;
    net.htmlparser.jericho.Element element;
    private net.htmlparser.jericho.Tag previousTag;
    private net.htmlparser.jericho.Tag nextTag;
    static final net.htmlparser.jericho.Tag NOT_CACHED;
    private static final boolean INCLUDE_UNREGISTERED_IN_SEARCH;
    private static final boolean[][] $VRc;

    void <init>(net.htmlparser.jericho.Source, int, int, java.lang.String)
    {
        net.htmlparser.jericho.Tag r0, $r6, $r7;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        java.lang.String r2, $r8, $r9;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Element $r5;

        r0 := @this: net.htmlparser.jericho.Tag;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r2 := @parameter3: java.lang.String;
        $r3 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r1, i0, i1);
        r0.<net.htmlparser.jericho.Tag: java.lang.String name> = null;
        r0.<net.htmlparser.jericho.Tag: java.lang.Object userData> = null;
        $r5 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Element element> = $r5;
        $r6 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag previousTag> = $r6;
        $r7 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag> = $r7;
        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        $r9 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.lang.String getConstantElementName(java.lang.String)>($r8);
        r0.<net.htmlparser.jericho.Tag: java.lang.String name> = $r9;
        r4[0] = 1;
        return;
    }

    void <init>()
    {
        net.htmlparser.jericho.Tag r0, $r4, $r5;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Element $r3;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>()>();
        r0.<net.htmlparser.jericho.Tag: java.lang.String name> = null;
        r0.<net.htmlparser.jericho.Tag: java.lang.Object userData> = null;
        $r3 = <net.htmlparser.jericho.Element: net.htmlparser.jericho.Element NOT_CACHED>;
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Element element> = $r3;
        $r4 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag previousTag> = $r4;
        $r5 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag> = $r5;
        r2[0] = 1;
        return;
    }

    public abstract net.htmlparser.jericho.Element getElement();

    public final java.lang.String getName()
    {
        net.htmlparser.jericho.Tag r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.Tag: java.lang.String name>;
        r2[0] = 1;
        return $r3;
    }

    public net.htmlparser.jericho.Segment getNameSegment()
    {
        net.htmlparser.jericho.Tag r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1, $i2, $i3, $i4;
        net.htmlparser.jericho.TagType $r3;
        java.lang.String $r4, $r7;
        net.htmlparser.jericho.Segment $r5;
        net.htmlparser.jericho.Source $r6;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $i1 = r0.<net.htmlparser.jericho.Tag: int begin>;
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r4 = $r3.<net.htmlparser.jericho.TagType: java.lang.String startDelimiterPrefix>;
        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();
        i0 = $i1 + $i2;
        $r5 = new net.htmlparser.jericho.Segment;
        $r6 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $r7 = r0.<net.htmlparser.jericho.Tag: java.lang.String name>;
        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();
        $i4 = i0 + $i3;
        specialinvoke $r5.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r6, i0, $i4);
        r2[0] = 1;
        return $r5;
    }

    public abstract net.htmlparser.jericho.TagType getTagType();

    public java.lang.Object getUserData()
    {
        net.htmlparser.jericho.Tag r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Object $r3;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.Tag: java.lang.Object userData>;
        r2[0] = 1;
        return $r3;
    }

    public void setUserData(java.lang.Object)
    {
        net.htmlparser.jericho.Tag r0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.Tag;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        r0.<net.htmlparser.jericho.Tag: java.lang.Object userData> = r1;
        r3[0] = 1;
        return;
    }

    public net.htmlparser.jericho.Tag getNextTag()
    {
        net.htmlparser.jericho.Tag r0, r3, $r4, $r5, $r8;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r6, $r7;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r4 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag>;
        $r5 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r2[0] = 1;
        if $r4 != $r5 goto label2;

        $r6 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Tag: int begin>;
        $i1 = $i0 + 1;
        r3 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int)>($r6, $i1);
        $r7 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $z0 = virtualinvoke $r7.<net.htmlparser.jericho.Source: boolean wasFullSequentialParseCalled()>();
        r2[1] = 1;
        if $z0 == 0 goto label1;

        r2[2] = 1;
        return r3;

     label1:
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag> = r3;
        r2[3] = 1;

     label2:
        $r8 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag>;
        r2[4] = 1;
        return $r8;
    }

    public net.htmlparser.jericho.Tag getPreviousTag()
    {
        net.htmlparser.jericho.Tag r0, $r3, $r4, $r6, $r7;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r5;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag previousTag>;
        $r4 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r2[0] = 1;
        if $r3 != $r4 goto label1;

        $r5 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Tag: int begin>;
        $i1 = $i0 - 1;
        $r6 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source,int)>($r5, $i1);
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag previousTag> = $r6;
        r2[1] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag previousTag>;
        r2[2] = 1;
        return $r7;
    }

    public abstract boolean isUnregistered();

    public abstract java.lang.String tidy();

    public static final boolean isXMLName(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1, $i3;
        char $c2, $c4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.CharSequence;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        r2[0] = 1;
        if r0 == null goto label1;

        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        r2[1] = 1;
        if $i1 == 0 goto label1;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(0);
        $z0 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLNameStartChar(char)>($c2);
        r2[2] = 1;
        if $z0 != 0 goto label2;

     label1:
        r2[3] = 1;
        return 0;

     label2:
        i0 = 1;
        r2[4] = 1;

     label3:
        $i3 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();
        r2[5] = 1;
        if i0 >= $i3 goto label5;

        $c4 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);
        $z1 = staticinvoke <net.htmlparser.jericho.Tag: boolean isXMLNameChar(char)>($c4);
        r2[6] = 1;
        if $z1 != 0 goto label4;

        r2[7] = 1;
        return 0;

     label4:
        i0 = i0 + 1;
        r2[8] = 1;
        goto label3;

     label5:
        r2[9] = 1;
        return 1;
    }

    public static final boolean isXMLNameStartChar(char)
    {
        char c0;
        boolean[][] $r0;
        boolean[] r1;
        boolean $z0, $z1;

        c0 := @parameter0: char;
        $r0 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r1 = $r0[13];
        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c0);
        r1[0] = 1;
        if $z0 != 0 goto label1;

        r1[1] = 1;
        if c0 == 95 goto label1;

        r1[2] = 1;
        if c0 != 58 goto label2;

     label1:
        $z1 = 1;
        r1[3] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r1[4] = 1;

     label3:
        r1[5] = 1;
        return $z1;
    }

    public static final boolean isXMLNameChar(char)
    {
        char c0;
        boolean[][] $r0;
        boolean[] r1;
        boolean $z0, $z1;

        c0 := @parameter0: char;
        $r0 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r1 = $r0[14];
        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c0);
        r1[0] = 1;
        if $z0 != 0 goto label1;

        r1[1] = 1;
        if c0 == 46 goto label1;

        r1[2] = 1;
        if c0 == 45 goto label1;

        r1[3] = 1;
        if c0 == 95 goto label1;

        r1[4] = 1;
        if c0 != 58 goto label2;

     label1:
        $z1 = 1;
        r1[5] = 1;
        goto label3;

     label2:
        $z1 = 0;
        r1[6] = 1;

     label3:
        r1[7] = 1;
        return $z1;
    }

    net.htmlparser.jericho.StartTag getNextStartTag()
    {
        net.htmlparser.jericho.Tag r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        net.htmlparser.jericho.StartTag $r4;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        r3 = r0;
        r2[0] = 1;

     label1:
        r3 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag()>();
        r2[1] = 1;
        if r3 != null goto label2;

        r2[2] = 1;
        return null;

     label2:
        $z0 = r3 instanceof net.htmlparser.jericho.StartTag;
        r2[3] = 1;
        if $z0 == 0 goto label1;

        $r4 = (net.htmlparser.jericho.StartTag) r3;
        r2[4] = 1;
        return $r4;
    }

    net.htmlparser.jericho.StartTag getPreviousStartTag()
    {
        net.htmlparser.jericho.Tag r0, r3;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        net.htmlparser.jericho.StartTag $r4;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        r3 = r0;
        r2[0] = 1;

     label1:
        r3 = virtualinvoke r3.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag()>();
        r2[1] = 1;
        if r3 != null goto label2;

        r2[2] = 1;
        return null;

     label2:
        $z0 = r3 instanceof net.htmlparser.jericho.StartTag;
        r2[3] = 1;
        if $z0 == 0 goto label1;

        $r4 = (net.htmlparser.jericho.StartTag) r3;
        r2[4] = 1;
        return $r4;
    }

    net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Tag r0, r4, $r5, $r9, $r10, $r11, $r13;
        net.htmlparser.jericho.TagType r1, $r14;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTagType $r6;
        net.htmlparser.jericho.EndTagType $r7;
        net.htmlparser.jericho.Source $r8, $r12;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.htmlparser.jericho.Tag;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[17];
        r3[0] = 1;
        if r1 != null goto label1;

        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag()>();
        r3[1] = 1;
        return $r5;

     label1:
        $r6 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType UNREGISTERED>;
        r3[2] = 1;
        if r1 == $r6 goto label2;

        $r7 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType UNREGISTERED>;
        r3[3] = 1;
        if r1 != $r7 goto label3;

     label2:
        $r8 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Tag: int begin>;
        $i1 = $i0 + 1;
        $r9 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>($r8, $i1, r1);
        r3[4] = 1;
        return $r9;

     label3:
        r4 = r0;
        r3[5] = 1;

     label4:
        $r10 = r4.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag>;
        $r11 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r3[6] = 1;
        if $r10 != $r11 goto label5;

        $r12 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $i2 = r4.<net.htmlparser.jericho.Tag: int begin>;
        $i3 = $i2 + 1;
        $r13 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>($r12, $i3, r1);
        r3[7] = 1;
        return $r13;

     label5:
        r4 = r4.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag>;
        r3[8] = 1;
        if r4 != null goto label6;

        r3[9] = 1;
        return null;

     label6:
        $r14 = virtualinvoke r4.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        r3[10] = 1;
        if $r14 != r1 goto label4;

        r3[11] = 1;
        return r4;
    }

    net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Tag r0, r4, $r5, $r9, $r10, $r11, $r13;
        net.htmlparser.jericho.TagType r1, $r14;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.StartTagType $r6;
        net.htmlparser.jericho.EndTagType $r7;
        net.htmlparser.jericho.Source $r8, $r12;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.htmlparser.jericho.Tag;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        r3[0] = 1;
        if r1 != null goto label1;

        $r5 = virtualinvoke r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag()>();
        r3[1] = 1;
        return $r5;

     label1:
        $r6 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType UNREGISTERED>;
        r3[2] = 1;
        if r1 == $r6 goto label2;

        $r7 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType UNREGISTERED>;
        r3[3] = 1;
        if r1 != $r7 goto label3;

     label2:
        $r8 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $i0 = r0.<net.htmlparser.jericho.Tag: int begin>;
        $i1 = $i0 - 1;
        $r9 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>($r8, $i1, r1);
        r3[4] = 1;
        return $r9;

     label3:
        r4 = r0;
        r3[5] = 1;

     label4:
        $r10 = r4.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag previousTag>;
        $r11 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r3[6] = 1;
        if $r10 != $r11 goto label5;

        $r12 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $i2 = r4.<net.htmlparser.jericho.Tag: int begin>;
        $i3 = $i2 - 1;
        $r13 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType)>($r12, $i3, r1);
        r3[7] = 1;
        return $r13;

     label5:
        r4 = r4.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag previousTag>;
        r3[8] = 1;
        if r4 != null goto label6;

        r3[9] = 1;
        return null;

     label6:
        $r14 = virtualinvoke r4.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        r3[10] = 1;
        if $r14 != r1 goto label4;

        r3[11] = 1;
        return r4;
    }

    final boolean includeInSearch()
    {
        net.htmlparser.jericho.Tag r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[19];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.Tag: boolean isUnregistered()>();
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $z1 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z1;
    }

    static final net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        net.htmlparser.jericho.Cache $r3;
        net.htmlparser.jericho.Tag $r4;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $z0 = r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Tag getPreviousTag(int)>(i0);
        r2[1] = 1;
        goto label2;

     label1:
        $r4 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTagUncached(net.htmlparser.jericho.Source,int,int)>(r0, i0, -1);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r4;
    }

    static final net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        net.htmlparser.jericho.Cache $r3;
        net.htmlparser.jericho.Tag $r4;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[21];
        $z0 = r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Tag getNextTag(int)>(i0);
        r2[1] = 1;
        goto label2;

     label1:
        $r4 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTagUncached(net.htmlparser.jericho.Source,int,int)>(r0, i0, -1);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r4;
    }

    static final net.htmlparser.jericho.Tag getPreviousTagUncached(net.htmlparser.jericho.Source, int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2, i3;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.ParseText r3;
        net.htmlparser.jericho.Tag r4;
        null_type $n0;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r6, r7;
        java.lang.AssertionError $r8;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];

     label1:
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i2 = i0;
        r2[0] = 1;

     label2:
        i3 = interfaceinvoke r3.<net.htmlparser.jericho.ParseText: int lastIndexOf(char,int,int)>(60, i2, i1);
        r2[1] = 1;
        if i3 != -1 goto label4;

        $n0 = null;
        r2[2] = 1;

     label3:
        return $n0;

     label4:
        r4 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean)>(r0, i3, 0);
        r2[3] = 1;
        if r4 == null goto label6;

        $z0 = virtualinvoke r4.<net.htmlparser.jericho.Tag: boolean includeInSearch()>();
        r2[4] = 1;
        if $z0 == 0 goto label6;

        r2[5] = 1;

     label5:
        return r4;

     label6:
        i2 = i3 + -1;
        r2[6] = 1;
        if i2 >= 0 goto label2;

        r2[7] = 1;

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;
        r7 = $r6;
        $r8 = new java.lang.AssertionError;
        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("Unexpected internal exception");
        r2[8] = 1;
        throw $r8;

     label9:
        r2[9] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label1 to label3 with label8;
        catch java.lang.IndexOutOfBoundsException from label4 to label5 with label8;
        catch java.lang.IndexOutOfBoundsException from label6 to label7 with label8;
    }

    static final net.htmlparser.jericho.Tag getNextTagUncached(net.htmlparser.jericho.Source, int, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2, i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.ParseText r3;
        net.htmlparser.jericho.Tag r4;
        null_type $n0;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r6, r7;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];

     label1:
        r3 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i2 = i0;
        r2[0] = 1;

     label2:
        i3 = interfaceinvoke r3.<net.htmlparser.jericho.ParseText: int indexOf(char,int,int)>(60, i2, i1);
        r2[1] = 1;
        if i3 != -1 goto label4;

        $n0 = null;
        r2[2] = 1;

     label3:
        return $n0;

     label4:
        r4 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean)>(r0, i3, 0);
        r2[3] = 1;
        if r4 == null goto label6;

        $z0 = virtualinvoke r4.<net.htmlparser.jericho.Tag: boolean includeInSearch()>();
        r2[4] = 1;
        if $z0 == 0 goto label6;

        r2[5] = 1;

     label5:
        return r4;

     label6:
        i2 = i3 + 1;
        $i4 = r0.<net.htmlparser.jericho.Source: int end>;
        r2[6] = 1;
        if i2 < $i4 goto label2;

        r2[7] = 1;

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;
        r7 = $r6;
        r2[8] = 1;

     label9:
        r2[9] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label1 to label3 with label8;
        catch java.lang.IndexOutOfBoundsException from label4 to label5 with label8;
        catch java.lang.IndexOutOfBoundsException from label6 to label7 with label8;
    }

    static final net.htmlparser.jericho.Tag getPreviousTag(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        net.htmlparser.jericho.TagType r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        net.htmlparser.jericho.Cache $r4;
        net.htmlparser.jericho.Tag $r5, $r6;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[24];
        $z0 = r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache>;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Tag getPreviousTag(int,net.htmlparser.jericho.TagType)>(i0, r1);
        r3[1] = 1;
        return $r5;

     label1:
        $r6 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTagUncached(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType,int)>(r0, i0, r1, -1);
        r3[2] = 1;
        return $r6;
    }

    static final net.htmlparser.jericho.Tag getNextTag(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        net.htmlparser.jericho.TagType r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;
        net.htmlparser.jericho.Cache $r4;
        net.htmlparser.jericho.Tag $r5, $r6;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[25];
        $z0 = r0.<net.htmlparser.jericho.Source: boolean useSpecialTypesCache>;
        r3[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        $r5 = virtualinvoke $r4.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Tag getNextTag(int,net.htmlparser.jericho.TagType)>(i0, r1);
        r3[1] = 1;
        return $r5;

     label1:
        $r6 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTagUncached(net.htmlparser.jericho.Source,int,net.htmlparser.jericho.TagType,int)>(r0, i0, r1, -1);
        r3[2] = 1;
        return $r6;
    }

    static final net.htmlparser.jericho.Tag getPreviousTagUncached(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.TagType, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2, i3;
        net.htmlparser.jericho.TagType r1, $r8;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4;
        net.htmlparser.jericho.ParseText r5;
        net.htmlparser.jericho.Tag r6, $r7;
        null_type $n0;
        java.lang.IndexOutOfBoundsException $r10, r11;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.TagType;
        i1 := @parameter3: int;
        $r2 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[26];
        r3[0] = 1;
        if r1 != null goto label1;

        $r7 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getPreviousTagUncached(net.htmlparser.jericho.Source,int,int)>(r0, i0, i1);
        r3[1] = 1;
        return $r7;

     label1:
        r4 = virtualinvoke r1.<net.htmlparser.jericho.TagType: java.lang.String getStartDelimiter()>();

     label2:
        r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i2 = i0;
        r3[2] = 1;

     label3:
        i3 = interfaceinvoke r5.<net.htmlparser.jericho.ParseText: int lastIndexOf(java.lang.String,int,int)>(r4, i2, i1);
        r3[3] = 1;
        if i3 != -1 goto label5;

        $n0 = null;
        r3[4] = 1;

     label4:
        return $n0;

     label5:
        r6 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean)>(r0, i3, 0);
        r3[5] = 1;
        if r6 == null goto label7;

        $r8 = virtualinvoke r6.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        r3[6] = 1;
        if $r8 != r1 goto label7;

        r3[7] = 1;

     label6:
        return r6;

     label7:
        i2 = i3 + -1;
        r3[8] = 1;
        if i2 >= 0 goto label3;

        r3[9] = 1;

     label8:
        goto label10;

     label9:
        $r10 := @caughtexception;
        r11 = $r10;
        r3[10] = 1;
        throw r11;

     label10:
        r3[11] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label2 to label4 with label9;
        catch java.lang.IndexOutOfBoundsException from label5 to label6 with label9;
        catch java.lang.IndexOutOfBoundsException from label7 to label8 with label9;
    }

    static final net.htmlparser.jericho.Tag getNextTagUncached(net.htmlparser.jericho.Source, int, net.htmlparser.jericho.TagType, int)
    {
        net.htmlparser.jericho.Source r0;
        int i0, i1, i2, i3, $i4;
        net.htmlparser.jericho.TagType r1, $r8;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String r4;
        net.htmlparser.jericho.ParseText r5;
        net.htmlparser.jericho.Tag r6, $r7;
        null_type $n0;
        java.lang.IndexOutOfBoundsException $r10, r11;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r1 := @parameter2: net.htmlparser.jericho.TagType;
        i1 := @parameter3: int;
        $r2 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[27];
        r3[0] = 1;
        if r1 != null goto label1;

        $r7 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getNextTagUncached(net.htmlparser.jericho.Source,int,int)>(r0, i0, i1);
        r3[1] = 1;
        return $r7;

     label1:
        r4 = virtualinvoke r1.<net.htmlparser.jericho.TagType: java.lang.String getStartDelimiter()>();

     label2:
        r5 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i2 = i0;
        r3[2] = 1;

     label3:
        i3 = interfaceinvoke r5.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int,int)>(r4, i2, i1);
        r3[3] = 1;
        if i3 != -1 goto label5;

        $n0 = null;
        r3[4] = 1;

     label4:
        return $n0;

     label5:
        r6 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean)>(r0, i3, 0);
        r3[5] = 1;
        if r6 == null goto label7;

        $r8 = virtualinvoke r6.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        r3[6] = 1;
        if $r8 != r1 goto label7;

        r3[7] = 1;

     label6:
        return r6;

     label7:
        i2 = i3 + 1;
        $i4 = r0.<net.htmlparser.jericho.Source: int end>;
        r3[8] = 1;
        if i2 < $i4 goto label3;

        r3[9] = 1;

     label8:
        goto label10;

     label9:
        $r10 := @caughtexception;
        r11 = $r10;
        r3[10] = 1;

     label10:
        r3[11] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label2 to label4 with label9;
        catch java.lang.IndexOutOfBoundsException from label5 to label6 with label9;
        catch java.lang.IndexOutOfBoundsException from label7 to label8 with label9;
    }

    static final net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source, int, boolean)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean z0, $z1;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Cache $r3;
        net.htmlparser.jericho.Tag $r4;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[28];
        $z1 = r0.<net.htmlparser.jericho.Source: boolean useAllTypesCache>;
        r2[0] = 1;
        if $z1 == 0 goto label1;

        $r3 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        $r4 = virtualinvoke $r3.<net.htmlparser.jericho.Cache: net.htmlparser.jericho.Tag getTagAt(int,boolean)>(i0, z0);
        r2[1] = 1;
        goto label2;

     label1:
        $r4 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag getTagAtUncached(net.htmlparser.jericho.Source,int,boolean)>(r0, i0, z0);
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $r4;
    }

    static final net.htmlparser.jericho.Tag getTagAtUncached(net.htmlparser.jericho.Source, int, boolean)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Tag $r3;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[29];
        $r3 = staticinvoke <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean,boolean)>(r0, i0, z0, 0);
        r2[0] = 1;
        return $r3;
    }

    static final net.htmlparser.jericho.Tag[] parseAll(net.htmlparser.jericho.Source, boolean)
    {
        net.htmlparser.jericho.Source r0;
        boolean z0, $z2, $z3, $z4;
        boolean[][] $r1;
        boolean[] r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12;
        java.util.ArrayList r3, $r7;
        net.htmlparser.jericho.ParseText r4;
        net.htmlparser.jericho.Tag r5, r6, $r17, $r19;
        int[] $r8;
        net.htmlparser.jericho.TagType $r9;
        net.htmlparser.jericho.StartTagType $r10;
        net.htmlparser.jericho.Tag[] r11;
        net.htmlparser.jericho.StartTag[] r12;
        net.htmlparser.jericho.Cache $r13;
        java.util.List $r14, $r15;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        z0 := @parameter1: boolean;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[30];
        i0 = 0;
        i1 = 0;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r3 = $r7;
        $r8 = newarray (int)[1];
        r0.<net.htmlparser.jericho.Source: int[] fullSequentialParseData> = $r8;
        $i4 = r0.<net.htmlparser.jericho.Source: int end>;
        r2[0] = 1;
        if $i4 == 0 goto label7;

        r4 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        r5 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag parseAllgetNextTag(net.htmlparser.jericho.Source,net.htmlparser.jericho.ParseText,int,boolean)>(r0, r4, 0, z0);
        r2[1] = 1;

     label1:
        r2[2] = 1;
        if r5 == null goto label7;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        $z2 = virtualinvoke r5.<net.htmlparser.jericho.Tag: boolean isUnregistered()>();
        r2[3] = 1;
        if $z2 != 0 goto label2;

        i0 = i0 + 1;
        $z3 = r5 instanceof net.htmlparser.jericho.StartTag;
        r2[4] = 1;
        if $z3 == 0 goto label2;

        i1 = i1 + 1;
        r2[5] = 1;

     label2:
        $r9 = virtualinvoke r5.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r10 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON_COMMENT>;
        r2[6] = 1;
        if $r9 == $r10 goto label3;

        r2[7] = 1;
        if z0 == 0 goto label4;

        $z4 = virtualinvoke r5.<net.htmlparser.jericho.Tag: boolean isUnregistered()>();
        r2[8] = 1;
        if $z4 != 0 goto label4;

     label3:
        $i5 = r5.<net.htmlparser.jericho.Tag: int end>;
        r2[9] = 1;
        goto label5;

     label4:
        $i6 = r5.<net.htmlparser.jericho.Tag: int begin>;
        $i5 = $i6 + 1;
        r2[10] = 1;

     label5:
        i2 = $i5;
        $i7 = r0.<net.htmlparser.jericho.Source: int end>;
        r2[11] = 1;
        if i2 != $i7 goto label6;

        r2[12] = 1;
        goto label7;

     label6:
        r5 = staticinvoke <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag parseAllgetNextTag(net.htmlparser.jericho.Source,net.htmlparser.jericho.ParseText,int,boolean)>(r0, r4, i2, z0);
        r2[13] = 1;
        goto label1;

     label7:
        r11 = newarray (net.htmlparser.jericho.Tag)[i0];
        r12 = newarray (net.htmlparser.jericho.StartTag)[i1];
        $r13 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Cache cache>;
        virtualinvoke $r13.<net.htmlparser.jericho.Cache: void loadAllTags(java.util.List,net.htmlparser.jericho.Tag[],net.htmlparser.jericho.StartTag[])>(r3, r11, r12);
        r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag[] allTagsArray> = r11;
        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r11);
        r0.<net.htmlparser.jericho.Source: java.util.List allTags> = $r14;
        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r12);
        r0.<net.htmlparser.jericho.Source: java.util.List allStartTags> = $r15;
        $i8 = lengthof r11;
        i9 = $i8 - 1;
        i3 = 0;
        r2[14] = 1;

     label8:
        $i10 = lengthof r11;
        r2[15] = 1;
        if i3 >= $i10 goto label13;

        r6 = r11[i3];
        r2[16] = 1;
        if i3 <= 0 goto label9;

        $i11 = i3 - 1;
        $r17 = r11[$i11];
        r2[17] = 1;
        goto label10;

     label9:
        $r17 = null;
        r2[18] = 1;

     label10:
        r6.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag previousTag> = $r17;
        r2[19] = 1;
        if i3 >= i9 goto label11;

        $i12 = i3 + 1;
        $r19 = r11[$i12];
        r2[20] = 1;
        goto label12;

     label11:
        $r19 = null;
        r2[21] = 1;

     label12:
        r6.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag> = $r19;
        i3 = i3 + 1;
        r2[22] = 1;
        goto label8;

     label13:
        r2[23] = 1;
        return r11;
    }

    private static final net.htmlparser.jericho.Tag parseAllgetNextTag(net.htmlparser.jericho.Source, net.htmlparser.jericho.ParseText, int, boolean)
    {
        net.htmlparser.jericho.Source r0;
        net.htmlparser.jericho.ParseText r1;
        int i0, i1, i2, $i3, $i4, $i6, $i7;
        boolean z0, $z1;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag r4;
        net.htmlparser.jericho.TagType r5;
        null_type $n0;
        int[] $r6, $r10;
        net.htmlparser.jericho.StartTagType $r7, $r8, $r11;
        net.htmlparser.jericho.EndTagType $r9;
        byte $b5;
        java.lang.String $r12;
        net.htmlparser.jericho.StartTag $r13;
        java.lang.IndexOutOfBoundsException $r15, r16;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        r1 := @parameter1: net.htmlparser.jericho.ParseText;
        i0 := @parameter2: int;
        z0 := @parameter3: boolean;
        $r2 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r3 = $r2[31];

     label1:
        i1 = i0;
        r3[0] = 1;

     label2:
        i2 = interfaceinvoke r1.<net.htmlparser.jericho.ParseText: int indexOf(char,int)>(60, i1);
        r3[1] = 1;
        if i2 != -1 goto label4;

        $n0 = null;
        r3[2] = 1;

     label3:
        return $n0;

     label4:
        r4 = staticinvoke <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source,int,boolean,boolean)>(r0, i2, 0, z0);
        r3[3] = 1;
        if r4 == null goto label9;

        r3[4] = 1;
        if z0 != 0 goto label7;

        r5 = virtualinvoke r4.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $i3 = r4.<net.htmlparser.jericho.Tag: int end>;
        $r6 = r0.<net.htmlparser.jericho.Source: int[] fullSequentialParseData>;
        $i4 = $r6[0];
        r3[5] = 1;
        if $i3 <= $i4 goto label7;

        $r7 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType DOCTYPE_DECLARATION>;
        r3[6] = 1;
        if r5 == $r7 goto label7;

        $r8 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType UNREGISTERED>;
        r3[7] = 1;
        if r5 == $r8 goto label7;

        $r9 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType UNREGISTERED>;
        r3[8] = 1;
        if r5 == $r9 goto label7;

        $r10 = r0.<net.htmlparser.jericho.Source: int[] fullSequentialParseData>;
        $b5 = 0;
        $r11 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r3[9] = 1;
        if r5 != $r11 goto label5;

        $r12 = r4.<net.htmlparser.jericho.Tag: java.lang.String name>;
        r3[10] = 1;
        if $r12 != "script" goto label5;

        $r13 = (net.htmlparser.jericho.StartTag) r4;
        $z1 = virtualinvoke $r13.<net.htmlparser.jericho.StartTag: boolean isEmptyElementTag()>();
        r3[11] = 1;
        if $z1 != 0 goto label5;

        $i6 = 2147483647;
        r3[12] = 1;
        goto label6;

     label5:
        $i6 = r4.<net.htmlparser.jericho.Tag: int end>;
        r3[13] = 1;

     label6:
        $r10[$b5] = $i6;
        r3[14] = 1;

     label7:
        r3[15] = 1;

     label8:
        return r4;

     label9:
        i1 = i2 + 1;
        $i7 = r0.<net.htmlparser.jericho.Source: int end>;
        r3[16] = 1;
        if i1 < $i7 goto label2;

        r3[17] = 1;

     label10:
        goto label12;

     label11:
        $r15 := @caughtexception;
        r16 = $r15;
        r3[18] = 1;

     label12:
        r3[19] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label1 to label3 with label11;
        catch java.lang.IndexOutOfBoundsException from label4 to label8 with label11;
        catch java.lang.IndexOutOfBoundsException from label9 to label10 with label11;
    }

    void orphan()
    {
        net.htmlparser.jericho.Tag r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[32];
        $r3 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag> = $r3;
        r2[0] = 1;
        return;
    }

    boolean isOrphaned()
    {
        net.htmlparser.jericho.Tag r0, $r4, $r5;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Source $r3;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.Tag;
        $r1 = <net.htmlparser.jericho.Tag: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();

     label0:
        r2 = $r1[33];
        $r3 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Source source>;
        $z0 = virtualinvoke $r3.<net.htmlparser.jericho.Source: boolean wasFullSequentialParseCalled()>();
        r2[0] = 1;
        if $z0 == 0 goto label1;

        $r4 = r0.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag nextTag>;
        $r5 = <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED>;
        r2[1] = 1;
        if $r4 != $r5 goto label1;

        $z1 = 1;
        r2[2] = 1;
        goto label2;

     label1:
        $z1 = 0;
        r2[3] = 1;

     label2:
        r2[4] = 1;
        return $z1;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTag $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Tag: boolean[][] $VRi()>();
        r1 = $r0[34];
        $r2 = new net.htmlparser.jericho.StartTag;
        specialinvoke $r2.<net.htmlparser.jericho.StartTag: void <init>()>();
        <net.htmlparser.jericho.Tag: net.htmlparser.jericho.Tag NOT_CACHED> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;

        $r0 = newmultiarray (boolean)[35][];
        <net.htmlparser.jericho.Tag: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[3] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[4] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[6] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[7] = $r6;
        $r7 = newarray (boolean)[5];
        $r0[8] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[9] = $r8;
        $r9 = newarray (boolean)[10];
        $r0[12] = $r9;
        $r10 = newarray (boolean)[6];
        $r0[13] = $r10;
        $r11 = newarray (boolean)[8];
        $r0[14] = $r11;
        $r12 = newarray (boolean)[5];
        $r0[15] = $r12;
        $r13 = newarray (boolean)[5];
        $r0[16] = $r13;
        $r14 = newarray (boolean)[12];
        $r0[17] = $r14;
        $r15 = newarray (boolean)[12];
        $r0[18] = $r15;
        $r16 = newarray (boolean)[4];
        $r0[19] = $r16;
        $r17 = newarray (boolean)[4];
        $r0[20] = $r17;
        $r18 = newarray (boolean)[4];
        $r0[21] = $r18;
        $r19 = newarray (boolean)[10];
        $r0[22] = $r19;
        $r20 = newarray (boolean)[10];
        $r0[23] = $r20;
        $r21 = newarray (boolean)[3];
        $r0[24] = $r21;
        $r22 = newarray (boolean)[3];
        $r0[25] = $r22;
        $r23 = newarray (boolean)[12];
        $r0[26] = $r23;
        $r24 = newarray (boolean)[12];
        $r0[27] = $r24;
        $r25 = newarray (boolean)[4];
        $r0[28] = $r25;
        $r26 = newarray (boolean)[1];
        $r0[29] = $r26;
        $r27 = newarray (boolean)[24];
        $r0[30] = $r27;
        $r28 = newarray (boolean)[20];
        $r0[31] = $r28;
        $r29 = newarray (boolean)[1];
        $r0[32] = $r29;
        $r30 = newarray (boolean)[5];
        $r0[33] = $r30;
        $r31 = newarray (boolean)[1];
        $r0[34] = $r31;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Tag", 5793110025670289473L);
        return $r0;
    }
}
final class net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup extends java.lang.Object
{
    public static net.htmlparser.jericho.TagType[] array;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup;
        $r1 = <net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagType $r2, $r4;
        net.htmlparser.jericho.TagType[] $r3;

        $r0 = staticinvoke <net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup: boolean[][] $VRi()>();
        r1 = $r0[1];
        $r3 = newarray (net.htmlparser.jericho.TagType)[2];
        $r2 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType COMMENT>;
        $r3[0] = $r2;
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType CDATA_SECTION>;
        $r3[1] = $r4;
        <net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup: net.htmlparser.jericho.TagType[] array> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2;

        $r0 = newmultiarray (boolean)[2][];
        <net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/TagType$TagTypesIgnoringEnclosedMarkup", 9251206036831L);
        return $r0;
    }
}
public abstract class net.htmlparser.jericho.TagType extends java.lang.Object
{
    private final java.lang.String description;
    private final java.lang.String startDelimiter;
    private final java.lang.String closingDelimiter;
    private final boolean isServerTag;
    private final java.lang.String namePrefix;
    final java.lang.String startDelimiterPrefix;
    private static net.htmlparser.jericho.Logger logger;
    private static final boolean[][] $VRc;

    void <init>(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        net.htmlparser.jericho.TagType r0;
        java.lang.String r1, r2, r3, r4, $r7;
        boolean z0;
        boolean[][] $r5;
        boolean[] r6;
        int $i0;

        r0 := @this: net.htmlparser.jericho.TagType;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        z0 := @parameter3: boolean;
        r4 := @parameter4: java.lang.String;
        $r5 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r5 != null goto label0;

        $r5 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r6 = $r5[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.TagType: java.lang.String description> = r1;
        r0.<net.htmlparser.jericho.TagType: java.lang.String startDelimiter> = r2;
        r0.<net.htmlparser.jericho.TagType: java.lang.String closingDelimiter> = r3;
        r0.<net.htmlparser.jericho.TagType: boolean isServerTag> = z0;
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i0);
        r0.<net.htmlparser.jericho.TagType: java.lang.String namePrefix> = $r7;
        r0.<net.htmlparser.jericho.TagType: java.lang.String startDelimiterPrefix> = r4;
        r6[0] = 1;
        return;
    }

    public final void register()
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Logger $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = staticinvoke <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Logger getLogger()>();
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Register tag type: ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r3.<net.htmlparser.jericho.Logger: void debug(java.lang.String)>($r7);
        staticinvoke <net.htmlparser.jericho.TagTypeRegister: void add(net.htmlparser.jericho.TagType)>(r0);
        r2[0] = 1;
        return;
    }

    public final void deregister()
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Logger $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = staticinvoke <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Logger getLogger()>();
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deregister tag type ");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r3.<net.htmlparser.jericho.Logger: void debug(java.lang.String)>($r7);
        staticinvoke <net.htmlparser.jericho.TagTypeRegister: void remove(net.htmlparser.jericho.TagType)>(r0);
        r2[0] = 1;
        return;
    }

    public static final java.util.List getRegisteredTagTypes()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.List $r2;

        $r0 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r1 = $r0[3];
        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: java.util.List getList()>();
        r1[0] = 1;
        return $r2;
    }

    public final java.lang.String getDescription()
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = r0.<net.htmlparser.jericho.TagType: java.lang.String description>;
        r2[0] = 1;
        return $r3;
    }

    public final java.lang.String getStartDelimiter()
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.TagType: java.lang.String startDelimiter>;
        r2[0] = 1;
        return $r3;
    }

    public final java.lang.String getClosingDelimiter()
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.TagType: java.lang.String closingDelimiter>;
        r2[0] = 1;
        return $r3;
    }

    public final boolean isServerTag()
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $z0 = r0.<net.htmlparser.jericho.TagType: boolean isServerTag>;
        r2[0] = 1;
        return $z0;
    }

    protected final java.lang.String getNamePrefix()
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.TagType: java.lang.String namePrefix>;
        r2[0] = 1;
        return $r3;
    }

    protected boolean isValidPosition(net.htmlparser.jericho.Source, int, int[])
    {
        net.htmlparser.jericho.TagType r0, r6;
        net.htmlparser.jericho.Source r1;
        int i0, i1, $i2, $i3, $i4;
        int[] r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.TagType[] r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.htmlparser.jericho.StartTagType $r7, $r10, $r11, $r12;
        net.htmlparser.jericho.EndTagType $r8;
        net.htmlparser.jericho.ParseText $r9;

        r0 := @this: net.htmlparser.jericho.TagType;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        r2 := @parameter2: int[];
        $r3 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r4 = $r3[9];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r4[0] = 1;
        if $z0 == 0 goto label4;

        r4[1] = 1;
        if r2 == null goto label1;

        r4[2] = 1;
        return 1;

     label1:
        $r7 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON_COMMENT>;
        $z1 = virtualinvoke $r7.<net.htmlparser.jericho.StartTagType: boolean tagEncloses(net.htmlparser.jericho.Source,int)>(r1, i0);
        r4[3] = 1;
        if $z1 != 0 goto label2;

        $z2 = 1;
        r4[4] = 1;
        goto label3;

     label2:
        $z2 = 0;
        r4[5] = 1;

     label3:
        r4[6] = 1;
        return $z2;

     label4:
        r4[7] = 1;
        if r2 == null goto label10;

        $i2 = r2[0];
        r4[8] = 1;
        if $i2 != 2147483647 goto label7;

        $r8 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        r4[9] = 1;
        if r0 != $r8 goto label5;

        $r9 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $z3 = interfaceinvoke $r9.<net.htmlparser.jericho.ParseText: boolean containsAt(java.lang.String,int)>("</script", i0);
        r4[10] = 1;
        if $z3 == 0 goto label5;

        r2[0] = i0;
        r4[11] = 1;
        return 1;

     label5:
        $r10 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType COMMENT>;
        r4[12] = 1;
        if r0 != $r10 goto label6;

        r2[0] = i0;
        r4[13] = 1;
        return 1;

     label6:
        r4[14] = 1;
        return 0;

     label7:
        $i3 = r2[0];
        r4[15] = 1;
        if i0 < $i3 goto label8;

        $z4 = 1;
        r4[16] = 1;
        goto label9;

     label8:
        $z4 = 0;
        r4[17] = 1;

     label9:
        r4[18] = 1;
        return $z4;

     label10:
        r5 = staticinvoke <net.htmlparser.jericho.TagType: net.htmlparser.jericho.TagType[] getTagTypesIgnoringEnclosedMarkup()>();
        i1 = 0;
        r4[19] = 1;

     label11:
        $i4 = lengthof r5;
        r4[20] = 1;
        if i1 >= $i4 goto label14;

        r6 = r5[i1];
        $r11 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType COMMENT>;
        r4[21] = 1;
        if r0 != $r11 goto label12;

        $r12 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType COMMENT>;
        r4[22] = 1;
        if r6 != $r12 goto label12;

        r4[23] = 1;
        goto label13;

     label12:
        $z5 = virtualinvoke r6.<net.htmlparser.jericho.TagType: boolean tagEncloses(net.htmlparser.jericho.Source,int)>(r1, i0);
        r4[24] = 1;
        if $z5 == 0 goto label13;

        r4[25] = 1;
        return 0;

     label13:
        i1 = i1 + 1;
        r4[26] = 1;
        goto label11;

     label14:
        r4[27] = 1;
        return 1;
    }

    public static final net.htmlparser.jericho.TagType[] getTagTypesIgnoringEnclosedMarkup()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagType[] $r2;

        $r0 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r1 = $r0[10];
        $r2 = <net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup: net.htmlparser.jericho.TagType[] array>;
        r1[0] = 1;
        return $r2;
    }

    public static final void setTagTypesIgnoringEnclosedMarkup(net.htmlparser.jericho.TagType[])
    {
        net.htmlparser.jericho.TagType[] r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: net.htmlparser.jericho.TagType[];
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r2[0] = 1;
        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();
        r2[1] = 1;
        throw $r3;

     label1:
        <net.htmlparser.jericho.TagType$TagTypesIgnoringEnclosedMarkup: net.htmlparser.jericho.TagType[] array> = r0;
        r2[2] = 1;
        return;
    }

    protected abstract net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source, int);

    protected final boolean tagEncloses(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.TagType r0;
        net.htmlparser.jericho.Source r1;
        int i0, $i1, $i2;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Tag r4;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TagType;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        r3[0] = 1;
        if i0 != 0 goto label1;

        r3[1] = 1;
        return 0;

     label1:
        $i1 = i0 - 1;
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Tag getEnclosingTag(int,net.htmlparser.jericho.TagType)>($i1, r0);
        r3[2] = 1;
        if r4 == null goto label2;

        $i2 = virtualinvoke r4.<net.htmlparser.jericho.Tag: int getEnd()>();
        r3[3] = 1;
        if i0 == $i2 goto label2;

        $z0 = 1;
        r3[4] = 1;
        goto label3;

     label2:
        $z0 = 0;
        r3[5] = 1;

     label3:
        r3[6] = 1;
        return $z0;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.TagType: java.lang.String getDescription()>();
        r2[0] = 1;
        return $r3;
    }

    static final net.htmlparser.jericho.Tag getTagAt(net.htmlparser.jericho.Source, int, boolean, boolean)
    {
        net.htmlparser.jericho.Source r0;
        int i0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator r3, $r6;
        net.htmlparser.jericho.TagType r4;
        net.htmlparser.jericho.Tag r5;
        int[] $r7;
        java.lang.IndexOutOfBoundsException $r9, r10;
        net.htmlparser.jericho.Logger $r11, $r12;
        net.htmlparser.jericho.RowColumnVector $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19, $r20;
        java.lang.String $r18, $r21;

        r0 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        $r1 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        $r6 = new net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator;
        specialinvoke $r6.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: void <init>(net.htmlparser.jericho.Source,int)>(r0, i0);
        r3 = $r6;
        r2[0] = 1;

     label1:
        $z2 = virtualinvoke r3.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean hasNext()>();
        r2[1] = 1;
        if $z2 == 0 goto label8;

        r4 = virtualinvoke r3.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagType next()>();
        r2[2] = 1;
        if z0 == 0 goto label2;

        $z3 = virtualinvoke r4.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r2[3] = 1;
        if $z3 != 0 goto label2;

        r2[4] = 1;
        goto label1;

     label2:
        r2[5] = 1;
        if z1 != 0 goto label3;

        $r7 = r0.<net.htmlparser.jericho.Source: int[] fullSequentialParseData>;
        $z4 = virtualinvoke r4.<net.htmlparser.jericho.TagType: boolean isValidPosition(net.htmlparser.jericho.Source,int,int[])>(r0, i0, $r7);
        r2[6] = 1;
        if $z4 != 0 goto label3;

        r2[7] = 1;
        goto label1;

     label3:
        r5 = virtualinvoke r4.<net.htmlparser.jericho.TagType: net.htmlparser.jericho.Tag constructTagAt(net.htmlparser.jericho.Source,int)>(r0, i0);
        r2[8] = 1;
        if r5 == null goto label5;

        r2[9] = 1;

     label4:
        return r5;

     label5:
        r2[10] = 1;
        goto label7;

     label6:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $z5 = interfaceinvoke $r11.<net.htmlparser.jericho.Logger: boolean isInfoEnabled()>();
        r2[11] = 1;
        if $z5 == 0 goto label7;

        $r12 = r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger logger>;
        $r13 = virtualinvoke r0.<net.htmlparser.jericho.Source: net.htmlparser.jericho.RowColumnVector getRowColumnVector(int)>(i0);
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(int)>(200);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag at ");
        $r16 = virtualinvoke $r13.<net.htmlparser.jericho.RowColumnVector: java.lang.StringBuilder appendTo(java.lang.StringBuilder)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recognised as type \'");
        $r18 = virtualinvoke r4.<net.htmlparser.jericho.TagType: java.lang.String getDescription()>();
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' because it has no end delimiter");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r12.<net.htmlparser.jericho.Logger: void info(java.lang.String)>($r21);
        r2[12] = 1;

     label7:
        r2[13] = 1;
        goto label1;

     label8:
        r2[14] = 1;
        return null;

        catch java.lang.IndexOutOfBoundsException from label3 to label4 with label6;
    }

    private static net.htmlparser.jericho.Logger getLogger()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.Logger $r2, $r3, $r4;

        $r0 = <net.htmlparser.jericho.TagType: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();

     label0:
        r1 = $r0[16];
        $r2 = <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Logger logger>;
        r1[0] = 1;
        if $r2 != null goto label1;

        $r3 = staticinvoke <net.htmlparser.jericho.Source: net.htmlparser.jericho.Logger newLogger()>();
        <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Logger logger> = $r3;
        r1[1] = 1;

     label1:
        $r4 = <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Logger logger>;
        r1[2] = 1;
        return $r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.TagType: boolean[][] $VRi()>();
        r1 = $r0[17];
        <net.htmlparser.jericho.TagType: net.htmlparser.jericho.Logger logger> = null;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        $r0 = newmultiarray (boolean)[18][];
        <net.htmlparser.jericho.TagType: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[28];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[3];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[7];
        $r0[13] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[14] = $r14;
        $r15 = newarray (boolean)[15];
        $r0[15] = $r15;
        $r16 = newarray (boolean)[3];
        $r0[16] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[17] = $r17;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/TagType", 631057900414077428L);
        return $r0;
    }
}
final class net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator extends java.lang.Object implements java.util.Iterator
{
    private net.htmlparser.jericho.TagTypeRegister cursor;
    private int tagTypeIndex;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Source, int)
    {
        net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1, $i2, $i3;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.ParseText r4;
        net.htmlparser.jericho.TagTypeRegister r5, $r6, $r7, $r10, $r12, $r13;
        char $c4;
        java.lang.IndexOutOfBoundsException $r8, r9;
        net.htmlparser.jericho.TagType[] $r11;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: int tagTypeIndex> = 0;
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $r6 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister access$000()>();
        r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor> = $r6;
        i1 = 0;
        r3[0] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor>;
        $i2 = i1;
        i1 = i1 + 1;
        $i3 = i0 + $i2;
        $c4 = interfaceinvoke r4.<net.htmlparser.jericho.ParseText: char charAt(int)>($i3);
        r5 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister access$100(net.htmlparser.jericho.TagTypeRegister,char)>($r7, $c4);
        r3[1] = 1;
        if r5 != null goto label2;

        r3[2] = 1;
        goto label3;

     label2:
        r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor> = r5;
        r3[3] = 1;
        goto label1;

     label3:
        r3[4] = 1;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;
        r3[5] = 1;

     label6:
        $r10 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor>;
        $r11 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] access$200(net.htmlparser.jericho.TagTypeRegister)>($r10);
        r3[6] = 1;
        if $r11 != null goto label7;

        $r12 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor>;
        $r13 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister access$300(net.htmlparser.jericho.TagTypeRegister)>($r12);
        r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor> = $r13;
        r3[7] = 1;
        if $r13 != null goto label6;

        r3[8] = 1;
        goto label7;

     label7:
        r3[9] = 1;
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label4 with label5;
    }

    public boolean hasNext()
    {
        net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagTypeRegister $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator;
        $r1 = <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor>;
        r2[0] = 1;
        if $r3 == null goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.TagType next()
    {
        net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagType[] r3, $r11;
        net.htmlparser.jericho.TagType r4;
        net.htmlparser.jericho.TagTypeRegister $r5, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator;
        $r1 = <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r5 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor>;
        r3 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] access$200(net.htmlparser.jericho.TagTypeRegister)>($r5);
        $i0 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: int tagTypeIndex>;
        r4 = r3[$i0];
        $i1 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: int tagTypeIndex>;
        $i2 = $i1 + 1;
        r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: int tagTypeIndex> = $i2;
        $i3 = lengthof r3;
        r2[0] = 1;
        if $i2 != $i3 goto label2;

        r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: int tagTypeIndex> = 0;
        r2[1] = 1;

     label1:
        $r7 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor>;
        $r8 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister access$300(net.htmlparser.jericho.TagTypeRegister)>($r7);
        r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor> = $r8;
        $r9 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor>;
        r2[2] = 1;
        if $r9 == null goto label2;

        $r10 = r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagTypeRegister cursor>;
        $r11 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] access$200(net.htmlparser.jericho.TagTypeRegister)>($r10);
        r2[3] = 1;
        if $r11 == null goto label1;

     label2:
        r2[4] = 1;
        return r4;
    }

    public void remove()
    {
        net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator;
        $r1 = <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public volatile java.lang.Object next()
    {
        net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator r0;
        net.htmlparser.jericho.TagType $r1;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator;
        $r1 = virtualinvoke r0.<net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: net.htmlparser.jericho.TagType next()>();
        return $r1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRi()>();
        r1 = $r0[5];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.TagTypeRegister$ProspectiveTagTypeIterator: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[10];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[5];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[5] = $r5;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/TagTypeRegister$ProspectiveTagTypeIterator", 6090672915936386964L);
        return $r0;
    }
}
final class net.htmlparser.jericho.TagTypeRegister extends java.lang.Object
{
    private net.htmlparser.jericho.TagTypeRegister parent;
    private char ch;
    private net.htmlparser.jericho.TagTypeRegister[] children;
    private net.htmlparser.jericho.TagType[] tagTypes;
    private static final char NULL_CHAR;
    private static final net.htmlparser.jericho.TagType[] DEFAULT_TAG_TYPES;
    private static net.htmlparser.jericho.TagTypeRegister root;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.TagTypeRegister r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister parent> = null;
        r0.<net.htmlparser.jericho.TagTypeRegister: char ch> = 0;
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children> = null;
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes> = null;
        r2[0] = 1;
        return;
    }

    private static synchronized void add(net.htmlparser.jericho.TagType[])
    {
        net.htmlparser.jericho.TagType[] r0;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1;
        net.htmlparser.jericho.TagType $r3;

        r0 := @parameter0: net.htmlparser.jericho.TagType[];
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        i0 = 0;
        r2[0] = 1;

     label1:
        $i1 = lengthof r0;
        r2[1] = 1;
        if i0 >= $i1 goto label2;

        $r3 = r0[i0];
        staticinvoke <net.htmlparser.jericho.TagTypeRegister: void add(net.htmlparser.jericho.TagType)>($r3);
        i0 = i0 + 1;
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return;
    }

    public static synchronized void add(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagTypeRegister r3, r5, $r6;
        java.lang.String r4;
        int i0, $i2;
        char c1;

        r0 := @parameter0: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r3 = <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister root>;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.TagType: java.lang.String getStartDelimiter()>();
        i0 = 0;
        r2[0] = 1;

     label1:
        $i2 = virtualinvoke r4.<java.lang.String: int length()>();
        r2[1] = 1;
        if i0 >= $i2 goto label3;

        c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i0);
        r5 = specialinvoke r3.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister getChild(char)>(c1);
        r2[2] = 1;
        if r5 != null goto label2;

        $r6 = new net.htmlparser.jericho.TagTypeRegister;
        specialinvoke $r6.<net.htmlparser.jericho.TagTypeRegister: void <init>()>();
        r5 = $r6;
        r5.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister parent> = r3;
        r5.<net.htmlparser.jericho.TagTypeRegister: char ch> = c1;
        specialinvoke r3.<net.htmlparser.jericho.TagTypeRegister: void addChild(net.htmlparser.jericho.TagTypeRegister)>(r5);
        r2[3] = 1;

     label2:
        r3 = r5;
        i0 = i0 + 1;
        r2[4] = 1;
        goto label1;

     label3:
        specialinvoke r3.<net.htmlparser.jericho.TagTypeRegister: void addTagType(net.htmlparser.jericho.TagType)>(r0);
        r2[5] = 1;
        return;
    }

    public static synchronized void remove(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagType r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagTypeRegister r3, r5, $r6, $r9;
        java.lang.String r4;
        int i0, $i2;
        char c1;
        net.htmlparser.jericho.TagType[] $r7;
        net.htmlparser.jericho.TagTypeRegister[] $r8;

        r0 := @parameter0: net.htmlparser.jericho.TagType;
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister root>;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.TagType: java.lang.String getStartDelimiter()>();
        i0 = 0;
        r2[0] = 1;

     label1:
        $i2 = virtualinvoke r4.<java.lang.String: int length()>();
        r2[1] = 1;
        if i0 >= $i2 goto label3;

        c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i0);
        r5 = specialinvoke r3.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister getChild(char)>(c1);
        r2[2] = 1;
        if r5 != null goto label2;

        r2[3] = 1;
        return;

     label2:
        r3 = r5;
        i0 = i0 + 1;
        r2[4] = 1;
        goto label1;

     label3:
        specialinvoke r3.<net.htmlparser.jericho.TagTypeRegister: void removeTagType(net.htmlparser.jericho.TagType)>(r0);
        r2[5] = 1;

     label4:
        $r6 = <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister root>;
        r2[6] = 1;
        if r3 == $r6 goto label5;

        $r7 = r3.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        r2[7] = 1;
        if $r7 != null goto label5;

        $r8 = r3.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        r2[8] = 1;
        if $r8 != null goto label5;

        $r9 = r3.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister parent>;
        specialinvoke $r9.<net.htmlparser.jericho.TagTypeRegister: void removeChild(net.htmlparser.jericho.TagTypeRegister)>(r3);
        r3 = r3.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister parent>;
        r2[9] = 1;
        goto label4;

     label5:
        r2[10] = 1;
        return;
    }

    public static java.util.List getList()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.util.ArrayList r2, $r3;
        net.htmlparser.jericho.TagTypeRegister $r4;

        $r0 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r2 = $r3;
        $r4 = <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister root>;
        specialinvoke $r4.<net.htmlparser.jericho.TagTypeRegister: void addTagTypesToList(java.util.List)>(r2);
        r1[0] = 1;
        return r2;
    }

    private void addTagTypesToList(java.util.List)
    {
        net.htmlparser.jericho.TagTypeRegister r0, r4;
        java.util.List r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, i2, $i3;
        net.htmlparser.jericho.TagType[] $r5, $r6, $r7;
        net.htmlparser.jericho.TagType $r8;
        net.htmlparser.jericho.TagTypeRegister[] $r9, r10;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        r1 := @parameter0: java.util.List;
        $r2 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $r5 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        r3[0] = 1;
        if $r5 == null goto label2;

        $r6 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $i3 = lengthof $r6;
        i0 = $i3 - 1;
        r3[1] = 1;

     label1:
        r3[2] = 1;
        if i0 < 0 goto label2;

        $r7 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $r8 = $r7[i0];
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8);
        i0 = i0 + -1;
        r3[3] = 1;
        goto label1;

     label2:
        $r9 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        r3[4] = 1;
        if $r9 == null goto label4;

        r10 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        i1 = lengthof r10;
        i2 = 0;
        r3[5] = 1;

     label3:
        r3[6] = 1;
        if i2 >= i1 goto label4;

        r4 = r10[i2];
        specialinvoke r4.<net.htmlparser.jericho.TagTypeRegister: void addTagTypesToList(java.util.List)>(r1);
        i2 = i2 + 1;
        r3[7] = 1;
        goto label3;

     label4:
        r3[8] = 1;
        return;
    }

    public static final java.lang.String getDebugInfo()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagTypeRegister $r2;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r5;

        $r0 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r1 = $r0[6];
        $r2 = <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister root>;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = specialinvoke $r2.<net.htmlparser.jericho.TagTypeRegister: java.lang.StringBuilder appendDebugInfo(java.lang.StringBuilder,int)>($r3, 0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r1[0] = 1;
        return $r5;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.TagTypeRegister r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = specialinvoke r0.<net.htmlparser.jericho.TagTypeRegister: java.lang.StringBuilder appendDebugInfo(java.lang.StringBuilder,int)>($r3, 0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        r2[0] = 1;
        return $r5;
    }

    private java.lang.StringBuilder appendDebugInfo(java.lang.StringBuilder, int)
    {
        net.htmlparser.jericho.TagTypeRegister r0, r5;
        java.lang.StringBuilder r1, $r7, $r13;
        int i0, i1, i2, i3, $i6, $i7, i8, i9, i10;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.TagType r4;
        char $c4, $c5;
        net.htmlparser.jericho.TagType[] $r9, r11;
        java.lang.String $r12, $r16;
        net.htmlparser.jericho.TagTypeRegister[] $r18, r19;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        r1 := @parameter0: java.lang.StringBuilder;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        i1 = 0;
        r3[0] = 1;

     label1:
        r3[1] = 1;
        if i1 >= i0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        i1 = i1 + 1;
        r3[2] = 1;
        goto label1;

     label2:
        $c4 = r0.<net.htmlparser.jericho.TagTypeRegister: char ch>;
        r3[3] = 1;
        if $c4 == 0 goto label3;

        $c5 = r0.<net.htmlparser.jericho.TagTypeRegister: char ch>;
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        r3[4] = 1;

     label3:
        $r9 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        r3[5] = 1;
        if $r9 == null goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
        r11 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        i2 = lengthof r11;
        i3 = 0;
        r3[6] = 1;

     label4:
        r3[7] = 1;
        if i3 >= i2 goto label5;

        r4 = r11[i3];
        $r12 = virtualinvoke r4.<net.htmlparser.jericho.TagType: java.lang.String getDescription()>();
        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        i3 = i3 + 1;
        r3[8] = 1;
        goto label4;

     label5:
        $i6 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();
        $i7 = $i6 - 2;
        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>($i7);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        r3[9] = 1;

     label6:
        $r16 = <net.htmlparser.jericho.Config: java.lang.String NewLine>;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        r3[10] = 1;
        if $r18 == null goto label8;

        i8 = i0 + 1;
        r19 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        i9 = lengthof r19;
        i10 = 0;
        r3[11] = 1;

     label7:
        r3[12] = 1;
        if i10 >= i9 goto label8;

        r5 = r19[i10];
        specialinvoke r5.<net.htmlparser.jericho.TagTypeRegister: java.lang.StringBuilder appendDebugInfo(java.lang.StringBuilder,int)>(r1, i8);
        i10 = i10 + 1;
        r3[13] = 1;
        goto label7;

     label8:
        r3[14] = 1;
        return r1;
    }

    private net.htmlparser.jericho.TagTypeRegister getChild(char)
    {
        net.htmlparser.jericho.TagTypeRegister r0, $r6, $r8, $r11, $r13;
        char c0, c4, $c6;
        boolean[][] $r1;
        boolean[] r2;
        int i1, i2, i3, $i5, $i7, $i8;
        net.htmlparser.jericho.TagTypeRegister[] $r3, $r4, $r5, $r7, $r9, $r10, $r12;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        c0 := @parameter0: char;
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $r3 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        r2[0] = 1;
        if $r3 != null goto label1;

        r2[1] = 1;
        return null;

     label1:
        $r4 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $i5 = lengthof $r4;
        r2[2] = 1;
        if $i5 != 1 goto label4;

        $r5 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $r6 = $r5[0];
        $c6 = $r6.<net.htmlparser.jericho.TagTypeRegister: char ch>;
        r2[3] = 1;
        if $c6 != c0 goto label2;

        $r7 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $r8 = $r7[0];
        r2[4] = 1;
        goto label3;

     label2:
        $r8 = null;
        r2[5] = 1;

     label3:
        r2[6] = 1;
        return $r8;

     label4:
        i1 = 0;
        $r9 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $i7 = lengthof $r9;
        i2 = $i7 - 1;
        r2[7] = 1;

     label5:
        r2[8] = 1;
        if i1 > i2 goto label9;

        $i8 = i1 + i2;
        i3 = $i8 >> 1;
        $r10 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $r11 = $r10[i3];
        c4 = $r11.<net.htmlparser.jericho.TagTypeRegister: char ch>;
        r2[9] = 1;
        if c4 >= c0 goto label6;

        i1 = i3 + 1;
        r2[10] = 1;
        goto label8;

     label6:
        r2[11] = 1;
        if c4 <= c0 goto label7;

        i2 = i3 - 1;
        r2[12] = 1;
        goto label8;

     label7:
        $r12 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $r13 = $r12[i3];
        r2[13] = 1;
        return $r13;

     label8:
        r2[14] = 1;
        goto label5;

     label9:
        r2[15] = 1;
        return null;
    }

    private void addChild(net.htmlparser.jericho.TagTypeRegister)
    {
        net.htmlparser.jericho.TagTypeRegister r0, r1, $r10, $r12, $r14;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.TagTypeRegister[] r4, $r5, $r6, $r7, $r8, $r9, $r11, $r13;
        int i0, $i1, $i2, $i3, i6, $i7, $i8;
        char $c4, $c5;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        r1 := @parameter0: net.htmlparser.jericho.TagTypeRegister;
        $r2 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        $r5 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        r3[0] = 1;
        if $r5 != null goto label1;

        $r6 = newarray (net.htmlparser.jericho.TagTypeRegister)[1];
        $r6[0] = r1;
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children> = $r6;
        r3[1] = 1;
        goto label6;

     label1:
        $r7 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $i1 = lengthof $r7;
        $i2 = $i1 + 1;
        r4 = newarray (net.htmlparser.jericho.TagTypeRegister)[$i2];
        i0 = 0;
        r3[2] = 1;

     label2:
        $r8 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $i3 = lengthof $r8;
        r3[3] = 1;
        if i0 >= $i3 goto label3;

        $r9 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $r10 = $r9[i0];
        $c4 = $r10.<net.htmlparser.jericho.TagTypeRegister: char ch>;
        $c5 = r1.<net.htmlparser.jericho.TagTypeRegister: char ch>;
        r3[4] = 1;
        if $c4 > $c5 goto label3;

        $r11 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $r12 = $r11[i0];
        r4[i0] = $r12;
        i0 = i0 + 1;
        r3[5] = 1;
        goto label2;

     label3:
        i6 = i0 + 1;
        r4[i0] = r1;
        r3[6] = 1;

     label4:
        $i7 = lengthof r4;
        r3[7] = 1;
        if i6 >= $i7 goto label5;

        $r13 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $i8 = i6 - 1;
        $r14 = $r13[$i8];
        r4[i6] = $r14;
        i6 = i6 + 1;
        r3[8] = 1;
        goto label4;

     label5:
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children> = r4;
        r3[9] = 1;

     label6:
        r3[10] = 1;
        return;
    }

    private void removeChild(net.htmlparser.jericho.TagTypeRegister)
    {
        net.htmlparser.jericho.TagTypeRegister r0, r1, $r9, $r11;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.TagTypeRegister[] r4, $r5, $r6, $r7, $r8, $r10;
        byte b0;
        int i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        r1 := @parameter0: net.htmlparser.jericho.TagTypeRegister;
        $r2 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        $r5 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $i2 = lengthof $r5;
        r3[0] = 1;
        if $i2 != 1 goto label1;

        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children> = null;
        r3[1] = 1;
        return;

     label1:
        $r6 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $i3 = lengthof $r6;
        $i4 = $i3 - 1;
        r4 = newarray (net.htmlparser.jericho.TagTypeRegister)[$i4];
        b0 = 0;
        i1 = 0;
        r3[2] = 1;

     label2:
        $r7 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $i5 = lengthof $r7;
        r3[3] = 1;
        if i1 >= $i5 goto label5;

        $r8 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $r9 = $r8[i1];
        r3[4] = 1;
        if $r9 != r1 goto label3;

        b0 = -1;
        r3[5] = 1;
        goto label4;

     label3:
        $i6 = i1 + b0;
        $r10 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children>;
        $r11 = $r10[i1];
        r4[$i6] = $r11;
        r3[6] = 1;

     label4:
        i1 = i1 + 1;
        r3[7] = 1;
        goto label2;

     label5:
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister[] children> = r4;
        r3[8] = 1;
        return;
    }

    private int indexOfTagType(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagTypeRegister r0;
        net.htmlparser.jericho.TagType r1, $r7;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1;
        net.htmlparser.jericho.TagType[] $r4, $r5, $r6;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        $r4 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        r3[0] = 1;
        if $r4 != null goto label1;

        r3[1] = 1;
        return -1;

     label1:
        i0 = 0;
        r3[2] = 1;

     label2:
        $r5 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $i1 = lengthof $r5;
        r3[3] = 1;
        if i0 >= $i1 goto label4;

        $r6 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $r7 = $r6[i0];
        r3[4] = 1;
        if $r7 != r1 goto label3;

        r3[5] = 1;
        return i0;

     label3:
        i0 = i0 + 1;
        r3[6] = 1;
        goto label2;

     label4:
        r3[7] = 1;
        return -1;
    }

    private void addTagType(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagTypeRegister r0;
        net.htmlparser.jericho.TagType r1, $r10, $r13;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i7;
        net.htmlparser.jericho.TagType[] r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r14;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        i0 = specialinvoke r0.<net.htmlparser.jericho.TagTypeRegister: int indexOfTagType(net.htmlparser.jericho.TagType)>(r1);
        r3[0] = 1;
        if i0 != -1 goto label4;

        $r5 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        r3[1] = 1;
        if $r5 != null goto label1;

        $r6 = newarray (net.htmlparser.jericho.TagType)[1];
        $r6[0] = r1;
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes> = $r6;
        r3[2] = 1;
        goto label7;

     label1:
        $r7 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $i2 = lengthof $r7;
        $i3 = $i2 + 1;
        r4 = newarray (net.htmlparser.jericho.TagType)[$i3];
        r4[0] = r1;
        i1 = 0;
        r3[3] = 1;

     label2:
        $r8 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $i4 = lengthof $r8;
        r3[4] = 1;
        if i1 >= $i4 goto label3;

        $i5 = i1 + 1;
        $r9 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $r10 = $r9[i1];
        r4[$i5] = $r10;
        i1 = i1 + 1;
        r3[5] = 1;
        goto label2;

     label3:
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes> = r4;
        r3[6] = 1;
        goto label7;

     label4:
        i6 = i0;
        r3[7] = 1;

     label5:
        r3[8] = 1;
        if i6 <= 0 goto label6;

        $r11 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $r12 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $i7 = i6 - 1;
        $r13 = $r12[$i7];
        $r11[i6] = $r13;
        i6 = i6 + -1;
        r3[9] = 1;
        goto label5;

     label6:
        $r14 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $r14[0] = r1;
        r3[10] = 1;

     label7:
        r3[11] = 1;
        return;
    }

    private void removeTagType(net.htmlparser.jericho.TagType)
    {
        net.htmlparser.jericho.TagTypeRegister r0;
        net.htmlparser.jericho.TagType r1, $r8, $r10;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7;
        net.htmlparser.jericho.TagType[] r4, $r5, $r6, $r7, $r9;

        r0 := @this: net.htmlparser.jericho.TagTypeRegister;
        r1 := @parameter0: net.htmlparser.jericho.TagType;
        $r2 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];
        i0 = specialinvoke r0.<net.htmlparser.jericho.TagTypeRegister: int indexOfTagType(net.htmlparser.jericho.TagType)>(r1);
        r3[0] = 1;
        if i0 != -1 goto label1;

        r3[1] = 1;
        return;

     label1:
        $r5 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $i2 = lengthof $r5;
        r3[2] = 1;
        if $i2 != 1 goto label2;

        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes> = null;
        r3[3] = 1;
        return;

     label2:
        $r6 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $i3 = lengthof $r6;
        $i4 = $i3 - 1;
        r4 = newarray (net.htmlparser.jericho.TagType)[$i4];
        i1 = 0;
        r3[4] = 1;

     label3:
        r3[5] = 1;
        if i1 >= i0 goto label4;

        $r7 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $r8 = $r7[i1];
        r4[i1] = $r8;
        i1 = i1 + 1;
        r3[6] = 1;
        goto label3;

     label4:
        i5 = i0;
        r3[7] = 1;

     label5:
        $i6 = lengthof r4;
        r3[8] = 1;
        if i5 >= $i6 goto label6;

        $r9 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        $i7 = i5 + 1;
        $r10 = $r9[$i7];
        r4[i5] = $r10;
        i5 = i5 + 1;
        r3[9] = 1;
        goto label5;

     label6:
        r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes> = r4;
        r3[10] = 1;
        return;
    }

    static net.htmlparser.jericho.TagTypeRegister access$000()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TagTypeRegister $r2;

        $r0 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r1 = $r0[15];
        $r2 = <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister root>;
        r1[0] = 1;
        return $r2;
    }

    static net.htmlparser.jericho.TagTypeRegister access$100(net.htmlparser.jericho.TagTypeRegister, char)
    {
        net.htmlparser.jericho.TagTypeRegister r0, $r3;
        char c0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.TagTypeRegister;
        c0 := @parameter1: char;
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[16];
        $r3 = specialinvoke r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister getChild(char)>(c0);
        r2[0] = 1;
        return $r3;
    }

    static net.htmlparser.jericho.TagType[] access$200(net.htmlparser.jericho.TagTypeRegister)
    {
        net.htmlparser.jericho.TagTypeRegister r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TagType[] $r3;

        r0 := @parameter0: net.htmlparser.jericho.TagTypeRegister;
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r3 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] tagTypes>;
        r2[0] = 1;
        return $r3;
    }

    static net.htmlparser.jericho.TagTypeRegister access$300(net.htmlparser.jericho.TagTypeRegister)
    {
        net.htmlparser.jericho.TagTypeRegister r0, $r3;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.TagTypeRegister;
        $r1 = <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();

     label0:
        r2 = $r1[18];
        $r3 = r0.<net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister parent>;
        r2[0] = 1;
        return $r3;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.StartTagType $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        net.htmlparser.jericho.TagType[] $r3, $r17;
        net.htmlparser.jericho.EndTagType $r14, $r15;
        net.htmlparser.jericho.TagTypeRegister $r16;

        $r0 = staticinvoke <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRi()>();
        r1 = $r0[19];
        $r3 = newarray (net.htmlparser.jericho.TagType)[13];
        $r2 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType UNREGISTERED>;
        $r3[0] = $r2;
        $r4 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        $r3[1] = $r4;
        $r5 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType COMMENT>;
        $r3[2] = $r5;
        $r6 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType MARKUP_DECLARATION>;
        $r3[3] = $r6;
        $r7 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType DOCTYPE_DECLARATION>;
        $r3[4] = $r7;
        $r8 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType CDATA_SECTION>;
        $r3[5] = $r8;
        $r9 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType XML_PROCESSING_INSTRUCTION>;
        $r3[6] = $r9;
        $r10 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType XML_DECLARATION>;
        $r3[7] = $r10;
        $r11 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON>;
        $r3[8] = $r11;
        $r12 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON_ESCAPED>;
        $r3[9] = $r12;
        $r13 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType SERVER_COMMON_COMMENT>;
        $r3[10] = $r13;
        $r14 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType UNREGISTERED>;
        $r3[11] = $r14;
        $r15 = <net.htmlparser.jericho.EndTagType: net.htmlparser.jericho.EndTagType NORMAL>;
        $r3[12] = $r15;
        <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] DEFAULT_TAG_TYPES> = $r3;
        $r16 = new net.htmlparser.jericho.TagTypeRegister;
        specialinvoke $r16.<net.htmlparser.jericho.TagTypeRegister: void <init>()>();
        <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagTypeRegister root> = $r16;
        $r17 = <net.htmlparser.jericho.TagTypeRegister: net.htmlparser.jericho.TagType[] DEFAULT_TAG_TYPES>;
        staticinvoke <net.htmlparser.jericho.TagTypeRegister: void add(net.htmlparser.jericho.TagType[])>($r17);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        $r0 = newmultiarray (boolean)[20][];
        <net.htmlparser.jericho.TagTypeRegister: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[6];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[11];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[9];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[15];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[16];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[11];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[9];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[8];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[12];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[11];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[1];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[18] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[19] = $r20;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/TagTypeRegister", 5879269347320683165L);
        return $r0;
    }
}
final class net.htmlparser.jericho.TextExtractor$1 extends java.lang.Object implements net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        net.htmlparser.jericho.TextExtractor$1 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.TextExtractor$1;
        $r1 = <net.htmlparser.jericho.TextExtractor$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public boolean includeAttribute(net.htmlparser.jericho.StartTag, net.htmlparser.jericho.Attribute)
    {
        net.htmlparser.jericho.TextExtractor$1 r0;
        net.htmlparser.jericho.StartTag r1;
        net.htmlparser.jericho.Attribute r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.TextExtractor$1;
        r1 := @parameter0: net.htmlparser.jericho.StartTag;
        r2 := @parameter1: net.htmlparser.jericho.Attribute;
        $r3 = <net.htmlparser.jericho.TextExtractor$1: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.TextExtractor$1: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        r4[0] = 1;
        return 1;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.TextExtractor$1: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.TextExtractor$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/TextExtractor$1", 3934875461979374116L);
        return $r0;
    }
}
final class net.htmlparser.jericho.TextExtractor$2 extends java.lang.Object implements net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>()
    {
        net.htmlparser.jericho.TextExtractor$2 r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.TextExtractor$2;
        $r1 = <net.htmlparser.jericho.TextExtractor$2: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor$2: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public boolean includeAttribute(net.htmlparser.jericho.StartTag, net.htmlparser.jericho.Attribute)
    {
        net.htmlparser.jericho.TextExtractor$2 r0;
        net.htmlparser.jericho.StartTag r1;
        net.htmlparser.jericho.Attribute r2, $r6;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Attributes $r5;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TextExtractor$2;
        r1 := @parameter0: net.htmlparser.jericho.StartTag;
        r2 := @parameter1: net.htmlparser.jericho.Attribute;
        $r3 = <net.htmlparser.jericho.TextExtractor$2: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.TextExtractor$2: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        $r5 = virtualinvoke r1.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        $r6 = virtualinvoke $r5.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>("name");
        r4[0] = 1;
        if $r6 == null goto label1;

        $z0 = 1;
        r4[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r4[2] = 1;

     label2:
        r4[3] = 1;
        return $z0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.TextExtractor$2: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.TextExtractor$2: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/TextExtractor$2", -663395030829739465L);
        return $r0;
    }
}
interface  net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker extends java.lang.Object
{

    public abstract boolean includeAttribute(net.htmlparser.jericho.StartTag, net.htmlparser.jericho.Attribute);
}
final class net.htmlparser.jericho.TextExtractor$Processor extends java.lang.Object
{
    private final net.htmlparser.jericho.Segment segment;
    private final net.htmlparser.jericho.Source source;
    private final boolean convertNonBreakingSpaces;
    private final boolean includeAttributes;
    private final boolean excludeNonHTMLElements;
    final net.htmlparser.jericho.TextExtractor this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.TextExtractor, net.htmlparser.jericho.Segment, boolean, boolean, boolean)
    {
        net.htmlparser.jericho.TextExtractor$Processor r0;
        net.htmlparser.jericho.TextExtractor r1;
        net.htmlparser.jericho.Segment r2;
        boolean z0, z1, z2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.Source $r5;

        r0 := @this: net.htmlparser.jericho.TextExtractor$Processor;
        r1 := @parameter0: net.htmlparser.jericho.TextExtractor;
        r2 := @parameter1: net.htmlparser.jericho.Segment;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        z2 := @parameter4: boolean;
        $r3 = <net.htmlparser.jericho.TextExtractor$Processor: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.TextExtractor$Processor: boolean[][] $VRi()>();

     label0:
        r4 = $r3[0];
        r0.<net.htmlparser.jericho.TextExtractor$Processor: net.htmlparser.jericho.TextExtractor this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.TextExtractor$Processor: net.htmlparser.jericho.Segment segment> = r2;
        $r5 = r2.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source source>;
        r0.<net.htmlparser.jericho.TextExtractor$Processor: net.htmlparser.jericho.Source source> = $r5;
        r0.<net.htmlparser.jericho.TextExtractor$Processor: boolean convertNonBreakingSpaces> = z0;
        r0.<net.htmlparser.jericho.TextExtractor$Processor: boolean includeAttributes> = z1;
        r0.<net.htmlparser.jericho.TextExtractor$Processor: boolean excludeNonHTMLElements> = z2;
        r4[0] = 1;
        return;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.TextExtractor$Processor r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.StringBuilder r3, $r9, $r27, $r29;
        net.htmlparser.jericho.NodeIterator r4, $r11;
        net.htmlparser.jericho.Segment r5, $r10, $r12, $r28;
        net.htmlparser.jericho.Tag r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        net.htmlparser.jericho.Element r7, $r22;
        net.htmlparser.jericho.Attribute r8;
        int $i0, $i1, $i2, $i3, $i4;
        net.htmlparser.jericho.TagType $r13, $r14;
        net.htmlparser.jericho.StartTagType $r15;
        net.htmlparser.jericho.StartTag r16;
        java.lang.String $r17, $r18, $r21, $r31, $r33, r36;
        net.htmlparser.jericho.TextExtractor $r19, $r26;
        java.util.List $r20;
        net.htmlparser.jericho.Attributes $r23;
        java.util.Iterator r24;
        java.lang.Object $r25;
        java.util.Set $r32;

        r0 := @this: net.htmlparser.jericho.TextExtractor$Processor;
        $r1 = <net.htmlparser.jericho.TextExtractor$Processor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor$Processor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r9 = new java.lang.StringBuilder;
        $r10 = r0.<net.htmlparser.jericho.TextExtractor$Processor: net.htmlparser.jericho.Segment segment>;
        $i0 = virtualinvoke $r10.<net.htmlparser.jericho.Segment: int length()>();
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i0);
        r3 = $r9;
        $r11 = new net.htmlparser.jericho.NodeIterator;
        $r12 = r0.<net.htmlparser.jericho.TextExtractor$Processor: net.htmlparser.jericho.Segment segment>;
        specialinvoke $r11.<net.htmlparser.jericho.NodeIterator: void <init>(net.htmlparser.jericho.Segment)>($r12);
        r4 = $r11;
        r2[0] = 1;

     label1:
        $z1 = virtualinvoke r4.<net.htmlparser.jericho.NodeIterator: boolean hasNext()>();
        r2[1] = 1;
        if $z1 == 0 goto label13;

        r5 = virtualinvoke r4.<net.htmlparser.jericho.NodeIterator: net.htmlparser.jericho.Segment next()>();
        $z2 = r5 instanceof net.htmlparser.jericho.Tag;
        r2[2] = 1;
        if $z2 == 0 goto label11;

        r6 = (net.htmlparser.jericho.Tag) r5;
        $r13 = virtualinvoke r6.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $z3 = virtualinvoke $r13.<net.htmlparser.jericho.TagType: boolean isServerTag()>();
        r2[3] = 1;
        if $z3 == 0 goto label3;

        z0 = 0;
        r7 = virtualinvoke r6.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.Element getElement()>();
        r2[4] = 1;
        if r7 == null goto label2;

        $i1 = virtualinvoke r7.<net.htmlparser.jericho.Element: int getEnd()>();
        $i2 = virtualinvoke r6.<net.htmlparser.jericho.Tag: int getEnd()>();
        r2[5] = 1;
        if $i1 <= $i2 goto label2;

        $i3 = virtualinvoke r7.<net.htmlparser.jericho.Element: int getEnd()>();
        virtualinvoke r4.<net.htmlparser.jericho.NodeIterator: void skipToPos(int)>($i3);
        r2[6] = 1;

     label2:
        r2[7] = 1;
        goto label1;

     label3:
        $r14 = virtualinvoke r6.<net.htmlparser.jericho.Tag: net.htmlparser.jericho.TagType getTagType()>();
        $r15 = <net.htmlparser.jericho.StartTagType: net.htmlparser.jericho.StartTagType NORMAL>;
        r2[8] = 1;
        if $r14 != $r15 goto label8;

        r16 = (net.htmlparser.jericho.StartTag) r6;
        $r17 = r6.<net.htmlparser.jericho.Tag: java.lang.String name>;
        r2[9] = 1;
        if $r17 == "script" goto label4;

        $r18 = r6.<net.htmlparser.jericho.Tag: java.lang.String name>;
        r2[10] = 1;
        if $r18 == "style" goto label4;

        $r19 = r0.<net.htmlparser.jericho.TextExtractor$Processor: net.htmlparser.jericho.TextExtractor this$0>;
        $z4 = virtualinvoke $r19.<net.htmlparser.jericho.TextExtractor: boolean excludeElement(net.htmlparser.jericho.StartTag)>(r16);
        r2[11] = 1;
        if $z4 != 0 goto label4;

        $z5 = r0.<net.htmlparser.jericho.TextExtractor$Processor: boolean excludeNonHTMLElements>;
        r2[12] = 1;
        if $z5 == 0 goto label5;

        $r20 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.List getElementNames()>();
        $r21 = r6.<net.htmlparser.jericho.Tag: java.lang.String name>;
        $z6 = interfaceinvoke $r20.<java.util.List: boolean contains(java.lang.Object)>($r21);
        r2[13] = 1;
        if $z6 != 0 goto label5;

     label4:
        $r22 = virtualinvoke r16.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Element getElement()>();
        $i4 = virtualinvoke $r22.<net.htmlparser.jericho.Element: int getEnd()>();
        virtualinvoke r4.<net.htmlparser.jericho.NodeIterator: void skipToPos(int)>($i4);
        r2[14] = 1;
        goto label1;

     label5:
        $z7 = r0.<net.htmlparser.jericho.TextExtractor$Processor: boolean includeAttributes>;
        r2[15] = 1;
        if $z7 == 0 goto label8;

        $r23 = virtualinvoke r16.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r24 = virtualinvoke $r23.<net.htmlparser.jericho.Attributes: java.util.Iterator iterator()>();
        r2[16] = 1;

     label6:
        $z8 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();
        r2[17] = 1;
        if $z8 == 0 goto label8;

        $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();
        r8 = (net.htmlparser.jericho.Attribute) $r25;
        $r26 = r0.<net.htmlparser.jericho.TextExtractor$Processor: net.htmlparser.jericho.TextExtractor this$0>;
        $z9 = virtualinvoke $r26.<net.htmlparser.jericho.TextExtractor: boolean includeAttribute(net.htmlparser.jericho.StartTag,net.htmlparser.jericho.Attribute)>(r16, r8);
        r2[18] = 1;
        if $z9 == 0 goto label7;

        $r27 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r28 = virtualinvoke r8.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment getValueSegment()>();
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r28);
        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        r2[19] = 1;

     label7:
        r2[20] = 1;
        goto label6;

     label8:
        $r31 = virtualinvoke r6.<net.htmlparser.jericho.Tag: java.lang.String getName()>();
        r2[21] = 1;
        if $r31 == "br" goto label9;

        $r32 = staticinvoke <net.htmlparser.jericho.HTMLElements: java.util.Set getInlineLevelElementNames()>();
        $r33 = virtualinvoke r6.<net.htmlparser.jericho.Tag: java.lang.String getName()>();
        $z10 = interfaceinvoke $r32.<java.util.Set: boolean contains(java.lang.Object)>($r33);
        r2[22] = 1;
        if $z10 != 0 goto label10;

     label9:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        r2[23] = 1;

     label10:
        r2[24] = 1;
        goto label12;

     label11:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r5);
        r2[25] = 1;

     label12:
        r2[26] = 1;
        goto label1;

     label13:
        $z11 = r0.<net.htmlparser.jericho.TextExtractor$Processor: boolean convertNonBreakingSpaces>;
        r36 = staticinvoke <net.htmlparser.jericho.CharacterReference: java.lang.String decodeCollapseWhiteSpace(java.lang.CharSequence,boolean)>(r3, $z11);
        r2[27] = 1;
        return r36;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.TextExtractor$Processor: boolean[][] $VRi()>();
        r1 = $r0[2];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3;

        $r0 = newmultiarray (boolean)[3][];
        <net.htmlparser.jericho.TextExtractor$Processor: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[28];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/TextExtractor$Processor", -5201050747914116769L);
        return $r0;
    }
}
public class net.htmlparser.jericho.TextExtractor extends java.lang.Object implements net.htmlparser.jericho.CharStreamSource
{
    private final net.htmlparser.jericho.Segment segment;
    private boolean convertNonBreakingSpaces;
    private boolean includeAttributes;
    private boolean excludeNonHTMLElements;
    private static final java.util.Map map;
    private static net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker ALWAYS_INCLUDE;
    private static net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker INCLUDE_IF_NAME_ATTRIBUTE_PRESENT;
    private static final boolean[][] $VRc;

    public void <init>(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.TextExtractor r0;
        net.htmlparser.jericho.Segment r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        r1 := @parameter0: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $z0 = <net.htmlparser.jericho.Config: boolean ConvertNonBreakingSpaces>;
        r0.<net.htmlparser.jericho.TextExtractor: boolean convertNonBreakingSpaces> = $z0;
        r0.<net.htmlparser.jericho.TextExtractor: boolean includeAttributes> = 0;
        r0.<net.htmlparser.jericho.TextExtractor: boolean excludeNonHTMLElements> = 0;
        r0.<net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.Segment segment> = r1;
        r3[0] = 1;
        return;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        net.htmlparser.jericho.TextExtractor r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[1];
        virtualinvoke r0.<net.htmlparser.jericho.TextExtractor: void appendTo(java.lang.Appendable)>(r1);
        virtualinvoke r1.<java.io.Writer: void flush()>();
        r3[0] = 1;
        return;
    }

    public void appendTo(java.lang.Appendable) throws java.io.IOException
    {
        net.htmlparser.jericho.TextExtractor r0;
        java.lang.Appendable r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.String $r4;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        r1 := @parameter0: java.lang.Appendable;
        $r2 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        $r4 = virtualinvoke r0.<net.htmlparser.jericho.TextExtractor: java.lang.String toString()>();
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);
        r3[0] = 1;
        return;
    }

    public long getEstimatedMaximumOutputLength()
    {
        net.htmlparser.jericho.TextExtractor r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.Segment $r3;
        int $i0;
        long $l1;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        $r1 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.Segment segment>;
        $i0 = virtualinvoke $r3.<net.htmlparser.jericho.Segment: int length()>();
        $l1 = (long) $i0;
        r2[0] = 1;
        return $l1;
    }

    public java.lang.String toString()
    {
        net.htmlparser.jericho.TextExtractor r0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.TextExtractor$Processor $r3;
        net.htmlparser.jericho.Segment $r4;
        boolean $z0, $z1, $z2;
        java.lang.String $r5;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        $r1 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = new net.htmlparser.jericho.TextExtractor$Processor;
        $r4 = r0.<net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.Segment segment>;
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.TextExtractor: boolean getConvertNonBreakingSpaces()>();
        $z1 = virtualinvoke r0.<net.htmlparser.jericho.TextExtractor: boolean getIncludeAttributes()>();
        $z2 = virtualinvoke r0.<net.htmlparser.jericho.TextExtractor: boolean getExcludeNonHTMLElements()>();
        specialinvoke $r3.<net.htmlparser.jericho.TextExtractor$Processor: void <init>(net.htmlparser.jericho.TextExtractor,net.htmlparser.jericho.Segment,boolean,boolean,boolean)>(r0, $r4, $z0, $z1, $z2);
        $r5 = virtualinvoke $r3.<net.htmlparser.jericho.TextExtractor$Processor: java.lang.String toString()>();
        r2[0] = 1;
        return $r5;
    }

    public net.htmlparser.jericho.TextExtractor setConvertNonBreakingSpaces(boolean)
    {
        net.htmlparser.jericho.TextExtractor r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        r0.<net.htmlparser.jericho.TextExtractor: boolean convertNonBreakingSpaces> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getConvertNonBreakingSpaces()
    {
        net.htmlparser.jericho.TextExtractor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        $r1 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $z0 = r0.<net.htmlparser.jericho.TextExtractor: boolean convertNonBreakingSpaces>;
        r2[0] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.TextExtractor setIncludeAttributes(boolean)
    {
        net.htmlparser.jericho.TextExtractor r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        r0.<net.htmlparser.jericho.TextExtractor: boolean includeAttributes> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getIncludeAttributes()
    {
        net.htmlparser.jericho.TextExtractor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        $r1 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $z0 = r0.<net.htmlparser.jericho.TextExtractor: boolean includeAttributes>;
        r2[0] = 1;
        return $z0;
    }

    public boolean includeAttribute(net.htmlparser.jericho.StartTag, net.htmlparser.jericho.Attribute)
    {
        net.htmlparser.jericho.TextExtractor r0;
        net.htmlparser.jericho.StartTag r1;
        net.htmlparser.jericho.Attribute r2;
        boolean[][] $r3;
        boolean[] r4;
        net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker r5;
        java.util.Map $r6;
        java.lang.String $r7;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        r1 := @parameter0: net.htmlparser.jericho.StartTag;
        r2 := @parameter1: net.htmlparser.jericho.Attribute;
        $r3 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r4 = $r3[9];
        $r6 = <net.htmlparser.jericho.TextExtractor: java.util.Map map>;
        $r7 = virtualinvoke r2.<net.htmlparser.jericho.Attribute: java.lang.String getKey()>();
        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);
        r5 = (net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker) $r8;
        r4[0] = 1;
        if r5 != null goto label1;

        r4[1] = 1;
        return 0;

     label1:
        $z0 = interfaceinvoke r5.<net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker: boolean includeAttribute(net.htmlparser.jericho.StartTag,net.htmlparser.jericho.Attribute)>(r1, r2);
        r4[2] = 1;
        return $z0;
    }

    public net.htmlparser.jericho.TextExtractor setExcludeNonHTMLElements(boolean)
    {
        net.htmlparser.jericho.TextExtractor r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        r0.<net.htmlparser.jericho.TextExtractor: boolean excludeNonHTMLElements> = z0;
        r2[0] = 1;
        return r0;
    }

    public boolean getExcludeNonHTMLElements()
    {
        net.htmlparser.jericho.TextExtractor r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        $r1 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        $z0 = r0.<net.htmlparser.jericho.TextExtractor: boolean excludeNonHTMLElements>;
        r2[0] = 1;
        return $z0;
    }

    public boolean excludeElement(net.htmlparser.jericho.StartTag)
    {
        net.htmlparser.jericho.TextExtractor r0;
        net.htmlparser.jericho.StartTag r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.TextExtractor;
        r1 := @parameter0: net.htmlparser.jericho.StartTag;
        $r2 = <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        r3[0] = 1;
        return 0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker $r2, $r9, $r12, $r15, $r18, $r21;
        net.htmlparser.jericho.TextExtractor$1 $r3;
        net.htmlparser.jericho.TextExtractor$2 $r4;
        java.util.HashMap $r5;
        java.util.Map $r6, $r8, $r11, $r14, $r17, $r20;

        $r0 = staticinvoke <net.htmlparser.jericho.TextExtractor: boolean[][] $VRi()>();
        r1 = $r0[13];
        $r3 = new net.htmlparser.jericho.TextExtractor$1;
        specialinvoke $r3.<net.htmlparser.jericho.TextExtractor$1: void <init>()>();
        <net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker ALWAYS_INCLUDE> = $r3;
        $r4 = new net.htmlparser.jericho.TextExtractor$2;
        specialinvoke $r4.<net.htmlparser.jericho.TextExtractor$2: void <init>()>();
        <net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker INCLUDE_IF_NAME_ATTRIBUTE_PRESENT> = $r4;
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        <net.htmlparser.jericho.TextExtractor: java.util.Map map> = $r5;
        $r6 = <net.htmlparser.jericho.TextExtractor: java.util.Map map>;
        $r2 = <net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker ALWAYS_INCLUDE>;
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("title", $r2);
        $r8 = <net.htmlparser.jericho.TextExtractor: java.util.Map map>;
        $r9 = <net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker ALWAYS_INCLUDE>;
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("alt", $r9);
        $r11 = <net.htmlparser.jericho.TextExtractor: java.util.Map map>;
        $r12 = <net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker ALWAYS_INCLUDE>;
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("label", $r12);
        $r14 = <net.htmlparser.jericho.TextExtractor: java.util.Map map>;
        $r15 = <net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker ALWAYS_INCLUDE>;
        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("summary", $r15);
        $r17 = <net.htmlparser.jericho.TextExtractor: java.util.Map map>;
        $r18 = <net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker INCLUDE_IF_NAME_ATTRIBUTE_PRESENT>;
        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r18);
        $r20 = <net.htmlparser.jericho.TextExtractor: java.util.Map map>;
        $r21 = <net.htmlparser.jericho.TextExtractor: net.htmlparser.jericho.TextExtractor$AttributeIncludeChecker ALWAYS_INCLUDE>;
        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("href", $r21);
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = newmultiarray (boolean)[14][];
        <net.htmlparser.jericho.TextExtractor: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[3];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/TextExtractor", 1764174524376296478L);
        return $r0;
    }
}
final class net.htmlparser.jericho.URIAttributes extends java.lang.Object
{
    private static final java.lang.String[] uriAttributeNames;
    private static final java.lang.String[] objectURIAttributeNames;
    private static final boolean[][] $VRc;

    void <init>()
    {
        net.htmlparser.jericho.URIAttributes r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.URIAttributes;
        $r1 = <net.htmlparser.jericho.URIAttributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.URIAttributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static java.util.List getList(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Segment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ArrayList r3, $r11;
        java.lang.String[] r4, r19;
        int i0, i1, i2, i3;
        java.lang.String r5, r20;
        java.util.Iterator r6, r16;
        net.htmlparser.jericho.StartTag r7, $r9, r18;
        net.htmlparser.jericho.Attribute r8, r22;
        java.util.List $r10, $r12, $r15;
        boolean $z0, $z2;
        java.lang.Object $r13, $r17;
        net.htmlparser.jericho.Attributes $r14, $r21;

        r0 := @parameter0: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.URIAttributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.URIAttributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r2[0] = 1;
        if r0 == null goto label1;

        $r9 = virtualinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag getFirstStartTag()>();
        r2[1] = 1;
        if $r9 != null goto label2;

     label1:
        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r2[2] = 1;
        return $r10;

     label2:
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r3 = $r11;
        r4 = <net.htmlparser.jericho.URIAttributes: java.lang.String[] uriAttributeNames>;
        i0 = lengthof r4;
        i1 = 0;
        r2[3] = 1;

     label3:
        r2[4] = 1;
        if i1 >= i0 goto label6;

        r5 = r4[i1];
        $r12 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags(java.lang.String,java.util.regex.Pattern)>(r5, null);
        r6 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();
        r2[5] = 1;

     label4:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        r2[6] = 1;
        if $z0 == 0 goto label5;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (net.htmlparser.jericho.StartTag) $r13;
        $r14 = virtualinvoke r7.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r8 = virtualinvoke $r14.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>(r5);
        r8.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.StartTag startTag> = r7;
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r8);
        r2[7] = 1;
        goto label4;

     label5:
        i1 = i1 + 1;
        r2[8] = 1;
        goto label3;

     label6:
        $r15 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags(java.lang.String)>("object");
        r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();
        r2[9] = 1;

     label7:
        $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();
        r2[10] = 1;
        if $z2 == 0 goto label12;

        $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();
        r18 = (net.htmlparser.jericho.StartTag) $r17;
        r19 = <net.htmlparser.jericho.URIAttributes: java.lang.String[] objectURIAttributeNames>;
        i2 = lengthof r19;
        i3 = 0;
        r2[11] = 1;

     label8:
        r2[12] = 1;
        if i3 >= i2 goto label11;

        r20 = r19[i3];
        $r21 = virtualinvoke r18.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        r22 = virtualinvoke $r21.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>(r20);
        r2[13] = 1;
        if r22 != null goto label9;

        r2[14] = 1;
        goto label10;

     label9:
        r22.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.StartTag startTag> = r18;
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r22);
        r2[15] = 1;

     label10:
        i3 = i3 + 1;
        r2[16] = 1;
        goto label8;

     label11:
        r2[17] = 1;
        goto label7;

     label12:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r3);
        r2[18] = 1;
        return r3;
    }

    public static java.util.List getStyleURISegments(net.htmlparser.jericho.Segment)
    {
        net.htmlparser.jericho.Segment r0, $r11, $r20;
        boolean[][] $r1;
        boolean[] r2;
        int i0, $i1, $i2, $i3, $i4;
        java.util.Iterator r3;
        net.htmlparser.jericho.StartTag r4, $r6;
        java.util.List $r5, $r9, $r13, $r16;
        net.htmlparser.jericho.Source $r7, $r12;
        net.htmlparser.jericho.ParseText $r8;
        java.util.ArrayList $r10, $r14, r15;
        boolean $z0;
        java.lang.Object $r17;
        net.htmlparser.jericho.Attributes $r18;
        net.htmlparser.jericho.Attribute $r19;

        r0 := @parameter0: net.htmlparser.jericho.Segment;
        $r1 = <net.htmlparser.jericho.URIAttributes: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.URIAttributes: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        r2[0] = 1;
        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<net.htmlparser.jericho.Segment: int length()>();
        r2[1] = 1;
        if $i1 != 0 goto label2;

     label1:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r2[2] = 1;
        return $r5;

     label2:
        $r6 = virtualinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.StartTag getFirstStartTag()>();
        r2[3] = 1;
        if $r6 != null goto label4;

        $r7 = virtualinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source getSource()>();
        $r8 = virtualinvoke $r7.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        $i2 = virtualinvoke r0.<net.htmlparser.jericho.Segment: int getBegin()>();
        $i3 = virtualinvoke r0.<net.htmlparser.jericho.Segment: int getEnd()>();
        i0 = interfaceinvoke $r8.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int,int)>("url(", $i2, $i3);
        r2[4] = 1;
        if i0 != -1 goto label3;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
        r2[5] = 1;
        return $r9;

     label3:
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        $r11 = new net.htmlparser.jericho.Segment;
        $r12 = virtualinvoke r0.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source getSource()>();
        $i4 = virtualinvoke r0.<net.htmlparser.jericho.Segment: int getEnd()>();
        specialinvoke $r11.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>($r12, i0, $i4);
        $r13 = staticinvoke <net.htmlparser.jericho.URIAttributes: java.util.List addURLSegmentsFromCSS(java.util.List,net.htmlparser.jericho.Segment)>($r10, $r11);
        r2[6] = 1;
        return $r13;

     label4:
        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r15 = $r14;
        $r16 = virtualinvoke r0.<net.htmlparser.jericho.Segment: java.util.List getAllStartTags(java.lang.String,java.util.regex.Pattern)>("style", null);
        r3 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();
        r2[7] = 1;

     label5:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        r2[8] = 1;
        if $z0 == 0 goto label6;

        $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (net.htmlparser.jericho.StartTag) $r17;
        $r18 = virtualinvoke r4.<net.htmlparser.jericho.StartTag: net.htmlparser.jericho.Attributes getAttributes()>();
        $r19 = virtualinvoke $r18.<net.htmlparser.jericho.Attributes: net.htmlparser.jericho.Attribute get(java.lang.String)>("style");
        $r20 = virtualinvoke $r19.<net.htmlparser.jericho.Attribute: net.htmlparser.jericho.Segment getValueSegment()>();
        staticinvoke <net.htmlparser.jericho.URIAttributes: java.util.List addURLSegmentsFromCSS(java.util.List,net.htmlparser.jericho.Segment)>(r15, $r20);
        r2[9] = 1;
        goto label5;

     label6:
        r2[10] = 1;
        return r15;
    }

    private static java.util.List addURLSegmentsFromCSS(java.util.List, net.htmlparser.jericho.Segment)
    {
        java.util.List r0;
        net.htmlparser.jericho.Segment r1, $r6;
        boolean[][] $r2;
        boolean[] r3;
        net.htmlparser.jericho.Source r4;
        net.htmlparser.jericho.ParseText r5;
        int i0, i1, i2, i3, i4, $i5, i6, i7, i10, $i11, $i13;
        char $c8, $c9, $c12, $c14;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.util.List;
        r1 := @parameter1: net.htmlparser.jericho.Segment;
        $r2 = <net.htmlparser.jericho.URIAttributes: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.URIAttributes: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        r4 = virtualinvoke r1.<net.htmlparser.jericho.Segment: net.htmlparser.jericho.Source getSource()>();
        r5 = virtualinvoke r4.<net.htmlparser.jericho.Source: net.htmlparser.jericho.ParseText getParseText()>();
        i0 = virtualinvoke r1.<net.htmlparser.jericho.Segment: int getEnd()>();
        i1 = virtualinvoke r1.<net.htmlparser.jericho.Segment: int getBegin()>();
        r3[0] = 1;

     label1:
        $i5 = interfaceinvoke r5.<net.htmlparser.jericho.ParseText: int indexOf(java.lang.String,int,int)>("url(", i1, i0);
        i6 = $i5;
        r3[1] = 1;
        if $i5 == -1 goto label11;

        i7 = i6 + 4;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        if i7 >= i0 goto label3;

        $c8 = interfaceinvoke r5.<net.htmlparser.jericho.ParseText: char charAt(int)>(i7);
        $z0 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c8);
        r3[4] = 1;
        if $z0 == 0 goto label3;

        i7 = i7 + 1;
        r3[5] = 1;
        goto label2;

     label3:
        r3[6] = 1;
        if i7 < i0 goto label4;

        r3[7] = 1;
        goto label11;

     label4:
        $c9 = interfaceinvoke r5.<net.htmlparser.jericho.ParseText: char charAt(int)>(i7);
        $z1 = staticinvoke <net.htmlparser.jericho.URIAttributes: boolean isQuote(char)>($c9);
        r3[8] = 1;
        if $z1 == 0 goto label5;

        i7 = i7 + 1;
        r3[9] = 1;
        if i7 < i0 goto label5;

        r3[10] = 1;
        goto label11;

     label5:
        i2 = i7;
        i3 = interfaceinvoke r5.<net.htmlparser.jericho.ParseText: int indexOf(char,int,int)>(41, i2, i0);
        r3[11] = 1;
        if i3 != -1 goto label6;

        r3[12] = 1;
        goto label11;

     label6:
        i10 = i3;
        r3[13] = 1;

     label7:
        $i11 = i10 - 1;
        $c12 = interfaceinvoke r5.<net.htmlparser.jericho.ParseText: char charAt(int)>($i11);
        $z2 = staticinvoke <net.htmlparser.jericho.Segment: boolean isWhiteSpace(char)>($c12);
        r3[14] = 1;
        if $z2 == 0 goto label8;

        i10 = i10 + -1;
        r3[15] = 1;
        goto label7;

     label8:
        $i13 = i10 - 1;
        $c14 = interfaceinvoke r5.<net.htmlparser.jericho.ParseText: char charAt(int)>($i13);
        $z3 = staticinvoke <net.htmlparser.jericho.URIAttributes: boolean isQuote(char)>($c14);
        r3[16] = 1;
        if $z3 == 0 goto label9;

        i10 = i10 + -1;
        r3[17] = 1;

     label9:
        i4 = i10;
        r3[18] = 1;
        if i4 > i2 goto label10;

        r3[19] = 1;
        goto label11;

     label10:
        $r6 = new net.htmlparser.jericho.Segment;
        specialinvoke $r6.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r4, i2, i4);
        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r6);
        i1 = i3;
        r3[20] = 1;
        goto label1;

     label11:
        r3[21] = 1;
        return r0;
    }

    private static boolean isQuote(char)
    {
        char c0;
        boolean[][] $r0;
        boolean[] r1;
        boolean $z0;

        c0 := @parameter0: char;
        $r0 = <net.htmlparser.jericho.URIAttributes: boolean[][] $VRc>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <net.htmlparser.jericho.URIAttributes: boolean[][] $VRi()>();

     label0:
        r1 = $r0[4];
        r1[0] = 1;
        if c0 == 34 goto label1;

        r1[1] = 1;
        if c0 != 39 goto label2;

     label1:
        $z0 = 1;
        r1[2] = 1;
        goto label3;

     label2:
        $z0 = 0;
        r1[3] = 1;

     label3:
        r1[4] = 1;
        return $z0;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String[] $r2, $r3;

        $r0 = staticinvoke <net.htmlparser.jericho.URIAttributes: boolean[][] $VRi()>();
        r1 = $r0[5];
        $r2 = newarray (java.lang.String)[7];
        $r2[0] = "action";
        $r2[1] = "background";
        $r2[2] = "cite";
        $r2[3] = "href";
        $r2[4] = "longdesc";
        $r2[5] = "src";
        $r2[6] = "usemap";
        <net.htmlparser.jericho.URIAttributes: java.lang.String[] uriAttributeNames> = $r2;
        $r3 = newarray (java.lang.String)[3];
        $r3[0] = "classid";
        $r3[1] = "codebase";
        $r3[2] = "data";
        <net.htmlparser.jericho.URIAttributes: java.lang.String[] objectURIAttributeNames> = $r3;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.URIAttributes: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[19];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[11];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[22];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[5];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/URIAttributes", -3303185000377808525L);
        return $r0;
    }
}
public final class net.htmlparser.jericho.Util extends java.lang.Object
{
    private static final int BUFFER_SIZE;
    private static final java.lang.String CSVNewLine;
    private static final boolean[][] $VRc;

    private void <init>()
    {
        net.htmlparser.jericho.Util r0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.Util;
        $r1 = <net.htmlparser.jericho.Util: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Util: boolean[][] $VRi()>();

     label0:
        r2 = $r1[0];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2[0] = 1;
        return;
    }

    public static java.lang.String getString(java.io.Reader) throws java.io.IOException
    {
        java.io.Reader r0;
        boolean[][] $r1;
        boolean[] r2;
        char[] r3;
        java.lang.StringBuilder r4, $r7;
        int i0, $i1;
        java.lang.String r5;
        java.lang.Throwable r6, $r9;

        r0 := @parameter0: java.io.Reader;
        $r1 = <net.htmlparser.jericho.Util: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.Util: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        r2[0] = 1;
        if r0 != null goto label1;

        r2[1] = 1;
        return "";

     label1:
        r3 = newarray (char)[2048];
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r4 = $r7;
        r2[2] = 1;

     label2:
        $i1 = virtualinvoke r0.<java.io.Reader: int read(char[],int,int)>(r3, 0, 2048);
        i0 = $i1;
        r2[3] = 1;
        if $i1 == -1 goto label3;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r3, 0, i0);
        r2[4] = 1;
        goto label2;

     label3:
        r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        virtualinvoke r0.<java.io.Reader: void close()>();
        r2[5] = 1;
        return r5;

     label5:
        $r9 := @caughtexception;

     label6:
        r6 = $r9;

     label7:
        virtualinvoke r0.<java.io.Reader: void close()>();
        r2[6] = 1;
        throw r6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void outputCSVLine(java.io.Writer, java.lang.String[]) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String[] r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i1, $i2;
        java.lang.String r4, $r5, $r6, $r7;

        r0 := @parameter0: java.io.Writer;
        r1 := @parameter1: java.lang.String[];
        $r2 = <net.htmlparser.jericho.Util: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Util: boolean[][] $VRi()>();

     label0:
        r3 = $r2[2];
        i0 = 0;
        r3[0] = 1;

     label1:
        $i1 = lengthof r1;
        r3[1] = 1;
        if i0 >= $i1 goto label6;

        r4 = r1[i0];
        r3[2] = 1;
        if r4 == null goto label4;

        $r5 = <net.htmlparser.jericho.Config: java.lang.String ColumnValueTrue>;
        r3[3] = 1;
        if r4 == $r5 goto label2;

        $r6 = <net.htmlparser.jericho.Config: java.lang.String ColumnValueFalse>;
        r3[4] = 1;
        if r4 != $r6 goto label3;

     label2:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(r4);
        r3[5] = 1;
        goto label4;

     label3:
        virtualinvoke r0.<java.io.Writer: void write(int)>(34);
        staticinvoke <net.htmlparser.jericho.Util: void outputValueEscapeQuotes(java.io.Writer,java.lang.String)>(r0, r4);
        virtualinvoke r0.<java.io.Writer: void write(int)>(34);
        r3[6] = 1;

     label4:
        i0 = i0 + 1;
        $i2 = lengthof r1;
        r3[7] = 1;
        if i0 == $i2 goto label5;

        virtualinvoke r0.<java.io.Writer: void write(int)>(44);
        r3[8] = 1;

     label5:
        r3[9] = 1;
        goto label1;

     label6:
        $r7 = <net.htmlparser.jericho.Util: java.lang.String CSVNewLine>;
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r7);
        r3[10] = 1;
        return;
    }

    private static void outputValueEscapeQuotes(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        int i0, $i2;
        char c1;

        r0 := @parameter0: java.io.Writer;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Util: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Util: boolean[][] $VRi()>();

     label0:
        r3 = $r2[3];
        i0 = 0;
        r3[0] = 1;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        r3[1] = 1;
        if i0 >= $i2 goto label3;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
        virtualinvoke r0.<java.io.Writer: void write(int)>(c1);
        r3[2] = 1;
        if c1 != 34 goto label2;

        virtualinvoke r0.<java.io.Writer: void write(int)>(c1);
        r3[3] = 1;

     label2:
        i0 = i0 + 1;
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return;
    }

    static char[] getConcatenatedCharArray(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean[][] $r2;
        boolean[] r3;
        char[] r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        $r2 = <net.htmlparser.jericho.Util: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.Util: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = $i0 + $i1;
        r4 = newarray (char)[$i2];
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();
        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i3, r4, 0);
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();
        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, $i4, r4, $i5);
        r3[0] = 1;
        return r4;
    }

    static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;
        java.lang.String $r2;

        $r0 = staticinvoke <net.htmlparser.jericho.Util: boolean[][] $VRi()>();
        r1 = $r0[5];
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");
        <net.htmlparser.jericho.Util: java.lang.String CSVNewLine> = $r2;
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newmultiarray (boolean)[6][];
        <net.htmlparser.jericho.Util: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[7];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[11];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[6];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/Util", -1145664276290822651L);
        return $r0;
    }
}
public class net.htmlparser.jericho.WriterLogger extends java.lang.Object implements net.htmlparser.jericho.Logger
{
    private final java.io.Writer writer;
    private final java.lang.String name;
    private boolean errorEnabled;
    private boolean warnEnabled;
    private boolean infoEnabled;
    private boolean debugEnabled;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(java.io.Writer)
    {
        net.htmlparser.jericho.WriterLogger r0;
        java.io.Writer r1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        r1 := @parameter0: java.io.Writer;
        $r2 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<net.htmlparser.jericho.WriterLogger: void <init>(java.io.Writer,java.lang.String)>(r1, "net.htmlparser.jericho");
        r3[0] = 1;
        return;
    }

    public void <init>(java.io.Writer, java.lang.String)
    {
        net.htmlparser.jericho.WriterLogger r0;
        java.io.Writer r1;
        java.lang.String r2;
        boolean[][] $r3;
        boolean[] r4;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        r1 := @parameter0: java.io.Writer;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r4 = $r3[1];
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<net.htmlparser.jericho.WriterLogger: boolean errorEnabled> = 1;
        r0.<net.htmlparser.jericho.WriterLogger: boolean warnEnabled> = 1;
        r0.<net.htmlparser.jericho.WriterLogger: boolean infoEnabled> = 1;
        r0.<net.htmlparser.jericho.WriterLogger: boolean debugEnabled> = 1;
        r0.<net.htmlparser.jericho.WriterLogger: java.io.Writer writer> = r1;
        r0.<net.htmlparser.jericho.WriterLogger: java.lang.String name> = r2;
        r4[0] = 1;
        return;
    }

    public java.io.Writer getWriter()
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        java.io.Writer $r3;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $r3 = r0.<net.htmlparser.jericho.WriterLogger: java.io.Writer writer>;
        r2[0] = 1;
        return $r3;
    }

    public java.lang.String getName()
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.String $r3;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = r0.<net.htmlparser.jericho.WriterLogger: java.lang.String name>;
        r2[0] = 1;
        return $r3;
    }

    public void error(java.lang.String)
    {
        net.htmlparser.jericho.WriterLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[4];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.WriterLogger: boolean isErrorEnabled()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.WriterLogger: void log(java.lang.String,java.lang.String)>("ERROR", r1);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    public void warn(java.lang.String)
    {
        net.htmlparser.jericho.WriterLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[5];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.WriterLogger: boolean isWarnEnabled()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.WriterLogger: void log(java.lang.String,java.lang.String)>("WARN", r1);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    public void info(java.lang.String)
    {
        net.htmlparser.jericho.WriterLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.WriterLogger: boolean isInfoEnabled()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.WriterLogger: void log(java.lang.String,java.lang.String)>("INFO", r1);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    public void debug(java.lang.String)
    {
        net.htmlparser.jericho.WriterLogger r0;
        java.lang.String r1;
        boolean[][] $r2;
        boolean[] r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        r1 := @parameter0: java.lang.String;
        $r2 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r3 = $r2[7];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.WriterLogger: boolean isDebugEnabled()>();
        r3[0] = 1;
        if $z0 == 0 goto label1;

        virtualinvoke r0.<net.htmlparser.jericho.WriterLogger: void log(java.lang.String,java.lang.String)>("DEBUG", r1);
        r3[1] = 1;

     label1:
        r3[2] = 1;
        return;
    }

    public boolean isErrorEnabled()
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $z0 = r0.<net.htmlparser.jericho.WriterLogger: boolean errorEnabled>;
        r2[0] = 1;
        return $z0;
    }

    public void setErrorEnabled(boolean)
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        r0.<net.htmlparser.jericho.WriterLogger: boolean errorEnabled> = z0;
        r2[0] = 1;
        return;
    }

    public boolean isWarnEnabled()
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $z0 = r0.<net.htmlparser.jericho.WriterLogger: boolean warnEnabled>;
        r2[0] = 1;
        return $z0;
    }

    public void setWarnEnabled(boolean)
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[11];
        r0.<net.htmlparser.jericho.WriterLogger: boolean warnEnabled> = z0;
        r2[0] = 1;
        return;
    }

    public boolean isInfoEnabled()
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[12];
        $z0 = r0.<net.htmlparser.jericho.WriterLogger: boolean infoEnabled>;
        r2[0] = 1;
        return $z0;
    }

    public void setInfoEnabled(boolean)
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[13];
        r0.<net.htmlparser.jericho.WriterLogger: boolean infoEnabled> = z0;
        r2[0] = 1;
        return;
    }

    public boolean isDebugEnabled()
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[14];
        $z0 = r0.<net.htmlparser.jericho.WriterLogger: boolean debugEnabled>;
        r2[0] = 1;
        return $z0;
    }

    public void setDebugEnabled(boolean)
    {
        net.htmlparser.jericho.WriterLogger r0;
        boolean z0;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        z0 := @parameter0: boolean;
        $r1 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r2 = $r1[15];
        r0.<net.htmlparser.jericho.WriterLogger: boolean debugEnabled> = z0;
        r2[0] = 1;
        return;
    }

    protected void log(java.lang.String, java.lang.String)
    {
        net.htmlparser.jericho.WriterLogger r0;
        java.lang.String r1, r2, $r7, $r8;
        boolean[][] $r3;
        boolean[] r4;
        java.io.IOException r5, $r10;
        java.io.Writer $r6, $r9;
        java.lang.RuntimeException $r11;

        r0 := @this: net.htmlparser.jericho.WriterLogger;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();

     label0:
        r4 = $r3[16];

     label1:
        $r6 = r0.<net.htmlparser.jericho.WriterLogger: java.io.Writer writer>;
        $r7 = r0.<net.htmlparser.jericho.WriterLogger: java.lang.String name>;
        $r8 = staticinvoke <net.htmlparser.jericho.BasicLogFormatter: java.lang.String format(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r7);
        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>($r8);
        $r9 = r0.<net.htmlparser.jericho.WriterLogger: java.io.Writer writer>;
        virtualinvoke $r9.<java.io.Writer: void flush()>();
        r4[0] = 1;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;
        r5 = $r10;
        $r11 = new java.lang.RuntimeException;
        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5);
        r4[1] = 1;
        throw $r11;

     label4:
        r4[2] = 1;
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.WriterLogger: boolean[][] $VRi()>();
        r1 = $r0[17];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        $r0 = newmultiarray (boolean)[18][];
        <net.htmlparser.jericho.WriterLogger: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[3];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[3];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[3];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[12] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[13] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[14] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[15] = $r16;
        $r17 = newarray (boolean)[3];
        $r0[16] = $r17;
        $r18 = newarray (boolean)[1];
        $r0[17] = $r18;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/WriterLogger", 8721466144955604777L);
        return $r0;
    }
}
class net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 extends java.lang.Object implements java.util.ListIterator
{
    private final java.util.ListIterator i;
    final int val$index;
    final net.htmlparser.jericho.nodoc.SequentialListSegment$SubList this$0;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList, int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r1, $r4, $r6;
        int i0, $i1, $i2;
        boolean[][] $r2;
        boolean[] r3;
        java.util.List $r5;
        java.util.ListIterator $r7;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        r1 := @parameter0: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        i0 := @parameter1: int;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList this$0> = r1;
        r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: int val$index> = i0;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r4 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList this$0>;
        $r5 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: java.util.List access$100(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList)>($r4);
        $r6 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList this$0>;
        $i1 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: int val$index>;
        $i2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int access$000(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList,int)>($r6, $i1);
        $r7 = interfaceinvoke $r5.<java.util.List: java.util.ListIterator listIterator(int)>($i2);
        r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: java.util.ListIterator i> = $r7;
        r3[0] = 1;
        return;
    }

    public boolean hasNext()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0, $i1;
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList $r3;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: int nextIndex()>();
        $r3 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList this$0>;
        $i1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int access$200(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList)>($r3);
        r2[0] = 1;
        if $i0 >= $i1 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public java.lang.Object next()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.util.NoSuchElementException $r3;
        java.util.ListIterator $r4;
        java.lang.Object $r5;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean hasNext()>();
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        r2[1] = 1;
        throw $r3;

     label1:
        $r4 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: java.util.ListIterator i>;
        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();
        r2[2] = 1;
        return $r5;
    }

    public boolean hasPrevious()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: int previousIndex()>();
        r2[0] = 1;
        if $i0 < 0 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public java.lang.Object previous()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        boolean $z0;
        java.util.NoSuchElementException $r3;
        java.util.ListIterator $r4;
        java.lang.Object $r5;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $z0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean hasPrevious()>();
        r2[0] = 1;
        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        r2[1] = 1;
        throw $r3;

     label1:
        $r4 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: java.util.ListIterator i>;
        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();
        r2[2] = 1;
        return $r5;
    }

    public int nextIndex()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ListIterator $r3;
        int $i0, $i1, $i2;
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: java.util.ListIterator i>;
        $i0 = interfaceinvoke $r3.<java.util.ListIterator: int nextIndex()>();
        $r4 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList this$0>;
        $i1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int access$300(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList)>($r4);
        $i2 = $i0 - $i1;
        r2[0] = 1;
        return $i2;
    }

    public int previousIndex()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ListIterator $r3;
        int $i0, $i1, $i2;
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        $r3 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: java.util.ListIterator i>;
        $i0 = interfaceinvoke $r3.<java.util.ListIterator: int previousIndex()>();
        $r4 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList this$0>;
        $i1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int access$300(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList)>($r4);
        $i2 = $i0 - $i1;
        r2[0] = 1;
        return $i2;
    }

    public void remove()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public void set(java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public void add(java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 r0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRi()>();
        r1 = $r0[10];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = newmultiarray (boolean)[11][];
        <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[4];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[3];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[3];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[1];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/nodoc/SequentialListSegment$SubList$1", -3222148697346164731L);
        return $r0;
    }
}
class net.htmlparser.jericho.nodoc.SequentialListSegment$SubList extends java.util.AbstractList
{
    private final java.util.List list;
    private final int offset;
    private final int size;
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    void <init>(java.util.List, int, int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        java.util.List r1;
        int i0, i1, $i2, $i3;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.IndexOutOfBoundsException $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.String $r8, $r13, $r21;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        r1 := @parameter0: java.util.List;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<java.util.AbstractList: void <init>()>();
        r3[0] = 1;
        if i0 >= 0 goto label1;

        $r4 = new java.lang.IndexOutOfBoundsException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromIndex=");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);
        r3[1] = 1;
        throw $r4;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();
        r3[2] = 1;
        if i1 <= $i2 goto label2;

        $r9 = new java.lang.IndexOutOfBoundsException;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toIndex=");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r13);
        r3[3] = 1;
        throw $r9;

     label2:
        r3[4] = 1;
        if i0 <= i1 goto label3;

        $r14 = new java.lang.IllegalArgumentException;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromIndex(");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") > toIndex(");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);
        r3[5] = 1;
        throw $r14;

     label3:
        r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: java.util.List list> = r1;
        r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int offset> = i0;
        $i3 = i1 - i0;
        r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int size> = $i3;
        r3[6] = 1;
        return;
    }

    public java.lang.Object get(int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[1];
        $r3 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: java.util.List list>;
        $i1 = specialinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int getSuperListIndex(int)>(i0);
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);
        r2[0] = 1;
        return $r4;
    }

    public int size()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[2];
        $i0 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int size>;
        r2[0] = 1;
        return $i0;
    }

    public java.util.Iterator iterator()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ListIterator $r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: java.util.ListIterator listIterator()>();
        r2[0] = 1;
        return $r3;
    }

    public java.util.ListIterator listIterator(int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1 $r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $r3 = new net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1;
        specialinvoke $r3.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList$1: void <init>(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList,int)>(r0, i0);
        r2[0] = 1;
        return $r3;
    }

    public java.util.List subList(int, int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0, $r3;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $r3 = new net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        specialinvoke $r3.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: void <init>(java.util.List,int,int)>(r0, i0, i1);
        r2[0] = 1;
        return $r3;
    }

    private int getSuperListIndex(int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[6];
        r2[0] = 1;
        if i0 < 0 goto label1;

        $i1 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int size>;
        r2[1] = 1;
        if i0 < $i1 goto label2;

     label1:
        $r3 = new java.lang.IndexOutOfBoundsException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index=");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size=");
        $i2 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int size>;
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);
        r2[2] = 1;
        throw $r3;

     label2:
        $i3 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int offset>;
        $i4 = i0 + $i3;
        r2[3] = 1;
        return $i4;
    }

    static int access$000(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList, int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        int i0, $i1;
        boolean[][] $r1;
        boolean[] r2;

        r0 := @parameter0: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        i0 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $i1 = specialinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int getSuperListIndex(int)>(i0);
        r2[0] = 1;
        return $i1;
    }

    static java.util.List access$100(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.List $r3;

        r0 := @parameter0: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[8];
        $r3 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: java.util.List list>;
        r2[0] = 1;
        return $r3;
    }

    static int access$200(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @parameter0: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[9];
        $i0 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int size>;
        r2[0] = 1;
        return $i0;
    }

    static int access$300(net.htmlparser.jericho.nodoc.SequentialListSegment$SubList)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @parameter0: net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();

     label0:
        r2 = $r1[10];
        $i0 = r0.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: int offset>;
        r2[0] = 1;
        return $i0;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRi()>();
        r1 = $r0[11];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = newmultiarray (boolean)[12][];
        <net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[7];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[1];
        $r0[1] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[2] = $r3;
        $r4 = newarray (boolean)[1];
        $r0[3] = $r4;
        $r5 = newarray (boolean)[1];
        $r0[4] = $r5;
        $r6 = newarray (boolean)[1];
        $r0[5] = $r6;
        $r7 = newarray (boolean)[4];
        $r0[6] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[7] = $r8;
        $r9 = newarray (boolean)[1];
        $r0[8] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[9] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[10] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[11] = $r12;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/nodoc/SequentialListSegment$SubList", -934318885735768505L);
        return $r0;
    }
}
public abstract class net.htmlparser.jericho.nodoc.SequentialListSegment extends net.htmlparser.jericho.Segment implements java.util.List
{
    private static final boolean[][] $VRc;
    private static final long serialVersionUID;

    public void <init>(net.htmlparser.jericho.Source, int, int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        net.htmlparser.jericho.Source r1;
        int i0, i1;
        boolean[][] $r2;
        boolean[] r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: net.htmlparser.jericho.Source;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[0];
        specialinvoke r0.<net.htmlparser.jericho.Segment: void <init>(net.htmlparser.jericho.Source,int,int)>(r1, i0, i1);
        r3[0] = 1;
        return;
    }

    public abstract int getCount();

    public abstract java.util.ListIterator listIterator(int);

    public java.lang.Object get(int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ListIterator r3;
        java.util.NoSuchElementException r4, $r6;
        java.lang.Object $r5;
        java.lang.IndexOutOfBoundsException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[3];
        r3 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: java.util.ListIterator listIterator(int)>(i0);

     label1:
        $r5 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();
        r2[0] = 1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r4 = $r6;
        $r7 = new java.lang.IndexOutOfBoundsException;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index=");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r11);
        r2[1] = 1;
        throw $r7;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public int size()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[4];
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: int getCount()>();
        r2[0] = 1;
        return $i0;
    }

    public boolean isEmpty()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        int $i0;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[5];
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: int getCount()>();
        r2[0] = 1;
        if $i0 != 0 goto label1;

        $z0 = 1;
        r2[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r2[2] = 1;

     label2:
        r2[3] = 1;
        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        int $i0;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[6];
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: int indexOf(java.lang.Object)>(r1);
        r3[0] = 1;
        if $i0 < 0 goto label1;

        $z0 = 1;
        r3[1] = 1;
        goto label2;

     label1:
        $z0 = 0;
        r3[2] = 1;

     label2:
        r3[3] = 1;
        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.Object[] r3;
        int i0, $i1, $i2;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[7];
        $i1 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: int getCount()>();
        r3 = newarray (java.lang.Object)[$i1];
        i0 = 0;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: java.util.Iterator iterator()>();
        r2[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r2[1] = 1;
        if $z0 == 0 goto label2;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $i2 = i0;
        i0 = i0 + 1;
        r3[$i2] = r5;
        r2[2] = 1;
        goto label1;

     label2:
        r2[3] = 1;
        return r3;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.lang.Object[] r1, $r9;
        boolean[][] $r2;
        boolean[] r3;
        int i0, i1, $i2, $i3, $i4;
        java.util.Iterator r4;
        java.lang.Object r5, $r8;
        java.lang.Class $r6, $r7;
        boolean $z0;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.lang.Object[];
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[8];
        i0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: int getCount()>();
        $i2 = lengthof r1;
        r3[0] = 1;
        if $i2 >= i0 goto label1;

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getComponentType()>();
        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r7, i0);
        $r9 = (java.lang.Object[]) $r8;
        r1 = (java.lang.Object[]) $r9;
        r3[1] = 1;

     label1:
        i1 = 0;
        r4 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: java.util.Iterator iterator()>();
        r3[2] = 1;

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[3] = 1;
        if $z0 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $i3 = i1;
        i1 = i1 + 1;
        r1[$i3] = r5;
        r3[4] = 1;
        goto label2;

     label3:
        $i4 = lengthof r1;
        r3[5] = 1;
        if $i4 <= i0 goto label4;

        r1[i0] = null;
        r3[6] = 1;

     label4:
        r3[7] = 1;
        return r1;
    }

    public boolean remove(java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[9];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public boolean containsAll(java.util.Collection)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z0, $z1;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[10];
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
        r3[0] = 1;

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        $z1 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: boolean contains(java.lang.Object)>(r5);
        r3[2] = 1;
        if $z1 != 0 goto label2;

        r3[3] = 1;
        return 0;

     label2:
        r3[4] = 1;
        goto label1;

     label3:
        r3[5] = 1;
        return 1;
    }

    public boolean addAll(java.util.Collection)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[11];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public boolean removeAll(java.util.Collection)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[12];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public boolean retainAll(java.util.Collection)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.util.Collection;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[13];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public boolean add(java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[14];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        int i0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[15];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public void add(int, java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        int i0;
        java.lang.Object r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[16];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public java.lang.Object remove(int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        int i0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        i0 := @parameter0: int;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[17];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public int indexOf(java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.lang.Object r1, $r5, $r6;
        boolean[][] $r2;
        boolean[] r3;
        java.util.ListIterator r4;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[18];
        r4 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: java.util.ListIterator listIterator(int)>(0);
        r3[0] = 1;
        if r1 != null goto label2;

     label1:
        $z0 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        r3[1] = 1;
        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        r3[2] = 1;
        if $r5 != null goto label1;

        $i0 = interfaceinvoke r4.<java.util.ListIterator: int previousIndex()>();
        r3[3] = 1;
        return $i0;

     label2:
        $z1 = interfaceinvoke r4.<java.util.ListIterator: boolean hasNext()>();
        r3[4] = 1;
        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object next()>();
        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6);
        r3[5] = 1;
        if $z2 == 0 goto label2;

        $i1 = interfaceinvoke r4.<java.util.ListIterator: int previousIndex()>();
        r3[6] = 1;
        return $i1;

     label3:
        r3[7] = 1;
        return -1;
    }

    public int lastIndexOf(java.lang.Object)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        java.lang.Object r1, $r5, $r6;
        boolean[][] $r2;
        boolean[] r3;
        java.util.ListIterator r4;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        r1 := @parameter0: java.lang.Object;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[19];
        $i0 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: int getCount()>();
        r4 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: java.util.ListIterator listIterator(int)>($i0);
        r3[0] = 1;
        if r1 != null goto label2;

     label1:
        $z0 = interfaceinvoke r4.<java.util.ListIterator: boolean hasPrevious()>();
        r3[1] = 1;
        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object previous()>();
        r3[2] = 1;
        if $r5 != null goto label1;

        $i1 = interfaceinvoke r4.<java.util.ListIterator: int nextIndex()>();
        r3[3] = 1;
        return $i1;

     label2:
        $z1 = interfaceinvoke r4.<java.util.ListIterator: boolean hasPrevious()>();
        r3[4] = 1;
        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object previous()>();
        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6);
        r3[5] = 1;
        if $z2 == 0 goto label2;

        $i2 = interfaceinvoke r4.<java.util.ListIterator: int nextIndex()>();
        r3[6] = 1;
        return $i2;

     label3:
        r3[7] = 1;
        return -1;
    }

    public void clear()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[20];
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        r2[0] = 1;
        throw $r3;
    }

    public boolean addAll(int, java.util.Collection)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        int i0;
        java.util.Collection r1;
        boolean[][] $r2;
        boolean[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        i0 := @parameter0: int;
        r1 := @parameter1: java.util.Collection;
        $r2 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r3 = $r2[21];
        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        r3[0] = 1;
        throw $r4;
    }

    public java.util.Iterator iterator()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ListIterator $r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[22];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: java.util.ListIterator listIterator()>();
        r2[0] = 1;
        return $r3;
    }

    public java.util.ListIterator listIterator()
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        boolean[][] $r1;
        boolean[] r2;
        java.util.ListIterator $r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[23];
        $r3 = virtualinvoke r0.<net.htmlparser.jericho.nodoc.SequentialListSegment: java.util.ListIterator listIterator(int)>(0);
        r2[0] = 1;
        return $r3;
    }

    public java.util.List subList(int, int)
    {
        net.htmlparser.jericho.nodoc.SequentialListSegment r0;
        int i0, i1;
        boolean[][] $r1;
        boolean[] r2;
        net.htmlparser.jericho.nodoc.SequentialListSegment$SubList $r3;

        r0 := @this: net.htmlparser.jericho.nodoc.SequentialListSegment;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();

     label0:
        r2 = $r1[24];
        $r3 = new net.htmlparser.jericho.nodoc.SequentialListSegment$SubList;
        specialinvoke $r3.<net.htmlparser.jericho.nodoc.SequentialListSegment$SubList: void <init>(java.util.List,int,int)>(r0, i0, i1);
        r2[0] = 1;
        return $r3;
    }

    private static void <clinit>()
    {
        boolean[][] $r0;
        boolean[] r1;

        $r0 = staticinvoke <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRi()>();
        r1 = $r0[25];
        r1[0] = 1;
        return;
    }

    private static boolean[][] $VRi()
    {
        boolean[][] $r0;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        $r0 = newmultiarray (boolean)[26][];
        <net.htmlparser.jericho.nodoc.SequentialListSegment: boolean[][] $VRc> = $r0;
        $r1 = newarray (boolean)[1];
        $r0[0] = $r1;
        $r2 = newarray (boolean)[2];
        $r0[3] = $r2;
        $r3 = newarray (boolean)[1];
        $r0[4] = $r3;
        $r4 = newarray (boolean)[4];
        $r0[5] = $r4;
        $r5 = newarray (boolean)[4];
        $r0[6] = $r5;
        $r6 = newarray (boolean)[4];
        $r0[7] = $r6;
        $r7 = newarray (boolean)[8];
        $r0[8] = $r7;
        $r8 = newarray (boolean)[1];
        $r0[9] = $r8;
        $r9 = newarray (boolean)[6];
        $r0[10] = $r9;
        $r10 = newarray (boolean)[1];
        $r0[11] = $r10;
        $r11 = newarray (boolean)[1];
        $r0[12] = $r11;
        $r12 = newarray (boolean)[1];
        $r0[13] = $r12;
        $r13 = newarray (boolean)[1];
        $r0[14] = $r13;
        $r14 = newarray (boolean)[1];
        $r0[15] = $r14;
        $r15 = newarray (boolean)[1];
        $r0[16] = $r15;
        $r16 = newarray (boolean)[1];
        $r0[17] = $r16;
        $r17 = newarray (boolean)[8];
        $r0[18] = $r17;
        $r18 = newarray (boolean)[8];
        $r0[19] = $r18;
        $r19 = newarray (boolean)[1];
        $r0[20] = $r19;
        $r20 = newarray (boolean)[1];
        $r0[21] = $r20;
        $r21 = newarray (boolean)[1];
        $r0[22] = $r21;
        $r22 = newarray (boolean)[1];
        $r0[23] = $r22;
        $r23 = newarray (boolean)[1];
        $r0[24] = $r23;
        $r24 = newarray (boolean)[1];
        $r0[25] = $r24;
        staticinvoke <com.vladium.emma.rt.RT: void r(boolean[][],java.lang.String,long)>($r0, "net/htmlparser/jericho/nodoc/SequentialListSegment", 1589943887021075208L);
        return $r0;
    }
}
interface  net.htmlparser.jericho.package-info extends java.lang.Object
{
}
